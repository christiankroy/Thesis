%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: DscamAnatomy.eps
%%Creator: Adobe Illustrator(R) 15.1
%%For: Chris Roy
%%CreationDate: 2014-04-5
%%BoundingBox: 0 0 396 515
%%HiResBoundingBox: 0 0 395.6670 514.3340
%%CropBox: 0 0 395.6670 514.3340
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.1.0 x39 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 100 128 8%%BeginData: 11594 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDDDFFA8FD63FFA8A8FD1DFFAFFFA9FFA9FD40FFA8FD1DFFA9AF85%AFA9AF85AFAFFFAFFD3BFFA8A8FD1BFF85AFFD06FFA9FF85AF85AF85AFA9%FD36FFA8FD1BFFA9AFFD0CFFAFFFAFAF85AF85FD33FFA8A8FD17FFA9AF84%AFFD12FFA9AF85AFFD31FFA8FD13FFAFFFA9AFA9AFAFFD17FF85FD31FFA8%A8FD10FFAF85AF85AFA9FD1BFF85FD1FFFA8A8FFA8FFA8FFA8A8FFFFA8A8%A8FFFFFFA8FD11FF85FFFFAF7D7D84FD06FFCFC3FFCAFFCACFCAFD0CFFAF%AFFD1EFF5252277D5252527D527D52522752A8FFFFA8A8FD0FFF84FFFFA8%F827F8277DFD05FFC3BB99C299BB9AC3CAFD0BFF85AFFD25FFAFA8FD08FF%A8FD10FFAFFFFF7D272727207DFD06FFCAFFA8A9A8AFAFFD0CFFAFAFFD1E%FF52FD047DA853A8527D7D7D537D7DFFFFA8A8FD0FFF85AFFFFF5252277D%A8FD06FFAF84A8FFFF838B608484AFAEFD07FF85FD1FFF847DA87D7DA87D%84A853FD047DA8A8FFA8FD11FF85FD0CFFAF85FFC3FF843B5F833A181284%FD07FFAFAFFD2FFFA8A8FD10FFAFA9FD0BFFA98BFFC3A0837DA8A8A883FF%84FD07FF84FD30FFA8FD11FF85FD0DFFAF8BFFA8A8FFA8A8A8CBFFFF85FF%AFFFAFFF85FD31FFA8A8FD11FF84FD0DFFA9AFA7A8FD04FFA8A8A1A885AF%85AFA9FD32FFA8FD13FF85AFFD0CFF85FFA7A8A8FD05FFA7A8A8A8A1FD33%FFA8A8FD13FF848BA9FD0AFFAFA9FFA8CA7DA8A8FD04FFA1A8A8A1FD32FF%A8FD15FFAFAF85FD07FFAFAF85FD06FFCAA8A8A8FFA7FFFFA8A8A8FD30FF%A8A8FD16FFAF85AF85AF85AF85AF85FFFFFF7D52527D7C7D527652A8A8FF%A8A8FD31FFA8FD24FFCA7C7D7DA176A87DFD04A8FD33FFA8A8FD2DFFA8A8%FFFF7DFD30FFA8FD2FFFA7FFA1A8FD30FFA8A8FD2EFFA8A1A8FD82FFFD5D%A8FD0AFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FD1BFFA8A8FD62FFA8FD63FFA8A8FD09FFA8A8A8FFFFFFA8FFA8FF%FD07A8FFFD05A8FD16FFA87DA8FD29FFA8FD09FFA8A8FFA8A8FF7D522E52%52527D7D525352525253525952A8FD15FFA8A8FFA8FD29FFA8A8FD07FFA8%A8FFFFFFA8FFA8FD057DA859A87DA8527D7DA87D7DA8FD11FFA8FFA8A87D%FFA8A87DFFA8FFA8FD24FFA8FD08FFA8A8FFA8FFA8A8FD18FFA8FFFFFFA8%A9FD0BA8FFFD0BA8FFA8FFA8FD1BFFA8A8FD07FF7DFFA8A8FFFF7DFD17FF%FD07A8AF60A9A8FFAFFF84AFA9FF84FFA9AFA8FFFFFFA8AFA8FFFD07A8FD%18FFA8FD07FFA8FFFFFFA8FFFFA8A8FD17FFA8FD05FF6185FD041B618B1B%85611B1B8B1B1B1B611B3D1B1B158BFD04FFA8FD19FFA8A8FD06FFA8A8FF%A8A8FFFFA8A8FD16FFA8A8FD05FF8B61853C856185A98BA9AF606185AF60%6161FD04856185FFAFFFFFA8A8FD18FFA8FD07FFA8FFFFFFA8FFFFFFA8FD%17FFA8AF85AFAFFF85AFAFFFA9AFA9FD07FFAFAFA9AFFFAFA9AFFFFF85AF%A9FFA8FD19FFA8A8FD05FFA8A8FFFFA8A8FFFFA8A8FD16FFA88485FFA985%85FFFFAF85A9FFFF85FFFFFFA8A8A9AFFFFF8485A9FFA8AF85FFFFAF85A8%A8FD18FFA8FD07FFA8FFFFFFA8FFFFFFA8FD14FFA87DA884FFFFFF85AFFF%FFAFAFA9FFFFAFAFFFA87D7DFF85FFFFAF85FFFFFF85AFFFFFAFAFA8FD19%FFA8A8FD05FFA8FFFFFFA8A8FFFFFFA8A8FD13FF537DA8AF85AF85FFA9AF%85AFFFAF85AFA9FFFFFF537DA8AF85AF85FF85AF84FFA9AFA9AFAFA8A8FD%18FFA8FD06FFA8A8FFFFFFA8FFFFFFA8FD14FF7D7DFFA8AF85AFFFFF858B%AFFFAF8B85FFFFFFA8277DFFAF8B85FFFFAF85AFFFFF858BA9FFA8FD19FF%A8A8FD05FFA8FFFFFFA8A8FD04FF84FD13FF537DA8A884FFA98584FFAF85%A88BAFAF84FFFFFF277DFF85A8FF858584FF85AF84AFAF85A8A8A8FD18FF%A8FD06FFA8FD04FFA8FFFFFFA8A8FD13FF7D52FF84FFFFFF85AFFFFFA9AF%AFFFFFAFAFFFA8277DFF85FFFFFF61FFFFFF85AFFFFFAFAFA8FD19FFA8A8%FD05FFA8FFFFFFA8A8FD04FFA8FD13FF527DA8A884FFA9AF85FFAF85A9AF%AFAF85FFFF7D2E7DFF85A9FF85AF85FF85AF85AFFF85A9A8A8FD18FFA8FD%05FFA8A8FD04FFA8FD04FFA8FD12FFA82752A8A8AF3D8BFFFF6161AFFFA9%6161FFFFFFA8A87DFFFF8561FFFF8B3DAFFFFF8561A9FFA8FD0AFF525252%7D597D527D7DAFFD05FFA8A8FD05FFA8FFFFFFA8A8FD04FFA8FD13FF7DA8%A8A985FF84AF85AFA9AFA985A9FF85FFFFFF527EAF8BA9FF84AF85FF84AF%85AFAF8BA9A8A8FD09FFA87D7D7DA87D7E7DA8A8FD05FFA8FD05FFA8A9FD%04FFA8FD04FFA8FD13FFA87DFF84FFFFFF85AFFFFFAF8BA9FFFFAFAFFFFF%5259FFA9FFFFFF61FFFFFF85AFFFFFFFAFA8FD0CFFA8FFFFFFA8FD08FFA8%A8FD05FFA8FFFFFFA8A8FD04FFA8FD13FF5252A8A985FFA9AF85AFA9AFA9%85A9FF85FFFFFF52A8AF8BA9FF85AFA9FF85AF85AFAFAFA9A8A8FD09FF7D%527D52FD047DFD07FFA8FD06FFA8FD04FFA8FD04FFA8FD13FFA87DFFA8AF%618BFFFF8585AFFFAF8585FFFFFFA8527DFFFF8B85FFFFAF61AFFFFF8585%A9FFA8FD0AFFA8FFA8FFA8FFA8FD08FFA8A8FD05FFA8FFFFFFA8A8FD04FF%A8FD13FF527DA8A884AF85AF84AFA9A9A9AFA9AF84FFFFFF52A8FFAF84AF%85AF84AF85FFA8AFA985A9A8A8FD09FFA852A8527D7DA87DA87D7DFD04FF%A8FD06FFA8FD04FFA8FD04FFA9FD13FF7D7DFF84FFFFFF85AFFFFFA9AFAF%FFFFAFAFFFFF527DFF85FFFFAF61FFFFFF85AFFFFFAFAFA8FD0AFF7D7D7D%A87D7D7D7E7DA859FD04FFA8A8FD05FFA8FFFFFFA8A8FD04FFA8FD13FF52%7DA8A885FFAF8584FFFFAF85AFFFFF85FFFFFF277EAF85AFFF8585A9FFA9%AF85FFFFAF85A8A8FD09FFA87DA87DA87DA8A87D597DFD04FFA8FD05FFA8%A8FD04FFA8FD04FFA8A8FD06FFFD0AA8FFA85252FFA8AFA9AFFFFF85AFAF%FFA9AFA9FFFFFFA8527DFFAFAF85FFFFAF85AFFFFF85AFA9FFA8FD0AFF7E%A87D847D7D7DA8527D7DFD04FFA8A8FD05FFA8FFFFFFA8A8FD04FFA8FD07%FFA8FFA8FFA8FFA8FFA8FFFFFF7DA8A8AFA98584FFFF8584FFFFFF84AFFD%04FF7DFFFFFF8585A9FFA985A8FFFFAF84AFFFA8A8FD0AFFA8FFFFFFA8FD%09FFA8FD05FFA8A8FFA1A8FFA8FD04FFA8A8FD15FFA8AFFFAF85AFAFFF85%FF85FFAFAFFD06FF85FFAFAF85AFFFAFAFAFA9FF85FFA8FD0AFF7D7D7D52%7D5252FD08FFA8A8FD05FFA8FF27A8A8A8FD04FFA8FD15FFA885AFFFFF85%85FFFFAF85AFFFFF85FD05FFA9AFFFFFA985FFFFAF8B85FFFFFF85A8A8FD%0CFFA8FD0BFFA8FD06FFA8A827A8FFA8FD04FFA8FD16FF84AFFFAF85AFAF%FF85FF85FFAFAFFD06FF85FFFFAF85AFFFAFA9AFAFFF85FFA8FD19FFA8A8%FD05FFA8FFF8A8FFA8FD04FFA8FD15FFA8A8846161FFA96160AFFFFF6061%A9FD07FF6061A9FF846185FFFF853CAFFFA8A8FD18FFA8FD06FFA8FF27A1%FF7DFFFFFFA8AFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFAFFFA8FFFFFFA8%AFFFAF85AFAFFF85FF85FFAFAFFD06FF85FFFFAFA9AFFFFD04AFFF85FFA8%FD19FFA8A8FD05FFA8FF2752F877FD04FFA8FF7EA8A2A9A8A8A2CBA8A277%A9A8FFA2A8A8A9A2FFA884A9FFFF8585FFFFAF84AFFFFF85FD05FFA9AFFF%FFA961FFFFFF8585FFFFFF85A8A8FD18FFA8FD05FFA8A8A827277DA8FD04%FFA8A89C777777A277A27EA2777771A2A27771A277A2A8FFA8AFFFAF85AF%AFFF85FF85FFAF8BFD06FF85FFAFAF85AFFFAFAFAFA9FF85AFA8FD19FFA8%A8FFFFFF7D7D2727F852FFA8FD04FFA8A8A8FFA8FFA8C3A1CAA8CAA8C3A1%FFA8CBA8FFA8A87DA884845AAFA8845AA8A8FF6085AFFD07FF6185A8FF85%8584FFFF8560AFFFA8A8FD18FFA8FD04FF527D52A87D277DA8FFFFFFA8FF%A8FD05FFC2C2BBC2BBC2A0A7A8FD07FF7E85A9AFA9AF85AF84FF85FFA9AF%FD06FFA9AFA9FD05AFFFAF85FF85FFA8FD19FFA8A8FFFFFF7D7DA8FF52A8%27A8FFFFFFA8A8AFA8FFFFAFA9FF84A8A8CFCAAF7EA27EFFFFFFA8FFA884%A9FFFF8585FFFFAF84AFFFFF85FD05FFA9AFFFFFA985AFFFA9AF85FFFFFF%85A8A8FD18FFA8FD07FFA87D7D527DFFFFFFA8FFA8FFFFFF85AF61AF84A8%FFFF85A9A885AFFD05FF7EAFFFFF85AFFFFF84A985FFFFAFFD06FF85FFFF%AF85FFFFAF85AFAFFF85AFA8FD19FFA8A8FD05FFA8A87D5276A8FFFFA8A8%FFFFA8FFA8AF3684A9A87D8584AF146184AF85FFA8FFA8A884AF85FFA88B%85A9A8AF8585A8FD06FFAF84AFA9FF84AF85FFA98B85AFFFA8A8FD18FFA8%FD07FFA8FFFFFFA8FFFFFFA8FFA8FFFFAF858B85FFA8A9A9FFA9AF858B85%AFFD04FF7DFFA8FFA8FFA8AFA8FD19FFA8FD19FFA8A8FD06FFA8A8FFA8A8%FFFFA8FFFFFFA8FFFFAFA9FF60AFFFFFFF8BA985A9AFFFFFA8AF7DA8A8FF%A8FD1BFFA8FFA8A8A8FD18FFA8FD07FFAFA8FFFFA8FFFFA8FFFFA8FFA8FF%A8FFA8AFA8FFA8FF84AFA8FFA8FFA8A8A8FFFD0BA8FD0BFFA8FFFD0BA8FD%19FFA8A8FD07FF7DFFA8A8FFAF7DFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FD09FFA8FFA8FFA8A87EA8A87D7DA8A8A87DFD06A8FFA8FFA8FD%1EFFA8FD09FFA8FFFFFFA8FD27FFA8FD04FFA8FD28FFA8A8FD08FF7DA8FF%A87DFFFFA87DFD04A859A8FFFFA8FFA8A8A8FFA8FD15FF7DFFFFA87DFD28%FFA8FD09FFFD05A8FFFFFF5252277E7D52527D275227525259527DFD15FF%A87DA87DA8FD28FFA8A8FD0FFFA8A87D7D7E7DA8A8FD057DA87D7D7DFD17%FFA8FD2AFFA8FD63FFA8A8FD62FFA8FD63FFA8A8FDB3FFFD5DA8FD0AFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD1C%FFA8FD62FFA8FD63FFA8A8FD11FFA8FD05FFA8FD4AFFA8FD13FFA8FFFFFF%A8A8A7CAFFFFA8A8FD0CFFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FD21FFA8A8FD13FF7DA8A1A7A1A7A1A8A8A7A8FD07FFA8FFA8A8%A8FFA8A87DFFA8A8A8FFFD04A87DAF7EA8A8FFA8FFFFA8A8FD20FFA8FD14%FFCFA1CAA7CAA7CAA7A7A8FD07FFA8FFA9FD05FF527D525252A87D7D7D7E%7D52527D52FD05FFA8FD21FFA8A8FD0DFFA8FD05FFA8A7A1A8A7A7A1CAA7%A8FFFFA8A8A8FFA8FD07FFA8A87DFD06A8FFA8FFA8FFA8A8FD05FFA8A8FD%20FFA8FD0DFFCACFA8CFA8FFFFA8A7CAA7A8A1A8A1A87DA8A8FD0DFF5252%527D7D7D527DFD0CFFA8FD21FFA8A8FD0FFFA8FFFFCAA17D52A77DA77C52%7DA7A8FD0DFFA8FFA8A8A8FFA8FFA8FFFFFFA8FD04FF7D52527DFFA8FD20%FFA8FD13FFA8CAA77D7DA7A17D7DA8A7A8FD0FFFA8A2FFFFFFA8FFCBFFFF%FFA8FFFFA8272720277DFD21FFA8A8FD0DFFA8FFA8FFA8A7A1CAA17D7DA7%7CA77DA8A1A8FD0CFFA8FF777777A2777771A277A8FFA8A8FFA852F82752%A8FD21FFA8FD0FFFA8FFFFFFA7CAA7CAA1A77DA7A7A1A1CAA8FD10FFCBA8%FFFFFFAFFFFFFFA8A8FFFFFFA8FFFFA8FD11FFA87DA9A8A8A8FFA8FFA8FD%06FFA8A8FD11FFA8A7A1A7A1A8A1A77DA77DA17DA7FD0CFFA8FFFFFFC3BC%9AC3A0C39AC3CFFF7DFFFFA8A8FFFFA8A8FD10FF7D527D7D527D7D7D527D%A8FD05FFA8FD12FFCAA7CAA7CAA7CAA7CAA7CAA7CAA1A8A8FD0EFFCAC3C3%C2C3C2C9CAFFA8A8A8FF84FFFFFFA8FD11FFA87DA87DA8A8FFA8FD08FFA8%A8FD11FFA1C9A7A7A1CAA7A7A1CAA7A7A1CAA8FFA8FD09FFA8FD0BFFA8CB%A1A8A8A8FFFFFFA8A8FD10FF7D527D7D52A8FD0AFFA8FD12FFA8A7CAA7CA%A7CAA7CAA7CAA7CAA7FFFFFFA8AFA8FD13FFCAFF7EA8FD04FFA8FD12FFA8%FFFFA8FD0BFFA8A8FD10FFCFA1A7A1CAA7A7A1CAA7A7A1CAA7A7A8FD05FF%A8A8A8FFFFFFA8FD09FFA8A8A1A7A87D7EFD05FFA8FD10FF7D7D7DA87EA8%7D7DA8FD07FFA8FD11FFA8CAA7CAA7CAA7CAA7CAA7CAA7CAA7CFFD08FFA8%FD17FFA8FD11FFA87D7D7DA87DA87DA8FD07FFA8A8FD10FFCAA1A7A1CAA7%A7A1CAA7A7A1CAA7A7A7FD09FFA8A87DFFA8A8A8FFA8A8A8FFA8FFA8FFA8%AFA8FFA8A9A8A8A8FD12FFA8FFA8FFA8FFFFFFA8FD05FFA8FD11FFA8CAA7%CAA7CAA7CAA7CAA7CAA7CAA7CAFD20FFA9FD11FFA852A8FD05527D525252%7DFFFFFFA8A8FD10FFA8A1C9A7A7A1CAA7A7A1CAA7A7A1A7A7FD38FFA8FF%A8FFFFFF84FFFFFFA8FD11FFA8CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAFD32%FFA87D7D527DA9FD0AFFA8A8FD10FFA8A1CAA7A7A1CAA7A7A1CAA7A7A1C9%A7FD32FFA8A87D7D7DFD0BFFA8FD11FFA8A7A7CAA7CAA7CAA7CAA7CAA7CA%A7CAFD32FFA87D7D52A87D7DA8FD08FFA8A8FD10FFCAA1A7A1CAA7A7A1CA%A7A7A1CAA7A7A1FD32FFA8A8A8FF7D7D7DA8FD08FFA8FD11FFA8CAA7CAA7%CAA7CAA7CAA7CAA7CAA7CAFD42FFA8A8FD10FFCFA1A7A1CAA7A7A1CAA7A7%A1CAA7A7A7FD42FFA8FD11FFA8CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAFD42%FFA8A8FD11FFA1A7A7A7A1CAA7A7A1CAA7A7A1A7A8FD42FFA8FD12FFCAA7%CAA7CAA7CAA7CAA7CAA7CAA7FD43FFA8A8FD11FFA1C9A7A7A1CAA7A7A1CA%A7A7A1A8A9FD42FFA8FD12FFA8A7CAA7CAA7CAA7CAA7CAA7CAA7FD43FFA8%A8FD11FFA8A7A1CAA7A7A1CAA7A7A1C9A1A8FD43FFA8FD13FFA7CAA7CAA7%CAA7CAA7CAA7A8A8FD43FFA8A8FD12FFA8A1CAA7A7A1CAA7A7A1C9A7FD44%FFA8FD13FFA8A7A7CAA7CAA7CAA7CAA1FD45FFA8A8FD13FFA1A7A1CAA7A7%A1CAA1A8A8FD44FFA8FD15FFA1CAA7CAA7CAA7A8A8FD45FFA8A8FD14FFA8%A1C9A7A7A1A8A8FD46FFA8FD17FFA7CAA7A8A8FD47FFA8A8FD17FFA1A8A8%FD48FFA8FDFCFFFD7DFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">DscamAnatomy</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2014-04-05T20:47:44-04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-04-05T20:47:44-04:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-04-05T20:47:44-04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5.1</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>200</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADIAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYqhY7t31&#xA;W4syBwhggmVu5MryqQfl6QxVFYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FUug/5SO+/wCYO0/5O3OKpjirsVdirsVdiqyaaGGNpZnWONd2dyFUfMnDGJJoMZSERZNB&#xA;APOdTkENrIwsV3uLuJinM9o4nFDTuzqdugNa8bxHwxcvq6D9J/QD/bimfjHhifR1kNr8on75DlyG&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:7E5C34563F2068118C149AA0EBC2798A</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:7E5C34563F2068118C149AA0EBC2798A</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:c3667a37-d0d6-c84f-b721-18013a87630c</stRef:instanceID>
            <stRef:documentID>xmp.did:FF7F1174072068118C14BB3BB4EBF54E</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D27F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:15+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T16:23:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T17:10:45-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF7F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T22:53:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T23:07:07-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:35:43-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:40:59-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:26:55-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:20-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:30:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:31:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B233668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:23:46-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B333668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:27:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B433668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:46:13-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:47:57-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:51:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:52:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T13:28:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T16:23:53-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07C3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T16:45:26-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F1174072068119098B097FDA39BEF</stEvt:instanceID>
                  <stEvt:when>2008-06-02T13:25:25-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T14:58:36-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:31:27-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811834383CD3A8D2303</stEvt:instanceID>
                  <stEvt:when>2008-06-11T22:37:35-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811818C85DF6A1A75C3</stEvt:instanceID>
                  <stEvt:when>2008-06-27T14:40:42-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068118F62C262592E568B</stEvt:instanceID>
                  <stEvt:when>2012-01-04T09:22:07-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118F62C262592E568B</stEvt:instanceID>
                  <stEvt:when>2012-01-04T09:22:18-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:06801174072068118C14F3235FA19F7F</stEvt:instanceID>
                  <stEvt:when>2014-03-26T20:33:25-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07801174072068118C14F3235FA19F7F</stEvt:instanceID>
                  <stEvt:when>2014-03-26T20:33:35-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:08801174072068118C14F3235FA19F7F</stEvt:instanceID>
                  <stEvt:when>2014-03-26T20:35:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F1174072068118C14BB3BB4EBF54E</stEvt:instanceID>
                  <stEvt:when>2014-03-27T12:16:54-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F1174072068118C14BB3BB4EBF54E</stEvt:instanceID>
                  <stEvt:when>2014-03-27T12:53:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F1174072068118C14BB3BB4EBF54E</stEvt:instanceID>
                  <stEvt:when>2014-03-27T12:54:18-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7E5C34563F2068118C149AA0EBC2798A</stEvt:instanceID>
                  <stEvt:when>2014-04-05T20:47:44-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>395.666992</stDim:w>
            <stDim:h>514.333984</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>HelveticaNeue</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica Neue</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>8.0d6e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>HelveticaNeue.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -514.334 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 514.334 li
395.667 514.334 li
395.667 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 514.334 mo
395.667 514.334 li
395.667 0 li
0 0 li
0 514.334 li
clp
gsave
0 0 mo
395.667 0 li
395.667 514.334 li
0 514.334 li
0 0 li
clp
gsave
143 382.944 mo
162.192 382.944 li
162.192 372.24 li
143 372.24 li
143 382.944 li
clp
gsave
151.28 379.096 mo
143.624 379.096 li
143.624 373.384 li
151.28 373.384 li
151.28 379.096 li
clp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 .200784 cmyk
%ADOBeginSubsetFont: HelveticaNeue Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /HelveticaNeue def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 66 /B putdup 114 /r putdef/FontBBox {-951 -481 1446 1077} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B7A73DB69766C728F992B45CDEFDE836A03F03808DEA1F562730C87541D1DACD> |-/B <1C60D8A8C9B620B7F30120D77E6D1DEEB702625C217D9FD2EF8F935A91E0710EC795439CEE068523F9441ADAD7136CF6C94AC238D0E32C2A55259426386008D2D2D9DC469892AC55EB4139B732521898438EF59C6F81BA5322CFD97A7E55FF8D0B73942999B91CBD84A9B4864D7E6EB1337B0F1FF485E0F3E7AB554382985B41CBE193914226C44F0A041326ADEE636F92991AA36960A0AD1A00887B4FEEEE7A29D290F98B2FB7C5A00A58157954CE7F148E041C16DC4164B592A6DC826C2194463678EBB615C423182AA552A36C586B5611E1B7B94C2918987FF33A458E9408DCA4667CC0> |-/r <1C60D8A8C9B81F2C3A9A44CEFFCAE2B5B722C19E625B807D4F857B444383631BDC722B031B7D18A27CB4F561CDC7869F3EE923C7D65D3D994DE91855248F92102B302065D5EB4599> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GQKSMV+HelveticaNeue /HelveticaNeue findfont ct_VMDictPut/GQKSMV+HelveticaNeue*1 [66{/.notdef}rp /B 47{/.notdef}rp /r 141{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf143 379.095 mo(Br)[5.61621 0 ]xshgrestore
gsave
155.592 379.184 mo
151.704 379.184 li
151.704 374.863 li
155.592 374.863 li
155.592 379.184 li
clp
false sop
0 0 0 .200784 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMV+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/a <1C60D8A8C9B78256DD1AA79B6E96B03E77EADE6FF0A6D5505B6476A0AEF13AFACC9B9C8107B755C96D4F2B6E7E4B814B70964F745A892BC2F7DBFD243A80BF261760C9115B3944A3DA63A020A1AC36E19994149E7CE1B81ADBD95B3735B8B753C51EA80398564C8D7E879660069158F6495BCE5C1CC6F9940CB3DD2B8B23F910189F52BDAE4D25F8EB2F4BA6F1E6AD2095AB8B6D03B0775D8BC8855AA1504E5A7E5B439B95621696C1C488B653996DDD18B169E460146B238E345F90A764D9FE3365CCE5645836155E954C349F53190EFFDB827467125C7F5A3C5C60D1FBE8F22BBB8C97BE208DFD9DC4E5F6D263D8673965AF624CC2B44D231FB29D854E8BA6BDF51C75F50BD9580344B6256F49927DBEC126269CA38BF3AEA7EAFC1130171EAB68FAF23EC73F45ED90287F5F700E3446D017248495E4F4341F88DDC2D8678D90B36E81C0D293EF71C1EB3B674292620537318BBB1B0E97C39B96F9AC815A7DF2153FC96D5B493F9A7D151B6F> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMV+HelveticaNeue /Encoding getdup 97 /a putpop%ADOEndSubsetFont
/GQKSMV+HelveticaNeue*1 [66{/.notdef}rp /B 30{/.notdef}rp /a 16{/.notdef}rp /r 141{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf151.416 379.095 mo(a)shgrestore
gsave
157.088 379.096 mo
156.408 379.096 li
156.408 373.384 li
157.088 373.384 li
157.088 379.096 li
clp
false sop
0 0 0 .200784 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMV+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/i <1C60D8A8C9B88C08555B3F0CC9C107C8E85C213909EEB355601DF6E16718C8> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMV+HelveticaNeue /Encoding getdup 105 /i putpop%ADOEndSubsetFont
/GQKSMV+HelveticaNeue*1 [66{/.notdef}rp /B 30{/.notdef}rp /a 7{/.notdef}rp /i 8{/.notdef}rp /r 141{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf155.856 379.095 mo(i)shgrestore
gsave
161.672 379.096 mo
158.248 379.096 li
158.248 374.863 li
161.672 374.863 li
161.672 379.096 li
clp
false sop
0 0 0 .200784 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMV+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/n <1C60D8A8C9B7EF322B311F684FFCE372DC830C5B5622CF8CC481131E62D787051C7F6F8AFE4E0678E980DEFED9D3B42136CA31D6B181415CC612E43F129CA0C6B7129B72601C197C1289FE3B0E87810C0E52F39D3150ED1541E70F1FAC5E47A3847D5C5288BFD9C72CA7FDA1DA3E70FC> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMV+HelveticaNeue /Encoding getdup 110 /n putpop%ADOEndSubsetFont
/GQKSMV+HelveticaNeue*1 [66{/.notdef}rp /B 30{/.notdef}rp /a 7{/.notdef}rp /i 4{/.notdef}rp /n 3{/.notdef}rp /r 141{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf157.736 379.095 mo(n)shgrestore
grestore
gsave
143 369.361 mo
161.919 369.361 li
161.919 358.657 li
143 358.657 li
143 369.361 li
clp
gsave
147.88 365.513 mo
143.624 365.513 li
143.624 359.801 li
147.88 359.801 li
147.88 365.513 li
clp
false sop
.125982 .200784 .326767 0 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMV+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/P <1C60D8A8C9B67DB58874415D94C2E559C88E36CC055437F3DF216575C839AACCA6EDB9DE2233509536944435A6A5FF417152CE02855876750F1D682335EEC3E41C9ED4B523CEEEE05D751D6FA45C4F6D05E3066B38F21D39CF4DAF8C04DD> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMV+HelveticaNeue /Encoding getdup 80 /P putpop%ADOEndSubsetFont
/GQKSMV+HelveticaNeue*1 [66{/.notdef}rp /B 13{/.notdef}rp /P 16{/.notdef}rp /a 7{/.notdef}rp /i 4{/.notdef}rp /n 3{/.notdef}rp /r 141{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf143 365.512 mo(P)shgrestore
gsave
152.144 365.601 mo
148.72 365.601 li
148.72 361.377 li
152.144 361.377 li
152.144 365.601 li
clp
false sop
.125982 .200784 .326767 0 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMV+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/u <1C60D8A8C9B7EF322440D101B9C5BDB658AC9990163C1DE216301D6A78F7E75DE20D48E148DE5D0B10EDCFF1F56F3D9DFED7E3EA1166FDE58BF5A95F3934CB8D172597F9074D97457D8256FE204274315A9853C456013DFC9C30B22C57D3DD5E6E54038141F8007BF38045054A25F79544E8DF7208> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMV+HelveticaNeue /Encoding getdup 117 /u putpop%ADOEndSubsetFont
/GQKSMV+HelveticaNeue*1 [66{/.notdef}rp /B 13{/.notdef}rp /P 16{/.notdef}rp /a 7{/.notdef}rp /i 4{/.notdef}rp /n 3{/.notdef}rp /r 2{/.notdef}rp /u 138{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf148.208 365.512 mo(u)shgrestore
gsave
157.216 367.089 mo
153.296 367.089 li
153.296 361.281 li
157.216 361.281 li
157.216 367.089 li
clp
false sop
.125982 .200784 .326767 0 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMV+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/p <1C60D8A8C9B7CA642A857E43B6E4584C21053D20464CD900CD9FAC314FFFF57B29E654571390EB20E46B7B48BB4AFE15157A1CE094B6FF462457B10AE9964D7A692D9B23249B54E98BB36FE18513C4E36124EE91E8B55E0D32F87793F9BE4B91CF07577AD6B1D404AAE3A88A4BEF896F462E4ACBCC0D5DA06B2EBCCC22792F58753666AB72F6C0F48104C745CE06B90FA6FECCB3A7C2A512102AC3FAB9143D8756393E66D37DCB1849D10BFE85B4757E9DB634D20E735C4DA1388EDE7F62254793AA9AEE6F6333E1CD0C532177362FACB6E0BE0F0AF66D33E6D9BDA8C896BA2F385679C44BD75AB95077ACF0FBEACEBAE1202AAB81> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMV+HelveticaNeue /Encoding getdup 112 /p putpop%ADOEndSubsetFont
/GQKSMV+HelveticaNeue*1 [66{/.notdef}rp /B 13{/.notdef}rp /P 16{/.notdef}rp /a 7{/.notdef}rp /i 4{/.notdef}rp /n /.notdef /p /.notdef /r 2{/.notdef}rp /u 138{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf152.76 365.512 mo(p)shgrestore
gsave
161.792 365.601 mo
157.904 365.601 li
157.904 361.281 li
161.792 361.281 li
161.792 365.601 li
clp
false sop
.125982 .200784 .326767 0 cmyk
GQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf157.616 365.512 mo(a)shgrestore
grestore
grestore
10.3335 328.5 mo
378.479 328.5 li
378.479 327.5 li
10.3335 327.5 li
false sop
0 0 0 1 cmyk
f
10.3335 111.5 mo
378.479 111.5 li
378.479 110.5 li
10.3335 110.5 li
f
88.1406 503.278 mo
88.1406 336.611 li
88.1406 503.278 li
cp
0 0 0 0 cmyk
f
87.6406 336.611 mo
87.6406 503.278 li
88.6406 503.278 li
88.6406 336.611 li
0 0 0 1 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMV+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/M <1C60D8A8C9B69A176219A01250C7EA2D701C37B963BD6632B98EF7CF81DE700912E41ACE3B8720F8AAD99EFC7EF6FD978C2016D91A029015D7F660E6> |-/N <1C60D8A8C9B6079F62EC3E4F2BCB53C58C5901674E014053D1B07FD718460ADB03ADEDF1E7C7BBA86E2EBA052A2038> |-/d <1C60D8A8C9B7CA642AB5CCFFBCBE446607BF45444797C5129AD75C694597C0629AB24E9D54F936C16BE3D25CEA1B8C96881ECFDC60B54236C9EC2FA30DA2A848A4CBD37893E1F8056DD3D8F4E5A5D50258DF41ED55CD2290EB5E498577916ED80F4FA5E4334DFE9F6809FADC5C0C40C6A401244D172FFF645E3FFF16A6C1094A4ED1826F3037EA86B64A0380C8B3E3229F349226214FDF5E286B75FB471FB9C2CD502C2219A5BB1B135C46A2C2BE44B969A462B8AB31BD353D37BE3C3C7080EAE8E54A6B7465DCDE55846A7689FA6A8296E41948930065D5B640E4496541971418DA22DBA1100ADCA9406D6F37305465E596699F7A> |-/e <1C60D8A8C9B78256DD55438017BC8C1833CE266A01A5BDCA1B9E966A1AD681838D6CA45F44E08AD46E17D686288D23390B2FFF6378472ABC69E374A8B6ECB2A52EA29263AFEB4E06DEA16052EA24A1400E2DF2276D2E8A45445FDD018FF05A2C8F08BE043D78D9C3FF8D67946FFB6ED6FABF052655B4BF4DBDD6E8C1E3FCFA055088CA6071FC379A1CF225CE66EE3C231FBB0FAEDF30BB250911BC9FE90F7DE212622E1297D593A829F344F788CA5B330F3559D2E33FB2EFAC5B38F4C75E3F0FF8F9AB8251282F4E9ED2B8D5F76F3259AF9F7CA6A537CEB7170E211C3C4C514E> |-/h <1C60D8A8C9B7EF322B3C3F3F21044A9FB99BA13EAE1C2C34C29E7AEFCF85896CB222A9E2E462E0E0EF9E1459C34491C3635B4F81DCAC33B3CC47C54DD9513944C59C7E1D8863AB1590AAA126A1BF7CF76466CCB47431302FBB36367021A54497B008F2CBFCE4F87B789E3710B9E14C99ED235DE7F95A088383DE818CAFFC46D95433ACC38BD4> |-/m <1C60D8A8C9B6889AAB3FDFDCB8C7A7D4A445E72A6050547E3926FD5EF288CA98CBCE73BD6F51BD8BF77C15E93641E82F5FBA14322965E5F6D81A4346526A3A1BECA76E268C8FE3D1A76E8FCF70B9F3D9BBE79361A40E85058ED9D209065D2BA116AF30A8A9294941853304D630ECD80D50338AF92C33CA5A86089BC3A675BE5255469C0261FC17E304AD4871EC7D0C588F6D20F8D311D5E6B56770EA483EDEB3A414A9F873D9B06A4DDE3FA472A91892F8707248B10279ED4753FAFA79F58F24457691EAC3AA3568D8C5440F> |-/o <1C60D8A8C9B7FD849A41D15A513197C7FBD61B6F7FFCAC3AF3E97AC59087245F09701F75E50338558BB40AA9680A2FBD1EAE25AE04491DB1C148A07BBF7B8B2FC83A811B9F5493B2A0F2D79BE2ADCDBA13E2B19DD819B8D5A15937446D8F358692DC5FAB8E88C19B1533D50FF00A7803A38C9128B8EC16408B839CC48067B9ED6B4A3117F3C447EC07CDF75A5742341E297006EE8A172AE85B4C2C86A95A30C1C97E6432A14DD7AB146A08EF57B3F2578CC5ED7C800F9538F93029A11370A11A675530BB39260BAF32B1B7C0D93D402CF73D54D64C2CF3F082E9F79B4662EF26FA2BCB25FE481D961CEE5EA35FDF563D67AB6E8F> |-/s <1C60D8A8C9B7A73DB93069DBC6375B57C8CEA5298ECD155D330F5DEADB84BCE0F3B9931445A3E0A23408E166E94ED9B84A4F77C41F0369937E8C2C9831D0AAA0C414A32B88A399DE991143E3662049761DB0B0648AFDE42A4B3062552586F0EBBA0F2E7BF3A4DFA292E6EBB84128A6A9679FD085A8A3EE7D119B409E196F8DD013E73279FEB2FAD41E214F19FAE59B2DE112620184CF1FA5F8444A4C3EBCD7B771E48653A08D11A41EDDC944A6794EED345CDB91C69F6C018931F290C225B8C2B7916D95BB63059EE22EE396098AC463522A22CE66834854EDE7E984119074789DC9CD95809278277DFC5F487D01C620166BB029D76936EA500E2DBA569CE0343EEFE105A4474A80777509B8E0D1BF6BCA9D29EA70910F3731811C708532E5A8C24D816BA3F135B8B9EBA4D9360824E69CC0DC3D45097EC5A74ECA5FEECBEEBDE4BFBA7F33D81257F3182B67A858EF8443FF7D0CE5> |-/y <1C60D8A8C9B7A73DB9A768D4DE1B8D033D4F7C563492C8A327101232088D507937FF5600A36C7A42C1CE1C7FCDC89BE897F465E05DD52CDFE7355348374B782682DB87301A384A03DB070153A4F68D0E62C089E4C47F4748C6E0F5295766246C7C05B27061C85149A2902C18C39FFC54AE9ECC91> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMV+HelveticaNeue /Encoding getdup 32 /space putdup 77 /M putdup 78 /N putdup 100 /d putdup 101 /e putdup 104 /h putdup 109 /m putdup 111 /o putdup 115 /s putdup 121 /y putpop%ADOEndSubsetFont
/GQKSMV+HelveticaNeue*1 [32{/.notdef}rp /space 33{/.notdef}rp /B 10{/.notdef}rp /M /N /.notdef /P 16{/.notdef}rp /a 2{/.notdef}rp /d /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n /o /p /.notdef /r /s /.notdef /u 3{/.notdef}rp /y 134{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf269.577 356.831 mo(M)sh276.641 356.831 mo(u)sh281.225 356.831 mo(s)sh285.369 356.831 mo(h)sh289.929 356.831 mo(r)sh292.697 356.831 mo(o)sh297.425 356.831 mo(o)sh302.145 356.831 mo(m )[6.82422 0 ]xsh311.192 356.831 mo(B)sh316.793 356.831 mo(o)sh321.513 356.831 mo(d)sh326.377 356.831 mo(y)sh269.577 366.431 mo(N)sh275.481 366.431 mo(e)sh279.929 366.431 mo(u)sh284.497 366.431 mo(r)sh287.265 366.431 mo(o)sh291.984 366.431 mo(n)sh296.553 366.431 mo(s)sh.5 1 0 0 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMV+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B81F2C3A4864C06E4CFD01869C53CC11FA099954D939> |-/A <1C60D8A8C9B67DB5878EE221F210438E2D1F518277932B525F370D850642FD46B0F79A79CF11337DC6AEE53D885E0E1A7DF59B4B5DCF38DE8A6C> |-/R <1C60D8A8C9B620B7FC729AF8F4061A1A450A8D3AD24E1257006308FC1D758B7163CE246A589C3C1FF42BF41C53E72A1D845E2C5B56C92E17410DDB3044FB434DE2CD131B44CC49542E89790E077569AAE7DFE8E8291AFE90275C34A2942D76E09B43AFCC0B1D219F8A30BA7721EAEC249BB363718B24B1F64BEFB784F0EC2C4BEF6738250802A28FD9247B8540CB43AE353032E39962A446CF2BCB9B8465C455DDDF1AE16191C618FA995497D543D03F085D9079AF4264BD36FF070924F7FC68F721E9BD259D08A0D1E3D48EF33AD4ED9C3BB2C7BA2CD9E84E1F04E58C601E31743C68> |-/c <1C60D8A8C9B78256DD72E59F8D9EE3DA4C3A3D2C848028DFC44C2D7B28374D45276541C9B192FADB296DC40B35992C7F5DCFFD2AD8C20286A661A838F0FF848A5B590ED3544893F482AA00380CFEBB3F71CA4DDE96092132A8333355ADFC12D4AA1A68870C56C09C2DA680A9433A1DA80A9131F388EC47284850BF5BE2E71F4A6AA01921CCB344F4703453FA574C9F5F304B61147AC2FFE6D5A3AE79E389CF45C56EC750C5100A8E919AB8B3DC57C23D01902AFC1FAC089A7D9DD67123B38E49707F6731D8B46DE7BB> |-/l <1C60D8A8C9B88C087228DE33F4F68C5654F20641D38FAA> |-/t <1C60D8A8C9B831A983F3E33337748713E88A1E5224168E0F67E7570999394DC65B3C1F9E93E779E823D948B9BA81E8D28F7AA76A84CA0D8886E947D6DA351FC6D6DA2491F91E4DCFCC3CFCAB956E68A2E9A2422BEE8CAB716B00E0C2DA95565D6409476535> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMV+HelveticaNeue /Encoding getdup 47 /slash putdup 65 /A putdup 82 /R putdup 99 /c putdup 108 /l putdup 116 /t putpop%ADOEndSubsetFont
/GQKSMV+HelveticaNeue*1 [32{/.notdef}rp /space 14{/.notdef}rp /slash 17{/.notdef}rp /A /B 10{/.notdef}rp /M /N /.notdef /P /.notdef /R 14{/.notdef}rp /a /.notdef /c /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf274.177 378.551 mo(R)sh279.761 378.551 mo(e)sh284.209 378.551 mo(p)sh289.072 378.551 mo(u)sh293.616 378.551 mo(l)sh295.536 378.551 mo(si)[4.12012 0 ]xsh301.553 378.551 mo(o)sh306.272 378.551 mo(n)sh160.465 253.351 mo(A)sh165.649 253.351 mo(t)sh168.425 253.351 mo(t)sh171.041 253.351 mo(r)sh173.84 253.351 mo(a)sh178.249 253.351 mo(c)sh182.696 253.351 mo(t)sh185.296 253.351 mo(i)sh187.192 253.351 mo(o)sh191.912 253.351 mo(n)sh196.56 253.351 mo(/)sh199.392 253.351 mo(R)sh204.976 253.351 mo(e)sh209.424 253.351 mo(p)sh214.288 253.351 mo(u)sh218.824 253.351 mo(l)sh220.743 253.351 mo(si)[4.12012 0 ]xsh226.76 253.351 mo(o)sh231.479 253.351 mo(n)sh216.901 261.971 mo
215.805 261.971 li
215.805 262.971 li
216.901 262.971 li
0 1 1 0 cmyk
f
213.116 262.971 mo
214.199 262.971 li
214.199 261.971 li
213.116 261.971 li
f
198.199 273.583 mo
196.215 273.583 li
196.077 273.583 195.965 273.695 195.965 273.833 cv
195.965 273.971 196.077 274.083 196.215 274.083 cv
198.199 274.083 li
198.337 274.083 198.449 273.971 198.449 273.833 cv
198.449 273.695 198.337 273.583 198.199 273.583 cv
.5 1 0 0 cmyk
f
194.45 273.833 mo
196.937 272.817 li
196.347 273.833 li
196.937 274.85 li
194.45 273.833 li
cp
f
189.783 274.083 mo
191.768 274.083 li
191.906 274.083 192.018 273.971 192.018 273.833 cv
192.018 273.695 191.906 273.583 191.768 273.583 cv
189.783 273.583 li
189.645 273.583 189.533 273.695 189.533 273.833 cv
189.533 273.971 189.645 274.083 189.783 274.083 cv
f
193.533 273.833 mo
191.046 274.85 li
191.636 273.833 li
191.046 272.817 li
193.533 273.833 li
cp
f
318.483 390.511 mo
319.888 389.106 li
319.985 389.009 319.985 388.851 319.888 388.753 cv
319.79 388.655 319.632 388.655 319.534 388.753 cv
318.13 390.157 li
318.032 390.255 318.032 390.413 318.13 390.511 cv
318.227 390.608 318.386 390.608 318.483 390.511 cv
f
320.959 387.682 mo
319.919 390.16 li
319.617 389.023 li
318.482 388.722 li
320.959 387.682 li
cp
f
317.128 391.159 mo
315.725 392.563 li
315.628 392.66 315.628 392.818 315.726 392.916 cv
315.823 393.014 315.982 393.014 316.079 392.916 cv
317.482 391.513 li
317.579 391.415 317.579 391.257 317.481 391.159 cv
317.384 391.061 317.225 391.062 317.128 391.159 cv
f
314.654 393.987 mo
315.693 391.51 li
315.995 392.646 li
317.131 392.947 li
314.654 393.987 li
cp
f
215.367 265.009 mo
217.352 265.009 li
217.49 265.009 217.602 264.897 217.602 264.759 cv
217.602 264.621 217.49 264.509 217.352 264.509 cv
215.367 264.509 li
215.229 264.509 215.117 264.621 215.117 264.759 cv
215.117 264.897 215.229 265.009 215.367 265.009 cv
f
219.117 264.759 mo
216.63 265.775 li
217.22 264.759 li
216.63 263.743 li
219.117 264.759 li
cp
f
213.949 264.509 mo
211.965 264.509 li
211.827 264.509 211.715 264.621 211.715 264.759 cv
211.715 264.897 211.827 265.009 211.965 265.009 cv
213.949 265.009 li
214.087 265.009 214.199 264.897 214.199 264.759 cv
214.199 264.621 214.087 264.509 213.949 264.509 cv
f
210.199 264.759 mo
212.687 263.742 li
212.097 264.759 li
212.687 265.774 li
210.199 264.759 li
cp
f
194.983 270.27 mo
194.023 270.614 li
194.359 271.556 li
195.32 271.212 li
0 1 1 0 cmyk
f
192.818 271.585 mo
193.735 271.585 li
193.735 270.585 li
192.818 270.585 li
f
325.673 390.377 mo
321.611 392.188 li
322.018 393.101 li
326.08 391.291 li
f
319.055 400.072 mo
319.055 396.395 li
318.055 396.395 li
318.055 400.072 li
f
gsave
0 0 mo
395.667 0 li
395.667 514.334 li
0 514.334 li
0 0 li
clp
gsave
158.522 498.332 mo
220.424 498.332 li
220.424 343.938 li
158.522 343.938 li
158.522 498.332 li
clp
189.473 497.332 mo
188.766 497.326 188.328 497.11 187.889 496.723 cv
187.232 496.144 186.675 495.105 185.822 494.043 cv
184.967 492.983 183.767 491.914 181.814 491.352 cv
178.199 490.303 174.984 487.601 172.195 483.558 cv
168.011 477.498 164.829 468.457 162.709 457.801 cv
160.588 447.145 159.521 434.873 159.521 422.332 cv
159.518 396.987 164.585 374.563 172.284 361.001 cv
172.292 360.988 li
172.298 360.975 li
172.68 360.203 172.849 359.376 172.849 358.538 cv
172.846 356.85 172.186 355.117 171.232 353.449 cv
170.236 351.716 168.909 350.043 167.601 348.596 cv
167.67 348.64 167.739 348.685 167.809 348.729 cv
169.374 349.731 171.084 350.734 172.701 351.494 cv
174.323 352.251 175.838 352.778 177.106 352.784 cv
177.111 352.784 177.115 352.784 177.119 352.784 cv
177.846 352.784 178.533 352.589 179.02 352.078 cv
179.026 352.071 li
182.319 348.98 185.831 347.333 189.473 347.332 cv
189.476 347.332 189.479 347.332 189.483 347.332 cv
193.322 347.332 196.844 349.418 200.554 352.687 cv
200.905 352.997 201.359 353.118 201.818 353.118 cv
201.821 353.118 201.824 353.118 201.828 353.118 cv
202.89 353.107 204.128 352.564 205.486 351.8 cv
207.354 350.735 209.417 349.198 211.097 347.852 cv
210.599 348.539 210.067 349.286 209.535 350.058 cv
208.476 351.592 207.416 353.218 206.613 354.659 cv
206.212 355.38 205.874 356.054 205.632 356.657 cv
205.391 357.262 205.237 357.785 205.233 358.267 cv
205.234 358.395 205.245 358.521 205.276 358.647 cv
205.295 358.727 li
205.34 358.798 li
213.773 372.049 219.43 395.561 219.425 422.332 cv
219.425 437.666 217.221 453.208 213.195 465.699 cv
211.183 471.945 208.715 477.427 205.854 481.735 cv
202.993 486.045 199.743 489.17 196.189 490.75 cv
194.834 491.352 193.952 492.115 193.358 492.91 cv
192.47 494.103 192.212 495.326 191.797 496.112 cv
191.592 496.509 191.374 496.789 191.046 496.991 cv
190.718 497.191 190.241 497.331 189.473 497.332 cv
.125982 .200784 .326767 0 cmyk
f
189.536 498.332 mo
189.424 498.332 li
188.505 498.326 187.774 497.973 187.22 497.467 cv
186.652 496.953 186.23 496.308 185.771 495.654 cv
184.848 494.34 183.842 492.99 181.535 492.312 cv
177.622 491.175 174.241 488.286 171.371 484.126 cv
168.5 479.961 166.124 474.509 164.223 468.155 cv
160.457 455.565 158.558 439.431 158.522 422.798 cv
158.522 421.915 li
158.58 396.611 163.629 374.249 171.408 360.52 cv
171.712 359.899 171.848 359.24 171.849 358.538 cv
171.865 356.054 170.041 353.038 167.927 350.499 cv
165.821 347.954 163.464 345.864 162.527 345.069 cv
162.26 344.841 162.111 344.722 162.111 344.721 cv
162.732 343.938 li
162.734 343.939 163.085 344.213 163.692 344.665 cv
164.3 345.116 165.16 345.742 166.168 346.436 cv
168.181 347.826 170.79 349.492 173.126 350.589 cv
174.67 351.318 176.107 351.784 177.088 351.784 cv
177.094 351.784 177.1 351.784 177.106 351.784 cv
177.602 351.782 177.949 351.677 178.189 351.486 cv
178.314 351.368 li
181.735 348.142 185.505 346.332 189.471 346.332 cv
189.471 346.332 189.472 346.332 189.473 346.332 cv
193.702 346.336 197.438 348.61 201.215 351.936 cv
201.341 352.046 201.523 352.116 201.828 352.118 cv
201.834 352.118 201.841 352.118 201.848 352.118 cv
202.457 352.118 203.434 351.773 204.514 351.193 cv
205.611 350.611 206.831 349.807 208.011 348.952 cv
210.373 347.243 212.582 345.332 213.442 344.571 cv
213.688 344.354 213.822 344.232 213.823 344.232 cv
214.159 344.601 li
214.553 344.91 li
214.552 344.911 214.153 345.42 213.525 346.252 cv
212.897 347.083 212.043 348.234 211.14 349.508 cv
209.335 352.05 207.326 355.115 206.559 357.03 cv
206.339 357.571 206.23 358.02 206.234 358.267 cv
206.242 358.353 li
214.741 371.8 220.342 395.153 220.424 421.78 cv
220.424 422.822 li
220.347 445.812 215.4 469.147 206.687 482.288 cv
203.758 486.699 200.392 489.973 196.596 491.664 cv
195.224 492.278 194.484 493.007 193.982 493.76 cv
193.482 494.514 193.232 495.313 192.916 496.072 cv
192.704 496.575 192.456 497.069 192.039 497.477 cv
191.491 498.018 190.679 498.327 189.536 498.332 cv
167.601 348.596 mo
168.909 350.043 170.236 351.716 171.232 353.449 cv
172.186 355.117 172.846 356.85 172.849 358.538 cv
172.849 359.376 172.68 360.203 172.298 360.975 cv
172.292 360.988 li
172.284 361.001 li
164.585 374.563 159.518 396.987 159.521 422.332 cv
159.521 434.873 160.588 447.145 162.709 457.801 cv
164.829 468.457 168.011 477.498 172.195 483.558 cv
174.984 487.601 178.199 490.303 181.814 491.352 cv
183.767 491.914 184.967 492.983 185.822 494.043 cv
186.675 495.105 187.232 496.144 187.889 496.723 cv
188.328 497.11 188.766 497.326 189.473 497.332 cv
190.241 497.331 190.718 497.191 191.046 496.991 cv
191.374 496.789 191.592 496.509 191.797 496.112 cv
192.212 495.326 192.47 494.103 193.358 492.91 cv
193.952 492.115 194.834 491.352 196.189 490.75 cv
199.743 489.17 202.993 486.045 205.854 481.735 cv
208.715 477.427 211.183 471.945 213.195 465.699 cv
217.221 453.208 219.425 437.666 219.425 422.332 cv
219.43 395.561 213.773 372.049 205.34 358.798 cv
205.295 358.727 li
205.276 358.647 li
205.245 358.521 205.234 358.395 205.233 358.267 cv
205.237 357.785 205.391 357.262 205.632 356.657 cv
205.874 356.054 206.212 355.38 206.613 354.659 cv
207.416 353.218 208.476 351.592 209.535 350.058 cv
210.067 349.286 210.599 348.539 211.097 347.852 cv
209.417 349.198 207.354 350.735 205.486 351.8 cv
204.128 352.564 202.89 353.107 201.828 353.118 cv
201.824 353.118 201.821 353.118 201.818 353.118 cv
201.359 353.118 200.905 352.997 200.554 352.687 cv
196.844 349.418 193.322 347.332 189.483 347.332 cv
189.479 347.332 189.476 347.332 189.473 347.332 cv
185.831 347.333 182.319 348.98 179.026 352.071 cv
179.02 352.078 li
178.533 352.589 177.846 352.784 177.119 352.784 cv
177.115 352.784 177.111 352.784 177.106 352.784 cv
175.838 352.778 174.323 352.251 172.701 351.494 cv
171.084 350.734 169.374 349.731 167.809 348.729 cv
167.739 348.685 167.67 348.64 167.601 348.596 cv
171.85 360.754 mo
171.85 360.754 li
0 0 0 .501961 cmyk
f
grestore
185.935 364.332 mo
186.315 364.007 li
186.305 363.996 185.843 363.454 185.197 362.899 cv
184.874 362.622 184.505 362.34 184.111 362.118 cv
183.716 361.899 183.294 361.728 182.832 361.725 cv
182.603 361.724 182.362 361.773 182.141 361.889 cv
181.843 362.053 181.259 362.108 180.635 362.103 cv
180.384 362.103 180.125 362.097 179.87 362.097 cv
179.422 362.1 178.993 362.108 178.592 362.231 cv
178.392 362.294 178.19 362.392 178.022 362.563 cv
177.852 362.733 177.742 362.978 177.719 363.226 cv
177.66 363.736 177.496 363.996 177.234 364.189 cv
176.968 364.381 176.532 364.5 175.924 364.499 cv
175.615 364.499 175.396 364.477 175.176 364.476 cv
175.013 364.477 174.818 364.485 174.61 364.601 cv
174.456 364.686 174.337 364.825 174.263 364.959 cv
174.15 365.164 174.093 365.375 174.021 365.662 cv
173.951 365.948 173.875 366.309 173.77 366.787 cv
173.531 367.877 173.077 369.171 172.679 370.365 cv
172.48 370.963 172.295 371.537 172.157 372.059 cv
172.02 372.583 171.926 373.049 171.924 373.47 cv
171.922 374.876 172.104 376.197 172.781 378.351 cv
173.476 380.547 174.807 383.263 176.612 384.722 cv
177.134 385.144 177.284 385.633 177.39 386.118 cv
177.444 386.361 177.471 386.587 177.556 386.829 cv
177.6 386.949 177.662 387.085 177.795 387.213 cv
177.926 387.343 178.14 387.422 178.32 387.417 cv
178.527 387.414 178.696 387.353 178.874 387.269 cv
179.052 387.183 179.242 387.065 179.466 386.909 cv
179.957 386.567 180.269 386.315 180.482 386.12 cv
180.641 385.975 180.745 385.858 180.815 385.773 cv
180.9 385.666 li
180.735 385.521 li
180.85 385.707 li
180.9 385.666 li
180.735 385.521 li
180.85 385.707 li
180.754 385.552 li
180.813 385.725 li
180.85 385.707 li
180.754 385.552 li
180.813 385.725 li
180.813 385.723 180.939 385.696 181.174 385.658 cv
181.748 385.564 182.145 385.36 182.515 385.176 cv
182.888 384.991 183.261 384.81 183.934 384.652 cv
184.348 384.557 184.604 384.468 184.765 384.407 cv
184.919 384.35 li
184.929 384.348 li
184.907 384.263 li
184.907 384.35 li
184.929 384.348 li
184.907 384.263 li
184.907 384.35 li
184.907 384.303 li
184.901 384.349 li
184.907 384.35 li
184.907 384.303 li
184.901 384.349 li
184.922 384.344 185.188 384.438 185.776 384.639 cv
186.477 384.875 187.133 384.941 187.706 384.941 cv
188.468 384.939 189.1 384.829 189.473 384.832 cv
190.307 384.831 192.281 384.663 192.29 384.663 cv
192.248 384.165 li
192.085 384.638 li
193.421 385.099 li
194.544 386.264 li
194.655 386.303 li
194.925 386.394 195.305 386.673 195.675 386.952 cv
195.863 387.091 196.052 387.229 196.252 387.343 cv
196.453 387.455 196.668 387.558 196.952 387.563 cv
197.195 387.571 197.478 387.443 197.64 387.24 cv
197.639 387.241 li
197.853 386.989 198.361 386.502 198.886 385.992 cv
199.414 385.477 199.964 384.933 200.327 384.475 cv
200.646 384.07 201.313 383.275 201.919 382.52 cv
202.223 382.142 202.513 381.774 202.742 381.461 cv
202.857 381.304 202.956 381.162 203.038 381.034 cv
203.119 380.903 203.182 380.801 203.232 380.657 cv
203.266 380.556 203.383 380.246 203.53 379.852 cv
203.754 379.256 204.054 378.447 204.302 377.7 cv
204.425 377.326 204.536 376.969 204.617 376.655 cv
204.698 376.337 204.755 376.081 204.758 375.832 cv
204.759 375.537 204.734 375.361 204.714 375.243 cv
204.696 375.13 204.685 375.086 204.684 374.847 cv
204.683 374.613 204.701 374.215 204.756 373.509 cv
204.776 373.25 204.785 372.97 204.785 372.675 cv
204.785 371.515 204.651 370.108 204.488 368.95 cv
204.406 368.371 204.317 367.856 204.23 367.461 cv
204.187 367.263 204.145 367.096 204.1 366.956 cv
204.024 366.758 li
203.989 366.692 203.968 366.625 203.85 366.516 cv
203.844 366.51 li
203.795 366.464 203.644 366.292 203.46 366.077 cv
203.179 365.751 202.8 365.307 202.397 364.879 cv
201.993 364.449 201.574 364.037 201.169 363.754 cv
200.99 363.632 200.71 363.372 200.386 363.061 cv
199.896 362.594 199.29 362.007 198.584 361.525 cv
197.878 361.046 197.056 360.659 196.131 360.657 cv
195.885 360.667 li
194.731 360.755 194.05 361.074 193.655 361.448 cv
193.258 361.821 193.201 362.216 193.198 362.302 cv
193.177 362.648 li
193.495 362.789 li
193.672 362.389 li
193.381 362.717 li
193.495 362.789 li
193.672 362.389 li
193.381 362.717 li
193.685 362.375 li
193.229 362.375 li
193.231 362.561 193.333 362.676 193.381 362.717 cv
193.685 362.375 li
193.229 362.375 li
193.675 362.375 li
193.306 362.122 li
193.27 362.173 193.228 362.267 193.229 362.375 cv
193.675 362.375 li
193.306 362.122 li
193.595 362.32 li
193.379 362.043 li
193.306 362.122 li
193.595 362.32 li
193.379 362.043 li
193.445 362.127 li
193.393 362.033 li
193.379 362.043 li
193.445 362.127 li
193.393 362.033 li
193.359 362.058 193 362.191 192.158 362.34 cv
191.278 362.5 190.772 362.498 190.33 362.543 cv
190.11 362.566 189.889 362.604 189.668 362.708 cv
189.447 362.812 189.254 362.977 189.087 363.181 cv
188.678 363.678 li
185.907 363.833 li
185.935 364.332 li
186.315 364.007 li
185.935 364.332 li
185.963 364.831 li
189.171 364.652 li
189.859 363.817 li
189.967 363.688 190.03 363.644 190.095 363.612 cv
190.188 363.564 190.378 363.535 190.748 363.512 cv
191.114 363.487 191.628 363.454 192.338 363.324 cv
193 363.203 193.387 363.104 193.645 363.01 cv
193.775 362.962 193.873 362.918 193.975 362.846 cv
194.131 362.687 li
194.183 362.613 194.23 362.499 194.229 362.375 cv
194.227 362.16 194.109 362.024 194.045 361.969 cv
193.9 361.875 li
193.697 362.332 li
194.196 362.362 li
193.991 362.35 li
194.193 362.393 li
194.196 362.362 li
193.991 362.35 li
194.193 362.393 li
194.197 362.389 194.211 362.271 194.422 362.107 cv
194.635 361.944 195.079 361.732 195.963 361.664 cv
196.131 361.657 li
196.971 361.65 197.842 362.158 198.619 362.805 cv
199.007 363.125 199.368 363.472 199.696 363.785 cv
200.026 364.098 200.313 364.376 200.599 364.576 cv
201.005 364.854 201.596 365.467 202.09 366.026 cv
202.34 366.307 202.569 366.576 202.755 366.791 cv
202.848 366.9 202.931 366.994 203.001 367.073 cv
203.197 367.273 li
203.441 366.99 li
203.125 367.192 li
203.197 367.273 li
203.441 366.99 li
203.125 367.192 li
203.226 367.128 li
203.117 367.179 li
203.125 367.192 li
203.226 367.128 li
203.117 367.179 li
203.125 367.192 203.158 367.284 203.19 367.407 cv
203.43 368.306 203.788 370.899 203.785 372.675 cv
203.785 372.95 203.777 373.206 203.759 373.431 cv
203.703 374.15 203.684 374.566 203.684 374.847 cv
203.682 375.124 203.708 375.294 203.727 375.406 cv
203.744 375.512 203.757 375.572 203.758 375.832 cv
203.763 375.922 203.691 376.287 203.567 376.702 cv
203.382 377.336 203.093 378.151 202.836 378.85 cv
202.577 379.553 202.356 380.124 202.283 380.341 cv
202.337 380.358 li
202.285 380.337 li
202.284 380.341 li
202.337 380.358 li
202.285 380.337 li
202.277 380.369 202.119 380.627 201.905 380.912 cv
201.251 381.797 200.038 383.227 199.542 383.856 cv
199.247 384.231 198.708 384.77 198.188 385.276 cv
197.664 385.787 197.164 386.259 196.879 386.591 cv
196.878 386.592 li
196.901 386.612 li
196.883 386.588 li
196.878 386.592 li
196.901 386.612 li
196.883 386.588 li
196.952 386.678 li
196.952 386.563 li
196.883 386.588 li
196.952 386.678 li
196.952 386.563 li
196.903 386.549 li
196.765 386.508 196.458 386.293 196.132 386.045 cv
195.798 385.8 195.43 385.521 194.99 385.361 cv
194.822 385.832 li
195.182 385.485 li
193.974 384.232 li
192.311 383.658 li
192.206 383.667 li
192.205 383.667 191.712 383.708 191.12 383.75 cv
190.53 383.791 189.835 383.832 189.473 383.832 cv
188.949 383.835 188.373 383.942 187.706 383.941 cv
187.209 383.94 186.671 383.884 186.094 383.691 cv
185.421 383.474 185.269 383.369 184.907 383.35 cv
184.8 383.349 184.696 383.372 184.62 383.396 cv
184.505 383.433 184.43 383.468 184.299 383.512 cv
184.17 383.557 183.989 383.613 183.708 383.678 cv
182.944 383.854 182.452 384.09 182.07 384.28 cv
181.684 384.471 181.434 384.6 181.009 384.672 cv
180.756 384.716 180.633 384.729 180.465 384.788 cv
180.335 384.828 180.186 384.952 180.133 385.024 cv
180.047 385.128 180.03 385.168 179.865 385.328 cv
179.705 385.482 179.417 385.724 178.894 386.089 cv
178.697 386.227 178.543 386.318 178.44 386.368 cv
178.329 386.413 li
178.311 386.417 li
178.32 386.477 li
178.32 386.417 li
178.311 386.417 li
178.32 386.477 li
178.32 386.417 li
178.32 386.653 li
178.48 386.484 li
178.32 386.417 li
178.32 386.653 li
178.48 386.484 li
178.37 386.601 li
178.507 386.516 li
178.48 386.484 li
178.37 386.601 li
178.507 386.516 li
178.502 386.504 li
178.483 386.462 178.45 386.324 178.416 386.146 cv
178.312 385.61 178.136 384.656 177.237 383.942 cv
175.709 382.735 174.372 380.117 173.736 378.052 cv
173.078 375.948 172.926 374.788 172.924 373.47 cv
172.923 373.209 172.995 372.797 173.124 372.315 cv
173.507 370.855 174.356 368.767 174.747 367.002 cv
174.932 366.149 175.038 365.656 175.114 365.493 cv
175.14 365.44 li
175.041 365.363 li
175.081 365.481 li
175.14 365.44 li
175.041 365.363 li
175.081 365.481 li
175.074 365.46 li
175.078 365.482 li
175.081 365.481 li
175.074 365.46 li
175.078 365.482 li
175.176 365.476 li
175.314 365.475 175.572 365.499 175.924 365.499 cv
176.651 365.498 177.298 365.367 177.813 365.004 cv
178.332 364.641 178.647 364.04 178.714 363.328 cv
178.737 363.262 li
178.751 363.242 178.858 363.177 179.067 363.144 cv
179.272 363.108 179.555 363.097 179.87 363.097 cv
180.11 363.097 180.369 363.103 180.635 363.103 cv
181.295 363.097 181.992 363.085 182.603 362.775 cv
182.667 362.743 182.736 362.725 182.832 362.725 cv
183.021 362.722 183.312 362.814 183.621 362.99 cv
184.086 363.25 184.583 363.672 184.95 364.026 cv
185.134 364.203 185.287 364.363 185.393 364.477 cv
185.515 364.612 li
185.555 364.657 li
185.716 364.845 li
185.963 364.831 li
185.935 364.332 li
cp
0 0 0 .4 cmyk
f
332.518 372.304 mo
332.518 375.291 336.5 377.715 341.412 377.715 cv
346.326 377.715 350.307 375.291 350.307 372.304 cv
350.307 369.317 346.326 366.895 341.412 366.895 cv
336.5 366.895 332.518 369.317 332.518 372.304 cv
0 0 0 1 cmyk
f
329.804 399.897 mo
318.409 369.473 li
317.472 369.824 li
328.868 400.248 li
f
339.214 377.509 mo
329.261 399.588 li
304.716 399.588 li
304.716 400.588 li
329.907 400.588 li
340.331 377.465 li
339.42 377.054 li
cp
f
194.822 368.738 mo
194.822 369.756 196.179 370.582 197.853 370.582 cv
199.527 370.582 200.885 369.756 200.885 368.738 cv
200.885 367.721 199.527 366.895 197.853 366.895 cv
196.179 366.895 194.822 367.721 194.822 368.738 cv
f
194.214 378.051 mo
191.236 368.588 li
190.282 368.888 li
193.26 378.351 li
f
196.804 370.376 mo
193.498 377.707 li
189.634 377.707 li
189.634 378.707 li
194.144 378.707 li
197.921 370.332 li
197.01 369.921 li
cp
f
181.248 368.738 mo
181.248 369.756 179.891 370.582 178.217 370.582 cv
176.542 370.582 175.185 369.756 175.185 368.738 cv
175.185 367.721 176.542 366.895 178.217 366.895 cv
179.891 366.895 181.248 367.721 181.248 368.738 cv
f
182.809 378.351 mo
185.787 368.888 li
184.833 368.588 li
181.855 378.051 li
f
178.354 370.788 mo
181.925 378.707 li
186.435 378.707 li
186.435 377.707 li
182.571 377.707 li
179.06 369.921 li
178.149 370.332 li
cp
f
88.1406 6.66699 mo
88.1406 105.667 li
0 0 0 0 cmyk
f
87.6406 6.66699 mo
87.6406 105.667 li
88.6406 105.667 li
88.6406 6.66699 li
0 0 0 1 cmyk
f
88.1406 116.509 mo
88.1406 320.009 li
0 0 0 0 cmyk
f
87.6406 116.509 mo
87.6406 320.009 li
88.6406 320.009 li
88.6406 116.509 li
0 0 0 1 cmyk
f
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMV+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B7361F02565A2847C0BACC3FC3DBCA2AB7> |-/colon <1C60D8A8C9B854D0DD5F866E4F44EC260CFA4AAEB17CBEFD4A0038244B97D7A560E95A32> |-/H <1C60D8A8C9B6079F62EB0118C852A105FA7C8BF6E6C135E413B5042633AD275F8C347ACCC5B2EDBBBE16A4E3BB> |-/I <1C60D8A8C9B869C1622DF13404AFBF404E77BA2A5B38FA> |-/S <1C60D8A8C9B67DB58789F51595DCF90BBB2B674A76ABEF9D3D99EDAA9A938BC68ADD5BEE2127863866D61B9300DF3B85FEC013588736057136A85174EDF694645A60BB146B9F318FBA70B24445023BC05CF20E83A6623DCF831D8ECC6A24C62AF958CD06AA90FBFDB74C8EC0BF0BE4C00D0D4E79EE653DED50EF7F30AE97D9038F7C9B094876F1EA3755148F1F43647E5C429D294D6460D6F25919A9AE918BA7D5BE3BFC9FBA263E097CBE1F74B9382A78B835574F3EFF81AE06434B3662B15A1136B409583A42C5AAD7891A0F68572F64C075A65E754AF812C6961647E04F7CA02060CB99A000061C8DBDD93F8BCDE1317C9A0906C52352E462B3C4169E2E84CD2AC06D8A9597BE6A0AB9162239A1995D98012687D0DB7364CADA4388EF51A11DEE0DD68697F61E8AD620A382C9CB4BBCF3CA6573D44C597320828A6E0659B7BFDA6A4AB3AC1FE485D254A9F85A14C6D3D2730D15> |-/b <1C60D8A8C9B7CA642A857FF686DAD32159D2062D315BAE64CA93EF1212355EFAB4F941555B5DFAB7E0DB0EBF46BE5BF626774D21301A61767603A7E3329B266AFD95FB042C48D7AE0B1A71A7EED73B6176B23BA998C159682DFBC00411691AA93E78AB65E3372C26F4D7044205C631873E483D3E3BA629E30A9A3C20C4809EFACF36AF57B98376D998D6ABB8B51847B3330B970A6221D0809489D7BECE0F0DB6ACFB1C3A488D53353A8ED082E46638E7D240A3DFDAF00CC8B0547D72F3135993BEB0D010B2D0EC536A2AB8507EC8943842ED13D1AB4B8CD501693498E78B9888FFCBD2267148C5E484C853F2C630DDA6E7C737AC97> |-/f <1C60D8A8C9B8425701F9C9038E59CB2C58F503EA569DF0365457A7586EF99D1302CD268628AE6153CD99072FDD60FA02C7AC392298E82EDA8D36342D070A06EC22DC63DCE2FC770E0EC270D7B25F2B1725D04D2FF6D144576F34FC23A1E6> |-/g <1C60D8A8C9B7FD84950EF8BFBDCDE7CBD4F87E3C30345FE5BE39EB528D4316C6168698F38A0490D24000538A6A6E021802168DE74172C000571E5ABA506BD1736523D6C8158464C76F177854D828AD9E7DFC10FA568A7DC39E1F2DD93F52ACFBA111CE4DF746FE47F28A42FBF5AF88CA5AE78F8399225C9769A032F2842F653F372DAD8CA2E74794FF93F1822152CE160530BBCC9345318BFEA3A088341B284DCFD987279D7E9B9C7486BDE2F037BD268BFE3768E5BB08F848F5DBDDE288E6B4A57054124B4F86CC4CCDE4451A5C86E4077AA5968C73216E3A588AE416E0709AF36D4E19CE459B51414B15FF8D053B35761D2CC110387D3E2906A961B3B069AC96DB8CAB62B7778F7BD53CCF3A3D2851D533887D1E2FAFD606AEC300EA40C1770F6EA99E8D9BB94576BA39FB0C5FF925CAC815600E001556CA8073ECDFECF74135290D16594F8A0C215A> |-/v <1C60D8A8C9B7A73DB9473C9211908C7A52640D514AEA40364377D9E8236E7C741EFC5642D04359> |-/w <1C60D8A8C9B6EB66DCC09F9AE573CD6DDE0A4875ABFACE255A9F7E57619A2AB011A573CADC678761C9C6B80037DE955D306532A7FCDA465570C90D30F35DA916> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMV+HelveticaNeue /Encoding getdup 45 /hyphen putdup 58 /colon putdup 72 /H putdup 73 /I putdup 83 /S putdup 98 /b putdup 102 /f putdup 103 /g putdup 118 /v putdup 119 /w putpop%ADOEndSubsetFont
/GQKSMV+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /.notdef /slash 10{/.notdef}rp /colon 6{/.notdef}rp /A /B 5{/.notdef}rp /H /I 3{/.notdef}rp /M /N /.notdef /P /.notdef /R /S 13{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf25.2471 195.067 mo(M)sh32.3271 195.067 mo(e)sh36.8066 195.067 mo(c)sh41.2227 195.067 mo(h)sh45.7749 195.067 mo(a)sh50.2227 195.067 mo(n)sh54.7744 195.067 mo(o)sh59.5986 195.067 mo(-)sh25.2471 204.667 mo(s)sh29.375 204.667 mo(e)sh33.8389 204.667 mo(n)sh38.415 204.667 mo(s)sh42.5508 204.667 mo(o)sh47.2871 204.667 mo(r)sh50.3188 204.667 mo(y)sh25.2471 214.268 mo(d)sh30.103 214.268 mo(a )[4.2959 0 ]xsh36.623 214.268 mo(N)sh42.5269 214.268 mo(e)sh46.9746 214.268 mo(u)sh51.5508 214.268 mo(r)sh54.3184 214.268 mo(o)sh59.0386 214.268 mo(n)sh63.6064 214.268 mo(s)sh25.2471 223.867 mo(i)sh27.127 223.867 mo(n )[4.44775 0 ]xsh33.7988 223.867 mo(b)sh38.6948 223.867 mo(o)sh43.4146 223.867 mo(d)sh48.2788 223.867 mo(y w)[4 2.22363 0 ]xsh60.5664 223.867 mo(a)sh65.0063 223.867 mo(l)sh66.8706 223.867 mo(l)sh25.2471 233.467 mo(o)sh29.8789 233.467 mo(f )[2.36816 0 ]xsh34.4707 233.467 mo(l)sh36.3667 233.467 mo(a)sh40.8228 233.467 mo(r)sh43.8306 233.467 mo(v)sh47.8228 233.467 mo(a)sh22.271 388.899 mo(M)sh29.335 388.899 mo(u)sh33.9189 388.899 mo(s)sh38.063 388.899 mo(h)sh42.623 388.899 mo(r)sh45.3906 388.899 mo(oo)[4.72803 0 ]xsh54.8467 388.899 mo(m)sh22.271 398.499 mo(Bo)[5.60791 0 ]xsh32.5991 398.499 mo(d)sh37.4629 398.499 mo(y)sh22.271 408.099 mo(N)sh28.1748 408.099 mo(e)sh32.6226 408.099 mo(u)sh37.1909 408.099 mo(r)sh39.9585 408.099 mo(on)[4.72021 0 ]xsh49.2544 408.099 mo(s)sh22.271 417.699 mo(o)sh26.9028 417.699 mo(f )[2.36816 0 ]xsh31.4946 417.699 mo(d)sh36.3506 417.699 mo(e)sh40.6626 417.699 mo(v)sh44.6309 417.699 mo(e)sh49.0864 417.699 mo(lop)[1.896 4.71191 0 ]xsh60.5581 417.699 mo(i)sh62.438 417.699 mo(n)sh67.0059 417.699 mo(g)sh22.271 427.299 mo(br)[4.8877 0 ]xsh29.9668 427.299 mo(a)sh34.3989 427.299 mo(i)sh36.2788 427.299 mo(n)sh22.271 436.898 mo(i)sh24.1509 436.898 mo(n )[4.44775 0 ]xsh30.8228 436.898 mo(P)sh36.0229 436.898 mo(u)sh40.5747 436.898 mo(p)sh45.4307 436.898 mo(a)sh16.3511 48.9316 mo(H)sh22.2471 48.9316 mo(e)sh26.7109 48.9316 mo(m)sh33.6626 48.9316 mo(o)sh38.4067 48.9316 mo(c)sh42.7666 48.9316 mo(y)sh47.0947 48.9316 mo(t)sh49.6064 48.9316 mo(e )[4.2959 0 ]xsh56.1265 48.9316 mo(c)sh60.5581 48.9316 mo(e)sh65.0063 48.9316 mo(l)sh66.8701 48.9316 mo(l)sh68.79 48.9316 mo(s )[4 0 ]xsh16.3511 58.5313 mo(I)sh18.519 58.5313 mo(m)sh25.4551 58.5313 mo(m)sh32.3828 58.5313 mo(un)[4.56006 0 ]xsh41.5029 58.5313 mo(e )[4.2959 0 ]xsh48.0229 58.5313 mo(S)sh53.3267 58.5313 mo(y)sh57.4146 58.5313 mo(s)sh61.5269 58.5313 mo(t)sh64.0386 58.5313 mo(e)sh68.5024 58.5313 mo(m)sh75.2944 58.5313 mo(:)shgsave
0 0 mo
395.667 0 li
395.667 514.334 li
0 514.334 li
0 0 li
clp
227.736 57.9096 mo
231.342 63.1167 li
232.164 62.5474 li
228.559 57.3404 li
1 0 1 0 cmyk
f
267.751 85.8801 mo
267.755 85.8881 268.12 86.6172 268.638 87.4595 cv
269.165 88.3047 269.806 89.2517 270.514 89.7639 cv
270.843 89.9956 271.226 90.0695 271.597 90.0693 cv
272.372 90.0637 273.192 89.7726 273.971 89.5064 cv
274.74 89.2343 275.482 88.9899 275.865 88.9986 cv
275.971 89.0045 li
275.972 89.0046 li
276.444 89.0575 276.947 89.3743 277.317 89.7724 cv
277.502 89.9691 277.653 90.1821 277.752 90.3697 cv
277.852 90.5554 277.894 90.7218 277.893 90.7773 cv
277.893 90.7768 li
277.893 90.7976 li
277.895 90.9063 277.861 91.1404 277.797 91.4272 cv
277.607 92.3007 277.18 93.6853 276.99 95.0443 cv
276.885 95.8064 276.798 96.5863 276.798 97.3339 cv
276.8 98.345 276.949 99.3182 277.509 100.088 cv
277.656 100.282 277.835 100.404 278.043 100.521 cv
278.761 100.913 279.938 101.217 281.27 101.456 cv
282.598 101.69 284.054 101.838 285.246 101.839 cv
285.771 101.838 286.244 101.81 286.647 101.742 cv
287.049 101.666 287.384 101.582 287.674 101.323 cv
287.69 101.308 li
287.675 101.322 li
287.984 101.027 288.355 100.539 288.787 99.9367 cv
289.428 99.0383 290.169 97.9083 290.764 97.0025 cv
291.061 96.55 291.321 96.1534 291.51 95.8751 cv
291.604 95.7364 291.682 95.6263 291.731 95.5602 cv
291.775 95.5051 li
291.572 95.3217 li
291.746 95.5322 li
291.775 95.5051 li
291.572 95.3217 li
291.746 95.5322 li
291.461 95.1884 li
291.676 95.5794 li
291.746 95.5322 li
291.461 95.1884 li
291.676 95.5794 li
291.442 95.152 li
291.442 95.6389 li
291.576 95.6354 291.636 95.5984 291.676 95.5794 cv
291.442 95.152 li
291.442 95.6389 li
291.442 95.1443 li
291.283 95.6129 li
291.442 95.6389 li
291.442 95.1443 li
291.283 95.6129 li
291.443 95.1392 li
291.276 95.6102 li
291.381 95.6433 291.394 95.6362 291.43 95.642 cv
291.513 95.6489 291.599 95.6494 291.723 95.6497 cv
292.459 95.6495 294.272 95.5842 294.276 95.5841 cv
294.24 94.5848 li
294.239 94.5848 293.786 94.6011 293.243 94.6173 cv
292.702 94.6336 292.067 94.6498 291.723 94.6497 cv
291.551 94.6476 li
291.518 94.6459 li
291.485 95.0225 li
291.611 94.6681 li
291.516 94.6387 291.524 94.6491 291.518 94.6459 cv
291.485 95.0225 li
291.611 94.6681 li
291.607 94.6667 li
291.603 94.6654 li
291.442 94.6389 li
291.259 94.6471 291.203 94.7017 291.158 94.7249 cv
291.034 94.8336 li
290.947 94.9316 290.869 95.0439 290.75 95.2155 cv
290.346 95.8016 289.603 96.9619 288.852 98.0797 cv
288.477 98.6377 288.102 99.1838 287.771 99.6346 cv
287.444 100.083 287.149 100.445 286.987 100.597 cv
286.988 100.596 li
286.855 100.662 li
286.582 100.768 285.974 100.842 285.246 100.839 cv
283.978 100.839 282.307 100.652 280.908 100.37 cv
280.209 100.229 279.575 100.064 279.1 99.8944 cv
278.863 99.81 278.666 99.7238 278.528 99.6467 cv
278.389 99.5722 278.314 99.4984 278.315 99.4957 cv
277.952 99.0103 277.795 98.2471 277.798 97.3339 cv
277.798 96.664 277.877 95.9242 277.981 95.182 cv
278.097 94.3484 278.318 93.4673 278.515 92.6987 cv
278.613 92.3139 278.705 91.9569 278.774 91.6407 cv
278.842 91.3224 278.892 91.0528 278.893 90.7976 cv
278.892 90.7457 li
278.893 90.779 li
278.892 90.7452 li
278.88 90.4508 278.78 90.18 278.635 89.9019 cv
278.415 89.4884 278.078 89.0682 277.649 88.717 cv
277.22 88.3686 276.694 88.0864 276.092 88.0119 cv
276.094 88.0122 li
276.094 88.0121 li
275.865 87.9986 li
275.171 88.0074 274.42 88.2983 273.644 88.5616 cv
272.879 88.8307 272.104 89.075 271.597 89.0694 cv
271.353 89.0692 271.193 89.0201 271.091 88.9473 cv
270.636 88.6369 269.974 87.7344 269.49 86.9355 cv
269.243 86.5348 269.031 86.1568 268.881 85.8803 cv
268.806 85.742 268.747 85.629 268.706 85.5511 cv
268.645 85.4324 li
267.751 85.8801 li
cp
.55 .6 .65 .4 cmyk
f
272.073 77.9928 mo
272.899 77.662 273.813 76.9568 274.813 76.3025 cv
275.803 75.6457 276.858 75.0563 277.764 74.9335 cv
277.857 74.9204 277.943 74.9144 278.025 74.9144 cv
278.378 74.9174 278.641 75.0173 278.921 75.2288 cv
279.337 75.5443 279.748 76.1576 280.173 76.9713 cv
280.601 77.7831 281.051 78.7835 281.62 79.8541 cv
282.405 81.3281 282.906 82.4081 283.448 83.272 cv
283.987 84.1339 284.603 84.7882 285.523 85.2645 cv
285.764 85.3904 286.027 85.441 286.284 85.4406 cv
286.863 85.4358 287.43 85.2121 288.018 84.9175 cv
288.896 84.4713 289.818 83.8318 290.656 83.3134 cv
291.073 83.0544 291.469 82.8264 291.811 82.6702 cv
292.151 82.512 292.44 82.4354 292.603 82.4385 cv
292.739 82.4578 li
293.072 81.5149 li
292.917 81.4603 292.758 81.4385 292.603 81.4385 cv
292.059 81.4458 291.541 81.6735 290.982 81.9664 cv
290.149 82.4113 289.242 83.0471 288.388 83.563 cv
287.962 83.8207 287.552 84.0477 287.186 84.204 cv
286.822 84.3619 286.502 84.4426 286.284 84.4406 cv
286.153 84.4402 286.061 84.4168 285.986 84.3781 cv
285.23 83.9783 284.789 83.5167 284.295 82.7391 cv
283.805 81.9635 283.298 80.8803 282.503 79.3844 cv
281.767 78.0034 281.225 76.7056 280.601 75.6998 cv
280.288 75.1974 279.952 74.7621 279.531 74.4368 cv
279.114 74.1111 278.597 73.9114 278.025 73.9144 cv
277.894 73.9144 277.76 73.9242 277.624 73.9434 cv
276.427 74.1185 275.292 74.7939 274.263 75.4674 cv
273.243 76.1433 272.307 76.8336 271.708 77.0619 cv
272.073 77.9928 li
cp
f
264.897 85.4775 mo
265.068 85.0077 li
232.063 72.9935 li
229.955 72.2278 228.648 70.2361 228.647 68.1172 cv
228.647 67.5288 228.748 66.931 228.961 66.3448 cv
229.727 64.2385 231.718 62.9315 233.837 62.931 cv
234.425 62.9311 235.024 63.0318 235.61 63.2453 cv
268.617 75.2584 li
270.724 76.0252 272.031 78.0149 272.032 80.1337 cv
272.032 80.7223 271.931 81.3207 271.718 81.9077 cv
270.952 84.0141 268.961 85.3215 266.842 85.322 cv
266.254 85.322 265.655 85.2212 265.068 85.0077 cv
264.897 85.4775 li
264.726 85.9474 li
265.424 86.2012 266.139 86.3221 266.842 86.322 cv
269.37 86.3225 271.742 84.7616 272.657 82.2496 cv
272.911 81.552 273.032 80.8367 273.032 80.1337 cv
273.032 77.6054 271.471 75.2346 268.959 74.3188 cv
235.952 62.3055 li
235.255 62.0518 234.54 61.931 233.837 61.931 cv
231.309 61.9305 228.937 63.4907 228.021 66.0028 cv
227.768 66.6997 227.647 67.4146 227.647 68.1172 cv
227.647 70.6453 229.207 73.0183 231.721 73.9333 cv
264.726 85.9474 li
264.897 85.4775 li
cp
f
167.261 48.9375 mo
167.261 52.7007 171.679 55.7505 177.129 55.7505 cv
182.578 55.7505 186.996 52.7007 186.996 48.9375 cv
186.996 45.1743 182.578 42.1245 177.129 42.1245 cv
171.679 42.1245 167.261 45.1743 167.261 48.9375 cv
0 0 0 1 cmyk
f
196.093 30.5 mo
195.971 30.0151 li
170.124 36.5151 li
170.246 37 li
170.211 36.5012 li
170.186 36.5043 166.53 36.7529 162.825 38.0924 cv
160.973 38.7642 159.103 39.7079 157.667 41.0669 cv
156.232 42.4204 155.241 44.2277 155.246 46.5 cv
155.243 55.0977 157.783 59.7114 158.83 61.2773 cv
158.869 61.3352 158.903 61.4395 158.904 61.6414 cv
158.914 62.1726 158.618 63.163 158.614 64.4105 cv
158.611 65.6037 158.905 67.0572 159.983 68.6575 cv
161.06 70.2603 162.9 72.0168 165.982 73.9251 cv
171.217 77.1662 173.508 79.0191 175.582 80.4721 cv
177.659 81.9291 179.519 82.9665 183.717 84.4706 cv
188.172 86.0636 196.198 86.9372 203.857 86.9411 cv
207.402 86.941 210.862 86.751 213.842 86.3471 cv
216.824 85.9402 219.319 85.3325 220.983 84.4402 cv
222.365 83.6981 223.294 82.6948 223.857 81.5824 cv
224.421 80.47 224.626 79.2612 224.626 78.088 cv
224.617 74.5706 222.824 71.2984 222.811 71.2619 cv
222.79 71.2227 li
212.732 58.6288 li
228.801 50.0377 li
242.223 54.0147 li
242.345 53.9901 li
242.4 53.9797 li
242.671 53.9297 243.92 53.7188 245.594 53.719 cv
247.226 53.7184 249.26 53.9209 251.18 54.6501 cv
253.102 55.3814 254.902 56.6214 256.151 58.726 cv
258.238 62.2481 259.495 64.1459 260.508 65.431 cv
261.522 66.7175 262.285 67.3735 263.314 68.3609 cv
263.96 68.9572 264.986 69.2305 266.285 69.4327 cv
267.583 69.624 269.151 69.6962 270.805 69.6965 cv
274.795 69.696 279.272 69.2717 281.42 68.9959 cv
282.358 68.8755 283.144 68.8749 283.86 68.875 cv
284.924 68.8727 285.876 68.8868 286.833 68.3979 cv
287.788 67.9058 288.635 66.9696 289.616 65.2474 cv
290.241 64.152 290.723 63.5691 291.13 63.1156 cv
291.435 62.7756 291.714 62.5004 291.974 62.1343 cv
292.368 61.5808 292.653 60.8751 292.88 59.6163 cv
293.111 58.3514 293.301 56.4955 293.509 53.5349 cv
293.59 52.3775 293.634 51.2132 293.634 50.0516 cv
293.633 45.3153 292.901 40.6196 290.921 36.6256 cv
288.944 32.6323 285.691 29.3518 280.749 27.531 cv
275.266 25.5077 266.552 23.7608 258.809 22.4446 cv
251.074 21.131 244.303 20.2529 242.828 20.0068 cv
241.522 19.7895 237.201 18.8712 232.301 18.0108 cv
227.394 17.1501 221.902 16.3417 218.134 16.3402 cv
217.198 16.3404 216.367 16.3899 215.664 16.5068 cv
212.645 17.0108 209.901 17.6392 207.643 18.6703 cv
205.389 19.698 203.603 21.1555 202.626 23.2916 cv
201.766 25.1755 200.068 26.892 198.581 28.1141 cv
197.838 28.7262 197.149 29.2172 196.648 29.5537 cv
196.397 29.722 196.194 29.8516 196.054 29.9387 cv
195.914 30.0257 195.841 30.0676 195.841 30.0679 cv
196.093 30.5 li
195.971 30.0151 li
196.093 30.5 li
196.344 30.9321 li
196.36 30.9229 197.668 30.1614 199.217 28.8859 cv
200.764 27.6079 202.56 25.8245 203.535 23.7084 cv
204.391 21.8445 205.938 20.552 208.059 19.5797 cv
210.175 18.6108 212.847 17.9892 215.828 17.4932 cv
216.45 17.3894 217.235 17.34 218.134 17.3402 cv
221.769 17.3387 227.248 18.1377 232.129 18.9957 cv
237.017 19.854 241.301 20.7656 242.664 20.9932 cv
244.189 21.2471 250.918 22.119 258.641 23.4304 cv
266.355 24.7392 275.056 26.4923 280.403 28.469 cv
285.109 30.2113 288.135 33.2712 290.025 37.0702 cv
291.911 40.8685 292.635 45.417 292.634 50.0516 cv
292.634 51.1878 292.591 52.329 292.511 53.465 cv
292.328 56.0836 292.157 57.8244 291.968 59.0155 cv
291.827 59.9091 291.675 60.4897 291.511 60.8989 cv
291.265 61.5077 291.004 61.7705 290.544 62.2741 cv
290.087 62.7707 289.485 63.4542 288.747 64.7524 cv
287.807 66.4053 287.066 67.1567 286.377 67.5083 cv
285.691 67.8632 284.942 67.8773 283.86 67.875 cv
283.144 67.8751 282.3 67.8745 281.293 68.0041 cv
279.187 68.2752 274.725 68.6969 270.805 68.6965 cv
269.182 68.6967 267.65 68.6238 266.431 68.4434 cv
265.214 68.2739 264.306 67.9489 264.006 67.6391 cv
262.95 66.6265 262.256 66.0325 261.293 64.8118 cv
260.329 63.5897 259.089 61.7231 257.011 58.2163 cv
255.633 55.8876 253.613 54.5016 251.535 53.7151 cv
249.454 52.9265 247.308 52.7197 245.594 52.719 cv
243.586 52.7193 242.17 53.0056 242.147 53.0099 cv
242.246 53.5 li
242.388 53.0206 li
228.691 48.9623 li
211.201 58.3136 li
221.98 71.812 li
222.371 71.5 li
221.931 71.7381 li
221.932 71.7383 221.954 71.7805 222 71.8709 cv
222.322 72.5007 223.632 75.3082 223.626 78.088 cv
223.626 79.1468 223.441 80.194 222.965 81.1296 cv
222.488 82.0652 221.727 82.9019 220.509 83.5598 cv
219.048 84.3505 216.625 84.9633 213.708 85.3562 cv
210.788 85.7521 207.366 85.9412 203.857 85.9411 cv
196.286 85.945 188.28 85.0513 184.055 83.5294 cv
179.893 82.0335 178.184 81.0709 176.155 79.6529 cv
174.124 78.2309 171.774 76.3338 166.509 73.0749 cv
163.507 71.2172 161.782 69.5433 160.813 68.1001 cv
159.847 66.6543 159.617 65.4461 159.614 64.4105 cv
159.61 63.3144 159.893 62.4398 159.904 61.6414 cv
159.904 61.3371 159.854 61.0127 159.662 60.7227 cv
158.708 59.2886 156.248 54.9023 156.246 46.5 cv
156.25 44.5223 157.071 43.0171 158.355 41.7925 cv
160.279 39.9609 163.27 38.8602 165.777 38.2503 cv
167.03 37.9435 168.16 37.755 168.975 37.6437 cv
169.383 37.5881 169.711 37.5517 169.937 37.5293 cv
170.162 37.5069 170.28 37.499 170.28 37.4988 cv
170.324 37.4958 li
196.283 30.9677 li
196.344 30.9321 li
196.093 30.5 li
cp
1 0 0 0 cmyk
f
185.596 219.807 mo
222.89 219.807 li
223.166 219.807 223.39 219.583 223.39 219.307 cv
223.39 219.03 223.166 218.807 222.89 218.807 cv
185.596 218.807 li
185.32 218.807 185.096 219.03 185.096 219.307 cv
185.096 219.583 185.32 219.807 185.596 219.807 cv
0 0 0 1 cmyk
f
grestore
0 1 1 0 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMV+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF322BB630272B923963DE8E37724AA571296AF60D1BBC27C2CB1B875AEF91C6D90A9F430B230D6F17F95C57BD52BEC7> |-/D <1C60D8A8C9B635A4ABABB23E9D515BDD0F89286EFD1EBF07654AFD66CF3242CD0D63E072019FD4BD8F3CD13251170FCCAA451F8167EB0E1829A540E43DA7914FD378433FF4020CA0D3FD343F64EFD74B98C5DCF73424FA7B6A961328CC612A579ADB868A6E555DAD10A9655B63B5C7162C073238EE2879AA4DD746F12E16E830524A721CAC3A3C5205C9AA4AC1F052427092> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMV+HelveticaNeue /Encoding getdup 49 /one putdup 68 /D putpop%ADOEndSubsetFont
/GQKSMV+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /.notdef /slash /.notdef /one 8{/.notdef}rp /colon 6{/.notdef}rp /A /B /.notdef /D 3{/.notdef}rp /H /I 3{/.notdef}rp /M /N /.notdef /P /.notdef /R /S 13{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf283.901 387.062 mo(D)sh289.693 387.062 mo(s)sh293.821 387.062 mo(c)sh298.253 387.062 mo(a)sh302.701 387.062 mo(m)sh309.213 387.062 mo(1)sh182.35 261.485 mo(D)sh188.142 261.485 mo(sc)[4.13574 0 ]xsh196.709 261.485 mo(a)sh201.157 261.485 mo(m)sh207.678 261.485 mo(1)shgsave
0 0 mo
395.667 0 li
395.667 514.334 li
0 514.334 li
0 0 li
clp
336.289 213.79 mo
336.289 261.639 326.771 300.428 315.031 300.428 cv
303.289 300.428 293.772 261.639 293.772 213.79 cv
293.772 165.94 303.289 127.15 315.031 127.15 cv
326.771 127.15 336.289 165.94 336.289 213.79 cv
0 0 0 0 cmyk
f
336.289 213.79 mo
335.789 213.79 li
335.79 237.68 333.411 259.31 329.577 274.933 cv
327.661 282.743 325.378 289.052 322.873 293.368 cv
321.622 295.527 320.315 297.184 318.995 298.284 cv
317.672 299.385 316.357 299.927 315.031 299.928 cv
313.706 299.927 312.39 299.385 311.067 298.284 cv
308.753 296.361 306.496 292.723 304.471 287.698 cv
298.375 272.616 294.269 245.142 294.272 213.79 cv
294.272 189.899 296.65 168.269 300.484 152.646 cv
302.399 144.836 304.683 138.526 307.188 134.21 cv
308.44 132.052 309.746 130.394 311.067 129.295 cv
312.39 128.193 313.706 127.651 315.031 127.65 cv
316.357 127.651 317.672 128.193 318.995 129.295 cv
321.308 131.218 323.565 134.856 325.59 139.881 cv
331.685 154.963 335.793 182.437 335.789 213.79 cv
336.289 213.79 li
336.789 213.79 li
336.788 189.831 334.408 168.142 330.548 152.407 cv
328.616 144.539 326.319 138.16 323.738 133.708 cv
322.446 131.482 321.083 129.735 319.635 128.527 cv
318.191 127.32 316.641 126.65 315.031 126.65 cv
313.421 126.65 311.871 127.32 310.426 128.527 cv
307.896 130.643 305.609 134.401 303.544 139.506 cv
297.367 154.815 293.276 182.34 293.272 213.79 cv
293.273 237.748 295.653 259.437 299.513 275.171 cv
301.445 283.04 303.742 289.418 306.323 293.87 cv
307.615 296.096 308.979 297.843 310.426 299.052 cv
311.871 300.258 313.421 300.928 315.031 300.928 cv
316.641 300.928 318.191 300.258 319.635 299.052 cv
322.165 296.935 324.452 293.177 326.517 288.072 cv
332.694 272.763 336.785 245.239 336.789 213.79 cv
336.289 213.79 li
cp
0 0 0 1 cmyk
f
155.451 213.79 mo
155.451 261.639 145.933 300.428 134.193 300.428 cv
122.452 300.428 112.934 261.639 112.934 213.79 cv
112.934 165.94 122.452 127.15 134.193 127.15 cv
145.933 127.15 155.451 165.94 155.451 213.79 cv
0 0 0 0 cmyk
f
155.451 213.79 mo
154.951 213.79 li
154.952 237.68 152.573 259.31 148.739 274.933 cv
146.824 282.743 144.541 289.052 142.035 293.368 cv
140.784 295.527 139.477 297.184 138.157 298.284 cv
136.834 299.385 135.519 299.927 134.193 299.928 cv
132.868 299.927 131.552 299.385 130.229 298.284 cv
127.915 296.361 125.659 292.723 123.633 287.698 cv
117.538 272.616 113.43 245.142 113.434 213.79 cv
113.433 189.899 115.812 168.269 119.646 152.646 cv
121.562 144.836 123.845 138.526 126.351 134.21 cv
127.602 132.051 128.909 130.394 130.229 129.295 cv
131.552 128.193 132.868 127.651 134.193 127.65 cv
135.519 127.651 136.834 128.193 138.157 129.295 cv
140.471 131.218 142.727 134.856 144.752 139.881 cv
150.848 154.963 154.955 182.437 154.951 213.79 cv
155.451 213.79 li
155.951 213.79 li
155.951 189.831 153.57 168.142 149.71 152.407 cv
147.779 144.539 145.481 138.16 142.9 133.708 cv
141.608 131.482 140.245 129.735 138.798 128.527 cv
137.353 127.32 135.803 126.65 134.193 126.65 cv
132.584 126.65 131.033 127.32 129.589 128.527 cv
127.059 130.643 124.771 134.401 122.706 139.506 cv
116.529 154.815 112.438 182.34 112.434 213.79 cv
112.435 237.748 114.815 259.437 118.675 275.171 cv
120.607 283.04 122.905 289.418 125.486 293.87 cv
126.778 296.096 128.141 297.843 129.589 299.052 cv
131.033 300.258 132.584 300.928 134.193 300.928 cv
135.803 300.928 137.353 300.258 138.798 299.052 cv
141.327 296.935 143.614 293.177 145.68 288.072 cv
151.856 272.763 155.947 245.239 155.951 213.79 cv
155.451 213.79 li
cp
0 0 0 1 cmyk
f
384.846 281.736 mo
315.031 287.86 li
245.216 281.736 li
245.216 142.107 li
315.031 136.454 li
384.846 142.107 li
384.846 281.736 li
cp
0 0 0 0 cmyk
f
384.846 281.736 mo
384.802 281.238 li
315.031 287.358 li
245.716 281.278 li
245.716 142.568 li
315.031 136.955 li
384.346 142.568 li
384.346 281.736 li
384.846 281.736 li
384.802 281.238 li
384.846 281.736 li
385.346 281.736 li
385.346 141.646 li
315.031 135.952 li
244.716 141.646 li
244.716 282.194 li
315.031 288.362 li
385.346 282.194 li
385.346 281.736 li
384.846 281.736 li
cp
0 0 0 1 cmyk
f
309.595 297.965 mo
309.595 298.72 308.982 299.331 308.228 299.331 cv
307.473 299.331 306.86 298.72 306.86 297.965 cv
306.86 297.209 307.473 296.598 308.228 296.598 cv
308.982 296.598 309.595 297.209 309.595 297.965 cv
0 0 0 0 cmyk
f
309.595 297.965 mo
309.095 297.965 li
309.094 298.443 308.706 298.83 308.228 298.831 cv
307.749 298.83 307.361 298.443 307.36 297.965 cv
307.361 297.485 307.749 297.099 308.228 297.098 cv
308.706 297.099 309.094 297.485 309.095 297.965 cv
309.595 297.965 li
310.095 297.965 li
310.095 296.933 309.258 296.098 308.228 296.098 cv
307.197 296.098 306.361 296.933 306.36 297.965 cv
306.361 298.996 307.197 299.831 308.228 299.831 cv
309.258 299.831 310.094 298.996 310.095 297.965 cv
309.595 297.965 li
cp
0 0 0 1 cmyk
f
127.706 297.965 mo
127.706 298.72 127.094 299.331 126.339 299.331 cv
125.584 299.331 124.972 298.72 124.972 297.965 cv
124.972 297.209 125.584 296.598 126.339 296.598 cv
127.094 296.598 127.706 297.209 127.706 297.965 cv
0 0 0 0 cmyk
f
127.706 297.965 mo
127.206 297.965 li
127.205 298.443 126.818 298.83 126.339 298.831 cv
125.86 298.83 125.473 298.443 125.472 297.965 cv
125.473 297.485 125.86 297.099 126.339 297.098 cv
126.818 297.099 127.205 297.485 127.206 297.965 cv
127.706 297.965 li
128.206 297.965 li
128.206 296.933 127.37 296.098 126.339 296.098 cv
125.308 296.098 124.472 296.933 124.472 297.965 cv
124.472 298.996 125.308 299.831 126.339 299.831 cv
127.37 299.831 128.206 298.996 128.206 297.965 cv
127.706 297.965 li
cp
0 0 0 1 cmyk
f
142.822 297.965 mo
142.822 298.72 142.21 299.331 141.455 299.331 cv
140.7 299.331 140.088 298.72 140.088 297.965 cv
140.088 297.209 140.7 296.598 141.455 296.598 cv
142.21 296.598 142.822 297.209 142.822 297.965 cv
0 0 0 0 cmyk
f
142.822 297.965 mo
142.322 297.965 li
142.321 298.443 141.935 298.83 141.455 298.831 cv
140.976 298.83 140.589 298.443 140.588 297.965 cv
140.589 297.485 140.976 297.099 141.455 297.098 cv
141.935 297.099 142.321 297.485 142.322 297.965 cv
142.822 297.965 li
143.322 297.965 li
143.322 296.933 142.486 296.098 141.455 296.098 cv
140.424 296.098 139.588 296.933 139.588 297.965 cv
139.589 298.996 140.424 299.831 141.455 299.831 cv
142.486 299.831 143.322 298.996 143.322 297.965 cv
142.822 297.965 li
cp
0 0 0 1 cmyk
f
323.789 297.965 mo
323.789 298.72 323.177 299.331 322.422 299.331 cv
321.667 299.331 321.055 298.72 321.055 297.965 cv
321.055 297.209 321.667 296.598 322.422 296.598 cv
323.177 296.598 323.789 297.209 323.789 297.965 cv
0 0 0 0 cmyk
f
323.789 297.965 mo
323.289 297.965 li
323.288 298.443 322.901 298.83 322.422 298.831 cv
321.943 298.83 321.556 298.443 321.555 297.965 cv
321.556 297.485 321.943 297.099 322.422 297.098 cv
322.901 297.099 323.288 297.485 323.289 297.965 cv
323.789 297.965 li
324.289 297.965 li
324.289 296.933 323.453 296.098 322.422 296.098 cv
321.391 296.098 320.555 296.933 320.555 297.965 cv
320.555 298.996 321.391 299.831 322.422 299.831 cv
323.453 299.831 324.289 298.996 324.289 297.965 cv
323.789 297.965 li
cp
0 0 0 1 cmyk
f
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMV+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B869C16277829E5B6118DC9B787304F68637F6D323CFFF840595CD8A7861B3F30ED557A8744C0F918E8BC5F0D32A14D0F302DDEFEF3365A59F0754CC782C747D41A2DAD508D86390A3D566195A3FE1556399DE> |-/parenright <1C60D8A8C9B869C172E7BF8A9B7B4F93653847272011E9410EAEFFFA999449059B2E4446CCB9432A7FE2E7C9EF2C51CE2CC00FFD450746E839019CD1A9072CD77BDA6393F24214C6BEE028178931302C7A47E0F75E64CA> |-/T <1C60D8A8C9B7FD84E0290B854AC85AB7047BF3E25C860F1CCA51A05FE39D89FD> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMV+HelveticaNeue /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 84 /T putpop%ADOEndSubsetFont
/GQKSMV+HelveticaNeue*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef /slash /.notdef /one 8{/.notdef}rp /colon 6{/.notdef}rp /A /B /.notdef /D 3{/.notdef}rp /H /I 3{/.notdef}rp /M /N /.notdef /P /.notdef /R /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [10.0938 -1.23614e-15 -1.23614e-15 -10.0938 0 0 ]msf149.751 134.003 mo(H)sh157.099 134.003 mo(e)sh162.61 134.003 mo(a)sh168.081 134.003 mo(d )[5.98535 0 ]xsh176.873 134.003 mo(\()sh179.578 134.003 mo(A)sh186.27 134.003 mo(n)sh191.892 134.003 mo(t)sh194.97 134.003 mo(e)sh200.532 134.003 mo(r)sh203.983 134.003 mo(i)sh206.295 134.003 mo(o)sh212.18 134.003 mo(r)sh215.561 134.003 mo(\))sh155.454 304.346 mo(T)sh160.501 304.346 mo(a)sh166.012 304.346 mo(i)sh168.273 304.346 mo(l )[2.24072 0 ]xsh173.319 304.346 mo(\()sh176.015 304.346 mo(P)sh182.444 304.346 mo(o)sh188.319 304.346 mo(s)sh193.416 304.346 mo(t)sh196.495 304.346 mo(e)sh202.056 304.346 mo(r)sh205.498 304.346 mo(i)sh207.799 304.346 mo(o)sh213.684 304.346 mo(r)sh217.065 304.346 mo(\))shgsave
0 0 mo
395.667 0 li
395.667 514.334 li
0 514.334 li
0 0 li
clp
133.693 138.321 mo
133.693 289.562 li
134.693 289.562 li
134.693 138.321 li
f
121.256 251.802 mo
121.525 254.969 li
114.155 260.321 li
111.627 262.429 109.491 263.046 107.746 262.177 cv
106.817 261.712 105.713 260.731 105.414 259.722 cv
105.12 258.7 105.22 257.697 105.713 256.71 cv
106.417 255.298 107.512 254.296 108.997 253.705 cv
110.476 253.125 111.847 253.149 113.109 253.779 cv
113.201 253.825 113.506 254.005 114.022 254.32 cv
114.409 254.535 li
114.651 254.684 114.834 254.79 114.96 254.854 cv
115.787 255.265 116.825 254.966 118.075 253.955 cv
118.303 253.783 118.536 253.62 118.771 253.465 cv
121.256 251.802 li
.746 .676 .668 .898 cmyk
f
122.723 256.964 mo
120.719 233.931 li
120.839 233.576 120.912 232.161 121.363 230.654 cv
121.869 228.959 122.585 227.481 123.99 226.246 cv
125.671 252.909 li
125.729 253.741 125.744 254.3 125.715 254.587 cv
125.664 255.034 li
125.538 256.205 125.952 257.027 126.905 257.503 cv
127.06 257.58 li
127.507 257.76 li
128.376 258.13 li
129.978 258.828 131.072 260.427 131.659 262.928 cv
132.257 265.435 132.07 267.663 131.096 269.614 cv
130.603 270.601 129.953 271.287 129.144 271.672 cv
128.324 272.051 126.062 272.54 125.293 272.155 cv
124.295 271.658 123.671 270.121 123.422 267.546 cv
123.422 267.546 122.895 257.021 122.723 256.964 cv
f
126.6 251.911 mo
126.338 248.47 li
133.974 243.392 li
134.071 247.515 li
126.6 251.911 li
cp
f
111.579 259.645 mo
112.308 259.089 li
112.948 258.582 113.371 258.124 113.576 257.713 cv
113.976 256.912 113.615 256.231 112.493 255.67 cv
111.67 255.261 110.729 255.254 109.667 255.65 cv
108.606 256.047 107.853 256.691 107.409 257.582 cv
107.143 258.114 107.099 258.667 107.273 259.243 cv
107.455 259.809 107.801 260.219 108.312 260.474 cv
109.163 260.899 110.252 260.623 111.579 259.645 cv
0 0 0 0 cmyk
f
125.327 267.812 mo
125.483 269.395 126.145 270.025 126.707 270.306 cv
127.166 270.534 127.602 270.523 128.015 270.27 cv
128.427 270.017 128.817 269.523 129.183 268.789 cv
129.939 267.274 130.091 265.493 129.636 263.446 cv
129.181 261.398 128.34 260.068 127.112 259.455 cv
126.285 259.043 125.39 260.104 125.029 260.828 cv
f
124.75 252.471 mo
125.031 251.908 124.901 251.492 124.362 251.223 cv
123.823 250.954 123.412 251.101 123.132 251.663 cv
122.857 252.214 122.989 252.624 123.529 252.893 cv
124.068 253.162 124.476 253.022 124.75 252.471 cv
.746 .676 .668 .898 cmyk
f
grestore
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMV+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/V <1C60D8A8C9B7D8BE16AB7333EB329575D8F926072F9DAC4249B9488298F9B6919613FA44183837> |-/k <1C60D8A8C9B7B4A13F02E2DB12F826777B4D78CA06622E575C6B49D9CA66A0552B3EB1DC2B346FE4BD2CBCBEB5A2F41F0F78788CCB4D5E> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMV+HelveticaNeue /Encoding getdup 86 /V putdup 107 /k putpop%ADOEndSubsetFont
/GQKSMV+HelveticaNeue*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef /slash /.notdef /one 8{/.notdef}rp /colon 6{/.notdef}rp /A /B /.notdef /D 3{/.notdef}rp /H /I 3{/.notdef}rp /M /N /.notdef /P /.notdef /R /S /T /.notdef /V 10{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [-6.18068e-16 -10.0938 -10.0938 6.18067e-16 0 0 ]msf239.99 223.687 mo(D)sh239.99 216.47 mo(o)sh239.99 210.585 mo(r)sh239.99 207.032 mo(s)sh239.99 201.874 mo(a)sh239.99 196.363 mo(l )[-2.24121 0 ]ysh239.99 191.316 mo(\()sh239.99 188.621 mo(Ba)[-6.96484 0 ]ysh239.99 176.186 mo(c)sh239.99 170.726 mo(k)sh239.99 165.467 mo(\))sh319.418 222.656 mo(V)sh319.418 216.843 mo(e)sh319.418 211.301 mo(n)sh319.418 205.679 mo(t)sh319.418 202.469 mo(ra)[-3.45215 0 ]ysh319.418 193.506 mo(l )[-2.24023 0 ]ysh319.418 188.459 mo(\()sh319.418 185.765 mo(B)sh319.418 178.81 mo(e)sh319.418 173.278 mo(l)sh319.418 171.018 mo(l)sh319.418 168.717 mo(y)sh319.418 163.689 mo(\))shgsave
0 0 mo
395.667 0 li
395.667 514.334 li
0 514.334 li
0 0 li
clp
263.542 161.173 mo
263.042 161.173 li
263.042 163.002 262.259 164.657 260.981 165.865 cv
259.703 167.072 257.933 167.823 255.971 167.823 cv
254.009 167.823 252.24 167.072 250.962 165.865 cv
249.684 164.657 248.902 163.002 248.901 161.173 cv
248.902 159.344 249.684 157.689 250.962 156.481 cv
252.24 155.274 254.009 154.523 255.971 154.523 cv
257.933 154.523 259.703 155.274 260.981 156.481 cv
262.259 157.689 263.042 159.344 263.042 161.173 cv
263.542 161.173 li
264.042 161.173 li
264.042 159.053 263.13 157.133 261.668 155.754 cv
260.206 154.373 258.19 153.523 255.971 153.523 cv
253.752 153.523 251.737 154.373 250.275 155.754 cv
248.813 157.133 247.901 159.053 247.901 161.173 cv
247.901 163.293 248.813 165.213 250.275 166.592 cv
251.737 167.973 253.752 168.823 255.971 168.823 cv
258.19 168.823 260.206 167.973 261.668 166.592 cv
263.13 165.213 264.042 163.293 264.042 161.173 cv
263.542 161.173 li
cp
1 0 0 0 cmyk
f
281.206 161.173 mo
280.706 161.173 li
280.706 163.002 279.923 164.657 278.645 165.865 cv
277.367 167.072 275.598 167.823 273.636 167.823 cv
271.674 167.823 269.904 167.072 268.626 165.865 cv
267.348 164.657 266.566 163.002 266.565 161.173 cv
266.566 159.344 267.348 157.689 268.626 156.481 cv
269.904 155.274 271.674 154.523 273.636 154.523 cv
275.598 154.523 277.367 155.274 278.645 156.481 cv
279.923 157.689 280.706 159.344 280.706 161.173 cv
281.206 161.173 li
281.706 161.173 li
281.706 159.053 280.794 157.133 279.332 155.754 cv
277.87 154.373 275.855 153.523 273.636 153.523 cv
271.417 153.523 269.401 154.373 267.94 155.754 cv
266.478 157.133 265.565 159.053 265.565 161.173 cv
265.565 163.293 266.478 165.213 267.94 166.592 cv
269.401 167.973 271.417 168.823 273.636 168.823 cv
275.854 168.823 277.87 167.973 279.332 166.592 cv
280.794 165.213 281.706 163.293 281.706 161.173 cv
281.206 161.173 li
cp
f
300.552 161.173 mo
300.052 161.173 li
300.051 163.002 299.269 164.657 297.991 165.865 cv
296.714 167.072 294.944 167.823 292.982 167.823 cv
291.02 167.823 289.25 167.072 287.972 165.865 cv
286.694 164.657 285.912 163.002 285.911 161.173 cv
285.912 159.344 286.694 157.689 287.972 156.481 cv
289.25 155.274 291.02 154.523 292.982 154.523 cv
294.944 154.523 296.714 155.274 297.991 156.481 cv
299.269 157.689 300.051 159.344 300.052 161.173 cv
300.552 161.173 li
301.052 161.173 li
301.052 159.053 300.14 157.133 298.678 155.754 cv
297.217 154.373 295.201 153.523 292.982 153.523 cv
290.763 153.523 288.747 154.373 287.285 155.754 cv
285.823 157.133 284.911 159.053 284.911 161.173 cv
284.911 163.293 285.823 165.213 287.285 166.592 cv
288.747 167.973 290.763 168.823 292.982 168.823 cv
295.201 168.823 297.217 167.973 298.678 166.592 cv
300.14 165.213 301.052 163.293 301.052 161.173 cv
300.552 161.173 li
cp
f
263.542 195.068 mo
263.042 195.068 li
263.042 196.898 262.259 198.552 260.981 199.761 cv
259.703 200.968 257.933 201.718 255.971 201.718 cv
254.009 201.718 252.24 200.968 250.962 199.761 cv
249.684 198.552 248.902 196.898 248.901 195.068 cv
248.902 193.239 249.684 191.585 250.962 190.376 cv
252.24 189.169 254.009 188.418 255.971 188.418 cv
257.933 188.418 259.703 189.169 260.981 190.376 cv
262.259 191.585 263.042 193.239 263.042 195.068 cv
263.542 195.068 li
264.042 195.068 li
264.042 192.949 263.13 191.028 261.668 189.649 cv
260.206 188.268 258.19 187.418 255.971 187.418 cv
253.752 187.418 251.737 188.268 250.275 189.649 cv
248.813 191.029 247.901 192.949 247.901 195.068 cv
247.901 197.188 248.813 199.108 250.275 200.488 cv
251.737 201.868 253.752 202.718 255.971 202.718 cv
258.19 202.718 260.206 201.869 261.668 200.488 cv
263.13 199.108 264.042 197.188 264.042 195.068 cv
263.542 195.068 li
cp
f
281.206 195.068 mo
280.706 195.068 li
280.706 196.898 279.923 198.552 278.645 199.761 cv
277.367 200.968 275.598 201.718 273.636 201.718 cv
271.674 201.718 269.904 200.968 268.626 199.761 cv
267.348 198.552 266.566 196.898 266.565 195.068 cv
266.566 193.239 267.348 191.585 268.626 190.376 cv
269.904 189.169 271.674 188.418 273.636 188.418 cv
275.598 188.418 277.367 189.169 278.645 190.376 cv
279.923 191.585 280.706 193.239 280.706 195.068 cv
281.206 195.068 li
281.706 195.068 li
281.706 192.949 280.794 191.029 279.332 189.649 cv
277.87 188.268 275.855 187.418 273.636 187.418 cv
271.417 187.418 269.401 188.268 267.94 189.649 cv
266.478 191.029 265.565 192.949 265.565 195.068 cv
265.565 197.188 266.478 199.108 267.94 200.488 cv
269.401 201.868 271.417 202.718 273.636 202.718 cv
275.854 202.718 277.87 201.868 279.332 200.488 cv
280.794 199.108 281.706 197.188 281.706 195.068 cv
281.206 195.068 li
cp
f
300.552 195.068 mo
300.052 195.068 li
300.051 196.898 299.269 198.552 297.991 199.761 cv
296.714 200.968 294.944 201.718 292.982 201.718 cv
291.02 201.718 289.25 200.968 287.972 199.761 cv
286.694 198.552 285.912 196.898 285.911 195.068 cv
285.912 193.239 286.694 191.585 287.972 190.376 cv
289.25 189.169 291.02 188.418 292.982 188.418 cv
294.944 188.418 296.714 189.169 297.991 190.376 cv
299.269 191.584 300.051 193.239 300.052 195.068 cv
300.552 195.068 li
301.052 195.068 li
301.052 192.949 300.14 191.029 298.678 189.649 cv
297.217 188.268 295.201 187.418 292.982 187.418 cv
290.763 187.418 288.747 188.268 287.285 189.649 cv
285.823 191.028 284.911 192.949 284.911 195.068 cv
284.911 197.188 285.823 199.108 287.285 200.488 cv
288.747 201.869 290.763 202.718 292.982 202.718 cv
295.201 202.718 297.217 201.868 298.678 200.488 cv
300.14 199.108 301.052 197.188 301.052 195.068 cv
300.552 195.068 li
cp
f
263.542 178.526 mo
263.042 178.526 li
263.042 180.355 262.259 182.009 260.981 183.217 cv
259.703 184.424 257.933 185.175 255.971 185.175 cv
254.009 185.175 252.24 184.424 250.962 183.217 cv
249.684 182.009 248.902 180.355 248.901 178.526 cv
248.902 176.697 249.684 175.042 250.962 173.834 cv
252.24 172.627 254.009 171.876 255.971 171.876 cv
257.933 171.876 259.703 172.627 260.981 173.834 cv
262.259 175.042 263.042 176.697 263.042 178.526 cv
263.542 178.526 li
264.042 178.526 li
264.042 176.406 263.13 174.486 261.668 173.107 cv
260.206 171.726 258.19 170.876 255.971 170.876 cv
253.752 170.876 251.737 171.726 250.275 173.107 cv
248.813 174.486 247.901 176.406 247.901 178.526 cv
247.901 180.645 248.813 182.565 250.275 183.944 cv
251.737 185.325 253.752 186.175 255.971 186.175 cv
258.19 186.175 260.206 185.325 261.668 183.944 cv
263.13 182.565 264.042 180.645 264.042 178.526 cv
263.542 178.526 li
cp
f
281.206 178.526 mo
280.706 178.526 li
280.706 180.355 279.923 182.009 278.645 183.217 cv
277.367 184.424 275.598 185.175 273.636 185.175 cv
271.674 185.175 269.904 184.424 268.626 183.217 cv
267.348 182.009 266.566 180.355 266.565 178.526 cv
266.566 176.697 267.348 175.042 268.626 173.834 cv
269.904 172.627 271.674 171.876 273.636 171.876 cv
275.598 171.876 277.367 172.627 278.645 173.834 cv
279.923 175.042 280.706 176.697 280.706 178.526 cv
281.206 178.526 li
281.706 178.526 li
281.706 176.406 280.794 174.486 279.332 173.107 cv
277.87 171.726 275.855 170.876 273.636 170.876 cv
271.417 170.876 269.401 171.726 267.94 173.107 cv
266.478 174.486 265.565 176.406 265.565 178.526 cv
265.565 180.645 266.478 182.565 267.94 183.944 cv
269.401 185.325 271.417 186.175 273.636 186.175 cv
275.854 186.175 277.87 185.325 279.332 183.944 cv
280.794 182.565 281.706 180.645 281.706 178.526 cv
281.206 178.526 li
cp
f
300.552 178.526 mo
300.052 178.526 li
300.051 180.355 299.269 182.009 297.992 183.217 cv
296.714 184.424 294.944 185.175 292.982 185.175 cv
291.02 185.175 289.25 184.424 287.972 183.217 cv
286.694 182.009 285.912 180.355 285.911 178.526 cv
285.912 176.697 286.694 175.042 287.972 173.834 cv
289.25 172.627 291.02 171.876 292.982 171.876 cv
294.944 171.876 296.714 172.627 297.991 173.834 cv
299.269 175.042 300.051 176.697 300.052 178.526 cv
300.552 178.526 li
301.052 178.526 li
301.052 176.406 300.14 174.486 298.678 173.107 cv
297.217 171.726 295.201 170.876 292.982 170.876 cv
290.763 170.876 288.747 171.726 287.285 173.107 cv
285.823 174.486 284.911 176.406 284.911 178.526 cv
284.911 180.645 285.823 182.565 287.285 183.944 cv
288.747 185.325 290.763 186.175 292.982 186.175 cv
295.201 186.175 297.217 185.325 298.678 183.944 cv
300.14 182.565 301.052 180.645 301.052 178.526 cv
300.552 178.526 li
cp
f
263.542 212.157 mo
263.042 212.157 li
263.042 213.986 262.259 215.641 260.981 216.849 cv
259.703 218.056 257.933 218.807 255.971 218.807 cv
254.009 218.807 252.24 218.056 250.962 216.849 cv
249.684 215.641 248.902 213.986 248.901 212.157 cv
248.902 210.328 249.684 208.673 250.962 207.464 cv
252.24 206.258 254.009 205.507 255.971 205.507 cv
257.933 205.507 259.703 206.258 260.981 207.465 cv
262.259 208.673 263.042 210.328 263.042 212.157 cv
263.542 212.157 li
264.042 212.157 li
264.042 210.037 263.13 208.117 261.668 206.737 cv
260.206 205.357 258.19 204.507 255.971 204.507 cv
253.752 204.507 251.737 205.357 250.275 206.738 cv
248.813 208.117 247.901 210.037 247.901 212.157 cv
247.901 214.276 248.813 216.197 250.275 217.576 cv
251.737 218.957 253.752 219.807 255.971 219.807 cv
258.19 219.807 260.206 218.957 261.668 217.576 cv
263.13 216.197 264.042 214.276 264.042 212.157 cv
263.542 212.157 li
cp
f
281.206 212.157 mo
280.706 212.157 li
280.706 213.986 279.923 215.641 278.645 216.849 cv
277.367 218.056 275.598 218.807 273.636 218.807 cv
271.674 218.807 269.904 218.056 268.626 216.849 cv
267.348 215.641 266.566 213.986 266.565 212.157 cv
266.566 210.328 267.348 208.673 268.626 207.465 cv
269.904 206.258 271.674 205.507 273.636 205.507 cv
275.598 205.507 277.367 206.258 278.645 207.465 cv
279.923 208.673 280.706 210.328 280.706 212.157 cv
281.206 212.157 li
281.706 212.157 li
281.706 210.037 280.794 208.117 279.332 206.738 cv
277.87 205.357 275.855 204.507 273.636 204.507 cv
271.417 204.507 269.401 205.357 267.94 206.738 cv
266.478 208.117 265.565 210.037 265.565 212.157 cv
265.565 214.276 266.478 216.197 267.94 217.576 cv
269.401 218.957 271.417 219.807 273.636 219.807 cv
275.854 219.807 277.87 218.957 279.332 217.576 cv
280.794 216.197 281.706 214.276 281.706 212.157 cv
281.206 212.157 li
cp
f
300.552 212.157 mo
300.052 212.157 li
300.051 213.986 299.269 215.641 297.991 216.849 cv
296.714 218.056 294.944 218.807 292.982 218.807 cv
291.02 218.807 289.25 218.056 287.972 216.849 cv
286.694 215.641 285.912 213.986 285.911 212.157 cv
285.912 210.328 286.694 208.673 287.972 207.465 cv
289.25 206.258 291.02 205.507 292.982 205.507 cv
294.944 205.507 296.714 206.258 297.991 207.464 cv
299.269 208.673 300.051 210.327 300.052 212.157 cv
300.552 212.157 li
301.052 212.157 li
301.052 210.037 300.14 208.117 298.678 206.738 cv
297.217 205.357 295.201 204.507 292.982 204.507 cv
290.763 204.507 288.747 205.357 287.285 206.737 cv
285.823 208.117 284.911 210.037 284.911 212.157 cv
284.911 214.276 285.823 216.197 287.285 217.576 cv
288.747 218.957 290.763 219.807 292.982 219.807 cv
295.201 219.807 297.217 218.957 298.678 217.576 cv
300.14 216.197 301.052 214.276 301.052 212.157 cv
300.552 212.157 li
cp
f
263.542 247.378 mo
263.042 247.378 li
263.042 249.208 262.259 250.862 260.981 252.071 cv
259.703 253.278 257.933 254.028 255.971 254.028 cv
254.009 254.028 252.24 253.278 250.962 252.071 cv
249.684 250.862 248.902 249.208 248.901 247.378 cv
248.902 245.549 249.684 243.895 250.962 242.687 cv
252.24 241.48 254.009 240.729 255.971 240.729 cv
257.933 240.729 259.703 241.48 260.981 242.687 cv
262.259 243.895 263.042 245.549 263.042 247.378 cv
263.542 247.378 li
264.042 247.378 li
264.042 245.259 263.13 243.339 261.668 241.96 cv
260.206 240.579 258.19 239.729 255.971 239.729 cv
253.752 239.729 251.737 240.579 250.275 241.96 cv
248.813 243.339 247.901 245.259 247.901 247.378 cv
247.901 249.498 248.813 251.418 250.275 252.798 cv
251.737 254.178 253.752 255.028 255.971 255.028 cv
258.19 255.028 260.206 254.178 261.668 252.798 cv
263.13 251.418 264.042 249.498 264.042 247.378 cv
263.542 247.378 li
cp
f
281.206 247.378 mo
280.706 247.378 li
280.706 249.208 279.923 250.862 278.645 252.071 cv
277.367 253.278 275.598 254.028 273.636 254.028 cv
271.674 254.028 269.904 253.278 268.626 252.071 cv
267.348 250.862 266.566 249.208 266.565 247.378 cv
266.566 245.549 267.348 243.895 268.626 242.687 cv
269.904 241.48 271.674 240.729 273.636 240.729 cv
275.598 240.729 277.367 241.48 278.645 242.687 cv
279.923 243.895 280.706 245.549 280.706 247.378 cv
281.206 247.378 li
281.706 247.378 li
281.706 245.259 280.794 243.339 279.332 241.96 cv
277.87 240.579 275.854 239.729 273.636 239.729 cv
271.417 239.729 269.401 240.579 267.94 241.96 cv
266.478 243.339 265.565 245.259 265.565 247.378 cv
265.565 249.498 266.478 251.418 267.94 252.798 cv
269.401 254.178 271.417 255.028 273.636 255.028 cv
275.855 255.028 277.87 254.178 279.332 252.798 cv
280.794 251.418 281.706 249.498 281.706 247.378 cv
281.206 247.378 li
cp
f
300.552 247.378 mo
300.052 247.378 li
300.051 249.208 299.269 250.862 297.991 252.071 cv
296.714 253.278 294.944 254.028 292.982 254.028 cv
291.02 254.028 289.25 253.278 287.972 252.071 cv
286.694 250.862 285.912 249.208 285.911 247.378 cv
285.912 245.549 286.694 243.895 287.972 242.687 cv
289.25 241.48 291.02 240.729 292.982 240.729 cv
294.944 240.729 296.714 241.48 297.992 242.687 cv
299.269 243.895 300.051 245.549 300.052 247.378 cv
300.552 247.378 li
301.052 247.378 li
301.052 245.259 300.14 243.339 298.678 241.96 cv
297.217 240.579 295.201 239.729 292.982 239.729 cv
290.763 239.729 288.747 240.579 287.285 241.96 cv
285.823 243.339 284.911 245.259 284.911 247.378 cv
284.911 249.498 285.823 251.418 287.285 252.798 cv
288.747 254.178 290.763 255.028 292.982 255.028 cv
295.201 255.028 297.217 254.178 298.678 252.798 cv
300.14 251.418 301.052 249.498 301.052 247.378 cv
300.552 247.378 li
cp
f
263.542 230.835 mo
263.042 230.835 li
263.042 232.665 262.259 234.32 260.981 235.528 cv
259.703 236.735 257.933 237.485 255.971 237.485 cv
254.009 237.485 252.24 236.735 250.962 235.528 cv
249.684 234.32 248.902 232.665 248.901 230.835 cv
248.902 229.007 249.684 227.352 250.962 226.144 cv
252.24 224.937 254.009 224.187 255.971 224.187 cv
257.933 224.187 259.703 224.937 260.981 226.144 cv
262.259 227.352 263.042 229.007 263.042 230.835 cv
263.542 230.835 li
264.042 230.835 li
264.042 228.716 263.13 226.796 261.668 225.417 cv
260.206 224.036 258.19 223.187 255.971 223.187 cv
253.752 223.187 251.737 224.036 250.275 225.417 cv
248.813 226.796 247.901 228.716 247.901 230.835 cv
247.901 232.955 248.813 234.876 250.275 236.255 cv
251.737 237.636 253.752 238.485 255.971 238.485 cv
258.19 238.485 260.206 237.636 261.668 236.255 cv
263.13 234.876 264.042 232.955 264.042 230.835 cv
263.542 230.835 li
cp
f
281.206 230.835 mo
280.706 230.835 li
280.706 232.665 279.923 234.32 278.645 235.528 cv
277.367 236.735 275.598 237.485 273.636 237.485 cv
271.674 237.485 269.904 236.735 268.626 235.528 cv
267.348 234.32 266.566 232.665 266.565 230.835 cv
266.566 229.007 267.348 227.352 268.626 226.144 cv
269.904 224.937 271.674 224.187 273.636 224.187 cv
275.598 224.187 277.367 224.937 278.645 226.144 cv
279.923 227.352 280.706 229.007 280.706 230.835 cv
281.206 230.835 li
281.706 230.835 li
281.706 228.716 280.794 226.796 279.332 225.417 cv
277.87 224.036 275.855 223.187 273.636 223.187 cv
271.417 223.187 269.401 224.036 267.94 225.417 cv
266.478 226.796 265.565 228.716 265.565 230.835 cv
265.565 232.955 266.478 234.876 267.94 236.255 cv
269.401 237.636 271.417 238.485 273.636 238.485 cv
275.854 238.485 277.87 237.636 279.332 236.255 cv
280.794 234.876 281.706 232.955 281.706 230.835 cv
281.206 230.835 li
cp
f
300.552 230.835 mo
300.052 230.835 li
300.051 232.665 299.269 234.32 297.991 235.528 cv
296.714 236.735 294.944 237.485 292.982 237.485 cv
291.02 237.485 289.25 236.735 287.972 235.528 cv
286.694 234.32 285.912 232.665 285.911 230.835 cv
285.912 229.007 286.694 227.352 287.972 226.144 cv
289.25 224.937 291.02 224.187 292.982 224.187 cv
294.944 224.187 296.714 224.937 297.991 226.144 cv
299.269 227.352 300.051 229.007 300.052 230.835 cv
300.552 230.835 li
301.052 230.835 li
301.052 228.716 300.14 226.796 298.678 225.417 cv
297.217 224.036 295.201 223.187 292.982 223.187 cv
290.763 223.187 288.747 224.036 287.285 225.417 cv
285.823 226.796 284.911 228.716 284.911 230.835 cv
284.911 232.955 285.823 234.876 287.285 236.255 cv
288.747 237.636 290.763 238.485 292.982 238.485 cv
295.201 238.485 297.217 237.636 298.678 236.255 cv
300.14 234.875 301.052 232.955 301.052 230.835 cv
300.552 230.835 li
cp
f
263.542 264.467 mo
263.042 264.467 li
263.042 266.296 262.259 267.951 260.981 269.159 cv
259.703 270.366 257.933 271.117 255.971 271.117 cv
254.009 271.117 252.24 270.366 250.962 269.159 cv
249.684 267.951 248.902 266.296 248.901 264.467 cv
248.902 262.637 249.684 260.983 250.962 259.774 cv
252.24 258.567 254.009 257.817 255.971 257.817 cv
257.933 257.817 259.703 258.567 260.981 259.774 cv
262.259 260.983 263.042 262.637 263.042 264.467 cv
263.542 264.467 li
264.042 264.467 li
264.042 262.347 263.13 260.427 261.668 259.047 cv
260.206 257.667 258.19 256.817 255.971 256.817 cv
253.752 256.817 251.737 257.667 250.275 259.047 cv
248.813 260.427 247.901 262.347 247.901 264.467 cv
247.901 266.587 248.813 268.507 250.275 269.886 cv
251.737 271.267 253.752 272.117 255.971 272.117 cv
258.19 272.117 260.206 271.267 261.668 269.886 cv
263.13 268.507 264.042 266.587 264.042 264.467 cv
263.542 264.467 li
cp
f
281.206 264.467 mo
280.706 264.467 li
280.706 266.296 279.923 267.951 278.645 269.159 cv
277.367 270.366 275.598 271.117 273.636 271.117 cv
271.674 271.117 269.904 270.366 268.626 269.159 cv
267.348 267.951 266.566 266.296 266.565 264.467 cv
266.566 262.637 267.348 260.983 268.626 259.774 cv
269.904 258.567 271.674 257.817 273.636 257.817 cv
275.598 257.817 277.367 258.567 278.645 259.774 cv
279.923 260.983 280.706 262.637 280.706 264.467 cv
281.206 264.467 li
281.706 264.467 li
281.706 262.347 280.794 260.427 279.332 259.047 cv
277.87 257.667 275.854 256.817 273.636 256.817 cv
271.417 256.817 269.401 257.667 267.94 259.047 cv
266.478 260.427 265.565 262.347 265.565 264.467 cv
265.565 266.587 266.478 268.507 267.94 269.886 cv
269.401 271.267 271.417 272.117 273.636 272.117 cv
275.855 272.117 277.87 271.267 279.332 269.886 cv
280.794 268.507 281.706 266.587 281.706 264.467 cv
281.206 264.467 li
cp
f
300.552 264.467 mo
300.052 264.467 li
300.051 266.296 299.269 267.951 297.991 269.159 cv
296.714 270.366 294.944 271.117 292.982 271.117 cv
291.02 271.117 289.25 270.366 287.972 269.159 cv
286.694 267.951 285.912 266.296 285.911 264.467 cv
285.912 262.637 286.694 260.983 287.972 259.774 cv
289.25 258.567 291.02 257.817 292.982 257.817 cv
294.944 257.817 296.714 258.567 297.991 259.774 cv
299.269 260.983 300.051 262.637 300.052 264.467 cv
300.552 264.467 li
301.052 264.467 li
301.052 262.347 300.14 260.427 298.678 259.047 cv
297.217 257.667 295.201 256.817 292.982 256.817 cv
290.763 256.817 288.747 257.667 287.285 259.047 cv
285.823 260.427 284.911 262.347 284.911 264.467 cv
284.911 266.587 285.823 268.507 287.285 269.886 cv
288.747 271.267 290.763 272.117 292.982 272.117 cv
295.201 272.117 297.217 271.267 298.678 269.886 cv
300.14 268.507 301.052 266.586 301.052 264.467 cv
300.552 264.467 li
cp
f
341.469 161.173 mo
340.969 161.173 li
340.968 163.002 340.186 164.657 338.908 165.865 cv
337.629 167.072 335.86 167.823 333.898 167.823 cv
331.936 167.823 330.166 167.072 328.888 165.865 cv
327.61 164.657 326.828 163.002 326.827 161.173 cv
326.828 159.344 327.61 157.689 328.888 156.481 cv
330.166 155.274 331.936 154.523 333.898 154.523 cv
335.86 154.523 337.629 155.274 338.908 156.481 cv
340.186 157.689 340.968 159.344 340.969 161.173 cv
341.469 161.173 li
341.969 161.173 li
341.969 159.053 341.056 157.133 339.594 155.754 cv
338.132 154.373 336.117 153.523 333.898 153.523 cv
331.679 153.523 329.663 154.373 328.201 155.754 cv
326.739 157.133 325.827 159.053 325.827 161.173 cv
325.827 163.293 326.739 165.213 328.201 166.592 cv
329.663 167.973 331.679 168.823 333.898 168.823 cv
336.117 168.823 338.132 167.973 339.594 166.592 cv
341.056 165.213 341.969 163.293 341.969 161.173 cv
341.469 161.173 li
cp
f
359.133 161.173 mo
358.633 161.173 li
358.632 163.002 357.85 164.657 356.572 165.865 cv
355.293 167.072 353.524 167.823 351.563 167.823 cv
349.6 167.823 347.831 167.072 346.553 165.865 cv
345.275 164.657 344.493 163.002 344.492 161.173 cv
344.493 159.344 345.275 157.689 346.553 156.481 cv
347.831 155.274 349.6 154.523 351.563 154.523 cv
353.524 154.523 355.293 155.274 356.572 156.481 cv
357.85 157.689 358.632 159.344 358.633 161.173 cv
359.133 161.173 li
359.633 161.173 li
359.633 159.053 358.72 157.133 357.258 155.754 cv
355.796 154.373 353.781 153.523 351.563 153.523 cv
349.343 153.523 347.328 154.373 345.866 155.754 cv
344.404 157.133 343.492 159.053 343.492 161.173 cv
343.492 163.293 344.404 165.213 345.866 166.592 cv
347.328 167.973 349.343 168.823 351.563 168.823 cv
353.781 168.823 355.796 167.973 357.258 166.592 cv
358.72 165.213 359.633 163.293 359.633 161.173 cv
359.133 161.173 li
cp
f
378.479 161.173 mo
377.979 161.173 li
377.978 163.002 377.196 164.657 375.918 165.865 cv
374.64 167.072 372.871 167.823 370.908 167.823 cv
368.946 167.823 367.176 167.072 365.898 165.865 cv
364.62 164.657 363.838 163.002 363.838 161.173 cv
363.838 159.344 364.62 157.689 365.898 156.481 cv
367.176 155.274 368.946 154.523 370.908 154.523 cv
372.871 154.523 374.64 155.274 375.918 156.481 cv
377.196 157.689 377.978 159.344 377.979 161.173 cv
378.479 161.173 li
378.978 161.173 li
378.979 159.053 378.067 157.133 376.605 155.754 cv
375.143 154.373 373.127 153.523 370.908 153.523 cv
368.689 153.523 366.673 154.373 365.212 155.754 cv
363.75 157.133 362.837 159.053 362.838 161.173 cv
362.837 163.293 363.75 165.213 365.212 166.592 cv
366.673 167.973 368.689 168.823 370.908 168.823 cv
373.127 168.823 375.143 167.973 376.605 166.592 cv
378.067 165.213 378.979 163.293 378.978 161.173 cv
378.479 161.173 li
cp
f
341.469 195.068 mo
340.969 195.068 li
340.968 196.898 340.186 198.552 338.908 199.761 cv
337.629 200.968 335.86 201.718 333.898 201.718 cv
331.936 201.718 330.166 200.968 328.888 199.761 cv
327.61 198.552 326.828 196.898 326.827 195.068 cv
326.828 193.239 327.61 191.585 328.888 190.376 cv
330.166 189.169 331.936 188.418 333.898 188.418 cv
335.86 188.418 337.629 189.169 338.908 190.376 cv
340.186 191.585 340.968 193.239 340.969 195.068 cv
341.469 195.068 li
341.969 195.068 li
341.969 192.949 341.056 191.028 339.594 189.649 cv
338.132 188.268 336.117 187.418 333.898 187.418 cv
331.679 187.418 329.663 188.268 328.201 189.649 cv
326.739 191.028 325.827 192.949 325.827 195.068 cv
325.827 197.188 326.739 199.108 328.201 200.488 cv
329.663 201.869 331.679 202.718 333.898 202.718 cv
336.117 202.718 338.132 201.868 339.594 200.488 cv
341.056 199.108 341.969 197.188 341.969 195.068 cv
341.469 195.068 li
cp
f
359.133 195.068 mo
358.633 195.068 li
358.632 196.898 357.85 198.552 356.572 199.761 cv
355.293 200.968 353.524 201.718 351.563 201.718 cv
349.6 201.718 347.831 200.968 346.553 199.761 cv
345.275 198.552 344.493 196.898 344.492 195.068 cv
344.493 193.239 345.275 191.584 346.553 190.376 cv
347.831 189.169 349.6 188.418 351.563 188.418 cv
353.524 188.418 355.293 189.169 356.572 190.376 cv
357.85 191.585 358.632 193.239 358.633 195.068 cv
359.133 195.068 li
359.633 195.068 li
359.633 192.949 358.72 191.028 357.258 189.649 cv
355.796 188.268 353.781 187.418 351.563 187.418 cv
349.343 187.418 347.328 188.268 345.866 189.649 cv
344.404 191.029 343.492 192.949 343.492 195.068 cv
343.492 197.188 344.404 199.108 345.866 200.488 cv
347.328 201.869 349.343 202.718 351.563 202.718 cv
353.781 202.718 355.796 201.868 357.258 200.488 cv
358.72 199.108 359.633 197.188 359.633 195.068 cv
359.133 195.068 li
cp
f
378.479 195.068 mo
377.979 195.068 li
377.978 196.898 377.196 198.552 375.918 199.761 cv
374.64 200.968 372.871 201.718 370.908 201.718 cv
368.946 201.718 367.176 200.968 365.898 199.761 cv
364.62 198.552 363.838 196.898 363.838 195.068 cv
363.838 193.239 364.62 191.584 365.898 190.376 cv
367.176 189.169 368.946 188.418 370.908 188.418 cv
372.871 188.418 374.64 189.169 375.918 190.376 cv
377.196 191.584 377.978 193.239 377.979 195.068 cv
378.479 195.068 li
378.978 195.068 li
378.979 192.949 378.067 191.029 376.605 189.649 cv
375.143 188.268 373.127 187.418 370.908 187.418 cv
368.689 187.418 366.673 188.268 365.212 189.649 cv
363.75 191.029 362.837 192.949 362.838 195.068 cv
362.837 197.188 363.75 199.108 365.212 200.488 cv
366.673 201.869 368.689 202.718 370.908 202.718 cv
373.127 202.718 375.143 201.869 376.605 200.488 cv
378.067 199.108 378.979 197.188 378.978 195.068 cv
378.479 195.068 li
cp
f
341.469 178.526 mo
340.969 178.526 li
340.968 180.355 340.186 182.009 338.908 183.217 cv
337.629 184.424 335.86 185.175 333.898 185.175 cv
331.936 185.175 330.166 184.424 328.888 183.217 cv
327.61 182.009 326.828 180.355 326.827 178.526 cv
326.828 176.697 327.61 175.042 328.888 173.834 cv
330.166 172.627 331.936 171.876 333.898 171.876 cv
335.86 171.876 337.629 172.627 338.908 173.834 cv
340.186 175.042 340.968 176.697 340.969 178.526 cv
341.469 178.526 li
341.969 178.526 li
341.969 176.406 341.056 174.486 339.594 173.107 cv
338.132 171.726 336.117 170.876 333.898 170.876 cv
331.679 170.876 329.663 171.726 328.201 173.107 cv
326.739 174.486 325.827 176.406 325.827 178.526 cv
325.827 180.645 326.739 182.565 328.201 183.944 cv
329.663 185.325 331.679 186.175 333.898 186.175 cv
336.117 186.175 338.132 185.325 339.594 183.944 cv
341.056 182.565 341.969 180.645 341.969 178.526 cv
341.469 178.526 li
cp
f
359.133 178.526 mo
358.633 178.526 li
358.632 180.355 357.85 182.009 356.572 183.217 cv
355.293 184.424 353.524 185.175 351.563 185.175 cv
349.6 185.175 347.831 184.424 346.553 183.217 cv
345.275 182.009 344.493 180.355 344.492 178.526 cv
344.493 176.697 345.275 175.042 346.553 173.834 cv
347.831 172.627 349.6 171.876 351.563 171.876 cv
353.524 171.876 355.293 172.627 356.572 173.834 cv
357.85 175.042 358.632 176.697 358.633 178.526 cv
359.133 178.526 li
359.633 178.526 li
359.633 176.406 358.72 174.486 357.258 173.107 cv
355.796 171.726 353.781 170.876 351.563 170.876 cv
349.343 170.876 347.328 171.726 345.866 173.107 cv
344.404 174.486 343.492 176.406 343.492 178.526 cv
343.492 180.645 344.404 182.565 345.866 183.944 cv
347.328 185.325 349.343 186.175 351.563 186.175 cv
353.781 186.175 355.796 185.325 357.258 183.944 cv
358.72 182.565 359.633 180.645 359.633 178.526 cv
359.133 178.526 li
cp
f
378.479 178.526 mo
377.978 178.526 li
377.978 180.355 377.196 182.009 375.918 183.217 cv
374.64 184.424 372.871 185.175 370.908 185.175 cv
368.946 185.175 367.176 184.424 365.898 183.217 cv
364.62 182.009 363.838 180.355 363.838 178.526 cv
363.838 176.697 364.62 175.042 365.898 173.834 cv
367.176 172.627 368.946 171.876 370.908 171.876 cv
372.871 171.876 374.64 172.627 375.918 173.834 cv
377.196 175.042 377.978 176.697 377.979 178.526 cv
378.479 178.526 li
378.978 178.526 li
378.979 176.406 378.067 174.486 376.605 173.107 cv
375.143 171.726 373.127 170.876 370.908 170.876 cv
368.689 170.876 366.673 171.726 365.212 173.107 cv
363.75 174.486 362.837 176.406 362.838 178.526 cv
362.837 180.645 363.75 182.565 365.212 183.944 cv
366.673 185.325 368.689 186.175 370.908 186.175 cv
373.127 186.175 375.143 185.325 376.605 183.944 cv
378.067 182.565 378.979 180.645 378.979 178.526 cv
378.479 178.526 li
cp
f
341.469 212.157 mo
340.969 212.157 li
340.968 213.986 340.186 215.641 338.908 216.849 cv
337.629 218.056 335.86 218.807 333.898 218.807 cv
331.936 218.807 330.166 218.056 328.888 216.849 cv
327.61 215.641 326.828 213.986 326.827 212.157 cv
326.828 210.328 327.61 208.673 328.888 207.465 cv
330.166 206.258 331.936 205.507 333.898 205.507 cv
335.86 205.507 337.629 206.258 338.908 207.465 cv
340.186 208.673 340.968 210.328 340.969 212.157 cv
341.469 212.157 li
341.969 212.157 li
341.969 210.037 341.056 208.117 339.594 206.737 cv
338.132 205.357 336.117 204.507 333.898 204.507 cv
331.679 204.507 329.663 205.357 328.201 206.737 cv
326.739 208.117 325.827 210.037 325.827 212.157 cv
325.827 214.276 326.739 216.197 328.201 217.576 cv
329.663 218.957 331.679 219.807 333.898 219.807 cv
336.117 219.807 338.132 218.957 339.594 217.576 cv
341.056 216.197 341.969 214.277 341.969 212.157 cv
341.469 212.157 li
cp
f
359.133 212.157 mo
358.633 212.157 li
358.632 213.986 357.85 215.641 356.572 216.849 cv
355.293 218.056 353.524 218.807 351.563 218.807 cv
349.6 218.807 347.831 218.056 346.553 216.849 cv
345.275 215.641 344.493 213.986 344.492 212.157 cv
344.493 210.327 345.275 208.673 346.553 207.464 cv
347.831 206.258 349.6 205.507 351.563 205.507 cv
353.524 205.507 355.293 206.258 356.572 207.465 cv
357.85 208.673 358.632 210.328 358.633 212.157 cv
359.133 212.157 li
359.633 212.157 li
359.633 210.037 358.72 208.117 357.258 206.737 cv
355.796 205.357 353.781 204.507 351.563 204.507 cv
349.343 204.507 347.328 205.357 345.866 206.738 cv
344.404 208.117 343.492 210.037 343.492 212.157 cv
343.492 214.276 344.404 216.197 345.866 217.576 cv
347.328 218.957 349.343 219.807 351.563 219.807 cv
353.781 219.807 355.796 218.957 357.258 217.576 cv
358.72 216.197 359.633 214.277 359.633 212.157 cv
359.133 212.157 li
cp
f
378.479 212.157 mo
377.979 212.157 li
377.978 213.986 377.196 215.641 375.918 216.849 cv
374.64 218.056 372.871 218.807 370.908 218.807 cv
368.946 218.807 367.176 218.056 365.898 216.849 cv
364.62 215.641 363.838 213.986 363.838 212.157 cv
363.838 210.327 364.62 208.673 365.898 207.464 cv
367.176 206.258 368.946 205.507 370.908 205.507 cv
372.871 205.507 374.64 206.258 375.918 207.464 cv
377.196 208.673 377.978 210.327 377.979 212.157 cv
378.479 212.157 li
378.978 212.157 li
378.979 210.037 378.067 208.117 376.605 206.738 cv
375.143 205.357 373.127 204.507 370.908 204.507 cv
368.689 204.507 366.673 205.357 365.212 206.738 cv
363.75 208.117 362.837 210.037 362.838 212.157 cv
362.837 214.276 363.75 216.197 365.212 217.576 cv
366.673 218.957 368.689 219.807 370.908 219.807 cv
373.127 219.807 375.143 218.957 376.605 217.576 cv
378.067 216.197 378.979 214.276 378.978 212.157 cv
378.479 212.157 li
cp
f
341.469 247.378 mo
340.969 247.378 li
340.968 249.208 340.186 250.862 338.908 252.071 cv
337.629 253.278 335.86 254.028 333.898 254.028 cv
331.936 254.028 330.166 253.278 328.888 252.071 cv
327.61 250.862 326.828 249.208 326.827 247.378 cv
326.828 245.549 327.61 243.895 328.888 242.687 cv
330.166 241.48 331.936 240.729 333.898 240.729 cv
335.86 240.729 337.629 241.48 338.908 242.687 cv
340.186 243.895 340.968 245.55 340.969 247.378 cv
341.469 247.378 li
341.969 247.378 li
341.969 245.259 341.056 243.339 339.594 241.96 cv
338.132 240.579 336.117 239.729 333.898 239.729 cv
331.679 239.729 329.663 240.579 328.201 241.96 cv
326.739 243.339 325.827 245.259 325.827 247.378 cv
325.827 249.498 326.739 251.418 328.201 252.798 cv
329.663 254.178 331.679 255.028 333.898 255.028 cv
336.117 255.028 338.132 254.178 339.594 252.798 cv
341.056 251.418 341.969 249.498 341.969 247.378 cv
341.469 247.378 li
cp
f
359.133 247.378 mo
358.633 247.378 li
358.632 249.208 357.85 250.862 356.572 252.071 cv
355.293 253.278 353.524 254.028 351.563 254.028 cv
349.6 254.028 347.831 253.278 346.553 252.071 cv
345.275 250.862 344.493 249.208 344.492 247.378 cv
344.493 245.549 345.275 243.895 346.553 242.687 cv
347.831 241.48 349.6 240.729 351.563 240.729 cv
353.524 240.729 355.293 241.48 356.572 242.687 cv
357.85 243.895 358.632 245.55 358.633 247.378 cv
359.133 247.378 li
359.633 247.378 li
359.633 245.259 358.72 243.339 357.258 241.96 cv
355.796 240.579 353.781 239.729 351.563 239.729 cv
349.343 239.729 347.328 240.579 345.866 241.96 cv
344.404 243.339 343.492 245.259 343.492 247.378 cv
343.492 249.498 344.404 251.418 345.866 252.798 cv
347.328 254.178 349.343 255.028 351.563 255.028 cv
353.781 255.028 355.796 254.178 357.258 252.798 cv
358.72 251.418 359.633 249.498 359.633 247.378 cv
359.133 247.378 li
cp
f
378.479 247.378 mo
377.979 247.378 li
377.978 249.208 377.196 250.862 375.918 252.071 cv
374.64 253.278 372.871 254.028 370.908 254.028 cv
368.946 254.028 367.176 253.278 365.898 252.071 cv
364.62 250.862 363.838 249.208 363.838 247.378 cv
363.838 245.549 364.62 243.895 365.898 242.687 cv
367.176 241.48 368.946 240.729 370.908 240.729 cv
372.871 240.729 374.64 241.48 375.918 242.687 cv
377.196 243.895 377.978 245.549 377.978 247.378 cv
378.479 247.378 li
378.979 247.378 li
378.979 245.259 378.067 243.339 376.605 241.96 cv
375.143 240.579 373.127 239.729 370.908 239.729 cv
368.689 239.729 366.673 240.579 365.212 241.96 cv
363.75 243.339 362.837 245.259 362.838 247.378 cv
362.837 249.498 363.75 251.418 365.212 252.798 cv
366.673 254.178 368.689 255.028 370.908 255.028 cv
373.127 255.028 375.143 254.178 376.605 252.798 cv
378.067 251.418 378.979 249.498 378.978 247.378 cv
378.479 247.378 li
cp
f
341.469 230.835 mo
340.969 230.835 li
340.968 232.665 340.186 234.319 338.908 235.528 cv
337.629 236.735 335.86 237.485 333.898 237.485 cv
331.936 237.485 330.166 236.735 328.888 235.528 cv
327.61 234.32 326.828 232.665 326.827 230.835 cv
326.828 229.007 327.61 227.352 328.888 226.144 cv
330.166 224.937 331.936 224.187 333.898 224.187 cv
335.86 224.187 337.629 224.937 338.908 226.144 cv
340.186 227.352 340.968 229.007 340.969 230.835 cv
341.469 230.835 li
341.969 230.835 li
341.969 228.716 341.056 226.796 339.594 225.417 cv
338.132 224.036 336.117 223.187 333.898 223.187 cv
331.679 223.187 329.663 224.036 328.201 225.417 cv
326.739 226.796 325.827 228.716 325.827 230.835 cv
325.827 232.955 326.739 234.876 328.201 236.255 cv
329.663 237.636 331.679 238.485 333.898 238.485 cv
336.117 238.485 338.132 237.636 339.594 236.255 cv
341.056 234.876 341.969 232.955 341.969 230.835 cv
341.469 230.835 li
cp
f
359.133 230.835 mo
358.633 230.835 li
358.632 232.665 357.85 234.319 356.572 235.528 cv
355.293 236.735 353.524 237.485 351.563 237.485 cv
349.6 237.485 347.831 236.735 346.553 235.528 cv
345.275 234.32 344.493 232.665 344.492 230.835 cv
344.493 229.007 345.275 227.352 346.553 226.144 cv
347.831 224.937 349.6 224.187 351.563 224.187 cv
353.524 224.187 355.293 224.937 356.572 226.144 cv
357.85 227.352 358.632 229.007 358.633 230.835 cv
359.133 230.835 li
359.633 230.835 li
359.633 228.716 358.72 226.796 357.258 225.417 cv
355.796 224.036 353.781 223.187 351.563 223.187 cv
349.343 223.187 347.328 224.036 345.866 225.417 cv
344.404 226.796 343.492 228.716 343.492 230.835 cv
343.492 232.955 344.404 234.875 345.866 236.255 cv
347.328 237.636 349.343 238.485 351.563 238.485 cv
353.781 238.485 355.796 237.636 357.258 236.255 cv
358.72 234.876 359.633 232.955 359.633 230.835 cv
359.133 230.835 li
cp
f
378.479 230.835 mo
377.979 230.835 li
377.978 232.665 377.196 234.32 375.918 235.528 cv
374.64 236.735 372.871 237.485 370.908 237.485 cv
368.946 237.485 367.176 236.735 365.898 235.528 cv
364.62 234.32 363.838 232.665 363.838 230.835 cv
363.838 229.007 364.62 227.352 365.898 226.144 cv
367.176 224.937 368.946 224.187 370.908 224.187 cv
372.871 224.187 374.64 224.937 375.918 226.144 cv
377.196 227.352 377.978 229.007 377.978 230.835 cv
378.479 230.835 li
378.979 230.835 li
378.979 228.716 378.067 226.796 376.605 225.417 cv
375.143 224.036 373.127 223.187 370.908 223.187 cv
368.689 223.187 366.673 224.036 365.212 225.417 cv
363.75 226.796 362.837 228.716 362.838 230.835 cv
362.837 232.955 363.75 234.875 365.212 236.255 cv
366.673 237.636 368.689 238.485 370.908 238.485 cv
373.127 238.485 375.143 237.636 376.605 236.255 cv
378.067 234.875 378.979 232.955 378.978 230.835 cv
378.479 230.835 li
cp
f
341.469 264.467 mo
340.969 264.467 li
340.968 266.296 340.186 267.951 338.908 269.159 cv
337.629 270.366 335.86 271.117 333.898 271.117 cv
331.936 271.117 330.166 270.366 328.888 269.159 cv
327.61 267.951 326.828 266.296 326.827 264.467 cv
326.828 262.637 327.61 260.983 328.888 259.774 cv
330.166 258.567 331.936 257.817 333.898 257.817 cv
335.86 257.817 337.629 258.567 338.908 259.774 cv
340.186 260.983 340.968 262.637 340.969 264.467 cv
341.469 264.467 li
341.969 264.467 li
341.969 262.347 341.056 260.427 339.594 259.047 cv
338.132 257.667 336.117 256.817 333.898 256.817 cv
331.679 256.817 329.663 257.667 328.201 259.047 cv
326.739 260.427 325.827 262.347 325.827 264.467 cv
325.827 266.587 326.739 268.507 328.201 269.886 cv
329.663 271.267 331.679 272.117 333.898 272.117 cv
336.117 272.117 338.132 271.267 339.594 269.886 cv
341.056 268.507 341.969 266.587 341.969 264.467 cv
341.469 264.467 li
cp
f
359.133 264.467 mo
358.633 264.467 li
358.632 266.296 357.85 267.951 356.572 269.159 cv
355.293 270.366 353.524 271.117 351.563 271.117 cv
349.6 271.117 347.831 270.366 346.553 269.159 cv
345.275 267.951 344.493 266.296 344.492 264.467 cv
344.493 262.637 345.275 260.983 346.553 259.774 cv
347.831 258.567 349.6 257.817 351.563 257.817 cv
353.524 257.817 355.293 258.567 356.572 259.774 cv
357.85 260.983 358.632 262.637 358.633 264.467 cv
359.133 264.467 li
359.633 264.467 li
359.633 262.347 358.72 260.427 357.258 259.047 cv
355.796 257.667 353.781 256.817 351.563 256.817 cv
349.343 256.817 347.328 257.667 345.866 259.047 cv
344.404 260.427 343.492 262.347 343.492 264.467 cv
343.492 266.586 344.404 268.507 345.866 269.886 cv
347.328 271.267 349.343 272.117 351.563 272.117 cv
353.781 272.117 355.796 271.267 357.258 269.886 cv
358.72 268.507 359.633 266.587 359.633 264.467 cv
359.133 264.467 li
cp
f
378.479 264.467 mo
377.979 264.467 li
377.978 266.296 377.196 267.951 375.918 269.159 cv
374.64 270.366 372.871 271.117 370.908 271.117 cv
368.946 271.117 367.176 270.366 365.898 269.159 cv
364.62 267.951 363.838 266.296 363.838 264.467 cv
363.838 262.637 364.62 260.983 365.898 259.774 cv
367.176 258.567 368.946 257.817 370.908 257.817 cv
372.871 257.817 374.64 258.567 375.918 259.774 cv
377.196 260.983 377.978 262.637 377.979 264.467 cv
378.479 264.467 li
378.978 264.467 li
378.979 262.347 378.067 260.427 376.605 259.047 cv
375.143 257.667 373.127 256.817 370.908 256.817 cv
368.689 256.817 366.673 257.667 365.212 259.047 cv
363.75 260.427 362.837 262.347 362.838 264.467 cv
362.837 266.586 363.75 268.507 365.212 269.886 cv
366.673 271.267 368.689 272.117 370.908 272.117 cv
373.127 272.117 375.143 271.267 376.605 269.886 cv
378.067 268.507 378.979 266.586 378.978 264.467 cv
378.479 264.467 li
cp
f
grestore
1 0 0 0 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMV+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B6079F6D1B1A6F2E268C38C77043D3A63ADE72673FCA38C6D438E312DDEC08954CC05E57F32968FEE1A2577F241D8EFA51F017CB226260C9C2C16C1F23A2277D353C1254870F4E35BDB8453BD7478D0A93C3277435D8ACBE12175360DFF06140A517CB70D2AC45A62775EB3A02A78B48CAFC88244B3C0E956BAACF680327060760F05D2B15A5425468A217A15FF5D7D20007E1D8468B7F87EE386BC2FFAA838D58001C42778BC90D935E8376BEFDFFE44ED2F57D18218C26FF1625C01B5E9CEA8256449BFF5FCCF31EFAA31C9618AF78090F> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMV+HelveticaNeue /Encoding getdup 67 /C putpop%ADOEndSubsetFont
/GQKSMV+HelveticaNeue*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef /slash /.notdef /one 8{/.notdef}rp /colon 6{/.notdef}rp /A /B /C /D 3{/.notdef}rp /H /I 3{/.notdef}rp /M /N /.notdef /P /.notdef /R /S /T /.notdef /V 10{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]GQKSMV+HelveticaNeue nfGQKSMV+HelveticaNeue*1 [10.0938 -1.23614e-15 -1.23614e-15 -10.0938 0 0 ]msf270.832 151.219 mo(C)sh278.13 151.219 mo(l)sh280.431 151.219 mo(a)sh285.952 151.219 mo(s)sh291.13 151.219 mo(s )[5.04688 0 ]xsh298.983 151.219 mo(I)sh301.638 151.219 mo(V )[6.16699 0 ]xsh310.611 151.219 mo(d)sh316.646 151.219 mo(a )[5.4209 0 ]xsh324.873 151.219 mo(N)sh332.231 151.219 mo(e)sh337.753 151.219 mo(u)sh343.436 151.219 mo(r)sh346.847 151.219 mo(o)sh352.711 151.219 mo(n)sh358.384 151.219 mo(s)shgsave
0 0 mo
395.667 0 li
395.667 514.334 li
0 514.334 li
0 0 li
clp
204.004 381.986 mo
205.829 382.803 li
206.238 381.89 li
204.412 381.073 li
cp
207.655 383.62 mo
209.48 384.437 li
209.889 383.524 li
208.063 382.707 li
cp
211.306 385.254 mo
213.131 386.071 li
213.54 385.158 li
211.714 384.341 li
cp
214.957 386.888 mo
216.782 387.705 li
217.191 386.792 li
215.365 385.975 li
cp
218.608 388.522 mo
220.433 389.339 li
220.842 388.426 li
219.016 387.609 li
cp
222.259 390.156 mo
224.084 390.973 li
224.493 390.06 li
222.667 389.243 li
cp
225.91 391.79 mo
227.735 392.607 li
228.144 391.694 li
226.318 390.877 li
cp
229.561 393.424 mo
231.386 394.241 li
231.795 393.328 li
229.969 392.511 li
cp
233.212 395.058 mo
235.037 395.875 li
235.446 394.962 li
233.62 394.145 li
cp
236.863 396.692 mo
238.688 397.509 li
239.097 396.596 li
237.271 395.779 li
cp
240.514 398.326 mo
242.339 399.143 li
242.748 398.23 li
240.922 397.413 li
cp
244.165 399.96 mo
245.991 400.777 li
246.399 399.864 li
244.573 399.047 li
cp
247.816 401.594 mo
249.642 402.411 li
250.05 401.498 li
248.225 400.681 li
cp
251.467 403.228 mo
253.293 404.045 li
253.701 403.132 li
251.876 402.315 li
cp
255.118 404.862 mo
256.944 405.679 li
257.352 404.766 li
255.527 403.949 li
cp
258.769 406.496 mo
260.595 407.313 li
261.003 406.4 li
259.178 405.583 li
cp
262.42 408.13 mo
264.246 408.947 li
264.654 408.034 li
262.829 407.217 li
cp
266.071 409.764 mo
266.684 410.038 li
267.093 409.126 li
266.48 408.851 li
cp
0 0 0 1 cmyk
f
204.343 365.915 mo
206.269 365.374 li
205.998 364.411 li
204.073 364.952 li
cp
208.194 364.833 mo
210.12 364.293 li
209.849 363.33 li
207.924 363.871 li
cp
212.045 363.752 mo
213.971 363.211 li
213.7 362.249 li
211.775 362.789 li
cp
215.896 362.671 mo
217.822 362.13 li
217.551 361.167 li
215.626 361.708 li
cp
219.747 361.589 mo
221.673 361.049 li
221.402 360.086 li
219.477 360.626 li
cp
223.598 360.508 mo
225.524 359.967 li
225.254 359.004 li
223.328 359.545 li
cp
227.449 359.426 mo
229.375 358.886 li
229.105 357.923 li
227.179 358.464 li
cp
231.3 358.345 mo
233.226 357.804 li
232.956 356.842 li
231.03 357.382 li
cp
235.152 357.264 mo
237.077 356.723 li
236.807 355.76 li
234.881 356.301 li
cp
239.003 356.182 mo
240.928 355.641 li
240.658 354.679 li
238.732 355.219 li
cp
242.854 355.101 mo
244.779 354.56 li
244.509 353.597 li
242.583 354.138 li
cp
246.705 354.019 mo
248.63 353.479 li
248.36 352.516 li
246.434 353.057 li
cp
250.556 352.938 mo
252.481 352.397 li
252.211 351.434 li
250.285 351.975 li
cp
254.407 351.856 mo
256.332 351.316 li
256.062 350.353 li
254.136 350.894 li
cp
258.258 350.775 mo
260.183 350.234 li
259.913 349.272 li
257.987 349.812 li
cp
262.109 349.694 mo
264.034 349.153 li
263.764 348.19 li
261.838 348.731 li
cp
265.96 348.612 mo
267.024 348.313 li
266.753 347.351 li
265.689 347.649 li
cp
f
236.743 282.217 mo
236.743 282.717 li
236.243 282.717 li
236.243 283.717 li
237.243 283.717 li
237.743 283.717 li
237.743 282.217 li
236.743 282.217 li
cp
f
234.197 282.717 mo
232.151 282.717 li
232.151 283.717 li
234.197 283.717 li
cp
230.105 282.717 mo
228.059 282.717 li
228.059 283.717 li
230.105 283.717 li
cp
226.013 282.717 mo
223.967 282.717 li
223.967 283.717 li
226.013 283.717 li
cp
221.921 282.717 mo
219.875 282.717 li
219.875 283.717 li
221.921 283.717 li
cp
217.829 282.717 mo
215.783 282.717 li
215.783 283.717 li
217.829 283.717 li
cp
213.737 282.717 mo
211.691 282.717 li
211.691 283.717 li
213.737 283.717 li
cp
209.645 282.717 mo
207.599 282.717 li
207.599 283.717 li
209.645 283.717 li
cp
205.553 282.717 mo
203.507 282.717 li
203.507 283.717 li
205.553 283.717 li
cp
201.461 282.717 mo
199.415 282.717 li
199.415 283.717 li
201.461 283.717 li
cp
197.369 282.717 mo
195.323 282.717 li
195.323 283.717 li
197.369 283.717 li
cp
193.277 282.717 mo
191.231 282.717 li
191.231 283.717 li
193.277 283.717 li
cp
189.185 282.717 mo
187.139 282.717 li
187.139 283.717 li
189.185 283.717 li
cp
185.093 282.717 mo
183.047 282.717 li
183.047 283.717 li
185.093 283.717 li
cp
181.001 282.717 mo
178.955 282.717 li
178.955 283.717 li
181.001 283.717 li
cp
176.909 282.717 mo
174.863 282.717 li
174.863 283.717 li
176.909 283.717 li
cp
172.817 282.717 mo
170.771 282.717 li
170.771 283.717 li
172.817 283.717 li
cp
168.725 282.717 mo
166.679 282.717 li
166.679 283.717 li
168.725 283.717 li
cp
164.633 282.717 mo
162.587 282.717 li
162.587 283.717 li
164.633 283.717 li
cp
f
160.541 282.717 mo
160.041 282.717 li
160.041 282.217 li
159.041 282.217 li
159.041 283.217 li
159.041 283.717 li
160.541 283.717 li
160.541 282.717 li
cp
f
160.041 280.106 mo
160.041 277.996 li
159.041 277.996 li
159.041 280.106 li
cp
160.041 275.886 mo
160.041 273.776 li
159.041 273.776 li
159.041 275.886 li
cp
160.041 271.666 mo
160.041 269.556 li
159.041 269.556 li
159.041 271.666 li
cp
160.041 267.446 mo
160.041 265.336 li
159.041 265.336 li
159.041 267.446 li
cp
160.041 263.226 mo
160.041 261.116 li
159.041 261.116 li
159.041 263.226 li
cp
160.041 259.006 mo
160.041 256.896 li
159.041 256.896 li
159.041 259.006 li
cp
160.041 254.786 mo
160.041 252.676 li
159.041 252.676 li
159.041 254.786 li
cp
160.041 250.566 mo
160.041 248.456 li
159.041 248.456 li
159.041 250.566 li
cp
f
160.041 246.339 mo
160.041 245.839 li
160.541 245.839 li
160.541 244.839 li
159.541 244.839 li
159.041 244.839 li
159.041 246.339 li
160.041 246.339 li
cp
f
162.586 245.839 mo
164.632 245.839 li
164.632 244.839 li
162.586 244.839 li
cp
166.678 245.839 mo
168.724 245.839 li
168.724 244.839 li
166.678 244.839 li
cp
170.77 245.839 mo
172.816 245.839 li
172.816 244.839 li
170.77 244.839 li
cp
174.862 245.839 mo
176.908 245.839 li
176.908 244.839 li
174.862 244.839 li
cp
178.954 245.839 mo
181 245.839 li
181 244.839 li
178.954 244.839 li
cp
183.046 245.839 mo
185.092 245.839 li
185.092 244.839 li
183.046 244.839 li
cp
187.138 245.839 mo
189.184 245.839 li
189.184 244.839 li
187.138 244.839 li
cp
191.23 245.839 mo
193.276 245.839 li
193.276 244.839 li
191.23 244.839 li
cp
195.322 245.839 mo
197.368 245.839 li
197.368 244.839 li
195.322 244.839 li
cp
199.414 245.839 mo
201.46 245.839 li
201.46 244.839 li
199.414 244.839 li
cp
203.506 245.839 mo
205.552 245.839 li
205.552 244.839 li
203.506 244.839 li
cp
207.598 245.839 mo
209.644 245.839 li
209.644 244.839 li
207.598 244.839 li
cp
211.69 245.839 mo
213.736 245.839 li
213.736 244.839 li
211.69 244.839 li
cp
215.782 245.839 mo
217.828 245.839 li
217.828 244.839 li
215.782 244.839 li
cp
219.874 245.839 mo
221.92 245.839 li
221.92 244.839 li
219.874 244.839 li
cp
223.966 245.839 mo
226.012 245.839 li
226.012 244.839 li
223.966 244.839 li
cp
228.058 245.839 mo
230.104 245.839 li
230.104 244.839 li
228.058 244.839 li
cp
232.15 245.839 mo
234.196 245.839 li
234.196 244.839 li
232.15 244.839 li
cp
f
236.243 245.839 mo
236.743 245.839 li
236.743 246.339 li
237.743 246.339 li
237.743 245.339 li
237.743 244.839 li
236.243 244.839 li
236.243 245.839 li
cp
f
236.743 248.45 mo
236.743 250.56 li
237.743 250.56 li
237.743 248.45 li
cp
236.743 252.67 mo
236.743 254.78 li
237.743 254.78 li
237.743 252.67 li
cp
236.743 256.89 mo
236.743 259 li
237.743 259 li
237.743 256.89 li
cp
236.743 261.11 mo
236.743 263.22 li
237.743 263.22 li
237.743 261.11 li
cp
236.743 265.33 mo
236.743 267.44 li
237.743 267.44 li
237.743 265.33 li
cp
236.743 269.55 mo
236.743 271.66 li
237.743 271.66 li
237.743 269.55 li
cp
236.743 273.77 mo
236.743 275.88 li
237.743 275.88 li
237.743 273.77 li
cp
236.743 277.99 mo
236.743 280.1 li
237.743 280.1 li
237.743 277.99 li
cp
f
281.373 274.216 mo
281.373 274.716 li
280.873 274.716 li
280.873 275.716 li
281.873 275.716 li
282.373 275.716 li
282.373 274.216 li
281.373 274.216 li
cp
f
278.772 274.716 mo
276.671 274.716 li
276.671 275.716 li
278.772 275.716 li
cp
274.57 274.716 mo
272.469 274.716 li
272.469 275.716 li
274.57 275.716 li
cp
270.368 274.716 mo
268.267 274.716 li
268.267 275.716 li
270.368 275.716 li
cp
266.166 274.716 mo
264.065 274.716 li
264.065 275.716 li
266.166 275.716 li
cp
261.964 274.716 mo
259.863 274.716 li
259.863 275.716 li
261.964 275.716 li
cp
257.762 274.716 mo
255.661 274.716 li
255.661 275.716 li
257.762 275.716 li
cp
253.56 274.716 mo
251.459 274.716 li
251.459 275.716 li
253.56 275.716 li
cp
f
249.356 274.716 mo
248.856 274.716 li
248.856 274.216 li
247.856 274.216 li
247.856 275.216 li
247.856 275.716 li
249.356 275.716 li
249.356 274.716 li
cp
f
248.856 272.29 mo
248.856 270.364 li
247.856 270.364 li
247.856 272.29 li
cp
248.856 268.438 mo
248.856 266.512 li
247.856 266.512 li
247.856 268.438 li
cp
248.856 264.586 mo
248.856 262.66 li
247.856 262.66 li
247.856 264.586 li
cp
248.856 260.734 mo
248.856 258.808 li
247.856 258.808 li
247.856 260.734 li
cp
f
248.856 256.879 mo
248.856 256.379 li
249.356 256.379 li
249.356 255.379 li
248.356 255.379 li
247.856 255.379 li
247.856 256.879 li
248.856 256.879 li
cp
f
251.457 256.379 mo
253.558 256.379 li
253.558 255.379 li
251.457 255.379 li
cp
255.659 256.379 mo
257.76 256.379 li
257.76 255.379 li
255.659 255.379 li
cp
259.861 256.379 mo
261.962 256.379 li
261.962 255.379 li
259.861 255.379 li
cp
264.063 256.379 mo
266.164 256.379 li
266.164 255.379 li
264.063 255.379 li
cp
268.265 256.379 mo
270.366 256.379 li
270.366 255.379 li
268.265 255.379 li
cp
272.467 256.379 mo
274.568 256.379 li
274.568 255.379 li
272.467 255.379 li
cp
276.669 256.379 mo
278.77 256.379 li
278.77 255.379 li
276.669 255.379 li
cp
f
280.873 256.379 mo
281.373 256.379 li
281.373 256.879 li
282.373 256.879 li
282.373 255.879 li
282.373 255.379 li
280.873 255.379 li
280.873 256.379 li
cp
f
281.373 258.806 mo
281.373 260.732 li
282.373 260.732 li
282.373 258.806 li
cp
281.373 262.658 mo
281.373 264.584 li
282.373 264.584 li
282.373 262.658 li
cp
281.373 266.51 mo
281.373 268.436 li
282.373 268.436 li
282.373 266.51 li
cp
281.373 270.362 mo
281.373 272.288 li
282.373 272.288 li
282.373 270.362 li
cp
f
203.708 380.529 mo
203.708 381.029 li
203.208 381.029 li
203.208 382.029 li
204.208 382.029 li
204.708 382.029 li
204.708 380.529 li
203.708 380.529 li
cp
f
201.167 381.029 mo
199.126 381.029 li
199.126 382.029 li
201.167 382.029 li
cp
197.085 381.029 mo
195.044 381.029 li
195.044 382.029 li
197.085 382.029 li
cp
193.003 381.029 mo
190.962 381.029 li
190.962 382.029 li
193.003 382.029 li
cp
f
188.92 381.029 mo
188.42 381.029 li
188.42 380.529 li
187.42 380.529 li
187.42 381.529 li
187.42 382.029 li
188.92 382.029 li
188.92 381.029 li
cp
f
188.42 378.516 mo
188.42 376.502 li
187.42 376.502 li
187.42 378.516 li
cp
188.42 374.488 mo
188.42 372.474 li
187.42 372.474 li
187.42 374.488 li
cp
188.42 370.46 mo
188.42 368.446 li
187.42 368.446 li
187.42 370.46 li
cp
f
188.42 366.434 mo
188.42 365.934 li
188.92 365.934 li
188.92 364.934 li
187.92 364.934 li
187.42 364.934 li
187.42 366.434 li
188.42 366.434 li
cp
f
190.961 365.934 mo
193.002 365.934 li
193.002 364.934 li
190.961 364.934 li
cp
195.043 365.934 mo
197.084 365.934 li
197.084 364.934 li
195.043 364.934 li
cp
199.125 365.934 mo
201.166 365.934 li
201.166 364.934 li
199.125 364.934 li
cp
f
203.208 365.934 mo
203.708 365.934 li
203.708 366.434 li
204.708 366.434 li
204.708 365.434 li
204.708 364.934 li
203.208 364.934 li
203.208 365.934 li
cp
f
203.708 368.448 mo
203.708 370.462 li
204.708 370.462 li
204.708 368.448 li
cp
203.708 372.476 mo
203.708 374.49 li
204.708 374.49 li
204.708 372.476 li
cp
203.708 376.504 mo
203.708 378.518 li
204.708 378.518 li
204.708 376.504 li
cp
f
352.422 408.226 mo
352.422 408.726 li
351.922 408.726 li
351.922 409.726 li
352.922 409.726 li
353.422 409.726 li
353.422 408.226 li
352.422 408.226 li
cp
f
349.945 408.726 mo
347.968 408.726 li
347.968 409.726 li
349.945 409.726 li
cp
345.991 408.726 mo
344.014 408.726 li
344.014 409.726 li
345.991 409.726 li
cp
342.037 408.726 mo
340.06 408.726 li
340.06 409.726 li
342.037 409.726 li
cp
338.083 408.726 mo
336.106 408.726 li
336.106 409.726 li
338.083 409.726 li
cp
334.129 408.726 mo
332.152 408.726 li
332.152 409.726 li
334.129 409.726 li
cp
330.175 408.726 mo
328.198 408.726 li
328.198 409.726 li
330.175 409.726 li
cp
326.221 408.726 mo
324.244 408.726 li
324.244 409.726 li
326.221 409.726 li
cp
322.267 408.726 mo
320.29 408.726 li
320.29 409.726 li
322.267 409.726 li
cp
318.313 408.726 mo
316.336 408.726 li
316.336 409.726 li
318.313 409.726 li
cp
314.359 408.726 mo
312.382 408.726 li
312.382 409.726 li
314.359 409.726 li
cp
310.405 408.726 mo
308.428 408.726 li
308.428 409.726 li
310.405 409.726 li
cp
306.451 408.726 mo
304.474 408.726 li
304.474 409.726 li
306.451 409.726 li
cp
302.497 408.726 mo
300.52 408.726 li
300.52 409.726 li
302.497 409.726 li
cp
298.543 408.726 mo
296.566 408.726 li
296.566 409.726 li
298.543 409.726 li
cp
294.589 408.726 mo
292.612 408.726 li
292.612 409.726 li
294.589 409.726 li
cp
290.635 408.726 mo
288.658 408.726 li
288.658 409.726 li
290.635 409.726 li
cp
286.681 408.726 mo
284.704 408.726 li
284.704 409.726 li
286.681 409.726 li
cp
282.727 408.726 mo
280.75 408.726 li
280.75 409.726 li
282.727 409.726 li
cp
278.773 408.726 mo
276.796 408.726 li
276.796 409.726 li
278.773 409.726 li
cp
274.819 408.726 mo
272.842 408.726 li
272.842 409.726 li
274.819 409.726 li
cp
270.865 408.726 mo
268.888 408.726 li
268.888 409.726 li
270.865 409.726 li
cp
f
266.914 408.726 mo
266.414 408.726 li
266.414 408.226 li
265.414 408.226 li
265.414 409.226 li
265.414 409.726 li
266.914 409.726 li
266.914 408.726 li
cp
f
266.414 406.18 mo
266.414 404.134 li
265.414 404.134 li
265.414 406.18 li
cp
266.414 402.088 mo
266.414 400.042 li
265.414 400.042 li
265.414 402.088 li
cp
266.414 397.996 mo
266.414 395.95 li
265.414 395.95 li
265.414 397.996 li
cp
266.414 393.904 mo
266.414 391.858 li
265.414 391.858 li
265.414 393.904 li
cp
266.414 389.812 mo
266.414 387.766 li
265.414 387.766 li
265.414 389.812 li
cp
266.414 385.72 mo
266.414 383.674 li
265.414 383.674 li
265.414 385.72 li
cp
266.414 381.628 mo
266.414 379.582 li
265.414 379.582 li
265.414 381.628 li
cp
266.414 377.536 mo
266.414 375.49 li
265.414 375.49 li
265.414 377.536 li
cp
266.414 373.444 mo
266.414 371.398 li
265.414 371.398 li
265.414 373.444 li
cp
266.414 369.352 mo
266.414 367.306 li
265.414 367.306 li
265.414 369.352 li
cp
266.414 365.26 mo
266.414 363.214 li
265.414 363.214 li
265.414 365.26 li
cp
266.414 361.168 mo
266.414 359.122 li
265.414 359.122 li
265.414 361.168 li
cp
266.414 357.076 mo
266.414 355.03 li
265.414 355.03 li
265.414 357.076 li
cp
266.414 352.984 mo
266.414 350.938 li
265.414 350.938 li
265.414 352.984 li
cp
f
266.414 348.88 mo
266.414 348.38 li
266.914 348.38 li
266.914 347.38 li
265.914 347.38 li
265.414 347.38 li
265.414 348.88 li
266.414 348.88 li
cp
f
268.891 348.38 mo
270.868 348.38 li
270.868 347.38 li
268.891 347.38 li
cp
272.845 348.38 mo
274.822 348.38 li
274.822 347.38 li
272.845 347.38 li
cp
276.799 348.38 mo
278.776 348.38 li
278.776 347.38 li
276.799 347.38 li
cp
280.753 348.38 mo
282.73 348.38 li
282.73 347.38 li
280.753 347.38 li
cp
284.707 348.38 mo
286.684 348.38 li
286.684 347.38 li
284.707 347.38 li
cp
288.661 348.38 mo
290.638 348.38 li
290.638 347.38 li
288.661 347.38 li
cp
292.615 348.38 mo
294.592 348.38 li
294.592 347.38 li
292.615 347.38 li
cp
296.569 348.38 mo
298.546 348.38 li
298.546 347.38 li
296.569 347.38 li
cp
300.523 348.38 mo
302.5 348.38 li
302.5 347.38 li
300.523 347.38 li
cp
304.477 348.38 mo
306.454 348.38 li
306.454 347.38 li
304.477 347.38 li
cp
308.431 348.38 mo
310.408 348.38 li
310.408 347.38 li
308.431 347.38 li
cp
312.385 348.38 mo
314.362 348.38 li
314.362 347.38 li
312.385 347.38 li
cp
316.339 348.38 mo
318.316 348.38 li
318.316 347.38 li
316.339 347.38 li
cp
320.293 348.38 mo
322.27 348.38 li
322.27 347.38 li
320.293 347.38 li
cp
324.247 348.38 mo
326.224 348.38 li
326.224 347.38 li
324.247 347.38 li
cp
328.201 348.38 mo
330.178 348.38 li
330.178 347.38 li
328.201 347.38 li
cp
332.155 348.38 mo
334.132 348.38 li
334.132 347.38 li
332.155 347.38 li
cp
336.109 348.38 mo
338.086 348.38 li
338.086 347.38 li
336.109 347.38 li
cp
340.063 348.38 mo
342.04 348.38 li
342.04 347.38 li
340.063 347.38 li
cp
344.017 348.38 mo
345.994 348.38 li
345.994 347.38 li
344.017 347.38 li
cp
347.971 348.38 mo
349.948 348.38 li
349.948 347.38 li
347.971 347.38 li
cp
f
351.922 348.38 mo
352.422 348.38 li
352.422 348.88 li
353.422 348.88 li
353.422 347.88 li
353.422 347.38 li
351.922 347.38 li
351.922 348.38 li
cp
f
352.422 350.927 mo
352.422 352.973 li
353.422 352.973 li
353.422 350.927 li
cp
352.422 355.019 mo
352.422 357.065 li
353.422 357.065 li
353.422 355.019 li
cp
352.422 359.111 mo
352.422 361.157 li
353.422 361.157 li
353.422 359.111 li
cp
352.422 363.203 mo
352.422 365.249 li
353.422 365.249 li
353.422 363.203 li
cp
352.422 367.295 mo
352.422 369.341 li
353.422 369.341 li
353.422 367.295 li
cp
352.422 371.387 mo
352.422 373.433 li
353.422 373.433 li
353.422 371.387 li
cp
352.422 375.479 mo
352.422 377.525 li
353.422 377.525 li
353.422 375.479 li
cp
352.422 379.571 mo
352.422 381.617 li
353.422 381.617 li
353.422 379.571 li
cp
352.422 383.663 mo
352.422 385.709 li
353.422 385.709 li
353.422 383.663 li
cp
352.422 387.755 mo
352.422 389.801 li
353.422 389.801 li
353.422 387.755 li
cp
352.422 391.847 mo
352.422 393.893 li
353.422 393.893 li
353.422 391.847 li
cp
352.422 395.939 mo
352.422 397.985 li
353.422 397.985 li
353.422 395.939 li
cp
352.422 400.031 mo
352.422 402.077 li
353.422 402.077 li
353.422 400.031 li
cp
352.422 404.123 mo
352.422 406.169 li
353.422 406.169 li
353.422 404.123 li
cp
f
248.477 255.394 mo
246.536 254.912 li
246.295 255.882 li
248.236 256.365 li
cp
244.595 254.429 mo
242.654 253.947 li
242.413 254.917 li
244.354 255.4 li
cp
240.713 253.464 mo
238.772 252.982 li
238.531 253.952 li
240.472 254.435 li
cp
236.832 252.499 mo
234.891 252.016 li
234.649 252.987 li
236.59 253.469 li
cp
232.95 251.534 mo
231.009 251.051 li
230.768 252.022 li
232.708 252.504 li
cp
f
248.056 274.816 mo
246.458 276.02 li
247.06 276.819 li
248.657 275.615 li
cp
244.861 277.224 mo
243.264 278.428 li
243.866 279.226 li
245.463 278.022 li
cp
241.667 279.631 mo
240.069 280.835 li
240.671 281.634 li
242.268 280.43 li
cp
238.472 282.039 mo
236.941 283.192 li
237.543 283.991 li
239.074 282.837 li
cp
f
182.976 272.354 mo
182.976 273.244 182.238 273.966 181.329 273.966 cv
180.419 273.966 179.681 273.244 179.681 272.354 cv
179.681 271.463 180.419 270.742 181.329 270.742 cv
182.238 270.742 182.976 271.463 182.976 272.354 cv
1 0 0 0 cmyk
f
182.345 272.284 mo
181.845 272.284 li
181.826 272.345 li
181.823 272.348 li
181.837 272.378 li
181.837 272.345 li
181.823 272.348 li
181.837 272.378 li
181.837 272.345 li
181.837 272.375 li
181.85 272.347 li
181.837 272.345 li
181.837 272.375 li
181.85 272.347 li
181.841 272.336 li
181.828 272.284 li
181.847 272.224 li
181.85 272.221 li
181.837 272.193 li
181.837 272.224 li
181.85 272.221 li
181.837 272.193 li
181.837 272.224 li
181.837 272.19 li
181.823 272.221 li
181.837 272.224 li
181.837 272.19 li
181.823 272.221 li
181.832 272.232 li
181.845 272.284 li
182.345 272.284 li
182.845 272.284 li
182.845 272.006 182.743 271.747 182.567 271.552 cv
182.392 271.357 182.13 271.223 181.837 271.224 cv
181.545 271.223 181.282 271.357 181.107 271.552 cv
180.93 271.746 180.828 272.006 180.828 272.284 cv
180.828 272.562 180.93 272.822 181.107 273.017 cv
181.282 273.211 181.545 273.345 181.837 273.345 cv
182.13 273.345 182.392 273.211 182.567 273.016 cv
182.743 272.822 182.845 272.562 182.845 272.284 cv
182.345 272.284 li
cp
0 0 0 1 cmyk
f
211.141 270.827 mo
211.966 271.16 212.359 272.114 212.019 272.958 cv
211.677 273.802 210.732 274.216 209.906 273.882 cv
209.08 273.549 208.688 272.594 209.029 271.75 cv
209.37 270.906 210.314 270.494 211.141 270.827 cv
1 0 0 0 cmyk
f
210.84 271.386 mo
210.653 271.85 li
210.697 271.882 li
210.703 271.893 li
210.708 271.892 li
210.703 271.892 li
210.703 271.893 li
210.708 271.892 li
210.703 271.892 li
210.738 271.892 li
210.705 271.879 li
210.703 271.892 li
210.738 271.892 li
210.705 271.879 li
210.726 271.886 li
210.713 271.867 li
210.706 271.878 li
210.726 271.886 li
210.713 271.867 li
210.685 271.873 li
210.645 271.865 li
210.649 271.866 li
210.648 271.865 li
210.602 271.831 li
210.596 271.819 li
210.592 271.82 li
210.595 271.82 li
210.596 271.819 li
210.592 271.82 li
210.595 271.82 li
210.559 271.82 li
210.593 271.834 li
210.595 271.82 li
210.559 271.82 li
210.593 271.834 li
210.571 271.826 li
210.584 271.846 li
210.592 271.835 li
210.571 271.826 li
210.584 271.846 li
210.611 271.841 li
210.652 271.849 li
210.84 271.386 li
211.027 270.922 li
210.892 270.867 210.75 270.841 210.611 270.841 cv
210.225 270.838 209.83 271.056 209.666 271.458 cv
209.618 271.577 209.595 271.7 209.595 271.82 cv
209.598 272.253 209.869 272.626 210.268 272.791 cv
210.272 272.792 li
210.271 272.792 li
210.405 272.846 210.546 272.873 210.685 272.873 cv
211.072 272.875 211.467 272.658 211.632 272.255 cv
211.68 272.137 211.703 272.013 211.703 271.892 cv
211.7 271.458 211.428 271.085 211.027 270.922 cv
210.84 271.386 li
cp
0 0 0 1 cmyk
f
180.586 270.323 mo
180.582 270.32 178.341 268.849 176.845 267.995 cv
176.263 267.662 175.776 267.481 175.485 267.353 cv
175.34 267.291 175.247 267.237 175.237 267.225 cv
175.211 267.258 li
175.242 267.231 li
175.237 267.225 li
175.211 267.258 li
175.242 267.231 li
175.08 267.372 li
175.293 267.372 li
175.242 267.231 li
175.08 267.372 li
175.293 267.372 li
175.203 267.372 li
175.291 267.396 li
175.293 267.372 li
175.203 267.372 li
175.291 267.396 li
175.292 267.384 175.342 267.272 175.462 267.107 cv
175.794 266.646 175.987 266.47 176.28 266.21 cv
176.573 265.951 176.956 265.624 177.532 264.976 cv
177.881 264.579 178.091 264.201 178.096 263.778 cv
178.099 263.505 177.986 263.244 177.826 263.065 cv
177.583 262.792 177.275 262.655 176.962 262.557 cv
176.646 262.461 176.314 262.413 176 262.392 cv
175.724 262.373 175.486 262.581 175.467 262.857 cv
175.448 263.132 175.657 263.371 175.932 263.389 cv
176.274 263.411 176.639 263.482 176.862 263.584 cv
176.974 263.634 177.045 263.689 177.071 263.721 cv
177.096 263.778 li
177.102 263.817 177.056 264.01 176.784 264.312 cv
176.238 264.925 175.92 265.194 175.618 265.461 cv
175.315 265.726 175.017 266.006 174.648 266.526 cv
174.457 266.807 174.306 267.025 174.293 267.372 cv
174.292 267.497 174.325 267.632 174.387 267.742 cv
174.497 267.938 174.647 268.04 174.78 268.12 cv
174.985 268.236 175.2 268.317 175.459 268.428 cv
175.716 268.537 176.013 268.671 176.349 268.863 cv
177.072 269.276 177.997 269.852 178.738 270.322 cv
179.48 270.793 180.036 271.158 180.038 271.159 cv
180.269 271.311 180.579 271.246 180.73 271.015 cv
180.882 270.785 180.817 270.475 180.586 270.323 cv
cp
1 0 0 0 cmyk
f
182.744 271.396 mo
186.088 266.962 li
184.857 267.164 li
184.856 267.164 184.438 267.232 183.886 267.301 cv
183.335 267.37 182.649 267.438 182.155 267.438 cv
181.934 267.439 181.748 267.421 181.67 267.401 cv
181.638 267.392 li
181.557 267.596 li
181.712 267.447 li
181.638 267.392 li
181.557 267.596 li
181.712 267.447 li
181.438 267.712 li
181.817 267.712 li
181.821 267.609 181.761 267.492 181.712 267.447 cv
181.438 267.712 li
181.817 267.712 li
181.468 267.712 li
181.794 267.84 li
181.817 267.712 li
181.468 267.712 li
181.794 267.84 li
181.834 267.736 181.854 267.625 181.854 267.522 cv
181.853 267.323 181.79 267.166 181.729 267.045 cv
181.634 266.863 181.534 266.735 181.475 266.632 cv
181.412 266.528 181.4 266.472 181.402 266.457 cv
181.405 266.444 181.395 266.419 181.483 266.308 cv
181.57 266.202 181.76 266.038 182.091 265.845 cv
183.511 265 186.279 264.318 188.097 264.327 cv
188.52 264.326 188.891 264.363 189.167 264.429 cv
189.877 264.607 190.208 265.011 190.429 265.5 cv
190.641 265.985 190.679 266.539 190.677 266.816 cv
190.889 266.816 li
190.694 266.733 li
190.677 266.816 li
190.889 266.816 li
190.694 266.733 li
190.786 266.772 li
190.708 266.707 li
190.694 266.733 li
190.786 266.772 li
190.708 266.707 li
190.707 266.718 190.572 266.82 190.377 266.918 cv
190.084 267.075 189.668 267.26 189.292 267.565 cv
188.918 267.861 188.568 268.352 188.574 268.99 cv
188.575 269.349 188.582 269.642 188.618 269.905 cv
188.646 270.101 188.691 270.285 188.777 270.461 cv
188.902 270.728 189.15 270.94 189.409 271.042 cv
189.67 271.15 189.942 271.195 190.273 271.237 cv
190.373 271.25 190.471 271.255 190.565 271.255 cv
190.928 271.255 191.235 271.174 191.472 271.106 cv
191.707 271.035 191.885 270.99 191.919 270.996 cv
191.923 270.996 li
191.942 270.884 li
191.884 270.981 li
191.923 270.996 li
191.942 270.884 li
191.884 270.981 li
191.932 270.901 li
191.863 270.964 li
191.884 270.981 li
191.932 270.901 li
191.863 270.964 li
191.89 271.014 li
191.907 271.053 191.93 271.118 191.951 271.209 cv
192.014 271.478 192.284 271.645 192.552 271.581 cv
192.821 271.518 192.988 271.249 192.925 270.98 cv
192.858 270.704 192.77 270.473 192.59 270.278 cv
192.412 270.079 192.128 269.988 191.919 269.996 cv
191.625 270.002 191.413 270.087 191.196 270.145 cv
190.982 270.207 190.776 270.256 190.565 270.255 cv
190.397 270.245 li
190.131 270.213 189.941 270.174 189.834 270.135 cv
189.707 270.067 li
189.687 270.046 189.652 270.005 189.618 269.828 cv
189.587 269.655 189.574 269.375 189.574 268.99 cv
189.578 268.768 189.642 268.636 189.775 268.481 cv
189.974 268.252 190.363 268.047 190.741 267.856 cv
190.931 267.757 191.118 267.661 191.294 267.523 cv
191.382 267.452 191.47 267.369 191.546 267.253 cv
191.621 267.139 191.678 266.981 191.677 266.816 cv
191.676 266.463 191.643 265.791 191.346 265.102 cv
191.059 264.416 190.443 263.7 189.401 263.457 cv
189.014 263.365 188.576 263.327 188.097 263.327 cv
186.053 263.335 183.258 264.011 181.584 264.983 cv
181.193 265.214 180.915 265.429 180.715 265.667 cv
180.516 265.901 180.399 266.185 180.402 266.457 cv
180.408 266.856 180.599 267.116 180.71 267.293 cv
180.838 267.498 li
180.855 267.539 li
180.911 267.522 li
180.854 267.522 li
180.855 267.539 li
180.911 267.522 li
180.854 267.522 li
180.981 267.522 li
180.862 267.475 li
180.854 267.522 li
180.981 267.522 li
180.862 267.475 li
180.817 267.712 li
180.811 267.942 180.965 268.147 181.089 268.225 cv
181.28 268.353 181.435 268.376 181.606 268.405 cv
181.775 268.429 181.958 268.437 182.155 268.438 cv
183.298 268.435 185.005 268.152 185.019 268.151 cv
184.938 267.657 li
184.539 267.356 li
181.946 270.794 li
181.78 271.014 181.824 271.328 182.044 271.494 cv
182.265 271.66 182.578 271.616 182.744 271.396 cv
cp
f
180.829 273.966 mo
180.829 276.146 li
180.852 276.219 li
180.868 276.267 180.925 276.438 181.104 276.62 cv
181.279 276.804 181.6 276.971 181.994 276.966 cv
182.142 276.966 182.299 276.946 182.467 276.904 cv
182.735 276.836 182.957 276.736 183.143 276.667 cv
183.329 276.595 183.472 276.558 183.566 276.56 cv
183.658 276.564 183.718 276.573 183.848 276.672 cv
183.975 276.771 184.154 276.981 184.358 277.358 cv
184.96 278.464 185.087 279.031 185.082 279.278 cv
185.081 279.398 185.063 279.452 185.035 279.527 cv
184.995 279.627 184.976 279.729 184.976 279.833 cv
184.975 280.087 185.096 280.353 185.318 280.532 cv
185.541 280.714 185.838 280.8 186.174 280.8 cv
186.691 280.797 187.326 280.612 188.188 280.155 cv
189.3 279.569 189.8 278.798 190.128 278.288 cv
190.293 278.032 190.422 277.854 190.534 277.765 cv
190.648 277.679 190.738 277.631 191.002 277.626 cv
191.137 277.631 li
191.382 277.642 li
191.565 277.639 191.722 277.629 191.906 277.545 cv
191.997 277.503 192.098 277.431 192.173 277.321 cv
192.249 277.212 192.283 277.074 192.282 276.964 cv
192.279 276.785 192.222 276.669 192.171 276.571 cv
192.076 276.403 191.962 276.272 191.837 276.133 cv
191.651 275.929 191.44 275.722 191.278 275.538 cv
191.198 275.446 191.13 275.361 191.088 275.295 cv
191.044 275.218 li
191.036 275.199 li
191.032 275.201 li
191.036 275.2 li
191.036 275.199 li
191.032 275.201 li
191.036 275.2 li
190.982 274.929 190.718 274.753 190.447 274.808 cv
190.177 274.862 190.001 275.125 190.055 275.396 cv
190.116 275.671 190.25 275.851 190.389 276.033 cv
190.601 276.299 190.858 276.548 191.051 276.756 cv
191.147 276.859 191.227 276.951 191.267 277.01 cv
191.297 277.058 li
191.507 276.964 li
191.282 276.964 li
191.297 277.058 li
191.507 276.964 li
191.282 276.964 li
191.651 276.964 li
191.347 276.757 li
191.282 276.964 li
191.651 276.964 li
191.347 276.757 li
191.578 276.915 li
191.498 276.634 li
191.496 276.635 191.419 276.655 191.347 276.757 cv
191.578 276.915 li
191.498 276.634 li
191.472 276.638 li
191.382 276.642 li
191.216 276.634 li
191.002 276.626 li
190.564 276.62 190.175 276.76 189.901 276.991 cv
189.492 277.339 189.313 277.748 189.03 278.129 cv
188.751 278.514 188.402 278.904 187.717 279.273 cv
186.944 279.687 186.433 279.803 186.174 279.8 cv
186.002 279.799 185.951 279.758 185.951 279.758 cv
185.89 279.833 li
185.976 279.833 li
185.951 279.758 li
185.89 279.833 li
185.976 279.833 li
185.796 279.833 li
185.963 279.9 li
185.976 279.833 li
185.796 279.833 li
185.963 279.9 li
186.025 279.749 186.084 279.533 186.082 279.278 cv
186.078 278.737 185.869 278.054 185.237 276.882 cv
184.993 276.433 184.751 276.113 184.471 275.889 cv
184.194 275.664 183.862 275.556 183.566 275.56 cv
183.259 275.561 183.006 275.651 182.788 275.732 cv
182.571 275.815 182.384 275.895 182.224 275.934 cv
182.125 275.959 182.05 275.966 181.994 275.966 cv
181.847 275.961 181.835 275.93 181.813 275.915 cv
181.796 275.894 li
181.668 275.963 li
181.806 275.92 li
181.796 275.894 li
181.668 275.963 li
181.806 275.92 li
181.329 276.069 li
181.829 276.069 li
181.829 273.966 li
181.829 273.69 181.605 273.466 181.329 273.466 cv
181.052 273.466 180.829 273.69 180.829 273.966 cv
cp
f
179.771 272.703 mo
179.603 272.69 li
179.426 272.689 179.126 272.731 178.791 272.922 cv
178.456 273.113 178.097 273.449 177.778 273.992 cv
177.562 274.356 177.482 274.721 177.484 275.03 cv
177.494 275.52 177.635 275.869 177.619 275.984 cv
177.599 276.06 li
177.58 276.088 177.508 276.163 177.326 276.255 cv
177.036 276.402 176.744 276.431 176.424 276.431 cv
176.286 276.431 176.144 276.425 175.998 276.425 cv
175.853 276.426 175.703 276.43 175.54 276.463 cv
175.3 276.506 175.002 276.661 174.839 276.937 cv
174.675 277.208 174.627 277.515 174.625 277.892 cv
174.618 278.823 174.993 279.483 175.38 279.891 cv
175.571 280.098 175.761 280.251 175.898 280.367 cv
176.056 280.505 li
176.089 280.54 li
176.092 280.543 li
176.171 280.489 li
176.086 280.535 li
176.092 280.543 li
176.171 280.489 li
176.086 280.535 li
176.085 280.531 li
176.085 280.533 li
176.148 280.656 176.266 280.785 176.406 280.852 cv
176.546 280.921 176.675 280.932 176.769 280.932 cv
176.986 280.926 177.105 280.893 177.234 280.896 cv
177.412 280.902 177.597 280.919 177.954 281.215 cv
178.164 281.394 178.479 281.37 178.659 281.16 cv
178.839 280.95 178.814 280.635 178.605 280.455 cv
178.11 280.022 177.603 279.889 177.234 279.896 cv
176.984 279.898 176.795 279.937 176.769 279.932 cv
176.769 280.016 li
176.784 279.934 li
176.769 279.932 li
176.769 280.016 li
176.784 279.934 li
176.736 280.202 li
176.895 279.983 li
176.784 279.934 li
176.736 280.202 li
176.895 279.983 li
176.751 280.18 li
176.969 280.065 li
176.895 279.983 li
176.751 280.18 li
176.969 280.065 li
176.971 280.068 li
176.968 280.063 li
176.834 279.829 176.683 279.726 176.54 279.599 cv
176.323 279.419 176.099 279.233 175.928 278.978 cv
175.758 278.723 175.627 278.404 175.625 277.892 cv
175.625 277.706 175.645 277.582 175.665 277.52 cv
175.693 277.458 li
175.692 277.457 li
175.693 277.458 li
175.693 277.458 li
175.692 277.457 li
175.693 277.458 li
175.693 277.452 175.798 277.422 175.998 277.425 cv
176.115 277.425 176.26 277.431 176.424 277.431 cv
176.799 277.431 177.284 277.399 177.78 277.146 cv
178.048 277.008 178.259 276.853 178.41 276.645 cv
178.563 276.439 178.622 276.186 178.619 275.984 cv
178.603 275.548 178.475 275.283 178.484 275.03 cv
178.487 274.873 178.513 274.72 178.64 274.499 cv
178.888 274.079 179.12 273.887 179.287 273.791 cv
179.455 273.696 179.568 273.691 179.603 273.69 cv
179.613 273.69 li
179.638 273.433 li
179.592 273.687 li
179.613 273.69 li
179.638 273.433 li
179.592 273.687 li
179.863 273.737 180.124 273.556 180.173 273.285 cv
180.222 273.013 180.042 272.753 179.771 272.703 cv
cp
f
179.798 271.867 mo
179.796 271.867 178.472 271.549 176.999 271.23 cv
176.262 271.071 175.489 270.911 174.82 270.79 cv
174.146 270.67 173.602 270.586 173.233 270.584 cv
173.003 270.602 li
173.023 270.598 li
173.004 270.602 li
172.699 270.656 172.442 270.812 172.252 271 cv
171.966 271.284 171.802 271.63 171.694 271.956 cv
171.588 272.286 171.541 272.592 171.54 272.845 cv
171.546 272.942 171.475 273.151 171.358 273.467 cv
171.247 273.782 171.119 274.204 171.12 274.737 cv
171.122 275.391 171.217 275.941 171.213 276.196 cv
171.207 276.299 li
171.406 276.346 li
171.266 276.206 li
171.207 276.299 li
171.406 276.346 li
171.266 276.206 li
171.267 276.206 li
171.245 276.227 li
171.598 276.582 li
172.098 276.582 li
172.083 276.461 li
171.998 276.282 li
171.945 276.198 171.775 276.076 171.598 276.082 cv
171.598 276.582 li
171.951 276.935 li
171.951 276.935 173.126 275.762 173.516 275.371 cv
173.711 275.175 173.711 274.859 173.515 274.664 cv
173.32 274.469 173.003 274.469 172.808 274.664 cv
172.419 275.054 171.244 276.228 171.244 276.228 cv
171.101 276.371 171.058 276.586 171.136 276.773 cv
171.213 276.96 171.396 277.082 171.598 277.082 cv
171.598 276.582 li
171.198 276.882 li
171.251 276.966 171.421 277.088 171.598 277.082 cv
171.598 276.582 li
171.198 276.882 li
171.598 276.582 li
171.103 276.656 li
171.114 276.695 171.109 276.752 171.198 276.882 cv
171.598 276.582 li
171.103 276.656 li
171.598 276.582 li
171.098 276.582 li
171.103 276.656 li
171.598 276.582 li
171.098 276.582 li
171.098 276.784 171.219 276.966 171.406 277.044 cv
171.593 277.121 171.807 277.079 171.951 276.936 cv
171.973 276.913 li
171.963 276.924 li
171.974 276.913 li
172.096 276.79 172.151 276.649 172.179 276.531 cv
172.207 276.411 172.213 276.304 172.213 276.196 cv
172.21 275.777 172.119 275.299 172.12 274.737 cv
172.121 274.359 172.203 274.08 172.302 273.799 cv
172.395 273.52 172.534 273.238 172.54 272.845 cv
172.537 272.687 172.599 272.323 172.731 272.048 cv
172.795 271.908 172.875 271.79 172.953 271.714 cv
173.181 271.586 li
173.161 271.589 li
173.182 271.586 li
173.174 271.546 li
173.179 271.586 li
173.182 271.586 li
173.174 271.546 li
173.179 271.586 li
173.233 271.584 li
173.446 271.582 173.999 271.657 174.643 271.775 cv
175.618 271.951 176.851 272.217 177.838 272.44 cv
178.825 272.662 179.563 272.839 179.564 272.84 cv
179.833 272.904 180.103 272.739 180.167 272.47 cv
180.232 272.202 180.066 271.932 179.798 271.867 cv
cp
f
209.323 271.346 mo
207.143 269.755 li
207.11 269.738 li
207.059 269.71 li
206.932 269.639 206.591 269.436 206.261 269.163 cv
205.928 268.893 205.621 268.543 205.525 268.26 cv
205.476 268.112 205.359 267.958 205.212 267.873 cv
205.065 267.786 204.914 267.762 204.784 267.762 cv
204.54 267.765 204.333 267.835 204.11 267.929 cv
203.352 268.263 202.392 268.993 201.551 269.737 cv
201.134 270.108 200.756 270.48 200.463 270.811 cv
200.317 270.976 200.193 271.131 200.092 271.279 cv
199.994 271.432 199.911 271.559 199.867 271.768 cv
199.97 271.787 li
199.88 271.731 li
199.867 271.768 li
199.97 271.787 li
199.88 271.731 li
199.862 271.75 li
199.809 271.805 199.613 271.914 199.364 271.994 cv
198.989 272.12 198.499 272.213 198.113 272.268 cv
197.919 272.297 197.751 272.316 197.631 272.329 cv
197.512 272.341 197.446 272.346 197.446 272.346 cv
197.484 272.845 li
197.858 272.513 li
195.826 270.221 li
195.642 270.014 195.326 269.995 195.12 270.179 cv
194.913 270.362 194.894 270.678 195.078 270.885 cv
197.275 273.362 li
197.523 273.343 li
197.535 273.342 198.232 273.289 198.974 273.131 cv
199.346 273.051 199.727 272.948 200.062 272.792 cv
200.23 272.713 200.388 272.622 200.531 272.493 cv
200.672 272.366 200.807 272.186 200.851 271.947 cv
200.743 271.927 li
200.847 271.967 li
200.851 271.946 li
200.743 271.927 li
200.847 271.967 li
200.85 271.951 200.911 271.842 201.013 271.713 cv
201.371 271.246 202.189 270.462 202.994 269.832 cv
203.397 269.515 203.8 269.232 204.137 269.038 cv
204.305 268.94 204.456 268.865 204.574 268.819 cv
204.691 268.772 204.778 268.76 204.784 268.762 cv
204.784 268.586 li
204.697 268.731 li
204.784 268.762 li
204.784 268.586 li
204.697 268.731 li
204.831 268.508 li
204.584 268.596 li
204.697 268.731 li
204.831 268.508 li
204.584 268.596 li
204.828 269.254 205.35 269.723 205.794 270.07 cv
206.242 270.412 206.63 270.615 206.646 270.624 cv
206.878 270.181 li
206.583 270.585 li
208.734 272.154 li
208.957 272.317 209.269 272.268 209.432 272.045 cv
209.595 271.822 209.546 271.509 209.323 271.346 cv
cp
f
211.126 270.859 mo
211.128 270.854 211.281 270.359 211.435 269.761 cv
211.589 269.155 211.749 268.483 211.754 267.989 cv
211.744 267.824 211.763 267.673 211.605 267.431 cv
211.525 267.328 211.468 267.291 211.403 267.242 cv
211.174 267.08 210.828 266.905 210.388 266.692 cv
209.082 266.065 207.073 265.234 207.069 265.232 cv
206.878 265.694 li
207.352 265.854 li
207.894 264.247 li
213.234 262.957 li
213.502 262.892 213.667 262.622 213.602 262.353 cv
213.537 262.085 213.267 261.92 212.999 261.985 cv
207.123 263.405 li
206.255 265.977 li
206.687 266.156 li
206.689 266.157 207.699 266.575 208.741 267.037 cv
209.261 267.267 209.789 267.509 210.196 267.71 cv
210.398 267.811 210.571 267.902 210.69 267.972 cv
210.82 268.054 li
210.837 268.067 li
211.009 267.872 li
210.801 268.026 li
210.837 268.067 li
211.009 267.872 li
210.801 268.026 li
211.004 267.876 li
210.75 267.924 li
210.801 268.026 li
211.004 267.876 li
210.75 267.924 li
210.754 267.989 li
210.759 268.257 210.616 268.946 210.467 269.511 cv
210.393 269.797 210.319 270.061 210.263 270.253 cv
210.207 270.446 210.171 270.563 210.171 270.563 cv
210.089 270.827 210.237 271.107 210.501 271.189 cv
210.765 271.27 211.045 271.122 211.126 270.859 cv
cp
f
210.181 273.468 mo
210.181 273.469 209.833 273.795 209.463 274.119 cv
209.278 274.28 209.087 274.441 208.94 274.554 cv
208.771 274.676 li
208.752 274.687 li
208.751 274.687 li
208.906 275.013 li
208.906 274.657 li
208.774 274.663 208.76 274.688 208.751 274.687 cv
208.906 275.013 li
208.906 274.657 li
208.758 274.672 li
208.463 274.722 207.713 274.904 206.977 275.167 cv
206.611 275.3 206.257 275.448 205.961 275.627 cv
205.813 275.718 205.677 275.815 205.557 275.945 cv
205.441 276.073 205.319 276.258 205.316 276.515 cv
205.349 276.73 li
205.471 277.123 205.693 277.61 205.975 278.088 cv
206.26 278.564 206.59 279.021 206.992 279.337 cv
207.27 279.553 207.81 280.013 208.261 280.471 cv
208.487 280.699 208.691 280.928 208.826 281.114 cv
208.893 281.206 208.943 281.288 208.968 281.342 cv
208.99 281.396 li
208.99 281.397 li
209.13 281.375 li
208.989 281.375 li
208.99 281.397 li
209.13 281.375 li
208.989 281.375 li
209.255 281.375 li
209.011 281.272 li
208.989 281.375 li
209.255 281.375 li
209.011 281.272 li
209.012 281.27 li
209.184 281.343 li
209.027 281.241 li
209.012 281.27 li
209.184 281.343 li
209.027 281.241 li
209.055 281.259 li
209.028 281.24 li
209.027 281.241 li
209.055 281.259 li
209.028 281.24 li
209.021 281.26 208.837 281.419 208.602 281.562 cv
208.245 281.787 207.757 282.039 207.365 282.229 cv
207.168 282.325 206.995 282.406 206.871 282.463 cv
206.747 282.52 206.675 282.551 206.675 282.551 cv
206.423 282.663 206.308 282.958 206.419 283.211 cv
206.531 283.463 206.826 283.578 207.079 283.466 cv
207.084 283.464 207.687 283.198 208.327 282.865 cv
208.647 282.698 208.976 282.515 209.254 282.331 cv
209.393 282.239 209.519 282.147 209.632 282.048 cv
209.743 281.945 209.847 281.848 209.931 281.664 cv
209.932 281.662 li
209.974 281.564 209.989 281.464 209.989 281.375 cv
209.987 281.186 209.933 281.044 209.87 280.91 cv
209.647 280.459 209.229 280.019 208.785 279.582 cv
208.343 279.153 207.884 278.764 207.606 278.548 cv
207.377 278.374 207.076 277.99 206.835 277.578 cv
206.591 277.167 206.392 276.72 206.304 276.434 cv
206.043 276.515 li
206.316 276.515 li
206.304 276.434 li
206.043 276.515 li
206.316 276.515 li
206.09 276.515 li
206.293 276.619 li
206.316 276.515 li
206.09 276.515 li
206.293 276.619 li
206.235 276.589 li
206.288 276.628 li
206.293 276.619 li
206.235 276.589 li
206.288 276.628 li
206.289 276.612 206.474 276.464 206.732 276.347 cv
207.121 276.161 207.667 275.98 208.122 275.852 cv
208.35 275.788 208.556 275.737 208.708 275.702 cv
208.891 275.664 li
208.935 275.656 li
208.937 275.656 li
208.906 275.331 li
208.906 275.657 li
208.937 275.656 li
208.906 275.331 li
208.906 275.657 li
209.051 275.653 209.107 275.62 209.163 275.598 cv
209.344 275.512 209.472 275.407 209.652 275.267 cv
210.164 274.856 210.86 274.202 210.865 274.198 cv
211.067 274.009 211.077 273.692 210.888 273.491 cv
210.699 273.29 210.383 273.279 210.181 273.468 cv
cp
f
211.66 273.306 mo
213.51 275.211 li
213.684 275.233 li
213.685 275.233 214.003 275.274 214.486 275.346 cv
215.209 275.455 216.298 275.636 217.184 275.854 cv
217.626 275.962 218.02 276.082 218.27 276.191 cv
218.394 276.244 218.481 276.298 218.505 276.319 cv
218.511 276.324 li
218.71 276.138 li
218.45 276.138 li
218.451 276.258 218.508 276.322 218.511 276.324 cv
218.71 276.138 li
218.45 276.138 li
218.777 276.138 li
218.478 276.003 li
218.45 276.138 li
218.777 276.138 li
218.478 276.003 li
218.473 276.018 218.409 276.119 218.307 276.236 cv
217.942 276.662 217.144 277.353 216.451 277.938 cv
216.103 278.233 215.78 278.505 215.536 278.723 cv
215.413 278.832 215.311 278.927 215.227 279.013 cv
215.108 279.152 li
215.043 279.257 li
215.022 279.305 214.988 279.368 214.984 279.502 cv
214.99 279.582 li
215.484 279.504 li
214.985 279.532 li
215.455 279.505 li
214.984 279.506 li
214.985 279.532 li
215.455 279.505 li
214.984 279.506 li
215.442 279.506 li
215.059 279.253 li
215.034 279.292 214.987 279.367 214.984 279.506 cv
215.442 279.506 li
215.059 279.253 li
215.348 279.444 li
215.11 279.19 li
215.059 279.253 li
215.348 279.444 li
215.11 279.19 li
215.219 279.306 li
215.118 279.183 li
215.11 279.19 li
215.219 279.306 li
215.118 279.183 li
215.11 279.189 li
215.048 279.234 214.812 279.358 214.536 279.482 cv
214.115 279.674 213.573 279.897 213.138 280.07 cv
212.704 280.243 212.378 280.367 212.378 280.368 cv
211.786 280.593 li
213.194 282.66 li
213.35 282.888 213.661 282.947 213.889 282.791 cv
214.117 282.636 214.176 282.324 214.021 282.096 cv
212.969 280.553 li
212.556 280.835 li
212.734 281.302 li
212.736 281.301 213.471 281.021 214.213 280.712 cv
214.584 280.557 214.955 280.395 215.247 280.253 cv
215.394 280.18 215.519 280.115 215.627 280.046 cv
215.792 279.922 li
215.893 279.804 li
215.929 279.747 215.982 279.658 215.984 279.506 cv
215.984 279.476 li
215.982 279.451 li
215.978 279.426 li
215.495 279.502 li
215.984 279.502 li
215.978 279.426 li
215.495 279.502 li
215.984 279.502 li
215.543 279.502 li
215.933 279.714 li
215.945 279.685 215.979 279.641 215.984 279.502 cv
215.543 279.502 li
215.933 279.714 li
215.733 279.605 li
215.913 279.745 li
215.933 279.714 li
215.733 279.605 li
215.913 279.745 li
215.916 279.74 215.988 279.662 216.087 279.572 cv
216.443 279.244 217.174 278.647 217.847 278.058 cv
218.184 277.763 218.509 277.468 218.777 277.197 cv
219.046 276.919 219.254 276.697 219.389 276.415 cv
219.426 276.334 219.45 276.236 219.45 276.138 cv
219.449 275.94 219.361 275.781 219.275 275.679 cv
219.107 275.487 218.924 275.394 218.712 275.294 cv
217.982 274.968 216.794 274.726 215.741 274.537 cv
214.696 274.353 213.815 274.242 213.81 274.241 cv
213.747 274.737 li
214.106 274.389 li
212.377 272.61 li
212.185 272.411 211.868 272.407 211.67 272.599 cv
211.472 272.792 211.467 273.108 211.66 273.306 cv
cp
f
212.178 272.355 mo
218.694 271.861 li
220.576 274.735 li
221.752 279.018 li
222.354 278.472 li
222.355 278.471 223.11 277.787 223.875 277.075 cv
224.258 276.718 224.643 276.355 224.941 276.064 cv
225.09 275.918 225.217 275.791 225.315 275.687 cv
225.443 275.543 li
225.5 275.467 li
225.521 275.435 225.545 275.407 225.577 275.315 cv
225.577 275.317 li
225.334 275.236 li
225.566 275.345 li
225.577 275.317 li
225.334 275.236 li
225.566 275.345 li
225.578 275.316 225.708 275.092 225.869 274.834 cv
226.114 274.437 226.453 273.905 226.737 273.466 cv
226.878 273.246 227.006 273.05 227.101 272.905 cv
227.216 272.731 li
227.249 272.682 li
227.237 272.674 li
227.248 272.683 li
227.249 272.682 li
227.237 272.674 li
227.248 272.683 li
227.251 272.679 li
227.255 272.673 li
227.338 272.563 227.357 272.445 227.356 272.37 cv
227.349 272.207 227.309 272.164 227.292 272.122 cv
227.208 272.002 li
227.124 271.907 227.018 271.806 226.86 271.66 cv
226.317 271.16 225.25 270.243 224.281 269.431 cv
223.797 269.025 223.339 268.648 222.984 268.363 cv
222.807 268.22 222.655 268.101 222.536 268.011 cv
222.379 267.897 li
222.327 267.863 222.306 267.842 222.206 267.798 cv
221.95 267.695 221.658 267.818 221.555 268.074 cv
221.451 268.33 221.575 268.622 221.831 268.725 cv
221.963 268.398 li
221.792 268.707 li
221.831 268.725 li
221.963 268.398 li
221.792 268.707 li
221.857 268.59 li
221.788 268.705 li
221.792 268.707 li
221.857 268.59 li
221.788 268.705 li
221.797 268.708 221.923 268.798 222.077 268.919 cv
222.634 269.354 223.753 270.285 224.723 271.115 cv
225.209 271.531 225.659 271.923 225.984 272.215 cv
226.146 272.36 226.277 272.482 226.362 272.564 cv
226.445 272.649 li
226.448 272.652 li
226.677 272.465 li
226.425 272.62 li
226.448 272.652 li
226.677 272.465 li
226.425 272.62 li
226.805 272.386 li
226.393 272.557 li
226.425 272.62 li
226.805 272.386 li
226.393 272.557 li
226.842 272.37 li
226.356 272.37 li
226.358 272.474 226.381 272.523 226.393 272.557 cv
226.842 272.37 li
226.356 272.37 li
226.852 272.37 li
226.455 272.073 li
226.374 272.182 226.356 272.298 226.356 272.37 cv
226.852 272.37 li
226.455 272.073 li
226.855 272.373 li
226.463 272.063 li
226.411 272.136 li
226.286 272.32 225.875 272.953 225.479 273.575 cv
225.281 273.885 225.089 274.191 224.94 274.435 cv
224.865 274.557 224.802 274.663 224.752 274.749 cv
224.687 274.867 li
224.628 274.999 li
224.626 275.006 li
224.628 275.001 li
224.997 275.123 li
224.675 274.903 li
224.628 275.001 li
224.997 275.123 li
224.675 274.903 li
224.733 274.943 li
224.677 274.9 li
224.675 274.903 li
224.733 274.943 li
224.677 274.9 li
224.668 274.914 224.594 274.997 224.495 275.097 cv
224.144 275.457 223.434 276.122 222.821 276.689 cv
222.206 277.257 221.684 277.73 221.683 277.731 cv
222.019 278.102 li
222.501 277.969 li
221.498 274.319 li
219.207 270.819 li
212.103 271.358 li
211.827 271.379 211.621 271.619 211.642 271.894 cv
211.663 272.17 211.903 272.376 212.178 272.355 cv
cp
f
211.503 271.74 mo
213.343 270.357 li
216.794 269.37 li
220.987 265.787 li
219.878 262.446 li
216.981 261.977 li
216.709 261.933 216.452 262.118 216.408 262.391 cv
216.364 262.663 216.549 262.92 216.821 262.964 cv
219.12 263.337 li
219.826 265.463 li
216.31 268.468 li
212.89 269.446 li
210.902 270.94 li
210.681 271.106 210.637 271.419 210.802 271.64 cv
210.968 271.861 211.282 271.905 211.503 271.74 cv
cp
f
193.94 262.891 mo
193.94 267.995 li
193.94 268.133 194.052 268.245 194.19 268.245 cv
194.328 268.245 194.44 268.133 194.44 267.995 cv
194.44 262.891 li
194.44 262.753 194.328 262.641 194.19 262.641 cv
194.052 262.641 193.94 262.753 193.94 262.891 cv
0 0 0 1 cmyk
f
194.19 269.761 mo
193.174 267.273 li
194.19 267.863 li
195.207 267.273 li
194.19 269.761 li
cp
f
207.158 259.416 mo
212.894 261.093 li
213.026 261.132 213.165 261.056 213.204 260.924 cv
213.243 260.791 213.167 260.652 213.034 260.614 cv
207.299 258.936 li
207.166 258.897 207.027 258.973 206.989 259.106 cv
206.95 259.238 207.026 259.377 207.158 259.416 cv
f
214.658 261.349 mo
211.986 261.626 li
212.837 260.816 li
212.557 259.676 li
214.658 261.349 li
cp
f
grestore
.55 .6 .65 .4 cmyk
GQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf235.828 91.2495 mo(B)sh241.412 91.2495 mo(a)sh245.82 91.2495 mo(c)sh250.268 91.2495 mo(t)sh252.78 91.2495 mo(e)sh257.252 91.2495 mo(r)sh260.052 91.2495 mo(i)sh261.947 91.2495 mo(a)sh0 1 1 0 cmyk
GQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf212.076 47.6655 mo(D)sh217.868 47.6655 mo(sc)[4.13574 0 ]xsh226.436 47.6655 mo(a)sh230.884 47.6655 mo(m)sh237.404 47.6655 mo(1)shgsave
0 0 mo
395.667 0 li
395.667 514.334 li
0 514.334 li
0 0 li
clp
221.228 54.2265 mo
223.067 57.4887 li
223.503 57.2432 li
223.119 56.9231 li
223.115 56.9273 222.799 57.3068 222.476 57.7424 cv
222.314 57.9609 222.152 58.1922 222.021 58.4078 cv
221.955 58.5163 221.897 58.6203 221.85 58.7269 cv
221.805 58.8371 221.758 58.9363 221.753 59.1182 cv
221.758 59.452 221.879 59.7036 221.979 59.8944 cv
222.083 60.0832 222.18 60.2058 222.191 60.2205 cv
222.583 59.9102 li
222.102 59.7722 li
222.096 59.7993 222.052 59.9447 222.051 60.1582 cv
222.053 60.3119 222.072 60.5137 222.199 60.7266 cv
222.323 60.9422 222.589 61.12 222.873 61.1547 cv
222.995 61.1637 li
223.224 61.163 223.405 61.0706 223.532 60.9799 cv
223.722 60.8404 223.838 60.6864 223.923 60.5853 cv
224 60.4946 li
223.847 60.3395 li
223.963 60.5227 li
224 60.4946 li
223.847 60.3395 li
223.963 60.5227 li
223.736 60.1641 li
223.736 60.5857 li
223.863 60.5835 223.931 60.5413 223.963 60.5227 cv
223.736 60.1641 li
223.736 60.5857 li
223.736 60.1282 li
223.485 60.5107 li
223.736 60.5857 li
223.736 60.1282 li
223.485 60.5107 li
223.705 60.1762 li
223.326 60.3207 li
223.338 60.3459 223.362 60.4254 223.485 60.5107 cv
223.705 60.1762 li
223.326 60.3207 li
223.5 60.2543 li
223.319 60.3015 li
223.326 60.3207 li
223.5 60.2543 li
223.319 60.3015 li
223.323 60.3211 li
223.33 60.3697 223.337 60.487 223.337 60.6602 cv
223.337 61.5597 223.375 61.9253 223.374 62.1787 cv
223.374 62.3057 223.367 62.412 223.342 62.5897 cv
223.342 62.5888 li
223.311 62.7442 li
223.298 62.7899 li
223.287 62.8291 li
223.272 62.9564 li
223.275 63.0045 223.268 63.0907 223.352 63.23 cv
223.551 63.4083 li
223.774 63.4605 li
223.953 63.4509 223.986 63.4086 224.022 63.3962 cv
224.093 63.3502 li
224.231 63.2729 li
224.315 63.2366 224.452 63.1896 224.669 63.1533 cv
225.02 63.0954 225.29 62.9754 225.471 62.8796 cv
225.665 62.7729 li
225.682 62.7642 li
225.626 62.6454 li
225.665 62.7703 li
225.682 62.7642 li
225.626 62.6454 li
225.665 62.7703 li
225.558 62.4225 li
225.558 62.7855 li
225.665 62.7703 li
225.558 62.4225 li
225.558 62.7855 li
225.558 62.3524 li
225.349 62.7311 li
225.558 62.7855 li
225.558 62.3524 li
225.349 62.7311 li
225.541 62.383 li
225.162 62.522 li
225.172 62.5517 225.217 62.6569 225.349 62.7311 cv
225.541 62.383 li
225.162 62.522 li
225.34 62.4568 li
225.155 62.4994 li
225.162 62.522 li
225.34 62.4568 li
225.155 62.4994 li
225.159 62.5282 li
225.166 62.5937 225.17 62.7432 225.17 62.96 cv
225.172 63.2671 225.22 63.5298 225.361 63.7613 cv
225.495 63.9935 225.781 64.1698 226.056 64.1615 cv
226.424 64.1531 226.684 63.9473 226.866 63.7018 cv
227.047 63.4501 227.157 63.1229 227.157 62.753 cv
227.153 62.6265 li
227.151 62.5524 li
227.154 62.3535 227.197 62.2678 227.255 62.1671 cv
227.369 61.9942 li
227.41 61.921 227.496 61.8148 227.503 61.5878 cv
227.505 61.4781 227.468 61.3545 227.412 61.2659 cv
227.326 61.1306 227.229 61.0634 227.14 61.0074 cv
227.049 60.9524 226.956 60.9094 226.843 60.8632 cv
226.026 60.5301 li
225.648 61.4562 li
226.466 61.7892 li
226.591 61.8453 li
226.624 61.8643 li
226.748 61.6825 li
226.571 61.806 li
226.624 61.8643 li
226.748 61.6825 li
226.571 61.806 li
226.883 61.5878 li
226.503 61.5878 li
226.571 61.806 li
226.883 61.5878 li
226.503 61.5878 li
226.838 61.5878 li
226.529 61.4553 li
226.503 61.5878 li
226.838 61.5878 li
226.529 61.4553 li
226.663 61.5127 li
226.535 61.4427 li
226.529 61.4553 li
226.663 61.5127 li
226.535 61.4427 li
226.538 61.4461 226.433 61.5774 226.335 61.7648 cv
226.235 61.9561 226.149 62.227 226.151 62.5524 cv
226.155 62.6938 li
226.157 62.753 li
226.158 62.9202 226.105 63.0473 226.055 63.1156 cv
226.002 63.1707 li
226.02 63.1994 li
226.01 63.1679 li
226.002 63.1707 li
226.02 63.1994 li
226.01 63.1679 li
226.056 63.3117 li
226.056 63.1615 li
226.01 63.1679 li
226.056 63.3117 li
226.056 63.1615 li
226.056 63.3719 li
226.162 63.191 li
226.056 63.1615 li
226.056 63.3719 li
226.162 63.191 li
226.084 63.3243 li
226.207 63.228 li
226.162 63.191 li
226.084 63.3243 li
226.207 63.228 li
226.207 63.2273 li
226.197 63.2078 226.169 63.1186 226.17 62.96 cv
226.169 62.6947 226.169 62.5219 226.144 62.3536 cv
226.129 62.2681 226.116 62.1761 226.034 62.0439 cv
225.992 61.9795 225.924 61.9057 225.832 61.8556 cv
225.741 61.8044 225.637 61.7846 225.558 61.7855 cv
225.345 61.7956 225.273 61.8563 225.199 61.8884 cv
225 61.9949 224.838 62.108 224.505 62.167 cv
224.153 62.2254 223.904 62.316 223.733 62.4026 cv
223.54 62.5168 li
223.507 62.5402 li
223.723 62.8533 li
223.539 62.5204 li
223.507 62.5402 li
223.723 62.8533 li
223.539 62.5204 li
223.774 62.9472 li
223.774 62.4605 li
223.599 62.4701 223.569 62.5109 223.539 62.5204 cv
223.774 62.9472 li
223.774 62.4605 li
223.774 62.9578 li
223.995 62.5122 li
223.774 62.4605 li
223.774 62.9578 li
223.995 62.5122 li
223.774 62.9581 li
224.24 62.7824 li
224.213 62.6994 224.123 62.5724 223.995 62.5122 cv
223.774 62.9581 li
224.24 62.7824 li
223.779 62.9564 li
224.272 62.9564 li
224.24 62.7824 li
223.779 62.9564 li
224.272 62.9564 li
223.815 62.9564 li
224.26 63.0635 li
224.272 62.9564 li
223.815 62.9564 li
224.26 63.0635 li
224.096 63.0242 li
224.258 63.0707 li
224.26 63.0635 li
224.096 63.0242 li
224.258 63.0707 li
224.267 63.0402 224.307 62.908 224.332 62.7315 cv
224.331 62.74 li
224.332 62.7306 li
224.362 62.5197 224.374 62.3482 224.374 62.1787 cv
224.373 61.8394 224.337 61.5379 224.337 60.6602 cv
224.336 60.4296 224.33 60.2706 224.303 60.1185 cv
224.286 60.041 224.271 59.9625 224.204 59.8511 cv
224.034 59.6747 li
223.951 59.6184 223.835 59.5841 223.736 59.5857 cv
223.531 59.5925 223.436 59.672 223.374 59.7154 cv
223.269 59.8006 223.224 59.8636 223.17 59.9259 cv
223.096 60.0173 223.026 60.1016 222.977 60.1443 cv
222.938 60.1741 li
222.995 60.2885 li
222.995 60.1637 li
222.938 60.1741 li
222.995 60.2885 li
222.995 60.1637 li
222.995 60.342 li
223.021 60.1656 li
222.995 60.1637 li
222.995 60.342 li
223.021 60.1656 li
223.006 60.1624 li
222.974 60.2501 li
223.056 60.2103 li
223.006 60.1624 li
222.974 60.2501 li
223.056 60.2103 li
223.039 60.2183 li
223.057 60.2128 li
223.056 60.2103 li
223.039 60.2183 li
223.057 60.2128 li
223.051 60.1582 li
223.059 60.0702 li
223.064 60.0454 li
223.065 60.0427 li
222.815 59.9767 li
223.064 60.0481 li
223.065 60.0427 li
222.815 59.9767 li
223.064 60.0481 li
223.134 59.8012 li
222.975 59.5998 li
222.914 59.6481 li
222.976 59.6007 li
222.975 59.5998 li
222.914 59.6481 li
222.976 59.6007 li
222.969 59.5923 222.902 59.5026 222.845 59.3937 cv
222.786 59.2864 222.749 59.1565 222.753 59.1182 cv
222.553 59.1182 li
222.747 59.1745 li
222.753 59.1182 li
222.553 59.1182 li
222.747 59.1745 li
222.748 59.1582 222.827 58.9947 222.939 58.8258 cv
223.107 58.564 223.347 58.2428 223.542 57.9929 cv
223.738 57.7423 223.887 57.5638 223.887 57.5633 cv
224.108 57.2982 li
222.1 53.7354 li
221.229 54.2265 li
cp
f
grestore
1 0 1 0 cmyk
GQKSMV+HelveticaNeue*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf232.059 60.228 mo(A)sh237.435 60.228 mo(nt)[4.52832 0 ]xsh244.563 60.228 mo(i)sh246.458 60.228 mo(g)sh251.179 60.228 mo(e)sh255.643 60.228 mo(n)shgrestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/GQKSMV+HelveticaNeue*1 uf/GQKSMV+HelveticaNeue uf/HelveticaNeue ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.1.0%%For: (Chris Roy) ()%%Title: (DscamAnatomy.eps)%%CreationDate: 2014-04-5 8:47 PM%%Canvassize: 16383%AI9_DataStream%Gb",KLO/O&ZKQ];h>re$5\MeB'LFUOpKf:D6:-3!em@Z)rRFHE/K7d6?L-s+np`k@>Ll??d:d-fR0a'jrCO3Kl$\fmJ*-\LqBtFR%rY2!q"bZKnKfh,9Sr0Gp),qq#(W@XL=6[1@5B:[i2XIp6dAYjhp4oEU^\h0.k<Ej3TI13K^"i#Ks5bnV)m+&@'rg(0US;nAqhI<%%Zl1=_6tRKI:'Q>g7rFe4/+0<AV+t*XqSSrFf['//%W:jSCMD5][SJ579mN*r%>MLS.rNu3#W2mq%Bdh?rEcNdC!1.fATE.t#<a-E%K?Pj[^6HZJe9_=g8*qcJh]K/;7!In1d,TiXd2@q!NH(lRHO`u9_uASl1&N(qTFT+LaZkDq@k;*mo=8s*jVLf4oZ:@eP,PRo<%Q)/%q/eZO0!b#K./K.\'`(T$dp`YIaH5E8YfM<9jF74,)Jsajn5^Nh00B2d0Yo-#*(N37PD`"6*a\S%JFGDNaq;i<pY0^ImhaLJV/G=G%FpqBDI?FY5NT#XT7Kh60:&lScIo_,N#3MlSQTQNa"TYG&\TcT=_6&YB3ROJAj8c:`QUQ<pqh6l05+VE=WMBl`f02dF:^pBue;b(P%4@=aG3p_69HMLYi/c&sD<[?^0)g9rhn7DfQQ@.Uc`3[\fSFW;Z(3P!eQ@$"3Ltp.n>!3iA5JABCY!*F$p)4s)2'-]fAGoZ\U(SZ7%?DTAoT\FiDQUKm)Vn_lU)!HuIJ"d4@kqmeMEq!3a.sFDo^-rX*MBY.t7IjE@i,/$c3Xqq6C&!rg6`G/G8u:""UstgU6((sfb2gnk%]Ud53WE]p*_%h>aWH&kKQ-8Z/\I;9VALJcpn5PS!Bm<jFi41+qG=[W`HV&Pi7.M&K<1]"]4Q$lF6(d'K8jT)6Ss!a5,PZpIcm/==%IOgd.mm<Z)'7N6.i"KiLGTo"4O5L]J%Gu+@q?/JY2@4aZ"oX$K-mM<&:Dk6f3PdGd,/Fn>OuGtY8aAt&8_XMmBXolf8dY%nV4`>-%#rRhW,eYPNaG@YkP_/l`,>>=.hM(sF-iASQOn"3&dW2i"T25mk#G5N@$'c(7')2H(T`Ji;69iV[OnKBg6RdUG"YZ\7V"N)TdOkTf%e?"TF.A?Z*)<dVXRF"$?S+N.3L&Sn9PTo`/r?F9Fn%pH:J_p3S$=t`/LL?--+OmO?YX0iI[6_tBV%?g,k(PRf"Ri./"R?1C_&Kad%)%i]`V!UuNJPKr-muuqqO0kG$9L@!7bR&/X%2/XboW-5[nr>B%bZ8Rm.<s9ST2<!`pDX"HgDUMM1L1r2"j>UZ5`6=M_V5tePdW(/%<T'$dadYE=iBR)a>`kq6Jj>o@hrG:`0_j,2ae(5R8s)3h2u1X-aD^I8r+34qG;cM;cI0I:OZ_%*a^;#8IV[j%cPNZ^a;sZ;r)KfY%\+WPq3;&@%Eu7"6,i_LG/&0.alCX.h-W:YX<K`5BWKJ%U)m4FqK?=mLpjXU3OV7G<XsdjIYb5&d;GrZ-@S(ti?,72R_PKgUn4WRa%"KJDVBj,/+e;;>6.9&kfMb7]#b#$_5rh.]P+K6qXj`jsuW3i)%&!tL2Ub5mV]aa(r7nei*2PY2I6BnkWn4C@agCj=9b4><Jgu_9V%;op@XO3:E=ApG!fQf4G-NOHJL8LYf/#an?i^/G)\PA;>*&i=:c4`lBmPt9)pXH8#5R0n7li0M>[$-aG5QUBZLZA9['\//$[QV^<j%``qafr+.?E#63_&D/%F)">tu69A4WP(;ig>$0Y\N;^l<W,5NrXO&;rHpb]?;7:7OW,d9!TT\be0A]8I7c"3+&[oBH'V\osD=UYK!%Khl%ehFWP2F?2#]p1ZUp(a&7M=A#:@`?LpCP#E!,%I,9'&_(t:9Ye_jQiaT?Ge_=27096Oc/P!(O(efZ6:KrDORYHTQ8FJMJ)q=2%?V2O&NUa-uTDF#"^(423_>$UM)L)BH"k99nVC6--:$5NE5_(f`]BV8d&+]upN'bEaad-mQMmV+"=h.).8KdWi]7NX,.:kDP35jF9%=pQs8X,K6T,BDj^r-k**A_MWj;BV\39Gu</)CW@fe_X?h[#bE(:^XUsc_Q+=TZt!*arc:o1.+Xhg1]G"c]B1tGObV]^;>*#:oKOT%.()TX5+Ul>^Bs70hBX(dei.`U#tMrt9FF>8cK3Q<;W"9gUCkLi&M9tlQN[^^R*(P;PdcoR(cS.W&n!:7quD/'KW!et*9LjdNmr>)%jODak<0#22#.4GPR2gcRC0(*1R6=.]J3,/\gA=37;Y_BWbOO=i(2jI:joDdO-&1kEG_C6P.b[Jpe-2n1K!h>;k(%Bu\Xk'&%/;`P%h't7-9e_Q1c7Ak<(rqkDoB>O9o6BCDq%C7gnKm*'Bq@grn-f630<p,4;hueuIY)=^n=<VV5j+L=.BSn%Yd+6R-'eQ5R^"m2*RI=S%$[j6?J5>b:JWs!^'HMp&H:@7sIV/pE'^7oK,'&nm;dP+<!qi%I_]rd[=%XDNZ[O(cQbkjK"^&Z<TroB7;]VF1$7AE:OuB?%("pEs%Isb.^3Fq5PejE-1Pl&o%80V"b0i6L]BR/B7NLuEkC9;*N0X"97'hm_scmuDf.,:2s@(IW_<i@oH?lLLOXbWnE2<g#s,O%_,Uo]1$%P(ma'__CiWDm1IfX9MV:`q0_@.+@?1Bg&I@8a:u<;12>>;T=;RL=*rDE(SJr.X,J^.V@`WFaZ/W)gIr"ksnpn\Mf1GT+r?AH)m'n%P]b3Ecg!ItCnKroA%F"k'l$'u?Bt4eQ,GP:SD;`B>bjZ]N"B"1!pL(qXc&?Ead,JIdQEr8PWPhG-IO&V$N,m.PVU\N%:s*"&nqs/%&qnXPObbe./F-tdZ,HrU"&hi&pFiMmH4a'YkrY_g+]AQu,@$\s,H4:?p^+Q=&kNmh=&kY;V=A/JM6U[2Pt9aiTaqK9TamfXV22is%8fs3?bEqnnNi[5b;B=s)O',6:#o[u+^NK=fF1A$m$`h*@^8tcK<a_Z8&G]SmMoL$PJe`e;e<6X@Zc8as:'#JN\ktEjTefSQ>7D:7%NEsBNp"og,Pb7:(;GlHY3W+qQSJl)cU;]rD;<S7gmQ#,:&^#[qRf#L_4TjFQ7lc9p9dp>=ALd(=MOqei+]b*:0LR<,@$<*-c`*G3%I5k.;bYX6Kb&=5-b&D=j0&h(TNQ9B\'hmSt23j_Dg4/l#0#1jA`R)/UU(f^V&';lpV(3db8Ibl=<6!9^Qc:Q/?7:+4`E\[9%<PN(%Sn)*^@?/Nmom?O"r)&GP?+D3qX+W,T]S4Q4(7ShT;^bOtWn1V9m2V$Q%%C=2M;!D.VlP%b,6ogH;GE6\>5>#==%0.2VBc8?;1:-*%mP$L;KoE=kWYC2[BOd^!f+dKon)or2TU$u\dM%mM.(:H_4sRfJ)1Ct1Ue#LH:^^DTNI@/G^?61m8_33OFp]-.LMW-TQ,Oa>k"(Ou%cDGnZLAW7]'Toa'&f>rE1"/^+(oKL'>bMlfSiV1bqC_&^X7BFdl^9aCkSSh&Y$qD-D3W8<<JU^^R>`I]+l8;4$A;V!KlRJ`1U$sQ%oI,:5j*2W?EQKYOcVhB;)T_j-pn*Zi<*W;e"!)nk7Rfk0Y]FAbc\;',5uJ9`:EHo8+Q%.1N2VI[Ji+!==9Gn#/$-C]l+eugTN.q@%TV%hpf-lPG*pbQT^IZ?`lqTuL/&jVG10#l7m%oU#m5.>87iA$s&fDPKR)3tO%2uI9,V';)A^E>o09p];aeLDOKi3d*065R>"e'Lt%aJ=^;5pU?)b/fff(!TO>!2aCnL**p[f(ai-*\7.hdBs_f)t&:U[4(!2X>1K^`HGcn<(6Va,cO\MKP>:\W\P3P'c!-*cfMG"bS(@4%=hfg#5fY.(kCd"OIj[,A`m-]a)QN&KVHP^ZXqas==L1n6q)o0`nB.&Krq!p<<1-57;TeHEM9(QBa28Uefl\TASd)4r`>X@TeJ`5C%Kp7iR76!<!s#C8KE0&YtQ'G18%rBS:m2c%PCYtr4$Km\YbY+n"@S9TMc;[gqBipcAH_jKTVu!jM;Z%Ws/$#^FYs9b=Q22Hah`@6p%ArA-2/>\baPCCu(k&bjk@P1>+CK+A&=C^D*J6g^?X4/FDE^!dX"DrS5&t+LH>M1#nXL>)JM]7qbiAH`L.qGX'KHX:+,lXS9$<>&s%%''d6-Pf3gSP(E9<?%gd3_>_UH@8PNc\Zd?JLqF9MQrjM>?+>#'3Rn,'\Q!3o,57W=`Lkgk($arb=]OIHV*V-WofeHQm);GWIn;g%MA[t<./5F\`nBK=,9p7mD7>2`p./Z;d/Or;`cIF@X\s:12lDh+#)L3knJPT@T^:n#e\<ZoFZ#rl2o*Ls^+4PQA3D2;Ue&$q%o+#>%^f=Lld69ho(nS&0Za53J249S!NN,t]Xb*nr!!RNc@F\:l,X'!@*:R=3pBm<Y7!i!:/]GH>[U#^A<"k>S!0@4:R53:r1JA=W7U"n9%8SuM'6JrP],8::J`1/4X:iJKPb^:-^C*brXg+4CfSA:8Xd4).Im3:10FX*D$`+19%0m4:+p/>Nc"m6N^HkNl9Oju]nAct2R'^FW`%QLJ!dBoVI>Js<.X:eBo8IP,BA%FpOr?kfsdeQPa@1%Tu``B.Yp>Al/EM^:3p@AgWVPsr>q/8755SJTXN`<OB2LX+1uD1V&$1&U5!%-r_p$MIecf,+rkJS>1GU(oF%ll?]SZWMHUCWq@B)nE$/uHOSfS4,V%9f?uEVTm;nN=S,PPhhmt'kmMfaWeY=P.Lh`&7'D^]el$@'%N[qArJ_sT%6K('VQ)Cp/8_M(8\$8qr)&#cm]ufOL1R)W6)&C7Nj-D,e)U>`r-tR3sCDP*mBV1/cT)`Y*]uk$UBDM2l$A!'HjG>Vs%-pCA89?PmG6u/)OUjPD)Pc#audPs<rbt'44D_&CDr=X8$*rJa][Op?oYkq2jRPNpQ?$gu]bUEb(%re\A(sq=]`VuS%$Oc`_cB\-h%=eS_ienV#&2]co"Nn+]a=Y'>pN#8f<0dLH=cEd`;[mjdt_$ePP!cqNHo+t;ckr<=Dg+!'.VDV=R00bk$OFjkahF1i<f(b;Kbm[[t%R^F!K_s86j:"NRV(4F@t4.-il(=\Yfn<<_AgOuR<"XI)."de5H7Z=J_8_,Z:S$Yeg-V=3;if]U(:6]=S*n'p(J"ii+#[^5&.[4<Q%Uh?'B_-j\&L-sPQWndW*U[TMiq"<=EhsGoTBBh@'E[d%s"5fkLbU%]crNSKMoKKjl5F5,m$la];E/H_SCj4q`H88),LZi`PglgE_%DRYb,2Hl<LS2_C1\nsHIWYG%NY15HLUdtU>Q>!Wd_q*o3]ds,NBP:tuq[HeU9;u19Du()%Gu\H_Q.8qtV"tQMdp^C@e1s0l]e@b\%Ac&9>T./MrbP"M+-D]jY'V/o+I>Nea[b^`ROGAZNC7m+*=pX#Bd9%H5Tbera"^V1ck+pasa,*)l#T+D+-I<\rNF'6M79CI;(CF,G%443=(rYfrD50&NMYgJcQM'>7>TRr*rqW#$^Sg[VQVk\->o]]:m%D%bN:T$/!$7Xk^ah>X=`-C#q<DNAX&)6P.WiFO3iVKH,C/);/%6RgAIpF5alM*-Ab[ep*i-0.9ph8Tu>7+Bb$27huTor[t+*t@X[1Hm.!W9'ZN\1>=T[9j%MEjsd@5gMrQ7S?Jja^>f3Z-faiU(9*/%CSN4&j<+;R#oTER=/u0@FlHc^I<)[Mq4e#pU*<=Nq7V+I5&?;mX\OV!gep75e99kZ\2n!V]n8@>aTFh($kSqX)[HS-[5Q@"NKL;#%&H>!aa.N=P#a'or;.N5)b$5_hAQ74"<=*F6ao-XR>kcc8qkVRf.<N_^VtBkNPdi%dY1[QmaeLbQe7d?'0Q3/+ph@*i5jq(.'Pk)F%KHO3^b\1ACF40r!$n"9q`ak%j@D=1>-X$uOT'r\:?!:,2Y?.L@O.>s:TSLIh#ICCEYLNleXM"R5k7qRtOa9^b+"-]7M'pQu"0!.-%6D[lceSl^>rA?htn7eIhBg84%'*pJdn"e?"5LPB`mi>,^nR'Ln"*EH&LgS:6(h!-tj0Lkl4#HEHSOU*EH%/V_If3YmWPi2sDbjPm%.s+UIA)M:(qJ7d(qBLJHr'!<28g#G\F3)\j15X!N^$mCd74t(.aPCjR0CVP*\7ibXO50VorBc["_HfRPYEsb;2#H+\"SpXA4@N*C%MGS\T`WmK/Hm]#@P'oLZ:=,ciYWj#lpYPe]:pJhpap:.dF!EN42STf5$i<<`L3@]"l&=_KUGE21<[;f,6eP6VU6kCGjkKUuMYu<Q%rb/L!]@Ga[Ejn8@W`AM\C#m$G$jY'XT62*d`mBe8X#1uAcjG$K5WI3Wf'^)I<$%&(YS-l-1sQ*:V?$5/"e`m1dpMAa2E4V#-9q/4%-hj.s]53&Af?dkC:.ClTX+%ga<i^_GekU/D]28L!!TOU'co^V,"AM7X"cSP#_sor$$7]m%!Bp?.f3W?f[2]Q>SX(,nPNOD@o#qJM%@@#L_rFkiAgc5J&h!3%KIj*5*a0%>9#3,Ao7#75BBs$e&%)>TiJ,.b7aLKOcVh@]LWYMC=I:7D;/8!4UF6!XPWfI*GbDIrmfL+X4%ro)1ucLq#>*Jp!"O6hr(&so.2`9EPbSH%*Z`J'PKM^QpP1qN1+q\27pc@>R)qJh$<^<j!3q0C88m!jEFr,$QQmK+3;6P9X_F^%$o%>%HL;[n.82acq3(#Xm1$A\h0s_WRn*m]rKu*6'*)A!!QtYXC$Q*O3C3&IUT()W6rB"t@i3$n0V:_<5+J!.G7$+48oaUcX$K1BTB0%$ahjImT[S5Zj&<8`76[[jiHW1)G'fq>!,&5C\k-L#=+bJ^8[b,B.`"D8Hkj<jb8U6U$>am:%\N'R"\i;*-js'(9$BqdG(TD_bH'3%Bj6k<"iPf[RS\I.iIkPYXEQRWJ!&W4a%%NU[VYeZb9-TP#:\MH3JJf>@AetS3$]&)TkJF*D#AX[=?ugYWR`HF08FS/PS*hMI=rL2%.=@*SJjgNJL=U^Hf0:1kd2&/nQX`iUogSmoF=0[`\3I8If0ba['Vd5tl$iRa`=Cm5Z4"TmqlOeIm05@=alqX:Y@\#pCuJ[l%2$XW%4?gTPE:+fPH9oG5-RO(B9XsA;VpXkRD@#-><<"mOo_]f6V`GOjRjf8ef:%Z<rL^ikP:_h*o:lN2/[4B2.HZp9QTd'!>Q-o_q+mBS%U\B9:K3.*JGoDXQS_!ga?E?Qj8mKGsY'!hGeS1(/h$bthq"Jf:)R@Sd;kGi3ppfRR;Y';D(?a2@5@%""Isa3SEmp#_rpFYHmSW9D%D7\-]O-']e,eoC382iK@RXXEAYhW_PGM/Ss>;?\mpp[I$BN=o@S+%Y`)f6l"bhJ05SF'Eq;gX-9l=(*12ORRC,-tV[OTo0D!ipg2%h%[O&f#X0=P_fG7'`U7O5:@'@rQ,ld,PXdh@K0Q*h[lE;o5Te)rHE6gRWQ0!*T[KV6W4mdF]\HBrc;nCTSAW3DJ.mGog+-,dgr?9%qMIfFJIfkA(g\(<i1rm0&(L"Gd,/Y])nhQ"%2`Ch%-<U6r'U2Ps,`!<YT/YP%O`HE^M5@;-[GV[NS_^OnKIeUq?,A?1]lV6B1fR5%W1X'(]/+=]45J2LZ9pf-AjmGb;L>t%qkGlt&=V)=Q%<M`eki^1(q0C9OC.`C/OW"LctL!IkLZi@B78:E$b:W7^E@n3BK(%a+*F5o%r05gV)k?41"VhK2re_Kr`9`PL7T2r'gJ3?Y8nU!E2Z>aT%)9o:9J2\&B6%Go[3j/*"iJAX7J.(Vc6*9%7\Ce*KMO00j[KhX%GJab%3c0cO3WH?HqXe-&>3c"r2O"!FR%r-kc23e%lL1BDNNqhg_A4i^]!j-dh<VPad<tG5OPOS4cQ8//G%^B`!.:@Z?o+79<0G8.2th%>%j]+prq&9[sZlo@JIK>/cj'e]A)Di#cC]/r*enP"O.QoQcaS?(#!J32or(O[2%5/p'_rU&m4?spoa(7;s&lY)jo^cbe/*8M&/5Y1i%"_h$n8mg;):>F4]7^k0/OQ:*%2fcg.`e`'7Qr^dRBXHMDG:r=\Mj&-fm?HtC(NA*ID3(1Ob)m="6Ir`HTHV@\,gub6Z<@>EKGrI+%.s:Lu;O359]oN`Sn'r;d>dQ%eQFgF^q=,oGEb-NSBHq.r:?qQM_peASOfYXE[d3/AT[?XT1lRMba._jRMY(^;bM*^^Bm<;ZI+"m&%N>Wal0!Pj#Kaao6VUa\SC/Z-GC2H\BZ5K^OihB+V3K%nhm9,io]TI7S$X^=\>m`ZWi<>$%SapFh*02=A41l!S]4pmuUJJfJEA:?)%H=+H"XL$$El\aVV&e^g&]Jll@POho,<I_g6@tcJApe>DN+bISm\1s<:hnhb>rAA3?h!_Z45GcYEjNp*N/!k:WheO`8F@mE)O\^<j%%a8Ha,gE2BFMqDo4VhcK1A85T"V&1HQ[\Qi2[TafOg!umZki-S83'!<&u!=6fUK8/U+cjNUEp`8.(W>cg`o1#93P2>Db?;JUe$X+%P$56hN9%kO@k!FZHs['YjUW6T(,K.!B"&WLe@LaIlaY)TD:,,`>!&mGM__AW$ej;!&)2,O=rd)\:ASJV@o^[>,-,$[0I>+P2ZAf!%O\jn#qN`<hO/>OC<EYSKcT6Qu>u^P[5-6jlr?2c\H?SO;!c8In[_X[qX:6'/5G$E4i0@5n.]*m*BpfkZhM"uq[7"C]<1?GslQm0J%ieFCe-!!1YMs.Y_<)L=a<E/X&/m22"\l]h,feV)g03Cs"6JU27q+u\oiLUk`82`=L:Hp29Ll3EJ9tfTsiV4-,HomNEXsp'td1Tgb%AfQ#rdHrih#h64@P%M=)bFu0P*2Xg<A,ne%gHm!1G6UdkM/W9#8gB>(TrE'l%iK(c+,Z%k>0f"=TlccLCJ-NE^bMR9IM7`Aq>n4W%KMC[JQEG@!/BJfsRYRn_"nk?dBpu`LAt8C8HIsPIQ3VW0A2`eVT=AA)l&S'rL7KdHqYBG]Y7_][Jt%>&W._>6QZ<&-gdEPW,hVfT%Ke@:>c^r#Q56Uk7`ZY0ISZZe`X<7)G*JGXd)9'_k[O_3kjVtm>?_[tF!2^)P`j:fPlluZ]]p;"t\HfaND(im>[Z3QWn_TKBa\\Wp%BMTTTN1=WrorZ79'`_1/I=ZhX;=Ks?<,H'kP)OZCAPj)>o6UBdEY]sV`f_gL2A@uO9W&2)5_e0Fn51>cSb;*3A]S!G'/Bj8p@WQR%R.ZHDD'=SE0g:"s>NQ/;oSBp9R?d*[*t?I[BMk_]!NndOB[Le+\ob&)H1-aQUIiq5Ii40O]7]'h?PA5HMeQE>D2RbBTC4a7*n>ai%O-<j#f>WN6&][?)ESkA#i1aoEbAAXg)9GFJ/A]Yplh\FHcsQjZL;<N47<,3&/kW0-F\u2kC3-ai'3qju[$qV'DTEgXFXRT[7L.$=%:6:6):Me%0Q2sbeWt)W#G7Ypb@g5un=0j^^Bafq?b$hQl0[SS7cFE18Hm0TLbFuAO>'=riVj8@Gka!jMTl1CpEKFG:NC!IQQfW%f%"i\KPY.C`C.N"g6UK4F.a&#<p6+<\,7[^Sp;QS92Q*rc?qfM,`nA?+SW!ofKCls;n"1ml1ha9e]K?sPdJ*;b;=I&1_6*#!m7BPu3%Y0*D3a>[d><a"krIH,LFZ)#CD?-*'>ZAtf/N6%f8;3[2!c(nON>a$3WYcFu[O#e@G-VP!S_`6L`Z6KK#o\!kNpX[=_jfTGI1ruOL%NF.AhniPi=D1D.1Iq=E]JY<0u6*G(aP=Z(X]FbnD5RL'<M?NbOC^W&b&YHHaW\(gm"gsUDPI#'UMmYB[=c>Y9l"Z9:[)nW;%8TEH%4K'd*EL.F_%,0:*Tbms8Q?,nZ.LQorWsu"sQXHQ/_qpVl`i;>#]V>9WDF\m(@DCPC@4u^Mjr#+';(6<n"dh%KIeNeAn$LW&VUT8'%+\D,g!s"0j%2]_BB>+N(BCC@C?G%iXmq5Q6)*.r/7Wq^KR7Q;6RG\^?j(P7X3>URG88b'_7J4L-HA*GWM1r!MWUcX]IFhORFrHWi%mXA5c.R\G4d[u*;j5sMfH@0r*$O.fWpfS^h8EE*IpNmp0Sd-J,X!!b]\IW2CWB`IkSfA'3A(7<sGHu2a[O[ZL@Q+1Hrd!.V]h/1H%XiRoXVd01#/e<`LNF&`6o@<I:95hl6`F?2-7B3iYQ+KGtpi'?:V[I)#WfXmJ98p>Mkj=!EY5WTF<e6j*-KG)FiO(5WF8*TCHgN7Y%4FOcOQF<j90;\D5,@>CL'Ln'Ij<8UVLt$lt"/.Uh&&^(.2h>'h`W`*/?WVe\kroDZ$dI<]?]]H6&=B+s9o`(0>,V2h?>$U1)B\EJ%*i,8ue0.T05G)!Q\[TaaO`[_=IU>s'%d7m"ga>Z@9E!7pem/C^\hkBR.ig6^pRO#SJmfW_2'.s$nL-JUm+)7(=uYGt;77fFmbaJs%B<=fM.sMsB[mkSZkA]N"THl/s-F@b[mm\@].me[u]u]r8J\XOCYL=4ZTW*#&HY<DZp18%32LPKE?X!L^2q&S&Qs^8CPeH1\JC]pp%@.>2^(R)RNYH3dCf(oJ)TYnlUHnEiQ]6H(5b"5iHgAhpT_-k`mCY>iaS2nsWr=^PaQ-N*N\fqUS_:-^"KdkC&CB)?k[-2:OFlVC.%H#,@<f>FMPDu`/@e*()J'n`LU#'qlSa$>&=G#\'K]+jJ^`eIo$P?4/U(B`bXMp87Ckk"<>VKlSN2#lhKVQSYq#n8EfoHe['@L4lT%Ge`#f#J(o]%nHH:8-=bG_LOem]Hlr0O.p5O7iT)7]EQ[3B6^0sf?Admmh*%iU`=Sfg=I)(,I;R`,Fk2'jeV'PaT?.%2>Guh/o*]a%NTn5:\6AOl`Z/ZO.rNG%be5HOa/dSh"aV6u)((=r=?&n?4;"gJVf,-3oO44Nb/AN)\iBr$0)(X!RMcrhHM%!Zd"%j1dJ#Nih3MBK%J6'2?c0(TWd/Dl"hUh8X_@.h2QclK?dA!i/eO0.1j=GgF`jj4Dn;96Q_n(6dp^dpDTSSa?ID+=tI96Qar&gnTf*#cH]/^jIRfW0c%7k7)=n64Q#hD%Igc/<!K''RSUD.RMeoTZs>**+aiTJ8f@O*@Y.0B^[-VEgbL^\9=2IbgpUOr7(uOcrRDmWm<AR3VLfC[cD6bDN/^%?h\%n9;'2\AL)eW6@<W[?gk2/C?Ocq'PR1c[M%5>N`?\<r3(+g9O9NY'PLDRCHrJ-L1q<M3,38=YenCtW3-7!FMtk0k)03r3jmDK%If6G@#Hq27kg"-^H0_[&@%aa<N!g4b?NXu8%hkV4H[]>J$DYMdokjb[`i"+1ISB!?H)q$8:]P<BX1j`DI4arD0`rqb%[&2X(oXs1%0-BJ1Xpp/GAe0E4`h!ZuEZ\45R[*:5K7K*aVS;UI$8d5R2fPUY^AN.CQ8cAERasEsI_Ga/cPrHj.rqY=J'S)L=M=ZiABWoLngS%]%Q$&"_kuAuVY=H`7`/qapN8]%CbJ,Oo*dq[\:OA]aGEu#\BD_KP9$(\kZbkkDS)rDXcc4._jjTs.rm3D_AS%7(8?X.<^4"KnIG_>X%HFhO>eh*K1qQaGb^)iF"mi0#%_qWe*cINe[b-0lc:R_TU4j0`^PmEX1&]RM9hZfR,JE>Op:R1j<jjU]s94lH<Pf;;,phWd9I/Ee1%.%OR+rV;b&?`]h'!Qt4=b4>@ZOPIOUI+mjC09<3+Xp<PPT/Nf+[U(O,2eC1A%tqe,DtUIS&D"^D98o_4>]j[Xl#f1sAXLr/X7K2>%4tXga%8X1aC7@YmVeFoD>Uq5^YfZL]_Sb4Zq_T2(TGjH4Fri*Q2To?Pj0;:gf3>K&Wb0[p9&Z(^jc"4G@CudoF#adnaP@Nk&q.^W%SeQu]0$<['Mca8&9i]RILS=2U(F=cR%Te$D@:SIO7b7`+aK?,eX5X?7+c3d_<&8,E-'#=F%AZPO9sCpUi4X'0n5^3nSRr`/[Zr<j%4#+Xa5?uTd7^e#3EsnZ*e^`tOpX'soo)?H*e/-WMU.+:([fjiFmjFHf5[hKF=TNAL/P-,8]NersAku$c%++_EqPjaA[/)4YW'EcR%H?XkjIajt+I*mKShcg.N#i6.EJRZm?![t-'TKBf"@.eqr[dNC;1eLpR"jK=8$F<V8(3G=-F.h9=\/iqk%83?bl2um]ZEGC5>j4^X%c7.]A'ci*Lq4[as=UoKiV<#h\Vrq/lHM.$/H?\XV0(hg#%WMk#o9W:WT8F6#]VS?Y\'PXnkCTtZm7NQcAM3;8H\NE1kcEpAg;iV(%e@pOK?r\;Y&tjAk&DeJ,226&b]=Idl(N.-.Y4bs`N2oeZaJ+\L!VkJcOFBTYq\Xj`M^\Y5p7SSU$qMP4*>'6[8r6?S&l_(J=<V$i%UI0_c!2W0P0FDt5$;-Mccd:!\Yb"QI($lL"T<_t(#A<@K"L<:8%T5U"<oPbTa]kZ4IHU<@Re/Yo5br`H'fHES^1ORbm:*J)N-+$(%;EAnd3df;o':mpSIiAEjIrqeLoMGG37aPWB/m"R`D\^h>g;?W@djH:g,l1in1Oe!-7n0`OMF&1k=VF/ph^j1I>#h#F`.m&!OL5h0%V_!h1-mdVE<pf/'"m54BmL'ZO,LP^`+Z$#LPTFiM#/%"sieT-KlNp@nSsQI+@%!Pk?dRP@<1il>/-=?KlO^R$=HD"6I&X+O2RZ+i%82X"'..2o=FW,Ju1#o?G)7TFC`7@'"Y2-:kkaF/<ka\>^@c?J7fVWHZUNX-WmCof<81!7'=tW<=YN3%b3Z\/J@]pt(2gtQ5q+O<%%cll3hn!H#3du^Et\*uFngg.m8Qsa1eUBA68[S`Y50q9OnTJ-8bN^>fW-"E.#H"FY]P&F>8]-?S(h<+@BCIjc_c@4@/AU\<0A*%T;%4-lppoU:iXa('eUCR?:R`"tek6RjJ<%4HUs!S*.]e$O]&BAe>W<N##i8\UjkAZ.9BRVBrgCX%uA-hfTGI%;r^@G9pCN9Q*C1-HoM%RaW0fa*RBYfQVLL\M0GnN!>,9.u^9la0F38_YJo=`jZ.3WOn7`)!SnZ@hg4]c_jL!FkkRO3jU.F9tUZWdK>CsSR,-,c9e<_2T\@[%;qFWanD#Q9hakr"'eGkcIbb;'K!p8blg_khc@-O-)62u-B3#`b(XJB2(DOo5@=,:kAbYmjN&Q\UaE:fMq)Vb'`q17q1WBVMTtP#l%;i9mcf:!!`Ugm+WVVG),g,`7=>mds9$a`aAq[>IR0h/r:T9\HRb/.b%l0`c?S"`TbOJd(#(ul-fk/5LCb.<":I*UBt*N@5fUD^mQ%0W\cCRBm&-_mDK\W-F&OptR^FR0tu2"Rj'uVW_R6)/s%Fm;YL@5ni'.@^/=LeA68*kWq!M>FO`4Ce4n'WDRm]2<0WU)dVh5`E,2&%@#Z'c)$\37!H7>B@Y3qc`""bJje5QJ-EXjj!5>+Y@.cVlg+UWe(]`Omqd(+iIK)4Lq?Il/NcZX?_*G>8L@a`1p1kbY"E,+(^WIDe%pRar5pU3g)SK-&VVeAX1^7\P<fh?BAAC5HjVTA<f`HB8M:N1;*pRT[u=J;btitOFPd[[F4Lh9`D=\.mq#mWq`XKaWDP:V&ME>j$c%#C6^567I(7ac[Ba@pUt5!M!j`[d9G9keb,d)KIOZ0?`4r)g(Km9)'.`muVN`ASeTZ<]\,P_:J+hGIrobI6i[/ZLo);JVCcAE0GH6%aUB]H=W6q,o\RM78g?A&(m(qm;7%"69uc,<-q`7R:?=/6U<9)i(]iIH(W=15B#>Fl[3)rEKFa'ci(W_gIib2:c3Yd=:+^t`XO0'i%*ul3N4gdZ0cL8omM.oJpjLJk&/<-?S$Durs!/FJ\*GUaXEnFj#Z]\l3FpnbLm5fp.=";I`/Tn:#[DAHlJ6nprDMUTJFmA5-WNMRb%Hf>MnDb#\p]>Ub@Nl0MPGBU#-W_Bh0g<UQOp/\-9DXt?uaY7GkhP@r^Am"W*p@oWnd4:@iXYJ]H-hY\A"-'^=/kKT@\a"1>mePY>%I&&OR%\^@#'KA<m('fVHBLjdpQLQ-MH$1#A%TCB&<u80t5ZL/+o,aMM._k%=(T?uj"]/E`2YmnZEO=,;`!&[&\WA)Z#Vg\@o5HP!%MVVQbP2L1;g9hegUF.7umN=f,*]TUBU]bl*"`Q:TC)"hGosipn5$.F$bL+E,jN-,'YIG@kh&sq^8g/=!-Xf&WoE/^'6.;r'r1V4\%HJ8Td(oj)m6orYYD&hthhLN"9?f!_jj7>lTAMhS+a,8DncAc)-lm?,d)18U?XP;27Ao'r+qfb!mg9_er)NU?G:m2WLEN[>K[(!,*%*IW?!o,`IU[3uBirQ`#r4mie$q90X/@q@ILWjT6r4kg'%N#5V`F>)cJ^,K7(M8iUd)Z>BO&HTB3rN50bW+p_J=2S6hq;,p>['[Y9%AM_I&\hSX0`G=G&Wu-ea$^6n:.L,QjP4'u'0jN&[nia.pC+[r-Kla?9k%o_,>%koaSpnAVL3@@kl]@(>IPlKnc?L=CWqZ<#Vs4*P%LSqLh(m[kZF_E"k+B2f7$f_7".uVC&h2IN"R@PF"k';,S[gV?,X]<3'fBP)&0CJ\6a3mR)6=UmWA\+Ji4_6K7K[H9B-("@J1(Q<8%UBgq?8.uK-VEmd@P:JQ!/=#6%=*g\N,u#fD[4RI&0dkS#6*mn5;uJAiX`jeN9J1t*V`@r1Bj7N.h7GBZ(Jb;$;.\b@f&>"#/0kL2%)/g^RrX>N]P"U#&DBsX.RDi^O2`lE15gc-7ZtP]<8M2IO\F25]JWQk3X_58Fj.<5^6,rtPbDe[eZ/5:l+F<WW%E+.`$i%tHYm6gQ%\/6;KHOi0g@qZo*3gO*L4m6ub!p9!GZhL,&]`mThTsOKde"%JM_hZOoK9#U?SB$E1hLj,!>L89=S\59!hHOrB+$+`Z3](1Zi^4Ne%oq8(\f\AZ4cjab$3kT+1!$=7K%m&D\O$7Zs"3EHM5\D%!:(oQdHWdo)g&oO_W!hb0Xr?DDE-p&?32`Y[d'u[(%\6dkQmtSi(Rd1U%V>%6h?gSkgc?bPT@Pffb`fo[h``Pd5:7CQ,6`usK^>p6V-CO;lfi;X6%a1Srdlo#%So_(32eBOg*U*kH9lfFmk[:s,CD,beN1B7Z%C!I*iWFG<DpP2&YL#r3qfNoir\NUG]_JF%&1tG5jfZ.fWHe!O\e^-2F;`B`^DB=jjR-FK]bWT0h9u^q@/IAjhP*<5A[6e^qMn6fA%MO:B\+LA$jR$-9OBXp-T`D>sT1kf9acUW1AX!-.H]flsADc9n\1CtlcVIk:)a"G%8SIK3;=a2USb0nJ%8_b0n^U"#pR0:3M4k/q&%c/W$'Lg;>sc3r/Qc(,rDUY+\EO)O%"j2B4NXQegGZDo]a=hCP642Db%Bu`%!)`s[m<oW&/Am)Pa5K/]0i=*BbI?ShKDo":%H$AYr%QQ8-_`9=5<<bo=ik3rr4mj=^Mm%%ZLFjc6.B?$=&a,DC)3P(&n_3e@Z"P8nVHtQ&qpG)V4-fY)8lTO9'QCY>WRWo6TPMM55S1V4S%fG?nTI+u[S=V]eH(EPcsCq4WC9\In`MRlj^53f;94gb>YN!NC:$%oIc_WZ_c&fO3B]kSd/m2"jB-tbS-X98pN>L'>hAj4,J_9I8n%4/0W3T&6"'X`et0]]>rV2_2uRFiZ8[:!SdaeLMS!1-_3gardXBbtu^^=R"p<.n]fpG@B>_3$4Q7f,>[jS@FTe8(;d+61W[Bjc%gR%]?fSts4[3XhD(Nf@VBT8UNso"F3J<3R*mM@P(4p<$ud&Q7L<BP1=f/D-R.>?B.#efSNQ7Dj2mcZ`h4XBmD&1*Mp0M`4;Jfh`X_.?%a<3KfbtO2IEu:833G\Hc\gNDp05,KimpLU&%&tF\F1T8A)k&:8N.!f72!/j`AAAMrk`IoY70Ym$P4jV1T1d+)>@cMKk@cUZ39b^-%c`o\\!EhrQ9j#toXDIi3h$M86iB"8Zen7cBM1`\`:GPV9\O)45/([Y]\7)=Oq2iL^?8l/2H[q[>a36!>E#l<o/pVCX]BQrt(3K,J%F$;GHF6-I^n(Dhj&.k%KJJ`#Ekb4gZe4@[so@J4dmqd:l(%+*%lZ9K00WRF.5o6:;EOK+[#(O.nj,^bALNB8rL%rQ:T>e0-gammi%G5cG%:8lIs&#YVT<KFXYqnkEa"C6[FSD@m-jdl5GiUiOs9W$c8r8HiWG_8MVX0p-'5Fg96/Ckog5o6l]ecA"Dq*"%PJQpcp86@AY%'@DF,Z!!WSoJ6/2hr9T(!.,=k+-DrJk6]ZOFW,[posjN:d:tDD_r,hVi5qgeAC.\/h'S,Z'@5=AcJ%We56LBB`:M";k1#7NNF1^2%R%,@>2%=Kdd@aLOAaOrNY\AondSE1GI*?ULh@Ej29m2]>!T+C`U-"^X7776tof,Ve2qfdbB<LKoG]J'ihdG1Wdu_@gdBp!8=\jeU%G)D%:$ej:1_pN0;(-%q3<N*#^;YcR]+A`Lu]EjSJ`lb?7'<)4teAb,0e7@L^,P?3l*iVrMMt'>lH5>J%$N=N+H_`t[Mss8kH5sgf%doauBr`ck?5uZSZ1=Df+GmhYdVW$@dFtJEcW6T?TEJ;lF@P1FJbiB,o+r9eP>iD&QH0<=D4d.DOm!>KE=#fLZGDgQsK3]Oh1S!hM%Y?>/i!/f&>c>5(P.2^oG$AS<i!QtnA,JoeF%S/QKKEiF%nIfn>MqmaQ&<+/WeE(L3L8mq,PI&=a;aH-Y2]&R/dI1@YiRihj7][R_%H'Wo_cHa\S-9YLd_q>,BS@^SUg?aNpED\N:FG*1go[D,ipSRIa=`$s7^7^]pgO#'cG0d18M=Cd\7*jXi*i/\6b!U<]=0/='%a(Vm%X'@8'%Nu.pjZlt-JmEegWPqHtMhSji=<"?u6g<"PmjrgW5@_f.n*IL53^%)7cT2TKeE:F_44(J-41hh?G&&HVJ`<KZ2BI%'<kDcD%oZ[SR/XBmsJhNER+(%2e;LoaWh&t7TRaocH6u=5\QS+;ZgN_@>[^U^e4RCLsX2!o@PEiK/UQ($L6L^&,LL'rFaqEq7Oo3n@!\2sf%j#b#^#$O08XBD9AXXA#">3=kW5G&io1gMPTHq!9^n$:^a0#t'j(+#/?8$6T#L<iCN\o]!i2*mJ3O"""/RWOOT(-C9UM^,]##r^5$%g*8X_n'CCT6h=D?SPV1I9s!qgrH^PHA`H\OF?"DXo?5Y72ch=dZTN9P8c&[&Ou"%<[oU#ZMX)LMp?,j6/i&IN"AG:aAqn4P0!'$[%PK6o#cUH\LVdq#)qM.jiTgj;S:5^GZk8A8tFN5WTY3/GP*kT?(A+R'$5c8=DMt3`$;_L8f@2uuFbk(mn>b#k[di#d[/j>4qD`T\V%`4'](\nUU);C/RQ([4Y,7QKbJfYY;cXKC'3oVOE+8E)3fL`:7nk;/!Rn>8"rVm4s&S_]d\32YV,B<sBLUGnaohWnXal"k`:(?eKU%2U9j#hK3RB`L"kt=*,L%3jZe]m#!FDS'J*,3cC%4Ggi)Vd[=XiRF@YND#C[9Z7'WPZ`;LqhM$7(RJG:!q2EP\9fFlJ4F,C9@;I[T%FCr7/?8:U/9kWT]BB<V\]/Q:Kj>l=+4h!A@R4k*cDo2G/FCr-27'Bjk2k??iSZVTHP;f&c3*Yj1bj%p#)kg>CjN0i9dokn"QKX^\%Rne`t=%CU5)85:Y3ok@eI8HP?!@3':AB4@Yhco:klRZ@5!RsVTSCR/of>2IX+C-N@?_*s6Z&j?Ue;_aV\o<G&EFcthklf=)S%N^#%JqY]f^`M9+R:tCc?"Iio$7ns+gLQXl8jR7D,SSK<e0n+,QgL502,(J!`Wf4NBpUD2N29!Ci"&9]NC[<t%3-"M)iS0*fs5^Vm^t(F%e29n((L*GcE@m?c8onXd1Lc(;3RcaqgP&"h41C5lQ3S\jT22%+c(3^Ldj!21#:l'bRQI\g`S&\pR9L@7M=)q"j#50<F<kgh7!CF-%p)"c%+O66S\E<1,c.r2!*%iRA2r5>i*4e97CtH(cY[uFRPE:e2lDDlK\tr1kYJcHCo7l3/2`fD$bu5ui*'F_4%ro,Q8coSklXP\k%%Zpd01]c<rOtBFF)?#EWDlXgHIj,/dWfIVN\C=Y$WB'iqle#cm3ZSft_g-23VkHpuY0?2a:.(_Tgn!Z;5M1p?ha0FIkMHW_[BK_5%l0,a\a8M06IBr0Z`YgaA$Y5]na-U(5R<<=3(E(kbNjY5&LF1B]`C0r`b%>_l1-<mC>3gp2Z"o[P.^(NU^#j[LF(Epnf&sj_Y84&t%ABAq'qL_MZKm9I3iuWPiA2*em*P#Q"XrJ<;Me@V:kPhk:q;''^E?9+OXi9^-Vh]R6&1)kV1K1_s^&EWLYthI`mB#T\R3TU341sO.%aY^XbF(CZW!q/:iSV;QiRcA;*BrJ)t-Es/UeIEJbge-VuA[l55*u?X@bqn/"PUXqb5ESsC]K)m`+iBjfI""$R+g*TUq-40HR5)UM%gSj8mrA8/#.a5r)IM_-KMlJNEF7c^B>s$V$rHcnlXZ[chcB8\:KuZl/e%+a`_`&U]>iC"kpZKI9WQ3R"BjQ*sm0a<WdSiUg8=*uT%heqSpUm#5GdkDl$://WRaC-48lrk0Mhe]0`=!sl)SX53+.V@tcAF$%'D*(bXosn#VTe][jl?]koC0'IaDJ#^a-`2lo?>r2Vjdj'd%5G_Fb0Ws$$h-!2p_9cjq\?gBhngkWtkut&&%IY)H]+*=eL)!Bnb4FoYg)RZmB/IVZ\+9lp4Z&FD>j`DpmdXW<J@5'PFsFm]7kWe"%\^$G+E9lP!'>7g8W:A(qY..'+]q4V=>c@l4#3%%@%Sm]8^u)9^$gq8"^A2duEH#,bPn,JtKuiB+:B)o/7TZuRinJ\O,di>ch3A=M%Gd(nKYoV:DSJ0jOiBdX(AP:T!DR=_2J&[qWoQf*[ji;]UJ%2_j':pj:S@ms/[]]lo4DrX3q\RZNY[oH(cW3ec:E!%Rp$$o)#,4!%%g?QS`-.%YMB)KQj2%B4i\/bk0\>GgnXSq*I)jth#O.b>e/bKtk'csuU2nC`kh6UDX[mo-c-mp$QT:#`Q"c8RUntbhgjbEME"15M&%[K]ns?[Z<5=%5,2SSP&6k_5Sjhr0P4:kUR_qcCIsoV8u%c_Kb?FhsSamNc&&'?co+_cW2bhDXso(H"\QrGbhA-;gE(PLHEkeEn.f%X%M&7I8UkBk@9]T'1Z_1L%Y=/Q,P!l5W/!=Hle=W=h>sDA_uZ&B!*(Qp(A[Ch<<:.rj2:F4@cGo9k)AXVO:TB>*:A\8PldXO:HNH%FNWFtg+1G&d4-*=2"MBL`os;fkfMR./^(I`f^$g](k.r$4oIFc(\_6[[\pK[?5dAqnAaL9l._`WU90hE)lm&B;)<DTousEsSMOh8%<<C^aD]Mg+XUY!#3fe8RO0SSL_bh9&hFMtanr11C03(f1BJ"WF/&lh'Sh33-D>)6gfD;?/f!=WM3d:\N)h]!IMKA):k+oCYa,8@#%@9cd/5;ZiT`S-F?I:cc+(hnO^E^O#0YZ#MN;s1F-W>fclXq7mT6K(iFNA"s\[*r5ZP.sp##emW4(\.jV`TcUBG%ViWb_78ZZ]eLt%QeX\`Or6BMk4,_!3Q*r)(*g[JXW(ha4*Hk.Fct0scMFcZ$WfULpjK>+q<tq>"a%n4@iR_VZT[]EZ_NOr@XpTL]?J9d.^R?nUZNBa%;OLrnR1Eef^-#^UAoiL<F!iP_/n`)S;=_i'>uU1.\fKY\]E$b[LPB&J*k_Q5ZdQu$cnqbWCG.q_)m"DeNVS^MGlbML!E;%nV$^a9%KpRaEB)?'*]`?mb!'913FmoHSlN:g@<l'D)THuc2I)FOUb0^UDSaL.C("INL>8S2]+$aT^H&o=F\lU[5jdS7TRjW!%FgeA?-KT<S%.P)nqT:1gZWCcoEHu(f7q5AFX7M9[0PgANc\1]0X+'t'Q"5Zq>o$*?4dX+kUF/o@!.W$Clj463/L17Ibl*?[.+uY["<^6&E>ip>1%lqPc+Sm5UnqUoNSS+F"hRb)J\F%WV,qUp5O/L!(eGhjqo2O'-4Id[+akKW>5bQee[L']0PPh/_$^bRk317H0eH2TjOE\6L^U->X8%e4GoCoD7-abs$WRqn.Bd??^R4Xuth=F-E/'rk*]?-WCnFf?ZX]T.fEibaET[5Ps-79&k!Tos8#hN:PW&H2[*9qQVbT]\41S]RKQE%VgJlplf[7AoE+U[fk:!LRZDAF#MeQkI.O5@29Y8t'rf`!?9aq>A.J/*^#\jmhbYIsL&(?:fkP9_h"UsAqC1eecg!IVpGuMb5PojI%gm83*os6l%D=*JN/[(ec3D#[iO4elN/$GTD7[MGW69DpeS%O2Vk5O^mrKrfI-<^:Zc,]"/:<muG5&Y`FXD3SF_OEp;lY!6ZWk5k1%:><pOH2[(?[]9?(F6</%O6=@?jd@X&TB:0*[Nt'"L1\ctkCSaH+KqF1Op>.g(6jm+JU+iPa#DWB@Iiq?+>'HjS7Rc/)lE6'3Mk`Q%K"\!NWlMc$p0%?m?9*495:]ea@p[P#rO;27ibC1q,3I5;B.rE24R;1Olc3Df`!^dtI!f86E%UYNc#(_RBD%`Q+.kVJ>h_&9-@,Q%%F,%^nV$5rQdn`>@N(F(^rk*][1RhYaR^r%dfcP;['(#OArTr'X"_.r3Gr!Y0kJ;&8a-\C5h2Pb*-*Nqh<kh(o*jj8YB8e`5CL07&%XF@mV$dhck>3ihMp("@i/$eo^IeHqCSE)F!%^C1[rE,!;4F-m;O^Yocos5OXg=_O6mokYF8b;f3;Zo7%3Hndoqo++g7h*X/_F-k?%YZi)BYK]jj.#)"rL=r\W:8Uatkao1rfDa^Ac>=/?F0P:)E2)$iG'=/7jp;dU.&`4;"nB<](+sSVVcA,9(etV_NJ9f/oGKp;b!@0@%Gd>=8m_1KQ#l%=%erFtKj'8N!8@0EC8TFNN+RO?EF6D/EU"E.cU\%dMl5qCme_`qI*I)>+7<J3W3<*0*CJnG&55i/crI3WgAlA/0%.sii'`=M"H5jG;6Hn/KM?PhF_a6D@)/,:I`HP;S"f5?N*AE@UglJh:phqc$4bCrd]pGMO]*:ELJ-\:$9_T&#]Whk@:O8EUm$r9&g%+-ZXN3KJq2qf_C6?X;LkifTS@JFN)U'A4-[p,K$n=Q6.NecAiFY?q]nDn456PeGlpXhLU#UK$jT9Q^KNMX2Tt[rLpd[t7J-k'j`7%Po,OQqN,SI[qa2UFT/+@%nEh6@dACA/"i=4'(SUhhY?#@EUW*V6P`.V08PaEd=F>@?69Zr[=Hh0PFd5X)B88#lHR5smTOOrOOf-H%a(2U4%^a'9oK^N&(mm\raV-Y;G2/iVM1MCCFVWugj>OSrf%5iH"2jas>rsPm/p!JpQ0B2rCDn8X\kbd?*@su9&!D<q'53](CDV3Z%PB)"]0/;<IfLq1W>>fA3qlG+U-b^_1olb-,S%GS-4WS41>&JeSC.!5I-,`<f1Z6E#s5FFSD&ie7\6m4Irm@ZhG^K<+WSZF\i<j`&%X;_DBh'c.dG>n6'X>t9WE<o;a]T*:G:8HkgaqZ#8Q=GT19Fq*GCuSAPWuHlVljqI&SLFJo<jB[gqH8h/01lPM.NE(u[<4*"M$>>*%W4p$m7lNV=Q"D(lfa#'-6[\s&=IDZLOd>hl`]eXhaQeB\qd<8":`o2NK3ILU]F.ImnNC6@hRsCVQ/X/g[eN@uXZhR$r.]TID3';q%@?%J2,S;*eL_KHrq0M!$I\(I5'f8-!EBO*\;,X@#QH<(nKifL[=,Ck7G'GEu!3`4@^/`ej[%5Z\>NaVJ>&\33?3P.8^pb.695?jR%Q3?IP.`Ppk#T*3C!6Q'nG[H]HnW1rS=mQ$bEk!4$e>B,.N*4^^Y%CjM8I3qED8Ik@>OD76N`p-G2*P6.IDOY/6h[:"3EbZI+51?I%oT7ZQ=a6ONm$0Yl"OAC^?UTUpY*'2#.YWgR1q,2u8tg93L:-M/TgT#Pf;S-"1ZW8^jf.I5]#?0e+0J$).S6Y=DZ-BYcNdY6CC??A%6UH(mJQ&asQH%j=Ce&3cK?,nAXn'/+D12HH\A\,C9'OM$9si#rf<Upn]aRr:\a[f!(3d+))Jpl=\F<?o*V2SAJCJVKRsL*15fNEc%.3S:$IGE_7i/1U>"Ld+U7hY59't^<F4m18Jc$d,8abD+@H@1ofAHfZDQWZWP/_FXdiPoe:>DKUd(gBN#3]p^ZKXXa?JQQCA#$0eW%@',UJVJGekG6&a)"JWY`;g<hA(<(G>H@/d)D#URIR?\`2$LtC>3_Z0-\n?R2-"U/Ung9c#)`sCUPXhIi%L9[V5gC@P67gnm)q&Ns%&]Z%!Q<=aW3=GCb'Rjp4:gggH.^@#"oEFbUPnh=.[)\+<jK(Fc^m'gP`&Gq`c."o^En`T3GpmhH0!Un!BNh7Eq`*1;L%9=hm,i:H%6@AI&rJ6pOCc"U@.-<&-O.A]#@(XaY_GXWE0V67kgip6W?0Oq.Ci02NAUe.".nY%em:[f+HcRLJHP%+P@k>"WeYbR[^R>i=n6q!r%MdQ,J.)DaKLVOs+36Ei%7p=`+/17I.Cs6HR.NcNIZCMo!<g@6a3=N1,.3??F`_\H5[tV<YdLk;R-Jn25Vph(<F)j_UMdip`',0!,%e"FqIX"_l9@Gp(!p=)F[JJ1[P6D_@r&`0P\6\$@Ko4X92Qc8WJR"SdOX&q3W&t0!f!3L(4U(D4o&&G_%_]>9;BsG&%\\qDR&`cm<%qudUi"L3%QN@tZX>O?9d$)E`ueEJ$+JdGXDUkI+898.:iCa3X6TbV<i?eH%.h3WjhF?K'?cq]U>m;MD[NIk9f9\9)dVR0oh%+FPO%#Md/o:'T,7THZLZ6Q*VP[o)+"YA5LtkV,Lr@'bZRVG)h6i]nDE;u!PZ=M-eud9R;BkZI![[tni,YE)oq+X;3$kj1ogYU$U"OC8p.%c\RT<,.'XuYK+-DDJ91b_pJs_]`T>'kB7:slul/NO>QC]%LMlYoMP[XcLA6.O'SQP%k<;?1;,K<_ZV@"f"\5@V:J&K3I!(]Q(QKu%LXFbQU!_LCTW/VB,f/p9$'gDK7l5538>tu)3mA2B=:*S4/l7(8I6&Y'j(j!.pi0LEipVaA3&I`n]:@Y=9aG[HSI77_GDD'`)5<\3%)$p%"T1:YA)_%rKXZaD<QV3-U>e)0cYUY$@P$$N%nD)*Y.:+XrdGJ'^rFg!_:(j,]:0"7BGLG:DCTP[lk?gj2.#3n8V*5,bOlW!%%03.GEZC+/ARmqIoG'tJKO'c4!;WT-,`PQD7]0^al%?7BDVAJ5L=V'jK$>jGu,&SPml26M.'tAnD=IU2?huQ\i=,=EOq!qX"`2,e&%&;83dp'Iht.E#iHLs:>Fe?+Zo/B=n6^$MC`3'%8(SV"S_@hh1rDqCA-J6"(Al(KF6P:LmQ-l.S>B;eBR!Ke^tQ-B?/@!VoUQX()%%SY+.fdU_cR;QXRCj8M(N_O3:/rL-[!c6L!R&&<[%i1nnbL^qQ\HdneRMNgN3N^bU'!Y7B"@O53V8MBI_Mg;.2B+Ud]@P7&B\:4"]%K4\0Y.abe^^(g97QXE8TIN=oWhO<G00#]iha/ZVFqibK2_!Mk@k9j0(&4mlVU]%m1FB-E;,;oAcV"AhX>L$6TX_;kPP1M/AWCIGt%k^u[4lK_+FWuF;p&N]Z#J0F/7U)=-Q;HD#=<sRi-l$K3"</G6G7U'nNpl4p9^h;f=IW8>(1cF>aj&u2rQBo%*ParAl;m?:,T%^M)%J@,EH5J#Lj=633A3ts`Zf$?DThJY,GXR,t/7T-)+Q`.urXE9OfEA7YBfEjJ3!0'_(!s[Cq+`AC(<Lt\Jg<Op4WZqFGG*g3I13=@J%9PDF?9oHfQ%janJ!f&jp@mO@V:A0F<mI]\B)X0A3(9_UnLD[<MkSD\K=V+4"r4[BrJ?eaK:l36%Dl)(U1V^DAn9s7%l&ij6m^bR(%QU#&M+![O_%"0;1PH[?)9$t.Pa$!7W@Z6JmN@MWil.Oq"<(WqCMH="hU!!@Eq>`ekXmBm@UprH%Ip(gmlR$/_So:E1@9_84)17K(%ilQN:#B@E"Uld1Peo=)f?Fi<FTjc78^?]q_J'.",SN"<b&$I9([:#c]>\2@Y]Z"]/n,7"*<?47^:K-*3b8P\GG.O"WNn6mA-c2^E%>>=KW\[@@(03EZe=KQL95'E]tG]J%]QJ9[<glpPZnVHek:%gT'Df#rgf&*C<=K]<Rka,YJ4A9o(4?!q/EU*&K]FDn%Fm?20G7gOf%HEh:QCBo3OiNSD.2tRuk@Z).8Xj;fk%G%nsL1L9DAt.PcjpTJZem5B9^7b4#h"r!bkPh30(,)`@lp?U2d8WkaO(o3]eHcWQ,uM*7%pE3]6RB_d@bcLVR9U"%XO4hWj0),e;*V\n1Y$U344,JN%j[&r'mR\Pl&D@L[\k+=^I;L(Ac](3^oBSCJBuSKKo9HFC//pY[C^dJu%Ls7laqi.`]kn4E>]8ZDA4<-fmdD4K@R"0)lgVl2p.&=BA6pM[tOr7VTP($D@1#@Z;.sIf^iSMi!h="[b5.m4gU\30sl,WK06;)@$%npWd6^tY3N_"1#!NrVR_h0E,A&cttj!Yp-e>skbQhQ#I[^#-aI!e53.&12cj95u0G)=0k+"+":!?QZ?N5Aqb8X]P6P$j,-%l@fMq%dZ^u+0SeTMJtM(Z#HlWq%kBT)Sk9E"'CBpCI(Se;@TG3:P*05k>m,D0EaNc?nq0)9OC>fe$/YLD1,NuZ][!Nh^T0_r--_KrHb?\s%Dh\HIcj!mQM$GqG\c[)LKr0s'N*a<N@D]ko8=H+[KMNY0BRN1)`u]Vm@%fP'5;tN%[p]G#Jq`@nQB=OZ&;TB0&q3HWm?eDPDdKs8%X=l@`!%M8&%!PS6Wi,N$DTFd-hTb$)5*D+:a&diW>Pe!@`R7?oepm;fic\lX0tJAdm%V,-@EpE`1$XV-`>`:u;nlJ9i!BWDN4EN8%j%'Q[f?M"2VpEser8MQqIc'BI[>nbMdVblD'VWV/,3t/rp!l-\A*IG'Ah\SQf`/qhoU9c?kre9uB([tLZ.Wj8[_#HpAj<t@lndl&%*i@PJPA?W,Co<W/aTXafp^$^qN'$0\k-4?;aZlC<kDJqSH4PF?QV)0DX!d[TY*tme[FBlEXPT6qO7j4H_I9^@\rKi5Umk$LPEYS'%rCXf0g.l_'TY^E4#h.[q</2aO"^Ba+KH"9;d<5kX()"*G/#IK=4WXItFQCEp.Eji57c2c4\/64n6(,t3km>#!%<bdYs0OmOMg]CG%MB@Tbk?mYmRqT#!Wl-Z0Yg_m$\UEg+[lL43Ch"<<*TZXE8qN:kN!iq1CmK^nB/@kldd)+$;^ur0?S838^-]4qUuCD%.&3C+9[FGs%?74GrW8%\AL>DDYKuW%3(*8e5jGYh3d[ag?k;VIAq(qUn]@N-oEBS:6o/1irk2B!ET"7sKV)D[7?+AO7.UHD1]ssM@pe#iATW>^n%bTsEb7q3oLY]o!1#Mu\K\>4[Wc71Ahi:4$-hAj]VGWb=8_(Klg($k((#N#>!h^ek*kPgVLT%a%,4RdUJ>tV?0"&DA_hC<;#A"E;D%%6QZC_dX$mgb>.8(fK);]pATH%eX>mRm_"^EXb$;?0\FC.9/'&m(9>\?Ar#Yf3?oqVO@3c?lU(n5B0T?fi/^.bo50F'KrCulN(%+%[U[@HN$a3upS-5ciZf3iX]7V"-WRP)VlD-kQn!@FY/Y6)ee([:5;;OmQsLDrh.uMo4R4@UdJPVo"6JCa0CWLmpO8LnSG"/dg@k4Z%5/f/jDGC[a]G/g\(buce![Qm^p=@QD65DOV@W%Gnf]le8kg/rn'5HEr]^5t:2)X=ShX+oBRF?O'2q3pFO;UeU#%H`eS%9"8':tb[%Ofd4!0t:>e5^VqlGoOX>`pNp,7$Tar%86GVlFcs%2:jIPpr5q37U!\B+$WRR=39q>MZi#!>XcL3MZhNJQHm7O!sJjT,(kL*G2Q(\%5r+!g5it7JcaPV:J1VBXL&?-j6,@/0O+NaV!Wj)%qq+gZ%uCZ>m#2\5T*-tb"HoP#F\=dB=aLMOZS<cm;YX'W6N&pYno_&W+Wdtc%")s%K:p?>M2(\TU3`<8ci_'cL<T0YR7=QJ3fk.6._M"/ZQk+GDFIEe\!'E#4)bAP=k^;4%!>+Up29q>!gPqt=I(hLDk7]>SS;jK(%?hQGq(#[KKi(qa[c]Ho7D)Sm!.+\hW[Yn:haGi.Aj"Pkf*/p7ciGpcjpFE7DJ2(Y:"l#$9.^&T7dqCSH:UCIV61M5'BA"b@134$B%p/s1N5V_E8MF!YO7-2qB@"#,l/WM3Qmn0]g;Q<9kDE\QL?`%)1oGa[hUb?%)VosSujc3A"?-nsEYA2Z4f3F)?CoWAZG]^*f;Ys!?%"N&NQlP\%##'k+iiX6[*W3>S7k3>E!-5j?(h6V(VNI(GWpYH)pNR\CQK#;CDmO!1dML':_^YWQPBYFUD\IMf*h.!,S&W+`a"sr#B%F26*l<3<Q%b`X0W("mI]>-XX.-cT_*>6mhO>rM6o='Q!2>U_j)XFC""'!16"]@Xok.E;[<?Nh:b\X$oWl5fRXp2<@L+^k_u<;enY%;onZ%=@o8+T;D"a_#Ocsiu7H00AT-u&P\ZFn<4^?<G2Mln!,kUTS<jV3-#CMNJ86lYm?/8J*m'*q,Q]l=0l:Z=9Y7t!ERGqo[.sj%XIh\R5iWe>d9HtFM#T7E4e'I<$L9h1Y;fRX:TTSb,M-/;o^6kmUmQFFLM5IoLW]\j]>&h0<<),?UgX^)e;Ln`'_MX[7h)K:2(qK;%%1&gJ-<H1lj!aP,eGPK:n6guJdfpk_:9]X5BWp]_:h)r=10@$JI'aQo2>="g`e&0CP:m`Uf=-&uW.<%l-MCEJfgbgej[$JmMWBrB%$)k@L/n6f@@TPfP1/CYXY6c:]cZ@d.['q2c<VG0/!L:[mms$]HK>9sSR'aWYcjWc0Aj^tO(>de*%G1*RcP*M[9']Hl*d]qD@4"gG%Soe,[+"S[]hiS0`3e`rq&u=sDh(+Lo&lTA?1a75G;FnYAb#R5UT(3u:NGE7?Rd:])CL_=s%O[(8!c+(F,d@7j*&(+(;$%jS!Z=CS%n1;r\P>=.25qtKT`+UD6R]SNg3W&kjXEb^/"A@ab1p7RWW1%oM-T@6'SV,fsMMCgZlj6JZ+$usHPE=FT*XFhs:^tedTHkC^N8PT$%lO/#*n;QR"U[JB&Z_3ZI(fJUH8<HZq%Q/r(^KH#5!5$R0_V<_QBu[(i`4M88'mOJbh.qX1@b[KQ]`r(Th]N#ppVZ+YRD9kgArD%r%^TJb\n;GoX)Zc^il`3(eP=s)0KONbGhB(,e.1[m0=q^Fh`(;er-\O-FB@)_g6m(C_ecf,T=?UYeh+VqY?YZfBSH]u>Tq@AW'Ct(a%Gr&b#I1D%e:_8g..MfM:!?JC+DKYf`</_Y`8`Z2f_iVBWEdiS7C:n-kTDb<),2HQl>d%HS;EoHZ9A==+^Z,*/Z[d"8`ZpG=eu5A0%eEWKS0SX#Iq1lMEoX_lPo.M(nLV\\qW?W&Kf2[DueK-5#1c,D4@pj+Q&(j\pjd08X\6Z%C#@qd#/rAoKeMB=NW%Y@O!Jku>MrQEP%&MO"T:qMPQZn$*NU!jAFGc]i%"DH6%M`>Al;GKFLKZ[Upae+lVD\sl62>D:7EM7W/XSWrk^hc7j;*7(^_KB6Q_Fs-&BS@Zfl;ie?%S>#HkRPOK*aq/%DF\GTcl3Q8e7DN>\kSg'cL@lh$W?\skO?UU=+t4,@f0uSV0Ft8ES`QKiDRM'Z``Co%Q=Fdl*i-?;To1lk)KXE@%CHY=3q3;[-"UsBc+b<-9);"iHH2/$WJAPq6G3VVeh.]msOisdt\c25;-">6N&ri/KJd1&YU@6fm(eBA^+_/V<L(`0a\KV7".6PKd%BHnPHGdjW$d;r'>FL3mh=Bc"")+AJlEQG8(XHC$TO)-$],C$VPGNfsd`Xa5mnL9HTo]XGJTob)=#JEO'G/;S1V[=5*TWU9g:iGIA%bi,4><UANS_Cduh^>Q+5L_8%G;hK[IN*[8CZ--nFl]d_km"&[YR#9ZSY@@5^[U]QUTRdt3Kb\"1f-u,XdB!>-Mi#.[d:0Z8E5P0p%VF-1#U/Y4t&OR^]dE%]34H3ASEpDeM4k4hdEj%21SU_nPaf=$#O)DIa<(4SInI)PAL<;b:C]*%pOPfmlK_`7-e:Z#`,4&urKh?/\%(FnfW)@KY<0YFGO:aKG-5,T'b&BB-T+RC@?XNY4R]/-G(<_#p>LSJ>Mh)C;rW@Vts](>jt7;SGaqH1+;(A1iY/f(MPIFOU]fT`bo%>n'%]R_8,P%VCqBc76k8U`!uIg'WDMHqTT1NdD&@_7[djTL]p.S#D`G(U:%MgT!CJm3UJ=ETiu7/+N*Gn*jqt_4[>f8GFZ$]B^S0%-FnctEfQ3p%/03$52Pd?`4T2+<p"2L07,Ym(1Iu;D=7@6,_;=1nBIa,/YVa&bKrf<XCtC#^g><<E.Wt;V3eJ_2)S#?poq8`H*U3'%X$5pj9EdU;+<Y8o3'E+m=k#g=Y4Vq<6_^U=T7XI+%N%R-57%63f[^A@&^R>K$CdQ&hJMn\X2=jOW@G'C@ggE-F_.uVGb5a=K2=9`%k[#jp*_4NIa)p9UV?kT:P%_BKdd3f@8Hac0duoO37G.YgY9YK-%,;Yh1!$7?H\TfQ2j_BuB@"rMp95;A=8%TACqVehb/o?6qa"?O%(ER^Yd`W^.r'#kJ4=3ss0=Vk0c<dLqUHcLuB.qfO=uj4Fdfg=>)*aHY`#,J0P*\h[R"Tn(R>CY&f.@SE&r'=D9-n%@_S4rkM&;F1%S%!\m7#X\S9,G40b9LI@,qk%0'od.B6l[@i8=%;Q2*QuMrT+YH-=Jb*QV585"Pr/O0g>*(lMJaK@d>Sh$f<#q"d_p$M?Vio&^S0S%iX8((lp+rAeX,'/Nu7Gc\M.UQZO3cg@k"8`-A19VR9alo4mH!7h4Y$7N;#L#]8#6QO.*Dr0BTd$3hoOSC_n-N;.m7S1?\K#/=^Yd%ETTEuC]O2(Q:f)?(gr\CWC2\F?2\Kl,nMdX@4"(REekQrYi[CI,U15R9X6H*Obb^uPO*<J7#Yt*o.G-^*Y>Y)a08h4Lh<p1NG<4;%S:..ndW;Zjc"(D6D,eF.[gKK,'k[Jqj)0!!M@kL&<cp1Q&Uu!1%jWs(^*%s^7WTe]'oR"n=j9DD[_Ou'U5%"q&LOq1'B/=::_4#d%q-AZcCf"B?1t$J5qrVN1ab7>Z1D;4n)8RXtl93F[8E0l+M%n7lmHBF\E^hSE_,i:&W.jn;,5">/jaq)ZAKHq,:$RbM4FRn7qrsOT%I*B)cJVBEb^\$$:5'*QfppWuG0r2e]C:_DD#D3+4\gE-Xa(%Q:DVo>_C%i<.W>A.UE\8&U+?:Q"I.QR)._N4#,_Xg)kiep58>EE6%f<,?lT)Vd9&cW_]`+#VonZ@a@/@]Tb\(Zkm//DL"p01"<h/kJ"-\%[*1>_seCC#7s(<OKhhY-;$_Qb9COBE0Jmp"H?$prUXcVq9%%jTF\M>OPAT#U'(Fbm>'7m@2nO&Gcn]FSDMsg>qm?F3H2l->+&E4N\hOeL%ec^CWCUQAlptfn7sXZ<0N"NtkeeZ*.gJkB^"\/K]bl%C/Nn"A(mV'9r)c;3VT]F2b3nGmk7\uLGaka5CJ$LqL7gSkadMa#m2J,Q&%.$;lO\\6qg[ejUnb0G6KBf-"9Qb^>P02pn)c-G:$(d%nR85M0:.Ko9kh^;N(MYE>qF4j]!6;lebH@$7e\Zo(m?Y;.r@:7N(KD>qo^3n-/u`r&#N:;/"&%`1g4=O'h$GSU="kN>r@ZdmGKW]%NOs8h`H-j#qPH[%YUUZ#lW)TdoXVWC9+>2<@\'@VbXnS6_a2^_03RhL\s=T"7%d!rBN46Uk/:q534CXRJ:gre@M$Z7"%@=Gi8!6@%jBU2Hi-YnC-e>gO;]aK#n+Cg1&EA=nSbW-ZIL^qbWs[h+FNRS?Y<LcQOM3BL^cD'NcnP&nrO4qf*YR)qj[5=)j-/d(Q\:W1D5G9C%p+2JOh6H@Z16sN^Gp("uTVmp?Ta0i1VZf9,[md<9miE3tf?$IAYEeRb`T#Y&&]m9JqR<>M_\m]nIik7I0#/KH0[K9oi-&CNgFaHi%B&65!l)PHF^GdY'Y``V\;G`Ud<C]!H2nGP()<j.q`qRlP]o)4c_MQ1?D,VX=%0?J7o7i@C_3sl^aqfWiFCNG\GqJ?Gp/WQL#,>Wj%rGX#f'p<dkiH+H#05jKDBeQ^XG!;`+:_k4Lg.SC:FGK,O^Aelb>:o<EW(Ao[:7k_@d[75.l!<"/>AVOX"W(jt[l!5WN5;)"KTqj>%H&m-KQA[h]V&%Gd;?'oLLcjt-Ag`DC+)FmVaI]K"UKg>c8Dgm;KYKe:M3X86L[Z+hjX8:<>CG,]D7rFtebPph>5q:RC=d'LJ%'@h%6CI=mTPl\U2k%Xng5-+T=R\Q.%\jE:pWp._/=m1JkFB/Onq5BaO^0,T7eCG:hkQs7-hP7^,-Nm+mhPu\:81B#_6emrTGT3_Y;(l\%57SZaWge]EC*@:!h,la^CEr=`+h0QV0tO-OC]l@B"JCjYWi+?)$:h^qgX'4`4\i^LlFUXnH)(Y0q:=8u`gg5JYsBPa50ub?OL:(m%"CSjoHJChpG8'UV_!spLL(ZB3igIDI$/ouT>AjcQktD>936_>8:O%6`K&Hucq2Qu^C/oF[M:]O+2?8QPbr&(kDP#q*<N_qW7*>a1%qbhgDr4!ua[^T$UlZEPt_X@bqT5C.jPup'LkIRtg[aj6SNqNaXUC)GP5rm.R8pp7eL5uGpjOIq+g#!K,mGQafhs5?)beA^J^OL1+%>!)01(IFC\I7$8e&e#5cR^ebA(pu"J`lOg!4jWC/[aUI]CZSV;Q"f^cqWamKG-ZR#.>5/l>6R20Y=tB8:H3RcnI9m\M@;>BJh'VL%,3tdf'sp9j@!nesS4:%qQAlI8Bf"S/p87Uc024ULP*s_@k.f%tiP+R$_8biC_NH0#Lc<%IopG=2-*,(RAPc!*SpIKV<EQDMXL%UO%2n4G_^R3gmjR];fTCF<8_UrnZ@s-U7Wd7?Uj%E:2+b$Z<Je^:kC$P5<i=9e.)jj,Y`[mLs[p5MNr9r:sV(>`:q[6oNS=,'DBbnm"%_?LcLCeDm-E20[GKp%c7iC7=nMKIg)%V1;m+=[b",.0%j#ocu#K!Ge3Cgb'`8tLYAgUSq6ch^'d@06lqoAs*T'/m(&2+GMnRBV5G%':E4JK[8_iCm8OP0KD;+E$fC/_1]]W-W\\Q--sega+>0B2R$RrE%+K5^k0tD/;"6J=>2oNZ$7U3@)9FA.W]t->KO]l^+>c\)d'<t%\.g9+m5<ge$%(=*V\'CTc%HOi`YVke'/m(&7N,VZ'/m,hb^Sj4XYE/10+2C/"r7Vo(/&&P"r=:B'g,%(]F-'&@)7rrE=#>65L_Im%p?Li59Q=d*n1BD%)d"fBpm/aL%4p/!NR?!g]m#C=)Mqq.9\@.4M*/4c->[)+fT4A=DS>eXH5mr=nP%TNJpkgN_?LdWE6AD@@06n7%Z(P`g>5DT;m9.AQrl@4bq-c?^[p+o\bJt[]g>e4Pk]Kd.n!lYMq9dU)ml^U^NYT4"oDBbfcPe-$n@Vh`A/G:s]SU)tW*I7Nc$&Cr%X%s?o3C"6G.#*E,mSO2]5Xo60"NTH3^Os+@O%>o_?H'P,_XfaMK72u!Z++q=`UdY"AJ_EHj&Fd"kG-Y(Ug`kDC?n(U_X"]!2fJsg%SR;A\s$.aieW[breO)V@TB<%:he>\[IA+_][;*odE]E#@;mhZh!4nQf"9[s5@;of)m:BLN(cJps7eieXc_D&c#aDmoar3\8%qcJ]%iHMg+Egm`o`EX_:Bg1+PUB<o3h%SCYDpM"*>O(D`:'mVTQ\&&iDAC+_c-edjH=dD,7#$bg)nYl-b[ZXV[UM*p'.Q5s_\jI8,0mG!%(?"Cal/odO+I^?u_;QYlcf$DWpWnadTGB8V"a%#K6;col@a7F%=qUEA_,MT'\K9V5LuH"-0m8?*7pd@\,K7&X(\`02"YR$qYkga;%ZcRs/hG&_=)KU+W6q_uV3[K%ZURsfI'e]]aiOqCKgBD0V;2`"N:3Ba\?#Um.+b(QB4=F[#@HNk[bsR3M,.'E<<\sXLrcd`"E!m'h%C:_Tpn9DE5L07:@.@pE1>@6M>@N532@n)*)6sVM(hd<aU*:&m5,[q*l*hP>,6qg+#a[D(Z=H*lt/0_Om8b>Wn:<+66?Fa;ben8Vt%l;it_PF&o3K=U)!M&;F1aiLnY,$$j*Q:f*^qD'i=T+0VPRIUNJ9Z6tQqiu0iHP(-_L&1F]6J5b?s1nS*q]n@?c:@ag53"t_L(j3J%`!6]IChtLjj0R%+L.8V)f1.HI'R/t!d5efe6-KP$[_Xd[V,J]_STJ;]j[0b)24)X$3bal_d7#B(2#;r35)&pffKPX_;^S.6@=iFb%`Th,-/u'7=XSZ0RTC:VBbZe<8q<M(W&.VIN;.U]S[[F?nm:4Ao6et[a9%nqCfmflY;(`8M`Zir-\+)(EZ8r1JM\)VW`#\E21ae?F%o&BLMlNTIH"A%o^#C&\-<!\K@BpFa6NhT3Va+O8[%-gLXBMcNjK(s#.^F6`ph_;I7+DOG5Ge8C]L!2k]U9f2Pi=6cu\&@iG2#Q'q%:5C7RFg0lLRfX4D(cD\r\N't:8D,m(-6HmR&>G"cgH-t(4F.A%#khd>_&Zg:G)U!BVnfS+@/''6(C\6.B,>H<43e\s&USOMaWEt+%*$\A=CqDXoV#m9A>jrh\StCWuMpS!Wq)sKIqhOV/0&`2B@WluZMRNP-)*d;(9#2b]Eq3+b3:_"1-]U`bh6U3#&V!R<p3E9!5L]2m%0%8U6UGj`fLm@oT4!GHEK^aK%"rJT&K(gfIS6K-EhaMM))+-Jp43TG^2rLGR,\tC4"#oH)jI$*/j@@4b+J>qml:QJCUOq(>g?[J7%Z2us]OW6l0E.8^8`mBb,>bC??No8fd'oSQ4.Km(3$gi36s4_nl[C2?rEVKlg&!4_[Z*DhoX_(oK#+UYm'$(---%l7)$"VoMr:=4k%=&lq+Q?R+Vc3_fZ-^0d!Xfb]IFmT?Rc[-AH6%L%Y_I3cDrV<:hIZ$;1d#<t+TOW(2<eq"/=Cl=b2X=ep$5I7jH)(XM^?gs;hc&)(%1:&pccF2>J85_Kjg"?T82W=&YF&[<GfST9$<ag>r.:q,*SZVk(-26K>mP_)V*\1T9/l>8HZuKoU^;#8b!tNJZGO6NqmZ=HOWd)mg%Z9+k^gX_.hZa/?_iuk,0PrG]2Q&KQLe/t/SF?nNMO`0[6:MuP/#%qkW<plP2TP!.al`8:gl?2.CqND#C,`WE+l,,Su/LpKY]L00*%J*b'7m`'OCE^n('Et!5.b]eHc%BhccgDrN($4@\j(]Op7F!N`%8Gg%>#pt]dcbq3:W1g#OCZ6"Ua[.^p,6"K?d0rLJU=i?&]L(IC%9I-.LXj/M<KQ_/C,+eco4*]`jAj>BL`;cK62hDR$<9pFMmZ3(7M>3^4rU`nM_j_#GgW;I*\8=?2B\r<scB9bFS0@cEI'Y$a@n$tA%ME>QsTZNaC(tts]^L'1S$;85@^HF`@qPRilib&Z`:l7863$d%EI9Ya4mrl0*ESkViNR=F(kno(s/'[Z:o1e"&r4NS%Z<G6$l)(an%IDukarMU]6Ar$G8ct&#-lD:+jO*?PkM!'#;U'F2E9/sU7Z`Tip$YEP4[3HkL.UfkeH\s74*5B\icNfD*=G2g?lFN4Wk\DC/7qojC%71idCQ7X=RQZSV&EdO*Hqk0pQQ"H*^R6NGNm>[T><7X_HXot6%Y@"pO]_o=H47cn.h,nrW!@cX7>7/[-q%O>tmE1mb1j6)'J"t:8%LT\7/457^-TFFM2@HHh+-EGW,W^Bh<6tnceHk_d(dROP(U%;.J.-OP!;=$gXe"<qJr@(c+*B7hDn=5>o\ioJ6-`!!tf$EJhq>C`D%KP-KfYVmgYcegSa%r;eqkn;^SZupV+S&O+jW;YLuOsfu>htST<#kg_0Wd4=\<(X9]B\iVWpIZASFo=O%8T4DlfA,Y22#JTWX\d6P%iEn)+EGQ*a146sSq=>nA>C4VUL`I?:SSpMZa^K4(]pdA7P'O5k&2B;$n`2fh\1KLJ<$L`MGRcPgAiiH47>Dr@n_,Ft/ip("e3!<8%nIYp%&M?,'\'2-Vm+6"tGHE\p&m`]Pkuqf&'IKD9cZ4>g?C\nPgNlh>U<6kh&i#MfHd#J2^"HAm`j$B83_F0SL?U7mrP:Kp,d"$O%CK$T$^](2?lJ25kpNVSPRnqK#Z<m@/EXm81'0.;@%]sM%&W+paX,)T./#sj0(8c?&.Plu;456@_-;C!Hc_h_`=U\bNYK@9`H!S]h%=ZO!`PMUu2:E(qA_tC<PDS_DQC#e0sEecoJ!5ITRD?TL\b\YSJ@8+3aM:r5&[pI%?ej8o`hVbFf(3lO?&YHB3F"_g+MDC$cN/3E[%e?QEo4<H^R1JpR=6[E:DkcUq/NJL>X<k:4p2("r;m#JD6s"$!qGUe#pMNq"g89i`f#Z(E:K%lZ@]dIYVn*`36a:D0D^rk7ZB^PWd%G1,[n_W-sEN\F]!rCb:6+e&QqX7D'Bbq<DqQL.[9[IO'ggbi;)eqP(eKP-D7.37_[o^&0ToW[to8,!^j5Y_^'lId3CYi+<Ch+P.`%N.8BN+:q"1FSsQ-j+5>T7fsL3J*I^Y":Tae<K701YYogMf\-1Bq"$orJO"&iWSKpmYc-"2i5VBUE>W\i54`UO/t(bBFu:IQTpT2q%X&1lV7!Gef+fg\'rFE?P%fZF#>bdAZrVe<l$^Kc"^Rq-JT:J+Q44j:Xo^@i9`#!KL%i:*`'/>Vg+n$&W]&Ih76u8rD"8Y%Wi7p9<%S*`sr<_:4.p#_G-O*8f`5q?2P?43%mbDr<Y]$\OYL@\tg^B#P.?dH@):pdp4O!on%@jh\:78_u<Ye`u&id&o\8Lm<')t*7l>ViG!%.2FXDE'N0.T>XL#Ymd7lpI/U]QVO>`asGL_1Dr9:Y4rPT.lB.68UVFIr*cj?=N!H:&IVh4oiE&f9AS:35$DqYXq,&2`:;O:-4FUq%\jf)hIpU(UU+^*FLM$k]cf8ZMW(i%d,.=tN0?;DO5<'iRI2qc_ILKAEU#2:IK#[Yjb#%*B(eZ[O:!V:dWAMM^aX?DT:NW^m9F\>A%s,6YdCV:qcQEFG?M^/5Hi+X`rifJ%L\fpp`F$qq,R,!iFn!nl4DiT`Ql^%:N&/<.KQL&9.T\SgP\Ks=@#UkUPR-"t_#u5I5o-Iii%@F/?P-"9Moc&mg]7P'#e>_tF3agm^U8`[VI<quf@C_0?(>\1c=0kV[W&hXl>-=S0-Td/_i`0(Wqef[j6l=7"`1f@o%Io[h*pY(:K%<@6LIo=_d%=&kd9E;n;7D5A+V[6Wi`]OQ>(!S*U7Q^d@6Z@(<<183W9SSJo4?^["-M`Xlb,[@q1-6,fm_EpS'IfGY;k"9\jf8\EW%<@6e-c]@3s?1T4^kn%\led`b\Y.e6#0W;L",W+':En[@ZlqRRKB&_;Oj"nuJja!Pe<+cm;o%TC3a$"<hCZ+I=TSX_k"7+c]:gF8"%<jtfMBNl2sMr!*P?XIhsB8Z0$_Y6Z2"4!7ad5'prRj$O$S\s@1-aBK-.>Ns(n#C\e2%SPa\&qI,0%iL9XKhECh"K0+5sHC<lYG%,%khUBTVq8C^VhmUObD:I\mu@UCo[oRE+(dn\IP0>ijZf]W%TI-++0N<>d*ukoSL#Acf5\u-l->Ifa@r70N&_q694fr%iHj$qmS@G@%q]eaGU2D<k!p8_2DDK[]'2?bf+uV#?Ahm4u^$7V=+u<ZXg&C7sVe%2)2:SPJKV$+58&NnP%=;.CA2cBX/:4V(T5hWrX7VCA[-f:S%gGY4_C^V,dlqZrJil0!!@qXtHIu0_ubjN@0?_:uU\[uG<Q?C\N)!@g=SA-V.QArHHAS:2b#UZ%2!srZ,@*LfNT'bB<M_$,fMg8p$%W!"?ErobV?kW7072GB;h'b@&lP`IMBX^ZX8VLMWh#iuJq9ReY%M$CXKqHdf6Scff6]`%cK(b7W2%Yj3JY0GiKBCD+n<u^&FZhVDY%Tc'/43HgtDE*lI.2]nU@GdS3Ip*45=FXi"7-WY"&/MogaG%D5i59;#W^4))19I--aL!,+)'Dfo97,4mM:8+%2&JGI`k.Qeg*1?'i%PS4Xq7:]JKSCm=>RJ3-l&LV&H`^dsMOe1]a)-7l%QF;a?>WJUQVR0onJ^5JC25Mmg`]%:;c62XGAU2$!<B$98<`8HVQ:Qnd's.qS%oHE^`e2LcI:AYRXo5^@U3A:>Dk*34DEY]b$qX=oq>(/>.gr.lA4Qt+6YR+Yr[B%d2D*0I6n`DcSYep#+jlM[&$n\i/Pgu+B"^M^D%Ph")(41?O]r?g&?\9%&&X=P;rJTZ,*cL_9XZ_AMsY40sGa4_7=5&<II:o3R4(4CTfaf_nNrB$-E,BD[>\gZc)V[&lbXB,L#?*MoJ%b4I=>GM1[?I08g(2?mn%Ce:k%>6<P[S>!fZ$3LGOF`(r`dD<dWY=`a+GQNR[RTHU3ZOO!TjgXa%Itc]fp[F4j_VS$ggs$Y!jkoUN%5UB2ojiLib>gPu*MUH%-QdfS0En6/R#o8EoA\AqMTWWO$6e71#$0$0N/*j&0(i)9Bek:;(=DJ8?*?ifO^"'Y?%&f$gq'HNs<FqnA%a-lU`XsinoB4Og[dA,#YGs!t*+8_"=DJ&b=qdXR:EMRf%mYtP*B3nRZH_XO8J=0YgUEA>Up-p-.NcK;]oJ$u`r;)Jfd0JtA;(1RC%Ia+tHQ;9FFiD%CkitJEdABtf!7"a)-/tpoPCJUFU0#R7abALg1@8k?ZA+03bf*aWY->q-j0-b[gRMO9T)4>L3fn.?$3%HcpRiScV%jm?7GbW,@84fX-2r?N00/5.[kb$Y_fYcYkLX>E$M$MT`3SLY/=+Mh%L?ohN[bEE+A/fY:WJD<r0;[nj>*G`uCC8'Fnn8L/#m]^``%e!IhX>J"'B>^&t%^+DCX1RG/HTC6)oW+"VM5"r.??Y7T-;P&9;33<Uem`aeUA\L'FZNNJr05=RD0@qo]_Im(;Vq834<!.C&g9,jE%FRWn'3k_)bYGgnFH9WgX3'CI:j6j%1%8SVL%SeGF7]=fsPZ$/RZ`4\rNA7OGh_IO)jmq!K>qAIXMPcT>Ng@6$T#@4d3RqPErn=Kt%Ea,Z86"Ra<m[dQBGG1CrXI&>3c`\B!n?K7Z3-;XRfq#lIDGg;`q.k5/-)Ib@]Od[&D#<sJ/ug22rn%sOPe)I4Wt?"fr^iZqq?T)M%b>jUre)Oe&enC<<e^j]I-4i&DCKIF#gO.0"5O+i=dmqJ.I$^q-duErYkVlA:O-!;![kpCK=<)7T<ZPCG<H]/'TlW">R5YMg(cL\.%:%G8jZccHZJrq"^CZK26c,=-ke<IjP<=,ls0s_37>0d!VAC1:#^A@9R4N<T%&$K;W!4UU]ZXsg1eu;e)3j53(pR]k^i+&&S[5YYU%m&o5SAV_e%(XMn8i6Ob9L?B]+m]Ee$fD@^G-?bP(LX2RV,Bnm\4lNO"aKKObr?,T?qiUBhmJ:WD>*ti7M*HTnpT<;U!uC4qodT#T%Ze`0@`OqFsVlZY=glUZI7,Md_AI%IK"E'WGfg5"NcaE+Iq6=D`0Fl_9.^fdaGU+S(@o)&ge(mTQ(B0X?e(nSBT"NM-D'&5&G@VYE%8#U1<h.np-l@AiR<,;XLcH$mF_<e?NfR-U&o_jqgl2\iAoGse`[+X>slN=DFD%C@S7mX7db=i5K5>&.mGAHWdmD?<_VoEWJ-[jl1%r/]1j?S1S1nlBYF5c*Ndb^OJ,e8D`^ns'G^s7[)>M`X/RWuBiU@birGG;/3(W#%-$>Lhjl])q[_a>[=r^MIiX[G'DnZZEgpkT8X$%]BGuFg_7sfd'U2(I7Y<uFV-]P*Naj@p'^keF>.J&W.CjWSi*Ro#!9L\?`"HnI2M%%-el4)/d?S=5A%sANaRspY.p#4g3&%p*0^1l%D5aOH^:gStB(1*cY+oZWlfRTjq.c+CID,2_IsQD=dn]P@na"*0E@r![h:d@a9#)Rpq1!XSJ=LB0]fQ)]==#*A)Ku:K\p1;r2h\ne%1\k/50&IRk_^>.U]o,!G?'%e"aS^=L#Eq/K\MQptq?nLG?.^c!miU.e?Rh#6Ip@2G8U,MMmiOK[DSL?8r'.m7h.*qO^M1170iTEI%m.T2A+u)oSo@WFhf5A?A1355m]D[bNLc^mP/ei@R@MNaL0+ej(PK&q:&JGHY3I-Fbp-5D.Dg7VSDOXSXIos>[l(PgIOEDLP'X`Ad%e,AN9b.\<H(+oVV]WAXkn#lA!=%`e1(cTp=A8_9KL+WE`)gM<NiagR'9pL4_3kauaQ(bs]%+fW\[GKVEa1;Y-HW>gHT4Ar=`ohUu%";aoY352tD&A^TWJ%I))K:$JqBH)CEau*_ZdZn0(1]I<q`ak0g5Gq\*p5o,JZ;Kn-3>M0R`>,Je<uCRo5B1l4Cb[H+Si*.B/0uk5%hI:L2Csge>7UcX-ZD<EASVk:5DsMOtgEFX2ea?.niKq;o=0M>LYc_$nm'7-0cH`K`7EQPD\]C[DRS>>_QY])H]ir%JX=Rd))P=3-%?1#3NZZ-*5Ajl%nr5pM^4ZJP"q.4YVCq(F2EKjJ=[u^MA@jp8.hWgeeOOQUC(%=XsH8]Y0VSKbqUt0r;s/AP9X";Kq,r9XiSO@;.%$&:X8ffLJ)O3&ZrG4-g2M/_#U(L6NC[)\r&&qbCsrP)%jN>Q`uhHruXhB'AMLopE8jg2MLPGP=LF_ng6KEX6A-`:,3lTf#<;DDEK%:2VSWTjg%^'=A)$;/?Q"[0MJjo'fb.E.#%uq07_jZ1d*PV+U`kg4LRVB'co1Do^_/92l/=a-L*a$*pSNphU8)8Q/g((uCS*LCaBF%WBE4!pE`k7aMB!b15G*mR26IYWZ&Db`)>_OPfAJ+idSd.A[TOJ"%bb0c'O6CKTTL$9#O-7_D;6]r,hpBIQmO;$qXbhG[4;of0GL-%US6$b;42]gL<;:jlKQ=U@l2\Fc]l1=c]kWJZdMqPm?rPP#LYb6l64on]3TD@4VX7XlFV9M.rr;EM@6mNMr>nuAK%8&$ZFEmS_^]$%n:E>B][$2t._S[F=:b[#mH((sQu0R]Cn,P>H@HuOS:p"cH1qVFI1c2Dd`p/`eq\eaGeQ*#T$3f[:rS&GXEt>dp',VeFI0=g4?(q5%=XB2skL(^OMsJW.B5>(nf=mAL6\H%>Foe&59$/4/1@$uA>/J^APqT<+Fgj2O^*/Hf)ft1XcBnKUjQs1u9B\sK:@Gu2r42l]pq";e%_DnF@b*`Aookk3X,Mmc4+RuU0hi7G8r:G]LF+(9`<ENDfqjF:Ga&lF]:M%jImRXRiOmBnm%I`^*n?<.-f7i.idiF4BR&c-`(Gibe%\\Bci(kO=XqX2Du,AHaEV*UmdhgLm*HhZRdC&#\pl5WORc`nNc"([VXEQZ5U??(;\H8Nf$NCrq5jmgkBlqfsRs4W+ldpFb']?<P3%Du-)U>j]@Y,Jt2S]_@o!]UkOrXZ[O'rKR;VprCo+lkqEW.-=4AfpRo3e>#kqMRa>(WGpK??u?Z&-5%)Z-upSBXX3($`6L=lK0<L]%qG<Uf`@daNQQP4Y8e\3sifC(a-05g5P=I2Shbe)SRD1s^bp\#Z_ist4YVS6NV^mD]6c<K;%+_Po%c/je2:u=uC16W*3\2/@9FZ/i%j&PL3FFT]9k;HhY[Js[l4hb3NDJJuX#A@Q,<dP&BEtY\2.Y>[b_r'dq4BJS,(2&'80j1%"7?6RA88<m*Af3Tks696%a(/XgBM,B;%XgE/3d^a#b>O],:KMDm3-*<Fr$U`RjGrQb>ibo7jnc?/3qp)T?^T:L8X`W"IG2Osc@]:Quc<CNph3>cM/b#N^ntPXoPe!&:b,qgd%G1ufJA6\@AC4'b>fYPY:2:N:!I/V6"[rgKZ&]I"H+f7kbeWr+a0/K5+GTu!rYBIYAm+agMYb_4YT/q8&Kk7,D<n[MW$=EgD@BDC`%Q^trm6)*E@]BfsS@n-Y1$)t,COJ1WK3iQjtIHN;.CgnGj<[Z(oT?L)3hL><el=;O8rEeGDieK.WbcBQ@PfFYWm<$!%qMhoNEd@:s%Fo2QNeg"e?UkF!hqSS-Z!t"MKNLZc-5C$=j2s\H(5CcD@6qejWXDg040p/]#+j&9V0;Q=H(ge6;pX*9&cg$\HQPfa0mZNta`;_K4%aW(Bps0"hjN8>ke;Nd0(6](>u;O\4^]DSCH<EX,\]`cWIj1,@`qld9Nc_d0]VKZE&INTdTI252,nH0*f"8!KS1&cj@Gb4;+l6aGR%p>iAcI!%Fq`i#;<5**GS-H.0+1A,%GA4pt%UdatfmR^o6PF[,8@^4B[`)gTLJJEQ7N^6rlR]&J&U0PuWUFhPOQfl[Qf[e[-kBJ4+%55"4pq"jKRhXBEBj;6?l&H#n$ELp0M`WiT4MW4%uY8Tg>UafJ(Loc#@ho3uX#>*64=-:.2m@_#/e]R:LX/5d0hCRS2F,7*s0<jC"%bK7<KFJJ+pIjrQSW'2^/8?kOPN>E>;dB1"XS*'X#4qfOW.DtdTD)LY)-2'hDHa@;(LS^W(FVRBLX$AI=A`N-kU>F+(?d[9uMRoY<%f.Zes9],Lu`,lTps&e$!:ciX-[d=LK\AXh%M[_+*AkA+ManZ]g+t9fobdh,FN`-k1N^Z0k)']]S>E1:h\g(];N&-1!,@`XBeTiq4%p0Q'.(j#W(+'e.0VafI$i&p;@1.6ns^4UK^%*_NDP/c`P8lTNMXg_!-b5&`H\YfhSJ]Lu)UlNr4]+8q:>:_^?W$1?@(k&*KadJs=%0m)+:cCG?^>RF`3\?hJR7dRG:SN@XFSQ".[-T43_9,^cG[Q8mIE<l3\1/e(6Eb_%R8JbmG]Opk2)<).m2\>1-a(eGU3LMITN&2'b%XNjJQN&d$:SJu'n[rfqFmNjdcPudf1F^rpEbNX\&FQZ]o/Gm&l=\0M'=N1(Waf=K*`orD!h1,+YcnLtX/L._k-<Y`-A<%0<T@qoQ%jb?th5'r;iG'mUYTA9^']UDnb+?JST]P`5BgSdIoW!sPL?SC#;/?Q"`V.Z.>1?FfQSUP$cBlA1<Gi(nJJP,<ECN"oAVrKCqaInI:%L\L1W+3%808dA$m/IYMd%'58@X;2$&V&VDPffD4n3pC/DbbeU5]6AB*K2'RNQmYB*FtO9'>REPU.WXlh5T+`ErTVr#$ER^YLM^=f%6#/(<dbs$kS&alQPsfPCq@\*(<YM]PSXhWFY,KR/<;EB@Kgr,f8MPFuQ5U!uZ+cY62^2A(5SWprA,@eM<JR0.h=\s'\prKfqlh4^%CNLZ-F1>?8bPSE-nW?qff6,bK/tM;Ps(L^X2]FSh=0E*77:V).RJhDDkLJE9+EZg-?Y24^m`Fg5*A^g+Z"DV9qMJsm+@D\l*]@VD%34g-9&U$ca?pfc^P\WTd@7SMB;Vtj%8mOUrLtZ7%kEA247B!NcD5`ITGuTGP:)<JZG)Kkqk%4pLoh&ncg%[uD_-$"590rC#*MjsE%U[(3Wa'=V%,*]&3eORle;PiE8[Ks+GZl/B=eK4&o(\W1+h7.SGp_d`'O675d'AK4n3i@2*5P%7:_c0ZA=R"G@$MpAu.&Ac`Y0Nq(%5VW+^\/@NEIar\PG-M;P]Js$Is)`4E8$D*XMhcc)8#`tV-=U6LmSsSiLq4IV`;K@j\hOh=L\NS\2*][Wb`nJ.27l=&kD.1,o#4(a%R/[co@a^JAG@_"$i&LTus/g'[V7Kk@<jSin.H@[^o!fMm`qFL/k>.(mSH&(>MF3Ks@nlj:CYJOR:0gA6,Kgs]YFh;S;(.H&mB9kW%,K5ke,A19*V;a<1kWU4YOgF=`e:X:#55lNJm/h11I"T$&?(#J)(\(S-([&;\\uaIdLeFm:?$$/a`fq:dr<C1[hHY]E9J0+JGMjmW%(*:)R%hR7`(i>ahZu%a-q_?fJ>`;g!g5jXiK9iMNhke"gh5cT\=iK\&.TH`"VFoC4Q`#9dcd'D\"t#@TI!'UQR8kjU5KSoLYJX$-%r\!8)H;[*0@aj!j4lW3RMt!oe#@X@[MD:C"imDj@dT!sICj5@:69H-,>_hP4@UAoNX'Il"e1&=1p`?ELbP;J?pklh3nb724_mb-S%mk18^>q[kWQ[c&B0+U^[T>_%!p%EQk0CK^pDY<:hU3eZMG\nF4q"=N.UKM0m@,9_M%=?6i3Z$BuWE/7><8#N^`sCsrSpfAY_`=+O%)Q^j>S6hXug9?unb2aJ`3EY^u243YVXtm%McOQ7k]UgiA`T)s3<FpSI3X8f'`BAKdncC833n80>WS*!@:9R80$I#AN@[6V\#<FVZ%d1tI=5%J<P5&[q?hABl?KTr"^X!HP`"n@CQ>"e,H"&fT,htQ[`ZCUl!q-qF,GkXA;\S$6t3M3T=hc&^t[R#^BV>EBgZe)'K"c:O=%fBLQq#;Z]JFs(8YjHfO(8q=DAhY4^H%\Q'9V)`;m.,^`01NJQRX1bDnM&BAYM<r(/n_@s@h0SbS9'p&1UE'.9GEXi/hZ(BC'91,e%b?qH2hM[BF-B#3?esWJ//0nZ?;D>=B3sR8B=jNZ)?>uX6AC@`7D@bErp/h\`Y@+t1<V%rW%NhI=ZZB+*I_>a&/]V9%kq6X"Iq?>[%rUT:;*7UUZEe`[Z+(If^NZIL?W;k2"*?D&$Sut19:/AB.)'Fq%jp=gc7s"9TVkQ7nnq95Nru#.gaJ]S*%bG-H0k3sfXs$EW3]]a^%@<S-EYsdBtMbcjD#!<sHr-,=KCbt4t]%6hEWu[!NB@XO25@a[7X)g-rOb,eJG'"/3Xt!>Q*3Rpo`BHJ[@Vso%?(KhhOmUEh;SQFK%>Bb9nG8/<<@kMrdLa8)Ent(at?%uJadf*IUMd72^%.P]^LZr+2MUI(;-TS^9X>mu#L=d?I]t&j`QTk<qo;RGO9tn8IF`#n._=_#7%c1Sb*3A8CXimmr3iNL1!Q-1q<"[)P+XuY/c1ZcYNjQq9n)YM6Hq#QC8H%*5blC$)lkmWbt:P8:%n1f*4FL7HfZHCDR\qY@o2ZCV^%2K%OI7AKA[k(K8n3]i+d5foC&o"9/=C4"@aq#+WmbnYL+8907gi4?_6mT2+8A^tZTSg%9[]C$`T^Mf45(b"Cm9DA4)H4/1t!k-'+%lTiS4+.fb*M'XCEQ#t.1(h<6ADKU8J@`\mi-,M2aj2UsR$kHqcf!\b^6t*\DN8<&1,)pE4<Bc>$21RbkBG]M_5D"Pj5!<_p>C4)j%rb60:!/lpj@f<RoAEEX'7q8DbDV<K84,B<5Q=ZqiGaR?qc%[t%Q@\;PX,di)q+!g]h2n1Bh;h`$L4i<M=6<NFL4gK\f9]^0)tH$$%LWQmHNE,9ka"fS!FIJ5^3L..;p9=YAg`0A/%rMhA8fh3kn;]%%1lLn3%I_@nPUCHYVD41#Q@,l]2Z$0kr624p-WpNa*C.Wm4$;g5%'H)']KMan`+7!O;*CKe14q+i[ouBP)5Bc>k(l0mK-''1noui`]()oQ.l^'?\)%cTuAtn@Y//R3(@2Xb=I630p#WXocJka0=KMQt$%VEm`M0nptB(_U,+3Yqth0nr)nL%R$14N<JA'LOW\ETB;c7\Mdee+al+b,_JV_-stdEuCP>W:QEa?fS1omhVHIp"M@4[=?[C`Ttm]%;dS2H0T+I*]2Kd)q<(Y)LI&T`^FF-c2Vpb"014K=b4"iho:DDW;]RD=HfZ=+Zm$M6c[aY,YT?j4#s'?9]DJkb4X;)_rmop(7U)Y\%L[>9?rHcp&*e+no-?re4:=g<1cR&b?XmFaO_=NrR'$Ts`9u,=f%B&ORj>^D^*_XAmcHa=?2u/c;r(17eMH<`#D,l>=mL&7J\%fkZ%IU+P"Z_E-pX0%!`CbQ^2AsG<*^6]hL>&K\^PK*Kd[\k<<ip>EggR):$7ScIkMne]sg"H)Q9Auiu?e:WQJeo$p.I=cej7ZI5gh3Fb%!1)/JUiQh=a8tY\dHMm$.P_(X]0rQ@DM"8'=V>&PGh94sR]&-:@plmT>\+,:^KA7?>,aY9ml#WC=?)>0o4Q\:fY;d@;Z"#p]KZ#e%C3K3Pjio$]-6'_V+8e#<N@aOOI`h`)=0R`ZfY)]\QPfL+[,oQi2gktG+BrH9^>\P&WS\Z@4)<"W.W\+rf;dU]P4,0Xi(K6](jmF]%"^aBWQ6ERsOr9I3qJ5hHQ5NUoI2T:aj"k3)fcOFeIRc1@Em)j8H*og=hk&ZcMZ1M8-Z+,Y6i-`p,9aN+n&A)I+sV4`B6"4$@a%h"%ZH,%Yo+.JKgeh9&4%t]QPYjAV=a-MqJ$a"7Uq_krl9prHXCuG.nEGM2A^lku9Pdub4SI6(29@UAh9dC5`]u(BHUYtUFWu`Tf[BP.%EX#+Z*TRX^d@ctcD%(GSAdtK>b8J;01LU"M5]R("at/>4bd0#Zk):q:3ABTC\hL$"o0?TKLM"c-UHtK1fu..WadB=od-u<4rA&!C%Q6"-LIC_YFNe]@4YFdU\`Z>[OPQON4k"P/bGfIDhl8FQ3i/WeqSFjWQ7)[n@@k=ofL<?jD[jWfM0O:'cM#D0)bNN%sZS-$q?^C5+%XeLZ+&h9YUd2Z<jr1g9*@_h[+mSYLWFfV5sLt1^]>",dRB%3uAjh[<Y1fU'*R;<[LYSqXsbS1:Drnt7"@j[iCBPM]4N#=$(\#<g^%bNU&Z4_ojrW$$8'ha[jTFN5A,6gWer<C;^FN[N4e]!-bIPqXLu@0cdFmcnB'=a=*4)L[`sbNj2(Q:#luRq5NtMqXs-4WRUH-OhPO%[Y>ar6rb.@c,k50A1sRmjP5)nC.Y48"7_`-2SImLU&uU!rCIgr\*<%<Gq%NXqR(_D"`NlfkNRHL<BIlV]>[P6(cKcdb@Sf"q)r%j%3h(GQ'Z%r8V:nl?Sc\9Tk6&:q(GY$M?=%g&/'=c]?_Z_pqEs28eu]j8FE31H/Zs1AY0>U+1G>*Y(6`K#2i$VY9DbOr03?q)&+uKP%a"$TTbG9'!%BZD;lh=`3Oit)VcLm=SH^s2;'oTs]<uKf%K<,!hr/o.o8X9tc#h1ceA6\p9bLe$iE0$LG<nZ0_=pu,&GZhZL<u*2I%N,Z=4E_g:-S:aW3>H6(I-$3cP^GT,)VH(GH\*(0"Vqr%4l*4i?EeXFmpjF#e?'oN6e"[F(*G^N)b'ki7nppF698k>tFR)EGd@E6f%/MXnF\lTQG^O#+X&=dpTq[f!Vm]T8Hk4pe2F10[3bh_VB6tP%Ze4-We0G^G(OHrtm)H'*7g99,6kK/`3pgO2b9SkUXana0;Tp3T:%gSQPl>4]X7_a^3NOuK.AaOuU/N$$9q9kJ@VpSX4jmH,eZ<r&f<\_?Zsr:=.+@u$dR$;%fn&_W?]*K$0KYH%c9Dn?D:]QeT]f:c^"%(n<:!@(Y+g.PK_t='j]k"HcWpnijeda'#NYK86P0hQ%8XC4h;shS6HG0t"^:*iW@&_cB=r^:i5%T*,&S&YmuqH[A2*FJ7TioA<%'%><O&(rEI=%GMHMfPWk+ks(6+$^*PH/rSP]Xl,J3+qJ#Dfg0UkOSeq?om4B%DUL1@@,`h%T^JqCh[T@jCI-B0u0?0%77DEG]kn_Gu%8_C=PpY=\E%duSTUkRgheBLmlUPZ@$[FD5,Xu=%\gl7eOLOFV0h>G=IPeK>?@T3."ct63[hllW#hV99D'!(AKBRo5e[$$>ABm0c@%8:/kA":il#3Bl!gX$ol5`k:>LbhY56fu_k;b,2Pb%Q6SIT4P]Q9!r];cI?.s;U<K(7""[ZA.5YQFgi&G@Ih[;1H!2(UZn`J,ZTD%%=H^60q'jnDFl5okq^(P$r9tKNA`7jA[Z`V@[CNYel-%;5'bX;djdNFUFKElRdRk=].)Pe#oPN:;=MA#f'+5d>Dh2c5c7(\\Ed"@(%p$0FAlIm?$^-JP8[^Ei[_C@btZ)[\cK<5VA!0)-rgjEtJG3*WpUZrj\4,4%km`E?62NV"Q6fsA-$ump.8ak="R@Y1WlAqMP&h;-`%E8gPUWMYaUaIN^RVi11[KoAsG38DSUaEY[.ED(XoYKA&"r:$8pcLr5'cCmVF1\FAAAKFoS^AN+4^[^qIrml#Do'YUY;E;DUICD?,%a60hRIZ'4*\mh/bZ=_%>hNo>D5,n[I5=@S%rde&MCLZ_5g+6oalRindMEP4Be"rTO4d+9X0%;GmC"ar+:Un*ZXWDs/S0m6S8G`Dp%Q1mqijc#YGj!WjVf,X4G@bOW&iQahrHi@TQ2HociclHG_G0q=P.2MO$Iphs9/b'V:P1Da@$r6%\+smpT'QYU1,%8q>I2msI4/ib+%@JWkEY(-2>5]fgEY(%fC<J7kAF+?uTDB&#ALZ/q;GdD2&Mq;0akbp\@22dS2LlUbQYU?=_Lq+ZD#d$9Y+RTFc[rf=qd$o`ZCafp7%PWj+c+@PA[k9mH8[fkO_;Km+&L&J=E8&dif'N`pR-P`:a>u'N'2p^+3NU8a`4aHe`%ERh:9l/2lJ6Hp&6M\]^*SC@`MgXgG)K+k_%1JsLfC"C"In^d2U&,=l.QQ:7X^!Ho9R#0J[dE<B@b6q\qV0Plek)M\YGkKKV<TV0rAN\YKh:a`c37sfTeoJfbd(1YK:4)lLq=lMP%,TiYUbH^s>L]JPl<ntqO/6'/9q.+pHM0@YH,r(<"[als<>uFGKOpg*(=lh)f02<tbJF"31,A3m`l[PH@SN\f-VGbg#Iu9:?48*qB%+(+'<M]e4HAi^2QrtErFqlVU(?'%X%!3'O`jGlRF7)Irdb`R^h4ZQRfG-'JPiJI@%IUm/?$q1"hQH#JH>.O<!`)]<t*/XIZiN40:%>9\DY[=sj;7D&L$P]sNnUq8GD=GD@-,.;TU[#:lJ)=-bu]>O'C2fsf@R%q(iVAW7!"sm5,]6:nsB0Onmh_-):,EO>"ZTUI4@brX?%8ltCoh$QXaGnoDu:Q$>>hu!Y0s0j"J9L$[2*aI%5SA\9.q,/HpKZ(B&OV6\ji9BG8d8ees73B^W41,r*Mg!2rgqAuVW5?uj@$/0c%;^I?\Abjl;R^7(H\Y9fook)T"iUfkJdK3bVp/m3L<;iO%%jnG[k`p=%m?ckT<7'l7b'B0"Gd(RQ.Wfg8@d4R<+^$_UFVBpQ%-[WB%Ht*DGQs^/`Qm[H3;EBX0>4)%lN5aTs,mJ=[>inu"If4smbR-"pcS\keGW%BQD6\;%rHncYK9q-N+4'PXWtu5r$j16t)o1-^YBod!%rB(_>61*sfrgMS\02I:VOs]/u.ZVZX^p57LU.@d&k[QC7AFk@)g=F0ice`Z)5I/-L0le+qV0l8hnb%*DD=nLD8QNP8VidGg.8KR6%]=oGKbr#PAGa#iX'/h>m(0T+X2OHHT#pX\'atj73d,)T&D;Wa/VLMM1,lD_sWZKor.<AD90ane4iZ+FkS\$3FVtf5W_I0ihs3N62%-G2EQs)8ZYkT=R5%sO]4S$t*;VldA!81ZE+D:nj3WLE!=`W"iE44c]Q!]sL>bFpGI2<QkXrkN'jH7[9pJCjMMVjCuMgXd/pjQp#O%Qdf&]/g=*Eg"[c4CL.D;)`q9\`bg(Ij:e`kBi9t0H+NL06pn?6a>+."3=ehJJ'HY9457of[rt]`S6^Pcp8(2eUUfE="[4)Wn(Aa4%\('2<(il3&`fD-[D4)BlB6!bSKopRQ?8qjFZ69(\^N'32:JB0'^CB+nn)]MKBCq>Df@7.q*W7p_n5u6k7p:^nc`MnmCg92g_Xd@Y%?fCQ>YV3DR2oS64/fcC_e&Z%YPc(M`AI@muWog.*Wq6o_ook"l;m[Bk@et#G4mr-BLG1B$=/tr+hE6(1\@th#8t2<0kAMU:<L%U!%'B$g#m+b2;!3B"eP0ZpI9#;JqLQEM\=:2&ikeiZS/o1=LIrn*W2./Qm>Dk7H2X>YKdG-,Sr)Cu$Q+>W!ib8_dG44C/^""n<`N*rD%Ue,seYCFX7P(Oj:5kmof01fEaY%ei%W[q6d/m))Hq'>dpdQ.]N1RRTZ]ls#.qdu!__:JtM2V1a-=3k_`BrbR'7S^E-_VR\tOH,8K%U@].oj;3u7!*?0mL.#;0fh-*kBAnUJo=T27od(.O/m$TYqlZ)Tn,L/!65[cB7-&X`6uDDec,HlQ^TK2m^/%]8o7bo`2IlXAc[Td1%]"%P$ir;/Xr&FS%Hh%&CU-;FYIC$Z$*VgWjB0XZp-:B8t8SFr?#bao6m(?7F^>K#2?fJ3Rk0q#_cPp5]_kiUrDR.3MM\OlP-t9:X%_IVoMq\[h8/,8Ai96IQ<]D`"=f5+.+3R;!DqIUAONNLS6/`;%rqgMuAAFi=dN]ZDQ9sRS@-$lt>pL7cH2niXVRLASaRm5bVD]?GT%^3<->gK[uh4JPQrEbZF%6-%1O6>6)Ak&8X"iaB(_p8A"MIs3S,1\^\OijY+BBUCiL/7%'_:!S0:r=Nn=kkp:l)d5A*7!.5V9n-\0%,PLrdm73l)9J7I`SXnDTnDqE%l;NYu.OlchIuTd@#%!s!"VQ6;S.5&+_l+GnDH6@^eg\$6*+U,(cqbc6c.(8Soi^kgCE1k@e.4'Q%MhOqR^CG_HXBIhj2oS\<0gDJZ(S(s2c!)]0X,PPjrU-f43O>ilJc!6A[TYQ1g#.r8>:P8?Fo.iWf@*l,'o17-"W=/`oP/`uP`bf*%/!%iR<g<k\%I2K8K3X&F+6WFF"#2BtQg[q"dm'n!Uqh/`>nJD-i)0+2SpX\KQ,EEUUXGM%YJK?ol!$"01k+.R2=M9JoNj+b^-Zi7%)+RBok!h`UWk?P[@3U7SIkrV":ZU+P4Ut"s@@R6C5OI^3:Zk/-d]`C"f4p5[=,X"rk8_^Z3[=Xtq:YV=>g;qS@hCeVl1^OP)?'E[%e+^V\EB+31B!\K/m.YQ?[Ef4Zg.:cdOgLIt7CG@nKqc"$/D/JIn:?J]+gnGtMSD#4mZb]JXE?a4Ee:8%%=9tKqqL8X`g>]`?\RL^%_X`7jgpHXK>":?<W_`'jg";UBiqdTOZkird:X=ML@)oKO=oHgm+#DEWCoqgNld\Vp+_\#9SEaJQmp"\9[VjqCHsCLmPG_umHD_0t%Qkic%qGno]U0de[kP3uHX@eb[*?<mn^ltfHYGT7i#9E;?aVNE@EnH9#DA\]ej:Y--K7DIqE!Lks,0jlS+$B(Z3jVFkn-[1A<9]TT%OP"or/X=Z6/jVcQ;aQqE;EpheKN`-0q0o&lMHQ>gO0&QRjH>(B$:.'^LR,AaNdnWuqn63..S>_c*L:"e_t:mf&SH9&EE;&mU+@=-%63O)d2h91F\`BoR_@jkG9-NIb1:+)GCMqSZPF&3r/8MtlT]E_<.IGAPQC3nX;p-1PfBooaOUi_ApOKEbf5Q4g=\-+?k:iRg[k^.A%[F$`3&8^oGk$CjRWbi)]G,smc=)XZ$iqJF>^D;=Cg;[lh.=V5!R!W-T_+$iMmS&#LNGJ[#i9=clmFd5_ibYW3MRAn?JgOlp#@#D%%J1e>OME\!.A,,N@IY6jrG#bLpd>:]([m(Von5o#Bj`e5H()BZ$^QR>5EH2V'YOiFGN_.r`o"t=l*_Q'g-n0G<"8qD_phB_>s+P;V%To/m_qL,[5P(8.Bs#Rd_DY>lVQguL$^oFb8qOoaPr8GZ$oLO`KI01P)]EScTI`",>c1%Q*j@dg*5"Ai&'3rdjio<-SR2nAVr)%7F%N)(@rQ%pGpTBN+-VpG'#P2jC5''lec%;;2qRrDnVJp[<^2?A;PDf5ZX`ngc5/M=M?KhIVhfS&8$jGDRnY@]Znf5kdtiZbSjYm&>D%lgJQrArBWq_V0Z']a=8+ZjH;efUL5r$PjfumJib7>6#;;GQ2)DDaG7$^k?MqfP@<h]`lYVeL08JeJ8_fBVPZp+H6]^C*2cC""@eW%+Xd&.1"1+Dq"jq_EIV74AIY;a@_VUc-\AYG]<;61ATot!LO]uF&i7p4BcdKfN0`kE"rUmA4iMl`2C)/A$'&%+RK309:fF#Q@)e`)%mUoaCrq,Hp]=ZS]'\O/<&$r$N(mG`WR;;"S&VX]K::/0/Sl=9WBU`D%c)!V%]IWBQnTj)IR=]pu@?E^l;:lCVV:K#j7pqV*`S)_Q%K1)Z>I4,g,^@^QZD)7X?rlJ2^9hc3^Sc/&9s0Td_Xo0fmELYjQfs0HaAh0D(,?mrUHdZ"TXL@h8/?Y20Z$nV9Ur.!MksV>$@[^!"%0"j)u%!GmT*H:T8b#?tP)JEFrr4"(eX?!cSN._D$aQl*$rLS7K)Uj*D^QrV.:XJ_TWr!0\5f;'G@W/"+[YE8SEk13Ke;`6t'lo0n%2Af;fec9VKHPXndFQ1X/(9?9#&oZj6N9`#s+,]BGP3oRn$E-\0"(b?K7sEmd4)d`7T[K[C>EJ7^i>Be+0l&sHPo2##W\50^r%?Y'%4C`FE(,DG6j)u"]9407tiOE0Hd[Q>=&rt^88=FdmPAo;06K2Kl:;V"_#aPE9kp.7XMi\pWD,.t=Qs>=9Kd(gENuR!&D(f:j=9Q^7%Mhg3BP^M4M?G!_[qVM)Hmu(NV2Bi(__#NoM0V2Zi1u\9pr52$<la/?5@jbAmU@l2r4KbgcHJ#_gHarqBrU[4B:Xftun@Z0D]eNBV%&7^c0m/4d1XN!8TdI:'@?'!%1_W-5(YmULOr*SD1r9lTB8,c.d1!J`QeBj,1hFr0Grq6*\@f-&u`W$VOIe3'hf>#kNh2*%6\,-'^%lLW9NkPM=KQfJ`13"dT`cbJE\47JST!;aG:k"In0q!cCn36*oC'kk[6+deWG9cUer0TT!`cDj!aK8J=a$f!4i=_qIt$g,!"-fu#X%n1jU^S)c-&_UlZ:_Y:q567cKLO)M/sp&Ync(i3"#OF,E9\*$cOcj^;"<fL5r)d(:8q0k1,"-'edk=ou__=:8Pct?[MEt=SS@sCER%C.LubJ3I\5)f'iuMk(1EU%&;u"`NCGJN5EKq\(Lfe2tOGl@k?$[0gjE0[J_B@1%\*S;ESQIV7ZOJ0\0OU+5c)@"PY`j86?a)A7eT%d"Mq?BcGPOI*#K+gOlsQ&&&p3@bcD]L+l2IV#F`=q^9T2hr*Vq#(O]QLp&3dlYaOM5rEhQ#CMe:UO[F\KJ)ksOlM-"L*+fS]ZPcB%,Y*0rE+1ad&eC-b0"\n#G3E?4hZV>M*6I^l!$-gW3=`&C9r((DC@s.0`$Q4WKI=F4kJ^kEP*cJ<J6:?7!AQrlEA%U"M9R^q=1u]H%O>3PDe!/],M^Y`_OdfSUX+nE)#/PmmIGQl=j8#r_?Ai1lpQJ^X@1(\Wp=Xb%_-'b!%Qr!@iZ8Mi@Lc_MIarL%hAZXd3n;m'-\?*k%]3NW*33`jU&^h,AY^hE[c-2U9'+B+c"><5H^u3n8p?DFi+Trd8;OQiOj#EbJpd!3q1im)L@P@'M&"qpt`sVrL5U7SO$"E>Mbcjp1%((F3_5,5*0-k_>h<Q8b-n59^WGIGiL)\Y>T4:(If`)T%o>rl8A*IM5sl\UK,Hd,Z=)V@hE7XBok^)u=m^o:aYBMWKbq(R<bi3h6%%?U(LYC@&p=28BYAcmeE*'h@d$CDn!I*Y0qVO[ZWn'Q/L:.V]rs*!_-hH9QDJ.;m5bmUeZ#Xb--Y]+LT+jDg31_6`.pNI`Q]jD!O(%*Pmj7?=FlZnr?&4:RD[7$E,4ZShEY`p;JG7X$e]Ib&QCA&-6NJ#Y[mO'N1p_2]'DtWX&P-54'CG@p&@+$fEFS3n5j?!q6GN68:"o%(?[[-."Vt\ZD-Br*<1VU,7VO;YlKRk52QLJ'.:Xo+oDM@"IA5EkbJ2k^]dT\iINijAn7U&#,Ejc$R/\X&CS`'#:Ol2+CLmp3Q/Tt%GTcWf=s\S8r6]S*RA!Q%@.Jfb+I(_jD[;UF?Q?ppHFRi7Q5]kV"'bo2l9kZ1`Af@>Bt+8cM`0!nJH<PFF9F'#i^\Uh!`MOR"Z-t@%Y-A8H<f#i&C?u$gJFFSMcuVc:@j,]*HH4M[Yc1L\RM!?UJVD!7i0,:]_$_c:iOHco$P/iVWH%,J^d3NT-La"7\1Jim\iesVTQ/?j%"p>WcG]P!)L%k^G"2t*+qp8*\M]NoA(^!?t_%sP0'MYr5dpZZ@6Nhe4\jrdDQg3E5@3<Pb0)e3+"=aK^4BRYrZn)K159MQ=RJJWA%\k14)N&IV0!A`ThUin.37$&*B8d`9W=3Dd?K`^-HgPV6=6^JAf#6>i6[.QBaU^:!%JSr$]MPo5`n-B(S[2@ou+MXHZFc4;uC5_;\%&GK*'`&p54*s4JIb4a@Q@Z4@teO(LTJ'1E6K^f8`LU\6i?Oj:Gl-'DXKBo6oBcoZM!W3+n;_U0R7"t[QDs*7mno/@63Y"!kJRZUa%`3QpD>D.7B6#)#R28W5R$?ed1m7),oEBAc.O_?3#%Ur.cIrRj0YVU(\Ja<PPO^fO+o!T_:Qtp(rD25;5Glg7g!^;!"lj[!oT@.C4%o%]rT&dX#`%Ri_XA"h[HFYju7gAu=gM7knKSCuX/46Bg*##6`j<Aj:i0o7"_Xbg7-pI)/7[Lq,96fO7'q>_.T"Pa(h[7`S#EL]-*%-Q.-ZA+U?6'`)6+:Pf7nP*XXi!<?Zt^r@+m$kbns9B/sRj!k&,V[t!5"b?B(#`=H>E)2K[)Q#6_A7c#Y8JZ#k@f;N9?56I-UhMX'%cnrTB[fM%UX:Pk3'Jhd(E3A`gTZ;<N!CE0D81t8;':MB1%<5Mp^c,UAGK?%'U8g299D#dM6Zp6HTV#,[e`Uu9eT[<1kMPp"SIiOU%Wphj-,S0[Z0=XpH8?r>Zr9Oo"j*HY-41RJ`EIfn,H6a9.G.-$QgfkODVCY]:_l'@n*=\@j+jEp&i$4qAb(3:^`%1u"dj@%&_]D0_%WZYpX+=WC'!nS=o0,@0`RRI>.X5G]7o0Kg8^R0l-QSbm%hc?mN%l%1bC"i&[c]kE=3#?R4*rn.uoQ%6H#*CS2!I%uX?AiGSNX_;`%1kQ>(#u0=]BFj$?f7L@Afs!E7h'WA"fiWc=7C75&-7bbnK:=)RFrI.J&VY<.8:Z;e*r2tB!J5??(J.ARN%Cp)YorUKiqQ.`,/sA2%23H[%lYYd91/$&joWn-`C#lQaK@&gKlUJI^ZOlsf2p\MM+?3^JBgdYI-s;$b_GuMc#NfQL3e)eg75[Y%l6@.5q?S7%S7lnB+$iF'%Oo5mMQLm?&>@ZUfNkE:e)PTHJ"]JW<-;rT6hI]=cH:_k9=gjcu%Clrj!UitT-GDc6FsNCD%:CoQpdK[b8DSIc':>9>Hig!BmjQXP%L/-2%lQeCjTuM*)7<l0knd3]@g!5!n,Su';VL)'+OB1Kbp%)Ei<rg:)jO/Kkq`Po3mZNj2gFKm#q*s'%a6,/@h`r7DDLrC?Im]It%)rfZ1^]nb;%f;+a4H77mU2SZ5n?9pj/]I;T9<hnG;ZjZVs.dj05ML#,_u5eo0p?Sh]*0"Y0e`/H4<Lpb#E@+`-r"[\`;gM`](F1>%aZ,A/@kq>?=pu3JjA'ru/;GBT*\Q5e!='Lb6gM,^8qn::2!2:R6$$.]p,b3$P<R'O#\1T0UW@rsd;puhkVaP938AYq9WjKD_GEeT%#RbU^/fH`:\@$<'2["\l+D@#1cu'nf/HB3m8Ft1O';AP2S^)HlHg!GHdJ3qW0Cf.\5f7[aofAFl^uh=6c3kj8`>CrJ/:]MWM,BZ7%i7d^0?1N+]A$CTE=$7W7AE\GS1cnmJ4G3\aS1tr"6][gscsd*EH?=k7RkA;l+,3IjMW5$Did"e1'<Xtp%q'hdLPK8$7_6N9kG79'%OJ:);L>,J/Pm>`1K_l#s/ECh_T]P_EX`'mdP[tBm/TE34-AXtWoZ0Gb$QMHsM=H4D.(6pCg^(tF@Uc2WieShX.^Ug)WC&#`MRG&K%09FC?g'Q7Q6&bG$KBEinNZ4[o^k;SQ<CC"+d=/pr)Zm9ao\&0ZKX`H*W:Up?T<[Da#kpY"$N]M-'4t6l0_,<AOuOlE!A-JBaeXhB%JUAabW+Ri$nUrF;&0?XbXolGs&.^r_5gY6/$imfU!;@!=>U0apf>E^rd9=RrKE+1J;@T3GoV/J:i<^aG)CFs$oI&\n$&RLuL1?l?%O+o5ci]N6:Llf8TOK/s6G`D%,F(b+b6bsW6M`VtB(PKZPli@T)j<>k_%I<BgFF^eP+FOdFl=f\"[:/8n-93,AbBUtQ(91&_b`-'6%&]QCe"<$$SJhmtYIULE2+S'rt9J'[Db9.4_R/hC+%d&0HJpN&QPoaL;Y%DFd:[&<\O;@gdTtg^+5qegb2E2=6d1#Af\27_`S0@r\%pp'rH_J9P[^An95AW?4i3@9p\pn"^bqlp3YkSlc7;"#UWMES3l?B,eN0u=UTGbM-o0jKOMW.Y3KJW8Yu@PT?$aC4S>M20/aisSaN%OK3JNO6gle!$3!j5X0ol6]Bu/N^8:SZ89fQ^nLDTJp-=Nd6;Nki<mLNV@!Ik!(,GD!!tdG*;H[Ef7Aj/'@?=/Eq1HF>tkKH8>&ue%LQRl&AEBRr!s+'G!3?B#WTOG"h<=&7%uD;N[NC1^O:qV999.$p!Ff8q*JkNRH'"MZYln^5=%?p;-@QT.2doYj4ljd,_L2WC#6;#e%DN'<-;#1pdp^ic&KhRL-DXW7/!i`JWanfFr!/"3$+,]0uSjG3p'&X[YHkY*Bac18iH=OL49[=?O2`^^X\If<Vl-'gI&<[O]KRPLX%MgU`+jR,Hfp)55PefcalV'2Rj9o?Ih\t+IC)g'[SM[+F&@6uE.3qn+o7qDFr5OPc@cd.iqNoibHc-%)$j$:%`'pUI8DF"^*-AM[F%L(7HD(l$uP!!+9_3*p>,E`V+3L8O,JN6%;q0/\rJkk@[.-5`=MFGK.L5[]9:K+R]>%>"8Q<LH]&)a.+=IN>MbJ)ENG(G`'NGb)Y#%in>?F@=%`_,`=[l:djK&OS6mf@$hVK3qat`Eab';V&Ef[KRp,al^9SeqL-pakZ+$J)B1h<)h&f$KR_oDA.f"M.9njidErM\.ZdA$%4cl6OEf0keUan]kZX=ba02u"Vk#i0QC_SnJM:F][\=8HOAqpcoGLkBg>[R1/3jFJY`)nu?#Zln7@AkCHN1:1(>B.>;%d:G/JTpno%Jug74Tbu?/\3'l6ZY.\tq*'1$_b`Zh[\G3:Kf@r`lQcTTdu2YLoYT-HC$[l7fKX6iZIpb.?(h&JgL.kYiXt1gW3.QPd1sqe`QdU`%^bAj^a'"$C(W!L,dLa)"(/-:9bTkNA?D]Zt>*9r'Q`]CAj48dhraC/89aI[-@3gN>#mR9XN]I_mD#DXMm/&?=$)$L9'J*W]3?W30%Sir9lQsDC"\U$&o6I<BjCkGlT*i0[U-;%e"JJA*n?-'`(>T)U21IhOG/.JB=0_<Ai4VS-+Q8fHn%?+JM2$d^'&mX!Q$u[sVajTfD%MWpOq):iJeUdsZ\X*N.'Fc&uiZhE>V^Zia[oCm+4_tpfjB(61jEq)MknXkZ64U#nXR?QK<_Z)ua*"jFn$(o5:7WDu,?rhDu<6G?)%gc.a>:h#3<JbEc8$RioFO`qk32;]'#]`AsHKH#fu-F,'V\GF>@M\$[6[g]&>ZA,#kchrlV,uF5AoGe/70#mZokUJqg_<9@a6$<8?%O-*>uM>S*9c3F\s&;GW;%+`:W)]-&K*sd5&2,ad%$S*a?cXSBD?pHF?"'QG\qe5I&I`F06!p,jfKNWs2Y))LT%S0!tG)XTjCFR.t%1<e;LL^;eOUb0(]krD?`^ums]FdSP%`*5#+]V\tXWnbQ1C=l=>e#!j6Nb3NhGn)-I8[lMF_#g6cD\76!#[*%p-a<,(/g)m*E^$?X%3J91,VBWq`EMa"23,TF$+MK=[C9sl(:rEpJ.[2o&dLqm^pDjibm.3L/$uBcS&>Aop9eM68m;6ru@1B00KeD%*6fES_lG@6H96>kI%*&Ecq`CcnU&NM<@dLdNFFH<ZQQ2*Y3!CtFt8;(;Y[Kj)LZp&Mh$HG\TF9%sO%1*Z79cPC/7"B%e`jA_,(5%\3!QEFf@(Yq'+P&8N%h%ARj9N$ZoP,go=-NFU'+]D;CT%IUN*n=4Ra/CLQ&dET6`2)t`/i]O1PGJA6F;pp+CL%3FJKsNkU!G0Zcc$b!:lHX*/],l&(D+Z1%4@ZN5d:l/7_KUBiZL!6hg%qXX@qliG!ad8eH;YJ*k6T@n`o.bj(a2Z<+=%MF6o2fLPj"fb.OP#3&6^!*iEKQ?R=a;@#i^(GVN1bj%ShR/KJLeZ4=?#AfOY*%h=^`*dR[O8fF0SS[b\74!QjMa$NP/H<'Ol/)HrBM1?pu[mb2Dh7JlS#H8=18KqhMVMU5.3^pm1+W_u7tn%8r3k=E[c]J4OLm!7"meeY`5SBURr<T?:l3UM!5J![fNe@=FC#<HpUW\!Y.T`HP?agL?lGt_ZgZ@5[P%dE;H5@m-s'PV/S3\Ild/$%1VlmS<4J(\\Vs+g'8M$%.+3Pe">9IGOJ3s..ip]krC@LfRGd(uj;nfBJs#N<s%@ftL2,f85sT-m(_/-h_oO2Qn-J/#X$Nm\iI]!p%4Y@kK'8;UH"nMsR^iL5;k\tQ=PDI-]"G$PLAci)_#$3qLq4?5!\t%u$j?!SPYWJ1r31M:eW1J*8Hk%CCl#f6:'EZN5>h^!;NC_-,%q^Uo")jiKMBl=#a1XNVJe4oMGA#;?,h8'm46MCcfb&KZXpeh1Q!23%sM$:UHNXY&I,(rj,&/&Es-3\=Odi4neaOcD*fW.QeN`RPo%+r5tLaQLpPJf%t$*YsSs'+=o.kBaAAR%?gQl+!"#eii*[(l;"EY8C/r3HX7@(-*PobVAk2W]6'Y0#NMOB]ZI.!YWUZ_aTJ5&K76K%-8JH?(P.We7jsY,)\HpK0e!``4%gqLaS<]Kad4;3hr/\8n8JsiJ?RlB-\p02?>,#->nrK+$beH[Nf-2tFJ[q>MC$05b69$XMh!L=%<5A,Pj=ZULpjng'Yuk*JiED7T<Q)m3r`oHWoAijFog3Z1Y`K/C>`01^T5!)6'(B7jIIiMUEefX11/U$JktK3<nA0L^6TE'C1If2;%''.$I:RJZ0)5]?&:q=J7)MJPY"L?U?ZNB!9+aF7@+?12Z-L.(W1do"d*](#3"i#:K:P;%KA(JgKi2g<eUrI()e0Jb@:a\R_X,HZb%)d<d#X$kDf$Tnf\OGf<>UDq-<CH&!i]R>2I?Oa:02))^C23U?r^Wmt'f;-D'<7EaAa<A]:JG8"B=st>W?79DD#2DZPUKZ"qBql(\%+'fFi<.mjIZStZI/<gT;Y>riCd*]$Q.-i`^OG/R^VB%\nb3IGc&/$a#Mki(?*OjE-&49LZLDH.(Ldfa<O="!kOb(T_fd%$nbU'5_%9nXPiL=_`?RtB9\X[f@%lZppW-)oTbfYH!'2$I])1mqJ`CKf5_1qf?kdh%/;L7+m<R5?huI2:+S<I0m9\Xoc0^Ed5,X=]fCX!T$M%O/=`ACJBh8PU9NrPCXRP29`.%c(smWn$B7LX&:XXE]$cWIL4`j)!;_^fJQ-bq6A2I0kO.Y.%8j8`1h*385lX^a?\h@Ctcm*%NcuG%c1_695I0_^!O+"WNR;NBPGI_@'"3LrJZ2Wf&lP)668RgDE`AejadS4<&;.0;l(r.709IuuK1=Ku+``NE[[O'&\Kk/oPV&8+W1b;e%N1i"ZZCs]E9%0i4aZp9W#,^"P)8AS[g^Y66F+jm][;7it4)tXjG#1[<?&PN7)#\$.TkGI&UPVZ3$q6XOMH9C4RX!ApCk?ga[jEg$%%#PMu_&@o+&=]Ee.#itO-B2&hU+Kmj9Wq>+O$Q02R#S3l6Sh>sWnB:!],%s^VUh`f=_"2jftpf(ZlWdTOV>.]Q6^-rZ%hLs.bZVe%-j$_0<`Ea%.8&,(C!sCC2DDO87El_e:!ONoR[t8<6:FStNgibh\C7^T&3o[a*@J&t)J_/h[eQO>(.%7PR\9=A"sVr:;)Hs,*,\k8%L:]7^Zc!@`Yt3T-;TmY_Uese3[#M;@WJ,)]f#VO![P69#X[d*"2LD>F#%\6"93!c^D"RTUSFroS.(sXa;]C/l]!eiO?tug4YVeV5%YUuq6@I$dZYk:Zo@^+E;ZW8rI`^dei_HO-8_9C'P9^VU$BKH9D5E:,\[R2mCa5!D+$r6Ml)+merKNPU`#8sOA'5<8KRn_WSR#g>6%%+f^'JJ[%IXWTN=lVSQ62,>-u,]-`k)[]FM2,pB50skOH2AE,[)6256V]Zbt#,[`e=hhhn>S%*PF,d+q"rfEu)h(B42HX/tU=O(X%8E"&lc!YB:;N3G2X(Kck$YojnCXqcYiF=JHK=/6^,g=+pcI@k]K!qp.8W]0(0]\5HC`>a2=^VQJ)Iei;*i+Wnc!pbE>rH8hX]9=4%`Vr6+(W>Z%6:,M2et^`hofQs,P*BgWCLD1RRY3LIRa<U52*'r!RUl*2Bn/KO_otG)pK+kl42PBADA"g!Y?T?&L0]tF%F,__/l`RH%`^Z/[KsN*q4\?BhR`GI;c5L:qWd2@r`nV+0B60,)Qs$neW?"(;)1tT/>A;iA1e_%h30-H_Pd]ptbclnuK`)-K1_?g%'Y8HY2UXBq%Lp?t^0P.cA1F_(=I\!qIQo1it"r0!i)fgTegnL$WDkjCBHD-SVijom\QmNPEKX=#_dp=4G[RPQ+!-KmbW.A&!)jjs4RRs3J?Y<3d%CXQ]L.VbD1j9T<s8Cp=6_t68_OIOW8@$%)J5&q;b_muQM11h5hq0<f]1MMZ!Z@T!_lBr>IqK3!R]d>m3US=W"6S:s_QMnk>Ut*Hr%Og=<j8i-/_6]QJW-<WKqJS=qAJSD0ESk3.0o_XUGa/hmodOWp*[GdIJD$t+];esp*V")jNAmqej;NK7*X(O1!K=-H%[AoWO55K[C%ep:>.PZkVhW=?TfH!=AiQs-O;-&mt_2[aCqP^8Q@>Wn:%(p#SgY>roEn^6g3Yh#j1UX[HZ9PsPN.GV34)47eh=L9?U4;PnM>ED:?%C6YT$4d1G1>EB"e7N?IU83;mC.?lF*\k_<'ZYVKn)feO@[SSk9[894]$5l3K#%^/dC6U&M4d1F6PRU<i<F5e?*HP.mPg+?F`oq!7%C"eYAd^Fk8JZ4>A.T4>)=u.QGMH$?-e`rP2`1UpSC9?V2OQ`($6DJA"'/`64>><S$>`u<CRui4N;i[^uD=,`(B%_ho24@C"@eE-X%KT/^IJk8n$VJ9u8d:@*16ADZ9."dDIW"$3]?!A-rQsQ^8+bP]I1E0gmN+S:u=?VeD?jgHH;[ZSnX`;`fD.0Nfg5OIYaGJVi99Q]:%Z%D4o.LIr@-o/+`<jZO0.=0MXB`b^s2DD[<:"(!s:"0ruR]=U\NJa7)%CZI?gD1q7PBIp5f#lQRaP'aL$sDmnR]Q0U#,3\9#,^cI%H7!LpdI/k,+gWX]9!;LGe:q=^Z>HZP9W_<Y[`1h$[Y;+9D*:LT[[tT+%+Z>/euE?1puqHT=R/tT;/53=VDe>be88]4?tug4]JVmA%]Ig3BH0\=r]_+r&@^+E;]iI:[`^dei_HO.cN)D1X1UZ2.Ui=L0AEZEbF"CLX(*AIoZsCbI9/Xl=Y*qpLN*XMV.;OsS!gL[E>SPmE%A6gQtPefi6e:q=n_C_huSZ&q7>#P,4MDJ?R\l>F5mAcR2`5:6DoNLoFT^X\&Ku)JJ.=.5u7a9G;?]r8XX::`![2N4Hp_\lE=<"hN%UC?OiR5Dk!g;)3AbuLG+0c,S\g0?.SPf?2;e:q=n_CZ.XJI05S+XL^s0a),?7#!8c-r%9f+p61-+p6;;*HN#FgQ/m"["ZT4=4AY3%DEUo;G"MP=E&KD\<)#n%)bk2ccC-0S-r%3d+p0MYCRA8(^'PK3k.WN/Rp/=B;X;mi[:,DtD@:(ZP=sG:Up8=cB&Tg_;NK7:X!TS%%K<p<sQ(!%b@:O0_K<r*eoI.+b4]<;Cs6YK4@10/JAEup:JGkk.SmtaZQtd\SU-/<))3q0N'3o?Re[.])o-0-2ob-;:5Z\m<S]k?!%7:n6bQ+NcSaK5n]!nIETcj#+_>`@:,&:_ju0TudUeS:Uf$&6u:P)n%1/A^@nQj[@4Vo08gf!8_%iq6tj`]qCXAs=Z@O6tWiEp'_+%Eq<388(%d._]o1t=c5,@/DRKnJKL"g5>q)]=Xqh?-1S(l/%);Kpb2kefs!1#rWMfC-m)+Ro&Q.u,+@/1HNZAb`Jli28#0B6"QHZd%_7Lp>%2,jfkhV8F3EBXbWZ5anbiV!]Y"nOj0ck-*#b!I-Z(=8`f!8[uPr&`H@duJKVjpPD_[jWE`-d"Vd`UqNlec5^5[o*d?nH/b%#*t*1VT&>()0SZlgI0%ri_d8\E`]C%C@A9kCJ\\=d#P^ZL4uQMDGLI\TS#+mXB00q_DN9(F-`+?K:W3;MJ!U^:H9:.*"QnXKVc[u%O&CJo8&YM&RcBEp*$;%c/K;]nY=FWsr@-pYj*]8Ba.CTb6phO_rVF!"nO<m5q.7`QVh&EQO2[jRJ9_H-lc@e"a_0^YnM\sgk12*l%'II1Y7,A@D7Cb/M6Xk'@o;u)8bfHHQ*`VGGg+!Km$Q*-+R#@Aa$)5=r5Pe=&kM^'NS5!A88*l(9HR56uX$uH7$(6Y?IL=Z3@=^:+%q`SH/79/IXDPpoo=7s':-JkqU_dY2=99'McXC\N_^p<H"p+/gLX)YUJQTjOo83JKt?gXmWhG(gi2U&YmBZ&^G`s%f(I*YWbUPNQj%"OY6In:knd`jWrdM5*?0&o;'sl7PBuP<2)B<B7oIOb#`jc5OnsBe*<N&[P)JP;&0cW;8H\X9&=GK1Iihi%>0I8-mcsFKe;HClJMY%)FVfWB!NSbb[NF`W_(>[XI6T^e760f6:>*J\LKa7Y?]D<`ihNAT5(-J^+4,u30JV2@9<q5G"@cZgu&g%@SqJ8igA]++JSmmmg#gh%+R:h1-4Q++'@1A0kQdi!OdsOq#$?&bHCokH4cl_mUF^6B9POE(;$KB#=J:i!Nmh=/Gt3"H_oQ#BM_9\8&<<W`lqW_1Y\bAT:anj?%X.o+r[>Uk.MO[;!324?m(([WsSu<;,&1[,o9'T7p,/QTD^ep5-&?*'u`i.rqXBm(lUJt#oV<;<I<c%'D4HYC8;-I0CG3r7Z:PlpO%3Ue6CDi^VKWKJL(H)P[*]q1r]RI'$$3tg`d!8N5Cl8Y0hM&YCKJd+X950Q(^,<<]?<\;s,04\NA7Q!$,4c"KT`f-(?l"`d5\-Ol2%\Ju?2Tm0<:?#Yp9fT$n"?gX+B,MY;'_X?069p([:JL7/S"`Ys@B?Y;nQY:A(H?UJ=!FXM(dD[aMH0%$&nVIN=dChn(7L4EL#5&XR%^d?(`=tq<9<?\G^l:4/u%q7irfIJ*j,D%.<Y&P.P+f"NPd0p@D2%f6PZ:HYb^pQo=(ZgVGUgoR#1a/$U7@.NN:_\caBPJ,oSPD19%1mt(KD+$qe3=2t&9I(`h*6.]/"hB3'UAGL'[1XIB;,FV3`ro<t.<?&R1H4k-K]D`J-JF`*)*L@g<sTs:5>D]?M.]3"*ZGr2QRE#,%Z06LG5*gcpYWlAH,RrcX)4FSPd_31NcA\c>qM&7nlU\nd\2`)B;cS93m.5jt^]<nLAA3Wi1/*p+d!*O4"f(3\?6DIln),BLQ6#O`%ibfo*@R`NN@#GorG/4E_/.L-U`@P@;M5nhqe_q0uH!IFp+PKD@<8<jNE^/]MA",SsY(rIGfQ7Of6H^?8!\@7nT&WdB$2)u%qK2M,%jtJ9,7+`p%;Y=hk1$no"e&%s'#^=q!o83^M?"shdA>L#GVSbeP(`2f$"+lB$6YK@spkg[nN[U]^JcS^XmBM*619=/%Nd&\e!J<bY%74/^<>iJ^U!DbWi.)5qY[kEslS+W\Q0g=j+Td\Y=MXZKc-!VnL-W5<n/VAkk!J#!?<-Dku$&Zc*4PH5nOV"f@@_\;%cZO:EC,:Kh%:3G0f?^^]/Sk*c8S0R1e]>X*kU-tZ9Mako]UccSj$kOe0"iU(%8#O]K/JmZ'`&qsk31cP[qR7(K'Ej>ra.e0m.ka%-mg9/jRcAt_%+JWA-psRYUOV7jGMqT5@0d/Gco]1'7I9hC!JpFuV4D?u*"u*UIIC.6u.\&-FaBZ*N[U;>=:aDknT1XE;k<Vo!j.>J9Kb.*YaP79(%n:ZhJ$kK)@A7@'o"pY'*b8">Sh=qQD1:h^t-r,JuJZ-J]hTeLRV$7a:?oV+f>Vt,')nYGe)n9-ZjhU1Mq$<<>*PBT:/t"as,Hd8>%jTdF+/ZQI!OH'Go3/!QNU>QEecc'hRb%U+Cej6F]9Qt7,=BQS+Q:DmPda0$b#jte?$Z_Y4=N2d$+-*]TKLB]#5-?<GJ?*g;a:)iL%83m(TePDD9Yj;ElSO!P%_XD,j:lORpfGs1^\B4fP39*::]FBeu?jBK-kq42NSQM+e7i2d0DNRMPHIkumrNqB*9=mX3<A]\n*m$$+%I70K*>(K+/;,_9N^J?,4eff\<\YtW=g]r?>l2:l1,#R^eN4M>[*#f^T$cX^,^`b9XE'e"2N.'C0$O9;/&]p1EQ*_t)08H9$/@89U%U;\E>e4cN(Fd`KbBKjAh''ngmD$)Ce'[hhr.^_%Q@H!E"d3u#K6O+5u#$B>1N2.(R"sYZhme]=)NWUb&J2$7/Whk)JK)!i?'TqDJ%RS^6)at\"fko@4W@!$1H1Z$j@%:isa*L5uRfn)8=MW5dUbD[3b7SbATH_Q6%4rB2+EkB#uQFs3[[;$9?)2[b3JpFX[@>@$RG#Nb`%!&iotWdP_?UR\,(-_SKDM2Apm&O"+;Y<_$8EAnd,[?kDu[I)!*--E7_6LYTc[c;lG^C$6Dl@F[_oq9CJK'L)=.;^W1j:YkZNp>:<%nNb;knt(C-INZh(i#FZndg7T).rL^OS'JO]2P!^:*Mtp80Mt%>bL-L)U%7NJ5Z1+>:m>.oTqh%5/hsY;8-2->G5l-7njI=1Qc`EM%!`0-GJ(#NLb#g-#Uq+'7X$]F.9)-0f7<%od/gpa--uuX&6p>fqY[Ak8bNDDL6&=hST4@S9\da[phWIC[C5bO+Gm:"8o*nBfm#*3K%pcbB7)$o(/SpX4`*,0U^#3]OV*8_?l,D>mn-XIUff=>X\XEJAFoQ+:$k3MY']iDEkictH(NlSB[N:<IKM.O(Jg+;cK`j[V.[8n]Y%DYqJ6n)ph!s1\7c2chCC?[]Z$q!6PpX.,#SL!0A>s14Tmr;HMRLX-JIGOWeojfaSh=RjAKrRW.kLCe\u%5/J90/j:=5D&7rTE~>%AI9_PrivateDataEnd