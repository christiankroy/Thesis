%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: FlamencoLocus.eps
%%Creator: Adobe Illustrator(R) 15.1
%%For: Chris Roy
%%CreationDate: 2014-04-5
%%BoundingBox: 0 0 374 234
%%HiResBoundingBox: 0 0 373.7056 233.7158
%%CropBox: 0 0 373.7056 233.7158
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.1.0 x39 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 80 8%%BeginData: 9382 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFA8FD33FFA8FD30FFA8A8FD18FF7D52A8FD32FF8383FD2FFF7DAE%FD04FFA8FD13FF7D527DFD2CFF83FD05FF83A8FD2FFFA8A8FFFFFF83A8FD%13FF7DFF7DA8FD2AFFA883FD05FF837DFD17FFA8FD17FF7DAEFFFFFFA87D%FD42FF83FD05FF83A8FD16FFAEAEFD17FFA8A8FFFFFF83A8FD41FFA883FD%05FF8383FD17FFA7FD17FF7DCFFFFFFFA883FD42FF7DFD05FF83A8FD16FF%CFAEFD17FF83A8FFFFFF83A8FD41FFA883FD05FFA783FD17FFA7FD17FF7D%AEFFFFFFA77DFD3AFFA8A8FD06FF83FD05FF83A8FD17FFAEFD11FFA8FD05%FFA7A8FFFFFF83A8FD3AFFAE7DFD05FFA883FD05FFA783FD17FFA8FD11FF%58FD05FF7DAEFFFFFFA87DFD3AFFA883FD06FF83FD05FF83A8FD06FFAEFD%0FFFA8AEFD11FF83AEFD04FFA8A8FFFFFF83A8FD36FFAE83FFFFAE7DFD05%FFA883FD05FF7D83FD06FFAE7DFD0FFF83FFFFFFA8FD0DFF58FFA8FFA8FF%7DA8A8FFFFA87DFD36FFA883FFFFA8A7FD06FF83FD05FF58AEFD06FFA8A8%FD0AFFA8FFFFA8FFAEFFFFFFAEFD0DFF83A883FFFF83A8A8FFFFFFA7A8FD%2DFF83FD08FFA87DFFFFFF7DFFFFFFA8FFA883FD04FFAE5883FFA8FFFFFF%83FF83FD06FFAEA8FFFFA883FF7DFF83FFFFFFA7FD0BFFA8AE7DA87CFFA8%A87D83A8FFFF8383FD2CFFAEA8A8FD07FFA8A7FFAEA783AEFFFFA7AEFF7D%FD05FF58A8FFA8FFFFA8A8FFA8FD06FFA8A8A8AEA8837DA8FF83A8FFFFAE%FD0CFF8383A883FFFFA8A758FFFFFF58A8FD2AFFA87DAE5883FD04FFA8FF%FFA87DFF7D837D8383FF7DAE8383FD04FFA85883A858FF83A883FF58A8A8%83FFA8FFA87CA758AE337D83FF58A8FFFFA7FD0BFFA8A87CAE58A8A8A87D%58A8FFFF7D7DFD04FFA8A8FD23FFA87DA8835958FFFFFF7DA883FF83A8FF%8383A87DA8FFA8A87DA7FF83FFFF8333835883CF83A883A88358FF58FF58%FFA8595883A85858AEA8587CAEFFAEFD0BFF837DA8FF583458A8A83383A8%FF7DA8FD04FFA8AEFD23FF337D837D3358A8FFA8587D83FF5883A80B8358%5858837DAE34835883A8A8343458587DA858A8348358347D58FF5858A834%5858A8333483A834587DFFA8A8FD0AFF7D3358AE34580B837D342D7D5858%83FD04FFA8A8FFA8A87DFD1EFF7D342D5833340B58588358585883337D58%3433340B3434583334333458580B340B58335834587D340B340B342D830B%343334335858340B58333433347D8333A8FD04FFAEA8FFFFA8580B343334%0B1233340B342D340B7DA8837DAE2D83837D3458A85883FFAEFD19FFA77D%837D837D837D837DA883837D8383837D8383837D837D837D8383837DFD04%83A77D837DA883837D837D837D8383837D837DA77D8383837D837DA78383%A8FFFFFFA8FF83FFFFAE83837D837D8383A77D8383837DA87DA87DA7A883%7DFD0483AE7D83A8AEFD13FFA8A87DA87DA87DA8A8A87DA8A8A87DA8A8A8%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87EA8A8A87DA8%A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA87EA87DA87DA8%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA884A87DA8%7EA87DA87DFD0AFFAFA8A8FFFFA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA8A8A87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87D7DFD06FFA8527D7D7D2752A8FFFD2AA852527DA8A1A1A8A87D%A87DA8A87D7DA87DA87DA87DA876A87D7DFD2CA87DFD06FF7D7DA8FFA8A8%A8FFFFA87DA8A8A8A1A8A8A8A1A8A8A8A1A8A8A8A1A8A8A8A1A8A8A8A1A8%A8A8A1A8A8A8A1A8A8A8A1A8A8A87D272727F8272727F827F827F87DFD06%2720512727F82752A8A1A8A8A8A1A8A8A8A1A8A8A8A1A8A8A8A1A8A8A8A1%A8A8A8A1A8A8A8A1A8A8A8A1A8A8A8A1A8A8A8A1A8A87DFD06FFA87DFD07%FFFD2AA87DA87D52527D52527D52527DA87D527D277D5252527D5252527D%FD2CA87DFD06FF7DA8FD07FFA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA8A8A87DA87DA87DA87DA87DA87EA87DA87D847DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87D7E7D7DA87DA87EA8847D53A87DA87EA87DA87EA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA8A8FFFFFD7D7DFDFCFFFD3FFFA852A8A8FFA8FFA8%FFA8FFA8FFFFA8FFCAFD06FF52A87D7D7D52A8FF7DFF7DA8FD20FFA8FD18%FF52A8FD22FF272752274B52275252522727275252522752FFA87DFF7D52%275252275252FF525252277DFD1FFF5252FD17FF527DFD22FF7D52522752%7D7D7D5227277D7D27A8277D52FF5276A8A852A8527D277D52FF2752527D%52FD1FFF527DFD17FF52A1FD22FFA8A87D5252A8A8A87D7D7DA8A87D52A8%52A8FD04FF7D527DA152A852A8FFA87D7D52A8FD1FFF7D52FD17FF5252FF%FD23A8FFFFFFA8FFA8FFA8FFA8A8A8FFA8FFFD05A8FFFFFFA8FFA8FFA8A8%A8FFA8FFFD1FA8FF527DFD17FF5227275227522752275227522752275227%522752275227522752275227522752275227522752275227522752275227%522752275227522752275227522752275227522752275227522752275227%5227522752275227522752275227522752275227522752275227277DFD17%FF527DFD65FF527DFD17FF527DFD65FF7D76FD17FF527DFD65FF527DFD17%FF277DFD65FF5252FD17FFA8A8FD65FFA8FDFCFFFDFCFFFD0CFFA8A8FD7E%FF7D52A8FD7DFF527D7DFD7DFF7D7D7DA8FD7CFFA8A8FDFCFFFDFCFFFD3C%FFA8FD2FFFA8A8FD4DFFA883FD2FFFA87DFD47FF7DA8FD04FFAE7DFD2FFF%8383FD04FF7DFD42FF7DFD05FFA8A7FD17FFAEAEFD16FFAE83FFFFFFA884%FD42FF7DA8FD04FFCF7DFD17FF83AEFD16FFA883FD04FF7DFD42FF7DFD05%FFA8A8FD17FFA8A8FD16FFAE83FFFFFFA87DFD41FFA87DA8FD04FFAE7DFD%17FF7DFD17FF8383FD04FF7DFD42FF7DFD05FFA8A8FD17FFA8AEFD16FFAE%83FFFFFFA87DCAFD3AFF7DFD05FFA87DA8FD04FFAE7DFD17FF7DFD11FF83%A8FD04FF8383FFFFCFC276C2CAFD39FF83FD05FFCA7DCACFFFFFFFA883FD%17FFA8A8FD10FFA7A8FD04FFA87DFFFFFFC9B5C3FD3AFF58FD05FF9A9A9A%FD04FFCF7DFD07FFA8FD0FFF83AEFD10FF7DA8FD04FFA783A8FFFFA076C2%CAFD34FFA8A8FFFFFF83FD05FFCA8DC9FD04FFA883FD07FFAEFD0FFFA8A8%FD10FFA8A8FFFFFFAEA87DAEFFFFA87EFD2DFFA8FD08FF9A76C2CAFF58FD%05FFA07C9AFD04FF837DFD05FFA8FFA8FD0BFFA7C276C383FFFFFF83AEFD%0CFF7DA07CA0CAA8838383FFFFFF7DFD2DFFA8AEFD07FFC9B5C3FFFF83FD%04FFA8FF7DFD05FF8383FFFFA8FFFFA8A8AEFD06FFAEFFFFFFA8AFC2B5CA%A8A8FFFFA8A8FD0BFFA8A8A0B5C2FF83A858A8FFFFA87DFD2BFFA8FF7DA8%A8FD06FFC276C2A8A87DA8A8FF8383A87DA8FD04FFA758FF8383FFFFA8FF%83FFFFFFA8FFFFFF83FF83FF7C9A75C35983FFFF7DFD0BFFA8A883A06FC2%FFA8835883FFFFA859FD05FFA8FD24FFA8A8A7A076C3FD04FFA8FFA87DFF%FF838358AEFFA883AE7DFD05FF5883A88383FFA8FFA8A883FF7DFFA8FFAE%A8A883FF83587DCA837DFFFFA8AEFD0BFFA8A8A7A87CA8A8AE5883FFFFA8%7DFD04FFA8A8FD23FFA883835999B5A7FFFFA87DA7A8A87DFF5883837D7D%FF8383587DA883A8FF8311588358837CAE83838358A858A8A858FF7D8358%AE585952AE5858A8FF83FD0BFFA8837DAF7D59337DA8582D83FFA87DFD05%FF83FFFFFFA7FD1FFF8333A8589975A0AFFF58A883FF7D7DA83458835858%8383837D528358A8A8830B585883837DA85858832D8358AE7D3483835858%FF58347D83342DA8A8A883FD0AFFAE3358837D5834338333345883587DFD%04FFA8A8FFAEA858FD1EFFA82D110B342D2E2D3458582D5858582D590B11%0B580B342D342D520B5858340B340B330B342D7D2D332D110B3434330B58%0B332D832D332D580B110B58583358FFFFFFA8FF7DAEFFFF58110B342D33%0B342D330B342D3352A87D5883582D8334582DA83483A8AEFD19FFA8A883%A883A883AE83A8A8AEA8A783A883A883A8A7A883A883A883AEA7A883A8A7%A8A7A883A8A7AEA7A883AEA7A883AEA8A883A883A883A8A7A883A8A8AE83%AEFD05FFA8AEFFFFAE83AE83A883AEA8A883AEA8AE83A8A8AE83AEA8A883%A883A8A8A883FFA8FD09FF7D527D52A8FD06FFFD70A8FD05FFA852527DFD%06FFA87D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA17EA17DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA853FD06FF7D52%FD07FFA87DA87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A899A199A1%84A8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8%A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D7DFD07FF7D%FD07FFFD17A8CA8DC2FD56A87DFD06FFA87DFD07FFA87DA8A7A8A8A8A7A8%A8A8A7A8A8A8A7A8A8A8A7A8A8A89AA19AA884A8A8A8A7A8A8A8A7A8A8A8%A7A8A8A8A7A8A8A8A7A8A8A8A7A8A8A8A7A8A8A8A7A8A8A8A7A8A8A8A7A8%A8A8A7A8A8A8A7A8A8A8A7A8A8A8A7A8A8A8A7A8A8A8A7A8A8A8A7A8A8A8%A7A8A8A8A7A8A8A8A7A8A8A87D7DFD07FF7DFD07FFA87E7DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87EA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA852FD047D537D5252597D7D7D537D7D7D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D525952A8A8FF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">FlemencoLocus</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2014-04-05T20:47:04-04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-04-05T20:47:04-04:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-04-05T20:47:04-04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5.1</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>160</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7F5V1/zXba5e3/mCzvV0&#xA;fXFFxpaBJrk2xWYRRxNBGheD1IJo2ZWX7SOxwq9HwK7FXYq7FXYq7FXYq7FXYq7FUHquojT7VJzH&#xA;6nO4trfjWlPrNxHBy6H7PqVwE0xnLhF+77SjMLJIhdXP+OWtPVb6t+jFl9Gp4ep9YK8qdK02yF+r&#xA;4Nd+uvJPcm2OxV2KuxV2KrDNEJlhLASurOqdyqFQx+guMVX4q7FXYq7FXYqlGuMw1Py8ASA2oSBg&#xA;O4+oXRofpGRlzH46NWTnH3/oKP1G6Npp91dheZt4ZJQhNK8FLUr9GEmg2E0LW6VeNfaXZ3rKEa6g&#xA;jmKA1CmRA1K+1cYmxaxNi0VhS7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqk/mv/jlwf9tDTP8A&#xA;uoQZGfL5fe1ZuXxj94TjJNrHR/5MNv8AtkL/ANRLZX/H8Gr+P4MiyxtdirsVdirsVQE3/Hfs/wDm&#xA;Fuv+TlvkTzYnmj8kydirsVdirsVSfXf+Op5d/wC2hJ/3T7vIy5j8dGrJzj7/ANBRPmD/AI4Gpf8A&#xA;MLP/AMm2xnyLOfIrPLH/ACjek/8AMHb/APJpcYcgjH9I9yZZJm7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FWndI0Z3PFEBZiewG5xVZa3MF1bRXVu4kgnRZYZB0ZHHJSK+IOAG0A2LSzyazN5Q0NmJLHT7Uknc&#xA;kmFcEPpDXg+iPuDXmv8A45cH/bQ0z/uoQYz5fL71zcvjH7wnGSbWNRzRSfmLMqOrNFpSpKqkEqxn&#xA;5cWp0PFgfkcr/j+DUD6/gyXLG1DvfRJqENiQ3rTxSzowpxCwtGrA71rWZabeOC96Re9IjCl2KuxV&#xA;ATf8d+z/AOYW6/5OW+RPNieaOLoGVSwDNXipO5p1oMkybxV2KuxVj3kO4aTyvZNNIXmdrg1dqs1L&#xA;hxXfc0yvEfS14j6VTzDdQJqGhvyDC31CX1lUglSNNunoR2PEg4ZHcfjoxyHePv8A96UXrUqzeW7+&#xA;VK8ZLOV1r1o0RIwy+lsl9Jd5Y/5RvSf+YO3/AOTS4w5BGP6R7kyyTN2KuxV2KuxV2KuxV2KuxVSu&#xA;bqG2iEszcULpHX/KkcIv/DMMBNIJpI73zLp8GqadI8jrFctc2MaUPxXC3kFt06UD8t/DIGYsNZyA&#xA;EfL7aZDljahdQdG0+8CsCUidXANaHhWh+gg4DyQeST+X9Ut7Hyt5XjmV2a+gtLWHgAQHNr6lWqRt&#xA;SM9MhE1ENWOVQj519yl5E1uwn0PS9LRyL220+15xkHdRawOWU9KD10GOOQoBGnmDEDyH3BS1DVPr&#xA;eiRCeRfrJ1mOOOOoDGK01yODkFFKhRwBPuK9cSbHx/SxlO4/533SplmWOSwLTby0tfzQ8wy3M8cE&#xA;Qt4QXkZUUFo7cAVYjrlANTLjRIGSX47mT6Xr9veWVlct01G4mhtOINCI/VdC1SaVih398sjKw3Rn&#xA;YHmk2m6tFFN5TuL+c+te6U8YkerNJPMbIipFd2Pc5ES5X3fqa4y+m+79TIxq+mmW8jNwi/o9Q947&#xA;EBI1ILVZjsKBTXwyziDbxDfyS3V/Mq6dqzWbMh/0Ca6jiNQzyx1ZVr4FI3+7ISnR+DGU6NeST3Hn&#xA;e0TWNCu4uU1vrNvHDBGrFUEk91FGWNR1QM3btTI+JuPNrOYWD3/rDWlas9na+RgU9VtQ09bZnZt1&#xA;5QwSF+9f7vESrhRjlQh5j9DJr7/jsaZ/z3/4gMsPMN55hMckydiqF1K5ktrdJI6cmnt4jXf4ZZ0j&#xA;b/hWOAlEjTAvLl5aWh8qzXc8dvCLfWKySsqKP9IjP2mIHQZRA1XxcWBAMb7pfe15y1BrT17uGRVA&#xA;1xP3poV4PogVjU7U4sd8chr5/oRllRv+l/vWT+YbmS28h3c0dOa2FBXcfFGFP68skfR8G/Iagfcj&#xA;/LH/ACjek/8AMHb/APJpclDkGWP6R7kaLq3N0bQP/pCxiUx714ElQfDqDhtlarhS7FXYq7FXYq7F&#xA;XYq7FXmH5r6h5puL6z03SNLv7qygb1L54YpDFKSAUXkoYMEO/TrmPmJOwDg6uc7AiCR1YN5kt/Oe&#xA;ry84/Lmowo6zMYmgkYLJLqMt3seIqOEoU7dsqkCehcPJ4kv4T+JWznVfOHmrWfL9xpz+V7+1ubhV&#xA;jkdreZ0ZGjYuVoq8CsgUb1qDXLJTkRVOac0pRrhIS5dX8xW+m6vDbaBq8V5fwWEFvIts9F9C3SOY&#xA;sw7bECg39sFmjsejHxJAH0ys19yX32oed01HyvLY6Jqb2mi2lnHcWsttKIzcRo6TMqr1+BwAx8Om&#xA;AmW2x2aZSy3ComgB+1AaNe/mXpl4tzDol9Gwsls04Wj/AAlYooVf40eppbIzdttqVyIMx0Y45ZYn&#xA;6Ty7vx3I+/1XzjcXWmSw+WNThSxvLq7mHoyN6i3OpR3wj48V+x6Q6nc+GSJltsUynMkemWxP+6BT&#xA;DSfNXn7TEvpz5dv7m9uWYiA20wgWRriaYsp+J+PCRVAr+rDGch0bY5skQfSSf2lh1rpHnlZNUml0&#xA;K9Ml76Mx/wBGlA9VZkduIp8/uyrhl3OLCOW5ExO9Mo0u/wDNUV1ohGhapbxaVBdIvK1kas86ShJC&#xA;tCtAZFH35MGW2x2cqE5WPTIV5Mbv7f8AMObTbWzTQ79ZLOnpTJbzKw+GFNiB2FsuQqXc4+TxeGhE&#xA;2P2fqTmS984z6f5s9by5qUd/5i9FYvStpRGgjBD8id6Mppk7lvtzbJSmYz9JuShrN1+YOpy6ZPNo&#xA;eoi6toYLe4uUgmDSIquJSw49X9VlbsfpwS4j0KJyynh9Jva0Pf2XnEWfl02eiaiJ9MgVJAbeUenN&#xA;HcmdWX4d/h4/5jARLbY7ImMlRqJ2/Wv1+PzneQaXFbaDqiLp+mWlojCGUfvoY3WVgAvwVZ6e4UH2&#xA;wyEjWxRM5KAEZbRHzZonmvzPHp8V4vlzUn1CG6vHW3lgkYelPMHUctm2SUqu37OW8cu4uYM0uG+E&#xA;3Zej2lx9YtYbj03i9ZFk9KVeEicgDxdf2WFaEZeC5YNhDpqqtPZwi1uR9ciMokMTBIgFDcZif7tz&#xA;X7J74OJHEwz82rnXmsbCHQrC7ub60vEvFnhhaREMC/D2Ibl6vy+E5VmJ2pxdWZUOEG7ec6tH52v9&#xA;I0mwPlu/Daal8hk+ryfG101Vb7PbKCJEAVycLIckgBwnbiUPqP5gN5TGizaHfSg3T3HqNbTGQUsx&#xA;bKpPhxbbbt1xqVVTHhy+HwmJ/EaRtrdfmbBokmix6LffUrpikqSW0rBY3jjFEqoK8WVjXoanbD66&#xA;qmyM81cPCaP6npem+brnT/L2kRN5f1WWZYY4LmNbV6xmFEViQdzUt8O29Dl4nQGxc6OUiI9Mvktk&#xA;803dv5yv3l0DVHsoYFtILuC2klWUxsXZqUWg5MQtK1pXvjx+rkV8UiZ9JrvUNH82+aLvzJatfaNq&#xA;NvYLpbfWVFsyxG+4pM5Xka0ojRoCSa7dycYzJO4PJjDLMyFg1w/ayLQfM8mp2ZmuNJv9NmWSOJ4L&#xA;iBwaymgZTT4lX9o/s99t8nGd9G7Hk4hyITzJtrsVSTzX5kl0K1s5ILF9Rub+7jsre2SRIiXkV2BL&#xA;yfCB8GKpJq3m/wDMC2024uLbyXM88aFok+uW0vJh0XhExc16bdOuKpomr65deSbvUdR019D1T6pO&#xA;5szMkzRMsZKkSRbe/Y4qw+2tJHt4nbUNSLMilj+kb7qR/wAZsVVPqTf8t+pf9xG+/wCq2Ku+pN/y&#xA;36l/3Eb7/qtirvqTf8t+pf8AcRvv+q2Ku+pN/wAt+pf9xG+/6rYq76k3/LfqX/cRvv8AqtirvqTf&#xA;8t+pf9xG+/6rYq76k3/LfqX/AHEb7/qtirvqTf8ALfqX/cRvv+q2Ku+pN/y36l/3Eb7/AKrYqwvV&#xA;PzD07S/NFxol7JrIit2ija9i1C/lHqTojoDGkpYKTIF5ePtviren/ml5F1DibPXdWmjaRYjKlzqp&#xA;jWSRykau4fipehZanoMVah/NLyTM0CRaxrLyXXL6nGJ9W5Tsshh4xDn8ZMisop3BxVVl/Mbyqun2&#xA;upRanrM+nXdzJaR3cdzqZTnHA9xyWsgLhhHxXgCSfkaKrG/NDySrzI2s6wPq7zRzN9Y1UqrQLyep&#xA;DkD28cVWXH5o+T47N7qLU9buFWF509OfVSriO3N06hy/AFIqM1TtXFUw8vectF8waq+nabea0zJb&#xA;/WjPLdalFEV5hQFaSVak8gwp2xVkv1Jv+W/Uv+4jff8AVbFXfUm/5b9S/wC4jff9VsVd9Sb/AJb9&#xA;S/7iN9/1WxV31Jv+W/Uv+4jff9VsVd9Sb/lv1L/uI33/AFWxV31Jv+W/Uv8AuI33/VbFXfUm/wCW&#xA;/Uv+4jff9VsVd9Sb/lv1L/uI33/VbFXfUm/5b9S/7iN9/wBVsVd9Sb/lv1L/ALiN9/1WxVBa5Fc2&#xA;ui6hcwajqSTwW00kT/pC9NGSMspoZiOoxVmUvn+GOV4/0Drb8GK8k0+VlNDSqnuMVY95r81zalLo&#xA;TW3l7XCLDVILy45afKKRRxyK1PE1cYVT/wD5WHB/1L+u/wDcOlwKh9R87217p91ZNoOvItzE8LON&#xA;OlJAkUrUffhVicc1/HGqLFrfFAFFdDk6AU/37iq76zqP++ta/wC4HJ/1VxV31nUf99a1/wBwOT/q&#xA;rirvrOo/761r/uByf9VcVd9Z1H/fWtf9wOT/AKq4q76zqP8AvrWv+4HJ/wBVcVd9Z1H/AH1rX/cD&#xA;k/6q4q76zqP++ta/7gcn/VXFXfWdR/31rX/cDk/6q4q76zqP++ta/wC4HJ/1VxVCSWSSvI8mn6q7&#xA;yyx3ErNoDktLCFEbk+r9pAgoe2KpUfJHlcih8t3hBBU/8632Lcv9+ePTw6DbFV7+TvLzxxxv5fvi&#xA;kMbRRL/h0/AjuZWC/vNqu7Nt3J8TiqLOiaebSOzOkaj9UhlM8UH+Hm4LKwZS6r6lA1HYV98VQieT&#xA;fLiNcMnl++Vruv1kjy4fjqSfi/ef5RxVuPyh5eiZmj8v3yM8Rt2I8uEExNGYmQ/vOjRsVbxHXFV+&#xA;g+WdN0FEXS9L1a3kRGjM40GT1WVypbm/q8m5GNSa+GKpz9Z1H/fWtf8AcDk/6q4q76zqP++ta/7g&#xA;cn/VXFXfWdR/31rX/cDk/wCquKu+s6j/AL61r/uByf8AVXFXfWdR/wB9a1/3A5P+quKu+s6j/vrW&#xA;v+4HJ/1VxV31nUf99a1/3A5P+quKu+s6j/vrWv8AuByf9VcVd9Z1H/fWtf8AcDk/6q4q76zqP++t&#xA;a/7gcn/VXFU6t/Jeo67ojGTU5rSG9jkieC5sPQuFU8ozVGlJUnqPbfAr0PFXYq7FXYq7FUHpWs6b&#xA;qsU8unzieO2uZ7OdgGXjPbSGKZPiA+w6kV6eGKozFXYq7FXYq7FXYq7FXYq87tPz28lTanqFjcW+&#xA;p2P1CaS3Wa4spT9Zkik9NxbQw+rcvQhv91CgVq0ocVRUv53flpHJw/Sc8rGMSgwafqEylDbrd1DR&#xA;W7g8beRZWA3VdzShxVXufzi/Lq2ZxLqjkIyxrJHaXkscsjPHH6cEkcLJNIGuIwyRlmWu4GKrovzf&#xA;/LqVoQur8VlWple3uY44SWkUR3MjxKlvIWt5AI5irnjsMVTfyz5y8u+Zo530e5eY23p+vHNBPbSq&#xA;Jk9SJjHcJE/CRDyRqUYdDiqr5j8wRaHZwztaXF/PdTpa2ljZqjTSzSVIVTK8USgKrMWd1UAdcVYV&#xA;J+fvk+Kz/SEllqSaWkMUt1qDQRiOCSe2e7igkQy+tzaKM7ojJUj4txiqc2v5n6RJoeq6rdadf6fJ&#xA;ossMWoabcxwi6T6ysbwsBHLJEVZZlP8AeeNdxTFVNfzj8hHXG0n67LXjA8d+tvM9k4uZ3tkIuY1e&#xA;NF9WPjzkKoxI4s29FWa4q7FXYq7FXYq7FXYqhNX1O10rSb3VLvl9VsIJbq44Dk3pwoXfiO5ouKr9&#xA;Ov4NQ0+1v7ev1e7hjnh5Ch4SqHWo8aHFURirsVdirsVdirx/yF+ZPlPQY/MenalJerdJ5k1t2EGm&#xA;6hdJR9QlIpLb28sZ+hsVZR/yujyB/v7Uv+4Nq/8A2SYq7/ldHkD/AH9qX/cG1f8A7JMVd/yujyB/&#xA;v7Uv+4Nq/wD2SYq7/ldHkD/f2pf9wbV/+yTFXf8AK6PIH+/tS/7g2r/9kmKu/wCV0eQP9/al/wBw&#xA;bV/+yTFXf8ro8gf7+1L/ALg2r/8AZJirv+V0eQP9/al/3BtX/wCyTFXnOs2v5Mardy3UmreYoJZp&#xA;7i4kEekXroTdSSyyIY59MmRl5Ttx5AkUUg8gGxVFaVN+Tmm6ZFp8WpeYJYofV4yS6TqJekumx6WQ&#xA;SunqPhgiUjb7W5qNsVS3TtD/ACE0/WoNXgudb+tW1xDdwV0W9BE0M0M5ZpV01Z35tbiqvIVAZuAW&#xA;uKo6L/lT0Mt+ItY8yx2OrNM+sadHpuppBdmaSdz6xSwWXiv1pl4pIqsoXmGpXFU00TXvyg0+z1C1&#xA;1C51fzFHqaW0V5+mNEv7hXhsl420RiTT4ouMf2hVKlviJJxVU1PzJ+UNx5f/AEDpMupeW9Pa4W5m&#xA;i0bQLyBJWAoUlik06aGRHoOatH8VADttiqS6qn5P6u041TWvMl3b3iRjULU6RexRXEsNs9pFM4g0&#xA;yIq6RSUCxlU2BKmmKo6LVPylPl/WNGvtV8wan+nXifU7+80nUGuJBAsccafBp8cPBUhC09Pfeu5x&#xA;VLlh/KBbmqa75nXT3S2gn0n9GX5tpbaxuXurW3eum+t6cTSFF4yBuHw8sVei/wDK6PIH+/tS/wC4&#xA;Nq//AGSYq7/ldHkD/f2pf9wbV/8AskxV3/K6PIH+/tS/7g2r/wDZJirv+V0eQP8Af2pf9wbV/wDs&#xA;kxV3/K6PIH+/tS/7g2r/APZJirv+V0eQP9/al/3BtX/7JMVd/wAro8gf7+1L/uDav/2SYqknnj83&#xA;PI995K8wWVvLqBuLrTbyGEPpOqRLzkgdV5SSWyogqd2YgDvirOvJX/KG6D/2zrT/AJMJiqc4q7FX&#xA;Yq7FXYqwf8pP+OV5g/8AAm13/uozYqzjFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYqx78xv/Je+aP8AtkX3/UM+KojyV/yhug/9s60/5MJiqc4q7FXYq7FXYqoWlhY2&#xA;SSJZ28Vsk0sk8qwosYeaZi8kjBQKu7EszHcnriqvirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVadEdGR1DIwKsrCoIOxBBxVyqqqFUBVUUVRsAB2GKsD8l/mZP5g15t&#xA;MnsoLdJI7qW3eKaV3UWs6wlZVlhgQl+fIek70pvTCrPcCuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsYtPy48sWk5mhF4GVmaAG+uysHOZZpBb&#xA;r6tIg7oOXClRsdiaqsnxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KofUdRstNspb29lENrCAZZSCQASFGy&#xA;gnqcVRGKoCbUJU12z08KpiuLW6uHY15BoJLdFA3pQidq/Rkb3pgZeoDyP6P1o/JM3Yq7FXYq7FXY&#xA;q7FXYq7FXYq7FUp8x6jdWFvZPbkBp7+0t5Kiv7uadUcb/wCSchM182GSRA+ITbJs0Ppuo2epWEF/&#xA;ZSeraXKCSGSjLyU9DRgGH0jFURirsVdirsVdirsVdirsVdirsVdirsVdirsVdirGPzM/5QbVf9SP&#xA;/k8mIVk+KpPdf8phpn/bP1D/AJP2WRP1D8dzUf7we4/71OMk2uxV2KuxV2KpXrDMuo6GASA184YA&#xA;9R9SuTQ/SMjLmPx0YT5j3/oKaZJm7FXYq7FXYqkHnP8A3j03/tq6f/1EpleTp7w1ZuQ94+9P8sbW&#xA;Oflz/wAoLof/ADCR/qxVkeKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVJ/KGo3epeXrW8u3D3Ehl&#xA;DuAFrwldBsKDouQxmxbDHImNlJPzY1W0tPKdxZz81kvwEt3Ckx80dH4M42UsoPGvWhwTyxiRfVy8&#xA;GlyZRIwF8O5HX4Dr5sn0nVbTVbFL605m2lLek7oU5qrFQ6hqEq1Kqe4w45iQsMdRglinwS+ofivf&#xA;3oO6/wCUw0z/ALZ+of8AJ+ywn6h+O5xD/eD3H/epxkm1a00SyJGzAPJXgp6niKmnyxVdirsVdiqV&#xA;az/x0tB/5jn/AOoG6yMuY/HRrnzHv/QU1yTY7FXYq7FUq8u6hc30F69wwZob67t46ACkcMzIg29h&#xA;kYG2EJX8yhfOf+8em/8AbV0//qJTI5OnvDHNyHvH3onzHerH5cur23vja8Y1lgvIUE+9QyBUo3qC&#xA;Q0Wg6g7HvgzSqBN05+hiJZYgxEgel19vSudsU/Ju+vbnQTFdzurWsUEUGnlAqRQcCY5VkA/eGbck&#xA;1oKUptlWnySkTxc+5ze1NPhxCAw+qBv19ZHqK6cPu83oOZTqHYq7FXYq7FXYq7FXYq7FWndI0Z3Y&#xA;KigszMaAAbkknFUt1bWIrGbTy00UdtPdNBdSyMAqhbaaX7RICnnGvXIk8mEpUR7/ANCZ5Jmlfmi7&#xA;ez8v310l6NOkhj5peNGJQjAggGMg8uR+Gg3323yrPKoE3Tl6HGJ5oxMeME8rr7enexH8qNduJvLy&#xA;fpO8CfVo7S2gs3HxKstEhmaUishuHagp8IpT7VcqwZZSJ4tvL8d7ldp6bFgERjPFE36/5xuqrpXz&#xA;N3ypPPy7uYH8sW0CSK00JlaWMH4lD3EvEke/E0y7EfS6XCfSkf5ksut+UtXKXDx2mlXXoz26ii3D&#xA;p6W0hI5BUeQmg60GQnjGTY8gfm5+h18sBlKAHHyEv5vfXTyZto+nPpumwWLXMl39XBRJ5qeoUBPA&#xA;MQBUqtFr365Zjhwxq7a9Rm8SZnQjfQcvNJJHc/mZboWPAaLOQtdgTdxAmnvQYP4/g4R/vR/VP3hO&#xA;7XV7G6a4Ecg428y25kLLwd3ijlXgQTWolA+eTEgW0SBQCXUlzqGnySABlmvogFrTjE7Rr1rvRN8j&#xA;dkfFF2R8U65LyK1HIAEr3ANaH8MmzUXulW+itOJ5SxSShuwETRqR9Pq4L3Re7F/OfmwWGjw39nqM&#xA;dkk9u9zazPF6olkRojHCUoTSVXZTTcfRmPqMvDGwaczs6EcmeMZDijK73qhX1X/R577bJF5X813e&#xA;pWmjajrN8JbltY+rNZrGq/V2ktbmKJCUUc/ULg8un3HI4spkblzvl3bfpZdq4MeGWMQ9UT/H/O59&#xA;Olcq597OtWnmjv8ARkjcqs146SqDQMos7h+J8RyQH6MyZcw6+R3Hv/QUyyTN2KoXVNQTT7J7p0Lq&#xA;jRrxBof3jqn4csEjQRI0HkWo+b9Z0nXl0+z1G3t7a41e9aZ5EY/Vub3MVZ6fCyNy9ZQT1i3+GpGv&#xA;nnlGRAP/AB3f8fjnvOy+zsebBxyEhITltf8Aeczwx8x15/PZlnnbUZrWZpHdp4bN9FuBHWis31yc&#xA;uw7AuI1zKma+x5zPKif8370/0G6W08j6ddspZbfTIZSo2JCW6tT8MsiaiPc2YzUB7lD8uf8AlBdD&#xA;/wCYSP8AVk2xkeKuxV2KuxV2KuxV2KuxV2KsA/N7zrFoeivpsRR7zUopIpEYFikEsbpz2ZaMX2Xq&#xA;NjlOadCu9w9ZnEI11Lynz35rtdY1WeSxuA1v68z20rKVZUaJeScSK/G5PUbdvfCzcUpXHz3dp2T2&#xA;npocfjHjhYqFb2P4gdqoXe/quuW70rR/zM8rR+S1g052tr+2gigFmSC6SzjiJAzbSAOSzHr4jfMn&#xA;FkAxgDZxtXrYTyTInx786q+41+jos0z8ztLj0u4u7jVYprqHRbBkgmJ/eahS49ZQnwlmL+mH4/wy&#xA;Qyivg4MNWALMv4R892Kj8yINP8neT7K3Ectui20upqN51NjcxSKg3oobiTv19t8cmXfZGq1YjQ6X&#xA;v8CFHy5+YWn6NqUdwyBo2tLgqWJ/vYWuGiQ8Q20jOB7demVQnRaYauMT8D9lqXmjzlp11az29pdh&#xA;jc6ldzXMKFuBilijMTV2VhzQ5ZCY4viW6OpiZgA9T9zNNO/OPTX1DUbq7n4aXGsjWdqQgmYoltwV&#xA;aUr6jPKRU/qwjPv5Mo62Nkk7f2MGb8x5ZfNmpavJcziKSERWHBgGjhTUIpSlVK0DRRsPeu+VeJuS&#xA;4f5q8hle1f75OPK/nCxLaTp63kaxPeQz3gkotGiisY0q70/aEo2PbDCfIfjo34dRE0L/AB6Ur1P8&#xA;ynvdLvw1YriO5aaxhJV1V2umuOtFqAOIPjTInJbVPWXE94P6bTey/NCznvfMuoSXj26XmnItnbtX&#xA;l9aECIoQDp+8Zztt1OTGXcnybY6yJ4jfT9CHk/NaI6Ro1w9P0vaWUsTKQzRl1urSSJnPLkeS2rct&#xA;61+eDxdh3sPzoqJPOv0j9SV61r1kvknyxbiZZDGNVS4jUgujtJSLkOoBEmRkfSPiwnmAhHf+coan&#xA;54lj8t6DYWUypLaO2oNxAJS4FxMVqd9wjg0OTzT32btZqaIAPLd6Q35l+XrmCy1OW9QxWN8rmP7M&#xA;nGTSpDTj13mkZK+OT8Uc/wAcm781AgG+R/3r0DT9RstRs4r2xmWe1mBMUqdDQkHr4EUy8EHcOZGQ&#xA;IsNNqWnLJBG11CslyzJbIZFBkZPtqgr8RXuB0xsLxBin5sa9HpPloMJglw9zblYjvzVJBIwNOgoh&#xA;yrNKg4+qycEL8w8xv/zD0u60a1MaG31B9Wvb65VSaos0E4jQOF+IP9ZK19jUUOU8Y4S48NcOA0aI&#xA;JPu3S2Pz5dX/AJZvbPU5C94kVjDaz1AYpayu4DdCXpN1/wAnfIGZIouJDVcUDxc9k48t/m1cWnlR&#xA;9H1FPrSGFLO2l5BGRJRMnJjQhlQKg7HJxykCmzDrahUvd970HyV5w8s6b+X+jS3uowxLFAkMgqWZ&#xA;ZFDVUooLD7B7ZlHJEdXZnNACyUXeec/LEfna0tptRgi9HT7ktPJIiwkzyW7ookJ414xMaZAzHE1y&#xA;zwGQAnof0Ie1/NLSL3zDp2m2ssIt7kXJu5HcVj9Dnw+IHhR+HL5YBmBICBqomQiD3sl0vzR5e1WK&#xA;SXT9QguI4m4SlXFVJcxjkDQjky/D49tiMsEweTdDLGXI2meSbHYq82/MzX/zE8u30N/p08B8tT8Y&#xA;XKWBvLqG7kISCNk+s2oaOeRgivX4WIB23xVmHlFPNS6HA3mmW3k1mT450s0McMVekYqzlivdq0r0&#xA;xVMNUvDY6ZeXoXmbWCSYITTl6aFqV96Yqw+Lzn5okiSQWNiA6hqetN3Ff994qhrvWdTvX53mi6Vc&#xA;uAFDTF5DQEkCrRHpU4DEFiYg8wofWZf+pc0X/gT3/wCeODhj3LwDuDlu5lIK+XdFBHQhSD/yax4I&#xA;9yPDj3Bxu5jSvl3RTTp8J2/5JY8Ee5fDj3BD3WtQWslvFc6DokZuGMUHJDxLAcuPL0eIr2B65Cco&#xA;RIvq34tHLIJGMb4RZ9zrHWIb6D6xa6BossJZlEgRgGKniSpMO426jY4YGEhYRn0ZxS4ZxAl+tEfW&#xA;Zf8AqXNF/wCBP/VHJcMe5q4B3Bxu5iany7opO2/E9th/urHgj3I8OPcHC6lHTy7oo7fZPT/kVjwR&#xA;7l8OPcHC7mBDDy7ooYGoIU1r/wAiseCPcvhx7g43cxJJ8u6KSepKnv8A88seCPcvhx7g761L/wBS&#xA;5ov/AAJ7f88ceCPcvhx7g43UpAB8u6LQbAcT06/76x4I9y+HHuDvrUtKf4d0WnWnE/8AVLHgj3L4&#xA;ce4ON1Kevl3Rdunwnv8A88seGPcngHcFwvrkIYx5f0YISCUANCRsDT0seGPcvAO4Iy38z+YbaFYL&#xA;fTdOhhTZIo5JUUVNdlEYAyQASBS3/EWuVjb9FabyhZnhPOSqM9eTL+72LV3pgoLS271/WbxeN3pG&#xA;mXK7bSs7jatPtRnxOJAKmIPNCfWZP+pc0Xb/ACT/ANUcHDHuR4Y7g39bmpT/AA7otKg04nqOn+6s&#xA;eCPcjw49wcLuYCg8u6LTw4mm3T/dWPBHuXw49wXnULsxGE6Bo/pFuZjo3HlSnKnpUrQ9cPCE8A7l&#xA;r3txI3J/L2jO3TkykmgFO8XgMHBHuXgHcF0WoXcLiSLQNHjkUEK6BlIBBBoRF4E4eEdyiA7l8Gr6&#xA;jbhxb6JpMIkKmQR8l5FDyWtIhWjbjERCiIHRU1Hz55nstPurxrCydbaJ5igmlBIjUtT+770wsk/u&#xA;vzE/L+0uZbW68zaTb3Vu7RTwS31skiSIeLI6s4KspFCDirEvzK/MHyFeeVfQtPMulXE36Q0qT0or&#xA;23duEWp20kjcVcmiIpZj2ArirKP+Vm/lt/1Nmjf9xC1/6qYqgdd/MT8vbrRNQtoPNWjPPPbTRxJ+&#xA;kbQVd4yqipkA6nFWCW/n7y8kEaNd2XJVVT/uW0bqBT/ltxVU/wCVg+Xf+Wuy/wC4ro3/AGW4q7/l&#xA;YPl3/lrsv+4ro3/Zbirv+Vg+Xf8Alrsv+4ro3/Zbirv+Vg+Xf+Wuy/7iujf9luKpdrfmjyzq9ulp&#xA;Pf2a2ZcPcxLqmi1lC7qvL69VRyoTTfKc2LjFE7OdodadNIziPXWx7vOuuytpfnTQLGwitG1GznEA&#xA;4JI2qaKp4A/ACFvaVVaCvfJYocMQLumrVZxlyGYjw8W9efX7UX/ysHy7/wAtdl/3FdG/7LcscZ3/&#xA;ACsHy7/y12X/AHFdG/7LcVd/ysHy7/y12X/cV0b/ALLcVd/ysHy7/wAtdl/3FdG/7LcVd/ysHy7/&#xA;AMtdl/3FdG/7LcVd/wArB8u/8tdl/wBxXRv+y3FXf8rB8u/8tdl/3FdG/wCy3FXf8rB8u/8ALXZf&#xA;9xXRv+y3FXf8rB8u/wDLXZf9xXRv+y3FXf8AKwfLv/LXZf8AcV0b/stxV3/KwfLv/LXZf9xXRv8A&#xA;stxV3/KwfLv/AC12X/cV0b/stxV3/KwfLv8Ay12X/cV0b/stxV3/ACsHy7/y12X/AHFdG/7LcVd/&#xA;ysHy7/y12X/cV0b/ALLcVd/ysHy7/wAtdl/3FdG/7LcVd/ysHy7/AMtdl/3FdG/7LcVd/wArB8u/&#xA;8tdl/wBxXRv+y3FXf8rB8u/8tdl/3FdG/wCy3FXf8rB8u/8ALXZf9xXRv+y3FUZJJqfmPy7fnQ9N&#xA;fUYp4ZreO4trvTZovVaMjiXju2Wo5CuKv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:7B5C34563F2068118C149AA0EBC2798A</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:7B5C34563F2068118C149AA0EBC2798A</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:688e1f25-a2f4-7b44-8248-adc51102481d</stRef:instanceID>
            <stRef:documentID>xmp.did:ACB0D827362068118C14A945E5DB942B</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D27F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:15+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T16:23:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T17:10:45-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF7F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T22:53:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T23:07:07-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:35:43-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:40:59-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:26:55-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:20-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:30:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:31:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B233668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:23:46-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B333668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:27:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B433668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:46:13-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:47:57-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:51:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:52:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T13:28:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T16:23:53-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07C3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T16:45:26-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F1174072068119098B097FDA39BEF</stEvt:instanceID>
                  <stEvt:when>2008-06-02T13:25:25-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T14:58:36-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:31:27-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811834383CD3A8D2303</stEvt:instanceID>
                  <stEvt:when>2008-06-11T22:37:35-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811818C85DF6A1A75C3</stEvt:instanceID>
                  <stEvt:when>2008-06-27T14:40:42-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068118F62C262592E568B</stEvt:instanceID>
                  <stEvt:when>2012-01-04T09:22:07-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118F62C262592E568B</stEvt:instanceID>
                  <stEvt:when>2012-01-04T09:22:18-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:06801174072068118C14F3235FA19F7F</stEvt:instanceID>
                  <stEvt:when>2014-03-26T20:33:25-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07801174072068118C14F3235FA19F7F</stEvt:instanceID>
                  <stEvt:when>2014-03-26T20:33:35-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:08801174072068118C14F3235FA19F7F</stEvt:instanceID>
                  <stEvt:when>2014-03-26T20:35:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ACB0D827362068118C14A945E5DB942B</stEvt:instanceID>
                  <stEvt:when>2014-03-29T07:35:46-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7B5C34563F2068118C149AA0EBC2798A</stEvt:instanceID>
                  <stEvt:when>2014-04-05T20:47:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>400.333984</stDim:w>
            <stDim:h>255.333008</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>HelveticaNeue</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica Neue</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>8.0d6e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>HelveticaNeue.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -233.716 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 233.716 li
373.706 233.716 li
373.706 0 li
cp
clp
[1 0 0 1 0 0 ]ct
61.9639 56.4619 mo
62.5137 56.4619 li
62.5137 55.3491 li
61.9639 55.3491 li
61.9639 56.4619 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.875 .247 1 .133 cmyk
f
62.5137 56.4619 mo
63.064 56.4619 li
63.064 54.2339 li
62.5137 54.2339 li
62.5137 56.4619 li
cp
f
63.064 56.4619 mo
63.6138 56.4619 li
63.6138 54.2339 li
63.064 54.2339 li
63.064 56.4619 li
cp
f
64.1616 56.4619 mo
64.7119 56.4619 li
64.7119 52.0029 li
64.1616 52.0029 li
64.1616 56.4619 li
cp
f
64.7119 56.4619 mo
65.2617 56.4619 li
65.2617 52.0029 li
64.7119 52.0029 li
64.7119 56.4619 li
cp
f
65.2617 56.4619 mo
65.812 56.4619 li
65.812 49.2173 li
65.2617 49.2173 li
65.2617 56.4619 li
cp
f
65.812 56.4619 mo
66.3618 56.4619 li
66.3618 48.6611 li
65.812 48.6611 li
65.812 56.4619 li
cp
f
66.3618 56.4619 mo
66.9116 56.4619 li
66.9116 48.6611 li
66.3618 48.6611 li
66.3618 56.4619 li
cp
f
66.9116 56.4619 mo
67.4609 56.4619 li
67.4609 52.561 li
66.9116 52.561 li
66.9116 56.4619 li
cp
f
67.4609 56.4619 mo
68.0107 56.4619 li
68.0107 52.561 li
67.4609 52.561 li
67.4609 56.4619 li
cp
f
68.0107 56.4619 mo
68.5605 56.4619 li
68.5605 43.6431 li
68.0107 43.6431 li
68.0107 56.4619 li
cp
f
68.5605 56.4619 mo
69.1108 56.4619 li
69.1108 46.4302 li
68.5605 46.4302 li
68.5605 56.4619 li
cp
f
69.1108 56.4619 mo
69.6597 56.4619 li
69.6597 52.561 li
69.1108 52.561 li
69.1108 56.4619 li
cp
f
69.6597 56.4619 mo
70.2109 56.4619 li
70.2109 53.6763 li
69.6597 53.6763 li
69.6597 56.4619 li
cp
f
70.21 56.4619 mo
70.7588 56.4619 li
70.7588 53.6763 li
70.21 53.6763 li
70.21 56.4619 li
cp
f
70.7588 56.4619 mo
71.3086 56.4619 li
71.3086 53.1191 li
70.7588 53.1191 li
70.7588 56.4619 li
cp
f
71.3086 56.4619 mo
71.8589 56.4619 li
71.8589 53.1191 li
71.3086 53.1191 li
71.3086 56.4619 li
cp
f
71.8589 56.4619 mo
72.4087 56.4619 li
72.4087 43.0879 li
71.8589 43.0879 li
71.8589 56.4619 li
cp
f
72.4087 56.4619 mo
72.959 56.4619 li
72.959 46.9893 li
72.4087 46.9893 li
72.4087 56.4619 li
cp
f
72.959 56.4619 mo
73.5088 56.4619 li
73.5088 53.6763 li
72.959 53.6763 li
72.959 56.4619 li
cp
f
73.5088 56.4619 mo
74.0576 56.4619 li
74.0576 53.6763 li
73.5088 53.6763 li
73.5088 56.4619 li
cp
f
74.0576 56.4619 mo
74.6079 56.4619 li
74.6079 54.79 li
74.0576 54.79 li
74.0576 56.4619 li
cp
f
74.6079 56.4619 mo
75.1577 56.4619 li
75.1577 46.9893 li
74.6079 46.9893 li
74.6079 56.4619 li
cp
f
75.1577 56.4619 mo
75.708 56.4619 li
75.708 48.6611 li
75.1577 48.6611 li
75.1577 56.4619 li
cp
f
75.708 56.4619 mo
76.2578 56.4619 li
76.2578 49.7749 li
75.708 49.7749 li
75.708 56.4619 li
cp
f
76.2578 56.4619 mo
76.8066 56.4619 li
76.8066 51.4473 li
76.2578 51.4473 li
76.2578 56.4619 li
cp
f
76.8057 56.4619 mo
77.356 56.4619 li
77.356 36.3999 li
76.8057 36.3999 li
76.8057 56.4619 li
cp
f
77.356 56.4619 mo
77.9058 56.4619 li
77.9058 44.2021 li
77.356 44.2021 li
77.356 56.4619 li
cp
f
77.9058 56.4619 mo
78.4556 56.4619 li
78.4556 54.2339 li
77.9058 54.2339 li
77.9058 56.4619 li
cp
f
78.4556 56.4619 mo
79.0049 56.4619 li
79.0049 53.1191 li
78.4556 53.1191 li
78.4556 56.4619 li
cp
f
79.0049 56.4619 mo
79.5557 56.4619 li
79.5557 43.0879 li
79.0049 43.0879 li
79.0049 56.4619 li
cp
f
79.5557 56.4619 mo
80.105 56.4619 li
80.105 43.0879 li
79.5557 43.0879 li
79.5557 56.4619 li
cp
f
80.105 56.4619 mo
80.6548 56.4619 li
80.6548 46.9893 li
80.105 46.9893 li
80.105 56.4619 li
cp
f
80.6548 56.4619 mo
81.2036 56.4619 li
81.2036 46.9893 li
80.6548 46.9893 li
80.6548 56.4619 li
cp
f
81.2036 56.4619 mo
81.7549 56.4619 li
81.7549 50.8892 li
81.2036 50.8892 li
81.2036 56.4619 li
cp
f
81.7549 56.4619 mo
82.3037 56.4619 li
82.3037 53.1191 li
81.7549 53.1191 li
81.7549 56.4619 li
cp
f
82.3037 56.4619 mo
82.855 56.4619 li
82.855 53.1191 li
82.3037 53.1191 li
82.3037 56.4619 li
cp
f
82.855 56.4619 mo
83.4038 56.4619 li
83.4038 52.0029 li
82.855 52.0029 li
82.855 56.4619 li
cp
f
83.4028 56.4619 mo
83.9526 56.4619 li
83.9526 55.3491 li
83.4028 55.3491 li
83.4028 56.4619 li
cp
f
83.9526 56.4619 mo
84.5029 56.4619 li
84.5029 54.2339 li
83.9526 54.2339 li
83.9526 56.4619 li
cp
f
84.5029 56.4619 mo
85.0518 56.4619 li
85.0518 52.561 li
84.5029 52.561 li
84.5029 56.4619 li
cp
f
85.0518 56.4619 mo
85.603 56.4619 li
85.603 53.1191 li
85.0518 53.1191 li
85.0518 56.4619 li
cp
f
85.6025 56.4619 mo
86.1519 56.4619 li
86.1519 53.1191 li
85.6025 53.1191 li
85.6025 56.4619 li
cp
f
86.1519 56.4619 mo
86.7017 56.4619 li
86.7017 53.1191 li
86.1519 53.1191 li
86.1519 56.4619 li
cp
f
86.7017 56.4619 mo
87.251 56.4619 li
87.251 54.2339 li
86.7017 54.2339 li
86.7017 56.4619 li
cp
f
87.251 56.4619 mo
87.8018 56.4619 li
87.8018 55.3491 li
87.251 55.3491 li
87.251 56.4619 li
cp
f
87.8018 56.4619 mo
88.3516 56.4619 li
88.3516 55.3491 li
87.8018 55.3491 li
87.8018 56.4619 li
cp
f
88.3506 56.4619 mo
88.9009 56.4619 li
88.9009 55.3491 li
88.3506 55.3491 li
88.3506 56.4619 li
cp
f
88.9009 56.4619 mo
89.4507 56.4619 li
89.4507 55.3491 li
88.9009 55.3491 li
88.9009 56.4619 li
cp
f
89.4507 56.4619 mo
90.001 56.4619 li
90.001 52.0029 li
89.4507 52.0029 li
89.4507 56.4619 li
cp
f
90 56.4619 mo
90.5498 56.4619 li
90.5498 51.4473 li
90 51.4473 li
90 56.4619 li
cp
f
91.0986 56.4619 mo
91.6489 56.4619 li
91.6489 55.3491 li
91.0986 55.3491 li
91.0986 56.4619 li
cp
f
91.6489 56.4619 mo
92.1987 56.4619 li
92.1987 46.9893 li
91.6489 46.9893 li
91.6489 56.4619 li
cp
f
92.7485 56.4619 mo
93.2988 56.4619 li
93.2988 46.9893 li
92.7485 46.9893 li
92.7485 56.4619 li
cp
f
93.2988 56.4619 mo
93.8477 56.4619 li
93.8477 46.9893 li
93.2988 46.9893 li
93.2988 56.4619 li
cp
f
93.8477 56.4619 mo
94.3979 56.4619 li
94.3979 53.1191 li
93.8477 53.1191 li
93.8477 56.4619 li
cp
f
94.3979 56.4619 mo
94.9478 56.4619 li
94.9478 54.2339 li
94.3979 54.2339 li
94.3979 56.4619 li
cp
f
94.9478 56.4619 mo
95.4976 56.4619 li
95.4976 54.2339 li
94.9478 54.2339 li
94.9478 56.4619 li
cp
f
96.0469 56.4619 mo
96.5967 56.4619 li
96.5967 54.2339 li
96.0469 54.2339 li
96.0469 56.4619 li
cp
f
96.5967 56.4619 mo
97.1479 56.4619 li
97.1479 53.1191 li
96.5967 53.1191 li
96.5967 56.4619 li
cp
f
97.147 56.4619 mo
97.6958 56.4619 li
97.6958 45.873 li
97.147 45.873 li
97.147 56.4619 li
cp
f
97.6958 56.4619 mo
98.2466 56.4619 li
98.2466 46.9893 li
97.6958 46.9893 li
97.6958 56.4619 li
cp
f
98.2466 56.4619 mo
98.7959 56.4619 li
98.7959 54.2339 li
98.2466 54.2339 li
98.2466 56.4619 li
cp
f
98.7959 56.4619 mo
99.3457 56.4619 li
99.3457 54.79 li
98.7959 54.79 li
98.7959 56.4619 li
cp
f
99.3457 56.4619 mo
99.895 56.4619 li
99.895 54.79 li
99.3457 54.79 li
99.3457 56.4619 li
cp
f
99.895 56.4619 mo
100.446 56.4619 li
100.446 54.79 li
99.895 54.79 li
99.895 56.4619 li
cp
f
100.446 56.4619 mo
100.995 56.4619 li
100.995 54.79 li
100.446 54.79 li
100.446 56.4619 li
cp
f
100.995 56.4619 mo
101.545 56.4619 li
101.545 54.2339 li
100.995 54.2339 li
100.995 56.4619 li
cp
f
101.545 56.4619 mo
102.095 56.4619 li
102.095 54.2339 li
101.545 54.2339 li
101.545 56.4619 li
cp
f
102.095 56.4619 mo
102.644 56.4619 li
102.644 53.6763 li
102.095 53.6763 li
102.095 56.4619 li
cp
f
102.644 56.4619 mo
103.195 56.4619 li
103.195 53.1191 li
102.644 53.1191 li
102.644 56.4619 li
cp
f
103.194 56.4619 mo
103.743 56.4619 li
103.743 49.2173 li
103.194 49.2173 li
103.194 56.4619 li
cp
f
103.744 56.4619 mo
104.294 56.4619 li
104.294 49.2173 li
103.744 49.2173 li
103.744 56.4619 li
cp
f
104.293 56.4619 mo
104.843 56.4619 li
104.843 55.3491 li
104.293 55.3491 li
104.293 56.4619 li
cp
f
104.843 56.4619 mo
105.393 56.4619 li
105.393 33.0571 li
104.843 33.0571 li
104.843 56.4619 li
cp
f
105.393 56.4619 mo
105.942 56.4619 li
105.942 33.0571 li
105.393 33.0571 li
105.393 56.4619 li
cp
f
105.942 56.4619 mo
106.492 56.4619 li
106.492 52.0029 li
105.942 52.0029 li
105.942 56.4619 li
cp
f
106.492 56.4619 mo
107.042 56.4619 li
107.042 55.3491 li
106.492 55.3491 li
106.492 56.4619 li
cp
f
107.592 56.4619 mo
108.142 56.4619 li
108.142 54.2339 li
107.592 54.2339 li
107.592 56.4619 li
cp
f
108.142 56.4619 mo
108.691 56.4619 li
108.691 54.2339 li
108.142 54.2339 li
108.142 56.4619 li
cp
f
108.691 56.4619 mo
109.241 56.4619 li
109.241 55.3491 li
108.691 55.3491 li
108.691 56.4619 li
cp
f
109.241 56.4619 mo
109.791 56.4619 li
109.791 55.3491 li
109.241 55.3491 li
109.241 56.4619 li
cp
f
109.791 56.4619 mo
110.341 56.4619 li
110.341 49.7749 li
109.791 49.7749 li
109.791 56.4619 li
cp
f
110.341 56.4619 mo
110.891 56.4619 li
110.891 48.6611 li
110.341 48.6611 li
110.341 56.4619 li
cp
f
110.89 56.4619 mo
111.44 56.4619 li
111.44 48.6611 li
110.89 48.6611 li
110.89 56.4619 li
cp
f
111.44 56.4619 mo
111.989 56.4619 li
111.989 52.561 li
111.44 52.561 li
111.44 56.4619 li
cp
f
111.989 56.4619 mo
112.539 56.4619 li
112.539 48.1021 li
111.989 48.1021 li
111.989 56.4619 li
cp
f
112.539 56.4619 mo
113.089 56.4619 li
113.089 49.2173 li
112.539 49.2173 li
112.539 56.4619 li
cp
f
113.089 56.4619 mo
113.639 56.4619 li
113.639 42.5293 li
113.089 42.5293 li
113.089 56.4619 li
cp
f
113.639 56.4619 mo
114.189 56.4619 li
114.189 42.5293 li
113.639 42.5293 li
113.639 56.4619 li
cp
f
114.189 56.4619 mo
114.739 56.4619 li
114.739 51.4473 li
114.189 51.4473 li
114.189 56.4619 li
cp
f
114.739 56.4619 mo
115.288 56.4619 li
115.288 51.4473 li
114.739 51.4473 li
114.739 56.4619 li
cp
f
115.288 56.4619 mo
115.838 56.4619 li
115.838 54.2339 li
115.288 54.2339 li
115.288 56.4619 li
cp
f
115.838 56.4619 mo
116.388 56.4619 li
116.388 52.0029 li
115.838 52.0029 li
115.838 56.4619 li
cp
f
116.388 56.4619 mo
116.938 56.4619 li
116.938 54.79 li
116.388 54.79 li
116.388 56.4619 li
cp
f
116.937 56.4619 mo
117.487 56.4619 li
117.487 23.5801 li
116.937 23.5801 li
116.937 56.4619 li
cp
f
117.487 56.4619 mo
118.036 56.4619 li
118.036 24.6963 li
117.487 24.6963 li
117.487 56.4619 li
cp
f
118.036 56.4619 mo
118.586 56.4619 li
118.586 51.4473 li
118.036 51.4473 li
118.036 56.4619 li
cp
f
118.586 56.4619 mo
119.136 56.4619 li
119.136 51.4473 li
118.586 51.4473 li
118.586 56.4619 li
cp
f
119.136 56.4619 mo
119.686 56.4619 li
119.686 55.3491 li
119.136 55.3491 li
119.136 56.4619 li
cp
f
119.686 56.4619 mo
120.236 56.4619 li
120.236 55.3491 li
119.686 55.3491 li
119.686 56.4619 li
cp
f
120.236 56.4619 mo
120.786 56.4619 li
120.786 42.5293 li
120.236 42.5293 li
120.236 56.4619 li
cp
f
120.786 56.4619 mo
121.335 56.4619 li
121.335 43.6431 li
120.786 43.6431 li
120.786 56.4619 li
cp
f
121.335 56.4619 mo
121.885 56.4619 li
121.885 53.1191 li
121.335 53.1191 li
121.335 56.4619 li
cp
f
121.885 56.4619 mo
122.435 56.4619 li
122.435 49.7749 li
121.885 49.7749 li
121.885 56.4619 li
cp
f
122.435 56.4619 mo
122.985 56.4619 li
122.985 49.7749 li
122.435 49.7749 li
122.435 56.4619 li
cp
f
122.985 56.4619 mo
123.535 56.4619 li
123.535 44.2021 li
122.985 44.2021 li
122.985 56.4619 li
cp
f
123.534 56.4619 mo
124.084 56.4619 li
124.084 52.0029 li
123.534 52.0029 li
123.534 56.4619 li
cp
f
124.084 56.4619 mo
124.633 56.4619 li
124.633 50.333 li
124.084 50.333 li
124.084 56.4619 li
cp
f
124.633 56.4619 mo
125.183 56.4619 li
125.183 54.79 li
124.633 54.79 li
124.633 56.4619 li
cp
f
125.183 56.4619 mo
125.733 56.4619 li
125.733 53.1191 li
125.183 53.1191 li
125.183 56.4619 li
cp
f
125.733 56.4619 mo
126.283 56.4619 li
126.283 53.1191 li
125.733 53.1191 li
125.733 56.4619 li
cp
f
126.283 56.4619 mo
126.833 56.4619 li
126.833 54.2339 li
126.283 54.2339 li
126.283 56.4619 li
cp
f
126.833 56.4619 mo
127.383 56.4619 li
127.383 49.7749 li
126.833 49.7749 li
126.833 56.4619 li
cp
f
127.383 56.4619 mo
127.932 56.4619 li
127.932 49.7749 li
127.383 49.7749 li
127.383 56.4619 li
cp
f
127.932 56.4619 mo
128.482 56.4619 li
128.482 54.79 li
127.932 54.79 li
127.932 56.4619 li
cp
f
128.482 56.4619 mo
129.032 56.4619 li
129.032 54.79 li
128.482 54.79 li
128.482 56.4619 li
cp
f
129.032 56.4619 mo
129.582 56.4619 li
129.582 53.1191 li
129.032 53.1191 li
129.032 56.4619 li
cp
f
129.582 56.4619 mo
130.132 56.4619 li
130.132 54.79 li
129.582 54.79 li
129.582 56.4619 li
cp
f
130.131 56.4619 mo
130.68 56.4619 li
130.68 40.8569 li
130.131 40.8569 li
130.131 56.4619 li
cp
f
130.68 56.4619 mo
131.23 56.4619 li
131.23 38.0698 li
130.68 38.0698 li
130.68 56.4619 li
cp
f
131.23 56.4619 mo
131.78 56.4619 li
131.78 53.1191 li
131.23 53.1191 li
131.23 56.4619 li
cp
f
131.78 56.4619 mo
132.33 56.4619 li
132.33 54.2339 li
131.78 54.2339 li
131.78 56.4619 li
cp
f
132.33 56.4619 mo
132.879 56.4619 li
132.879 53.6763 li
132.33 53.6763 li
132.33 56.4619 li
cp
f
132.879 56.4619 mo
133.43 56.4619 li
133.43 53.1191 li
132.879 53.1191 li
132.879 56.4619 li
cp
f
133.43 56.4619 mo
133.979 56.4619 li
133.979 53.1191 li
133.43 53.1191 li
133.43 56.4619 li
cp
f
133.979 56.4619 mo
134.529 56.4619 li
134.529 54.2339 li
133.979 54.2339 li
133.979 56.4619 li
cp
f
134.529 56.4619 mo
135.078 56.4619 li
135.078 45.3159 li
134.529 45.3159 li
134.529 56.4619 li
cp
f
135.078 56.4619 mo
135.628 56.4619 li
135.628 45.3159 li
135.078 45.3159 li
135.078 56.4619 li
cp
f
135.628 56.4619 mo
136.179 56.4619 li
136.179 48.6611 li
135.628 48.6611 li
135.628 56.4619 li
cp
f
136.179 56.4619 mo
136.728 56.4619 li
136.728 54.79 li
136.179 54.79 li
136.179 56.4619 li
cp
f
136.728 56.4619 mo
137.278 56.4619 li
137.278 52.0029 li
136.728 52.0029 li
136.728 56.4619 li
cp
f
137.277 56.4619 mo
137.826 56.4619 li
137.826 6.30518 li
137.277 6.30518 li
137.277 56.4619 li
cp
f
137.827 56.4619 mo
138.378 56.4619 li
138.378 6.30518 li
137.827 6.30518 li
137.827 56.4619 li
cp
f
138.377 56.4619 mo
138.927 56.4619 li
138.927 54.2339 li
138.377 54.2339 li
138.377 56.4619 li
cp
f
138.927 56.4619 mo
139.477 56.4619 li
139.477 54.2339 li
138.927 54.2339 li
138.927 56.4619 li
cp
f
139.477 56.4619 mo
140.026 56.4619 li
140.026 53.6763 li
139.477 53.6763 li
139.477 56.4619 li
cp
f
140.026 56.4619 mo
140.576 56.4619 li
140.576 51.4473 li
140.026 51.4473 li
140.026 56.4619 li
cp
f
141.126 56.4619 mo
141.676 56.4619 li
141.676 51.4473 li
141.126 51.4473 li
141.126 56.4619 li
cp
f
141.676 56.4619 mo
142.226 56.4619 li
142.226 51.4473 li
141.676 51.4473 li
141.676 56.4619 li
cp
f
142.226 56.4619 mo
142.775 56.4619 li
142.775 47.5459 li
142.226 47.5459 li
142.226 56.4619 li
cp
f
142.775 56.4619 mo
143.325 56.4619 li
143.325 47.5459 li
142.775 47.5459 li
142.775 56.4619 li
cp
f
143.325 56.4619 mo
143.875 56.4619 li
143.875 54.2339 li
143.325 54.2339 li
143.325 56.4619 li
cp
f
143.874 56.4619 mo
144.424 56.4619 li
144.424 55.3491 li
143.874 55.3491 li
143.874 56.4619 li
cp
f
144.424 56.4619 mo
144.974 56.4619 li
144.974 54.2339 li
144.424 54.2339 li
144.424 56.4619 li
cp
f
144.974 56.4619 mo
145.523 56.4619 li
145.523 47.5459 li
144.974 47.5459 li
144.974 56.4619 li
cp
f
145.523 56.4619 mo
146.073 56.4619 li
146.073 49.7749 li
145.523 49.7749 li
145.523 56.4619 li
cp
f
146.073 56.4619 mo
146.623 56.4619 li
146.623 54.79 li
146.073 54.79 li
146.073 56.4619 li
cp
f
146.623 56.4619 mo
147.173 56.4619 li
147.173 55.3491 li
146.623 55.3491 li
146.623 56.4619 li
cp
f
147.173 56.4619 mo
147.722 56.4619 li
147.722 54.79 li
147.173 54.79 li
147.173 56.4619 li
cp
f
147.722 56.4619 mo
148.272 56.4619 li
148.272 53.1191 li
147.722 53.1191 li
147.722 56.4619 li
cp
f
148.272 56.4619 mo
148.823 56.4619 li
148.823 54.2339 li
148.272 54.2339 li
148.272 56.4619 li
cp
f
148.823 56.4619 mo
149.372 56.4619 li
149.372 54.2339 li
148.823 54.2339 li
148.823 56.4619 li
cp
f
149.372 56.4619 mo
149.922 56.4619 li
149.922 52.0029 li
149.372 52.0029 li
149.372 56.4619 li
cp
f
149.922 56.4619 mo
150.471 56.4619 li
150.471 52.0029 li
149.922 52.0029 li
149.922 56.4619 li
cp
f
150.471 56.4619 mo
151.022 56.4619 li
151.022 51.4473 li
150.471 51.4473 li
150.471 56.4619 li
cp
f
151.021 56.4619 mo
151.57 56.4619 li
151.57 52.561 li
151.021 52.561 li
151.021 56.4619 li
cp
f
151.57 56.4619 mo
152.12 56.4619 li
152.12 54.79 li
151.57 54.79 li
151.57 56.4619 li
cp
f
152.12 56.4619 mo
152.67 56.4619 li
152.67 50.8892 li
152.12 50.8892 li
152.12 56.4619 li
cp
f
152.67 56.4619 mo
153.219 56.4619 li
153.219 50.8892 li
152.67 50.8892 li
152.67 56.4619 li
cp
f
153.219 56.4619 mo
153.769 56.4619 li
153.769 46.9893 li
153.219 46.9893 li
153.219 56.4619 li
cp
f
153.769 56.4619 mo
154.319 56.4619 li
154.319 46.9893 li
153.769 46.9893 li
153.769 56.4619 li
cp
f
154.319 56.4619 mo
154.87 56.4619 li
154.87 55.3491 li
154.319 55.3491 li
154.319 56.4619 li
cp
f
154.87 56.4619 mo
155.419 56.4619 li
155.419 46.4302 li
154.87 46.4302 li
154.87 56.4619 li
cp
f
155.419 56.4619 mo
155.969 56.4619 li
155.969 33.6133 li
155.419 33.6133 li
155.419 56.4619 li
cp
f
155.969 56.4619 mo
156.519 56.4619 li
156.519 45.3159 li
155.969 45.3159 li
155.969 56.4619 li
cp
f
156.519 56.4619 mo
157.069 56.4619 li
157.069 48.6611 li
156.519 48.6611 li
156.519 56.4619 li
cp
f
157.068 56.4619 mo
157.617 56.4619 li
157.617 1.84619 li
157.068 1.84619 li
157.068 56.4619 li
cp
f
157.618 56.4619 mo
158.168 56.4619 li
158.168 1.84619 li
157.618 1.84619 li
157.618 56.4619 li
cp
f
158.167 56.4619 mo
158.717 56.4619 li
158.717 52.0029 li
158.167 52.0029 li
158.167 56.4619 li
cp
f
158.717 56.4619 mo
159.267 56.4619 li
159.267 52.0029 li
158.717 52.0029 li
158.717 56.4619 li
cp
f
159.267 56.4619 mo
159.817 56.4619 li
159.817 55.3491 li
159.267 55.3491 li
159.267 56.4619 li
cp
f
160.366 56.4619 mo
160.916 56.4619 li
160.916 45.873 li
160.366 45.873 li
160.366 56.4619 li
cp
f
160.916 56.4619 mo
161.466 56.4619 li
161.466 45.873 li
160.916 45.873 li
160.916 56.4619 li
cp
f
161.466 56.4619 mo
162.016 56.4619 li
162.016 52.0029 li
161.466 52.0029 li
161.466 56.4619 li
cp
f
162.016 56.4619 mo
162.565 56.4619 li
162.565 54.2339 li
162.016 54.2339 li
162.016 56.4619 li
cp
f
162.565 56.4619 mo
163.115 56.4619 li
163.115 50.8892 li
162.565 50.8892 li
162.565 56.4619 li
cp
f
163.115 56.4619 mo
163.666 56.4619 li
163.666 45.3159 li
163.115 45.3159 li
163.115 56.4619 li
cp
f
163.665 56.4619 mo
164.215 56.4619 li
164.215 43.0879 li
163.665 43.0879 li
163.665 56.4619 li
cp
f
164.215 56.4619 mo
164.764 56.4619 li
164.764 54.2339 li
164.215 54.2339 li
164.215 56.4619 li
cp
f
164.764 56.4619 mo
165.314 56.4619 li
165.314 53.6763 li
164.764 53.6763 li
164.764 56.4619 li
cp
f
165.314 56.4619 mo
165.863 56.4619 li
165.863 54.2339 li
165.314 54.2339 li
165.314 56.4619 li
cp
f
165.863 56.4619 mo
166.414 56.4619 li
166.414 39.7432 li
165.863 39.7432 li
165.863 56.4619 li
cp
f
166.414 56.4619 mo
166.963 56.4619 li
166.963 53.6763 li
166.414 53.6763 li
166.414 56.4619 li
cp
f
166.963 56.4619 mo
167.513 56.4619 li
167.513 53.6763 li
166.963 53.6763 li
166.963 56.4619 li
cp
f
167.513 56.4619 mo
168.063 56.4619 li
168.063 53.6763 li
167.513 53.6763 li
167.513 56.4619 li
cp
f
168.063 56.4619 mo
168.613 56.4619 li
168.613 55.3491 li
168.063 55.3491 li
168.063 56.4619 li
cp
f
168.613 56.4619 mo
169.162 56.4619 li
169.162 51.4473 li
168.613 51.4473 li
168.613 56.4619 li
cp
f
169.162 56.4619 mo
169.712 56.4619 li
169.712 48.1021 li
169.162 48.1021 li
169.162 56.4619 li
cp
f
169.712 56.4619 mo
170.261 56.4619 li
170.261 47.5459 li
169.712 47.5459 li
169.712 56.4619 li
cp
f
170.262 56.4619 mo
170.812 56.4619 li
170.812 55.3491 li
170.262 55.3491 li
170.262 56.4619 li
cp
f
170.812 56.4619 mo
171.362 56.4619 li
171.362 54.79 li
170.812 54.79 li
170.812 56.4619 li
cp
f
171.361 56.4619 mo
171.911 56.4619 li
171.911 43.0879 li
171.361 43.0879 li
171.361 56.4619 li
cp
f
171.911 56.4619 mo
172.46 56.4619 li
172.46 54.79 li
171.911 54.79 li
171.911 56.4619 li
cp
f
172.46 56.4619 mo
173.01 56.4619 li
173.01 54.79 li
172.46 54.79 li
172.46 56.4619 li
cp
f
173.01 56.4619 mo
173.56 56.4619 li
173.56 55.3491 li
173.01 55.3491 li
173.01 56.4619 li
cp
f
174.11 56.4619 mo
174.66 56.4619 li
174.66 55.3491 li
174.11 55.3491 li
174.11 56.4619 li
cp
f
174.66 56.4619 mo
175.209 56.4619 li
175.209 50.333 li
174.66 50.333 li
174.66 56.4619 li
cp
f
175.759 56.4619 mo
176.309 56.4619 li
176.309 36.9551 li
175.759 36.9551 li
175.759 56.4619 li
cp
f
176.309 56.4619 mo
176.859 56.4619 li
176.859 47.5459 li
176.309 47.5459 li
176.309 56.4619 li
cp
f
176.859 56.4619 mo
177.408 56.4619 li
177.408 54.79 li
176.859 54.79 li
176.859 56.4619 li
cp
f
177.408 56.4619 mo
177.958 56.4619 li
177.958 50.8892 li
177.408 50.8892 li
177.408 56.4619 li
cp
f
177.957 56.4619 mo
178.507 56.4619 li
178.507 50.8892 li
177.957 50.8892 li
177.957 56.4619 li
cp
f
178.507 56.4619 mo
179.058 56.4619 li
179.058 46.9893 li
178.507 46.9893 li
178.507 56.4619 li
cp
f
179.058 56.4619 mo
179.607 56.4619 li
179.607 54.2339 li
179.058 54.2339 li
179.058 56.4619 li
cp
f
179.607 56.4619 mo
180.157 56.4619 li
180.157 50.8892 li
179.607 50.8892 li
179.607 56.4619 li
cp
f
180.157 56.4619 mo
180.707 56.4619 li
180.707 53.1191 li
180.157 53.1191 li
180.157 56.4619 li
cp
f
180.707 56.4619 mo
181.256 56.4619 li
181.256 55.3491 li
180.707 55.3491 li
180.707 56.4619 li
cp
f
181.256 56.4619 mo
181.805 56.4619 li
181.805 30.8262 li
181.256 30.8262 li
181.256 56.4619 li
cp
f
181.805 56.4619 mo
182.356 56.4619 li
182.356 54.79 li
181.805 54.79 li
181.805 56.4619 li
cp
f
182.356 56.4619 mo
182.906 56.4619 li
182.906 52.0029 li
182.356 52.0029 li
182.356 56.4619 li
cp
f
182.906 56.4619 mo
183.456 56.4619 li
183.456 52.0029 li
182.906 52.0029 li
182.906 56.4619 li
cp
f
183.456 56.4619 mo
184.005 56.4619 li
184.005 44.2021 li
183.456 44.2021 li
183.456 56.4619 li
cp
f
184.005 56.4619 mo
184.555 56.4619 li
184.555 44.2021 li
184.005 44.2021 li
184.005 56.4619 li
cp
f
184.554 56.4619 mo
185.104 56.4619 li
185.104 48.6611 li
184.554 48.6611 li
184.554 56.4619 li
cp
f
185.104 56.4619 mo
185.653 56.4619 li
185.653 48.1021 li
185.104 48.1021 li
185.104 56.4619 li
cp
f
185.653 56.4619 mo
186.204 56.4619 li
186.204 48.1021 li
185.653 48.1021 li
185.653 56.4619 li
cp
f
186.204 56.4619 mo
186.752 56.4619 li
186.752 51.4473 li
186.204 51.4473 li
186.204 56.4619 li
cp
f
186.752 56.4619 mo
187.304 56.4619 li
187.304 51.4473 li
186.752 51.4473 li
186.752 56.4619 li
cp
f
187.304 56.4619 mo
187.853 56.4619 li
187.853 53.1191 li
187.304 53.1191 li
187.304 56.4619 li
cp
f
187.853 56.4619 mo
188.403 56.4619 li
188.403 53.6763 li
187.853 53.6763 li
187.853 56.4619 li
cp
f
188.403 56.4619 mo
188.953 56.4619 li
188.953 51.4473 li
188.403 51.4473 li
188.403 56.4619 li
cp
f
188.953 56.4619 mo
189.501 56.4619 li
189.501 53.1191 li
188.953 53.1191 li
188.953 56.4619 li
cp
f
189.501 56.4619 mo
190.053 56.4619 li
190.053 45.3159 li
189.501 45.3159 li
189.501 56.4619 li
cp
f
190.053 56.4619 mo
190.602 56.4619 li
190.602 46.4302 li
190.053 46.4302 li
190.053 56.4619 li
cp
f
190.602 56.4619 mo
191.152 56.4619 li
191.152 54.2339 li
190.602 54.2339 li
190.602 56.4619 li
cp
f
191.151 56.4619 mo
191.701 56.4619 li
191.701 43.6431 li
191.151 43.6431 li
191.151 56.4619 li
cp
f
191.701 56.4619 mo
192.25 56.4619 li
192.25 46.9893 li
191.701 46.9893 li
191.701 56.4619 li
cp
f
192.25 56.4619 mo
192.799 56.4619 li
192.799 54.79 li
192.25 54.79 li
192.25 56.4619 li
cp
f
192.799 56.4619 mo
193.35 56.4619 li
193.35 53.6763 li
192.799 53.6763 li
192.799 56.4619 li
cp
f
193.35 56.4619 mo
193.901 56.4619 li
193.901 55.3491 li
193.35 55.3491 li
193.35 56.4619 li
cp
f
193.901 56.4619 mo
194.45 56.4619 li
194.45 54.2339 li
193.901 54.2339 li
193.901 56.4619 li
cp
f
194.45 56.4619 mo
195 56.4619 li
195 54.2339 li
194.45 54.2339 li
194.45 56.4619 li
cp
f
195 56.4619 mo
195.549 56.4619 li
195.549 53.6763 li
195 53.6763 li
195 56.4619 li
cp
f
195.549 56.4619 mo
196.1 56.4619 li
196.1 53.6763 li
195.549 53.6763 li
195.549 56.4619 li
cp
f
196.1 56.4619 mo
196.649 56.4619 li
196.649 52.0029 li
196.1 52.0029 li
196.1 56.4619 li
cp
f
196.649 56.4619 mo
197.199 56.4619 li
197.199 48.1021 li
196.649 48.1021 li
196.649 56.4619 li
cp
f
197.199 56.4619 mo
197.749 56.4619 li
197.749 45.3159 li
197.199 45.3159 li
197.199 56.4619 li
cp
f
197.748 56.4619 mo
198.297 56.4619 li
198.297 45.3159 li
197.748 45.3159 li
197.748 56.4619 li
cp
f
198.297 56.4619 mo
198.847 56.4619 li
198.847 49.2173 li
198.297 49.2173 li
198.297 56.4619 li
cp
f
198.847 56.4619 mo
199.398 56.4619 li
199.398 49.7749 li
198.847 49.7749 li
198.847 56.4619 li
cp
f
199.398 56.4619 mo
199.947 56.4619 li
199.947 49.2173 li
199.398 49.2173 li
199.398 56.4619 li
cp
f
199.947 56.4619 mo
200.497 56.4619 li
200.497 55.3491 li
199.947 55.3491 li
199.947 56.4619 li
cp
f
200.497 56.4619 mo
201.046 56.4619 li
201.046 54.79 li
200.497 54.79 li
200.497 56.4619 li
cp
f
201.046 56.4619 mo
201.597 56.4619 li
201.597 51.4473 li
201.046 51.4473 li
201.046 56.4619 li
cp
f
202.146 56.4619 mo
202.696 56.4619 li
202.696 52.561 li
202.146 52.561 li
202.146 56.4619 li
cp
f
202.696 56.4619 mo
203.247 56.4619 li
203.247 53.1191 li
202.696 53.1191 li
202.696 56.4619 li
cp
f
203.247 56.4619 mo
203.795 56.4619 li
203.795 55.3491 li
203.247 55.3491 li
203.247 56.4619 li
cp
f
203.795 56.4619 mo
204.346 56.4619 li
204.346 44.7593 li
203.795 44.7593 li
203.795 56.4619 li
cp
f
204.345 56.4619 mo
204.895 56.4619 li
204.895 39.187 li
204.345 39.187 li
204.345 56.4619 li
cp
f
204.895 56.4619 mo
205.445 56.4619 li
205.445 53.1191 li
204.895 53.1191 li
204.895 56.4619 li
cp
f
205.445 56.4619 mo
205.995 56.4619 li
205.995 53.1191 li
205.445 53.1191 li
205.445 56.4619 li
cp
f
205.995 56.4619 mo
206.542 56.4619 li
206.542 51.4473 li
205.995 51.4473 li
205.995 56.4619 li
cp
f
206.542 56.4619 mo
207.094 56.4619 li
207.094 44.7593 li
206.542 44.7593 li
206.542 56.4619 li
cp
f
207.094 56.4619 mo
207.644 56.4619 li
207.644 53.6763 li
207.094 53.6763 li
207.094 56.4619 li
cp
f
207.644 56.4619 mo
208.194 56.4619 li
208.194 48.6611 li
207.644 48.6611 li
207.644 56.4619 li
cp
f
208.194 56.4619 mo
208.742 56.4619 li
208.742 48.6611 li
208.194 48.6611 li
208.194 56.4619 li
cp
f
208.742 56.4619 mo
209.292 56.4619 li
209.292 53.6763 li
208.742 53.6763 li
208.742 56.4619 li
cp
f
209.292 56.4619 mo
209.843 56.4619 li
209.843 55.3491 li
209.292 55.3491 li
209.292 56.4619 li
cp
f
209.843 56.4619 mo
210.393 56.4619 li
210.393 40.8569 li
209.843 40.8569 li
209.843 56.4619 li
cp
f
210.393 56.4619 mo
210.943 56.4619 li
210.943 43.6431 li
210.393 43.6431 li
210.393 56.4619 li
cp
f
210.942 56.4619 mo
211.491 56.4619 li
211.491 53.6763 li
210.942 53.6763 li
210.942 56.4619 li
cp
f
211.491 56.4619 mo
212.041 56.4619 li
212.041 44.7593 li
211.491 44.7593 li
211.491 56.4619 li
cp
f
212.041 56.4619 mo
212.59 56.4619 li
212.59 53.1191 li
212.041 53.1191 li
212.041 56.4619 li
cp
f
212.59 56.4619 mo
213.141 56.4619 li
213.141 55.3491 li
212.59 55.3491 li
212.59 56.4619 li
cp
f
213.141 56.4619 mo
213.69 56.4619 li
213.69 55.3491 li
213.141 55.3491 li
213.141 56.4619 li
cp
f
213.69 56.4619 mo
214.24 56.4619 li
214.24 55.3491 li
213.69 55.3491 li
213.69 56.4619 li
cp
f
214.24 56.4619 mo
214.789 56.4619 li
214.789 55.3491 li
214.24 55.3491 li
214.24 56.4619 li
cp
f
215.339 56.4619 mo
215.888 56.4619 li
215.888 48.1021 li
215.339 48.1021 li
215.339 56.4619 li
cp
f
215.888 56.4619 mo
216.441 56.4619 li
216.441 36.3999 li
215.888 36.3999 li
215.888 56.4619 li
cp
f
216.441 56.4619 mo
216.989 56.4619 li
216.989 51.4473 li
216.441 51.4473 li
216.441 56.4619 li
cp
f
216.989 56.4619 mo
217.538 56.4619 li
217.538 41.9731 li
216.989 41.9731 li
216.989 56.4619 li
cp
f
217.538 56.4619 mo
218.088 56.4619 li
218.088 43.6431 li
217.538 43.6431 li
217.538 56.4619 li
cp
f
218.087 56.4619 mo
218.637 56.4619 li
218.637 52.561 li
218.087 52.561 li
218.087 56.4619 li
cp
f
218.637 56.4619 mo
219.19 56.4619 li
219.19 52.561 li
218.637 52.561 li
218.637 56.4619 li
cp
f
219.19 56.4619 mo
219.737 56.4619 li
219.737 41.416 li
219.19 41.416 li
219.19 56.4619 li
cp
f
219.737 56.4619 mo
220.286 56.4619 li
220.286 41.416 li
219.737 41.416 li
219.737 56.4619 li
cp
f
220.286 56.4619 mo
220.836 56.4619 li
220.836 54.2339 li
220.286 54.2339 li
220.286 56.4619 li
cp
f
220.836 56.4619 mo
221.386 56.4619 li
221.386 51.4473 li
220.836 51.4473 li
220.836 56.4619 li
cp
f
221.386 56.4619 mo
221.938 56.4619 li
221.938 49.2173 li
221.386 49.2173 li
221.386 56.4619 li
cp
f
221.938 56.4619 mo
222.487 56.4619 li
222.487 35.8423 li
221.938 35.8423 li
221.938 56.4619 li
cp
f
222.487 56.4619 mo
223.036 56.4619 li
223.036 35.8423 li
222.487 35.8423 li
222.487 56.4619 li
cp
f
223.036 56.4619 mo
223.585 56.4619 li
223.585 54.79 li
223.036 54.79 li
223.036 56.4619 li
cp
f
223.585 56.4619 mo
224.135 56.4619 li
224.135 54.79 li
223.585 54.79 li
223.585 56.4619 li
cp
f
224.135 56.4619 mo
224.687 56.4619 li
224.687 54.79 li
224.135 54.79 li
224.135 56.4619 li
cp
f
225.235 56.4619 mo
225.783 56.4619 li
225.783 52.561 li
225.235 52.561 li
225.235 56.4619 li
cp
f
225.784 56.4619 mo
226.335 56.4619 li
226.335 52.561 li
225.784 52.561 li
225.784 56.4619 li
cp
f
226.334 56.4619 mo
226.882 56.4619 li
226.882 48.1021 li
226.334 48.1021 li
226.334 56.4619 li
cp
f
226.882 56.4619 mo
227.436 56.4619 li
227.436 48.1021 li
226.882 48.1021 li
226.882 56.4619 li
cp
f
227.436 56.4619 mo
227.984 56.4619 li
227.984 52.0029 li
227.436 52.0029 li
227.436 56.4619 li
cp
f
227.984 56.4619 mo
228.532 56.4619 li
228.532 53.6763 li
227.984 53.6763 li
227.984 56.4619 li
cp
f
228.532 56.4619 mo
229.083 56.4619 li
229.083 9.64893 li
228.532 9.64893 li
228.532 56.4619 li
cp
f
229.083 56.4619 mo
229.631 56.4619 li
229.631 54.2339 li
229.083 54.2339 li
229.083 56.4619 li
cp
f
229.631 56.4619 mo
230.185 56.4619 li
230.185 41.416 li
229.631 41.416 li
229.631 56.4619 li
cp
f
230.185 56.4619 mo
230.734 56.4619 li
230.734 40.8569 li
230.185 40.8569 li
230.185 56.4619 li
cp
f
230.733 56.4619 mo
231.28 56.4619 li
231.28 48.6611 li
230.733 48.6611 li
230.733 56.4619 li
cp
f
231.281 56.4619 mo
231.832 56.4619 li
231.832 53.6763 li
231.281 53.6763 li
231.281 56.4619 li
cp
f
231.831 56.4619 mo
232.379 56.4619 li
232.379 46.9893 li
231.831 46.9893 li
231.831 56.4619 li
cp
f
232.38 56.4619 mo
232.934 56.4619 li
232.934 48.1021 li
232.38 48.1021 li
232.38 56.4619 li
cp
f
232.933 56.4619 mo
233.48 56.4619 li
233.48 52.561 li
232.933 52.561 li
232.933 56.4619 li
cp
f
233.48 56.4619 mo
234.029 56.4619 li
234.029 52.561 li
233.48 52.561 li
233.48 56.4619 li
cp
f
234.029 56.4619 mo
234.581 56.4619 li
234.581 54.79 li
234.029 54.79 li
234.029 56.4619 li
cp
f
234.581 56.4619 mo
235.128 56.4619 li
235.128 53.6763 li
234.581 53.6763 li
234.581 56.4619 li
cp
f
235.128 56.4619 mo
235.682 56.4619 li
235.682 54.2339 li
235.128 54.2339 li
235.128 56.4619 li
cp
f
235.682 56.4619 mo
236.23 56.4619 li
236.23 48.1021 li
235.682 48.1021 li
235.682 56.4619 li
cp
f
236.23 56.4619 mo
236.778 56.4619 li
236.778 52.0029 li
236.23 52.0029 li
236.23 56.4619 li
cp
f
236.778 56.4619 mo
237.33 56.4619 li
237.33 54.2339 li
236.778 54.2339 li
236.778 56.4619 li
cp
f
237.33 56.4619 mo
237.878 56.4619 li
237.878 54.2339 li
237.33 54.2339 li
237.33 56.4619 li
cp
f
238.978 56.4619 mo
239.526 56.4619 li
239.526 54.79 li
238.978 54.79 li
238.978 56.4619 li
cp
f
240.078 56.4619 mo
240.625 56.4619 li
240.625 54.2339 li
240.078 54.2339 li
240.078 56.4619 li
cp
f
240.625 56.4619 mo
241.178 56.4619 li
241.178 34.1689 li
240.625 34.1689 li
240.625 56.4619 li
cp
f
241.727 56.4619 mo
242.276 56.4619 li
242.276 54.79 li
241.727 54.79 li
241.727 56.4619 li
cp
f
242.276 56.4619 mo
242.827 56.4619 li
242.827 53.6763 li
242.276 53.6763 li
242.276 56.4619 li
cp
f
242.827 56.4619 mo
243.375 56.4619 li
243.375 53.1191 li
242.827 53.1191 li
242.827 56.4619 li
cp
f
243.375 56.4619 mo
243.928 56.4619 li
243.928 51.4473 li
243.375 51.4473 li
243.375 56.4619 li
cp
f
243.927 56.4619 mo
244.475 56.4619 li
244.475 54.2339 li
243.927 54.2339 li
243.927 56.4619 li
cp
f
244.476 56.4619 mo
245.024 56.4619 li
245.024 53.1191 li
244.476 53.1191 li
244.476 56.4619 li
cp
f
245.024 56.4619 mo
245.576 56.4619 li
245.576 55.3491 li
245.024 55.3491 li
245.024 56.4619 li
cp
f
245.575 56.4619 mo
246.124 56.4619 li
246.124 55.3491 li
245.575 55.3491 li
245.575 56.4619 li
cp
f
246.124 56.4619 mo
246.675 56.4619 li
246.675 54.2339 li
246.124 54.2339 li
246.124 56.4619 li
cp
f
257.119 56.4619 mo
257.67 56.4619 li
257.67 55.3491 li
257.119 55.3491 li
257.119 56.4619 li
cp
f
257.669 56.4619 mo
258.218 56.4619 li
258.218 55.3491 li
257.669 55.3491 li
257.669 56.4619 li
cp
f
262.616 56.4619 mo
263.168 56.4619 li
263.168 54.79 li
262.616 54.79 li
262.616 56.4619 li
cp
f
263.168 56.4619 mo
263.716 56.4619 li
263.716 54.79 li
263.168 54.79 li
263.168 56.4619 li
cp
f
263.716 56.4619 mo
264.265 56.4619 li
264.265 54.79 li
263.716 54.79 li
263.716 56.4619 li
cp
f
264.265 56.4619 mo
264.816 56.4619 li
264.816 54.79 li
264.265 54.79 li
264.265 56.4619 li
cp
f
272.511 56.4619 mo
273.063 56.4619 li
273.063 55.3491 li
272.511 55.3491 li
272.511 56.4619 li
cp
f
274.71 56.4619 mo
275.259 56.4619 li
275.259 53.6763 li
274.71 53.6763 li
274.71 56.4619 li
cp
f
275.259 56.4619 mo
275.811 56.4619 li
275.811 53.6763 li
275.259 53.6763 li
275.259 56.4619 li
cp
f
276.359 56.4619 mo
276.912 56.4619 li
276.912 46.9893 li
276.359 46.9893 li
276.359 56.4619 li
cp
f
276.912 56.4619 mo
277.46 56.4619 li
277.46 46.9893 li
276.912 46.9893 li
276.912 56.4619 li
cp
f
277.46 56.4619 mo
278.007 56.4619 li
278.007 39.187 li
277.46 39.187 li
277.46 56.4619 li
cp
f
278.007 56.4619 mo
278.56 56.4619 li
278.56 49.2173 li
278.007 49.2173 li
278.007 56.4619 li
cp
f
278.559 56.4619 mo
279.108 56.4619 li
279.108 53.6763 li
278.559 53.6763 li
278.559 56.4619 li
cp
f
279.108 56.4619 mo
279.66 56.4619 li
279.66 50.333 li
279.108 50.333 li
279.108 56.4619 li
cp
f
279.66 56.4619 mo
280.208 56.4619 li
280.208 50.333 li
279.66 50.333 li
279.66 56.4619 li
cp
f
280.208 56.4619 mo
280.756 56.4619 li
280.756 54.2339 li
280.208 54.2339 li
280.208 56.4619 li
cp
f
280.756 56.4619 mo
281.308 56.4619 li
281.308 49.7749 li
280.756 49.7749 li
280.756 56.4619 li
cp
f
281.308 56.4619 mo
281.856 56.4619 li
281.856 24.6963 li
281.308 24.6963 li
281.308 56.4619 li
cp
f
281.856 56.4619 mo
282.409 56.4619 li
282.409 24.1382 li
281.856 24.1382 li
281.856 56.4619 li
cp
f
282.409 56.4619 mo
282.957 56.4619 li
282.957 52.0029 li
282.409 52.0029 li
282.409 56.4619 li
cp
f
282.957 56.4619 mo
283.505 56.4619 li
283.505 52.0029 li
282.957 52.0029 li
282.957 56.4619 li
cp
f
283.505 56.4619 mo
284.057 56.4619 li
284.057 53.6763 li
283.505 53.6763 li
283.505 56.4619 li
cp
f
284.057 56.4619 mo
284.606 56.4619 li
284.606 53.6763 li
284.057 53.6763 li
284.057 56.4619 li
cp
f
284.606 56.4619 mo
285.159 56.4619 li
285.159 53.6763 li
284.606 53.6763 li
284.606 56.4619 li
cp
f
285.158 56.4619 mo
285.706 56.4619 li
285.706 55.3491 li
285.158 55.3491 li
285.158 56.4619 li
cp
f
285.706 56.4619 mo
286.253 56.4619 li
286.253 52.0029 li
285.706 52.0029 li
285.706 56.4619 li
cp
f
286.254 56.4619 mo
286.806 56.4619 li
286.806 50.333 li
286.254 50.333 li
286.254 56.4619 li
cp
f
286.806 56.4619 mo
287.354 56.4619 li
287.354 34.728 li
286.806 34.728 li
286.806 56.4619 li
cp
f
287.354 56.4619 mo
287.905 56.4619 li
287.905 34.728 li
287.354 34.728 li
287.354 56.4619 li
cp
f
287.905 56.4619 mo
288.454 56.4619 li
288.454 45.873 li
287.905 45.873 li
287.905 56.4619 li
cp
f
288.454 56.4619 mo
289.002 56.4619 li
289.002 53.1191 li
288.454 53.1191 li
288.454 56.4619 li
cp
f
289.002 56.4619 mo
289.554 56.4619 li
289.554 54.2339 li
289.002 54.2339 li
289.002 56.4619 li
cp
f
289.554 56.4619 mo
290.101 56.4619 li
290.101 45.873 li
289.554 45.873 li
289.554 56.4619 li
cp
f
290.101 56.4619 mo
290.654 56.4619 li
290.654 52.561 li
290.101 52.561 li
290.101 56.4619 li
cp
f
290.654 56.4619 mo
291.203 56.4619 li
291.203 50.333 li
290.654 50.333 li
290.654 56.4619 li
cp
f
291.203 56.4619 mo
291.751 56.4619 li
291.751 45.3159 li
291.203 45.3159 li
291.203 56.4619 li
cp
f
291.751 56.4619 mo
292.303 56.4619 li
292.303 45.3159 li
291.751 45.3159 li
291.751 56.4619 li
cp
f
292.302 56.4619 mo
292.851 56.4619 li
292.851 47.5459 li
292.302 47.5459 li
292.302 56.4619 li
cp
f
292.851 56.4619 mo
293.404 56.4619 li
293.404 47.5459 li
292.851 47.5459 li
292.851 56.4619 li
cp
f
293.404 56.4619 mo
293.953 56.4619 li
293.953 47.5459 li
293.404 47.5459 li
293.404 56.4619 li
cp
f
293.953 56.4619 mo
294.501 56.4619 li
294.501 48.6611 li
293.953 48.6611 li
293.953 56.4619 li
cp
f
294.501 56.4619 mo
295.053 56.4619 li
295.053 49.7749 li
294.501 49.7749 li
294.501 56.4619 li
cp
f
295.053 56.4619 mo
295.599 56.4619 li
295.599 49.7749 li
295.053 49.7749 li
295.053 56.4619 li
cp
f
295.599 56.4619 mo
296.152 56.4619 li
296.152 34.1689 li
295.599 34.1689 li
295.599 56.4619 li
cp
f
296.152 56.4619 mo
296.701 56.4619 li
296.701 54.2339 li
296.152 54.2339 li
296.152 56.4619 li
cp
f
297.25 56.4619 mo
297.8 56.4619 li
297.8 51.4473 li
297.25 51.4473 li
297.25 56.4619 li
cp
f
297.8 56.4619 mo
298.35 56.4619 li
298.35 51.4473 li
297.8 51.4473 li
297.8 56.4619 li
cp
f
298.35 56.4619 mo
298.903 56.4619 li
298.903 54.2339 li
298.35 54.2339 li
298.35 56.4619 li
cp
f
298.9 56.4619 mo
299.448 56.4619 li
299.448 54.79 li
298.9 54.79 li
298.9 56.4619 li
cp
f
299.448 56.4619 mo
299.997 56.4619 li
299.997 .731934 li
299.448 .731934 li
299.448 56.4619 li
cp
f
299.998 56.4619 mo
300.548 56.4619 li
300.548 .731934 li
299.998 .731934 li
299.998 56.4619 li
cp
f
300.547 56.4619 mo
301.097 56.4619 li
301.097 54.79 li
300.547 54.79 li
300.547 56.4619 li
cp
f
301.097 56.4619 mo
301.65 56.4619 li
301.65 51.4473 li
301.097 51.4473 li
301.097 56.4619 li
cp
f
301.65 56.4619 mo
302.197 56.4619 li
302.197 38.6289 li
301.65 38.6289 li
301.65 56.4619 li
cp
f
302.197 56.4619 mo
302.746 56.4619 li
302.746 45.873 li
302.197 45.873 li
302.197 56.4619 li
cp
f
302.746 56.4619 mo
303.298 56.4619 li
303.298 45.873 li
302.746 45.873 li
302.746 56.4619 li
cp
f
303.298 56.4619 mo
303.848 56.4619 li
303.848 31.3828 li
303.298 31.3828 li
303.298 56.4619 li
cp
f
303.845 56.4619 mo
304.399 56.4619 li
304.399 52.561 li
303.845 52.561 li
303.845 56.4619 li
cp
f
304.399 56.4619 mo
304.947 56.4619 li
304.947 46.9893 li
304.399 46.9893 li
304.399 56.4619 li
cp
f
304.947 56.4619 mo
305.496 56.4619 li
305.496 46.9893 li
304.947 46.9893 li
304.947 56.4619 li
cp
f
305.496 56.4619 mo
306.046 56.4619 li
306.046 55.3491 li
305.496 55.3491 li
305.496 56.4619 li
cp
f
306.045 56.4619 mo
306.595 56.4619 li
306.595 50.8892 li
306.045 50.8892 li
306.045 56.4619 li
cp
f
306.595 56.4619 mo
307.146 56.4619 li
307.146 48.1021 li
306.595 48.1021 li
306.595 56.4619 li
cp
f
307.146 56.4619 mo
307.695 56.4619 li
307.695 49.2173 li
307.146 49.2173 li
307.146 56.4619 li
cp
f
307.695 56.4619 mo
308.244 56.4619 li
308.244 49.2173 li
307.695 49.2173 li
307.695 56.4619 li
cp
f
308.244 56.4619 mo
308.794 56.4619 li
308.794 52.561 li
308.244 52.561 li
308.244 56.4619 li
cp
f
309.343 56.4619 mo
309.896 56.4619 li
309.896 53.6763 li
309.343 53.6763 li
309.343 56.4619 li
cp
f
309.897 56.4619 mo
310.445 56.4619 li
310.445 50.333 li
309.897 50.333 li
309.897 56.4619 li
cp
f
310.445 56.4619 mo
310.992 56.4619 li
310.992 50.333 li
310.445 50.333 li
310.445 56.4619 li
cp
f
310.992 56.4619 mo
311.544 56.4619 li
311.544 52.0029 li
310.992 52.0029 li
310.992 56.4619 li
cp
f
311.544 56.4619 mo
312.094 56.4619 li
312.094 51.4473 li
311.544 51.4473 li
311.544 56.4619 li
cp
f
312.093 56.4619 mo
312.644 56.4619 li
312.644 50.8892 li
312.093 50.8892 li
312.093 56.4619 li
cp
f
312.644 56.4619 mo
313.193 56.4619 li
313.193 50.8892 li
312.644 50.8892 li
312.644 56.4619 li
cp
f
313.193 56.4619 mo
313.742 56.4619 li
313.742 54.79 li
313.193 54.79 li
313.193 56.4619 li
cp
f
313.74 56.4619 mo
314.292 56.4619 li
314.292 39.187 li
313.74 39.187 li
313.74 56.4619 li
cp
f
314.838 56.4619 mo
315.392 56.4619 li
315.392 5.74805 li
314.838 5.74805 li
314.838 56.4619 li
cp
f
315.392 56.4619 mo
315.941 56.4619 li
315.941 5.74805 li
315.392 5.74805 li
315.392 56.4619 li
cp
f
315.941 56.4619 mo
316.49 56.4619 li
316.49 53.1191 li
315.941 53.1191 li
315.941 56.4619 li
cp
f
316.49 56.4619 mo
317.041 56.4619 li
317.041 54.2339 li
316.49 54.2339 li
316.49 56.4619 li
cp
f
317.041 56.4619 mo
317.589 56.4619 li
317.589 55.3491 li
317.041 55.3491 li
317.041 56.4619 li
cp
f
317.589 56.4619 mo
318.143 56.4619 li
318.143 55.3491 li
317.589 55.3491 li
317.589 56.4619 li
cp
f
318.142 56.4619 mo
318.691 56.4619 li
318.691 55.3491 li
318.142 55.3491 li
318.142 56.4619 li
cp
f
319.238 56.4619 mo
319.789 56.4619 li
319.789 54.79 li
319.238 54.79 li
319.238 56.4619 li
cp
f
321.439 56.4619 mo
321.988 56.4619 li
321.988 54.2339 li
321.439 54.2339 li
321.439 56.4619 li
cp
f
321.988 56.4619 mo
322.539 56.4619 li
322.539 54.2339 li
321.988 54.2339 li
321.988 56.4619 li
cp
f
322.539 56.4619 mo
323.085 56.4619 li
323.085 55.3491 li
322.539 55.3491 li
322.539 56.4619 li
cp
f
323.085 56.4619 mo
323.639 56.4619 li
323.639 53.1191 li
323.085 53.1191 li
323.085 56.4619 li
cp
f
323.639 56.4619 mo
324.187 56.4619 li
324.187 55.3491 li
323.639 55.3491 li
323.639 56.4619 li
cp
f
324.187 56.4619 mo
324.736 56.4619 li
324.736 55.3491 li
324.187 55.3491 li
324.187 56.4619 li
cp
f
324.736 56.4619 mo
325.287 56.4619 li
325.287 53.6763 li
324.736 53.6763 li
324.736 56.4619 li
cp
f
325.287 56.4619 mo
325.835 56.4619 li
325.835 53.6763 li
325.287 53.6763 li
325.287 56.4619 li
cp
f
325.835 56.4619 mo
326.389 56.4619 li
326.389 54.79 li
325.835 54.79 li
325.835 56.4619 li
cp
f
326.388 56.4619 mo
326.935 56.4619 li
326.935 55.3491 li
326.388 55.3491 li
326.388 56.4619 li
cp
f
328.583 56.4619 mo
329.136 56.4619 li
329.136 55.3491 li
328.583 55.3491 li
328.583 56.4619 li
cp
f
329.137 56.4619 mo
329.685 56.4619 li
329.685 55.3491 li
329.137 55.3491 li
329.137 56.4619 li
cp
f
329.685 56.4619 mo
330.234 56.4619 li
330.234 55.3491 li
329.685 55.3491 li
329.685 56.4619 li
cp
f
330.234 56.4619 mo
330.785 56.4619 li
330.785 52.561 li
330.234 52.561 li
330.234 56.4619 li
cp
f
330.785 56.4619 mo
331.333 56.4619 li
331.333 52.561 li
330.785 52.561 li
330.785 56.4619 li
cp
f
331.333 56.4619 mo
331.884 56.4619 li
331.884 53.6763 li
331.333 53.6763 li
331.333 56.4619 li
cp
f
331.884 56.4619 mo
332.434 56.4619 li
332.434 52.561 li
331.884 52.561 li
331.884 56.4619 li
cp
f
332.433 56.4619 mo
332.982 56.4619 li
332.982 44.2021 li
332.433 44.2021 li
332.433 56.4619 li
cp
f
332.982 56.4619 mo
333.533 56.4619 li
333.533 54.2339 li
332.982 54.2339 li
332.982 56.4619 li
cp
f
333.533 56.4619 mo
334.081 56.4619 li
334.081 54.2339 li
333.533 54.2339 li
333.533 56.4619 li
cp
f
334.081 56.4619 mo
334.634 56.4619 li
334.634 54.79 li
334.081 54.79 li
334.081 56.4619 li
cp
f
334.634 56.4619 mo
335.181 56.4619 li
335.181 54.79 li
334.634 54.79 li
334.634 56.4619 li
cp
f
335.181 56.4619 mo
335.73 56.4619 li
335.73 54.79 li
335.181 54.79 li
335.181 56.4619 li
cp
f
335.73 56.4619 mo
336.283 56.4619 li
336.283 55.3491 li
335.73 55.3491 li
335.73 56.4619 li
cp
f
336.283 56.4619 mo
336.83 56.4619 li
336.83 55.3491 li
336.283 55.3491 li
336.283 56.4619 li
cp
f
336.83 56.4619 mo
337.382 56.4619 li
337.382 54.79 li
336.83 54.79 li
336.83 56.4619 li
cp
f
337.382 56.4619 mo
337.932 56.4619 li
337.932 54.79 li
337.382 54.79 li
337.382 56.4619 li
cp
f
337.932 56.4619 mo
338.481 56.4619 li
338.481 55.3491 li
337.932 55.3491 li
337.932 56.4619 li
cp
f
338.481 56.4619 mo
339.029 56.4619 li
339.029 54.79 li
338.481 54.79 li
338.481 56.4619 li
cp
f
339.029 56.4619 mo
339.578 56.4619 li
339.578 51.4473 li
339.029 51.4473 li
339.029 56.4619 li
cp
f
339.578 56.4619 mo
340.13 56.4619 li
340.13 51.4473 li
339.578 51.4473 li
339.578 56.4619 li
cp
f
340.129 56.4619 mo
340.679 56.4619 li
340.679 54.79 li
340.129 54.79 li
340.129 56.4619 li
cp
f
341.228 56.4619 mo
341.779 56.4619 li
341.779 54.2339 li
341.228 54.2339 li
341.228 56.4619 li
cp
f
341.779 56.4619 mo
342.328 56.4619 li
342.328 53.6763 li
341.779 53.6763 li
341.779 56.4619 li
cp
f
342.328 56.4619 mo
342.88 56.4619 li
342.88 54.79 li
342.328 54.79 li
342.328 56.4619 li
cp
f
342.88 56.4619 mo
343.43 56.4619 li
343.43 53.6763 li
342.88 53.6763 li
342.88 56.4619 li
cp
f
343.43 56.4619 mo
343.976 56.4619 li
343.976 49.7749 li
343.43 49.7749 li
343.43 56.4619 li
cp
f
343.976 56.4619 mo
344.527 56.4619 li
344.527 52.0029 li
343.976 52.0029 li
343.976 56.4619 li
cp
f
344.527 56.4619 mo
345.076 56.4619 li
345.076 49.2173 li
344.527 49.2173 li
344.527 56.4619 li
cp
f
345.076 56.4619 mo
345.628 56.4619 li
345.628 49.2173 li
345.076 49.2173 li
345.076 56.4619 li
cp
f
345.627 56.4619 mo
346.177 56.4619 li
346.177 54.2339 li
345.627 54.2339 li
345.627 56.4619 li
cp
f
346.177 56.4619 mo
346.726 56.4619 li
346.726 54.2339 li
346.177 54.2339 li
346.177 56.4619 li
cp
f
348.924 56.4619 mo
349.474 56.4619 li
349.474 54.79 li
348.924 54.79 li
348.924 56.4619 li
cp
f
350.025 56.4619 mo
350.574 56.4619 li
350.574 54.2339 li
350.025 54.2339 li
350.025 56.4619 li
cp
f
350.574 56.4619 mo
351.125 56.4619 li
351.125 54.2339 li
350.574 54.2339 li
350.574 56.4619 li
cp
f
351.125 56.4619 mo
351.673 56.4619 li
351.673 53.1191 li
351.125 53.1191 li
351.125 56.4619 li
cp
f
351.673 56.4619 mo
352.223 56.4619 li
352.223 53.1191 li
351.673 53.1191 li
351.673 56.4619 li
cp
f
352.223 56.4619 mo
352.774 56.4619 li
352.774 54.79 li
352.223 54.79 li
352.223 56.4619 li
cp
f
352.774 56.4619 mo
353.322 56.4619 li
353.322 54.79 li
352.774 54.79 li
352.774 56.4619 li
cp
f
353.322 56.4619 mo
353.875 56.4619 li
353.875 54.79 li
353.322 54.79 li
353.322 56.4619 li
cp
f
353.875 56.4619 mo
354.422 56.4619 li
354.422 54.2339 li
353.875 54.2339 li
353.875 56.4619 li
cp
f
354.422 56.4619 mo
354.972 56.4619 li
354.972 55.3491 li
354.422 55.3491 li
354.422 56.4619 li
cp
f
354.972 56.4619 mo
355.523 56.4619 li
355.523 55.3491 li
354.972 55.3491 li
354.972 56.4619 li
cp
f
358.82 56.4619 mo
359.374 56.4619 li
359.374 55.3491 li
358.82 55.3491 li
358.82 56.4619 li
cp
f
359.373 56.4619 mo
359.918 56.4619 li
359.918 55.3491 li
359.373 55.3491 li
359.373 56.4619 li
cp
f
1.753 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
.857422 78.8789 mo
364.878 78.8789 li
0 0 0 1 cmyk
@
20.4033 78.8789 mo
20.4033 65.875 li
34.7573 65.875 li
@
39.0703 65.875 mo
32.9922 68.3921 li
34.4351 65.875 li
32.9922 63.3579 li
39.0703 65.875 li
cp
f
205.169 72.3765 mo
205.169 65.8745 li
205.169 72.3765 li
cp
f
205.169 61.5029 mo
207.653 67.665 li
205.169 66.2021 li
202.687 67.665 li
205.169 61.5029 li
cp
f
205.169 72.377 mo
205.169 65.875 li
@
205.169 61.5029 mo
207.653 67.665 li
205.169 66.2021 li
202.687 67.665 li
205.169 61.5029 li
cp
f
.75 .68 .67 .902 cmyk
%ADOBeginSubsetFont: HelveticaNeue Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /HelveticaNeue def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 48 /zero putdup 50 /two putdup 97 /a putdup 98 /b putdup 99 /c putdup 101 /e putdup 107 /k putdup 109 /m putdup 110 /n putdup 111 /o putdup 208 /endash putdup 223 /fl putdef/FontBBox {-951 -481 1446 1077} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings14 dict dup begin/.notdef <1C60D8A8C9B7A73DB69766C728F992B45CDEFDE836A03F03808DEA1F562730C87541D1DACD> |-/space <1C60D8A8C9B854D00D> |-/zero <1C60D8A8C9B7EF322B0E5901EEB0EA28BD555C60936A04127263F1750F0342C89C46CD5E95FCF34E210D83CD2843C289BBBCB8DBAAE0585054C9541C04A7DBCEC696C49AA818D4B0648B21890E7967B89327EFBDBEC66901C212603BFAE01539FBC5C456E26D40A4605FE9C51C704ACA3176789BA3047E2DE5C9CC6BEA046B24259340C3DE5B272743499F76B16BCE97A132C3B6E9A4910AA84C8B270CE0340CA6CDE306B8C4E12293A3F40E888B4C51E856250312CBC2E060D107A18E56F9A874E6016190D30F933CB511A6E8B91D5CDE33D0294A9704CA8985783B35F758412CFED2029DE10F6D00FAE7EC4277B371E9E023B10B3A28559F21905A272D85F7F7A9FA431345B06B0F54FAECC8343DBA1B9379D960DB2A715A2708A56B23B45FCDC31B60C05324B72C98E953C0D6A0070AFDD8D2BD988A7073D64A308DE515A1DE6E537C2D2FD0EA> |-/two <1C60D8A8C9B7EF321E6251AE8BC8F7521161180477CC360C8E2EEA5C91504927A00A732F0EAC953FEA3EA3ED3BDF832B6391F3C2E72548CA0724DBEA19136A3F5D0BA9E85F5F112DAB079BD5092308627D6D4B500D272219F0E3621F05D7B20124AEFCDA1B09CD7D62AD86ACBFE8F8838343C0645C758B18091692DC002AD9765C014AFD92799E6E21D8FB2DA52549F1697098FBC1E76E7DAD0D79A3583106777139B9EE66B022F481FD5064A8FB00410F5D68E0EB8BCE6D5520753E4944DD1ED883FFE7ABDEC41248AF050234DB34390650F601B95A82BA802A57DE42B569F0F2BCE107CDCC82AF1B9F0925B8BF21063EACB2CCA37F1990> |-/a <1C60D8A8C9B78256DD1AA79B6E96B03E77EADE6FF0A6D5505B6476A0AEF13AFACC9B9C8107B755C96D4F2B6E7E4B814B70964F745A892BC2F7DBFD243A80BF261760C9115B3944A3DA63A020A1AC36E19994149E7CE1B81ADBD95B3735B8B753C51EA80398564C8D7E879660069158F6495BCE5C1CC6F9940CB3DD2B8B23F910189F52BDAE4D25F8EB2F4BA6F1E6AD2095AB8B6D03B0775D8BC8855AA1504E5A7E5B439B95621696C1C488B653996DDD18B169E460146B238E345F90A764D9FE3365CCE5645836155E954C349F53190EFFDB827467125C7F5A3C5C60D1FBE8F22BBB8C97BE208DFD9DC4E5F6D263D8673965AF624CC2B44D231FB29D854E8BA6BDF51C75F50BD9580344B6256F49927DBEC126269CA38BF3AEA7EAFC1130171EAB68FAF23EC73F45ED90287F5F700E3446D017248495E4F4341F88DDC2D8678D90B36E81C0D293EF71C1EB3B674292620537318BBB1B0E97C39B96F9AC815A7DF2153FC96D5B493F9A7D151B6F> |-/b <1C60D8A8C9B7CA642A857FF686DAD32159D2062D315BAE64CA93EF1212355EFAB4F941555B5DFAB7E0DB0EBF46BE5BF626774D21301A61767603A7E3329B266AFD95FB042C48D7AE0B1A71A7EED73B6176B23BA998C159682DFBC00411691AA93E78AB65E3372C26F4D7044205C631873E483D3E3BA629E30A9A3C20C4809EFACF36AF57B98376D998D6ABB8B51847B3330B970A6221D0809489D7BECE0F0DB6ACFB1C3A488D53353A8ED082E46638E7D240A3DFDAF00CC8B0547D72F3135993BEB0D010B2D0EC536A2AB8507EC8943842ED13D1AB4B8CD501693498E78B9888FFCBD2267148C5E484C853F2C630DDA6E7C737AC97> |-/c <1C60D8A8C9B78256DD72E59F8D9EE3DA4C3A3D2C848028DFC44C2D7B28374D45276541C9B192FADB296DC40B35992C7F5DCFFD2AD8C20286A661A838F0FF848A5B590ED3544893F482AA00380CFEBB3F71CA4DDE96092132A8333355ADFC12D4AA1A68870C56C09C2DA680A9433A1DA80A9131F388EC47284850BF5BE2E71F4A6AA01921CCB344F4703453FA574C9F5F304B61147AC2FFE6D5A3AE79E389CF45C56EC750C5100A8E919AB8B3DC57C23D01902AFC1FAC089A7D9DD67123B38E49707F6731D8B46DE7BB> |-/e <1C60D8A8C9B78256DD55438017BC8C1833CE266A01A5BDCA1B9E966A1AD681838D6CA45F44E08AD46E17D686288D23390B2FFF6378472ABC69E374A8B6ECB2A52EA29263AFEB4E06DEA16052EA24A1400E2DF2276D2E8A45445FDD018FF05A2C8F08BE043D78D9C3FF8D67946FFB6ED6FABF052655B4BF4DBDD6E8C1E3FCFA055088CA6071FC379A1CF225CE66EE3C231FBB0FAEDF30BB250911BC9FE90F7DE212622E1297D593A829F344F788CA5B330F3559D2E33FB2EFAC5B38F4C75E3F0FF8F9AB8251282F4E9ED2B8D5F76F3259AF9F7CA6A537CEB7170E211C3C4C514E> |-/k <1C60D8A8C9B7B4A13F02E2DB12F826777B4D78CA06622E575C6B49D9CA66A0552B3EB1DC2B346FE4BD2CBCBEB5A2F41F0F78788CCB4D5E> |-/m <1C60D8A8C9B6889AAB3FDFDCB8C7A7D4A445E72A6050547E3926FD5EF288CA98CBCE73BD6F51BD8BF77C15E93641E82F5FBA14322965E5F6D81A4346526A3A1BECA76E268C8FE3D1A76E8FCF70B9F3D9BBE79361A40E85058ED9D209065D2BA116AF30A8A9294941853304D630ECD80D50338AF92C33CA5A86089BC3A675BE5255469C0261FC17E304AD4871EC7D0C588F6D20F8D311D5E6B56770EA483EDEB3A414A9F873D9B06A4DDE3FA472A91892F8707248B10279ED4753FAFA79F58F24457691EAC3AA3568D8C5440F> |-/n <1C60D8A8C9B7EF322B311F684FFCE372DC830C5B5622CF8CC481131E62D787051C7F6F8AFE4E0678E980DEFED9D3B42136CA31D6B181415CC612E43F129CA0C6B7129B72601C197C1289FE3B0E87810C0E52F39D3150ED1541E70F1FAC5E47A3847D5C5288BFD9C72CA7FDA1DA3E70FC> |-/o <1C60D8A8C9B7FD849A41D15A513197C7FBD61B6F7FFCAC3AF3E97AC59087245F09701F75E50338558BB40AA9680A2FBD1EAE25AE04491DB1C148A07BBF7B8B2FC83A811B9F5493B2A0F2D79BE2ADCDBA13E2B19DD819B8D5A15937446D8F358692DC5FAB8E88C19B1533D50FF00A7803A38C9128B8EC16408B839CC48067B9ED6B4A3117F3C447EC07CDF75A5742341E297006EE8A172AE85B4C2C86A95A30C1C97E6432A14DD7AB146A08EF57B3F2578CC5ED7C800F9538F93029A11370A11A675530BB39260BAF32B1B7C0D93D402CF73D54D64C2CF3F082E9F79B4662EF26FA2BCB25FE481D961CEE5EA35FDF563D67AB6E8F> |-/endash <1C60D8A8C9B7A73DB6329CA0EAE8778F1CE153313A77> |-/fl <1C60D8A8C9B7B5777C1538136A6D3F21E92C9E558F458CB187B45F8D81CD9228AC674AD11372C40A1D4712F19172D0A55B02C0FEFD13267286CA79435EE8824216DA41078CA6DA59FDD9088651B8EAB8A5BBF5F2A7EBF5426945F0C46585D05ACEC5E2CB51C05622EC7FCBBCB3> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GQKSMS+HelveticaNeue /HelveticaNeue findfont ct_VMDictPut/GQKSMS+HelveticaNeue*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /.notdef /two 46{/.notdef}rp /a /b /c /.notdef /e 5{/.notdef}rp /k /.notdef /m /n /o 96{/.notdef}rp /endash 14{/.notdef}rp /fl 32{/.notdef}rp]GQKSMS+HelveticaNeue nfGQKSMS+HelveticaNeue*1 [12.6299 -1.54672e-15 -1.54672e-15 -12.6299 0 0 ]msf164.07 97.7417 mo(\337am)sh188.167 97.7417 mo(enco \320 200 kb)[6.78223 7.02246 6.78223 7.24902 3.51172 6.31445 3.51074 7.02246 7.02246 7.02246 3.51074 6.55469 0 ]xsh46.5127 60.6509 mo
373.206 60.6509 li
373.206 74.583 li
46.5127 74.583 li
46.5127 60.6509 li
cp
.198 .154 .159 0 cmyk
ef
1 lw
46.5127 60.6509 mo
373.206 60.6509 li
373.206 74.583 li
46.5127 74.583 li
46.5127 60.6509 li
cp
0 0 0 1 cmyk
@
46.5127 216.248 mo
373.206 216.248 li
373.206 230.18 li
46.5127 230.18 li
46.5127 216.248 li
cp
.198 .154 .159 0 cmyk
ef
46.5127 216.248 mo
373.206 216.248 li
373.206 230.18 li
46.5127 230.18 li
46.5127 216.248 li
cp
0 0 0 1 cmyk
@
62.7847 210.706 mo
63.335 210.706 li
63.335 209.606 li
62.7847 209.606 li
62.7847 210.706 li
cp
.875 .247 1 .133 cmyk
f
63.334 210.706 mo
63.8838 210.706 li
63.8838 208.506 li
63.334 208.506 li
63.334 210.706 li
cp
f
63.8838 210.706 mo
64.4346 210.706 li
64.4346 208.506 li
63.8838 208.506 li
63.8838 210.706 li
cp
f
64.9849 210.706 mo
65.5337 210.706 li
65.5337 206.303 li
64.9849 206.303 li
64.9849 210.706 li
cp
f
65.5337 210.706 mo
66.085 210.706 li
66.085 206.303 li
65.5337 206.303 li
65.5337 210.706 li
cp
f
66.085 210.706 mo
66.6348 210.706 li
66.6348 203.552 li
66.085 203.552 li
66.085 210.706 li
cp
f
66.6348 210.706 mo
67.1846 210.706 li
67.1846 203.003 li
66.6348 203.003 li
66.6348 210.706 li
cp
f
67.1846 210.706 mo
67.7349 210.706 li
67.7349 203.003 li
67.1846 203.003 li
67.1846 210.706 li
cp
f
67.7349 210.706 mo
68.2847 210.706 li
68.2847 206.854 li
67.7349 206.854 li
67.7349 210.706 li
cp
f
68.2837 210.706 mo
68.834 210.706 li
68.834 206.854 li
68.2837 206.854 li
68.2837 210.706 li
cp
f
68.834 210.706 mo
69.3838 210.706 li
69.3838 198.048 li
68.834 198.048 li
68.834 210.706 li
cp
f
69.3838 210.706 mo
69.9346 210.706 li
69.9346 200.8 li
69.3838 200.8 li
69.3838 210.706 li
cp
f
69.9346 210.706 mo
70.4849 210.706 li
70.4849 206.854 li
69.9346 206.854 li
69.9346 210.706 li
cp
f
70.4849 210.706 mo
71.0347 210.706 li
71.0347 207.955 li
70.4849 207.955 li
70.4849 210.706 li
cp
f
71.0347 210.706 mo
71.585 210.706 li
71.585 207.955 li
71.0347 207.955 li
71.0347 210.706 li
cp
f
71.585 210.706 mo
72.1348 210.706 li
72.1348 207.405 li
71.585 207.405 li
71.585 210.706 li
cp
f
72.1348 210.706 mo
72.6846 210.706 li
72.6846 207.405 li
72.1348 207.405 li
72.1348 210.706 li
cp
f
72.6846 210.706 mo
73.2349 210.706 li
73.2349 197.498 li
72.6846 197.498 li
72.6846 210.706 li
cp
f
73.2339 210.706 mo
73.7837 210.706 li
73.7837 201.351 li
73.2339 201.351 li
73.2339 210.706 li
cp
f
73.7837 210.706 mo
74.335 210.706 li
74.335 207.955 li
73.7837 207.955 li
73.7837 210.706 li
cp
f
74.335 210.706 mo
74.8848 210.706 li
74.8848 207.955 li
74.335 207.955 li
74.335 210.706 li
cp
f
74.8848 210.706 mo
75.4346 210.706 li
75.4346 209.056 li
74.8848 209.056 li
74.8848 210.706 li
cp
f
75.4346 210.706 mo
75.9839 210.706 li
75.9839 201.351 li
75.4346 201.351 li
75.4346 210.706 li
cp
f
75.9839 210.706 mo
76.5347 210.706 li
76.5347 203.003 li
75.9839 203.003 li
75.9839 210.706 li
cp
f
76.5347 210.706 mo
77.085 210.706 li
77.085 204.104 li
76.5347 204.104 li
76.5347 210.706 li
cp
f
77.085 210.706 mo
77.6357 210.706 li
77.6357 205.754 li
77.085 205.754 li
77.085 210.706 li
cp
f
77.6348 210.706 mo
78.1836 210.706 li
78.1836 190.895 li
77.6348 190.895 li
77.6348 210.706 li
cp
f
78.1836 210.706 mo
78.7339 210.706 li
78.7339 198.599 li
78.1836 198.599 li
78.1836 210.706 li
cp
f
78.7339 210.706 mo
79.2847 210.706 li
79.2847 208.506 li
78.7339 208.506 li
78.7339 210.706 li
cp
f
79.2847 210.706 mo
79.835 210.706 li
79.835 207.405 li
79.2847 207.405 li
79.2847 210.706 li
cp
f
79.835 210.706 mo
80.3848 210.706 li
80.3848 197.498 li
79.835 197.498 li
79.835 210.706 li
cp
0 0 0 1 cmyk
f
80.3848 210.706 mo
80.9346 210.706 li
80.9346 197.498 li
80.3848 197.498 li
80.3848 210.706 li
cp
f
80.9346 210.706 mo
81.4849 210.706 li
81.4849 201.351 li
80.9346 201.351 li
80.9346 210.706 li
cp
.875 .247 1 .133 cmyk
f
81.4849 210.706 mo
82.0347 210.706 li
82.0347 201.351 li
81.4849 201.351 li
81.4849 210.706 li
cp
f
82.0347 210.706 mo
82.5859 210.706 li
82.5859 205.203 li
82.0347 205.203 li
82.0347 210.706 li
cp
f
82.585 210.706 mo
83.1348 210.706 li
83.1348 207.405 li
82.585 207.405 li
82.585 210.706 li
cp
f
83.1348 210.706 mo
83.6846 210.706 li
83.6846 207.405 li
83.1348 207.405 li
83.1348 210.706 li
cp
f
83.6846 210.706 mo
84.2339 210.706 li
84.2339 206.303 li
83.6846 206.303 li
83.6846 210.706 li
cp
f
84.2339 210.706 mo
84.7847 210.706 li
84.7847 209.606 li
84.2339 209.606 li
84.2339 210.706 li
cp
f
84.7847 210.706 mo
85.335 210.706 li
85.335 208.506 li
84.7847 208.506 li
84.7847 210.706 li
cp
f
85.335 210.706 mo
85.8848 210.706 li
85.8848 206.854 li
85.335 206.854 li
85.335 210.706 li
cp
f
85.8848 210.706 mo
86.4346 210.706 li
86.4346 207.405 li
85.8848 207.405 li
85.8848 210.706 li
cp
f
86.4346 210.706 mo
86.9858 210.706 li
86.9858 207.405 li
86.4346 207.405 li
86.4346 210.706 li
cp
f
86.9849 210.706 mo
87.5337 210.706 li
87.5337 207.405 li
86.9849 207.405 li
86.9849 210.706 li
cp
f
87.5347 210.706 mo
88.0859 210.706 li
88.0859 208.506 li
87.5347 208.506 li
87.5347 210.706 li
cp
f
88.085 210.706 mo
88.6348 210.706 li
88.6348 209.606 li
88.085 209.606 li
88.085 210.706 li
cp
f
88.6348 210.706 mo
89.1846 210.706 li
89.1846 209.606 li
88.6348 209.606 li
88.6348 210.706 li
cp
f
89.1846 210.706 mo
89.7349 210.706 li
89.7349 209.606 li
89.1846 209.606 li
89.1846 210.706 li
cp
f
89.7349 210.706 mo
90.2847 210.706 li
90.2847 209.606 li
89.7349 209.606 li
89.7349 210.706 li
cp
f
90.2847 210.706 mo
90.835 210.706 li
90.835 206.303 li
90.2847 206.303 li
90.2847 210.706 li
cp
f
90.835 210.706 mo
91.3848 210.706 li
91.3848 205.754 li
90.835 205.754 li
90.835 210.706 li
cp
f
91.9346 210.706 mo
92.4858 210.706 li
92.4858 209.606 li
91.9346 209.606 li
91.9346 210.706 li
cp
f
92.4849 210.706 mo
93.0347 210.706 li
93.0347 201.351 li
92.4849 201.351 li
92.4849 210.706 li
cp
f
93.585 210.706 mo
94.1348 210.706 li
94.1348 201.351 li
93.585 201.351 li
93.585 210.706 li
cp
f
94.1348 210.706 mo
94.6846 210.706 li
94.6846 201.351 li
94.1348 201.351 li
94.1348 210.706 li
cp
f
94.6846 210.706 mo
95.2349 210.706 li
95.2349 207.405 li
94.6846 207.405 li
94.6846 210.706 li
cp
f
95.2349 210.706 mo
95.7856 210.706 li
95.7856 208.506 li
95.2349 208.506 li
95.2349 210.706 li
cp
f
95.7856 210.706 mo
96.3359 210.706 li
96.3359 208.506 li
95.7856 208.506 li
95.7856 210.706 li
cp
f
96.8848 210.706 mo
97.4355 210.706 li
97.4355 208.506 li
96.8848 208.506 li
96.8848 210.706 li
cp
f
97.4346 210.706 mo
97.9849 210.706 li
97.9849 207.405 li
97.4346 207.405 li
97.4346 210.706 li
cp
f
97.9849 210.706 mo
98.5347 210.706 li
98.5347 200.251 li
97.9849 200.251 li
97.9849 210.706 li
cp
f
98.5347 210.706 mo
99.085 210.706 li
99.085 201.351 li
98.5347 201.351 li
98.5347 210.706 li
cp
f
99.085 210.706 mo
99.6348 210.706 li
99.6348 208.506 li
99.085 208.506 li
99.085 210.706 li
cp
f
99.6348 210.706 mo
100.185 210.706 li
100.185 209.056 li
99.6348 209.056 li
99.6348 210.706 li
cp
f
100.185 210.706 mo
100.735 210.706 li
100.735 209.056 li
100.185 209.056 li
100.185 210.706 li
cp
f
100.735 210.706 mo
101.286 210.706 li
101.286 209.056 li
100.735 209.056 li
100.735 210.706 li
cp
f
101.286 210.706 mo
101.836 210.706 li
101.836 209.056 li
101.286 209.056 li
101.286 210.706 li
cp
f
101.836 210.706 mo
102.386 210.706 li
102.386 208.506 li
101.836 208.506 li
101.836 210.706 li
cp
f
102.385 210.706 mo
102.935 210.706 li
102.935 208.506 li
102.385 208.506 li
102.385 210.706 li
cp
f
102.935 210.706 mo
103.485 210.706 li
103.485 207.955 li
102.935 207.955 li
102.935 210.706 li
cp
f
103.485 210.706 mo
104.035 210.706 li
104.035 207.405 li
103.485 207.405 li
103.485 210.706 li
cp
f
104.035 210.706 mo
104.585 210.706 li
104.585 203.552 li
104.035 203.552 li
104.035 210.706 li
cp
f
104.585 210.706 mo
105.136 210.706 li
105.136 203.552 li
104.585 203.552 li
104.585 210.706 li
cp
f
105.136 210.706 mo
105.686 210.706 li
105.686 209.606 li
105.136 209.606 li
105.136 210.706 li
cp
f
105.686 210.706 mo
106.236 210.706 li
106.236 187.59 li
105.686 187.59 li
105.686 210.706 li
cp
0 0 0 1 cmyk
f
106.236 210.706 mo
106.785 210.706 li
106.785 187.59 li
106.236 187.59 li
106.236 210.706 li
cp
f
106.785 210.706 mo
107.336 210.706 li
107.336 206.303 li
106.785 206.303 li
106.785 210.706 li
cp
.875 .247 1 .133 cmyk
f
107.335 210.706 mo
107.885 210.706 li
107.885 209.606 li
107.335 209.606 li
107.335 210.706 li
cp
f
108.435 210.706 mo
108.986 210.706 li
108.986 208.506 li
108.435 208.506 li
108.435 210.706 li
cp
f
108.986 210.706 mo
109.535 210.706 li
109.535 208.506 li
108.986 208.506 li
108.986 210.706 li
cp
f
109.535 210.706 mo
110.085 210.706 li
110.085 209.606 li
109.535 209.606 li
109.535 210.706 li
cp
f
110.085 210.706 mo
110.636 210.706 li
110.636 209.606 li
110.085 209.606 li
110.085 210.706 li
cp
f
110.636 210.706 mo
111.186 210.706 li
111.186 204.104 li
110.636 204.104 li
110.636 210.706 li
cp
f
111.186 210.706 mo
111.736 210.706 li
111.736 203.003 li
111.186 203.003 li
111.186 210.706 li
cp
f
111.735 210.706 mo
112.285 210.706 li
112.285 203.003 li
111.735 203.003 li
111.735 210.706 li
cp
f
112.285 210.706 mo
112.835 210.706 li
112.835 206.854 li
112.285 206.854 li
112.285 210.706 li
cp
f
112.835 210.706 mo
113.385 210.706 li
113.385 202.451 li
112.835 202.451 li
112.835 210.706 li
cp
f
113.385 210.706 mo
113.936 210.706 li
113.936 203.552 li
113.385 203.552 li
113.385 210.706 li
cp
f
113.936 210.706 mo
114.485 210.706 li
114.485 196.948 li
113.936 196.948 li
113.936 210.706 li
cp
f
114.485 210.706 mo
115.036 210.706 li
115.036 196.948 li
114.485 196.948 li
114.485 210.706 li
cp
f
115.036 210.706 mo
115.586 210.706 li
115.586 205.754 li
115.036 205.754 li
115.036 210.706 li
cp
f
115.586 210.706 mo
116.136 210.706 li
116.136 205.754 li
115.586 205.754 li
115.586 210.706 li
cp
f
116.136 210.706 mo
116.686 210.706 li
116.686 208.506 li
116.136 208.506 li
116.136 210.706 li
cp
f
116.685 210.706 mo
117.235 210.706 li
117.235 206.303 li
116.685 206.303 li
116.685 210.706 li
cp
f
117.235 210.706 mo
117.785 210.706 li
117.785 209.056 li
117.235 209.056 li
117.235 210.706 li
cp
f
117.785 210.706 mo
118.336 210.706 li
118.336 178.236 li
117.785 178.236 li
117.785 210.706 li
cp
f
118.336 210.706 mo
118.885 210.706 li
118.885 179.336 li
118.336 179.336 li
118.336 210.706 li
cp
f
118.885 210.706 mo
119.436 210.706 li
119.436 205.754 li
118.885 205.754 li
118.885 210.706 li
cp
f
119.436 210.706 mo
119.986 210.706 li
119.986 205.754 li
119.436 205.754 li
119.436 210.706 li
cp
f
119.986 210.706 mo
120.536 210.706 li
120.536 209.606 li
119.986 209.606 li
119.986 210.706 li
cp
f
120.536 210.706 mo
121.086 210.706 li
121.086 209.606 li
120.536 209.606 li
120.536 210.706 li
cp
f
121.086 210.706 mo
121.637 210.706 li
121.637 196.948 li
121.086 196.948 li
121.086 210.706 li
cp
f
121.636 210.706 mo
122.185 210.706 li
122.185 198.048 li
121.636 198.048 li
121.636 210.706 li
cp
f
122.185 210.706 mo
122.735 210.706 li
122.735 207.405 li
122.185 207.405 li
122.185 210.706 li
cp
f
122.735 210.706 mo
123.285 210.706 li
123.285 204.104 li
122.735 204.104 li
122.735 210.706 li
cp
f
123.285 210.706 mo
123.836 210.706 li
123.836 204.104 li
123.285 204.104 li
123.285 210.706 li
cp
f
123.836 210.706 mo
124.386 210.706 li
124.386 198.599 li
123.836 198.599 li
123.836 210.706 li
cp
f
124.386 210.706 mo
124.935 210.706 li
124.935 206.303 li
124.386 206.303 li
124.386 210.706 li
cp
f
124.935 210.706 mo
125.486 210.706 li
125.486 204.653 li
124.935 204.653 li
124.935 210.706 li
cp
f
125.486 210.706 mo
126.036 210.706 li
126.036 209.056 li
125.486 209.056 li
125.486 210.706 li
cp
f
126.036 210.706 mo
126.586 210.706 li
126.586 207.405 li
126.036 207.405 li
126.036 210.706 li
cp
f
126.585 210.706 mo
127.136 210.706 li
127.136 207.405 li
126.585 207.405 li
126.585 210.706 li
cp
f
127.136 210.706 mo
127.686 210.706 li
127.686 208.506 li
127.136 208.506 li
127.136 210.706 li
cp
f
127.686 210.706 mo
128.235 210.706 li
128.235 204.104 li
127.686 204.104 li
127.686 210.706 li
cp
f
128.235 210.706 mo
128.786 210.706 li
128.786 204.104 li
128.235 204.104 li
128.235 210.706 li
cp
f
128.786 210.706 mo
129.336 210.706 li
129.336 209.056 li
128.786 209.056 li
128.786 210.706 li
cp
f
129.336 210.706 mo
129.886 210.706 li
129.886 209.056 li
129.336 209.056 li
129.336 210.706 li
cp
f
129.886 210.706 mo
130.436 210.706 li
130.436 207.405 li
129.886 207.405 li
129.886 210.706 li
cp
f
130.436 210.706 mo
130.986 210.706 li
130.986 209.056 li
130.436 209.056 li
130.436 210.706 li
cp
f
130.986 210.706 mo
131.536 210.706 li
131.536 195.296 li
130.986 195.296 li
130.986 210.706 li
cp
f
131.536 210.706 mo
132.087 210.706 li
132.087 192.544 li
131.536 192.544 li
131.536 210.706 li
cp
f
132.086 210.706 mo
132.636 210.706 li
132.636 207.405 li
132.086 207.405 li
132.086 210.706 li
cp
f
132.635 210.706 mo
133.186 210.706 li
133.186 208.506 li
132.635 208.506 li
132.635 210.706 li
cp
f
133.186 210.706 mo
133.736 210.706 li
133.736 207.955 li
133.186 207.955 li
133.186 210.706 li
cp
f
133.736 210.706 mo
134.287 210.706 li
134.287 207.405 li
133.736 207.405 li
133.736 210.706 li
cp
f
134.286 210.706 mo
134.836 210.706 li
134.836 207.405 li
134.286 207.405 li
134.286 210.706 li
cp
f
134.836 210.706 mo
135.386 210.706 li
135.386 208.506 li
134.836 208.506 li
134.836 210.706 li
cp
f
135.386 210.706 mo
135.936 210.706 li
135.936 199.699 li
135.386 199.699 li
135.386 210.706 li
cp
f
135.936 210.706 mo
136.487 210.706 li
136.487 199.699 li
135.936 199.699 li
135.936 210.706 li
cp
f
136.486 210.706 mo
137.036 210.706 li
137.036 203.003 li
136.486 203.003 li
136.486 210.706 li
cp
f
137.036 210.706 mo
137.585 210.706 li
137.585 209.056 li
137.036 209.056 li
137.036 210.706 li
cp
f
137.585 210.706 mo
138.136 210.706 li
138.136 206.303 li
137.585 206.303 li
137.585 210.706 li
cp
f
138.136 210.706 mo
138.686 210.706 li
138.686 161.174 li
138.136 161.174 li
138.136 210.706 li
cp
0 0 0 1 cmyk
f
138.686 210.706 mo
139.236 210.706 li
139.236 161.174 li
138.686 161.174 li
138.686 210.706 li
cp
f
139.236 210.706 mo
139.786 210.706 li
139.786 208.506 li
139.236 208.506 li
139.236 210.706 li
cp
.875 .247 1 .133 cmyk
f
139.786 210.706 mo
140.336 210.706 li
140.336 208.506 li
139.786 208.506 li
139.786 210.706 li
cp
f
140.336 210.706 mo
140.886 210.706 li
140.886 207.955 li
140.336 207.955 li
140.336 210.706 li
cp
f
140.886 210.706 mo
141.436 210.706 li
141.436 205.754 li
140.886 205.754 li
140.886 210.706 li
cp
f
141.986 210.706 mo
142.536 210.706 li
142.536 205.754 li
141.986 205.754 li
141.986 210.706 li
cp
f
142.536 210.706 mo
143.086 210.706 li
143.086 205.754 li
142.536 205.754 li
142.536 210.706 li
cp
f
143.086 210.706 mo
143.636 210.706 li
143.636 201.9 li
143.086 201.9 li
143.086 210.706 li
cp
f
143.636 210.706 mo
144.186 210.706 li
144.186 201.9 li
143.636 201.9 li
143.636 210.706 li
cp
f
144.186 210.706 mo
144.737 210.706 li
144.737 208.506 li
144.186 208.506 li
144.186 210.706 li
cp
f
144.737 210.706 mo
145.286 210.706 li
145.286 209.606 li
144.737 209.606 li
144.737 210.706 li
cp
f
145.286 210.706 mo
145.836 210.706 li
145.836 208.506 li
145.286 208.506 li
145.286 210.706 li
cp
f
145.836 210.706 mo
146.387 210.706 li
146.387 201.9 li
145.836 201.9 li
145.836 210.706 li
cp
f
146.386 210.706 mo
146.936 210.706 li
146.936 204.104 li
146.386 204.104 li
146.386 210.706 li
cp
f
146.936 210.706 mo
147.486 210.706 li
147.486 209.056 li
146.936 209.056 li
146.936 210.706 li
cp
f
147.486 210.706 mo
148.036 210.706 li
148.036 209.606 li
147.486 209.606 li
147.486 210.706 li
cp
f
148.036 210.706 mo
148.586 210.706 li
148.586 209.056 li
148.036 209.056 li
148.036 210.706 li
cp
f
148.586 210.706 mo
149.136 210.706 li
149.136 207.405 li
148.586 207.405 li
148.586 210.706 li
cp
f
149.136 210.706 mo
149.687 210.706 li
149.687 208.506 li
149.136 208.506 li
149.136 210.706 li
cp
f
149.687 210.706 mo
150.237 210.706 li
150.237 208.506 li
149.687 208.506 li
149.687 210.706 li
cp
f
150.237 210.706 mo
150.787 210.706 li
150.787 206.303 li
150.237 206.303 li
150.237 210.706 li
cp
f
150.786 210.706 mo
151.336 210.706 li
151.336 206.303 li
150.786 206.303 li
150.786 210.706 li
cp
f
151.336 210.706 mo
151.886 210.706 li
151.886 205.754 li
151.336 205.754 li
151.336 210.706 li
cp
f
151.886 210.706 mo
152.436 210.706 li
152.436 206.854 li
151.886 206.854 li
151.886 210.706 li
cp
f
152.436 210.706 mo
152.986 210.706 li
152.986 209.056 li
152.436 209.056 li
152.436 210.706 li
cp
f
152.986 210.706 mo
153.536 210.706 li
153.536 205.203 li
152.986 205.203 li
152.986 210.706 li
cp
f
153.536 210.706 mo
154.086 210.706 li
154.086 205.203 li
153.536 205.203 li
153.536 210.706 li
cp
f
154.086 210.706 mo
154.637 210.706 li
154.637 201.351 li
154.086 201.351 li
154.086 210.706 li
cp
f
154.637 210.706 mo
155.187 210.706 li
155.187 201.351 li
154.637 201.351 li
154.637 210.706 li
cp
f
155.187 210.706 mo
155.736 210.706 li
155.736 209.606 li
155.187 209.606 li
155.187 210.706 li
cp
f
155.736 210.706 mo
156.287 210.706 li
156.287 200.8 li
155.736 200.8 li
155.736 210.706 li
cp
f
156.286 210.706 mo
156.836 210.706 li
156.836 188.142 li
156.286 188.142 li
156.286 210.706 li
cp
f
156.836 210.706 mo
157.386 210.706 li
157.386 199.699 li
156.836 199.699 li
156.836 210.706 li
cp
f
157.386 210.706 mo
157.936 210.706 li
157.936 203.003 li
157.386 203.003 li
157.386 210.706 li
cp
f
157.936 210.706 mo
158.486 210.706 li
158.486 156.771 li
157.936 156.771 li
157.936 210.706 li
cp
f
158.486 210.706 mo
159.036 210.706 li
159.036 156.771 li
158.486 156.771 li
158.486 210.706 li
cp
f
159.036 210.706 mo
159.586 210.706 li
159.586 206.303 li
159.036 206.303 li
159.036 210.706 li
cp
f
159.586 210.706 mo
160.137 210.706 li
160.137 206.303 li
159.586 206.303 li
159.586 210.706 li
cp
f
160.137 210.706 mo
160.686 210.706 li
160.686 209.606 li
160.137 209.606 li
160.137 210.706 li
cp
f
161.236 210.706 mo
161.786 210.706 li
161.786 200.251 li
161.236 200.251 li
161.236 210.706 li
cp
f
161.786 210.706 mo
162.336 210.706 li
162.336 200.251 li
161.786 200.251 li
161.786 210.706 li
cp
f
162.336 210.706 mo
162.887 210.706 li
162.887 206.303 li
162.336 206.303 li
162.336 210.706 li
cp
f
162.887 210.706 mo
163.436 210.706 li
163.436 208.506 li
162.887 208.506 li
162.887 210.706 li
cp
f
163.436 210.706 mo
163.986 210.706 li
163.986 205.203 li
163.436 205.203 li
163.436 210.706 li
cp
f
163.986 210.706 mo
164.537 210.706 li
164.537 199.699 li
163.986 199.699 li
163.986 210.706 li
cp
f
164.537 210.706 mo
165.087 210.706 li
165.087 197.498 li
164.537 197.498 li
164.537 210.706 li
cp
f
165.087 210.706 mo
165.636 210.706 li
165.636 208.506 li
165.087 208.506 li
165.087 210.706 li
cp
f
165.636 210.706 mo
166.186 210.706 li
166.186 207.955 li
165.636 207.955 li
165.636 210.706 li
cp
f
166.186 210.706 mo
166.736 210.706 li
166.736 208.506 li
166.186 208.506 li
166.186 210.706 li
cp
f
166.736 210.706 mo
167.287 210.706 li
167.287 194.196 li
166.736 194.196 li
166.736 210.706 li
cp
f
167.287 210.706 mo
167.837 210.706 li
167.837 207.955 li
167.287 207.955 li
167.287 210.706 li
cp
f
167.837 210.706 mo
168.386 210.706 li
168.386 207.955 li
167.837 207.955 li
167.837 210.706 li
cp
f
168.386 210.706 mo
168.936 210.706 li
168.936 207.955 li
168.386 207.955 li
168.386 210.706 li
cp
f
168.936 210.706 mo
169.487 210.706 li
169.487 209.606 li
168.936 209.606 li
168.936 210.706 li
cp
f
169.487 210.706 mo
170.037 210.706 li
170.037 205.754 li
169.487 205.754 li
169.487 210.706 li
cp
f
170.037 210.706 mo
170.587 210.706 li
170.587 202.451 li
170.037 202.451 li
170.037 210.706 li
cp
f
170.586 210.706 mo
171.137 210.706 li
171.137 201.9 li
170.586 201.9 li
170.586 210.706 li
cp
f
171.137 210.706 mo
171.686 210.706 li
171.686 209.606 li
171.137 209.606 li
171.137 210.706 li
cp
f
171.686 210.706 mo
172.236 210.706 li
172.236 209.056 li
171.686 209.056 li
171.686 210.706 li
cp
f
172.236 210.706 mo
172.787 210.706 li
172.787 197.498 li
172.236 197.498 li
172.236 210.706 li
cp
f
172.787 210.706 mo
173.337 210.706 li
173.337 209.056 li
172.787 209.056 li
172.787 210.706 li
cp
f
173.337 210.706 mo
173.887 210.706 li
173.887 209.056 li
173.337 209.056 li
173.337 210.706 li
cp
f
173.887 210.706 mo
174.437 210.706 li
174.437 209.606 li
173.887 209.606 li
173.887 210.706 li
cp
f
174.987 210.706 mo
175.537 210.706 li
175.537 209.606 li
174.987 209.606 li
174.987 210.706 li
cp
f
175.536 210.706 mo
176.086 210.706 li
176.086 204.653 li
175.536 204.653 li
175.536 210.706 li
cp
f
176.636 210.706 mo
177.187 210.706 li
177.187 191.443 li
176.636 191.443 li
176.636 210.706 li
cp
f
177.187 210.706 mo
177.737 210.706 li
177.737 201.9 li
177.187 201.9 li
177.187 210.706 li
cp
f
177.737 210.706 mo
178.286 210.706 li
178.286 209.056 li
177.737 209.056 li
177.737 210.706 li
cp
f
178.286 210.706 mo
178.837 210.706 li
178.837 205.203 li
178.286 205.203 li
178.286 210.706 li
cp
f
178.837 210.706 mo
179.387 210.706 li
179.387 205.203 li
178.837 205.203 li
178.837 210.706 li
cp
f
179.387 210.706 mo
179.937 210.706 li
179.937 201.351 li
179.387 201.351 li
179.387 210.706 li
cp
f
179.937 210.706 mo
180.487 210.706 li
180.487 208.506 li
179.937 208.506 li
179.937 210.706 li
cp
f
180.486 210.706 mo
181.036 210.706 li
181.036 205.203 li
180.486 205.203 li
180.486 210.706 li
cp
f
181.036 210.706 mo
181.586 210.706 li
181.586 207.405 li
181.036 207.405 li
181.036 210.706 li
cp
f
181.586 210.706 mo
182.136 210.706 li
182.136 209.606 li
181.586 209.606 li
181.586 210.706 li
cp
f
182.136 210.706 mo
182.687 210.706 li
182.687 185.389 li
182.136 185.389 li
182.136 210.706 li
cp
f
182.687 210.706 mo
183.237 210.706 li
183.237 209.056 li
182.687 209.056 li
182.687 210.706 li
cp
f
183.237 210.706 mo
183.787 210.706 li
183.787 206.303 li
183.237 206.303 li
183.237 210.706 li
cp
f
183.787 210.706 mo
184.336 210.706 li
184.336 206.303 li
183.787 206.303 li
183.787 210.706 li
cp
f
184.336 210.706 mo
184.887 210.706 li
184.887 198.599 li
184.336 198.599 li
184.336 210.706 li
cp
f
184.887 210.706 mo
185.438 210.706 li
185.438 198.599 li
184.887 198.599 li
184.887 210.706 li
cp
f
185.437 210.706 mo
185.987 210.706 li
185.987 203.003 li
185.437 203.003 li
185.437 210.706 li
cp
f
185.987 210.706 mo
186.536 210.706 li
186.536 202.451 li
185.987 202.451 li
185.987 210.706 li
cp
f
186.537 210.706 mo
187.086 210.706 li
187.086 202.451 li
186.537 202.451 li
186.537 210.706 li
cp
f
187.086 210.706 mo
187.637 210.706 li
187.637 205.754 li
187.086 205.754 li
187.086 210.706 li
cp
f
187.637 210.706 mo
188.187 210.706 li
188.187 205.754 li
187.637 205.754 li
187.637 210.706 li
cp
f
188.187 210.706 mo
188.738 210.706 li
188.738 207.405 li
188.187 207.405 li
188.187 210.706 li
cp
f
188.738 210.706 mo
189.287 210.706 li
189.287 207.955 li
188.738 207.955 li
188.738 210.706 li
cp
f
189.287 210.706 mo
189.837 210.706 li
189.837 205.754 li
189.287 205.754 li
189.287 210.706 li
cp
f
189.837 210.706 mo
190.388 210.706 li
190.388 207.405 li
189.837 207.405 li
189.837 210.706 li
cp
f
190.387 210.706 mo
190.936 210.706 li
190.936 199.699 li
190.387 199.699 li
190.387 210.706 li
cp
f
190.936 210.706 mo
191.486 210.706 li
191.486 200.8 li
190.936 200.8 li
190.936 210.706 li
cp
f
191.486 210.706 mo
192.037 210.706 li
192.037 208.506 li
191.486 208.506 li
191.486 210.706 li
cp
f
192.037 210.706 mo
192.586 210.706 li
192.586 198.048 li
192.037 198.048 li
192.037 210.706 li
cp
f
192.586 210.706 mo
193.137 210.706 li
193.137 201.351 li
192.586 201.351 li
192.586 210.706 li
cp
f
193.137 210.706 mo
193.687 210.706 li
193.687 209.056 li
193.137 209.056 li
193.137 210.706 li
cp
f
193.687 210.706 mo
194.237 210.706 li
194.237 207.955 li
193.687 207.955 li
193.687 210.706 li
cp
f
194.237 210.706 mo
194.787 210.706 li
194.787 209.606 li
194.237 209.606 li
194.237 210.706 li
cp
f
194.787 210.706 mo
195.337 210.706 li
195.337 208.506 li
194.787 208.506 li
194.787 210.706 li
cp
f
195.336 210.706 mo
195.887 210.706 li
195.887 208.506 li
195.336 208.506 li
195.336 210.706 li
cp
f
195.887 210.706 mo
196.437 210.706 li
196.437 207.955 li
195.887 207.955 li
195.887 210.706 li
cp
f
196.437 210.706 mo
196.987 210.706 li
196.987 207.955 li
196.437 207.955 li
196.437 210.706 li
cp
f
196.987 210.706 mo
197.537 210.706 li
197.537 206.303 li
196.987 206.303 li
196.987 210.706 li
cp
f
197.537 210.706 mo
198.086 210.706 li
198.086 202.451 li
197.537 202.451 li
197.537 210.706 li
cp
f
198.086 210.706 mo
198.638 210.706 li
198.638 199.699 li
198.086 199.699 li
198.086 210.706 li
cp
f
198.638 210.706 mo
199.187 210.706 li
199.187 199.699 li
198.638 199.699 li
198.638 210.706 li
cp
f
199.187 210.706 mo
199.737 210.706 li
199.737 203.552 li
199.187 203.552 li
199.187 210.706 li
cp
f
199.737 210.706 mo
200.288 210.706 li
200.288 204.104 li
199.737 204.104 li
199.737 210.706 li
cp
f
200.287 210.706 mo
200.835 210.706 li
200.835 203.552 li
200.287 203.552 li
200.287 210.706 li
cp
f
200.835 210.706 mo
201.387 210.706 li
201.387 209.606 li
200.835 209.606 li
200.835 210.706 li
cp
f
201.387 210.706 mo
201.937 210.706 li
201.937 209.056 li
201.387 209.056 li
201.387 210.706 li
cp
f
201.937 210.706 mo
202.488 210.706 li
202.488 205.754 li
201.937 205.754 li
201.937 210.706 li
cp
f
203.037 210.706 mo
203.586 210.706 li
203.586 206.854 li
203.037 206.854 li
203.037 210.706 li
cp
f
203.586 210.706 mo
204.138 210.706 li
204.138 207.405 li
203.586 207.405 li
203.586 210.706 li
cp
f
204.138 210.706 mo
204.688 210.706 li
204.688 209.606 li
204.138 209.606 li
204.138 210.706 li
cp
f
204.687 210.706 mo
205.237 210.706 li
205.237 199.149 li
204.687 199.149 li
204.687 210.706 li
cp
f
205.237 210.706 mo
205.788 210.706 li
205.788 193.646 li
205.237 193.646 li
205.237 210.706 li
cp
f
205.788 210.706 mo
206.336 210.706 li
206.336 207.405 li
205.788 207.405 li
205.788 210.706 li
cp
f
206.336 210.706 mo
206.887 210.706 li
206.887 207.405 li
206.336 207.405 li
206.336 210.706 li
cp
f
206.887 210.706 mo
207.438 210.706 li
207.438 205.754 li
206.887 205.754 li
206.887 210.706 li
cp
f
207.438 210.706 mo
207.987 210.706 li
207.987 199.149 li
207.438 199.149 li
207.438 210.706 li
cp
f
207.987 210.706 mo
208.538 210.706 li
208.538 207.955 li
207.987 207.955 li
207.987 210.706 li
cp
f
208.538 210.706 mo
209.088 210.706 li
209.088 203.003 li
208.538 203.003 li
208.538 210.706 li
cp
f
209.087 210.706 mo
209.636 210.706 li
209.636 203.003 li
209.087 203.003 li
209.087 210.706 li
cp
f
209.637 210.706 mo
210.187 210.706 li
210.187 207.955 li
209.637 207.955 li
209.637 210.706 li
cp
f
210.187 210.706 mo
210.737 210.706 li
210.737 209.606 li
210.187 209.606 li
210.187 210.706 li
cp
f
210.737 210.706 mo
211.288 210.706 li
211.288 195.296 li
210.737 195.296 li
210.737 210.706 li
cp
f
211.288 210.706 mo
211.837 210.706 li
211.837 198.048 li
211.288 198.048 li
211.288 210.706 li
cp
f
211.837 210.706 mo
212.387 210.706 li
212.387 207.955 li
211.837 207.955 li
211.837 210.706 li
cp
f
212.387 210.706 mo
212.938 210.706 li
212.938 199.149 li
212.387 199.149 li
212.387 210.706 li
cp
f
212.938 210.706 mo
213.488 210.706 li
213.488 207.405 li
212.938 207.405 li
212.938 210.706 li
cp
f
213.488 210.706 mo
214.038 210.706 li
214.038 209.606 li
213.488 209.606 li
213.488 210.706 li
cp
f
214.038 210.706 mo
214.587 210.706 li
214.587 209.606 li
214.038 209.606 li
214.038 210.706 li
cp
f
214.587 210.706 mo
215.138 210.706 li
215.138 209.606 li
214.587 209.606 li
214.587 210.706 li
cp
f
215.137 210.706 mo
215.686 210.706 li
215.686 209.606 li
215.137 209.606 li
215.137 210.706 li
cp
f
216.238 210.706 mo
216.787 210.706 li
216.787 202.451 li
216.238 202.451 li
216.238 210.706 li
cp
f
216.786 210.706 mo
217.338 210.706 li
217.338 190.895 li
216.786 190.895 li
216.786 210.706 li
cp
f
217.338 210.706 mo
217.888 210.706 li
217.888 205.754 li
217.338 205.754 li
217.338 210.706 li
cp
f
217.888 210.706 mo
218.437 210.706 li
218.437 196.397 li
217.888 196.397 li
217.888 210.706 li
cp
f
218.437 210.706 mo
218.988 210.706 li
218.988 198.048 li
218.437 198.048 li
218.437 210.706 li
cp
f
218.988 210.706 mo
219.537 210.706 li
219.537 206.854 li
218.988 206.854 li
218.988 210.706 li
cp
f
219.537 210.706 mo
220.088 210.706 li
220.088 206.854 li
219.537 206.854 li
219.537 210.706 li
cp
f
220.087 210.706 mo
220.637 210.706 li
220.637 195.846 li
220.087 195.846 li
220.087 210.706 li
cp
f
220.637 210.706 mo
221.186 210.706 li
221.186 195.846 li
220.637 195.846 li
220.637 210.706 li
cp
f
221.186 210.706 mo
221.737 210.706 li
221.737 208.506 li
221.186 208.506 li
221.186 210.706 li
cp
f
221.737 210.706 mo
222.286 210.706 li
222.286 205.754 li
221.737 205.754 li
221.737 210.706 li
cp
f
222.286 210.706 mo
222.838 210.706 li
222.838 203.552 li
222.286 203.552 li
222.286 210.706 li
cp
f
222.838 210.706 mo
223.388 210.706 li
223.388 190.343 li
222.838 190.343 li
222.838 210.706 li
cp
0 0 0 1 cmyk
f
223.387 210.706 mo
223.936 210.706 li
223.936 190.343 li
223.387 190.343 li
223.387 210.706 li
cp
f
223.936 210.706 mo
224.488 210.706 li
224.488 209.056 li
223.936 209.056 li
223.936 210.706 li
cp
.875 .247 1 .133 cmyk
f
224.487 210.706 mo
225.036 210.706 li
225.036 209.056 li
224.487 209.056 li
224.487 210.706 li
cp
f
225.036 210.706 mo
225.587 210.706 li
225.587 209.056 li
225.036 209.056 li
225.036 210.706 li
cp
f
226.137 210.706 mo
226.686 210.706 li
226.686 206.854 li
226.137 206.854 li
226.137 210.706 li
cp
f
226.686 210.706 mo
227.238 210.706 li
227.238 206.854 li
226.686 206.854 li
226.686 210.706 li
cp
f
227.238 210.706 mo
227.786 210.706 li
227.786 202.451 li
227.238 202.451 li
227.238 210.706 li
cp
f
227.786 210.706 mo
228.338 210.706 li
228.338 202.451 li
227.786 202.451 li
227.786 210.706 li
cp
f
228.337 210.706 mo
228.888 210.706 li
228.888 206.303 li
228.337 206.303 li
228.337 210.706 li
cp
f
228.888 210.706 mo
229.437 210.706 li
229.437 207.955 li
228.888 207.955 li
228.888 210.706 li
cp
f
229.437 210.706 mo
229.989 210.706 li
229.989 164.478 li
229.437 164.478 li
229.437 210.706 li
cp
f
229.988 210.706 mo
230.536 210.706 li
230.536 208.506 li
229.988 208.506 li
229.988 210.706 li
cp
f
230.536 210.706 mo
231.088 210.706 li
231.088 195.846 li
230.536 195.846 li
230.536 210.706 li
cp
f
231.088 210.706 mo
231.638 210.706 li
231.638 195.296 li
231.088 195.296 li
231.088 210.706 li
cp
f
231.638 210.706 mo
232.187 210.706 li
232.187 203.003 li
231.638 203.003 li
231.638 210.706 li
cp
f
232.187 210.706 mo
232.738 210.706 li
232.738 207.955 li
232.187 207.955 li
232.187 210.706 li
cp
f
232.738 210.706 mo
233.286 210.706 li
233.286 201.351 li
232.738 201.351 li
232.738 210.706 li
cp
f
233.286 210.706 mo
233.838 210.706 li
233.838 202.451 li
233.286 202.451 li
233.286 210.706 li
cp
f
233.838 210.706 mo
234.387 210.706 li
234.387 206.854 li
233.838 206.854 li
233.838 210.706 li
cp
f
234.388 210.706 mo
234.937 210.706 li
234.937 206.854 li
234.388 206.854 li
234.388 210.706 li
cp
f
234.937 210.706 mo
235.489 210.706 li
235.489 209.056 li
234.937 209.056 li
234.937 210.706 li
cp
f
235.488 210.706 mo
236.036 210.706 li
236.036 207.955 li
235.488 207.955 li
235.488 210.706 li
cp
f
236.036 210.706 mo
236.588 210.706 li
236.588 208.506 li
236.036 208.506 li
236.036 210.706 li
cp
f
236.589 210.706 mo
237.139 210.706 li
237.139 202.451 li
236.589 202.451 li
236.589 210.706 li
cp
f
237.139 210.706 mo
237.687 210.706 li
237.687 206.303 li
237.139 206.303 li
237.139 210.706 li
cp
f
237.686 210.706 mo
238.238 210.706 li
238.238 208.506 li
237.686 208.506 li
237.686 210.706 li
cp
f
238.238 210.706 mo
238.787 210.706 li
238.787 208.506 li
238.238 208.506 li
238.238 210.706 li
cp
f
239.888 210.706 mo
240.436 210.706 li
240.436 209.056 li
239.888 209.056 li
239.888 210.706 li
cp
f
240.987 210.706 mo
241.536 210.706 li
241.536 208.506 li
240.987 208.506 li
240.987 210.706 li
cp
f
241.536 210.706 mo
242.088 210.706 li
242.088 188.692 li
241.536 188.692 li
241.536 210.706 li
cp
f
242.638 210.706 mo
243.186 210.706 li
243.186 209.056 li
242.638 209.056 li
242.638 210.706 li
cp
f
243.186 210.706 mo
243.738 210.706 li
243.738 207.955 li
243.186 207.955 li
243.186 210.706 li
cp
f
243.738 210.706 mo
244.288 210.706 li
244.288 207.405 li
243.738 207.405 li
243.738 210.706 li
cp
f
244.287 210.706 mo
244.838 210.706 li
244.838 205.754 li
244.287 205.754 li
244.287 210.706 li
cp
f
244.838 210.706 mo
245.388 210.706 li
245.388 208.506 li
244.838 208.506 li
244.838 210.706 li
cp
f
245.388 210.706 mo
245.936 210.706 li
245.936 207.405 li
245.388 207.405 li
245.388 210.706 li
cp
f
245.936 210.706 mo
246.488 210.706 li
246.488 209.606 li
245.936 209.606 li
245.936 210.706 li
cp
f
246.488 210.706 mo
247.037 210.706 li
247.037 209.606 li
246.488 209.606 li
246.488 210.706 li
cp
f
247.037 210.706 mo
247.588 210.706 li
247.588 208.506 li
247.037 208.506 li
247.037 210.706 li
cp
f
258.037 210.706 mo
258.589 210.706 li
258.589 209.606 li
258.037 209.606 li
258.037 210.706 li
cp
f
258.588 210.706 mo
259.137 210.706 li
259.137 209.606 li
258.588 209.606 li
258.588 210.706 li
cp
f
263.538 210.706 mo
264.09 210.706 li
264.09 209.056 li
263.538 209.056 li
263.538 210.706 li
cp
f
264.089 210.706 mo
264.639 210.706 li
264.639 209.056 li
264.089 209.056 li
264.089 210.706 li
cp
f
264.639 210.706 mo
265.187 210.706 li
265.187 209.056 li
264.639 209.056 li
264.639 210.706 li
cp
f
265.187 210.706 mo
265.738 210.706 li
265.738 209.056 li
265.187 209.056 li
265.187 210.706 li
cp
f
273.438 210.706 mo
273.989 210.706 li
273.989 209.606 li
273.438 209.606 li
273.438 210.706 li
cp
f
275.639 210.706 mo
276.187 210.706 li
276.187 207.955 li
275.639 207.955 li
275.639 210.706 li
cp
f
276.187 210.706 mo
276.739 210.706 li
276.739 207.955 li
276.187 207.955 li
276.187 210.706 li
cp
f
277.288 210.706 mo
277.839 210.706 li
277.839 201.351 li
277.288 201.351 li
277.288 210.706 li
cp
f
277.838 210.706 mo
278.388 210.706 li
278.388 201.351 li
277.838 201.351 li
277.838 210.706 li
cp
f
278.388 210.706 mo
278.937 210.706 li
278.937 193.646 li
278.388 193.646 li
278.388 210.706 li
cp
f
278.937 210.706 mo
279.488 210.706 li
279.488 203.552 li
278.937 203.552 li
278.937 210.706 li
cp
f
279.488 210.706 mo
280.037 210.706 li
280.037 207.955 li
279.488 207.955 li
279.488 210.706 li
cp
f
280.037 210.706 mo
280.589 210.706 li
280.589 204.653 li
280.037 204.653 li
280.037 210.706 li
cp
f
280.589 210.706 mo
281.139 210.706 li
281.139 204.653 li
280.589 204.653 li
280.589 210.706 li
cp
f
281.139 210.706 mo
281.688 210.706 li
281.688 208.506 li
281.139 208.506 li
281.139 210.706 li
cp
f
281.688 210.706 mo
282.239 210.706 li
282.239 204.104 li
281.688 204.104 li
281.688 210.706 li
cp
f
282.239 210.706 mo
282.788 210.706 li
282.788 179.336 li
282.239 179.336 li
282.239 210.706 li
cp
f
282.788 210.706 mo
283.34 210.706 li
283.34 178.785 li
282.788 178.785 li
282.788 210.706 li
cp
f
283.339 210.706 mo
283.889 210.706 li
283.889 206.303 li
283.339 206.303 li
283.339 210.706 li
cp
f
283.889 210.706 mo
284.437 210.706 li
284.437 206.303 li
283.889 206.303 li
283.889 210.706 li
cp
f
284.437 210.706 mo
284.988 210.706 li
284.988 207.955 li
284.437 207.955 li
284.437 210.706 li
cp
f
284.988 210.706 mo
285.537 210.706 li
285.537 207.955 li
284.988 207.955 li
284.988 210.706 li
cp
f
285.537 210.706 mo
286.089 210.706 li
286.089 207.955 li
285.537 207.955 li
285.537 210.706 li
cp
f
286.089 210.706 mo
286.639 210.706 li
286.639 209.606 li
286.089 209.606 li
286.089 210.706 li
cp
f
286.639 210.706 mo
287.187 210.706 li
287.187 206.303 li
286.639 206.303 li
286.639 210.706 li
cp
f
287.187 210.706 mo
287.74 210.706 li
287.74 204.653 li
287.187 204.653 li
287.187 210.706 li
cp
f
287.738 210.706 mo
288.287 210.706 li
288.287 189.244 li
287.738 189.244 li
287.738 210.706 li
cp
0 0 0 1 cmyk
f
288.288 210.706 mo
288.839 210.706 li
288.839 189.244 li
288.288 189.244 li
288.288 210.706 li
cp
f
288.839 210.706 mo
289.389 210.706 li
289.389 200.251 li
288.839 200.251 li
288.839 210.706 li
cp
.875 .247 1 .133 cmyk
f
289.389 210.706 mo
289.937 210.706 li
289.937 207.405 li
289.389 207.405 li
289.389 210.706 li
cp
f
289.937 210.706 mo
290.488 210.706 li
290.488 208.506 li
289.937 208.506 li
289.937 210.706 li
cp
f
290.488 210.706 mo
291.037 210.706 li
291.037 200.251 li
290.488 200.251 li
290.488 210.706 li
cp
f
291.037 210.706 mo
291.589 210.706 li
291.589 206.854 li
291.037 206.854 li
291.037 210.706 li
cp
f
291.589 210.706 mo
292.139 210.706 li
292.139 204.653 li
291.589 204.653 li
291.589 210.706 li
cp
f
292.139 210.706 mo
292.687 210.706 li
292.687 199.699 li
292.139 199.699 li
292.139 210.706 li
cp
f
292.687 210.706 mo
293.24 210.706 li
293.24 199.699 li
292.687 199.699 li
292.687 210.706 li
cp
f
293.24 210.706 mo
293.788 210.706 li
293.788 201.9 li
293.24 201.9 li
293.24 210.706 li
cp
f
293.788 210.706 mo
294.338 210.706 li
294.338 201.9 li
293.788 201.9 li
293.788 210.706 li
cp
f
294.338 210.706 mo
294.888 210.706 li
294.888 201.9 li
294.338 201.9 li
294.338 210.706 li
cp
f
294.888 210.706 mo
295.437 210.706 li
295.437 203.003 li
294.888 203.003 li
294.888 210.706 li
cp
f
295.437 210.706 mo
295.99 210.706 li
295.99 204.104 li
295.437 204.104 li
295.437 210.706 li
cp
f
295.99 210.706 mo
296.539 210.706 li
296.539 204.104 li
295.99 204.104 li
295.99 210.706 li
cp
f
296.539 210.706 mo
297.091 210.706 li
297.091 188.692 li
296.539 188.692 li
296.539 210.706 li
cp
f
297.09 210.706 mo
297.64 210.706 li
297.64 208.506 li
297.09 208.506 li
297.09 210.706 li
cp
f
298.189 210.706 mo
298.738 210.706 li
298.738 205.754 li
298.189 205.754 li
298.189 210.706 li
cp
f
298.738 210.706 mo
299.286 210.706 li
299.286 205.754 li
298.738 205.754 li
298.738 210.706 li
cp
f
299.286 210.706 mo
299.839 210.706 li
299.839 208.506 li
299.286 208.506 li
299.286 210.706 li
cp
f
299.839 210.706 mo
300.388 210.706 li
300.388 209.056 li
299.839 209.056 li
299.839 210.706 li
cp
f
300.388 210.706 mo
300.937 210.706 li
300.937 155.67 li
300.388 155.67 li
300.388 210.706 li
cp
f
300.937 210.706 mo
301.49 210.706 li
301.49 155.67 li
300.937 155.67 li
300.937 210.706 li
cp
f
301.49 210.706 mo
302.037 210.706 li
302.037 209.056 li
301.49 209.056 li
301.49 210.706 li
cp
f
302.039 210.706 mo
302.591 210.706 li
302.591 205.754 li
302.039 205.754 li
302.039 210.706 li
cp
f
302.59 210.706 mo
303.14 210.706 li
303.14 193.095 li
302.59 193.095 li
302.59 210.706 li
cp
f
303.14 210.706 mo
303.689 210.706 li
303.689 200.251 li
303.14 200.251 li
303.14 210.706 li
cp
f
303.689 210.706 mo
304.238 210.706 li
304.238 200.251 li
303.689 200.251 li
303.689 210.706 li
cp
f
304.238 210.706 mo
304.786 210.706 li
304.786 185.941 li
304.238 185.941 li
304.238 210.706 li
cp
f
304.786 210.706 mo
305.338 210.706 li
305.338 206.854 li
304.786 206.854 li
304.786 210.706 li
cp
f
305.339 210.706 mo
305.888 210.706 li
305.888 201.351 li
305.339 201.351 li
305.339 210.706 li
cp
f
305.888 210.706 mo
306.437 210.706 li
306.437 201.351 li
305.888 201.351 li
305.888 210.706 li
cp
f
306.437 210.706 mo
306.99 210.706 li
306.99 209.606 li
306.437 209.606 li
306.437 210.706 li
cp
f
306.99 210.706 mo
307.539 210.706 li
307.539 205.203 li
306.99 205.203 li
306.99 210.706 li
cp
f
307.539 210.706 mo
308.089 210.706 li
308.089 202.451 li
307.539 202.451 li
307.539 210.706 li
cp
f
308.088 210.706 mo
308.638 210.706 li
308.638 203.552 li
308.088 203.552 li
308.088 210.706 li
cp
f
308.638 210.706 mo
309.187 210.706 li
309.187 203.552 li
308.638 203.552 li
308.638 210.706 li
cp
f
309.187 210.706 mo
309.74 210.706 li
309.74 206.854 li
309.187 206.854 li
309.187 210.706 li
cp
f
310.289 210.706 mo
310.839 210.706 li
310.839 207.955 li
310.289 207.955 li
310.289 210.706 li
cp
f
310.839 210.706 mo
311.389 210.706 li
311.389 204.653 li
310.839 204.653 li
310.839 210.706 li
cp
f
311.389 210.706 mo
311.94 210.706 li
311.94 204.653 li
311.389 204.653 li
311.389 210.706 li
cp
f
311.94 210.706 mo
312.491 210.706 li
312.491 206.303 li
311.94 206.303 li
311.94 210.706 li
cp
f
312.49 210.706 mo
313.038 210.706 li
313.038 205.754 li
312.49 205.754 li
312.49 210.706 li
cp
f
313.038 210.706 mo
313.588 210.706 li
313.588 205.203 li
313.038 205.203 li
313.038 210.706 li
cp
f
313.588 210.706 mo
314.138 210.706 li
314.138 205.203 li
313.588 205.203 li
313.588 210.706 li
cp
f
314.138 210.706 mo
314.687 210.706 li
314.687 209.056 li
314.138 209.056 li
314.138 210.706 li
cp
f
314.687 210.706 mo
315.24 210.706 li
315.24 193.646 li
314.687 193.646 li
314.687 210.706 li
cp
f
315.789 210.706 mo
316.341 210.706 li
316.341 160.623 li
315.789 160.623 li
315.789 210.706 li
cp
0 0 0 1 cmyk
f
316.341 210.706 mo
316.891 210.706 li
316.891 160.623 li
316.341 160.623 li
316.341 210.706 li
cp
f
316.89 210.706 mo
317.439 210.706 li
317.439 207.405 li
316.89 207.405 li
316.89 210.706 li
cp
.875 .247 1 .133 cmyk
f
317.439 210.706 mo
317.99 210.706 li
317.99 208.506 li
317.439 208.506 li
317.439 210.706 li
cp
f
317.99 210.706 mo
318.538 210.706 li
318.538 209.606 li
317.99 209.606 li
317.99 210.706 li
cp
f
318.538 210.706 mo
319.088 210.706 li
319.088 209.606 li
318.538 209.606 li
318.538 210.706 li
cp
f
319.088 210.706 mo
319.638 210.706 li
319.638 209.606 li
319.088 209.606 li
319.088 210.706 li
cp
f
320.187 210.706 mo
320.74 210.706 li
320.74 209.056 li
320.187 209.056 li
320.187 210.706 li
cp
f
322.39 210.706 mo
322.939 210.706 li
322.939 208.506 li
322.39 208.506 li
322.39 210.706 li
cp
f
322.939 210.706 mo
323.49 210.706 li
323.49 208.506 li
322.939 208.506 li
322.939 210.706 li
cp
f
323.49 210.706 mo
324.039 210.706 li
324.039 209.606 li
323.49 209.606 li
323.49 210.706 li
cp
f
324.039 210.706 mo
324.589 210.706 li
324.589 207.405 li
324.039 207.405 li
324.039 210.706 li
cp
f
324.589 210.706 mo
325.138 210.706 li
325.138 209.606 li
324.589 209.606 li
324.589 210.706 li
cp
f
325.138 210.706 mo
325.687 210.706 li
325.687 209.606 li
325.138 209.606 li
325.138 210.706 li
cp
f
325.687 210.706 mo
326.24 210.706 li
326.24 207.955 li
325.687 207.955 li
325.687 210.706 li
cp
f
326.24 210.706 mo
326.789 210.706 li
326.789 207.955 li
326.24 207.955 li
326.24 210.706 li
cp
f
326.789 210.706 mo
327.341 210.706 li
327.341 209.056 li
326.789 209.056 li
326.789 210.706 li
cp
f
327.34 210.706 mo
327.89 210.706 li
327.89 209.606 li
327.34 209.606 li
327.34 210.706 li
cp
f
329.539 210.706 mo
330.091 210.706 li
330.091 209.606 li
329.539 209.606 li
329.539 210.706 li
cp
f
330.091 210.706 mo
330.641 210.706 li
330.641 209.606 li
330.091 209.606 li
330.091 210.706 li
cp
f
330.641 210.706 mo
331.189 210.706 li
331.189 209.606 li
330.641 209.606 li
330.641 210.706 li
cp
f
331.189 210.706 mo
331.74 210.706 li
331.74 206.854 li
331.189 206.854 li
331.189 210.706 li
cp
f
331.74 210.706 mo
332.289 210.706 li
332.289 206.854 li
331.74 206.854 li
331.74 210.706 li
cp
f
332.289 210.706 mo
332.841 210.706 li
332.841 207.955 li
332.289 207.955 li
332.289 210.706 li
cp
f
332.84 210.706 mo
333.39 210.706 li
333.39 206.854 li
332.84 206.854 li
332.84 210.706 li
cp
f
333.39 210.706 mo
333.939 210.706 li
333.939 198.599 li
333.39 198.599 li
333.39 210.706 li
cp
f
333.939 210.706 mo
334.49 210.706 li
334.49 208.506 li
333.939 208.506 li
333.939 210.706 li
cp
f
334.49 210.706 mo
335.039 210.706 li
335.039 208.506 li
334.49 208.506 li
334.49 210.706 li
cp
f
335.039 210.706 mo
335.591 210.706 li
335.591 209.056 li
335.039 209.056 li
335.039 210.706 li
cp
f
335.591 210.706 mo
336.141 210.706 li
336.141 209.056 li
335.591 209.056 li
335.591 210.706 li
cp
f
336.141 210.706 mo
336.69 210.706 li
336.69 209.056 li
336.141 209.056 li
336.141 210.706 li
cp
f
336.69 210.706 mo
337.241 210.706 li
337.241 209.606 li
336.69 209.606 li
336.69 210.706 li
cp
f
337.24 210.706 mo
337.788 210.706 li
337.788 209.606 li
337.24 209.606 li
337.24 210.706 li
cp
f
337.788 210.706 mo
338.34 210.706 li
338.34 209.056 li
337.788 209.056 li
337.788 210.706 li
cp
f
338.34 210.706 mo
338.89 210.706 li
338.89 209.056 li
338.34 209.056 li
338.34 210.706 li
cp
f
338.89 210.706 mo
339.439 210.706 li
339.439 209.606 li
338.89 209.606 li
338.89 210.706 li
cp
f
339.439 210.706 mo
339.99 210.706 li
339.99 209.056 li
339.439 209.056 li
339.439 210.706 li
cp
f
339.99 210.706 mo
340.539 210.706 li
340.539 205.754 li
339.99 205.754 li
339.99 210.706 li
cp
f
340.539 210.706 mo
341.091 210.706 li
341.091 205.754 li
340.539 205.754 li
340.539 210.706 li
cp
f
341.091 210.706 mo
341.641 210.706 li
341.641 209.056 li
341.091 209.056 li
341.091 210.706 li
cp
f
342.189 210.706 mo
342.74 210.706 li
342.74 208.506 li
342.189 208.506 li
342.189 210.706 li
cp
f
342.74 210.706 mo
343.288 210.706 li
343.288 207.955 li
342.74 207.955 li
342.74 210.706 li
cp
f
343.288 210.706 mo
343.84 210.706 li
343.84 209.056 li
343.288 209.056 li
343.288 210.706 li
cp
f
343.841 210.706 mo
344.39 210.706 li
344.39 207.955 li
343.841 207.955 li
343.841 210.706 li
cp
f
344.39 210.706 mo
344.939 210.706 li
344.939 204.104 li
344.39 204.104 li
344.39 210.706 li
cp
f
344.939 210.706 mo
345.49 210.706 li
345.49 206.303 li
344.939 206.303 li
344.939 210.706 li
cp
f
345.49 210.706 mo
346.039 210.706 li
346.039 203.552 li
345.49 203.552 li
345.49 210.706 li
cp
f
346.039 210.706 mo
346.591 210.706 li
346.591 203.552 li
346.039 203.552 li
346.039 210.706 li
cp
f
346.59 210.706 mo
347.14 210.706 li
347.14 208.506 li
346.59 208.506 li
346.59 210.706 li
cp
f
347.14 210.706 mo
347.689 210.706 li
347.689 208.506 li
347.14 208.506 li
347.14 210.706 li
cp
f
349.891 210.706 mo
350.439 210.706 li
350.439 209.056 li
349.891 209.056 li
349.891 210.706 li
cp
f
350.99 210.706 mo
351.539 210.706 li
351.539 208.506 li
350.99 208.506 li
350.99 210.706 li
cp
f
351.539 210.706 mo
352.091 210.706 li
352.091 208.506 li
351.539 208.506 li
351.539 210.706 li
cp
f
352.09 210.706 mo
352.64 210.706 li
352.64 207.405 li
352.09 207.405 li
352.09 210.706 li
cp
f
352.64 210.706 mo
353.189 210.706 li
353.189 207.405 li
352.64 207.405 li
352.64 210.706 li
cp
f
353.189 210.706 mo
353.74 210.706 li
353.74 209.056 li
353.189 209.056 li
353.189 210.706 li
cp
f
353.74 210.706 mo
354.289 210.706 li
354.289 209.056 li
353.74 209.056 li
353.74 210.706 li
cp
f
354.289 210.706 mo
354.841 210.706 li
354.841 209.056 li
354.289 209.056 li
354.289 210.706 li
cp
f
354.841 210.706 mo
355.391 210.706 li
355.391 208.506 li
354.841 208.506 li
354.841 210.706 li
cp
f
355.391 210.706 mo
355.939 210.706 li
355.939 209.606 li
355.391 209.606 li
355.391 210.706 li
cp
f
355.939 210.706 mo
356.49 210.706 li
356.49 209.606 li
355.939 209.606 li
355.939 210.706 li
cp
f
359.789 210.706 mo
360.341 210.706 li
360.341 209.606 li
359.789 209.606 li
359.789 210.706 li
cp
f
360.341 210.706 mo
360.891 210.706 li
360.891 209.606 li
360.341 209.606 li
360.341 210.706 li
cp
f
1.743 lw
1.64746 232.845 mo
365.851 232.845 li
0 0 0 1 cmyk
@
21.2036 232.845 mo
21.2036 220.002 li
@
102.813 190.283 mo
110.452 198.108 li
f
102.813 190.283 mo
110.452 198.108 li
0 1 1 0 cmyk
@
110.757 190.283 mo
103.118 198.108 li
0 0 0 1 cmyk
f
110.757 190.283 mo
103.118 198.108 li
0 1 1 0 cmyk
@
111.888 219.3 mo
119.527 227.126 li
0 0 0 1 cmyk
f
111.888 219.3 mo
119.527 227.126 li
0 1 1 0 cmyk
@
119.833 219.3 mo
112.194 227.126 li
0 0 0 1 cmyk
f
119.833 219.3 mo
112.194 227.126 li
0 1 1 0 cmyk
@
218.866 190.283 mo
226.504 198.108 li
0 0 0 1 cmyk
f
218.866 190.283 mo
226.504 198.108 li
0 1 1 0 cmyk
@
226.81 190.283 mo
219.171 198.108 li
0 0 0 1 cmyk
f
226.81 190.283 mo
219.171 198.108 li
0 1 1 0 cmyk
@
284.041 190.833 mo
291.679 198.66 li
0 0 0 1 cmyk
f
284.041 190.833 mo
291.679 198.66 li
0 1 1 0 cmyk
@
291.986 190.833 mo
284.347 198.66 li
0 0 0 1 cmyk
f
291.986 190.833 mo
284.347 198.66 li
0 1 1 0 cmyk
@
312.917 178.236 mo
320.556 186.063 li
0 0 0 1 cmyk
f
312.917 178.236 mo
320.556 186.063 li
0 1 1 0 cmyk
@
320.861 178.236 mo
313.222 186.063 li
0 0 0 1 cmyk
f
320.861 178.236 mo
313.222 186.063 li
0 1 1 0 cmyk
@
75.7295 199.108 mo
83.3687 206.934 li
0 0 0 1 cmyk
f
75.7295 199.108 mo
83.3687 206.934 li
0 1 1 0 cmyk
@
83.6743 199.108 mo
76.0352 206.934 li
0 0 0 1 cmyk
f
83.6743 199.108 mo
76.0352 206.934 li
0 1 1 0 cmyk
@
134.988 183.678 mo
142.627 191.504 li
0 0 0 1 cmyk
f
134.988 183.678 mo
142.627 191.504 li
0 1 1 0 cmyk
@
142.933 183.678 mo
135.293 191.504 li
0 0 0 1 cmyk
f
142.933 183.678 mo
135.293 191.504 li
0 1 1 0 cmyk
@
21.2036 220.003 mo
16.3545 215.15 li
26.0527 215.15 li
21.2036 220.003 li
0 0 0 1 cmyk
@
.75 .68 .67 .902 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMS+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/P <1C60D8A8C9B67DB58874415D94C2E559C88E36CC055437F3DF216575C839AACCA6EDB9DE2233509536944435A6A5FF417152CE02855876750F1D682335EEC3E41C9ED4B523CEEEE05D751D6FA45C4F6D05E3066B38F21D39CF4DAF8C04DD> |-/i <1C60D8A8C9B88C08555B3F0CC9C107C8E85C213909EEB355601DF6E16718C8> |-/p <1C60D8A8C9B7CA642A857E43B6E4584C21053D20464CD900CD9FAC314FFFF57B29E654571390EB20E46B7B48BB4AFE15157A1CE094B6FF462457B10AE9964D7A692D9B23249B54E98BB36FE18513C4E36124EE91E8B55E0D32F87793F9BE4B91CF07577AD6B1D404AAE3A88A4BEF896F462E4ACBCC0D5DA06B2EBCCC22792F58753666AB72F6C0F48104C745CE06B90FA6FECCB3A7C2A512102AC3FAB9143D8756393E66D37DCB1849D10BFE85B4757E9DB634D20E735C4DA1388EDE7F62254793AA9AEE6F6333E1CD0C532177362FACB6E0BE0F0AF66D33E6D9BDA8C896BA2F385679C44BD75AB95077ACF0FBEACEBAE1202AAB81> |-/r <1C60D8A8C9B81F2C3A9A44CEFFCAE2B5B722C19E625B807D4F857B444383631BDC722B031B7D18A27CB4F561CDC7869F3EE923C7D65D3D994DE91855248F92102B302065D5EB4599> |-/s <1C60D8A8C9B7A73DB93069DBC6375B57C8CEA5298ECD155D330F5DEADB84BCE0F3B9931445A3E0A23408E166E94ED9B84A4F77C41F0369937E8C2C9831D0AAA0C414A32B88A399DE991143E3662049761DB0B0648AFDE42A4B3062552586F0EBBA0F2E7BF3A4DFA292E6EBB84128A6A9679FD085A8A3EE7D119B409E196F8DD013E73279FEB2FAD41E214F19FAE59B2DE112620184CF1FA5F8444A4C3EBCD7B771E48653A08D11A41EDDC944A6794EED345CDB91C69F6C018931F290C225B8C2B7916D95BB63059EE22EE396098AC463522A22CE66834854EDE7E984119074789DC9CD95809278277DFC5F487D01C620166BB029D76936EA500E2DBA569CE0343EEFE105A4474A80777509B8E0D1BF6BCA9D29EA70910F3731811C708532E5A8C24D816BA3F135B8B9EBA4D9360824E69CC0DC3D45097EC5A74ECA5FEECBEEBDE4BFBA7F33D81257F3182B67A858EF8443FF7D0CE5> |-/t <1C60D8A8C9B831A983F3E33337748713E88A1E5224168E0F67E7570999394DC65B3C1F9E93E779E823D948B9BA81E8D28F7AA76A84CA0D8886E947D6DA351FC6D6DA2491F91E4DCFCC3CFCAB956E68A2E9A2422BEE8CAB716B00E0C2DA95565D6409476535> |-/u <1C60D8A8C9B7EF322440D101B9C5BDB658AC9990163C1DE216301D6A78F7E75DE20D48E148DE5D0B10EDCFF1F56F3D9DFED7E3EA1166FDE58BF5A95F3934CB8D172597F9074D97457D8256FE204274315A9853C456013DFC9C30B22C57D3DD5E6E54038141F8007BF38045054A25F79544E8DF7208> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMS+HelveticaNeue /Encoding getdup 80 /P putdup 105 /i putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putpop%ADOEndSubsetFont
/GQKSMS+HelveticaNeue*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /.notdef /two 29{/.notdef}rp /P 16{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i /.notdef /k /.notdef /m /n /o /p /.notdef /r /s /t /u 90{/.notdef}rp /endash 14{/.notdef}rp /fl 32{/.notdef}rp]GQKSMS+HelveticaNeue nfGQKSMS+HelveticaNeue*1 [8.4199 -1.03115e-15 -1.03115e-15 -8.4199 0 0 ]msf166.577 71.5967 mo(P)sh172.033 71.5967 mo(r)sh174.685 71.5967 mo(ecursor )sh205.4 71.5967 mo(transcrip)sh238.457 71.5967 mo(t)sh2 lw
1 lj
10 ml
60.6206 103.047 mo
360.857 103.047 li
@
60.6206 91.105 mo
60.6206 117.959 li
@
361.699 89.9863 mo
361.699 116.841 li
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMS+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D0F46595A5E01ED197FF959235F571294F> |-/A <1C60D8A8C9B67DB5878EE221F210438E2D1F518277932B525F370D850642FD46B0F79A79CF11337DC6AEE53D885E0E1A7DF59B4B5DCF38DE8A6C> |-/B <1C60D8A8C9B620B7F30120D77E6D1DEEB702625C217D9FD2EF8F935A91E0710EC795439CEE068523F9441ADAD7136CF6C94AC238D0E32C2A55259426386008D2D2D9DC469892AC55EB4139B732521898438EF59C6F81BA5322CFD97A7E55FF8D0B73942999B91CBD84A9B4864D7E6EB1337B0F1FF485E0F3E7AB554382985B41CBE193914226C44F0A041326ADEE636F92991AA36960A0AD1A00887B4FEEEE7A29D290F98B2FB7C5A00A58157954CE7F148E041C16DC4164B592A6DC826C2194463678EBB615C423182AA552A36C586B5611E1B7B94C2918987FF33A458E9408DCA4667CC0> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMS+HelveticaNeue /Encoding getdup 46 /period putdup 65 /A putdup 66 /B putpop%ADOEndSubsetFont
/GQKSMS+HelveticaNeue*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two 14{/.notdef}rp /A /B 13{/.notdef}rp /P 16{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i /.notdef /k /.notdef /m /n /o /p /.notdef /r /s /t /u 90{/.notdef}rp /endash 14{/.notdef}rp /fl 32{/.notdef}rp]GQKSMS+HelveticaNeue nfGQKSMS+HelveticaNeue*1 [12 -1.46958e-15 -1.46958e-15 -12 0 0 ]msf.0717773 10.2832 mo(A)sh8.12354 10.2832 mo(.)sh.0717773 143.782 mo(B)sh8.18359 143.782 mo(.)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/GQKSMS+HelveticaNeue*1 uf/GQKSMS+HelveticaNeue uf/HelveticaNeue ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.1.0%%For: (Chris Roy) ()%%Title: (FlamencoLocus.eps)%%CreationDate: 2014-04-5 8:47 PM%%Canvassize: 16383%AI9_DataStream%Gb!Q;q0qV?cKKZWh>u?Y67J"I5bK?CkBWX:6;'t&1@2@ApW%^UCY<^ebR(N!3T'6#/I7@gag*M?Z=QP$V89Orme/k;K>.e&4r<A#%Ya?6D6:MGRU\ik?ASfMOap>;'ZDB=%:-a+#'JG>!.Zd:0>a@mV.YH=E8*Ngp7t[*_*g[,F_.['ZQiCdl_^CESoVN4L:jTgk^VZgR%U\2kGW=A\;P]^?trM<3!Xi@=q<LDB>e)@O_<SI0"M?hR6XkQchK@*J)''B!(#Dp+_<gn2YmF1;q;]-;]acJ!d@Cg?rL`f))4HniY%I]GDE/*D^DV1%ic?B=&6mL;Bf.?b(t"[W\V/Y>-FZ*d!!lG)!#V=N"S:I^=8GL1hrX!gJjiD3tUNJ_f@?\[T=U6l5pP(^P<P36$E%)>4s^Ks3Y2:J"u$aMFeRXQDon`OV.Z/sh_i&NsY26qPOuphVRQiMBL3RoKj[%AWjO<W3.1Cp]H>iEU@Z\a'/)iWYr?FHKAik&T0S%7Q:8uYWN:bH,@1W6!NRg_Lbh&en]Z3<C6cY:Qj\J1&=]nW'_#?;d`3@/5ltUBoX/4-mQT05]AV\qU^@(9P"k#a^jtX=Fl[R=YUj2%Z5@sI)s3uUL6:(P$"*`85Uc7EC:&'3N+\pR8%2hrk->s.c\nTQl_A?%Dr@,sQH9B76qV(jkNRI_/ZSSVU@_IN;26Zok\s?CT3Ms2%f:SuPp)@;U2-uAArPL>38uSZ[.ud,q&C-2ID!`a&LJ.Y@T\jbQ:DDbDRt]19*^7bYRYlEN#bUTe']H/BP..h;PU<64=ic<n5o)X-%=#LGsZIrE@_T_0d:Hf;7o&pTVkOXccT8-\@"J:dV>_ZMF16a>ViD$ikH"o3]>H;>A:qB\[pU(ng6RX;R&pagQneOjGpFm0:'66C0%i"L,sSS1a>4/`a=66<';HpYLq-V.C='7@YMW"FCY,f1o1)/9;H:iH,`<2^Jg,hs[?+W&W94s<_(#&1GmJ9&M:_F;<fp`q.WbmF&r%G![.a%[>F#U,g::jF[6E-U8k-88:lUOVWRfa9D73/PNZ@b!Q'b'7N778Gg:PTc?tg'66D;i01Mlkp;"d"@$:iI/k[nrJ.g!ToX.5%EY6#_^6"csl@EtB(Vr`ee+OtGkTAl:g<lJu[=co'f&SF4%mD-Ql/,<%_@of_4s:Hd/ek-FRuSN+3J)hSDVBk[?_P.B-mq03oE@9.%BU]XK'C#kT$!tJ-TU`FrXW*rSE`)0+3[mk]P<VAo)4@9ZP;Xf$+V8D`O7Ze-[$*8=-loGdaJ+(1q`a9#[,:3J%nc/9LlQSjPpr'm%Fo[CJ-_[om%8&.IQf9<18P,N:n/m#kWQ;,iJjA2VhrG<t(]<OTj=_44,a+mOPJ:@_r78X)T.H2`Z:o8]l<geehWWkXY>c^\ol'C;%MH22P7K4]aeLLBsJ!3)lq]kYOg($;<]9;(D(\pPn'/J[.<3$bq=p9/-^H)(D-XNt+EYV0]WC!^6Mm?HcTEg]bXJ2#[E#DQ.(J2nW%"hcQV:@q;5Dg2X90LYh/dR$f/#/c$T7ED6j"%[f7Kq9M+8bo*NWrVRH@)g*ZISd,?Htl4t`XGWt+RVe-2E5?0i_[7PRL_(P*C^HN%/Cc-YS8*raaqSnt$qRqXHK5(7=JXa7ZBk>P8\i7X5&_-nL18Ga'18]r3c2.F"9rUZRCk=rP>Zs)>,^AbKF5XTdZ,eGk\ZUY!#%f2%KT*quV$p;*d?^h0>j?Z@Q;WBbUOIc-KkL<J'STj[Yc&7K<Hs1oS<7gu;i0J.;RiV?#p^64XaQJm!kJ[hGbVU^S4</e.Ont3`K'u^%2k^hu#@:@U%#Mh,7H'S>>=sOLp3s-p:kKD>0@Vj\L1f"?ADe1OV2i;GJV3c_;elmm3SYg3mOII:)E23?p?K!(*P_sQi,P^gBQ\]h%$!*A@P$0XM<?8QqT-Ts4\A]l"J:@8hC(1&-cNe%>;f;\.-7q]4#b1mb`N"`fd+T<r#'m5E,`rQn:Tf:r([[t45uagP\>26h$2I<]%%_1JSn:NtWk%ID]W=sRcFI-!r0eAab=%Ob3#2#_`''??M.9-1KM9*.Mc7`c8h'0iFV27<6Bs&);8_nGY7anf1ABG?0a-D/ZW4,/u%Z79GlPo+ZKYXl8n')i@/`!hg]Qj/^C8cpC/^5+4jp/?<A&LbQlX7-<IU>Hi^!`1/j@Z3,dHpa%upI*(M@E;]1cm[#s)eoSR&WQQ;%TbX0X5NIAP-mab68e];Orrp=CY!bp@(b3d)dXXubW,YcUIfqCb5]X!F$P^4'Tp$MuHk^PG"e<@IF_l[5bS(9moqjmBr.gHB`uDed%O[/OXQ\!Qb`E:EQ&&6;UJ&='5#@.O2H-8OJcq,/?dngs%JP64c5\^iJKBjguI9ueHJ$\$3,!4tlHrp!u5^@mC'iLLK1BVOQDFQ.Y%_,BrXVSS5a[eij>chcO+Bf#c*NuQ[jbC?bLi1H+KG$YV'3i#)'U4Yu9<1-?mKA7g;=UJ(UX'Em^fh3UlmAYF1#[Dl:Upi>F!8?C=%:"I)$ImOIih`67OGkqp8ko[NpgLgh`YP9OOnsjZ`n;?_#r?S@=#EhF2^c,q7,=cmIn(m!1`Ff"N\$n^7D%+OS5D)%!AU57s.%mb3%'DAH6r4c`pr]<cR1;6(E=:M,U'p7]6Ja-EJ/*cg`q(*=R^O^cCP`miIbdocVG(<5LR@\q@4YTn^6-*V0n4EI$)-ul;&p4"G&n$[G%FEg/o@1/_tIZq<u3_'lT3DoqD9rJ.&6lHeO1*U[o/CY?3dmjbl84Nu@?)+V1Q6K,/OT#VJBjW4#MPL=*8?K]h+="/4'25G!8\'R1%@*C))TE1*MOk%>FJ%]^7$Ff/k;N^%unMaYSg'1=PJTCK)s)"U_rfA@Q%A'nhZ-G08EBS)4U\UQ>JOECMM\%s-X*QSC3$Fo!RD-pG%M1nZ-'RDF[J)m$k%J3:D_86f-l57u5)O4!McMdr`DOSZbXEZkF'l%i&62R+u^JL/oO$NAG0QUod+[^Z!3ok=@EfSA_Grd=]_*BF#%]F(t40@=dt&j4\s/G5\bnQo%.0"'%\BXJth3Jmp7P#u8<R'CA8Ya5BO')\'>+edb(,SS<%L6U;&rFhp]TGr;=KQ<>1Nm?n24GD)=%bP@<#(("!j6]s+>5O.8QSE<dX$Lq0TqJh7Uc=sUt%d49h0ngqb$)LY)Pk1+PS>pm^<%eXQ>4<M9[Rdc2<TPLM%4`ns1/P(C"P85"%\.B\BI$&GFkI=\&B$WK]99HXoW>@$i`\g-FMd3e`jsDnqm`uX%`^%#U6+)0?[-@hA]k>iE5^a34In'#s'iD"U-q.TbBtapkNaG3'%]!=S5l'`+_pK=1XZ)KJn6RI4LT*8%e#2<IICo!'XWEOZ-s1lYpWhYe+3H35Baq.O*&DEV\V5/B0UqF_;MP0YFe,uCg0YS1J';;dl%I1+\++Hq'gp#$BGKC0K%4\3M`7CYgcQ1-3>m9S1EWMEr-?Nb6ISPD3^2#9ct2>K@L>O[-@,;lCQ\X4_ZJaHF%Eo8Me"1$#>P0+1%%I?=Fqk0R5"bJZ1>F+9iNas3<ZQ.2,=j.SkS5VPK5k=%LcQ"6R4Mjf>O&_q,jjbT3L1O_p@kAsN5-@"0U7/-p>?nP5;&4@]E%S7em%5sFS/OB%8//6#0`J1#lsK_TkL*sH)s#cb:kBu`D?OjkF7*uXS:&<@%SP<MT0qdGLmD[E^sOQ7Y##b`_IL_iIX&<@.oc>t;'#Hn=$%@0jf`+qUb3hhXh[+a^14MA.8]!VrCqM!IIc![Pj<+c$b@X&+'dacn,SPG(eERol&RD?Ar)HkT;>WX87'f0W854_IdST>KI/SF0)r%]p/=uV8%pKgs<B8g)Kup2O)__b('qJhl3KQ;L]"HK.1(P\S3L]:+<(c%Ejkr[2W+-15g!lXsd42`(J#9SY[*uml:E0AiT^<kIeb#%^Eh5F.p2Q.3NFcrS\Odl+qO_$#gN,p@J:etcbt:Yib,!/K'Id1@G;jr6*0O;V(-%Vai/K21quSA5_3k(n%ba'ht\JU:6G=Ym,"Mc%%OM($]ArV]G/hdI8#pjafQTG@#<"C;!2X!$s1-Q38)^]P6M9d-eJYP]B>2aEL_Q9=s*o6,XP7;q?U_$o2XFcp:Z]D'CbcsYSPA:B%6#Z6YhJ(=2c':&P%RX#80q\H9%OT?.g]-IdiI!Q^0l$W_^`KIsZ/&DLkfl(m*22!KE_C+jHbDn[g1X2.9)<YXmBr5O)9iphhe4;S%,YJ5,9/g&1;/?$Wkp_+[)gWQ'^4CjE-u]?V%&F\:<+1Y6>1"r'h^*QZ9V/DQViSZLdK>YV5k5DP]E9bSJ<2N4=f3P2<6lIT:URk&%`lEii9",C`MNVj#I](4"A^l?9N0P1FY=ggP]q-uN%iZbO_!j.>9)LOBm:HlKBnWrC,&$@cCG>[!eG]04UaMp,>Cd6@BgRH,0%D%;%g.E_uXJX=`]uKh'Ua6Ise+$5C5LhR;msgRNqIaP<%U&AMn%ksY;%T[D?\.C4`jdnn_%3!.J^RQb^Je\PQ#%!1eP@]F[sF#Ur.oZ#%\(0]9!a;QuDh&bX9#emc27<!2R.QWg7/o\8U%EZe+k1m%Cp]FKOYfO)m;2&h2*HIRdVg@nd`N+"_AsN!(^$U!#Yb.h:FD"dmU'8`%+<&]cSj-maSPb$HBQZ?S?qTr[dHJTb0XsrjdmY!P]*H3C*[3_!2KTMcf(q@A2TCVD+T?qt:-Jp31$TsVFHPg^<T^h_H:CmZY"Df;%5gg1qmWtO;3Zsj98>\0I*j,/Sa`0[ggot1(aK%5+e9KbC1SmZ1r%qS%kjKaMA8ARAJ074JN9F+7F5$Y-N2AhQ`cQgPiLmB%VcsU0%/p(C<Rmj0k\*NSV7k'*ed7^cT(5o/,^GUNNd"UtY@E5Wes7'%Apc<999_PDk58(b&(/hBqld8\Brb%$0n6''<dU><eV@dU.heAj@%IUpp`IKp=AaZn"""*WT287!bTBOLTIiaj1N*?+[9DPPhOFuj>:Y91Cj3B\>kg=$h#$=*dS!qHeOQh0IJ+6B70%e4fnNJ%:jTeN+b%V&Md$i,=m<]UZ,Q]h'G"n/8XoU&k!Q9)h6b$Q0F0pJ=q?]DC]g3U"/Qag[u+&n1#D@duHn+4qbV3ZZ'Vq<bgR7Bc!O_/sqKmgMOf%@XHI$&:9N"7Vk,$INcNC&'*0&rTS(NSLCI,G8PN-<9lD28sm7ZL%.t8m9R;tF9\K^]f8TcpA\$:K-:=t90pHDI+K2E]g8:b)Z@Z(%N70Z*a'GJAcPq[13c$t(#>etg*eGa6M\9Yhi0&Y:jTA@inej(QO;JsQYfTZci?ZYehGjqA;ieeld<,:(^)d]/)Hc#M%D&!e;^)0j%#EEk1TRYN?%'j>?1RKm38!Es6/1@t`#5%K$)1&iEF?)70\h,uH2X`LsjB[k-Kgf<lr1j!6-KQ48EiZ*CrI[eI+#dlK%4(DsW$>d9%VGfSO)+$S`q!,1?<%uP<B+=%:dJun4?W\289Y(Vh4F%#`+Hq;:=p_$dqT,2D5JdS'\c)T6,CS;@;8O9GoMtVj8UC6!$_N-_<)*dA%W@S0BA9/;"_$T)h&.Ja#_Y=)'+,B(=$RPa%b]Da,nC%a]DPQ:i9:YMnR2n]RD2,nudr`sG%38k`E[O9b#$F(^-^<>Pp*MFVn8fHH%V+/^lIqj35C2c8.L=KMMZ`27iBEiu614]&1)01U0!h.+P9?bh0.s,+GOAK%F3mo_aa7@JQ#Fo4g*m8Wc'cC<Xk5VC%#`pL_!Ot`P%NJ\o9fXE^9NLCN0Fg:2e)#ZgNhk(m\%bcg-bKY"mmiOC\BIcY"F@Y.611cSCgjlKFdAZU(!O2Y"9Wlqo19j>ATB$U$kl\jAm4E]Z%rW,"^De#jHn_7E1d<H<6OK/]?ho;aI20r2i(Xg>6q>+cDO_cKnA&GMMV;+AB9C]ichOsPD[/Fruk1oaXeuRKCnY*UV\tRDhV+aX(%-+rQak$CmUccHLMPnUmsheb2sMP#ptfrG(A#(#5]ha8EireGhW<3J/":Bj&`=\8>MqI*gf!4rDV*ZAL:]AjtT(PnCW,#\Di(o?9<%^]'/!nUGd#N-jC3s)qNrk/:5ZPHs0>V:+QffC`M,p>j[u$`b0FZQ`K_;6>(7p8ZZ@!cDp@eY5)(Zh:'UB6[DADdPm%5@,6#&.joF%r8X\1s89nf'2Fku".*aZ#8:VZ*%RQd3Bb5TXfQ+5$^<lAH<5a`W28FY?2im<+6fa(1^QChUsVZOd(FJ]kG2UuXa2)eoI_IHUe!72%LEbcoLI4emTEeNtT(pER$"B(BbL(kAhN`&8*-J!7_Lq(U<bK>1a_:0<qeqF[;LF@3W;eIke>Bo#or?dkFD+4?\,N$rPeSTC!G]d1%l?.m@ec<qI^Vd:W4eMudcZ*]@R#6h@Yk4La$WVO-$9&p;7_`LM"/[9[OYTs,Ijs?m?cm$fI\a5L!K)I>CVD%+[39qQk^Q8F+%l<U%0SG,p1BKaf:;L83HA8Kfm\J7sp::o;*:d60(,Z4/HF_H'X"f@XHE>\`8S!FV]K'Yag0pA?ht4N4e;7kfkVI"7Sj>bj`VBMamo&CU%%k`^oK"`0c+,mf3)o(K+6$e1rkI[C[YsIc,`CgkS%`X`HeSiOW8U++sNeb<f5:;H<2gLP/kCp.aA]7V,Rq$-Jq!eAS7KKTN+GpF\%d"hbKC+>7.7M-.?Pse1_2T:;rpd?!LL+dORlM_<;RYLLqNNCs*&(C%em\3sGM%X^CRM]ASFNOI:+1/c0GR/e\jZ,HKSkbMnGP]3"%I'GT6?(\34>oNIN8Qb..YP#8M\3^!d$]]Ng.St@S))_9N@06hMej"tpDEBu3qBJq"I!F9\,$a0rca;<Nq''h`:7b0-6W??q?=kKT%PT37'o4[VlB:*BIcr)9e>*U)097,;cRAb#q\mn[**"N9dC&$-oX*mdnD!tf-h:ABCnK;),:'Omu'VDd`jaY$&DJGV-&s-D`S5mq(%j-c)S^b`/h!+i*3T3U\?^#Z,6p'6C>KDn&EUPk/#b=\t9$U7s<b?%.;No"gMq.dUZ@!'uaN"r?5?1mF7YgLl%1pi?3`?F]H`cO3o%o.CnR3Zk[0T5htUB3N?N8h?[1O9<=4$PqpV8G13+dgD67::0#^%'c<i4ucZ)N],`F\]pPG>)f,24."t2I)_`$kBTm0P#l)MhJK%F%*If9lLpI[a#_372PMrc)o)T-jC`r<eb^2EJ\U;C];&ImW@)r=gig,o/[QEmi9AsX6QmhC!E*EGu`ot["ITuW[efB`5kVF$c;He^%%S*FZYjg3$@"7[6u12E&qfj)>$a&_Ro)BV=M<9rkcN6NH3.VMOk@B!bcfu/XZ&J5h@&N.rFhi+<MKk@8@>"TBMkB^^Z2)=9:lmu?-%D7cX7&VK`m*M0gZE8dV2ELu8,0N%gIn8PYu/C";5UUFh?afXQk^ia4L/o9A)1="#JgJ+?I2&N`d[acK-Vb[O2_e[NBZ#m$q@q`.3%Xr;d=-cdk-U)=b)TZ<@'82"bEkBZf?V2&H&n-2(7rJ-?]lM4HT)!61Lh$8,KiVASg!p&%F()/bb9u[SG\sfN,q\aql!)$"/'A/gc%L.c?koIZIRQIlM<d7D;GW)M5^gSq2-cP8NE[Uq&->dg`ZAM;`IXFn?-Yk.sJ0CtbO_T4bq1XF]#3/`hEOXu3<0cV!LiO=$_`K8NZ%-S>9SBVoaf)SKIpdQq`V,C?k3d>-jXYePE><WMqDmYZGjh&SCN-,/3A;'O9A+\TPhLP"Ym+4NqoS`uP8ctYA52Dpg'Cb%Od1h!:b%(q=AKfVF#,p1m#2a)6lXc-r^J!;B6jcSbS%h)uG>p9@[)Hk64fP$PE'IT"\e1RNR$2*7#.p%-M=EDg>i#Wo4IV%UC3?)>D^8e\H8%Fhr7r3HfOhG5`Hls!>061e'LhFF/lq=[/jp>7X*7A=Ojeh7i_%cJRj[#C<Qr!l0tU]$JAKUQ8rUp0/S@PWl1k[Y)(S=;ZMu;gjQC%acp3fCem2LN4g@@#0q(:14Z^Z4i<qRHLQSI<F'UD3>i($jH($Lk`,.7j;`3#bW.OPD9?PcR9D\fO>O_!j.f:]3#hHDC<2q<'94SE%gu7pN)"ilFCF7!3$/U['Rcan[oU,=5g#_NM*t@$pk`Dds"f\7td"-/3?$ad]3rMWb4DgN7@-0$-hJgs^kQ[/Z2I.eCD;"mXo:<a2%eIO^3'NrKISUI<GEI?i=$s\MicADh?dY=jPZ%@qW')WaHL(A9%-5Vb"#.CBmZ84B2O^"lcO1Y[smFd)^E6ZDDD*UA#&[SUk,:ck7%?"=ar@3.-\EG73d:J-]g/)4/d?pZQZ%\1bHAp<gp(n)b8LU+cV;!CPqddq*8OU>Q?W2it>C5u^=ZUZ'hlEY:'eu5,@bGEf-VZ-.S%c\5SbD:7fc$OaCt!Qm39[JFbBL#a-F>')dI?8Rj^NLiINpWWBr<QELB2]kj;'oniJJh093iQ8cfW;d;k#G_;r24i`jD_QcGNQ3G^%ogUCT#&V6M-LQ/Y^)mj/$]=):]"n#Js1@#HqV5RS#*k7NN1FZqeS=oKlBVK1J8JlQrTJTJE]>&8n1p237t=:*"3,WTSF'\_ZEY@&%>_))0.TTD-8:n7ec%!Tq&[DO/*WcN\f@qZ#$+@,OAa7-l1BrgajYQ=m)1BHHmTF\?l]G&r7(KrTXXr)0]ONjSD78.>ASI>s?Pf,f%1'O&JN$gbGqf(227Le$Me65$XOAT=$Qp&,Kr=jj7U5\paf8LA/,X7js0O[LiZbo)47ns+>m%A!=!(E@0c3n$""b$s\[GPh:J1T/^%4[@++;$.(qU^]9rkdsY0db,>%Or(=E#7%P6;4pee26eC>k7YD9bqtb^S89Ho5:7X;$(7oRJuHAmd%9`b9l]oR;Q=j0p$_k@bO%cq%_`d@"DhZ.'AbInmHWjd5Cn09FKVFSs.s2od&8L;t@cr(QIU5DTmHZ0ehL:8jUf+!.^W;@fnHgD=nt"GsHf#E.Z7'?-ZTjLTanOL3%G:.EJr@PMYVNaTGSOUBN]DZK!U8@UJMdg[9:eOdVb"MKnrSlj7EBh'>Y$LL.me>.nXYD;RpquL6T9hF2B7sf#5;'YoF$01N.X11(%OlG'[ohB;(Re`\c59>TSUQI6J6kYQc_apO$]+^%/\Psi"[<iiab"44knbI;J8X:DQ:pnr7<=;7Gb3_ZqW)h@\</oI3@C=uuY=k(C%]ujjPp'OfUWtesd.YIZr<O,/qem<d'BLmnnF)F3Q80po]nYoi#KE\A4)J(C(/q*bj1M;;O*'H6P1+D`qSgJXGO]B(5WUs;q$e'n*%-Mgm6WL,-,7\e5urTGP63<:\!/&DV+h,)eC@qJ:\XJ:ApT4nRio]7E(EC;9^Lu0Ej;QVR@j7gsEn)VIhBt9YFCa90gUgs4\G=&m5%a[_9HGeD\YF_b]6]XBR4g*%J2hbu&1k/uel*E'&[m;A>R@Or@5G'QO5m,[PrAfdPSg3)Ys[\c^*@3KsJ4h7pg>$i<jLS>9$bq?1?%*bS6<>4lM"g_((tC#$kfV)pC]:"E.GbQ&js7G1]nXR)lVce$`AXdZfGeU&,^^Kt_WNC[DG0=T2!#Gd'_:fP#?J#%4o%+<bgor01a%>e5!aArh$a&g*)@M6W'TeV-;9SpS`;Ii`O\+W[cR4R`hOV9ep?8ZCGhbre,(Pp(G@e@)MQ[?'+cjc=@mLQnjQ][Rp_As]:MrKFOI%'_O0_g'1X9Ge^XV>3CcY8hB^EbMLA3`ib3k+W3'FRS\,#1pd-ScrQdRCBgSq>MO3NaTKt6$dsH75Y#R,BWgUidpka8MV?$OfA(S^%p?I=<_O[dCjR&'Nr"f"?7]2Sr85[!(D6A^*Fj2N\.9@_VJFk;4?+n4Dm#`@V/#Q1(nJF`QHEsNQ[qkpQ8#04Y(TRD@6!EGhO+pk^%841epd]jY&WU4P>gG8PIGdugjo_,E$1iYj.`ng#'<A7>7A#?i/lr;kK04%t$OhR?6+#kJCHB?i<4/AO31X@iN1@?IU)1;9<r&MsD%U+Og&K4NjOkpUkCLg[$PW3rc=2dEcfF(gJ25#!Xup0Nn^KXC5a*]2?Tgma2..E6M+81)6YM*E%?ehL?:D'uc15l,lP]rr60J98]'%C#6RQ=8BbCCP6eVA5R8teSU6ZoZLc(@B+)G.Jc"i>'f*;N1t9$1qqY"!7I*3-64@G:!41j.Dc."':\kl=]3jWr[;InKc@qRkrV?a%Xq]#K7\hQ0;5;eLUn"umUS9NZ]bc[Np?H))/:XM"6:jUL\4E$`daCC+^F&5?BtS#:,jjKj^((LI\%5%pp)bp^T3J5AT?+I":*&49%d9BarGahu.G4KCBXI:!KQ]a/<ccZ/)V0i+lS)<p(QgPmOk0=JEcY?7aHS5cmQg]s2jj1s4RcE.sYkm!-]k)&Jj$\AuE%HFm4R6fE%^-,\82>8-JJppkYhms\hpRS_L]W(NtU:^5t^?([gk-rUQX1mWKgIaf?1(hQChVUbkl%ij6]B;dpg[XZXoJO*eHHU?qCN;VoG:`]@%/!MY+hu8#TG$^`r7KL]OVW@OO:rr"Y42,S)RodX*Dc\0a#LD_]**]N\:R[/NksJm'M0F8MN!Ls(Jg8=3IBL/p:2=-kD48Idiqd,s%X1g0`[S1VChs9SsVmf4cYHR:jF4fXRqX3D#)>c=uEN.7Y`0H6K3OrJYg1sJq<I2>KHgK7`p*NXNBq1]m;G`a^^m)AL8KR"9aQ*t^%U`ccTfr//AiStE)])7FD74/^;`RhUN;7S\j$:TZVmIR-R&,7QR,BfBl2*?X>diC8&@n'Dn7..7PM<+UL:Nd;`cBa3'3SiM/`fY(A%Wkr9oC!umR,op]/9DH#95aktb^)?X9m#bm$*_f0m;&q5d6=7AM;QeS2]lHLJ$FAiI[#J]i)VWEc$A2;A/R:)%gT.Bu3n!QhVfJa[%'i"&Nq-EgDC's"?J2[DbL_MRg>AuufB+>DB6,14jiDiB`XQtdc9p]VTN&+A!3Ts"B<#X-#gu6^'kuK(kL@f`8&Lk$^^`md".p+(K%L/q=F'KpnC)^8U;D#ZKW_\.^dI%C9/4X"F(Ip]8NB:epp:UT('BgHS7&utVG0u:B/oV).'qZ6+i1B+eSg2s+tQdr-"dtgeDQO=c/%a3HBi^4s5WWBNj!@-c)l^,=C_`\<4>r;OhTVI:iZJ#XX-eYiO]d3+eVrD#5MIVbM_0EQ)D7M4kVTW2i>8LB'3&NcISkte,geNPTg%,N%^[6^]HTV69Z'.!H/F.EOO3kiXF?c_g#m42g8_`A(;Do2R";=h\s4;AA@fqupBscASXir.,5IDppSnF\aoK[9`2cpX`faf\%ce%]'qI,*I0@[5#gO`SD9ujCD"7/Wie2/;#emHd%UE@QFtsj)>&hj_f\&m-g=UOoY$ZjrNNJd[,A`$%qV-ig_g=oHKhK-K@2n.0&>?7%=dr"WSu)03[3rTYXSVOl&'hfY4VT348#F\o6:T6c-p?]'9mkRH`KOFod1a!HT%C!I@@<C::c)9i<1a[j/-@bm%1HJfU;ptI^/d)q%S*?W"<&_mRaueU)[IW`/Bc`P@i3j_mfUHMX[>-%M<=;5iPquE7gqCBbEN'lUW#r,Ch3SV)<"bn'UH2k!V4=Gae^h3Op+!q"4)hB"%aL8KM'nWFC4[Xi[%,$+/*a_@Sh,is3$/4KLA&pT0f(S9<%-P\IW66<g:&Bt%PHdd%*Z4@Insr%N)VI+<eudu8;0*_$m\A'@o)lC[%V>I6->;#Ld2uEl-4=-B&#"uEjE\UTX;XJ#(#)*T;TXkfkg,Dk,9JV\5F`r=-$:R[RTt3q_[Zp1/Rq&?gmW$D1->g'*o[[#&Ao*W`%[7T(p0-04&HAl%o>95jU-9I^EA23A;OYu_ed47s;^G&mheq#4G5---O]!,IB`QU*[BcCZT%!7-IN[-@nYChc*d"/.%9@]JP0^6e,%fbeh"Y1+B9O7N'8Z[>il_TV(#ZsZ,`C0:7K5E+_%B/.15W2mWQ.+0`!JJf2[-XGAslj2soI1d3P@iff!O@m6H(<A5*6jq5D+ktE$%F!JlHFgC$YKM9t%DB#Y)dR`ahSdbHPBPeKk:qH[cGfVVZ^pY>MPMN'hNQT]Jmn0g@10HrPnch(n+!&\JSVO%AGA9J$gt<Q\C>%'q%?uHnM@uf6#K`KB)1H%tt9SA)sOQ%hq4:&d(Dho*[D)h\o*/?[(,S[YS)^ZP(eAjb_Y+Gd>%*=[p"gopR#GMc`QZ4h#\?jT3!VH/%%!!KB%_dLA)>;-[`HoMOr"-_C=H`dD]AL)!CY5ehs4UeBX8^q#tq[ifrnfIuH!:KMaZ`>0e/3)+l/-StENAHaTfPA53?qKj*&bW1u%@"&&d>kd^QFI88e^AfWCG(rgM.'m05\/hp*I7grl$95s5bVBZIE@(XU2QU#SVaL%e\"0=?H^@R$?1R/%EUtIrRU*42C()^tG)rA_%G<^jP$f5;im-0ZZ)L61+2p!60BfL+6=t&[R_1;kPS/Tpu0_^;_p/+W\($;]]=f4#==B@/HWL7..p`[0)a/E>VA%[2;-;i^ZY6!Kj%IJ%,?'GrqA7T4VOC,Vnc5DY\oYO,2/1T#$Ci5f_,]CJ^\0W%TF\F=G=qXlLt]/R:.:t4$FjOY#.1986Z`_5875#4Bj4o*0nrqq&:%%K1[!ACc*2Ks73,Q\Q7K*M^dK/HFEeL)MNkbprdS/;aq"7!B,&W&c;1(3.BjkZmclT"V/TXIZAD`Mte=rs$s[V>9?aqP_kd%pGu>%7eEK=I,:GXir0:#4+i3+eTYob%KY&VXmY5gLVFRS\IC`P1)U;@gkulVeP%I=BoUFPNc?9-6&ki33.Wm?#W+o"\KnFgk(;V\mtL[Q%4p&s465WCQK&gS#iXeqj&Mr.1A\?--SeVH!_NaTQeV0q@!%"EBYOOWYnk3-[_9.ke!-OQ?j6sKHU5co$4sX=QLF#eeN7n*!8"sED%G(11HJp3Jn2g,g.h%:6@"UT\_OD#,i')8:>+OO#dWEA;;j$TPpI)24PU65DrM7M5E0bh[Y+=tQ*0l7pYD*)cs%H]R$<gO<dLMik(%I2D1g:q@#Hc$:kSEC^JM!:-:b3buL0GqH?X)WbTFlF!4)+W#[b7bf:WaL@Q0]DKE>biiR:rmlKUmDkI2X_-;:j<S0HiAd4uN_m+6%2o:u,$\Sk@:8luMhS%nCgNXF<=(#WJ1\n%n?-)I$JJolZg(:),"53El\rb/2b%O7ol*s0tYC1o`W!g!NT7:^&kAK23ks@l^/-)0]%^,NF`o.S[KF)!FC2'4G&:Fuci!nm;X=q&<:gV1^)S91HE0:XC0Qb<uK]$O3h4T>W;L2OTlD+%RbW"%WR1N#^ge@lLSo_H5ujsb]t%L8,<+)nD=`Lm9sF_Rr1Qa^]=?5GP&jkN>@N!fq53\mT?dH50[rXc[,]k&/8oQ;04[e<VOjY&!@g.6HQW*5,'.9)1_6o.Wa^O!%QK%IDWnO1elEFi(@2&;E:$926ZX,8J=_jD9)$hbg*Ume8F`DV>fS@o.#9O_.E321rkO.D%!#D[2YTY$+-BI!>ANmO,b%8+[I*k"Z%ll%HOpWL\TIl6a3l?N*!Z:mh<%oGMd\Q>"&VONI.iA[6-.U^6ADYGcZZ+J^?s-2D$(b02u\UYq\O15NSE'",Ztgg+`=H?,NqJA`Pg-6%8'nLQ6hA7CZ2MW[6"`/'@#c'bpBWf<>&^&M3qin@_p74$@d)Slkh'RbH"-!m,O!pW"bXb?\OY!aUBP:kTlZ9f6fV`$0m!`R#WbtD%boK.VeSpPA_eU"qLnSmNTMt.h0S[lW+k\.Ok^9LER#0QmHWdu+3<IB>Wsb68^52@6\@q<JS?'7-:qP80D)uf[0icHK09A#cVt[0"%eFjqXkIef90tWeSo1=ij@lu#343b4'0jd4k?coJq8[`D^DSY'%@6)i`)Dg@n3Tn#'(=1Ot9MbO.a^=,(LZcg>,V3^J4#pEi>S(%:%`R.K\2hTa%b7>O*GEXlEHS^Hg\$;^WfO-/e(pj&:<=d2_;q:5Yh09.9"l'Go2r@,B*nXt=doJhA-+M6`]Rnt0-e'KOBIga(N3R1'%R;EjoHa;N7/O*IDGjC5];u$$CI.Sem)E%7\D^`E.[j`s*BaC1>;nG$'';&-WhMsD1/A.;9jQU73,lSd=ht#.T-:)3]7`H1DH"(Qf%fk'4)][W\(r5F54RU#sRpniTd:>DSZRU5M;b6Fl0F(h"`&<+_qp=obb[f*c'A.J%lSn7ZiUN(Z&Hf0=US$_KN&#NXV]C.^CH/o\R%@fV4reo&:cL_)GH-6Q^a5r+!@C"MBXk*T5g9H]@@L5?,nR,)0V^4D\]B1hn/8`N8f')gl04lakS[J5,d,)5a+mO)>d<E_A`M]iYh%mUqA-$h(q_%j18CdWs_fZ=dDWof_"*f_7P^df>c\Ld3)!"GAiBEu:4fd4!#fX5;:M@::4.EjdR<>-Qqtjnqlklphlq\9X-`:Ni-!%o/h/CVc=e!-on>SF0]%IKhS8sB()[<HKAU+(<2ZBr3=D_Nob)9Q-kV6lH*B<5285si$7"?>'#4aQdg#8LmfkJa<!E^*:`lM&,@48%?O)/;4/REs9HQ>%kh^<9*&Dp[/FuKK>p,5!"sf-8;*khTN&+%97teY9m)>l]=+m,_4pCQ!QtAoZs)6'FOnh#-a!8LoZ,?B#1<9r3%Z(&cO-&g1>S<ZEU23:<T'Qr-NG<!?-"p'Ojm-Y,jL??Z(j*mR4C@eu!1(]+NN_#_W,6JNk)0\S9a<tJf4YhJ<F*&?*K(K+tkIBuD%J6PQ(h,r6<XBad^r>Ef<mS.0DY0MT-&r/t5mUWQi\O&p.=6QUW\RDFOKp]oP?9_H]]7HOJa6\0:mS23a]+cB8luq;7>0ne&c?n#V%aB)X&]R/6t;.*)K#@kE;TLY"p:ifEU(r,48HKWk%<(QUCYKth[_lWBIVR`'4&a(VIAr)53qtr0UnSk(JCa&=f&8,F2Lmo^9_CZf]%^^emTio(;hZ5+%]k]f)U'1!EH&*LA?MO'Yp*mT"oOj,Rb83EER#Mp.,k=^"&Lkg%dQc6t^H-F6tQ?==1D>qV&:iHfs'+)6j0dg.d%3&[ZtO[7"dpfj99$t+9Gi[kf7a#kLn)d]Z8'98\E&flk3*sTVc5U;])P<kfe)&?ofm<HXeFj=lCiuWGp4.b&Qf.B(Uf7(sR@C(m-%f.ak.B*PL6/aEqbKagBPauBZTa>(_Dpb;?F2;-.k#C_$D(]B$r0&e]q%*)lQpmJg)3-,NN)T`_)ItK7/[RUD2SYkMUc.[IhYh*T&%Tr=Gf3kf%q@6sBccj@*Y6n5sY!![0C$SN\J[B]Ad&O[N[,.4]*Zum5hMb(Nc6q$>3mp[J=!R;l5;B]@_reOO(ZA=<9JE(n`[!ELp%GPp$_l_1;,2AmBVh7Udl2T,$5DSHsP0Np0c*smWWC,$elH=dM<o5PQ<!^bk5;0hWR9g)E'h!FXT+JEc"473k%$4!UoL1!!m4^PIL%_>tE>0V"[dnS&h(3#[Nr(BH#p]MF26>;f#sSd5jTbU#m*@p7r;`J/?Uf1B9)%V,QNl^XKaL9V^Rm('Xa*0'sUEs]nSQs_2^Z-%-H%Hh@kd2O!e"GT>!MGiASf6.JIYg`!Y1LJMb1E\7.@B>&NDGcNC)Vq"VNQ=&<lX^1Cc=81.,27O5]pJ?.:4^;&0X/!AfIeNWB>Y;EH%j\kp\/g7_C;IpR0)+djl:<$Be*-K9t@#Yaj:X3rmnjVN-m9[e?\'<LW$0uss7+b)'ld;iU^a\^<hC[B^ST[DY0@b6&Y_-`!)brr]%?'*X$Gm5_9@N"Xp.jW+Q;KK&]>W&Y>C1t1HD(4Uj>o]JWM6KWhD>lL`fO^D9J$[U:VdQt]QO#[ki#fE6]>=0J,LY+Pjg4?-<,o[6%n)E1AC%_+tm`=7M^:="$GTYh\Kr%esE)k<G-afQ_I-02%q&$g6O>HKUljI8LISTI5Wq/3N)kr:@N"4[tZtK*>\G;/5Cq2E-Y_g)*%NTbb40R%2kHB4?C%TTje`;(IThdCf6>XI_g2Q'^o^MJ=HF58*SGE3`MdsaSAak8PB?SC25`V1->p\cc\+#f2s$r!"gbY4M(I<a`K%?R"Z859KX6H!N>fUOIH#(Et>JkB%igqjnD79_[<tm<cLqQ&/:#0g8CR$g@4#hkHk0m%tSMr@jhjFE[6ULV#P/Lo)t0c/8=N6)3]2%AgO.)8(1V;dqb5=4h/RH3kLuYXc"b^Ra0T%]uXkJ]8\)P:'gA':$92[E=pT?G3^t[CTk'7e!\r)@d.,u7V7UVF'<orCc%\UbfBj\%l27,o2.&0\S!h:Efrp:Y'2<,;N6&$_,,=Dh82<SS/0p\0/safF`gf&al0R,"+"rP0VR$B$XmdqoRa*OOc7W^>^1b*G3>O$3cAQ1j%M5IV;V$kF#mq=bo=?<>sX4a94lmtq*D"ZT2FEXp2k'Id(O/B6f/Ks`.77PbZ`R;<B?>#.mZYO4:Q'#4EkmT09Aj1K\;:0Iqo1DMr%bSEoc@)e[KAGqJ7FESB+q,fi5T6gW1jI"2LldnG,URRclnNmmSj(XLZ#!W!3"O<I;MZqm;k@n3QjM!Z4N6^1hnAhFu@a2+B"HQ0A%Hf7'r$X[0>7rWh27-h&@.MG<Li3:\ej`WYf.qn<@ZAD7@6j:/Ffo78"L?VdV\F@W.g1:Kqj#A:;jU]D/)3MFl+*q1.DK:=hh3MW^%kUuW5?Ob8SraMf(0YU8%?e=)$mMU"Rs.%]r&`8;_7<a1_ko;WQptq]+cS]pd-r,PUmK.X4m'!r-l;=)=RQGkWU?SC68+-/ck0A8c%\BRHd1Muh&*\H<?.rk<<GE4WQ+(oT#R+&Y:]%HMnmhT<?WbocsX2aLZoXpjB](aQis.o6Y*(W$W1&MSPB=jqlZ;\^u_U*QAL[V/u%LbNr-Fr4U#)=U*STNuoM_i?<i4OO0*nsVS1#`_S9Sdje\l5[7^SH&?nluLjON]NHGIdd?LTb&nbmWBV`Tb&W%41a6,2IkFLON>K<%QU3A?emPn&I@kKVX$#R9>urhB5V!PYBk!Z9FosG]ZNYd4^hsX`]s;OE5\Z-<'bGo?(A;=KUDm(r8!pQmbE8(AR$Bu+HZ]^,=LZT=%+VLt"WI!?_l,WH%MhDIp9JN/d*&Nbn'`3(?6[\Y9A6:LV8*1oj2hC=>QcR3mbR#&BgTJg%E#*Cb!.crTD:QZ%$\m\h\Q5rJW],*P%%.gRi`Y18JnCB4R@29B$n/Ld8i[_DumUdGn##Mdk"l3DMEPn>SCOEi8mb#V$71;Q\)t%=L.5,X&Ojd$MEt1Rd%<nu<oD=@TnTD`T%aS-i<1Z!*6pJc3iI[]kA.P/W3Ihrl&Ma5s_3QAB1I0\=ers"ol4%DK[I7lW>(S3=YS'D2XO50B[F+rSs+4#cg;GWebdXouk3>NC+%AY:!Ui4;&&pia7l-A)b;*eoC$L1M2;@NGtekLXaapW[7d"q>$FgO>\SCGFQt-J'@tBA]\3?D"uh3rnjeTl-C/4,qBLbg36['?%8d%h2a1%??u!'J[`iR*<b!KaDET*QXOS$.bqXk0a0HD;lZuWRYD?23P,am-R/sL2rt4&EG^_a`&!k.JTm"XS,I"MF1XOcm^gFDI0%nV%[b?cOdiA6ET??n&H"k#JXtHV2=:[9\3Q;etj?)Y[/]Lf`!'rslkNq_9dgtHop-[6plcM.n/u9*I.a,un<Fn+/FhKq_:LqjOrLCh"%h*9NF_V3:5Kd\#/g1>ZPlB<@smr\;%7uD.V2Bm%OI/@m.\uL_`YSG;V%hA,KET\IW:inOB0CWd`9jr;%\iKI;U#3bR]8XKa"lVW1%8;Yl0N;X]Qc:I9EO#N(if++7K&%g1F<0u!5,jl;6FtPeq_i<8gX84u2`m?R,1EP;!lKQ^[k)8Y6gb+(lU`>M;[A0jF4/APuM/ph1%<o0CanD7E3elT0&8F%)8O,W8E*/8)3XY_99FGp&Y]!Xn_3(@BWW])eFX0088%IH^r_47ZHVg[Y?bFCl839B5Xf*b"h&/0c6UoLIe%<9K$qFa&VL>[ueo.D&9G1e$T@D,Qp],IU3aj*FO50p`FoaP4U/^b%q!+\>.mf6W@CDkbB?:5NU"\r;gPI!%Qteg^bnX?5&-Aer.Q%Ul+mm./H\0%mF9Eh;.!N.P9<(.[R(jq]2-fdnTf6VdR-D*;B0bW4P=8n@OeSr9H(Dr(#SRma;FG+j0VrRt0O1i3H-OV8ff"ei:',%AF?N<KiQZLB?G$h#mC.@q+sf#51nKP4O,N'`u^Bb>@DnL,8o=\1Tp;]<Wem\lPPgf0qYomfE5+'8+/S'>/+,:HBpoqO!qeh&#$sT%`VGK0o:!'hc\aOT@=/&2DAoc_@VsWM@qL-^R+_W)aGnoJ%QfAp4)Gtlm(*LHfG.k]b>J&7K-h:TFkR_H.[aYe#(gc=jMN$9n)Etu%DS(*Vjig4;)7,K.GIQ?/"d58tRHB@2b'TY"TIV62/Y.`=o,W0]is&0@47Bgbha])fU&D],]]/\aLB;eXH"1_Va1XY'\p'g-n'1oK%(2c&M#6O%4MiMtq=:ejeXYM!=4C`YgE6Mkq6/Y?rXBa&jZ/a'7"'q43@D`H@Cf,_3X[CQCB`Xt/c(i]9#13'C%Gt$5Af@1K!6t6_%#E&ZU)ZrVW^Z-$L&O_^"p$C8Kr'peaN</[],Ln"Gcu0>cc!H)(;1O])1s$3Y(b<o\5_!i>e#K@O6G\\5EK(!@Sg3\9HE=NCiDRCX%De'7:%<0$5CQXtSH$L,?F"*`)+5\0RPg:o$rlh3dWcrR)0&ZJ%^6$CRI5.)Z@>t[Si;M%rq.@1P1AI\np0InF.dLP*@qr[%L15&n%1YcHJLpNdkDtOJZa^ot*T=`;".?Z4F]mfCYqTZS*<kHt%Y'ipVn+Ca_\m*,+:_7cYJ?tqsh!=,V^2i(WrL!+_j3"UjaYVc=7jG8)%h7:bR@]k(V!_.2^BXa`+<^4c&Po9&`F0D&0rK[BNolH,(F$&P7d(OmWDJ,@:?9caVWXHAhci$nZ:c-7b1Zs,`gdeP[NR)mRT=^gR%gLISHlfW_t++'kW;#^TDYFk^CWR-7bp%,ErH3*d:\_lZgoKL"B!cY:9n]cEGXkg+.:+*FR^":SA4.4.br'BcDF'h`e?A84DolH\'%OaZ6t\CZeiAUgbQ2=>UqHi;aOBlI>nE3Go2L25t.e6r%I3UDr/DtRVk?K\oOc[DK;A7hN>gk3e`IR2!Qm.^?248Wl4opbV<5*,$j%I,Ds\ls;n(.&fX'F(k=Eg!4WG<F(*dD&(BDrS0??C@V1BhWs?RSd0<icWp5@koj,O._urV2#Ft8531>tme(X%H#ThAK'q[j&>$W)%j-siZ0_b)hi*&gPF-Zp"hI+%Kcg*&ECtLg=U^"K`ci$m/F^@*&]m`_M;W`<pB8k`ZpGc64fb#t=]mfB]NZk]WNdL^ADVIS<c?:::%cmW.SqtT=IAf5O[S+f*1Io3_YH`h2Qop[NM*rD0;E3GmR(n/d<,Zs3Df1ucdF$#(fmX+of2`_NYG5cjego'P(@ge3?ZG"dAJD\er%0jf!G5P*#?p\MGXlF3_JKC65FR89<Eoj0lW>Q$lc+/Ya_[*JFB\Hg(,CZOFJqRPMKk@K_M%u>A?eW9AOc?$2H/2g2kHi72QZ@;f5%5J#ESI&cr;\b?AP^ZF8FqRJ*]iZ0nULU<&#p?8@nc>MumHr.j9[:+7DT2Ve+(Ss.(G25+6)o<A11^Dd-#Z#Oaf$<uN=ZfPU2AK69%^k1'$B+(%i;mI<+:JEp,NlRoW0`I"R[;m*U4IrWol20ohaTD!3Od2-$K+o-f8(+N;@7D5b*nGL\0DUNqoiUc4^/k(^EVgiU`T>uk%.3!PMZpjWZN[4X^]K**sSt,ac9#'6o:H9khBuqa1qp\JX'TnFARJ5.kpW[UQl6L`NH**T/^UGqoZZ9-+B.@7]f9]"bL#1DZ5hV.i%J)>:]dEu8bHQ'FVh-F4sA+aZFo5oM)AUO?br0/'].g=_834<nkk5+@$P"NCT7>-`ZgVfDf[`?oj7jY=hBcV6em-<\GoU_,'`q%s%%Gkj5O*)"PSF"Ism3jG5NhPJ0Nr"<TB)Z/(M=*c]P*l)o>q.4mj@Yc\nHoul$(L%\Cd"'gbODpiQoUV&G(\`q#F_5&_Kqar;QlW-B%PL\&O>`%Ze[AiD'XKeXm0Aes"n#Z.Ol.W/!q3Wf/g6"9]Ori%u$R=,[@HJ9tX.An5R)DP#G'tCm<g5L74WbM8p7Z3qTW4QLR?0Gb%ho\n-M)Ch7Wno,*Oc>[)Q,f>6O"\j2^XOq*Z_upYdU%7*Fh!bZ[l8*ujmVg+h4FD!f[erZpMTGlMu20u'1'2-V-meX<@,X4^2jk.%q!]2ZmVO"87^udDT>C'-G]\0(QDiZsn&#g=n9HYj6+\(H>/):FN:>&J92B$$)rYX#,]R![XjJL[L-<S5,Ip#7R9R_DDO/n9a>k*3%K^B6H'5=_L&c,X*d=ScJXX]j^#jaaAW,+l"[FkJp!Pbo5q*rIgMR+u,PD8c4DIR0`*@G%EX!IT%25b+@dd2m#q*TMF1GA$i?\g<o%?,pZQW1&#GCXVRI)f55/9Nuk+_Y5#?q^["5W.Yn75?SZY"cjqVi1&W]]nE!olO8=+7j<Xks'gUkC9?P(Wq8WP&@tr"D^Dl<aHD:V%V'!FZHN7lo:r0RmDD5/uC#)qsDC6R8(osJJ+eHo.om`NC3@;[gpGN&q-7jCKQ?oNkp#:7tF'L^dLg913;[^Sr)^he3Zd+^Fhlgl/%Bt7?M(WY8Kd#p4G?Vs/;qTGZ3;7r@#FK:JiEt2s+lTJBqRD/*S]8\YnV&s#4g<m&Z$k"Ps3N^cc,r$p(b!d1iiE_nD#`>2cm,e]2%drrd4VQY)s28]Ec7-uEj5ZB[lZKUJH$Lt6P]>.pFQ@7i$-_B^8YXPunl$3s\6Jj<N/(N5FDk9UOIn@""O6T0'>^T!&K\f_9\ri&g%mVR!R/$.2hPld9qeQ'Y;W,=lNF13C-Ui`ElCA\L-qLUmPmUG\(CJP#$n)P\qBc63F1sg;@HbXtW<t]Pd<i_hIb,h_<.ePQ4LqcH,%X<)9Wb.8YF[4q<7@QchVNPr;$1Qc3om1qO!-*gF2[oD1ro=YMb%O2q-__ZOgIMTnGAE2a"5I1:#4CU-+Zk\a6kuAQa0l>/:#te3&%SLNl84KWI-XfF2i%<gCfQ%\SL@1_Gd?+!OVMa-0ALd>S>a7,H"qelRcXqOdm\IpC6VZbKQa[f,?-Ln=\JeIFOH`b-J67.kbp2`sm%J-3FN6?RQM^B^+^ahVUoV>H#^f8dfWlEJnii+g4*l>-8'P71nW8L,^M.iTSbl,qu9J4#`?.8=6`Lb&;i?E(E`YOT`"K255>`RRsc%,.$RT9.=+5/m[@-5l7-\UQ)H@n"KU.CIpc58,U$t76cj^SCBY&nSlXMdP?0N_ksl4W82#pDsOCr+`&O\Y,g,'<QiTuLt21S_fStk%49V&uF.LHG<J^)iCFYCS+#6rYI@Q_'(X2Rj+eF>_D=XgPrCmDL>>KH%N_;27jR>[AZ\-d1H^C<j;,hM2,ZOK#LB''HfD1%+VgOi_%Tmep=5>@=Kh%t1SF`&E0l1`"(W\Z:QrR'74Mq)V]%kc?hT8WCnM(C_4/,N^r$f"V<A!]::LI^W_RiDXjcA0rW=Bt#WW/E&J-L>"*%;dYoG$.KB0S(O,p\e.moV)Y/p=*chXD@F'=A/Loh._?#O0GH*V%//]U(3*mU]UtMH:[ZC$Wnc=,Na<(tK1L=JOL[4G`+G@P4Bl-E%+dKhWW^f5%hO)L,;-cf"-tem%j`9U4XoDWtjjqG@8q-DlFACmQpUbp#>\u=K;Fp[9I:B5n=h=0g9ECl?Qa2J&G"?'.)pkTU$ceT\%KrWQQIE,e5ec#(l^\:r+(Fo_Th/TRFj%HEIb>c&D[U2d;6?5]Bn"&]X`8\>u;.5E/o4Xuk>cH>a^Pg\YnMa9e8R9d@6rTH9fF"HF%Au+tE'.GIHkt*Vu8Fg>Ya43TPn[!IgHT,u`XIcG#_@;k92!O06B#8pC<)T]t]@u$#L#:WIr'n7Q(t3[fG?0,KpL=$PqT%7Jr(seg%YXXZId-du"l%=jc1'Rh>Y4PA"kBekiMBokOY;a4*Q%Q"$+i54'g=t>`V6mN&b>&c/euNu]N;M8Or:\1u$*$WJZX<Vr)WWC.UZsX9%S=,;g<II.R%H_+#W_P)DS2\YQDh%G&-p'.%ME2)B,Xu^^b-^\aLW/I`kBaX@*PF;UUgEY8"hcl[gImSS/#Du=i<i:=V4Ce=jg&0@%3F(FuS:9g@PZ!psXg#7G?J!LD?0GZTp%V?_)shX%R?\L4>(<.P@_)&1]Ipr_Rp#epj">s)%KTadCdVCMVd,djb<\qtX>!jaeBsHX%Utk"ad=,X`g+?S)W&$VcDSAS0_JHaA51Y>[Z!#!RS>J0A=SJN,h><SQ(AElXWfp9ONu0HD>&4\D`LG8KW/h;_W30DrZg@'^9HuWZ%/*LJRABi`HgoWGE_ZZ)P0\^h[^$3On"tm>]\J/F<I2Y[>`qCU5?D`Hfo#=o2&/*P<)kUIjO[L^RhHqgN7Zqf_/@%1H=X!BT1`](^%6L>+,iB,7W4?a[#6oH7XCG6dDeM+2dB&]'HD*1>FIYa.!?[]*UC(kgX'&"j[CTF5DgU6q9]ts^3U%Yq"^K`nufK)K\afJH&(ZS0T%8fgK/egd\9gO<DIp46<c74RH+DA_0sR&c5@lM"Wb2uSc`?U"7hUTcscg/!2f#9--5qaGg.l)YA]6(U"IqUV-c)[7JQO,QQH>h0S:%@R1ID),qKVM_EoRAj)F1gpnGoMr0!Lr$O'B?+-_\C_8"p$d4Z]=c!%7Y.g%$oV93=1&I<@o?P:.aXTA0_nJPihZM,dK%Y"A#!3\.%p`it]1)#_M^\3E95`8d4T%UUV2f@?cImf+=7cL>,Gu,N.n506EEJf64?.P=N5_C&/l8]&+EWiRDTPgpjB+8+]Kuh:$/,*]KbH(bq%MHb5/C5>MdgiV(D^Tb4\_L/ENh&^DTT^d4HWP3#k5'=gOP2B9IrgWT(4IV84=h%Mb<*bS>kCK-XjJ:A;)]8tTgQdYk?XT`p-FDX\%pGSX.h^YVKpJJK-h/Blo:pA^*_2)9f21t)5reK*a]e'p-mKO&Z)5!qfIsB3t\B%?kOj_0cE6TfO!Y-h.`rc-!K@`*t%5b_0**hFf%$S]5`#8aK*i9c&<90)dk@EcEG>iFfB,[]?QB(sZm<iP_?\pTBbk,\&PW(U(gWd7aX3o3M*G)qOXdS6b4=M)755Ijs+F\jMdQJ5Qf%cLi!2R[ekW`%@adn1Mr>DJ.>p>Q+K+0!=-Hmk&)M`#RHF7C-V=r/ju*4GcpF7M[n=Z(FC;U,0A)KDT%h?1G/Qe$JhiB(4$t@h.]E%$eXrj,(Y0Hri<aE+0=Z':%aQqkLXA=O0+Bcai"$>R?F5b8T)PYMVT[np08>JDr88$>-Z]SnhJ)Q'7uFHNMc0b3GmABg9.&H%uJIp%>DncYOf,]rfr"3T9u]]b!oCG<GH/$J1MBs@9pq51F"`F>=jesX"&D-gj0rb(p88VS0UKSgD>/)L\TiPop$1fcdDm)QWkCjJ;kZ\9%,d<l<SmrAJMFRI(cSdmTMCmIFg$lN)B<j+A1d$4bf>R\o_n3)B/?IfMZ\*boO#FZJ)W.8-hAA->V]%ammHFP5%I[iD\i.39g@pq:%`u,gUZ"dsGfT2/)Gi=CfQ%8*kl\:"Z?[[PQB"oY9f<RtLMgur/%FnNO1Q8;_QOSpF17E<m,p+id)Q-"NZ*=MkgiQm9k1Fu#cb&C'%BOIb>T&OQ4:NROMLuf^H^%Q!OI^HJV9r(sn7NX/c;+`VeptC.ef67`LStpgCgr45n8U#Ar+;3gaOR@!#G&T[=Bt(i6m9u7IT(NcV%b1>-*N6:o/*+sD?A/J:U+2m-(W-j8'^U(?DF%NtI^9]<(9O;Q/DGF>K=IZ>ImHOMVOO3DgP!7Llma`>!9_0],W9O:.VEo2@Lq0j1%21.cYo(o:YCpqVa@'f/3;"K2VLKPFOlQ!Nt%+8,g0JP%?4D=li1Y,gAI-)A@R6%$rm<nh.A&0\=!o`0kGi1:i*a'g4H<;MAb<sF*%4Y`Yd<4*e'MS)k'AC<LHJ=:D"0-!!7fprG]L$q3:_Ks^VNEB(gJVmEd)8T%AZ60j(A&@qmpASboB0mk"ITlEn%sA?D'5\c#'L1$5%YlBkiqRW@o80o;R!GkJ:UKfA>$l@TWU]OBiQj(Ep'(ZLJ*WSAJLB>703@G/R]SBo`\;uDAe,f\Y:cq6*aOR9p!-Y-c'a,"9%8[KB%^b?Gj*+r1@<TBs<<i)Xd980+S4&tHdO0\rI!s$%1CLc`f2UCUL2n4=l&HK+ErIDsbf&r5Nr'i]8YQa!l2..O*L-#B_K-<mA"iLkB%oP0B*eu9-EI-U5W$fEn/U43*p3YdYsn,WNu^(Z<2RIascS'"C,*:Tu8*&#k:9,'d;H2VG&r\?M"V-hYp`_3]m?I*8oN=bY$00+4f%]oT]YVLB2J9BmWNp",FV(\'Rdl5pn)%YFSFCGgj#\YK]<b,+bp2H)L,P;PR&a/tEiB92laB\:!44>l\C-d?ELp+qo^bn^DUq&8oX%F]A<KVP<mK89f*jK8(PqF=Di3p</<D8hM![7p%T'KK?!m&mVPTfdq8nC1KHgP5#maqADYHouY6VNcujtkt/0ags9:KmWEEI#DoS;%XU3uh5*Hn+eZJO7,+mubp5ZH7G/>]hf*iEAk&b?d\j8^8@<P6FT+](`"knE0T;s)L'@hbQU_C?Tr"g#5!nYXkL<89^T8`2UJg2Cp%UYLs%%"W8W4[l7.aP[0ds#S-E^XLBdXi/KHW:82A];]XI1BV+0Xpo;M@=Q9S9Ece;a?<r]%T7YCWqTP8i_'2K7/5UamdRr9lQ5j>%+RZRu_(f`!.(j:;p.t8EX6(;&g4gNQgq64Z@F!,EN`2C7X<Cp8=MhO0Y^qX/C5ne5Cd4S9_',7@)(%bo0SLm*>r6L0=7%PcTrdUB%JC2f?\?@t3Ei4oQD0>E:3"_OaTajpapt=\3:T#"J8lS9YDNt]n80(dqBd^rHiib('galafSf6!`i4]6@_\=oaa0/kRmO'-]31B8!%gm!Kdc*dmYYF,=UA;Zh:!$?m!"MEJTp<V?A)WNmC-A6Rt?WGo$#!tZ(c'P'36ftsn0OrW[\c5]?]r?YLNpV%WaXnJi8ra$7\b[&[%<AAt+GFbQ)3e%YPiPQ'lkCGiX^=#aWe*h:pYuk18gHere;%(?s'aS4'":"#Y`HgICE0ES(;oW4bV=5LaO="bP0g=8F+0b[!#A>Mk%V@Y3,1C+.8$C/X6)<Dj)KZa:u7"PfW=R$J'%jF?$X5`F/W@Y3Tk>0O^oAa*V-6WAF=n0\C!to,]qe-eV:@'=(SjUB&A![^@OQlOe%NFb/20@cH(,9=a^EKNU8#g[I_#4k0@(:4Gs.D-Z#?7n^AKc$4I:/dh![U:n3"O!r&lqG%k#,du?iW8RRVUJhM:kmgWBi34=P7/Qb%(Ijl;%UP>Qc*(#@?BtW.13fc:Y_mKBfk<o*L)M&`$f+Xm"TYsg4eM/nT1&<k0;Q5)Rls,hoegA04L7+.RF>X5V&`KghW%U(%JP<r%'""mtGOY4]%SKcS*H,Vp)QLQPGtCbLJ2@,_jJfD+Z2m<ke3bq_;lOFak.Z:9qmrg%8Na;<PE6*G`0!P8aL'I"kQAHDIb]?Jj*FE%%pL%hOT3Q3Cblf52:Cs4`]XZ[$fgQSGVepm4O/q9(@L-K%&jS6@iI+P3&TB,-EPU==Ga709R)58;75uA:[1*5-"(B1o@?t(Er`15Q%Q;?Q=#(L!X1#YHh3uh$;E,VL&^^fjh]GeU\qd?-o*J[]`[>"%ZASXR\l%!\"_7+Gi%9<-S7?LmcnbH\^B6pl5o,,LY$h%<q&pO-,%3!)r#,)Q&O,Y*m<+b#^eco=#;'oR!;>DSmn7:]X$m#tqe2'HLd?ks:B?(?T]9UcAKYZP/d3]b*>ahlg3YehEGIfqhVK\h0O>X)F*%4p-IV*Zs`.arc^TDA(#fr`&?0cR+,&&"<%a[&N2M5I`)Q8>*rC+0ppn/:eQ]J&poEZNOHjr#t7r3D1L0njdIQ>PWng94nR<DO!G`%n`!4@TXqX*TZ+to]PlRo!\Hn@JEMetP[`We,^BAOc-j0+!eJfUaWKR-"Xa%dN%2AtN1f$%6'jg?Nm(*<)0OcP*g/&6%$j-_q6OBB%.d\K$$!6<cf"jr^9pCEDXUHO%5ADR21@b"9<7jU?6uTmI_C$>;`:<\tku86*dDHr8CpV)*d7WfC5)r^#DF/b&P"`'n_Z#N2Z4e7T%T"l,'9A$NK'Nln%Q^C-0N2N&1@"ZLL7=A#dDiccNT[e#I_g,.[mZ*.92oiss2ODK;Jd$u]7puSXSqW"O7q"huHj^Qg2Ct3I1V6JO%qM%$5Kn2_:LupTCX3B5<Yl/O[g+_\_%sm7Q#-"g=,,]:o7ItNZkp%r]ZH&G^rFVEOT0>ST\Go<-+l:@b-5;c32V-FT;%_AMi`*V[%B!JG2l5`[_nJS@%KIYC/BDCho30n5gf9A2F,^g(J&Gs$P@L^c,8QN^^mdUd)0\*L<S-jbJmI07[:#4e?WY)Ck-9t@L4QrIkp]s=$%K*k?CK_P9?-Hu83:t\N9`RW_8D1!.`=KL<@d8MZYpaN>$`QcRGbeU[6cfdc%I2hXLY*'a0dlr*1$E=ItD?[:g(X9C3:JmO>/=MZ4%[Y;jiKSLm766iPD/J_,gh\'nhM(19]fb0b!>uiO$;qsekW-M`:dP*%YObom1DR=t58inCKDU8t71"8Ka2F(@l?l:9Y?dtbcQJ5'c%V=pJIB"IZF_p(@3KCND-]BI7i`Q0cSclJ&]lG[4\=QaV;jKL[)*XuOY8p!J>&*8_^>d"kqb"qf&1,K]RpMn/&]8<TSb&4<ZaM$K7%4m=iC1)Vo#etC`2>)pY_cR-kt**]Z7V&sVl3IB-$Ju\Jh)u&D=#\Qg)DtmSP,ZP]-A%Z_LV<6_f`GCdLf`qCQ]NO(We+:\aL=i/c%HHl.ujg"MuS]GFV,M:,C1=%[pN9=qVGG,O[TfV(TE>RX%38/6_A8c'Z/iJCa^KuA8KUL;a4qt*YMBC91>/;1:M"(!@`g:I[jAh$c%%9SPo9g'\_dO<"99fX%:4)!Jq,ZAWBdJ7GE$JHm=>HLd8d,6B!YUbakpg#r^XdDA%W0nFXX%.<F0"/*(oG#G]Ed;Z%NgK2M0>.7b%Q0g\f-9iZ(9%YR$bC&3C10C@FlSX,U[rmN5I7Rcbe[*"UC[<nJ@Rr__;If4#X1JV!^>%*I?9)G;D!f`L"&5k6&\W0d5Mk@g^FOHR%6`?la@7;a(4lYM.Gbd4*X295FCR[E>N)Ymn\@]\F;PQkOA:2Bt'"npa+u7I88DBcGpVl.TE18q:38P:J>HM,6P<!XUIK,[Q4ma>j%G-]]pB^998.>IJ$A?&fLjo\9,,>KOkp&-i+@`C4Ub0\+Ce/<.%9Ah:+/sfri-,Lu<%X&>S^K.n_`b.EDG&l&+HS&M^Z1mh5^!,K7%S!`#.1MA._h6_Pe1?g,Kk'\$4jB";)51oZnPO?!gqUk/gaffU!2h9,RSc%b"p=AfF%l&4V:$VXf7d]8<2lYZ*RC!X`7I%"E(l_4s%'C=\af1m9:&Gp.jKXWk+d18qETpp"cNF2([?@rnBe!bG@,'sC)Fd%,lrf#RQYAV3m(.^Np;TU`)/=j7b-frrW3t^:j+u_qI5:I[g%#>!9!WpBCj4I]/O?X29c*pVoQnf+jW/Nt%X57q3KYq5a^]uRSlaQuAa4Y);b1Sa7U."Z);ZQW@uUUe_3?qW&B?=.0<L0F/C%^uF#%*5dqA[Y!Y>8BY$,\"ATh5AKVY.3!Mt6q/YKg+^-GOiTL$JO3&2*Jo*.M+>shGU8hj1>8aQR7sqHHnLVf-g0f5CAjMpW]J7Z\r=[a%2J-<a,G,o*5L5]L`3oom,dHtV.jD=,F+^1'l;NXX#"H"(:Df+Vh&oX3o!=k'SstsF/?Kf(cc3AgSP2^Ah:6U:XT!gT^)"0@M`k@g%^ZbXOFAOOT,1&d2c8!A0+j6O^(U-MfZ^C'*$(Z8kk'AVY^H`4?)+!T+nZh/FhYJ)pnfiX>ps0*A]Fb/;3\)tJW<6;%a?2[X;Z/@V%=7sr9E=->U]cuX+*8V:TjO$I:'(-'.,`DLJopkE7<*U0O%gO%AQ*6PM9e*q]S[5<.`]N;.D!ao=S5Ebtc]MY17@dtdMlRDZbHqd>%mSJFD%l^#<%X]pZk)P28lXKl(D]fT`:[>3[YJsf@g@<\EU-=?Q<;ouE4&/LgM;$C=;o[f/4,d"6ffHoEC*PW$,WmtaA*Wq<"k*i#%[?/$j:,blkfYn\QC93Z/<I2@u\s:]3#]=hMMiWg?Njbb6V29$Jg-4%*O3(#*Z*fJ`[Y1BZ]B.3mc7R'ge&.P1Fh>Wd]?*ti)gmJ0%i];@b4s),m'2T^,d[VC':8P7eV'l08Zeqg*U>tRQXkij_lZB5A8WK]O-a^4]6\"S^C],f"Cr-+Ee#`5KX>Q%:J^^^nZ`ITMje"TY%qZ#u:Er!?ZQ:3tZ:1$bCb33ZkrTNsm)kkMQ\p2$^2uWHC2H#cTjmPcPd$jq^rCOL1:)C+V#7%P6;-JU\&gfR)^#uad\tSg)<@3Ms%r\\/I<]^'Qp\saFG,*LE*d5a8+)u:M)_Z#\U9N(N78E4&q!=_Vn"!E'0eHWr#\t`LjA#i`!p+Od1_Da/fq6<ejEka*]+_``AaL8Z%E/GUPe&/kor-1`ghmuJ2#*52,lKJ&+_e+12]=?\66JQn9drF6tSOd4;?YWMA<W2j,LSKL%M"nUZ81`FrdS>k\KS>t<ZG[FFp3%Y%%rl$ZE!Tdal`d1gYK@6ZA8@Y\u\WoA/*3O%+DPb[(,b<Kbge+3_Ilu6[ge(rF(V$IC\Wsmd`CjLsi%@`0Rr?UC<<&ZUlk'+7!bt\=%E)Rm@+eX/OJsugm$is(D">p>a)$9ZW8jH;tO<K-MZ!g?-pD?dhZdrA\%VP:#/g<V%K<'e805#o>or`CW=GliBkBlGbG/%#<;V0L#%LpZh!eH`NPDT/;d'rN8@I%ZL0]UspN``G"X^6_a^maCn\Bmhi2)q-,5e/FpdisUh9%KPjU;:RCim)-]q%[df@iX_<ajfi\Lp\=/"%YeMXBA.VT-8>N*\26HbGk3?)\*'@d"38)+]nosIjTlnm5"e/&<.`k5/@M;2<&U"X@)rW2V]U=SNG01]+$U)otAB`W6f4k1Y'?468%?Lc&/;q:*2%gt'o5"-R(g\p^?G>V4k=oFM7NIAY2f<VWe?h_'=]H#%pHO#BGVPab*M&QpG26<C3(FX/\GgnEl]n=<6#EKc-9.=Q0%E:Bf7g+G\NL4_u*U[\sVDE)mjn19\R_4u`P1W0_-NuCJ'CuDh^RH$(*`=3'5)YOn-B8RW<:'8G\"H=?1*]<:!4(f?g*'@t<O.DcB%)ZHIc?"2t:j+`1V%F6$=*[kdU+a2-gDE)mjn4^*.JYRt%Z#ecA_ni+&<F$IjDE)m]Au"&X`XTOZ_]`bS'Fc*B*'@t<]eM??gi2b]%iE8oL#Tbis:9k-@2]Oqp38fW"3,U_NE&I8BT5hb$1cRl4UHTGQDE)mZ0&:jm,]5Sde1fFo6/mWOdf=_7K>n?*NuA4^*&MOmGgrrY%.da]oCd5Qbk5JYtCWGZD?>^q\n)Cpggq^Ohqf`>^k8SX^F8rE.*Hf#G2mJJAGOZR./iW8(^OK=S9/Cog6EF\6Gkpcd&FJCA7-e+*%f=l.Y<SPK7mquUN\*euen(h:AXh2T$[.N527Gk\WXsTP(h=Z'ZDM`7YekWb#*'*poKgP/YY/^JdnSsA5ZjE0-h_hm*Jnb9KFJV=q%Y+_IJZB(!Tims%B6\@A0b$`jUp\Ddu`H#cJM2rO-fuPBVEjm:)@\)6tIOI%nGVX2G,;3BtT$?W@iF#30V01H[f3aX38eAg-8UaNJ%jA%^,4EE19ju6EM1^G^/o:E?a9,RLl+C=H$Gp7Ho\<=tAWTkhJ!B-HGWfY)\#h^o3S$.:\@<\Z[ZM@@nYji>1NqsXnhjr,+-jhJU%Dq0<+>m1X*UF>4rR7rBt6$b%1+5Qp9iu_hHiksh!L]5,&/g'3Z3@m]6qB8/iEAJ<HH,G"lI,#6$hpTKkUsa*S\q>HAoM;ss8bXUQ%2[>Ue+\_I@TtHlR(nub36b1UF3%R5,+U[*n>e#Uhhu=(4S;"J;S3sea67)p?Uj,`FItp"K,a@[<o]$KGI%d?cKm>:u&q5/c_JK9m%)9V&>@U;;WaE+=c-GtUg+=WrAo6Sh>PJjA0.@V\VC-a_VB8(IJl<'bYKOc^#aU80>:JVU$q&F]gEN2Sn43BTbBF"X2i\F!u1dqLb%_:Z)hWrjXo3A2>e$Rn9W)="1K8L]3(<Kq5a25t5BKb9]G@0B^nT/RoiPB6q>S38sV3`]o"JVa.1BB5/?PY:+L=Z52;PBqD:Ff`qD%Jm@.8*[f#X.?hjmn>SuB4/t>R8-j;a-&P/=l:EOO(15B[;9'"M"./,^?imJXAQ%3?A3`X_H?M,fXKW7\.?tL)I%_ttE!*\C*DIO^%,RbVNOqBZK6G4TiAORU[:$C8,e?M>,^p>I]bT"1,RNui#.4=3dpsc+2*E=+11k[!<iabuSd?6?CB]V)-=R#*Q@:AY.dF>=&'&nV,%QOOe^Un/T4*E#ip[]H"YjdZ?89jtl=`E;V!8/SuG(5ACoZa'nMRZp)P@ZdaW;cA!#<->:H&GUWFOE8FmeWO&(7Z9Jl\iNl*(kF5M%o-OT"8`2?QSsKTbVj>i=UT@sZp(KbgU7=%/OX<A,'_nbG^o8[RlmV1%Tj\(L0kZ)6;RH/JMeVQo6W_;0$UNrS)-J`a;,:Z[)_gu%%W9RJn+n.gU'=.lql:F;l_e0Da8P7<hWf@f0"u"(rh?4lI1!HO!)<T]#eZhG.#Xi4SA<!^l-#"Q10;o2*)p13BBGa$9cC3[TPT5jI%]O8OR-M?`hl<%F;ka@YXArQZ8P,)&P_V/$@Vl'*&W9TIr7_t.KEjF*JTh,<HbX4!5:lHOnBi<7a91<6AL(HmH]4DE?8IDC.NYD"8%7[hi5UT7mUKqZ\q.%A#Q8Xd2eQ.)fl.odT?/-J.p>"^^GI4\$SD0eKB[b9$XYsQ>6o!4C91l7?3ZlgUJCaeUOTcjP!UuOjQql34W%"@enE43BTbBF'0Jl7<k3P8&34C)HWkCSe(AJVBe17:%m'a%7h0'?6UQ<?3S@"?qlGS>gqEUhiZa8c*6+eYJcW>obFPN$'Jd-QRMr%hLW%cH3^`Rf!.R=$1Ui)fuQ]2NC@9og9[QV@fqeMYX(R<Zl'$G;O^S:;:eYQo=PY?O-CZO2^6Yt[$`.;<gu-Ri=RVQL]g?l`30K*%R\gB"VQ;+"lmV5Q5QiW/$-G^WC'lgfR:=Ya[A0j6JHaD_O;)uf#[^6R>+EF.2Ro$TN`qUP@$"pZ9TVhU0PG#8*+jF0M\..@6*`u$%Rp'&i1LMqHmb(LjZ%5HMA93%4N($HN>$NT$[()C<NX\ClK"AUo7FW$KkA'+GSnk1*@t@,-kAkk$N'U0JE#>kRCaeVJ-"U#E,M=F)%9l7&0))/"#%60=9#So3aJjmu,Gr$3nNPT)Dgp<i]@fm=I+<sN5\%.gE81^ko,I+<aG1=sG@)eAUa^ueD8MeSXP+$)sKgp#(b>ZKN%C6DA4\X]X!Zo!ME>$6SeAp=H:)'Zn['lmn3OMiPMXX'ZRmH?nsOHmoMN3boCb6b&7cnlLG/^%V.^nY"j&-302&opI2>tZt^0k0S(%;V87*8?g0ed<'$LFNLAGeKpOkKcM+gJ43"c\Z?AL:"&-h?;d+o2Y;-nn-Foa@%=#IBabUfhOYa1J3lq@Eg!Cn:u-haWCaHR#)?6F%6"5R=Ya?RH/5jdK,[),8,[+?J8ZWVLeC'MZ8L1)C1.EN78HA'A'K*7\TI'8I?kEeoBEUUZB<iOkR\BaZXA&Ard+5IQ#<9"<6-,E_%U6`eULfTgU&1`/L)i+Vi/gof+=O]1m2_Z@$NWVB>3]?I-7h059P@:JhYrE/*Ha_FHCu>mFE\:ik6'?<u-DWe/g,`8JJ3ZTH5VOob%94Li'8:,NEF_m]_%/HF7Rk^jU9S5-'[0F*<f<Kl4=Ro#=R-UHB)6ar4pM;;FfK_i,":ck#j2?jIe%As[=j>i87q'FB,/KF"flL>[%/kbi"\h(+[YG2jk/sQ=LhTg$%QJ=CI=0V/P4#)fsRH7HK<QU@.L]J_^a<44hT+)_.VT0QsHdHYhPImGr8L.ZW;Km;C6"%4YUd%$r%=/dH;WkW8>m\3/YT()Pu'SuDi.6Xl7BJ_:ODr5u%B3&_1;"7Xa@@jG<1G*k6q8Kbt>qnp-aI&cF[&QF).WNc&P;OE=I#kJ[H=!91%Xtn-p#!CF<m[?W2*qPL`eh+f;A3d4Gf0nqrnAX`N@UjRBaA<(/<E\e=q5/mj+#Jkq6DO/jWlk$];mUDG4+c2)IF7..1-.P&N1Xga%YeTUD9.f/;Ul\U"0KU-`X3/0*W[)t2X?78Y<M,rnLoPLN[@1,BiCbY'\I:9Y!O8XEqo'c0jkJ/ol2/l'r1rMT`;*T6PFC<U^82mE%^84$7:0R#3Bq5&\ZUXP;L<"lOo1UGD<TUfMBjUSEbI;41d'm`ofh"u?!nY/YXO)@HCO30U[!KkC1E"PWL#r9e-5q6K#6VWZ_>rJ+%-Ng*C9X"1cVj7)?B+q&c9.e_CAXK/"LfJ#Ync^]@,o'H5_[L*A<0d8:mCCX#($kRLN-5"?5O!Gnig=Cb'g<0Ph(m,J#!CF<?Ltm0%_n.RV`e]VJEKHe$LfNQ,BL*ZQ-rpp!`G1L.%#Cph^6Y<jDrL:JE.n'5G`\Q)=B`>m^2)G)6='1gn+M$N;-gdk<uJ59+jj7sH`]B3%Gg(A-[pIh$:/,$%\]Q<Z)=UU8J%_bF%[?kK`:@"iZhjT15ccHi^9U:PJHkG+@=HYr<8tF2k!D5LI8LD91hpHkSIBaCA)D!o)a;VV%h(m2M#"2HOn$:'[hL'%aC9_L"l8+Y*Z)Sd*/To;SGNaR]h4ldK:Bir3\6aPg_-O>2M9&fl%'l(g=!c.?5$=ZV@Xd=10g4d-P6(.'%=Prl25g/!Q-&o!1LAArA=B2MpQFl:39A:Kqf="0e8rKS.gH+/uPEp.GMr?U(A,,G9<J?:01>fL'%[aeK4+,/UeQ%@W8PcAgqa?@O%nG2kIOZpGPRE9uV$Hl^5-i+;?MmG?Oj6Rds-NdgX3@7q9LC[?d\I:9Y!DukJ]5H%cb4%i2O4^DtK+)<VX=>S>0QTZ1M9+m+KD_P.%WPnL62Ho@"08Ut11<N>r]W,sG[*B+fS6?sPk>n4G%!\eWhj#uJ1_9/@A/Su+*D>Y;4YY543dbmE[7E9R3%l/rWku3n^..nW2gB$6%L-E)HZ#-k&?I*u_E_ot!hlN14f#r3FkK_E9.g'*X@:E6i2d-ucDgl'dNiJo1HtA\=%#Cp(]m-U"?-jW6#qaTg-U"Y**8AkT1`u@0%$\^4iAL@T:Xg,QHbF=fPiJYCtLlK*r6%1R3<g@a$L(@W2Y)&(T298Su6rfX]l^O2piCbY'\I:9Y!O8Y0gVG)a'l=SGd3sYFV!"_1%cMD6@ANme:FC&n8F]TGl-NfrTgf'2lQ;cp=)Q[.tq8n.h<VAB=$%st?BHf@CBEf?sJ>as`CYEGN*BkRW,1OZ96%76kpOtI7ScFHt%Am#]bZ`K1".`\#2KPl"\7LKCkbrT">7p9!.A)12j]W.^RF<U;M4a1S&b2Z,E/N0R^cW&1K/Z-"(nD<_Fg0N'&4;'[^e#EWBWl4S-%9;1;H&^i8+lt!n1NI/OId0_UU0g\?GN0&\iA3a+ZZd/K4MYgjK*O2lB*b6ZpoX</AIB.^M8]4l,iK9eL[&QF).^<p!BFc2@ODYqI%-Ni5-Z+k)+6B1Kj!W.5h]$4<2q8n.h<K<&>DrD(h::UchPQ=W]VRsLgU-3mD$:ep&_h/Ao7FT5u?$@m_M,fut[Q,Ni[Q-C?WFVa'%guI[HU*JeapamNp^ST7Q#/mN^D7&pA+1-sH6G)k-b(-E?G;#iXYe+@E&s9FM)<</.:F5Gna$t-kn9N^X8?Z3FDDIkbKmWe_YsS%J%Z[45[H_6i;LoRbom^XGt]DLT3G\I#:5!KqSWlFS+-!^4SDATQ4[i=BU"/;g^GB'CqAM,rj4VCNI5!S:W<T:N%,o8`V+l+or:'Ni2%3:>M?-a3DVXqIuo<uL'H"(G7j0=i>G5#>\L1<`Q!6rc89il2Gr^8NEXC^"C3U"&:kY)(rKY#3F)(\o9%0Cj6:;s9\2]'$K.!X`<,%&W;T#dUaa-g9#>,?hZ$42gY8s5m<);-P],(aadJnp@VgUl3`MG[g_klSu34Ml]0/J@6V?=XbGd5D1-R_i)PbHV.Hk+Op:6<@=BsS%Wlk7.05C.K`UFhO1&MM:PQA%hS1?1<bm2S?H7V0@43CA(6rdArb=)kI?1W0)UME&WY5-3o5O!Gni``nORh(j]V@+p&5!'YO<+C?Y%(H9#(@R1p;Yok(J-S:e\ZB+DG?Klo>o?F_Apc2g><sH=;U=$?$^O=j*b;f)>PnoigQtIo'7E`2N^T2!R`jmT(q1stq^8"[;i`1j6%U1IU)5_O7&-p&=9<9&5Z^RlG$IF&cn(A_L4T01NA7@2qmo<kZAmF?T'qlb^jmCs[DC1o0#IW"%gXXp.u<+pi]^arDT1_mOgU..ec%n3M+t-o=G\RgaOAj18pW'>Bh<7;U2##5QAkGcRA']CY0cQ0s6=jcNBAqY[/PWPinF2*+k%_a1>Wih4h7-S:Xe<o1Q=V=h"ei!E,=%Kh!tHSuH7pWm#ZmUX`TDU.HOeRUhMR%#@pF=QsR3pgQ<2@UhK2OJ*)=Wj9;45p^`k0C_U.-%16jo;]a>dTslTS+Z"d]uh;*mOG!u%AAD-'oe($eIL@5;/<>L;e`S:^@TBs>\mcO@:grH@bYSL3<S?fO7a(Mp-'bQ:L)J-aW%.[MfB@aQ.gGg*N'VoSTCfcG_(XIB?`Zd\%1_q?bFu&!T`mMJ4#CLtr@"eANJV3<"^oJB$6`[h.(BmfU(M/]!=>2W/ftDA1I*`uW$OstcWku]S6F1M"pqeMtHt>1VXn%O:]D?[%%:d.k'Qc@nuS&Sgt<>?i]Q1Lg;QJma/ih>m8qYXm>]/B#+ji[!D<(N`pR%*`T.WCqKVpKh=i#Wg(h<1XJdq`0$%B=@>TNC9+%l?Ba%7$q%UQrmA^KpG`to35NFe8KUMjJNn(^N;tOr,s%Rl"`+t\*((fR]#d/'B&WQkY;;rh?JATb9Jokq&ha:&?Esad.PQNq0<^KIU3KS%P6"H:m^:50Mk0@VA1h>$1,m9M=u<>oDVqkK.Ns24ij#/n4B'?i<S>"YhRF)?+"S1O*sNV*J>as<lb.+V`7u08TSSS1clb[n&?Ers%DCe[kE4e:GN`VjFoK8Bu?dh?b_skY%YD:-KDkER/GZA6<C#T[f(fNO4`frYO)%]g0HHch';DR.c^ouk0/l["$).k9!@TDC]id`\n%UPD<_m.6DAn(UWa7afJ"_A+T>Ll<Y>+?Sh5<J'+h"$ROcFNZ'o)=UU8dT>Mr=ekfN%S`"<4#BJ'aadJnY*4oIo-G,P0#J*o7F-(g%k.A"^PmdA7CC=U"CTHVu'dfs'SJp=,#<nWF6E&.&8,:8W=#Kct3T(8SOtFT<AAD-'H]!!\O0%;(T>a1!:ZFt@aadJnNb)O"V>3B1%Q-1jK)%]g054d*Jh_Y%TJ:q#H+\*EmJ65hH%6EG="WYJW!cF6r%#CphGAkh/*um"rKd5/]-j*pY\`W3cQ0*]Dk-8mDq@$q#<0_gP%InnMibm/S_*XeH)UC:^!<0^D>VF.KCI'EV]b&?&7+(Zi&@TDBrl%%)m'+jK9M,B"-ANMMZrOXH'-aeEp`?Pd4)NQTE[&UsTWj*Z/%_&A@FAm_4sZ`d5T1*GF'3a&)92"^j@'k%BU,!="D#/$sU*;L=]i/8WoZ-ad$q8n/c.T?(:*UrmS#\&3s1s/W!`2[i!H-lc/356Xq%cEBNg1*EU>I?`n>[se%78ldR^$tV]*.bDLRmlkD$O+hcA1R%o;<A]M9hgJ'B/!j\!1*EU>g:b0)Hnc"efU.C&16_gEWmKLS_WCGS%!kmG$ZBLlW!aGDF+SXhkgd6!+mW4R-Rho>p46CBmNQ7AB>&4g[SuH7pWpKS&TNkI5k7@/NX?Xojb"r;\WktqE!h\?MQ'C#4:nnG1%5ZF$/?J\LC0c0a#d.Lbok9iEr8mLt6Z:=H%k[gGAG]h]]J>X=KCHY^5Gk_#9+/(mL&$hB":Go<,Hfepa?d+EP2WdG\r8`^k%U.H.%DgjuK\ElBr#djJ:HIek,ZmrjE#6J7+]Kk$0?%$TGi2O_<QSr$sKeJlW@\_0Qq8n.h<K?t6=lo2<>%_.,1r<_X=,%SbMl&r44Emt7%Eo/[VRP#D*<g2'6#.1DH]W.YeQR#F6clsM;:"!Z%4\mAimM/%G9-Qs:N3\WJYA.;IXm!V<4X=L3LCEa;!DuitI6g[NZcnc)]u?j\%mk^1/;,t':Y0GHCmYfd?Yu06\)9RJ3<VR:pi/8V.LlEF-6&%-;Wlk=0p5@Y]I7Y_8QXPV(+BFb;k14_u*&3M.,M$KU"/;e8qO/OA%IJ:S)iit2EoGPf%=B3Y7f(8$VkN"`@Ss(+)-j-3DS9K7Rot:*.XVJ^eef*Ts/bV?4`\l.i/pu"q*Xf*e4B'?i<OlF[&#5lII&ToM%f[M;G$tV]:<L3AB[-#u:K+GsUO+fm$cVOhaWcF^b$`c*kS7*!KB@n=o)%]eZWY[(IMYiQ/<\D8uAO*=Ho]hf_JHkG+@=HYr<+<"G%o;(?Z,a*8m-p)]`O8Y^u=nJ.OY4U]Ej[k.%nt`$\%H^ZMqc&tcj70rYp,s2JZ9QK-#"2Hoq2I]!M?4ZX;'6,>8^FFMf=mfWnbA\m%^h(5Ff3MsPSIBbCZ+[S[Vk2Og0QMlKO'I>(UrCb;9A`XQdsO6)4r95UT*okMWkl?JZ$3n.IA&s4AXK"sGcGc=[4N2rk0cVH>c?=<%AXJnXXGT7+bouKWJYZC;=il2jr:;f7['U0ICtM-lCtK/:P6%qgS9,]!pn28E/G+lb6Q$G8jm(]1"MS",7Vo/M#8t[7=B4QJ60<Le%anFga?2'UmIa[h*$%4`=]d:aJ,a*8m-p&=9<+ELT=oS%%pj>dVTt[BFA1%Ice[WYRNA[.X1e>%`Z]bDc2<MN6jf@1p6]E?qL=sZ^%]C5R@c$<U_Jk+Ed_WTrMK_d[VdAhr@:)@[c41C"B6Gl/XK5%3&n0Zu&hM(;jmGU5^Zk;SW[\Hh3k#IC^cZe2s0/Q5.%'u,u:GoSm%%;B)_^=Y6$f[qu#j<k%=<Om;(GW[^aNjtHX&$hCZVYpCqA$hscT8p&.G(?T>ariJXcrAtK]f5p"mYenE@Uj@!A1%Ig<S@&?Q)+!G%U-r-pe>PZV18(V`Gule>n)hO\>,]GeD31<qBY#sFqi:S:B"2:b*KdUamV&J;ct-(&D9-m_LATo9Z;<N]LfPfYQBkCWmsH3=CHOen%r+<3Yq5r\Fb5%oGPeK#.?I'%okiNp)h4/2?`Y1uQkY9rl5h!43q2cGe4sY;.e&XZ%QsOQWT1?Cf+c2LnDUR!5@",fHZuuqOf-cXO%o$h;!"'S^W2O^b'02AO'NO*A]SIC=SZJ7;p^HDRE0pY4DN$X)bAO*=Hr9bWqq.US;ITd3OP6"H:f"2d[#Je+keK\OuH49A.!O8Zo%bBq#0a3.uOGkDrsJ>asPCO(!U].^-ojYG%V<VG&@hPhafYDZ_;!PUOK4Z#oCVH&VNHXG("0B:\urY%Kj,p!H/KR$ROM,e,:doM+s%oQ'5D3Kg]FatQ1_\b&$EFM+c'XQJR)^,TF?)TRbMVK's]'!o:QKAI7D53VY\$ba:#:Bnb;Ek\MQ_A@Q>&K?(;K++SFe%AZ;J3g@P%"^`ek,;tjC*NuJVFFKX;qQ;d%;o0>`=N&2sf'uGqHILYKhge#]f`3*60oq#5`k8=g6rdC$f@b[-[cJ\kp>lJr8rKPs55H=ZNU@Gg%+/jE8W%cOs1/V'&HOQfP@ecU%4;QYIcgXsqepD.thdJD."1]68/r)*/9>nhgl$-2sUZp'ggUFAn*>C\6nQ8UrhP5,*?Z5d;[/03I%F7,=PoC4+nI=19mVNH/(0tjHL[VWg9)G.@GZ]bEnC?ubm[i<'.+PANo:'Ni2Qs]GW@r_9?,KZ6[G,fPqY3!g@j*Gp1[Xg)84^t2:%45Q`QB/(u[a.#74F4/kaiJS:4@Um@FGc$X\Wj9;"Ks$Ji0<&LD1<`Rdk_#I?RBQU:lgDYZMT+R!V;kR@r`emW4&<F$d<nN>Q-1jK%)%]e:^VIQ\]/1Vb64h"_$c*rM)=XZGFjds:iJXh_LlJO]6%77Vkq7Q\5K6GSj7#@hHRuNeo;W-2<Mf^>48A0Y0*nrj^IJ%@J6+W%%L":D*$]Tc\/fS@L".j8k\(PK]4FC#8+u\`;+?p_TX3.^6$`c*kgaErCEMM//6Q$G876f88dKnEOnD8PRKbrp516_gEWpmLOh5<2M%]_B!='["[%L)J-aq!FtJ+&8Nm`5!2T]82I>h&o'&&?ErBc]*J$<I3a^bYSL3<I)=:^1J,SH&mV\mua@RAO'30rJZ(e[bq6&<\D8u%AO*=HgR4*SpcsOub:l:td2TL-IaWY<ep!b<@Yj\\h".NQ'<B9):-5L5+1/c&6L4@`8rK:?oq.;h;sV'A7PP1V;66Zq%H^ZMj.'c5%G^Ri^d`73Mjsn:8AAD-'m<M2oP,PObO@78G2sG$Vi&mp$'cp_p[)GK4SLoK<A3a&srRQ>P%L8UZlQFcFFee;65ccI5Ql,V2Ud2#J%PYm/j+KESXrJK=(q=&(*:cr!2IPTi\L49&kc73ng^+'9>^?R+*l"O.*?euSL1gfkaMi=gdAL7MJ.U91A\>[N=%rO?#=Ld17Par5=%<TR>[PuSl4;ISZBbYVJb^+-VUdjPGYH2.:tFbo_Re9g&IdLiMeI:tfLU!`+j@=HYr<20Bm4SY(1dOh6\AAG5ar+HrBr)+*EqPBi^%IPN%Gb1o,u#!S[36**lK7N'@!W%.NMC-JTTh$5F2>_X-=J65hHiALAG[]7Bb[d#8.)%]eZm2c`>?]:!W)l)F96[>F#j.LS+/+oF)%Ba:8K7RF1p7eXKp_SiIk%rQq/<*6[>1R%o;<VCe#Su>rM#=m!JiJ@.E8r]FgM,hiK_(f3'_#f1r_:#Y`iQO4d/sCabSS%NVdgO^l%O]:.:7_)*Kc1elMmlL052'-,QBX(-^H)>U&)uUEJ*^%^1_\WR$6fVQ/X_KOc2=u7b-T/L4i7.="348V\A3d4Gqn02T51_rYm5U93%qoUTWl$9ak5*0g3<8N!V:N9O0VY%F@J6!DFR2Xn/TYR:5R%"M/WhCN(cPJOqV[n`WqLAh9R]d.kP89^u3Rr?%#BmrH1Th#V)-9<a%NKZR+]BI]lH$@S>YaOX9YaIDl:3p63\7TXLk"?no>=R;fJ>X;YpTt_2@YGZ(YsKGk-S:cfm^%AhI\C@tT>.o?@f=P'4g1k>Z)[;7%@GnKXjUc1Yb=DBMJ>X=^;>XUtguUVY&Eu9;U[4f><Jd9\EXb2D+l+or:'Ni2cqiBY$\dMs*o`m@6i-01M*:(=P%E2Tc?"':0=Eha%2RYS+?<,D:D.XO:BapC^Hm6p=4rqf\BHR"%b'2CHW&`Xg&h$pQRE9t[(%-@e_$\F'q^2spq^7$_A3a+ZX*[_PHr12Ifdbr'6YXrt%kk\6a4fJTKkij,r4e6kZ8k5s4qb0r!n:aK4>_X-=J>aqrpS8T"I!u^%5!KqG-S>%&$%>RkI;ug9,3*E0a/T3IIc!$o^!$!bG\W?&%e%:(\m;/pQe6HQM1QBUWNTIRpo,@&?)G.@GZ]bEnC0\-Fjf[6UMTFFi)It3Y:F4T[\LI$e!l766IF)US".j7DG72jq+FI%),<"iS%+?p_TX3,TZ$`c*+W3C:[Agf7"S%\jM4SY(3MbP[h=&nmno(5k@m[5Tp745I`k_$gR!rAJ[r3H-0\Xnm.?nQ,7O+^PH>1Fa%Q/M,"%K+C@@[u@VV!UnTAorI6NmNh9fCNqD;`ot&#4],5OX6)pDab;B/@`1`+*+UH"@TD+G3<nulDi*-A/V=IC5ZAKsZMBs8hs_qWXB^Jt%b(*SoNeu?QiJVDH`5XWIOJ*)=WhQ+DkLOia;T['mR%XqE<TTa\p"ef%0g`Q4%e>f!]2RJMkKW5m8berY4;M+SGu[;J!DXFIf&rOY%Gr?@#;"7Xa@@jH7oZZ-s4s00hhr;AGdUJE_eie0-'<B8N:BZ1Y<*6[>1R%o;<V3WRq&VH`q2umfIE=1a:BnJ3EU;/j)U0':,[6#V%aag9-qUobT#DWh9MT8%Zl1:)>Z)X>d8-&GEQ[!3AP!2*EZ2'N4A^di+kBBP1&)QsBZ1+X2T(f1*`2[kFFHI_o;7e#1MUrt<)%]eZ%H>Rcm4nt14<\D8uAO'30rH^E1IJA3f6K'hO%J#\`YA2k7XK9fsTg>tqR%4Y1Wj02`](6tjW0(W60KU0AWWms_)gjB?6u7f3KD]7F%<0d,6ds^uK9.F)T$o=+KZ)X>d1`cANG^3sBY<G/gn5No0CXej-h0l5aABQYg)=XZGotG%hBKeCZ*XbK=cVFa5<S@1VRrH@8nA+f>%I<O&f<'W\-^!Wh@^=\>4d+F3=F-?X.C2@+g`>O&r_7F3FT<r98BPl'C]W'<7(C/,Nj'XUDC?XilG8fW:o@h\6k(803,@Otj>1Fa%%PrL[>&GJUfo[#"CI<IC(h&<nS>+6EUHuZ)I1_*NXSIBaCj4qqF24?1I8&WCX)<<.IU8mFT[I]Rgi/>e"&K@(!#8t[7=B2LU^O$uK%Yq$ZrYq%fT:^0<fd9@FY4n.Bfc/shAh<%"X1*EU>o6"nbHhW'u/!j\!d\:GXg%G6rq;,HI79>>ukUIV!<&.<No_[@tqX.!+=h+qs%<#,?m1sI4frKoCc+2d9T,so;SFL8'AT5@o5mIc[h\X9l7IYUG1mpK>L+C:>c2VQjp+,H"r).b/tSndJ#*8817?Yi;%ChuZOnrj*Z%WpC\\Tb9Oc@HB8g:^4jBjj6d`do%fGdHhnmc/.V2"('NN$^^!q5"h2MB%!rKXrhV[((VK:*#nF[$^Mg6o$?^:1V`bFN'^6#V$=KP%J>asol"6C.KeFcV&K;Cc6&%-;<YbUY1\a4hQ-1jK<S:aO^//sCoL3WdJV]#3#16-(I(r85GV/5VNUFNVd:/;1k,HN#iudail@5[l%^\]kDVoJ;tViUN2mlsP@6N>P>5OP\dk[jBjrg__1^?5=jl.7jrhp9$55;^tPe_>O:J%F6!e%$dVYA`NPE:s80BtBS-pFWLgcg-8!%rUuF-E+a$Aj*>3r!q0LiCfQ%@rR(5%Zr8JsLO*jrfB3F2LYe&<75/*Ga1(!-J,)3Fhu-i@55"NobO^gH^,YZY7)>Q=h,TjGZu87o%%33]3B)AniT`&u=E)+k)pRaRXrtXeur"m,:VLSI5Da/XIoprtGJ,0&00E:t+Du]=s=4R00gFp><m^HR&XkLPhi=FiG]@lercSb,,%hu3'ADp%O`q;^qYqq^Z<Rnq?`q9<hBm2piJQQO!<Qho`KdljIRl\sctkB6f]rm9R#j/7<>T9dq:Vqm%sccQ'khk*!gc1`*'G;%Pg%UX'P*4Jc]`%AXI)r\)Xsj%oVkD;=dDQhNY[SX;b8U]b#mH!aJOePhk,'gMTq];#73ID50QMu"0%rQ08mDa4#EfBpZ@5"<$LD'&R0%=7^L#pDWOI]!)-^o9;qqhtR?!ZQgjR-?N_'cMCuEcgfW3;f_d<"N&&<p\=r"21q8B$>"2J[$KT4c%(!]gF*"%B!1V!OSNPhHh3Iq%BZOT:a@.a)`K+nK67.i3=\*/[aEs4rYE4`GX]8_EYq@HP4G@j<7!NtR"Ga7MlY>`CP?;\,Q8=Ur\:NCMg>eQfR=Il'E"8$K&+Y6L%bKTjV/_`'CF-5T6S;#H8BUO4E!%4,$$2OLI63cC7,3(t\',&i!YI^tE'$X?7#>'T<GN]E[U1Ke([[2#f6us'b5Vh:!??!?A$,>.=%i]$$?,Vs?!=[1YU82IICF[#isX*pM!Ef`u)JX=)3/rlZo%a5961QY:TJ/e-IAmKNdQNS@*i=$tD^AW.fl&I"J-5'1M:^3'h%rd:[%e]d]4?="?Rbu$G&W?JUWaZWXpiB/u=h<l0Ijq@FGS#9f6K1*_3`,ae5[>P!p[0l"<R;`8s$1R#r`%8\I^TbGJpkOU#^s2K=C!SAq%p?0[t87+.2"toQpE!C,**5_FDE!ULpOr4f$K(IL9(`$DqLIK?P1?1j,Bk00o*r;f/S4&gDE#+TS2tEQThD5E^<pR<nBqA.qGm`^W%2.cmG5#!C)+*5oCgEr7hgegssis"BGme+P=#&NG%DZMn"O>'Jh*$d<],ZY^?I3RX"mkY9m68IRj*d[EC[#CD:8GM*>-p^uA/3+@1%JY1;5WYNE?qr8MGE\<O7Dq^UKGVbHer'K]>,BM!qI7/&(2\Z%Oa[Ub@WU_=SNP*]LDe;<_Oht6lAper$K_5f5Wuih#f=AU)#@s:$%E$!H%U:Jd.n_[&*(F$XjL<M>$<2&P>V'6Io_WF0QR0ZY>($gD)0k'a:R'CZa66,+4Bl+EiY9tO4(DNC!&>sQR/qiV?2aY1KE]-6(%jXsXVb`%CA#K0;mF-0.q:ok4:6^'*&#ee?G>c9DHWVTff'q3A56qp"Eb=,Ui1*IIc+^kK)6@c\rJuH[tPNhtZZ&b:^9kGQqA1Q34%)M_%qA)2);:,!'+'5XH'PpdBYVd<sn@'`\g9S=fd4jr%0lpOQ7V9;;`;n5E`AS)%2Ue6u5&4a9DWZZ3>W,VNpbX[A>$<lRkmYSWY%RPEP&+eNXk/kWfTWDWOb*PuVP$5N\5iM(?kj5B,rmkiD'*>QU^U?#k-_k!Z0*i:BOLLpV<!e?^V7`FpPc+,s(SZsSB3"mH-V;bB!%lkgBu,fTu07>R^DI0]HILXtf/'0IP["Nj2i;n9pY@u]6Y-)o=(UYI^9jHI<2H@^]a2IKTjE&`!:Jc(AAK=dtR1Mf%\CH%>&9''r9%+J6)!FLo0RojTmORB(G_#]Z*@Vnpi!4N0u$cEW?6o#+DnOToh^iRh<6*8I(iEhlZJ)T^b.,pEW&2'QTU6rE6;#BI9e2$oO#(ElQ8%*iVAk%:#&G>rG"hj^.d<#&#cu'/rLJ/fPs/jm'6!^cj)%=U9;:j]nU87?c!b1a7^GYUB+L/$D]'V,D:q%bp[u,/Q5[3"mHm;Q!b=%glB)V6Ip?0(EnfZk;:Jr*W*Mk&f\QTN=`".[ohd^M,Y*;>qV9h$Is>[_m&?J'OH]R\skLl<H%#"rk:a.2g`1)rq(U<a$\'N\u^QE%b$FVu`9b]B;PhS!`tlO[?I_qJ1)hQ=('9[Kb#)=^2X-Nn/7uc(?h6.F6B"OmE`&;"]Xi&D3h_<s02.VQ78DsAU?"4O8ZHmc#]Z)U%jJ(]n*!Zk&j03T%8fZra\1ctk:lfL:6+KO`<9To79XA42cQZg#O"q<A..sU$i&J-tZ-sOV^=C<88;kA?m`MR<Z]TUrCH[A"`_ELl%jdfHhB#AB<V.-i,fa)RI(KVEt>kPMhcO57iW4>NeMe%]3gUDL!g2%Te9diKVS;@fR;H$FJH[F@k\O";AV9;;`UYND/lc6Q\cJ0[F%\nm$Zb$FR%RG"fdZOg6M;)Ub2b/L[99VdhJl#Mn[;<XIlP1q_@=@A*)3>6+(0JM@,=pgZ,_mkE90V0]49hV0kbJhQiR%ejs9[P7-%+\q-rZ=ETWhF$1CTTluZQ]2PH\U,efc.qtd!q.QE2-9$_O\Db$[(nF9c\*3f-c/UdX@,qNO_^B<R@8e$Q\uEQEj+!9b`:uH+]07.%)^15^cb*3=G2ajJdUaZA;=:7q"S-CfNX@?@7tmIm=<(f!'$KXO!cATi"["LJR[.'"k=J;t[ps%;+Yg=#>_G)%S#Vn0:jXbsMD&Nc%`)5reQWRj4DNZJT2F<qV`?eP@j0D_lq/n@975@<*F'`=D%>1#S`>Fms&Y`6>g41u+Sa3E$.+DLub=.5^ga-#X[ps+DO;Jlb)^15^%f3HSUN`4.hiY8/(UrC.QjL2=^R0hBN]C(k"7`B,NDRl4H*S&@XU711;KIE+SWgVObf!Z,PCH#R'-'!$?]Wl*mk3h$J2QgYK;n8lr%\IGIRmMgM%.dXgQQT3,N?46J4AgV7*.U=Zi.2A;ORG2[-Zj8W';C4^EV4P5d\IHY%^+\`m*aHr&VfG]n1OISR@6;;/Lq--EN=\Uj%Q[\ZDnnn*/er+o(eQero7Tpcgfj1=kAS*8/>75t6HZ:Wa_A7g%Q'pCSb:Fi`));Vh<bC*N=(Z@IhNLJ)h@jHE7&e]!AI(Q'FrUPp%Z9pmf8;i*)gZDb_geQWCP.7l%QoL@hQ-;o]Z?*KX8@_9g.!3Ss1:('\[a]bXOEh1G,"/D0r>[=QeO1b+PV*V`@G"t'Y%)(]6J=b6%+e:$H]B2/_D0`J7m2-Et,XqpZ7Yk!R=N?j:Es)l$8HS":p@XNFpcV\8Zd8UC?KN+Nbu6SL+\JT.bsJb!8j]Atj[V9&&ma%J>j'ms%Ze@b(XPRY!0lng'eN(*iHZU(.-lX=iEmI_Jb`$P_r]\>qK<#tI.Pb!aZXJ",,%,DUo2+Y9X3l+PC1K5#YIofE6nrSZ7f,9NXj#)G%Mfpd&)^15^Vc8YE\`u-P[Nc)9=6Xaf9W?B<NQak.(+Pi2&4NSio9"$J2D`W0%u<$"16G80cueBlm9$\u6nDJ^-:/EC0"D\,%EZnE%h9(qP\J->bjk^1!6LJ@DJScQTA/?jf2(l+K/k0HjXLCX6U_am`]&mIDgM'gPFq!g\'#Qfm,/d@HQHPEFct$q+Kq`\B#]Z*@k@Kq5%ORLbc,K`K3;n6"jb`#\]#K3]sEfj$mkYWGCEiRf3L@)XTb*`N4.WrcaekBJ79^+<p9Mqb&3!eYnAj\k%&Q"O0-ISWm[E`#kbXQ=T%60u^Y-?58sV+T31(hR&%L0;Yf18R<9XYCbI)446*1!#ag;/Y[hc7:BRiInnU'c#gS`2VNk_p".Q8j+G;/*1T#36Ie4%5U(eP>peP%&`P3_cMN6+_i5Zh'fU;42F<qVh6E$/NEhVr>rG"hjXtg]j`V&?*YJPlAL#-mgpF:@4!)3-OE^n`Z]Q#YmC).lB(krbKne)t\Z6:<%En=R@oJot9C<_F^M?Ue1KlW;L;<X<]RG"fH0qh^Mj@k4TQ'uHUg"3iblje]m<OuFg36L&u/MfJ0P>peP&`P55aL06.(`b127RtTj%Lf:igl>"R5/kM<\)^15^cb-,q)nL]V5aTRFa:jok3QIE:3G-1BA/57@OsN`^?FfpfG,d`<,F>2uQ]2R>k+6K3o-7VKnb?G$d$64&%+\q-r!p"NhFq9GX:>#nmPWRt>A2Xk\('6iaAL#-mghV\=b\S+9>Ufp_b!q2^gc9<<RI*e2KT\J__RTqLPe*YZPaQK,/HCfJc9sFa%6IR.$D-up=J?O6>*^U9HY.=,5%B1u9,)S,fi`'fq4D&O.3lL>P.<Cb,)^15^[sPL&jt]#Y_<RMFFqA[H6Bk*]\mo>+ZV'KQON^P^%Su[n+#R-L1=U6`3'0#O,N"OG>@RR"S,Z>D'gd=34<3p"bgEL$SRkkYN-ro/nNpY>4\9Z&IioUuu79UZ@LM&4uB#ArH6=@Kr.)o!C%k.G`FE>oDUfp*N!7Yk!RBbSh[R#u_dbfD4P+jS?GhK]E=2@NeA!f!h8Mcc]Ql@HXlmE!jG,$W2YLni`S(GWB42bB8e)^.u<Sib0:%h2YP-OD$Mo7_/@.K]j'FqBG8=D?I=9!#6=T9oC$?miB]hb_D%u('5;;';]a$<#,$W[^[Y=Hdc1u)R`,&VdtNJdu*5?dahSXTpJm^%oJ4QW18R=desb?4)Jlj;k@_V#>AK(ie30-$ZXLj^+Y_rL>_G)%S$pnl7P78t/fPsoEqP+hfO2sY7ANSq,*K5Di`%O2#;`-:HU&9c%b!fJN%Q%g)O-knsiUFH(r$WPt*_@@5??n]nG3jg+8F1q*2F<qV`P",bU$#SZFPVku"&cl3UgJDa*A+bpWP4-NKZm@S'-TuE_N'qO%hAINQHNRn)RA/%W%E<;+HGLe7\NlPg;(D6F:[CW#Co!4jl#IBq-s'bbYcY`YG2*fH;LV[YB-Y?ogiM@cj?>JB8ZHmc8;kA4>B#Z_%1NjBn+LVn<UJ_mZ2eq=`mrlp?5c@DB-kg;lfOXh^")P8TBBkap@$sp'aAK+Sh#NqGfeHhB.A&;72F<qVh,>D22KDBhFP-q>PcHGu%JA]`-+(c_4LDeB+18R<ueB@QmkX[aWG#*Ah0pJYU3S5J'B&`o*+a=!1>23X`jZXc"!,f4'&6K2XJt.h-3,C9s]tq8_\(S#1pQ/L>%B1h80VfK%c\/h')+m#2ZS;e(M\Q;s>K^BL06G,X*2F<q'4$BcLLitR9mMbb[\8@J:&`QdXL)nP*Qm[QOcP&8W+c^T@>g1u`_W)e:%GUOLS:?>qF1Xg](s1NU_b!\!PO`N-eDL4D<#d<BTLCg:[&+!tIa,/^tE?\43dc.LIQ<_Yh:>?bN\5^ZbVfK%mKH5j!,3$s%>fm[J%WG<tpAg.mg8sb<D7R^eVE#WBq/HR7*3=d9j;R]oPb_AIH6;bfP(EnfZod'hs/t*70QV5<m7G.rd.Q8(tZ]RmYV9;>aUYGqf6>"5I%4!E\2m;O\@.2@0a6P<9=4"g/X:qP(MR7N7Q-9LO[LRd(79X]X_Z3Q`%`2VNJoe<^\4KoA6&99Zq*9CL@)&+t;M&$.[ilS#JE@U^O%G/UBe"l06QTMmK6]P9;=S9`6\a6^<ZllgB=3)_;NaouG/QR>%RE'#BR*YK+ib!q1c?V*=R0H#'r>0TF/eL2ANEH$$_3>J&rhXgR+%*VZ0N^g)R17`CNHl`1\l6^YP=YALmp&2I&?9S=gZRat8P_kFIL34([^+c^Tp>]SUpga#n2CkOd5S(:AI_l7DpE9^=Z6Cdmm@4XIa%`$S]:U#o(8F-0.qctgZK1YZ]5"aDK>GmH-hH2fNM)pF&5SqXsXO"uh5#F"]RW0bDmgMGrZ&EG%3Ef[kZRZC]qgl>lP&TJ?l?99Hj%;U8<_b_1Fln6H?jM.B54VNPG4gn&ErEHaTX,",;nPugan_^sS0?kuMJ#]V=QPoR9n^g=a"Z3,IDg*om:lD!`WJGs+<p4O354lPCP%P;nhc"inh(%6Pb&"3O%f7A9Q5#&#^"j#jQ%3"9mT6569]b8?ngg]f57PqEjr:?A?&ju.0MWcZobMo-mj[kPU<fBpMY+c/k8VIb%e%Om:RV06,3jfklXtaXo7tFA6s(W-uHg\/fLioT4<9AYp==8D38i)=ZQB)sW$/5[C%!KK,6dQ8iJpn,"q)GEajal*:o\.!L0TFlCtf%_O+^30IBUKOsq-7Q8rQpr6'b&qNWiKU+#]U(!#Z7]kCG:\O_Xrrc%#u3jZ;pI[f\FKUAeOV/jmeE>EuY!qqC],F>2uQ]2PH\Q>dk%B#YbC"(D^6\O`Ss-sl:\)pd7WJZ%m(2()7=lM@YjlSbcrYfq*\=QWF4pg?Z?<e[o)BD/dc04'1-\Or3TZoDa3Fio&TAnUNFP.A.&%N1V]DoW!XGaimjlGsEp`-pq]WdA1Q,(IQg]gFe$X2;Pa'.8!ld<H9%W,ZM?[jG?O[@pO0K0H5>IKg>*%PfcEijeai<RRe`udcD[@%U<kLB!OnaLR8DD/S;@fR;H$:F)lY)^\m2&M_#Ut4\L*^R]1s+CgJ3T'\U1JNl^hmTgHP6##bUoi/j^8Kl:Ve"B;CsYr&WsradB,N%R7I_?&XojF\K.HB7DtjU%"hlc0:]QsR11CRKtmu/o%P*=8%D^XGV^9S!$Gi'!6Rce;n6TOA2^Nk/-OO)P`67;k&0X0"j+tJ%Bd(h%.U=Ba)&8S)OkHtJh]cHD5Na1X;<jD3OkJ+!>UXn8jW_XBgp@8@)ho5sMID7FOVS02[`s*Pc0WY;>A"0.RJU+G<:0p<bfgp@4WoJu%b!fJN*/+6uKWtD;YQ-lsOAM)8]aaS1mn1A"1HYI#(9`OuNk=h.)f"05,Bqn''tKBb-UJ3W'*0Q%%?>J<I-J^g(i!>+L0D_h=r^MH%D+dmQ9K3@p!(UJX.Y\XkmWiC*G/BtMiCjr3jJoHKlNa)E]+&D>KtuAaE*_,A["l'N[fh?nagMIGp7tuq/\ePuhQAtmS%\&g\f<,/%Y0uEPF8'l"C%lhCqn!jR_*d3),`6TjgjbsE88G*s0`QLg@[)^[7Ra31-F[J\,\1^a,j-=&$5RFSS4?bh@6J$BYb9Vr^;,jjQ(-q5%DT?JL+`SQ"2F8DF/pY2"2B7E2h\K&"CkOd5M_f]9@nX`B@S;ApO\AX9RP31&SZoKYPVWoG.!<^CXkRf.f6g(Rl#O>Fa-O9VSjpu/%,?k\8F;(KkGK?t.e)c(gJSQFEh:&R?\`Z'CCnLQggDTgu*IZO,U@0F$j_>dbS5Z&#K::gYE%M4&8?#kT<,S/T\IDf,.U=r!*9Aee%X>)M.P>LLa\Z+1B?f8Gk1qbh(g<9Ynbn?dLQ[B4E,p*5uI:VsU*uPa0W9FRmqQpFeg.Z&*]U&,M-R`iLlNa\=kRD.A`7@7_At(36%]B+V6g@E$m2KE"-E]5$V'1]T[Sq<C?Qhr<:Y4kdO6Cc3;J[(WI0k:<h0grQCVC48c*YEQPfhPJmS;.YCR:dSTb`9<`4XBGfk=gOg%Q(+YDAg<Y<8sbMK8%D^8R-\u)iuSiN3+X>QWSALU6T*g\#Rc1[+=J&JP]&c<mru?nlZTpGdN[],P*Ce7V,E@;7W>j2;nmU)-)'HN%>qXRbU</_14r4e9amGJOHUuBK1So,S;n9DdiAP^JWcZo"EKiQF#)8Vu)<1+e2fL+,)&8"_l!XfRW>*WELnW$=Q+4&\M(5@F6\qJd%2%B"_H`;i50/]8X&>sPgLj'dWX+aqkX]0*l8%JI5#9;B2`b5oM4rSAm\5Q]745t6pmIk_QDuP.X#kO;)W(Cp,RP!tk<AV*?[9gOA%fNc\@gZ4c/e]u\ERN7G#HUp7cbW-#MPa`cc#hpa,&`T"(c:3Ug\JOtS_m]6m5TBeg&9BIe.1/4:AT8Y"6B/cjE9&L8.8%9O?#_rL%RR5)>RQ)*,:??Am(LCA.642$(MlL%EgtX>Ck2CL=6Pr^M%j>R1`2VN4H=8U\b!MrJ75@<*;m(.Qa4"KMj:@/G-:3qh`QJF&,F*pS%Q\uDF\T?J^EBA6*<9^\#i`'fqEYCSBJl9>[bh38APcG=@^qm-b9M@do-RP@AA4hP^ksT2C@^Ani9S=fdeV?8i/Z?pSm3W@#m3^+I%>20EYV@RsBct$b/:u`]Re0IZJl=1h>*8:$UL7,<%irQE?P8TXS*Xts[\'s/&C_eLjM%E+T8$56t_]c5q3!;<[m:T2USuFXg^>[Sm%_'mjb_46Jr8%E983G..Vibd?rPVQ>)Z4Z(qmY/?JRRe`udcD[@U<rfh7bDYk=p,gtP_laqkRFj^M#k<+Cci;5#bD>nH+6WioS-M@%`.6]Pp841!Vo>M#&9AS\(cOFseYb.]b]XpTYD#7+V/1fEQ&F[I1Qb9rV9;:_7A4e6/F<*0]J+^<+nHDn7#4a?WTKQWdf^&0B`dB?%/Im*[]]>MkG3iO[8F0Yn9'%\9k03XX%(D?l;PhQ+Lni`_eJpATC#K)t[$^[RO@6(p<--9D-]'E!*[IUVKIBIKo'4Ba\C;6[I]86H%OVW^"=FM=/mF];GOP%FlPfh6HLT$cp=#3"H0p!kj2F8DF*bg&Q9K[<=?c`&"b>3n,fJ2@44`f:rgXiSLiG7&`W73U>Sb^J;*OB2*%C`tKJVHed6b10!0:,o],cJ0[F\nm$ZQ$X&7(NLT:f#00UCLYFU/C(ND45J*F2ACr_!VHI2%l@.J3i+>,DF6@(U$--RM\)e,n\/29%O\8TKb=7;_h#'Q0fMR#Z,c^=M:PWIUjl0t&bh1P?JCrK8>geAEU(:a!f3%Yg$7P@TT=95$c1==[:E`3P)C\;/7jtMdW6J(:e1"ZM%5J#bAYb9o-qHsI@I(*Tm^dDR<+AqEB5`Tlo<'AHaRApM19U0X\9W?AhFV_<Y-s8sfUn!8Q7B(VPYJX,b/)Q$*\Hm2>HfXJN2K26f%FP4_KQUZ8f!I.L$'=u?&(TfHf;Y<$O3"`MCi/-AM1ms%_P9K&H-;N[^ADPJ&Z;Be+O\AX9PU=I[a.]ns33kOX+c91\]KtV%oE>b^%^-K47E@No,RVVXS6A.V81N*gNNcLIKC:]tGoLp9<,K-S:FE!`6jkg$ob<9D\RA%\Z%=2G-FAGhkS:qNL1=P1IG4YnJM4Qu#8;i,.%Q1"F_3?:!t<XXJr\u#ijb2)Y?<O^Fr/a,*3/HiRFcVbEH\U$>#PRFsO92_V07Yk!R\B>IBE(R'Ofa)S^H_p85R4q:A!19T\/s7Xu%H4]aWC_eLjM%JdGlA*:H'QZ?2gP_uDP_laq35P7O'g0=VL0Q;5P"cYNVBPlJ!>cZum!.J`8GNX33#a#9jl-hhAdmW>&48G=,+51P%3=k(d-S,T>c:!J_e0XRm\/f&\#hbS1\Hm1)GJcW,2K26fFP-q>PcL90YZc$.EKaAdZ4Z(qmeqbjjAnA=Y(oF&V/4*0!k[Q"I^]uV%7PJ@Pka$GgT6J`"[;<>2+BSmhKT13O'1]T[*m!/4ga#n2CkOd5S*%q4_bo'-bpZjU66,).C!LNAA@q`/fsBL[cA[tp9fjt>_ZI/5%^]H<),",;nR;85DR@8e$Q\uDF\Q>qFDSncE&3'qCf<XQIf5PEtGH*Z8_H::K0\BW8F-':nG`=XuY7;?+`?FCf`),T\7es:K!-h$S%!6R]5*$!VoSTN3pgl>X;<8.a7N1)6A53If52I&SS&@dH_\Hm1)(Fr6:@B7A$@]P3'O\AX9Ot2RGYj5mfZ0@Q1&Y^[rbn\98UlnR=%Efh+BK@dj"*IbKXSFqt'B+r7oBnq2qnd`FhM4:;5Q]6"rfVJ<9Z.#B02Oq8m![mDu[Q9Y"VW$k:MD$lVfoYWip(g84(c2\/qiupi%[hCV*PqEkeER8C>4("e*4'%Fa&hD$kH+8]0\S3P]G&UTaFP-q>PWP^MdEH8Z%u;R->U35toH<G8fITu]'-W62k<'K'4&M%[99\na%WSA.GgY@ff!Mo']TPT9@b$FSbk]TW44<u6[P`66PEcGbL'<!0U\m1JGjL+W"jL)AL^pOa3*k[e6*9Ec;/(<n(9i@h27^le*dC3Qa%maL!hpF,m9O7hQ%5>CkTiRj0O8O!bD/ZO(KYPG[cbk:e\Y<V9hiV2[hrE8g;pMY;[e+6Z0O+4qur7r"7>;^$K7\+.>%/QFUl].S)%Yk*6,++\lJLL+$VA]o,Bm8hO'WsCqP^jS\EgQo_6YAN+15(Tm\r'UTf]j,e0IHeojldsCbD;.;IU@S-8a846kHk#&T'3OmEKDPX8%peBQ,HXcf9$%*KH7ha79/Bh1D<CT'#qIK<-bkkI"_:K9J49=9J]$G4%fD_ILjsq,?.`.5nTJt0!qft@Y$TXMrkM)fE#l7Zk\m>>e%r`9,L6G@jW&Ya4?Z$j=`<rd\S?JgjNh?2"Y$+Q#(_1/$Ao=jC%?2":hs/QDiOhgd]cYH/3G:D*0pU(<T%H0ej\F'\$G+Tti_5F3R%h1,(*n!g,ZnG.=+q`gqW<Ic/5!UdsR((_(,4jUpH?Rc"TJ01-8l7Lle`-n-$BCsP@)7Q`^AH+gmLZ?_4!.J1%f1R=^Zjsr3I6#)b%I'*BL&Uk1#2H@h0H;9gYER)U[^*m]BDNiSra.F#)3(T/rs2D1=l(>]fgCGBUIH,hVbO<2nq<.3qqhL6IWn',dIehN<^]!_A[lo0;%r7=12iVS*`HiEfN`r4o/++F5aq>E7%r;CiS]=i^c.1V:`qjZJlg->Sr00apW0E2?Xq.li+Ck^us<-[-doj#/Ck>q=ANXoFWcJ"p5%s8"I"r9;ZnNI%e+:1mUUA^So&>4[$3:%$Itmsh:."Fa/#M!i\MPc[GmU?/mTik&df7sF:O@'8\K@-d?TCs)G:J,R.=Vq[jCr8YHg%RE,-pJ,f/I?i4[9T7?aoDa/aCmpEg/Du]4Rc[PRP^A6TOJ,9/6hj6"RJ,7tC^\PWO5/-j\]0H5_bn"1\ci*lkr9jG8J%W2'I/NMa%rS^Q;\O5`0J+g4`rJ+a/qL9)`Yh]~>%AI9_PrivateDataEnd