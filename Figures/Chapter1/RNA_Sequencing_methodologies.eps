%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: RNA_Sequencing_methodologies.eps
%%Creator: Adobe Illustrator(R) 15.1
%%For: Chris Roy
%%CreationDate: 2014-04-5
%%BoundingBox: 0 0 419 310
%%HiResBoundingBox: 0 0 418.2617 310
%%CropBox: 0 0 418.2617 310
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.1.0 x39 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 96 8%%BeginData: 10536 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDF0FFA8FD05FFA9FFA8A9FD76FF7E53A9FD047EFF7E53A97EA87E%FD1CFFA8FD1FFFA87E7EA8A8FF7E7EA8FFA8FD2BFF7EA8537E5354537E7E%7E5353537EFD1DFFA8FD1FFF537E2F7E7E7E547E537E7EFD2EFFA9A8FFFF%FFA8FFFFFF7EFD11FFCAC3CA3418113A83FFFFFFA8FFFFC3A0CACAC3A0FF%C3C3CAFFCAFD11FFA8A9A8547EFFA8FD057EFD07FFA9A8FFFFFFA8FFAFA9%FD19FFFD04A8FFA8A8A8FFA8A8A8FD0EFFCACFCAFFFFCFC9FF5712113A11%1884FFFFFFA8CFC2C399C2BBC2C3C2C2BB99C2C9FD11FFA8FFA8FFA8FFA8%FFA8FFA8FD07FF7EA87EFF54547EA9547E7EA9A8FD15FFA8FD0AFFA9A9FD%0BFFCAA1CACACAA7C3A0CF84125739575E115FFFFFA8A8CAC9A0CAA1C9CF%FFA1C9A0C39ACAFFFFFFA9A8FD04FFA9A8FD05FFA8FFA8FFA8FFA8FFA8FF%A8A8A8FD05FFA87E7E7E53547EA8537E5353537EFD2CFFCFCAFFFFFFCACA%CAFFCACA337C575E331883FFFFFFA8FD10FFA97EA97EA97EFF7E7E7EA27E%FD15FFA9A9A8A9A9FFFFFFA8FFA8FFA8FD2CFFC3CFA7CAC9CACAFD04FFA8%577B575858FFFFFFA8FD11FFA87E7E53537E7E7E535453547EFD07FF83FD%0BFFAFFD04A8FFA8A8A8FFA8A8A8FD09FF7E7E7EA9A87EA8FD047EA9FFA8%537EA8A8A8A9A9A87EFFAFFFA8FD04FFC9CACACAC9C9CAFFCAFD09FFA7AE%A8CAC9FD15FFA8FFA8A8A8FFA9A9A8FFA8A9FD07FF83FD0CFFA8FFFFFFAE%AEA8FD05FFA8FD08FF7E537E537E7E7E537E53547EA9A87E535454FD057E%5354547EFD05FFA8FFFFFFA7FD0CFFCACAFFFFCACAFD13FFFD0DA8FD06FF%A858A8FD0EFFA812111883FD0DFF53A8A8A97E7E7EA9A8A87E7E7DFFFD04%7E7D7E7EA9FD057EFD04FFCAFFFFFFCAFD0EFFC9CAFFFFCAFD25FFA883FF%83A8FD0EFF115E335FFD15FFA9A8FFA8FFA8FFA8FFA8FF7EFD0BFFC9CAFF%FFC9CAFD0EFFCAA1C9CAFD25FF83FFAFFF83FD0EFFA85984A8FD15FFA8FD%0AFFA8A8FD0BFFC9C9CACAFD11FFC2C9FD18FFA9A9A8A9A8A9A8FD05FFA8%A8121834FD05FFA8A9A8A9FD06FFA87D7DFD0DFFA9A9A8A9A8A9A8A9A8A9%A8A9A8A9A8A9A8FD11FFCFCAA97E7E7EA87EA9FF7E7EFFA8A9FD04FFCACA%A7CAFD13FFA8537E537E7E7E292F292F7EFFA8FF534D0C12331859FFA8FF%532F292F29A8A8FFA8FF532F292F29A8A8FFA8FFA8FFA8FFA8FFA87E292F%2953292F2953292F2953292F2953A854A854A854A8FD0CFF7E7E537E53A9%7EA9547E537E54FD04FFCACAFFC9FD13FF7E7E7EA97E7E5354535453A9FF%FFFF7E4D35115E1184FFFFFF7E2F545354A8FD04FF7E53545354A8FD0BFF%7E54535453545354535453545354535453A8547E7E7E547EA8A9FD0BFF7E%7EA8A97EA9A8A9FD047EA8FFFFFFC9FFFFCACAFD13FFA9FFA9FFA8FFA8FF%A8A9A8FFFFFFA8FFA85F3483FD04FFA8A9A8FFA8FD05FFA8FFA8A9A8FD0D%FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA9FFA8FFA8FFA8A9A8FD0CFFA8%FFA8FFA8FFA8FFA8FFA8FFFFFFCACAFFFFC9FD6CFF7DFFA8FFA8A9A8FFA8%FFA8A8A8FFFFFFA8C9CACAA8FD58FFA8A9FD04A8FD12FF7EA9FD04FFA8FD%06FFCAC2FD17FFA9A9A9A87EA9A8A97EA9A8A9A8A9A8A97EA97EA97EA9FD%1AFFA8A9A8A97EA9A8A97EA9A8A97EA9A8A9A8FF537E537E53A8FD10FFA9%7EA9A8A97EA8FD08FFCAC9A1FD12FFA853A8547E7E7E292929535329292F%2953292F2953532F292929FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFF7E292F2929292F2929292F2929292F29537EA97EA97EA9%7E7E7EFD12FF7EA9A8FD08FFCAFFCFC9FD11FF7E7E7EA97E7E537E537E53%7E537E537E7E7E537E537E537E537EA9FD19FF7E54537E537E537E537E53%7E537E537E53FD16FFA8FFFFFF7EA8FD09FFCFA7FFCFCAFD12FFA9FFA8FF%A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD1FFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FD15FFA9A8A9FFAE12183483A8FD07FFC9FFFFFFC9FD6AFFA9%FFA8FFFF831218113A588383FD04FFC9CAFFCACAFD6BFFA9FD05FF583A5D%5E331834AFFFFFFFC9FFCACFFD67FFCAC9CAA7FD06FF5E115D575D111234%FFFFFFCFC9A1FD68FFC9CFCACFC2C9CAFFCFFF845E395E333A1218A8FFFF%FFC9C9FD67FFA7C3C9CACAFFC3C9CACAC9CA7D5E3312111259FFFFFFFD04%CAFD10FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FD0BFFCACFC9FD05FFCACAFF%FFCACAA1A7838384FD04FFC9CACACAFD11FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FD0CFFCAC9CAFD05FFCAC9A8FFFFFFA8CAC9CAA8FFC9C2A1CFFD30FFA8%A9A8FFA9FFFFFFA8FD2EFFCACACFFD07FFCFCAC9CACAFFFFFFCACAC3C9CA%FD32FF7E537E7E7E53FF7E7E7EA97EA9FD37FFCACAA7CAC9CAC9FFFFFFA8%A8FFA8A8FD2DFF7E7E537E537E7E7E545429547EFD42FFA8FFA8A8FFFFFF%CACAFD09FFA87EA8FFA9FFA8A9A87E7EA9A8A9FFFF7EFFFFFFA9FD15FFA8%A9FD2DFFCAC9A1C9C3C9A1CAC9C9A7CFCAFFCAFD07FFA8FFA1C2A0BCA1CA%FD09FFA95354537E5353537E53535354537E537E5353537EFD44FFCFC9CF%C9CAC9CAC9CAC9CAC9C9C2C9C3C9C9FD06FFCAC2C3BBC9C9FD09FFA9A87E%A9A87E7EA9A9A97EA97EA97EFF7EA97EA27EFD52FFCAFFCAC3A0FFFFFFA8%FFA8FFCAFFCAFD0FFFA8FFA8FFA8FFA8FFA8FFA8FD15FFA8A9FD0FFFA9FD%33FFC3CA7DA9FFFFA8FD13FFA8FFA8FFA8FFA8FFA8FFFFFFA8FD14FFFD04%7EA97E7E7EA97EA9FD047EA8A954A27EA97EFD2EFFA0C9FD04FFA8A8A8FD%13FFA8FD07FFA8A8AFFFA8FD13FF7E7E535353545353537E5354537E297E%7E7E5353537EFD2DFFC9C9CAFD22FFA87D7D7D84FD14FFA8FFA87E7EFFA8%FFA8FFA8FD05FFA8FFA8FF7EFD28FFCACFC9CFC2C9CAFD1FFFA8FFFFFF7D%7D527D7DFD0BFFFD05A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8%FFA8A8A8FFA8A8A8FFA8A8A8FD1EFFCFFFC9C9C9CAC3CAA8FD1BFFA8FF53%7E537E7EFFFFFFA8FD43FFA8FD0BFFCAA1CAA1C3A7CACAFFFFFF7EFD19FF%7D52A853072F0753A8FFA8AFA8FFA8FD05FFA8FD07FFA85F3483A8FD2DFF%A8A8A8FD04FFC9CAC9CACACAC2FD04CAFD05FFA8FD1AFFA87DFFFD057EFF%FFA852A87DA8537D7D7DA8FD08FF18121811AEFD1AFF8383AEFD0EFFFD04%A8FD04FFCAC9C9C9A1CAC9CAFD04FFA8FFFFA8A8FD1BFFA8FD09FF7D7DFF%A87D52527DF87DFD04FFA8FFCB84113A335FA8FFA8A9A8FFA8A9A8FFA8A9%A8FFA8A9A8FFA8A9A8FFA8A9A8FF8312115EA8FFA8FD09FFFD04A87DA8FD%11FFA8A8A8C9C3FFCAFFCAFFCACFCACFFD1CFFA8FD0DFFA9FF8418335E5F%FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA88411185E%FD09FFFD07A8FD14FFA8CAA0C293BB99C299BC99BB93CAFD2CFF11121112%83FD19FFA8845EFD07FFA8A87DA8A8A87DA8FD18FFC9C2C9C2CAC3C9C9CA%C3C9CAFD2DFF5F8383FD21FFFD09A8FD2CFFA8FFFFFFA8FFFFFFA8FFA8FD%39FFA8FFA8A87DFD05A87EA8A8FD2EFFA87D7DA87DA8537D7DA87E7D7DFD%31FFA8FFA8FFFD05A8A9FD07A8FD32FFA8A87DA8A8A87DA8A8A87DA8FD1A%FFA8FFA8FFA8FFFD0AA87DA87DA87DA8A8A884FD07A87DFD04A8FD12FFFD%05A8FFA8FD31FFA8FFA8FFA8FFA8FFA8A9FD0FA8FFA8A8A8FFA8A9A8FFA8%FFA8FFA8A8A8AFFD05A8FFA8FD17FFFD11A87DFD0FA884A8A8A87DA87DA8%A8A87DA87DA8A8A87DA87EA87DA87EFD1DA87DA8A8A87DFD08A8FD1EFFFD%07A8A9A8A8A8FFA8A8A8FFA8FFA8FFA8A8A8FFA8A8A8FFFD05A8FFA8FFA8%AFFD05A8AFFD12A87DFD08A8A9A8A9A8FFA8FFA8FD36FFA8FFA8FFFD06A8%7DA87EA87DA8A8A87DA8A8A87EFD05A87DA884A8A8A87DA87DFD05A87DFD%0AA8FFA8FFA8FFA8FD5CFFA8A8FD06FFA8FD35FFAEFD40FFA8A8A87E7D84%FD097DFD06FFA9A8FFAFFFA8FFA8FFA9FFA9FFA9A9FD04FFA8A9A8FFA8FF%A8FFA8A9FD0BFFAE34121184A883A8FD3CFFA8A984A9A8A87DFFFD05A8FD%07FF545AFD047EA87E537E7EA9FF7E5AA27EA97EA8FD047EA8A9A87E54A8%7EA8A8FD06FF3A1118333A11185F8483FFA8FD4CFFA87E7E7E537E537E7E%7E537E537E7E7E53535354A97E537E537E537E7E7E2F54537EFD05FF8311%12115D5712587D7D7D527D7DFD4CFF7EFFFFFFA8FD06FFA9A8FFA9FFFFFF%A8FFA9FFFFFFA87EFFFFA9FFFFA9A8FD05FF83183318393A1183527D7DA8%527DA9FD4CFFFD05A8FFA8A8A8FFA8A8A8FD18FF84113A11181112118383%A8FFAFA8A9537EFD4BFFA8FD0BFFA8FD17FF5F18333A1118333A11AEFD06%FF7E7EFD6EFFA8113A1112115E5712A8FD07FF7E7EFD6DFFA85A5E5F1218%111834FD09FF7E7EFD20FFA97EFD04A9FF7EA8A9FFA8FD17FF7E7E7EA97E%A9FF7E7EFFA8FD1EFF7EA2FFFFAE585F5FAEFD0AFF53A9FD1FFF7EA87E54%53FD047E54537EA8FD16FF7E5454537E7EA9537E537E53FD1CFFA97EFD12%FFA954FD1FFFA97EA8537E7EFFFD047E53A9FD16FF7EA97EA87DA8A87E7D%7E7E54A8FD1BFF53A9FD13FF7EA8FD1EFFA9FFA8FFA8FFA8FFA8FFA8FD18%FFA9A8FFA8FFA8FFA8FFA8FFA8FD1CFF7EFD14FF7EA9FD1EFFA8A8FFA8FF%A8FFA8FFA9FFA8A8FD16FFA8FD0BFFA8FD1AFFA953FD14FFA97EFD1EFFA8%FD0BFFA8FD3DFFA87EFD14FFA87EFD1FFFA8A9A8FD057E537E7E7E537E7D%7E7D7E7D7E7D7E7D7E537E7D7E537E7D7E537E7D7E537E7D7E537EA8A9A8%A9A8A97EFD18FFA97EFD14FFA953FD1FFF7E53FD057E29302954532F292F%537E292F297E532F292F53532954292F2954292F2954292F292F53FF547E%547E537EFD18FFA87EFD14FFA87EFD1FFF7DA87EA97E7E7D53537E537E53%7E537E537E5353537E5353537E5353537E5353537E5353537E5353537EA8%A87EA8FD057EFD17FF53FD14FFA87EFD1FFFA9A8FFA8FFA8FFA8A9A8FFA8%A9A8FFA8AFA8FFA8AFA8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8%FFA8FFA8FD1CFF7EA9FD13FF7EA9FD2FFF7E7E7EA9A8A8FFA97EFFA8FFA9%FD2DFF7E7EFD12FFA87EFD30FF7E537E547E53A97E7E535454A9FD2EFF54%FD12FF7E7EFD30FFA8A97EA97EA97EA9FD057EFD2EFFA953FD10FFA953FD%6DFF7E7EFD0FFF53FD1CFFA8FD05FFA8FFA8A9A8FFA9FFFFA9A9FD17FFA9%A9A9FD0EFFA9A8FD18FF7E53FD0CFFA953A9FD1BFFA8FD047EA97E7EA85A%537E7E5AA8A954A87EA97EFD14FFA97E7E7EA97EA97EA9FD057EA97EFF53%A97EA97EFD16FFA853A9FD08FFA97E54FD1DFFCB537E537E535453A97E7E%537E537E7E7E5353537EA9FD13FFA87E535453535354535A537E547E5354%7E7E535453547EFD16FFA9537E7EA8527D7E7E537E7EFD22FFA9FFA9FD05%FFA9FFFFFFA8FFFFFF7EFD15FFA8FFA9A87EFFA9FFA9FFA8FFFFFFA9FFA9%FFA9FF7EFD19FFA9A8582F2E597EA8FD25FFFD0CA8FD10FFFD25A8FD13FF%A62E292906CFA8FFA8FD22FFA8FD0BFFA8FD11FFA8FD37FF7D54537EA8AE%83AEA8FD22FFA8FD1BFFA8FFFF845984FD1EFFA8FD0FFFA8FD0DFFA8FFA8%FD28FF7DA8A87D84FFA8FFA8FD0CFF831118115FFD1AFFA88AA8FD11FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FD21FFA8FFFFFFA8FFA852A8A87D53%27522752FD08FFA8FFCBAF1118333A83FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA85E115EA8FFA8FD0FFFA8A9A8A9A8FFA8FFA8%A9A8FFA8FFA8FD20FF7D5A53547DFFFFFF7DFFFFA87DA8A87E7DFD09FFA9%FFA818335E58A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8%A9A8A8341834AEA9FFA9FD0FFF547E53A2A8A9A97E7EA27EA9A9FD21FF53%292F2953A8FFFFA8A8FD13FF3418331234FD1AFFA858A7FD12FFA87E7E54%537E537E7E7E535353A9FD21FFA8A9A8A9A8FFFFA87D7D527EFD12FF3418%34AEFD32FFA9FFA9FFFFFFA8FFFFA9A8FD28FF7D7D527D7DFD13FFA8FD68%FFA8FDFCFFFDEFFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">RNA_Sequencing_methodologies</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2014-04-05T20:46:03-04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-04-05T20:46:03-04:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-04-05T20:46:02-04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5.1</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>192</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FVGW8&#xA;s4pUhlnjjmkp6cbOqs1TQUBNTviqtirsVdirsVdirsVdiqH1DULHTrR7y+nS3tY+PqTSGijkwVd/&#xA;dmAGSjEyNDmpKyw1jStRTnY3cVyp7xOG/ZDdvZhhljlHmFtZZ67o97PPBa3ccstq4inRTurklQN+&#xA;vxIw27g4yxyAsjmi0YkkbglGDAGhINdx22yFJXYq7FXYq7FXYq7FXYq7FXYq7FXnMf5s3UOmm81L&#xA;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&#xA;sVdirsVdirsVdirsVdirsVdirsVf/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:00801174072068118C149AA0EBC2798A</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:00801174072068118C149AA0EBC2798A</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:808b9528-17d7-7040-946e-932470697390</stRef:instanceID>
            <stRef:documentID>xmp.did:05801174072068118C14F3235FA19F7F</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D27F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:15+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T16:23:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T17:10:45-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF7F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T22:53:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T23:07:07-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:35:43-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:40:59-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:26:55-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:20-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:30:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:31:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B233668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:23:46-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B333668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:27:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B433668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:46:13-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:47:57-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:51:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:52:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T13:28:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T16:23:53-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07C3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T16:45:26-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F1174072068119098B097FDA39BEF</stEvt:instanceID>
                  <stEvt:when>2008-06-02T13:25:25-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T14:58:36-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:31:27-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811834383CD3A8D2303</stEvt:instanceID>
                  <stEvt:when>2008-06-11T22:37:35-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811818C85DF6A1A75C3</stEvt:instanceID>
                  <stEvt:when>2008-06-27T14:40:42-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068118F62C262592E568B</stEvt:instanceID>
                  <stEvt:when>2012-01-04T09:22:07-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118F62C262592E568B</stEvt:instanceID>
                  <stEvt:when>2012-01-04T09:22:18-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118083A509A05A2F65</stEvt:instanceID>
                  <stEvt:when>2013-08-29T11:46:25-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05801174072068118C14F3235FA19F7F</stEvt:instanceID>
                  <stEvt:when>2014-03-26T20:31:09-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:00801174072068118C149AA0EBC2798A</stEvt:instanceID>
                  <stEvt:when>2014-04-05T20:46:03-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>418.261719</stDim:w>
            <stDim:h>310.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>HelveticaNeue</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica Neue</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>8.0d6e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>HelveticaNeue.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -310 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 310 li
418.262 310 li
418.262 0 li
cp
clp
[1 0 0 1 0 0 ]ct
1 lw
0 lc
0 lj
10 ml
[2 2 ] 0 dsh
true sadj
363.197 150.311 mo
347.318 150.311 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.808 .751 0 0 cmyk
@
gsave
55.0371 25.1182 mo
55.0371 29.7813 59.939 33.5591 65.9868 33.5591 cv
72.0352 33.5591 76.938 29.7813 76.938 25.1182 cv
76.938 20.457 72.0352 16.6768 65.9868 16.6768 cv
59.939 16.6768 55.0371 20.457 55.0371 25.1182 cv
clp
55.0371 16.6768 mo
76.938 16.6768 li
76.938 33.5591 li
55.0371 33.5591 li
55.0371 16.6768 li
cp
level3{
gsave
clp
[9.77647 0 0 -9.77647 65.9844 25.1172 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Mu`kXNWB(ZO9#:\OoYL^PQ:^`PlUgaQN7$cR/m6eRfNHgSH/ZiScJcjTE+ulU&b2nU]CDpV?$VrVuZht
W;uquWrW/"XT8A$Y5nS&YlOe(ZN1"*ZiL++[K-=-\,cO/\cDa1]E%s3]`A'4^B"96_#XK8_Z9]:`;oo<
`rQ,>a8l5?aoMGAbQ.YCc2dkEciF(Gd/a1HdfBCJeH#ULf)YgNf`;$PgAq6Rg]7?Sh>mQUhuNcWiW/uY
j8f2[joGD]k5bM^klC_`lN$qbm/[.dmf<@fn,WIgnc8[ioDnmkp&P*mp]1<oq>gNqqZ-Wrr;citrrE'!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.77647 0 0 -9.77647 65.9844 25.1172 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Mi<USNK0$[O-#HcOcklkPE_;rPa.N"QC!r*R$jA2R[]e:S=Q4ASXuFFT:hjNTq\9VUSO]^V5C,fVl6Pm
W2Q\pWiE,#XK8P+Y-+t3YctC;ZEggCZa7$G[C*HO\$rlW\[f;_]=Y_g]Y(qk^:q@s^qde&_SX4.`5KX6
`Q#p<a2c6AaN;QHb0.uPbg"DXcHjh`d*U.edF-Ile'umte^i='f@\a/g"P07gY:K<gtgfChV[5Ki8NYS
io9"YjQ,Fak2tggkND'ml07Kulg*p(mHs?0n*f`6nF5u<o()DDo^qhLp@e7Tq"X[\qYL'bqtp<hrVc`p
~>
0 255 0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
grestore
gsave
34.7041 79.8052 mo
34.2368 81.5469 38.3428 84.1592 43.8892 85.665 cv
43.5249 86.1929 43.2422 86.7642 43.0762 87.3862 cv
41.8691 91.8892 46.6572 97.084 53.771 98.9912 cv
60.8848 100.897 67.6299 98.791 68.8369 94.2891 cv
70.043 89.7852 65.2539 84.5898 58.1411 82.6831 cv
56.1201 82.1431 54.1338 81.9351 52.29 82.0039 cv
50.626 81.0078 48.3242 80.0542 45.6968 79.3491 cv
43.1792 78.6748 40.7988 78.3452 38.8979 78.3438 cv
36.5698 78.3438 34.9619 78.8398 34.7041 79.8052 cv
clp
34.2368 78.3442 mo
70.043 78.3442 li
70.043 100.897 li
34.2368 100.897 li
34.2368 78.3442 li
cp
level3{
gsave
clp
[14.3006 0 0 -14.3006 51.8438 89.0156 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.3006 0 0 -14.3006 51.8438 89.0156 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
58.1406 82.6836 mo
56.1196 82.1416 54.1338 81.9346 52.2896 82.0034 cv
50.6255 81.0088 48.3237 80.0537 45.6968 79.3486 cv
40.0947 77.8486 35.1738 78.0518 34.7036 79.8057 cv
34.2378 81.5464 38.3428 84.1597 43.8896 85.6655 cv
43.5244 86.1924 43.2427 86.7637 43.0757 87.3867 cv
41.8696 91.8887 46.6577 97.0845 53.7715 98.9907 cv
60.8848 100.896 67.6294 98.7905 68.8364 94.2886 cv
70.0425 89.7856 65.2534 84.5898 58.1406 82.6836 cv
cp
0 0 0 .3 cmyk
@
45.7383 79.981 mo
42.3433 75.1411 38.5352 79.981 42.3433 75.1411 cv
46.1514 70.2998 59.2061 71.064 46.1514 70.2998 cv
33.0952 69.5361 29.8325 73.103 33.0952 69.5361 cv
36.3594 65.9692 46.1514 66.7339 36.3594 65.9692 cv
.808 .751 0 0 cmyk
@
.5 lw
30.7944 84.9644 mo
21.1523 84.9644 li
@
30.7944 79.293 mo
20.1226 79.293 li
@
30.7944 81.4858 mo
17.8022 81.4858 li
@
168.811 51.9063 mo
372.371 51.9063 li
@
grestore
%ADOBeginSubsetFont: HelveticaNeue Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /HelveticaNeue def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 55 /seven putdup 71 /G putdup 109 /m putdef/FontBBox {-951 -481 1446 1077} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/.notdef <1C60D8A8C9B7A73DB69766C728F992B45CDEFDE836A03F03808DEA1F562730C87541D1DACD> |-/seven <1C60D8A8C9B7EF32245CA25C7F471603C4179E9C936C55B5ECC93468477F9932136F0691D5995766B530899880E14B7EF388A2674EBF8EA619DCB3BA90F9F4B5BBD5D16940FBF78CE422AE1B16E6CD967E8F8E> |-/G <1C60D8A8C9B6EA91CEB3DB95EA5D5E29A7E46864E73EB0BF6052ECB0F4FA7072322883082FF9A6A400E50B4D783F8491B5483C7E9F0BF4A67C05FCC08633D4FB861E5274F0E51B6038B0ED6A15E1B480E8934B2549FD42BB6E4C4EA2A5027BD1C4145162CA05DE9936F8AD05C92137D7018649E89055CAA2625CB7AA801F7F7A55634C0ABC3868D11C9CEF89FDB05B36E470EE9A4462EE88381845B0F7938610FA6FB102117270EB7D4611F6D05BC639FC913D5A9F48795C258EAA806345F18B3C5FE03339C22D54FC9395C31EB287508DC03CF63996DF70CBA98B4FB5035A0D25A8714FE847AD2BD4CB1BDF665FFF21C126> |-/m <1C60D8A8C9B6889AAB3FDFDCB8C7A7D4A445E72A6050547E3926FD5EF288CA98CBCE73BD6F51BD8BF77C15E93641E82F5FBA14322965E5F6D81A4346526A3A1BECA76E268C8FE3D1A76E8FCF70B9F3D9BBE79361A40E85058ED9D209065D2BA116AF30A8A9294941853304D630ECD80D50338AF92C33CA5A86089BC3A675BE5255469C0261FC17E304AD4871EC7D0C588F6D20F8D311D5E6B56770EA483EDEB3A414A9F873D9B06A4DDE3FA472A91892F8707248B10279ED4753FAFA79F58F24457691EAC3AA3568D8C5440F> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GQKSMN+HelveticaNeue /HelveticaNeue findfont ct_VMDictPut/GQKSMN+HelveticaNeue*1 [55{/.notdef}rp /seven 15{/.notdef}rp /G 37{/.notdef}rp /m 146{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf148.456 55.5776 mo(m)sh155.904 55.5776 mo(7)sh160.765 55.5776 mo(G)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
184.014 55.5781 mo
168.811 55.5781 li
168.811 48.2339 li
184.014 48.2339 li
184.014 55.5781 li
cp
f
[] 0 dsh
184.014 55.5781 mo
168.811 55.5781 li
168.811 48.2339 li
184.014 48.2339 li
184.014 55.5781 li
cp
0 0 0 .3 cmyk
@
212.616 55.5781 mo
197.412 55.5781 li
197.412 48.2339 li
212.616 48.2339 li
212.616 55.5781 li
cp
.808 .751 0 0 cmyk
f
212.616 55.5781 mo
197.412 55.5781 li
197.412 48.2339 li
212.616 48.2339 li
212.616 55.5781 li
cp
0 0 0 .3 cmyk
@
245.469 55.5781 mo
230.265 55.5781 li
230.265 48.2339 li
245.469 48.2339 li
245.469 55.5781 li
cp
.808 .751 0 0 cmyk
f
245.469 55.5781 mo
230.265 55.5781 li
230.265 48.2339 li
245.469 48.2339 li
245.469 55.5781 li
cp
0 0 0 .3 cmyk
@
278.193 55.5781 mo
262.99 55.5781 li
262.99 48.2339 li
278.193 48.2339 li
278.193 55.5781 li
cp
.808 .751 0 0 cmyk
f
278.193 55.5781 mo
262.99 55.5781 li
262.99 48.2339 li
278.193 48.2339 li
278.193 55.5781 li
cp
0 0 0 .3 cmyk
@
372.371 55.5781 mo
318.646 55.5781 li
318.646 48.2339 li
372.371 48.2339 li
372.371 55.5781 li
cp
.808 .751 0 0 cmyk
f
372.371 55.5781 mo
318.646 55.5781 li
318.646 48.2339 li
372.371 48.2339 li
372.371 55.5781 li
cp
0 0 0 .3 cmyk
@
grestore
GQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf148.456 74.6265 mo(m)sh155.904 74.6265 mo(7)sh160.765 74.6265 mo(G)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
184.014 74.627 mo
168.811 74.627 li
168.811 67.2832 li
184.014 67.2832 li
184.014 74.627 li
cp
f
[] 0 dsh
184.014 74.627 mo
168.811 74.627 li
168.811 67.2832 li
184.014 67.2832 li
184.014 74.627 li
cp
0 0 0 .3 cmyk
@
175.349 145.496 mo
160.146 145.496 li
160.146 138.152 li
175.349 138.152 li
175.349 145.496 li
cp
.808 .751 0 0 cmyk
f
175.349 145.496 mo
160.146 145.496 li
160.146 138.152 li
175.349 138.152 li
175.349 145.496 li
cp
0 0 0 .3 cmyk
@
199.99 74.627 mo
184.787 74.627 li
184.787 67.2832 li
199.99 67.2832 li
199.99 74.627 li
cp
.808 .751 0 0 cmyk
f
199.99 74.627 mo
184.787 74.627 li
184.787 67.2832 li
199.99 67.2832 li
199.99 74.627 li
cp
0 0 0 .3 cmyk
@
215.966 74.627 mo
200.762 74.627 li
200.762 67.2832 li
215.966 67.2832 li
215.966 74.627 li
cp
.808 .751 0 0 cmyk
f
215.966 74.627 mo
200.762 74.627 li
200.762 67.2832 li
215.966 67.2832 li
215.966 74.627 li
cp
0 0 0 .3 cmyk
@
231.942 74.627 mo
216.74 74.627 li
216.74 67.2832 li
231.942 67.2832 li
231.942 74.627 li
cp
.808 .751 0 0 cmyk
f
231.942 74.627 mo
216.74 74.627 li
216.74 67.2832 li
231.942 67.2832 li
231.942 74.627 li
cp
0 0 0 .3 cmyk
@
372.371 74.627 mo
318.646 74.627 li
318.646 67.2832 li
372.371 67.2832 li
372.371 74.627 li
cp
.808 .751 0 0 cmyk
f
372.371 74.627 mo
318.646 74.627 li
318.646 67.2832 li
372.371 67.2832 li
372.371 74.627 li
cp
0 0 0 .3 cmyk
@
grestore
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D0F46595A5E01ED197FF959235F571294F> |-/A <1C60D8A8C9B67DB5878EE221F210438E2D1F518277932B525F370D850642FD46B0F79A79CF11337DC6AEE53D885E0E1A7DF59B4B5DCF38DE8A6C> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 46 /period putdup 65 /A putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [46{/.notdef}rp /period 8{/.notdef}rp /seven 9{/.notdef}rp /A 5{/.notdef}rp /G 37{/.notdef}rp /m 146{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf374.176 55.5781 mo(AA)[6.51172 0 ]xsh387.199 55.5781 mo(A)sh393.507 55.5781 mo(.)sh395.956 55.5781 mo(.)sh398.396 55.5781 mo(.)sh374.917 70.958 mo(AA)[6.51172 0 ]xsh387.94 70.958 mo(A)sh394.258 70.958 mo(.)sh396.697 70.958 mo(.)sh399.146 70.958 mo(.)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
231.941 70.9556 mo
232.941 70.9556 li
0 0 0 .3 cmyk
@
[1.97 1.97 ] 0 dsh
234.911 70.9556 mo
316.661 70.9556 li
@
[] 0 dsh
317.646 70.9556 mo
318.646 70.9556 li
@
184.014 42.8228 mo
184.014 37.3638 li
146.137 37.3638 li
146.137 42.8228 li
0 0 0 .7 cmyk
@
84.064 12.7334 mo
89.5239 12.7334 li
89.5239 30.2593 li
84.064 30.2593 li
@
401.617 23.2642 mo
401.617 17.8052 li
363.74 17.8052 li
363.74 23.2642 li
@
384.998 45.5527 mo
384.998 40.0938 li
347.119 40.0938 li
347.119 45.5527 li
@
382.988 93.7681 mo
382.988 99.2271 li
148.146 99.2271 li
148.146 93.7681 li
@
grestore
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B7361F02565A2847C0BACC3FC3DBCA2AB7> |-/C <1C60D8A8C9B6079F6D1B1A6F2E268C38C77043D3A63ADE72673FCA38C6D438E312DDEC08954CC05E57F32968FEE1A2577F241D8EFA51F017CB226260C9C2C16C1F23A2277D353C1254870F4E35BDB8453BD7478D0A93C3277435D8ACBE12175360DFF06140A517CB70D2AC45A62775EB3A02A78B48CAFC88244B3C0E956BAACF680327060760F05D2B15A5425468A217A15FF5D7D20007E1D8468B7F87EE386BC2FFAA838D58001C42778BC90D935E8376BEFDFFE44ED2F57D18218C26FF1625C01B5E9CEA8256449BFF5FCCF31EFAA31C9618AF78090F> |-/S <1C60D8A8C9B67DB58789F51595DCF90BBB2B674A76ABEF9D3D99EDAA9A938BC68ADD5BEE2127863866D61B9300DF3B85FEC013588736057136A85174EDF694645A60BB146B9F318FBA70B24445023BC05CF20E83A6623DCF831D8ECC6A24C62AF958CD06AA90FBFDB74C8EC0BF0BE4C00D0D4E79EE653DED50EF7F30AE97D9038F7C9B094876F1EA3755148F1F43647E5C429D294D6460D6F25919A9AE918BA7D5BE3BFC9FBA263E097CBE1F74B9382A78B835574F3EFF81AE06434B3662B15A1136B409583A42C5AAD7891A0F68572F64C075A65E754AF812C6961647E04F7CA02060CB99A000061C8DBDD93F8BCDE1317C9A0906C52352E462B3C4169E2E84CD2AC06D8A9597BE6A0AB9162239A1995D98012687D0DB7364CADA4388EF51A11DEE0DD68697F61E8AD620A382C9CB4BBCF3CA6573D44C597320828A6E0659B7BFDA6A4AB3AC1FE485D254A9F85A14C6D3D2730D15> |-/a <1C60D8A8C9B78256DD1AA79B6E96B03E77EADE6FF0A6D5505B6476A0AEF13AFACC9B9C8107B755C96D4F2B6E7E4B814B70964F745A892BC2F7DBFD243A80BF261760C9115B3944A3DA63A020A1AC36E19994149E7CE1B81ADBD95B3735B8B753C51EA80398564C8D7E879660069158F6495BCE5C1CC6F9940CB3DD2B8B23F910189F52BDAE4D25F8EB2F4BA6F1E6AD2095AB8B6D03B0775D8BC8855AA1504E5A7E5B439B95621696C1C488B653996DDD18B169E460146B238E345F90A764D9FE3365CCE5645836155E954C349F53190EFFDB827467125C7F5A3C5C60D1FBE8F22BBB8C97BE208DFD9DC4E5F6D263D8673965AF624CC2B44D231FB29D854E8BA6BDF51C75F50BD9580344B6256F49927DBEC126269CA38BF3AEA7EAFC1130171EAB68FAF23EC73F45ED90287F5F700E3446D017248495E4F4341F88DDC2D8678D90B36E81C0D293EF71C1EB3B674292620537318BBB1B0E97C39B96F9AC815A7DF2153FC96D5B493F9A7D151B6F> |-/e <1C60D8A8C9B78256DD55438017BC8C1833CE266A01A5BDCA1B9E966A1AD681838D6CA45F44E08AD46E17D686288D23390B2FFF6378472ABC69E374A8B6ECB2A52EA29263AFEB4E06DEA16052EA24A1400E2DF2276D2E8A45445FDD018FF05A2C8F08BE043D78D9C3FF8D67946FFB6ED6FABF052655B4BF4DBDD6E8C1E3FCFA055088CA6071FC379A1CF225CE66EE3C231FBB0FAEDF30BB250911BC9FE90F7DE212622E1297D593A829F344F788CA5B330F3559D2E33FB2EFAC5B38F4C75E3F0FF8F9AB8251282F4E9ED2B8D5F76F3259AF9F7CA6A537CEB7170E211C3C4C514E> |-/p <1C60D8A8C9B7CA642A857E43B6E4584C21053D20464CD900CD9FAC314FFFF57B29E654571390EB20E46B7B48BB4AFE15157A1CE094B6FF462457B10AE9964D7A692D9B23249B54E98BB36FE18513C4E36124EE91E8B55E0D32F87793F9BE4B91CF07577AD6B1D404AAE3A88A4BEF896F462E4ACBCC0D5DA06B2EBCCC22792F58753666AB72F6C0F48104C745CE06B90FA6FECCB3A7C2A512102AC3FAB9143D8756393E66D37DCB1849D10BFE85B4757E9DB634D20E735C4DA1388EDE7F62254793AA9AEE6F6333E1CD0C532177362FACB6E0BE0F0AF66D33E6D9BDA8C896BA2F385679C44BD75AB95077ACF0FBEACEBAE1202AAB81> |-/q <1C60D8A8C9B7CA642AB5CCFFBCBE446607BF45444797C5129AD75C694597C0629AB24E9D54F936C16BE3D25CEA1B8C96881ECFDC60B54236C9EC2FA30DA2A848A4CBD37893E1F8056DD3D8F4E5A5D50258DF41ED55CD2290EB5E498577916ED80F4FA5E4334DFE9F6809FADC5C0C40C6A401244D172FFF645E3FFF16A6C1094A49855E47215D89E6DAB7E028C2D54AF8A8504CA25B119342F32D2784FBE748D6C27B6E67E514C40AA7A85A78BF03806FF7AB04AC25BDDF3D306CBE87A375806D6F8426A38E33882949826C62F739E0CD33BD83267F7010AD0D5806E2AA4C516920AC29EC9734F41271B2BB8F2B50EC3A49DFA725E1> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 45 /hyphen putdup 67 /C putdup 83 /S putdup 97 /a putdup 101 /e putdup 112 /p putdup 113 /q putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [45{/.notdef}rp /hyphen /period 8{/.notdef}rp /seven 9{/.notdef}rp /A /.notdef /C 3{/.notdef}rp /G 11{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp /e 7{/.notdef}rp /m 2{/.notdef}rp /p /q 142{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf146.137 32.748 mo(C)sh152.862 32.748 mo(a)sh157.955 32.748 mo(p)sh163.668 32.748 mo(-)sh167.435 32.748 mo(S)sh173.557 32.748 mo(e)sh178.696 32.748 mo(q)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
228.778 27.7432 mo
228.778 22.2832 li
190.902 22.2832 li
190.902 27.7432 li
0 0 0 .7 cmyk
@
grestore
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/R <1C60D8A8C9B620B7FC729AF8F4061A1A450A8D3AD24E1257006308FC1D758B7163CE246A589C3C1FF42BF41C53E72A1D845E2C5B56C92E17410DDB3044FB434DE2CD131B44CC49542E89790E077569AAE7DFE8E8291AFE90275C34A2942D76E09B43AFCC0B1D219F8A30BA7721EAEC249BB363718B24B1F64BEFB784F0EC2C4BEF6738250802A28FD9247B8540CB43AE353032E39962A446CF2BCB9B8465C455DDDF1AE16191C618FA995497D543D03F085D9079AF4264BD36FF070924F7FC68F721E9BD259D08A0D1E3D48EF33AD4ED9C3BB2C7BA2CD9E84E1F04E58C601E31743C68> |-/i <1C60D8A8C9B88C08555B3F0CC9C107C8E85C213909EEB355601DF6E16718C8> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 82 /R putdup 105 /i putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [45{/.notdef}rp /hyphen /period 8{/.notdef}rp /seven 9{/.notdef}rp /A /.notdef /C 3{/.notdef}rp /G 10{/.notdef}rp /R /S 13{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m 2{/.notdef}rp /p /q 142{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf192.389 17.6685 mo(R)sh198.827 17.6685 mo(i)sh200.941 17.6685 mo(p)sh206.655 17.6685 mo(-)sh210.422 17.6685 mo(S)sh216.525 17.6685 mo(e)sh221.664 17.6685 mo(q)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
290.801 36.0415 mo
290.801 30.5825 li
252.923 30.5825 li
252.923 36.0415 li
0 0 0 .7 cmyk
@
grestore
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/I <1C60D8A8C9B869C1622DF13404AFBF404E77BA2A5B38FA> |-/L <1C60D8A8C9B7EF322B54D9573758D9613FCDE20866DB4ACDF21FB897C2> |-/P <1C60D8A8C9B67DB58874415D94C2E559C88E36CC055437F3DF216575C839AACCA6EDB9DE2233509536944435A6A5FF417152CE02855876750F1D682335EEC3E41C9ED4B523CEEEE05D751D6FA45C4F6D05E3066B38F21D39CF4DAF8C04DD> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 73 /I putdup 76 /L putdup 80 /P putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [45{/.notdef}rp /hyphen /period 8{/.notdef}rp /seven 9{/.notdef}rp /A /.notdef /C 3{/.notdef}rp /G /.notdef /I 2{/.notdef}rp /L 3{/.notdef}rp /P /.notdef /R /S 13{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m 2{/.notdef}rp /p /q 142{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf252.093 25.9678 mo(C)sh258.836 25.9678 mo(LI)[5.21387 0 ]xsh266.508 25.9678 mo(P)sh272.435 25.9678 mo(-)sh276.201 25.9678 mo(S)sh282.305 25.9678 mo(e)sh287.443 25.9678 mo(q)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
57.9995 67.3672 mo
57.9995 61.9082 li
20.1226 61.9082 li
20.1226 67.3672 li
0 0 0 .7 cmyk
@
grestore
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/O <1C60D8A8C9B6ED05D52AADC514EE722B0D3861DF9272C39D4665C7A3D9881616C7A9B1CB940377BD0B17E98025C805CA5935A6F8F94585C0095D64148CA57A8F2F37BE0718113501CB8AD2B0B8B8C75F2CD8EA88382BB2C2E2FB353BD81E827EBDF566D2D45D13C580A6918EBD401838EF26B150E6A24909EE01455EEA81AAA99FC23F88543A10795FD89A946532125272A367F835498146F297A8986ECD25D4C47F4EE621DCB5CAC742AC292EC3DE72A3D05DAA7023F2BBD2627C9EFED624C92CE142676FF308FAF1EC9B160E09E2B696E7A014E26E711952F48988CA21CDA33BB28FBB5F040893243E6400E87BCFD8B0460EB0> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 79 /O putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [45{/.notdef}rp /hyphen /period 8{/.notdef}rp /seven 9{/.notdef}rp /A /.notdef /C 3{/.notdef}rp /G /.notdef /I 2{/.notdef}rp /L 2{/.notdef}rp /O /P /.notdef /R /S 13{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m 2{/.notdef}rp /p /q 142{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf17.8032 57.293 mo(G)sh24.9458 57.293 mo(R)sh31.3555 57.293 mo(O)sh38.6836 57.293 mo(-)sh42.4497 57.293 mo(S)sh48.5532 57.293 mo(e)sh53.6919 57.293 mo(q)sh.039 .878 1 .00400001 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/h <1C60D8A8C9B7EF322B3C3F3F21044A9FB99BA13EAE1C2C34C29E7AEFCF85896CB222A9E2E462E0E0EF9E1459C34491C3635B4F81DCAC33B3CC47C54DD9513944C59C7E1D8863AB1590AAA126A1BF7CF76466CCB47431302FBB36367021A54497B008F2CBFCE4F87B789E3710B9E14C99ED235DE7F95A088383DE818CAFFC46D95433ACC38BD4> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 104 /h putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [45{/.notdef}rp /hyphen /period 8{/.notdef}rp /seven 9{/.notdef}rp /A /.notdef /C 3{/.notdef}rp /G /.notdef /I 2{/.notdef}rp /L 2{/.notdef}rp /O /P /.notdef /R /S 13{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m 2{/.notdef}rp /p /q 142{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf94.2661 24.2329 mo(C)sh101.038 24.2329 mo(hI)[5.20361 0 ]xsh108.69 24.2329 mo(P)sh114.608 24.2329 mo(-)sh118.375 24.2329 mo(S)sh124.478 24.2329 mo(e)sh129.617 24.2329 mo(q)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
86.9282 110.089 mo
92.3882 110.089 li
92.3882 127.614 li
86.9282 127.614 li
0 0 0 .7 cmyk
@
grestore
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/H <1C60D8A8C9B6079F62EB0118C852A105FA7C8BF6E6C135E413B5042633AD275F8C347ACCC5B2EDBBBE16A4E3BB> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 72 /H putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [45{/.notdef}rp /hyphen /period 8{/.notdef}rp /seven 9{/.notdef}rp /A /.notdef /C 3{/.notdef}rp /G /H /I 2{/.notdef}rp /L 2{/.notdef}rp /O /P /.notdef /R /S 13{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m 2{/.notdef}rp /p /q 142{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf94.0386 121.588 mo(H)sh100.792 121.588 mo(i)sh102.98 121.588 mo(C)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
64.3677 138.84 mo
67.3237 143.431 li
52.5869 152.918 li
49.6309 148.327 li
0 0 0 .7 cmyk
@
grestore
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/c <1C60D8A8C9B78256DD72E59F8D9EE3DA4C3A3D2C848028DFC44C2D7B28374D45276541C9B192FADB296DC40B35992C7F5DCFFD2AD8C20286A661A838F0FF848A5B590ED3544893F482AA00380CFEBB3F71CA4DDE96092132A8333355ADFC12D4AA1A68870C56C09C2DA680A9433A1DA80A9131F388EC47284850BF5BE2E71F4A6AA01921CCB344F4703453FA574C9F5F304B61147AC2FFE6D5A3AE79E389CF45C56EC750C5100A8E919AB8B3DC57C23D01902AFC1FAC089A7D9DD67123B38E49707F6731D8B46DE7BB> |-/n <1C60D8A8C9B7EF322B311F684FFCE372DC830C5B5622CF8CC481131E62D787051C7F6F8AFE4E0678E980DEFED9D3B42136CA31D6B181415CC612E43F129CA0C6B7129B72601C197C1289FE3B0E87810C0E52F39D3150ED1541E70F1FAC5E47A3847D5C5288BFD9C72CA7FDA1DA3E70FC> |-/o <1C60D8A8C9B7FD849A41D15A513197C7FBD61B6F7FFCAC3AF3E97AC59087245F09701F75E50338558BB40AA9680A2FBD1EAE25AE04491DB1C148A07BBF7B8B2FC83A811B9F5493B2A0F2D79BE2ADCDBA13E2B19DD819B8D5A15937446D8F358692DC5FAB8E88C19B1533D50FF00A7803A38C9128B8EC16408B839CC48067B9ED6B4A3117F3C447EC07CDF75A5742341E297006EE8A172AE85B4C2C86A95A30C1C97E6432A14DD7AB146A08EF57B3F2578CC5ED7C800F9538F93029A11370A11A675530BB39260BAF32B1B7C0D93D402CF73D54D64C2CF3F082E9F79B4662EF26FA2BCB25FE481D961CEE5EA35FDF563D67AB6E8F> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 99 /c putdup 110 /n putdup 111 /o putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [45{/.notdef}rp /hyphen /period 8{/.notdef}rp /seven 9{/.notdef}rp /A /.notdef /C 3{/.notdef}rp /G /H /I 2{/.notdef}rp /L 2{/.notdef}rp /O /P /.notdef /R /S 13{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n /o /p /q 142{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf58.4775 158.678 mo(Ge)[7.18896 0 ]xsh70.7959 158.678 mo(n)sh76.0278 158.678 mo(o)sh81.4541 158.678 mo(m)sh89.4316 158.678 mo(i)sh91.5928 158.678 mo(c)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
194.288 129.47 mo
194.288 124.01 li
156.411 124.01 li
156.411 129.47 li
0 0 0 .7 cmyk
@
grestore
.808 .751 0 0 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/N <1C60D8A8C9B6079F62EC3E4F2BCB53C58C5901674E014053D1B07FD718460ADB03ADEDF1E7C7BBA86E2EBA052A2038> |-/l <1C60D8A8C9B88C087228DE33F4F68C5654F20641D38FAA> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 32 /space putdup 78 /N putdup 108 /l putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period 8{/.notdef}rp /seven 9{/.notdef}rp /A /.notdef /C 3{/.notdef}rp /G /H /I 2{/.notdef}rp /L /.notdef /N /O /P /.notdef /R /S 13{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o /p /q 142{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf142.497 119.396 mo(S)sh148.609 119.396 mo(m)sh156.596 119.396 mo(a)sh161.698 119.396 mo(l)sh163.803 119.396 mo(l )[2.05957 0 ]xsh168.441 119.396 mo(R)sh174.897 119.396 mo(N)sh181.725 119.396 mo(A)sh187.782 119.396 mo(-)sh191.548 119.396 mo(S)sh197.651 119.396 mo(e)sh202.79 119.396 mo(q)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
354.451 140.571 mo
354.451 135.111 li
237.522 135.111 li
237.522 140.571 li
0 0 0 .7 cmyk
@
grestore
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B81F2C3A4864C06E4CFD01869C53CC11FA099954D939> |-/D <1C60D8A8C9B635A4ABABB23E9D515BDD0F89286EFD1EBF07654AFD66CF3242CD0D63E072019FD4BD8F3CD13251170FCCAA451F8167EB0E1829A540E43DA7914FD378433FF4020CA0D3FD343F64EFD74B98C5DCF73424FA7B6A961328CC612A579ADB868A6E555DAD10A9655B63B5C7162C073238EE2879AA4DD746F12E16E830524A721CAC3A3C5205C9AA4AC1F052427092> |-/T <1C60D8A8C9B7FD84E0290B854AC85AB7047BF3E25C860F1CCA51A05FE39D89FD> |-/bracketleft <1C60D8A8C9B869C162446DF158D7BB961BFB5F9B1B99E8FBAD22E87FDBB516A3C8> |-/bracketright <1C60D8A8C9B869C163CDB24989D1BF6777F3B35AE4AFADF4A124393A4B028D70> |-/d <1C60D8A8C9B7CA642AB5CCFFBCBE446607BF45444797C5129AD75C694597C0629AB24E9D54F936C16BE3D25CEA1B8C96881ECFDC60B54236C9EC2FA30DA2A848A4CBD37893E1F8056DD3D8F4E5A5D50258DF41ED55CD2290EB5E498577916ED80F4FA5E4334DFE9F6809FADC5C0C40C6A401244D172FFF645E3FFF16A6C1094A4ED1826F3037EA86B64A0380C8B3E3229F349226214FDF5E286B75FB471FB9C2CD502C2219A5BB1B135C46A2C2BE44B969A462B8AB31BD353D37BE3C3C7080EAE8E54A6B7465DCDE55846A7689FA6A8296E41948930065D5B640E4496541971418DA22DBA1100ADCA9406D6F37305465E596699F7A> |-/g <1C60D8A8C9B7FD84950EF8BFBDCDE7CBD4F87E3C30345FE5BE39EB528D4316C6168698F38A0490D24000538A6A6E021802168DE74172C000571E5ABA506BD1736523D6C8158464C76F177854D828AD9E7DFC10FA568A7DC39E1F2DD93F52ACFBA111CE4DF746FE47F28A42FBF5AF88CA5AE78F8399225C9769A032F2842F653F372DAD8CA2E74794FF93F1822152CE160530BBCC9345318BFEA3A088341B284DCFD987279D7E9B9C7486BDE2F037BD268BFE3768E5BB08F848F5DBDDE288E6B4A57054124B4F86CC4CCDE4451A5C86E4077AA5968C73216E3A588AE416E0709AF36D4E19CE459B51414B15FF8D053B35761D2CC110387D3E2906A961B3B069AC96DB8CAB62B7778F7BD53CCF3A3D2851D533887D1E2FAFD606AEC300EA40C1770F6EA99E8D9BB94576BA39FB0C5FF925CAC815600E001556CA8073ECDFECF74135290D16594F8A0C215A> |-/r <1C60D8A8C9B81F2C3A9A44CEFFCAE2B5B722C19E625B807D4F857B444383631BDC722B031B7D18A27CB4F561CDC7869F3EE923C7D65D3D994DE91855248F92102B302065D5EB4599> |-/y <1C60D8A8C9B7A73DB9A768D4DE1B8D033D4F7C563492C8A327101232088D507937FF5600A36C7A42C1CE1C7FCDC89BE897F465E05DD52CDFE7355348374B782682DB87301A384A03DB070153A4F68D0E62C089E4C47F4748C6E0F5295766246C7C05B27061C85149A2902C18C39FFC54AE9ECC91> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 47 /slash putdup 68 /D putdup 84 /T putdup 91 /bracketleft putdup 93 /bracketright putdup 100 /d putdup 103 /g putdup 114 /r putdup 121 /y putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash 7{/.notdef}rp /seven 9{/.notdef}rp /A /.notdef /C /D 2{/.notdef}rp /G /H /I 2{/.notdef}rp /L /.notdef /N /O /P /.notdef /R /S /T 6{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /q /r 6{/.notdef}rp /y 134{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf262.415 130.497 mo(D)sh269.085 130.497 mo(e)sh274.224 130.497 mo(g)sh279.649 130.497 mo(r)sh282.794 130.497 mo(e)sh287.934 130.497 mo(d)sh293.518 130.497 mo(o)sh298.943 130.497 mo(m)sh306.931 130.497 mo(e)sh312.162 130.497 mo(-)sh315.928 130.497 mo(S)sh322.031 130.497 mo(e)sh327.17 130.497 mo(q)sh321.086 37.3647 mo([)sh323.581 37.3647 mo(P)sh329.165 37.3647 mo(A)sh335.213 37.3647 mo(S)sh341.298 37.3647 mo(/)sh344.545 37.3647 mo(P)sh350.129 37.3647 mo(A)sh356.261 37.3647 mo(L)sh361.882 37.3647 mo(/)sh365.453 37.3647 mo(T)sh370.193 37.3647 mo(A)sh376.306 37.3647 mo(I)sh378.755 37.3647 mo(L)sh383.866 37.3647 mo(])sh386.37 37.3647 mo(-)sh390.137 37.3647 mo(S)sh396.249 37.3647 mo(e)sh401.388 37.3647 mo(q)sh243.019 110.655 mo(R)sh249.475 110.655 mo(N)sh256.302 110.655 mo(A)sh262.368 110.655 mo(-)sh266.135 110.655 mo(S)sh272.247 110.655 mo(e)sh277.386 110.655 mo(q)sh366.057 13.1724 mo(P)sh371.993 13.1724 mo(o)sh377.392 13.1724 mo(l)sh379.534 13.1724 mo(y)sh384.015 13.1724 mo(A)sh390.081 13.1724 mo(-)sh393.848 13.1724 mo(S)sh399.951 13.1724 mo(e)sh405.09 13.1724 mo(q)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
175.349 141.824 mo
181.123 136.05 li
0 0 0 .3 cmyk
@
175.349 141.824 mo
180.611 147.086 li
@
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7EF321E6251AE8BC8F7521161180477CC360C8E2EEA5C91504927A00A732F0EAC953FEA3EA3ED3BDF832B6391F3C2E72548CA0724DBEA19136A3F5D0BA9E85F5F112DAB079BD5092308627D6D4B500D272219F0E3621F05D7B20124AEFCDA1B09CD7D62AD86ACBFE8F8838343C0645C758B18091692DC002AD9765C014AFD92799E6E21D8FB2DA52549F1697098FBC1E76E7DAD0D79A3583106777139B9EE66B022F481FD5064A8FB00410F5D68E0EB8BCE6D5520753E4944DD1ED883FFE7ABDEC41248AF050234DB34390650F601B95A82BA802A57DE42B569F0F2BCE107CDCC82AF1B9F0925B8BF21063EACB2CCA37F1990> |-/acute <1C60D8A8C9B88C08728FCC66873E7937EF993393C73F800CC4A2> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 50 /two putdup 171 /acute putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash 2{/.notdef}rp /two 4{/.notdef}rp /seven 9{/.notdef}rp /A /.notdef /C /D 2{/.notdef}rp /G /H /I 2{/.notdef}rp /L /.notdef /N /O /P /.notdef /R /S /T 6{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /q /r 6{/.notdef}rp /y 49{/.notdef}rp /acute 84{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf184.304 136.912 mo(O)sh191.438 136.912 mo(H)sh184.304 150.826 mo(2\253 )[5.15771 2.05908 0 ]xsh194.1 150.826 mo(O)sh201.289 150.826 mo(m)sh209.275 150.826 mo(e)sh152.228 145.418 mo(p)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
251.992 150.31 mo
347.123 150.31 li
.808 .751 0 0 cmyk
@
grestore
gsave
240.667 150.31 mo
240.667 155.157 244.598 159.086 249.443 159.086 cv
252.477 159.086 255.149 157.548 256.727 155.21 cv
251.827 150.31 li
256.727 145.411 li
255.149 143.072 252.477 141.534 249.443 141.534 cv
244.598 141.534 240.667 145.463 240.667 150.31 cv
clp
240.667 141.534 mo
256.727 141.534 li
256.727 159.086 li
240.667 159.086 li
240.667 141.534 li
cp
level3{
gsave
clp
[8.40931 0 0 -8.40931 248.695 150.313 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.40931 0 0 -8.40931 248.695 150.313 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
240.668 150.311 mo
229.563 150.311 li
.808 .751 0 0 cmyk
@
grestore
gsave
340.746 150.31 mo
340.746 151.035 342.174 151.622 343.936 151.622 cv
345.695 151.622 347.123 151.035 347.123 150.31 cv
347.123 149.585 345.695 148.998 343.936 148.998 cv
342.174 148.998 340.746 149.585 340.746 150.31 cv
clp
340.746 148.998 mo
347.123 148.998 li
347.123 151.622 li
340.746 151.622 li
340.746 148.998 li
cp
level3{
gsave
clp
[2.43842 0 0 -2.43842 343.933 150.311 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.43842 0 0 -2.43842 343.933 150.311 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
347.123 150.31 mo
347.123 151.035 348.551 151.622 350.313 151.622 cv
352.075 151.622 353.502 151.035 353.502 150.31 cv
353.502 149.585 352.075 148.998 350.313 148.998 cv
348.551 148.998 347.123 149.585 347.123 150.31 cv
clp
347.123 148.998 mo
353.502 148.998 li
353.502 151.622 li
347.123 151.622 li
347.123 148.998 li
cp
level3{
gsave
clp
[2.43828 0 0 -2.43828 350.313 150.311 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.43828 0 0 -2.43828 350.313 150.311 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
345.813 153.498 mo
345.813 155.259 346.4 156.687 347.123 156.687 cv
347.85 156.687 348.436 155.259 348.436 153.498 cv
348.436 151.737 347.85 150.31 347.123 150.31 cv
346.4 150.31 345.813 151.737 345.813 153.498 cv
clp
345.812 156.687 mo
345.812 150.31 li
348.436 150.31 li
348.436 156.687 li
345.812 156.687 li
cp
level3{
gsave
clp
[0 -2.43752 -2.43752 0 347.125 153.498 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -2.43752 -2.43752 0 347.125 153.498 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
345.813 147.121 mo
345.813 148.882 346.4 150.31 347.123 150.31 cv
347.85 150.31 348.436 148.882 348.436 147.121 cv
348.436 145.359 347.85 143.932 347.123 143.932 cv
346.4 143.932 345.813 145.359 345.813 147.121 cv
clp
345.812 150.31 mo
345.812 143.932 li
348.436 143.932 li
348.436 150.31 li
345.812 150.31 li
cp
level3{
gsave
clp
[0 -2.43829 -2.43829 0 347.125 147.121 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -2.43829 -2.43829 0 347.125 147.121 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
343.941 151.637 mo
342.696 152.883 342.102 154.307 342.613 154.82 cv
343.127 155.332 344.551 154.737 345.797 153.492 cv
347.041 152.247 347.637 150.822 347.123 150.31 cv
346.998 150.185 346.819 150.126 346.601 150.126 cv
345.927 150.126 344.882 150.695 343.941 151.637 cv
clp
339.499 152.729 mo
344.869 147.358 li
350.24 152.729 li
344.869 158.1 li
339.499 152.729 li
cp
level3{
gsave
clp
[1.72391 -1.72391 -1.72391 -1.72391 344.867 152.566 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.72391 -1.72391 -1.72391 -1.72391 344.867 152.566 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
348.449 147.127 mo
347.205 148.373 346.612 149.798 347.123 150.31 cv
347.637 150.822 349.06 150.228 350.304 148.983 cv
351.551 147.738 352.147 146.313 351.633 145.8 cv
351.508 145.676 351.329 145.616 351.111 145.616 cv
350.438 145.616 349.391 146.185 348.449 147.127 cv
clp
344.009 148.219 mo
349.38 142.849 li
354.75 148.219 li
349.38 153.589 li
344.009 148.219 li
cp
level3{
gsave
clp
[1.72382 -1.72382 -1.72382 -1.72382 349.377 148.055 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.72382 -1.72382 -1.72382 -1.72382 349.377 148.055 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
347.123 150.31 mo
346.612 150.822 347.205 152.247 348.449 153.492 cv
349.695 154.737 351.121 155.331 351.633 154.819 cv
352.147 154.306 351.551 152.883 350.304 151.637 cv
349.364 150.695 348.32 150.126 347.645 150.126 cv
347.428 150.126 347.248 150.185 347.123 150.31 cv
clp
349.38 158.099 mo
344.01 152.729 li
349.38 147.358 li
354.749 152.729 li
349.38 158.099 li
cp
level3{
gsave
clp
[-1.72391 -1.72391 -1.72391 1.72391 349.379 152.566 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.72391 -1.72391 -1.72391 1.72391 349.379 152.566 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
342.613 145.8 mo
342.102 146.312 342.696 147.738 343.941 148.983 cv
345.185 150.228 346.612 150.822 347.123 150.31 cv
347.637 149.798 347.041 148.373 345.795 147.127 cv
344.854 146.186 343.81 145.616 343.135 145.616 cv
342.917 145.616 342.738 145.676 342.613 145.8 cv
clp
344.869 153.589 mo
339.499 148.219 li
344.869 142.849 li
350.24 148.219 li
344.869 153.589 li
cp
level3{
gsave
clp
[-1.72372 -1.72372 -1.72372 1.72372 344.867 148.055 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.72372 -1.72372 -1.72372 1.72372 344.867 148.055 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
253.137 288.229 mo
237.257 288.229 li
.808 .751 0 0 cmyk
@
grestore
.808 .751 0 0 cmyk
GQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf40.0103 240.935 mo(m)sh47.459 240.935 mo(7)sh52.3198 240.935 mo(G)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
75.5679 240.936 mo
60.3652 240.936 li
60.3652 233.593 li
75.5679 233.593 li
75.5679 240.936 li
cp
f
[] 0 dsh
75.5679 240.936 mo
60.3652 240.936 li
60.3652 233.593 li
75.5679 233.593 li
75.5679 240.936 li
cp
0 0 0 .3 cmyk
@
51.7339 295.19 mo
36.5308 295.19 li
36.5308 287.846 li
51.7339 287.846 li
51.7339 295.19 li
cp
.808 .751 0 0 cmyk
f
51.7339 295.19 mo
36.5308 295.19 li
36.5308 287.846 li
51.7339 287.846 li
51.7339 295.19 li
cp
0 0 0 .3 cmyk
@
91.5439 240.936 mo
76.3408 240.936 li
76.3408 233.593 li
91.5439 233.593 li
91.5439 240.936 li
cp
.808 .751 0 0 cmyk
f
91.5439 240.936 mo
76.3408 240.936 li
76.3408 233.593 li
91.5439 233.593 li
91.5439 240.936 li
cp
0 0 0 .3 cmyk
@
107.52 240.936 mo
92.3169 240.936 li
92.3169 233.593 li
107.52 233.593 li
107.52 240.936 li
cp
.808 .751 0 0 cmyk
f
107.52 240.936 mo
92.3169 240.936 li
92.3169 233.593 li
107.52 233.593 li
107.52 240.936 li
cp
0 0 0 .3 cmyk
@
123.496 240.936 mo
108.293 240.936 li
108.293 233.593 li
123.496 233.593 li
123.496 240.936 li
cp
.808 .751 0 0 cmyk
f
123.496 240.936 mo
108.293 240.936 li
108.293 233.593 li
123.496 233.593 li
123.496 240.936 li
cp
0 0 0 .3 cmyk
@
176.64 240.936 mo
122.916 240.936 li
122.916 233.593 li
176.64 233.593 li
176.64 240.936 li
cp
.808 .751 0 0 cmyk
f
176.64 240.936 mo
122.916 240.936 li
122.916 233.593 li
176.64 233.593 li
176.64 240.936 li
cp
0 0 0 .3 cmyk
@
grestore
GQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf180.118 240.936 mo(AA)[6.51172 0 ]xsh193.141 240.936 mo(A)sh199.449 240.936 mo(.)sh201.889 240.936 mo(.)sh204.337 240.936 mo(.)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
75.5684 230.363 mo
75.5684 224.902 li
37.6914 224.902 li
37.6914 230.363 li
0 0 0 .7 cmyk
@
205.886 205.766 mo
205.886 200.307 li
168.008 200.307 li
168.008 205.766 li
@
189.266 228.055 mo
189.266 222.596 li
151.389 222.596 li
151.389 228.055 li
@
193.019 237.022 mo
193.019 242.482 li
39.5669 242.482 li
39.5669 237.022 li
@
grestore
GQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf37.6914 220.288 mo(C)sh44.4165 220.288 mo(a)sh49.5088 220.288 mo(p)sh55.2227 220.288 mo(-)sh58.9888 220.288 mo(S)sh65.1016 220.288 mo(e)sh70.2407 220.288 mo(q)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
70.6724 279.164 mo
70.6724 273.705 li
32.7954 273.705 li
32.7954 279.164 li
0 0 0 .7 cmyk
@
grestore
GQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf18.8809 267.823 mo(S)sh24.9937 267.823 mo(m)sh32.9805 267.823 mo(a)sh38.082 267.823 mo(l)sh40.1875 267.823 mo(l )[2.05957 0 ]xsh44.8257 267.823 mo(R)sh51.2817 267.823 mo(N)sh58.1089 267.823 mo(A)sh64.166 267.823 mo(-)sh67.9321 267.823 mo(S)sh74.0356 267.823 mo(e)sh79.1743 267.823 mo(q)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
244.391 278.49 mo
244.391 273.029 li
127.461 273.029 li
127.461 278.49 li
0 0 0 .7 cmyk
@
grestore
GQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf152.355 268.415 mo(D)sh159.034 268.415 mo(e)sh164.172 268.415 mo(g)sh169.599 268.415 mo(r)sh172.753 268.415 mo(e)sh177.892 268.415 mo(d)sh183.476 268.415 mo(o)sh188.902 268.415 mo(m)sh196.898 268.415 mo(e)sh202.13 268.415 mo(-)sh205.896 268.415 mo(S)sh211.999 268.415 mo(e)sh217.138 268.415 mo(q)sh151.39 219.864 mo(P)sh156.974 219.864 mo(A)sh163.022 219.864 mo(S)sh169.237 219.864 mo(-)sh173.003 219.864 mo(S)sh179.107 219.864 mo(e)sh184.246 219.864 mo(q)sh92.3203 253.907 mo(R)sh98.7764 253.907 mo(N)sh105.604 253.907 mo(A)sh111.661 253.907 mo(-)sh115.427 253.907 mo(S)sh121.53 253.907 mo(e)sh126.669 253.907 mo(q)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
349.395 277.811 mo
349.395 283.271 li
297.885 283.271 li
297.885 277.811 li
0 0 0 .7 cmyk
@
grestore
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/b <1C60D8A8C9B7CA642A857FF686DAD32159D2062D315BAE64CA93EF1212355EFAB4F941555B5DFAB7E0DB0EBF46BE5BF626774D21301A61767603A7E3329B266AFD95FB042C48D7AE0B1A71A7EED73B6176B23BA998C159682DFBC00411691AA93E78AB65E3372C26F4D7044205C631873E483D3E3BA629E30A9A3C20C4809EFACF36AF57B98376D998D6ABB8B51847B3330B970A6221D0809489D7BECE0F0DB6ACFB1C3A488D53353A8ED082E46638E7D240A3DFDAF00CC8B0547D72F3135993BEB0D010B2D0EC536A2AB8507EC8943842ED13D1AB4B8CD501693498E78B9888FFCBD2267148C5E484C853F2C630DDA6E7C737AC97> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 98 /b putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash 2{/.notdef}rp /two 4{/.notdef}rp /seven 9{/.notdef}rp /A /.notdef /C /D 2{/.notdef}rp /G /H /I 2{/.notdef}rp /L /.notdef /N /O /P /.notdef /R /S /T 6{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /q /r 6{/.notdef}rp /y 49{/.notdef}rp /acute 84{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf304.014 294.693 mo(R)sh310.461 294.693 mo(i)sh312.575 294.693 mo(b)sh318.196 294.693 mo(o)sh323.734 294.693 mo(-)sh327.5 294.693 mo(S)sh333.604 294.693 mo(e)sh338.743 294.693 mo(q)sh160.15 196.357 mo([)sh163.1 196.357 mo(P)sh168.684 196.357 mo(A)sh174.732 196.357 mo(S)sh180.817 196.357 mo(/)sh184.055 196.357 mo(P)sh189.639 196.357 mo(A)sh195.779 196.357 mo(L)sh200.204 196.357 mo(-)sh203.97 196.357 mo(S)sh210.083 196.357 mo(e)sh215.222 196.357 mo(q)sh220.927 196.357 mo(/)sh224.507 196.357 mo(T)sh229.247 196.357 mo(A)sh235.369 196.357 mo(I)sh237.818 196.357 mo(L)sh242.92 196.357 mo(])sh245.424 196.357 mo(-)sh249.19 196.357 mo(S)sh255.294 196.357 mo(e)sh260.433 196.357 mo(q)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
51.7339 291.519 mo
57.5078 285.745 li
0 0 0 .3 cmyk
@
51.7339 293.403 mo
56.9961 298.666 li
@
grestore
0 0 0 1 cmyk
GQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf60.6885 300.603 mo(O)sh67.8311 300.603 mo(H)sh60.6885 289.583 mo(2)sh65.8555 289.583 mo(\253 )[2.05908 0 ]xsh70.4932 289.583 mo(O)sh77.6821 289.583 mo(m)sh85.6782 289.583 mo(e)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
141.931 288.229 mo
237.063 288.229 li
.808 .751 0 0 cmyk
@
grestore
gsave
130.606 288.228 mo
130.606 293.076 134.536 297.005 139.383 297.005 cv
142.416 297.005 145.088 295.466 146.667 293.128 cv
141.767 288.228 li
146.667 283.329 li
145.089 280.99 142.416 279.452 139.383 279.452 cv
134.536 279.452 130.606 283.382 130.606 288.228 cv
clp
130.606 279.452 mo
146.667 279.452 li
146.667 297.005 li
130.606 297.005 li
130.606 279.452 li
cp
level3{
gsave
clp
[8.4136 0 0 -8.4136 138.637 288.242 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.4136 0 0 -8.4136 138.637 288.242 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
130.606 288.229 mo
119.501 288.229 li
.808 .751 0 0 cmyk
@
grestore
gsave
230.686 288.228 mo
230.686 288.954 232.113 289.54 233.875 289.54 cv
235.635 289.54 237.064 288.954 237.064 288.228 cv
237.064 287.504 235.635 286.916 233.875 286.916 cv
232.113 286.916 230.686 287.504 230.686 288.228 cv
clp
230.686 286.916 mo
237.064 286.916 li
237.064 289.54 li
230.686 289.54 li
230.686 286.916 li
cp
level3{
gsave
clp
[2.43855 0 0 -2.43855 233.875 288.229 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.43855 0 0 -2.43855 233.875 288.229 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
237.064 288.228 mo
237.064 288.954 238.49 289.54 240.252 289.54 cv
242.013 289.54 243.441 288.954 243.441 288.228 cv
243.441 287.504 242.013 286.916 240.252 286.916 cv
238.49 286.916 237.064 287.504 237.064 288.228 cv
clp
237.064 286.916 mo
243.441 286.916 li
243.441 289.54 li
237.064 289.54 li
237.064 286.916 li
cp
level3{
gsave
clp
[2.43809 0 0 -2.43809 240.252 288.229 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.43809 0 0 -2.43809 240.252 288.229 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
235.751 291.417 mo
235.751 293.178 236.339 294.605 237.064 294.605 cv
237.788 294.605 238.376 293.178 238.376 291.417 cv
238.376 289.655 237.788 288.228 237.064 288.228 cv
236.339 288.228 235.751 289.655 235.751 291.417 cv
clp
235.751 294.605 mo
235.751 288.228 li
238.376 288.228 li
238.376 294.605 li
235.751 294.605 li
cp
level3{
gsave
clp
[0 -2.43842 -2.43842 0 237.063 291.418 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -2.43842 -2.43842 0 237.063 291.418 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
235.751 285.039 mo
235.751 286.801 236.339 288.228 237.064 288.228 cv
237.788 288.228 238.376 286.801 238.376 285.039 cv
238.376 283.277 237.788 281.851 237.064 281.851 cv
236.339 281.851 235.751 283.277 235.751 285.039 cv
clp
235.751 288.228 mo
235.751 281.851 li
238.376 281.851 li
238.376 288.228 li
235.751 288.228 li
cp
level3{
gsave
clp
[0 -2.43842 -2.43842 0 237.063 285.041 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -2.43842 -2.43842 0 237.063 285.041 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
233.881 289.556 mo
232.636 290.801 232.041 292.226 232.554 292.738 cv
233.066 293.25 234.49 292.657 235.736 291.411 cv
236.981 290.165 237.575 288.74 237.064 288.228 cv
236.939 288.103 236.759 288.044 236.542 288.044 cv
235.867 288.044 234.822 288.614 233.881 289.556 cv
clp
229.438 290.647 mo
234.808 285.277 li
240.178 290.647 li
234.808 296.017 li
229.438 290.647 li
cp
level3{
gsave
clp
[1.72423 -1.72423 -1.72423 -1.72423 234.809 290.484 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.72423 -1.72423 -1.72423 -1.72423 234.809 290.484 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
238.389 285.046 mo
237.145 286.291 236.551 287.716 237.064 288.228 cv
237.575 288.74 239 288.147 240.244 286.902 cv
241.49 285.656 242.085 284.232 241.572 283.719 cv
241.447 283.594 241.268 283.535 241.05 283.535 cv
240.376 283.535 239.331 284.104 238.389 285.046 cv
clp
233.948 286.138 mo
239.318 280.768 li
244.688 286.138 li
239.318 291.507 li
233.948 286.138 li
cp
level3{
gsave
clp
[1.72391 -1.72391 -1.72391 -1.72391 239.316 285.973 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.72391 -1.72391 -1.72391 -1.72391 239.316 285.973 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
237.064 288.228 mo
236.551 288.74 237.145 290.165 238.389 291.411 cv
239.635 292.657 241.061 293.25 241.572 292.738 cv
242.085 292.225 241.49 290.801 240.244 289.556 cv
239.302 288.613 238.258 288.044 237.584 288.044 cv
237.367 288.044 237.188 288.103 237.064 288.228 cv
clp
239.318 296.017 mo
233.948 290.647 li
239.318 285.277 li
244.688 290.647 li
239.318 296.017 li
cp
level3{
gsave
clp
[-1.72391 -1.72391 -1.72391 1.72391 239.316 290.484 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.72391 -1.72391 -1.72391 1.72391 239.316 290.484 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
232.554 283.719 mo
232.041 284.23 232.636 285.656 233.881 286.902 cv
235.125 288.147 236.551 288.74 237.064 288.228 cv
237.575 287.716 236.981 286.291 235.735 285.046 cv
234.794 284.104 233.75 283.535 233.075 283.535 cv
232.858 283.535 232.679 283.594 232.554 283.719 cv
clp
234.808 291.507 mo
229.438 286.138 li
234.808 280.768 li
240.178 286.138 li
234.808 291.507 li
cp
level3{
gsave
clp
[-1.72382 -1.72382 -1.72382 1.72382 234.809 285.975 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.72382 -1.72382 -1.72382 1.72382 234.809 285.975 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
203.121 44.5659 mo
209.696 38.2178 li
.833 .152 1 .037 cmyk
@
209.696 38.2178 mo
209.84 29.9639 li
@
211.479 38.249 mo
211.622 29.9941 li
@
211.479 38.249 mo
217.77 44.7622 li
@
202.436 42.9219 mo
209.011 36.5728 li
@
212.709 37.0942 mo
219 43.6094 li
@
.5 lw
77.7563 125.837 mo
81.3003 125.912 84.5981 123.547 85.6084 119.914 cv
86.6172 116.28 85.0112 112.554 81.9375 110.789 cv
0 0 0 1 cmyk
@
76.0054 125.6 mo
78.3574 126.898 li
77.8892 125.821 li
78.5933 124.879 li
76.0054 125.6 li
cp
f
80.3145 110.089 mo
82.9995 110.19 li
82.0425 110.873 li
82.1606 112.042 li
80.3145 110.089 li
cp
f
2 lw
332.357 199.414 mo
345.084 205.024 353.967 217.752 353.967 232.555 cv
353.967 252.549 337.76 268.757 317.764 268.757 cv
297.77 268.757 281.563 252.549 281.563 232.555 cv
281.563 221.912 286.156 212.342 293.467 205.717 cv
.808 .751 0 0 cmyk
@
grestore
gsave
286.072 203.993 mo
286.072 208.21 289.49 211.627 293.707 211.627 cv
297.922 211.627 301.34 208.21 301.34 203.993 cv
301.34 199.778 297.922 196.361 293.707 196.361 cv
289.49 196.361 286.072 199.778 286.072 203.993 cv
clp
286.072 196.361 mo
301.34 196.361 li
301.34 211.627 li
286.072 211.627 li
286.072 196.361 li
cp
level3{
gsave
clp
[7.63379 0 0 -7.63379 293.715 203.988 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.63379 0 0 -7.63379 293.715 203.988 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
286.072 196.361 mo
286.072 200.577 289.49 203.993 293.707 203.993 cv
297.922 203.993 301.34 200.577 301.34 196.361 cv
301.34 192.144 297.922 188.727 293.707 188.727 cv
289.49 188.727 286.072 192.144 286.072 196.361 cv
clp
286.072 188.727 mo
301.34 188.727 li
301.34 203.993 li
286.072 203.993 li
286.072 188.727 li
cp
level3{
gsave
clp
[7.63354 0 0 -7.63354 293.707 196.355 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.63354 0 0 -7.63354 293.707 196.355 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
296.381 206.848 mo
296.381 211.065 299.797 214.482 304.014 214.482 cv
308.228 214.482 311.648 211.065 311.648 206.848 cv
311.648 202.633 308.228 199.215 304.014 199.215 cv
299.797 199.215 296.381 202.633 296.381 206.848 cv
clp
296.381 199.215 mo
311.648 199.215 li
311.648 214.482 li
296.381 214.482 li
296.381 199.215 li
cp
level3{
gsave
clp
[7.63354 0 0 -7.63354 304.02 206.848 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.63354 0 0 -7.63354 304.02 206.848 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
292.323 193.84 mo
292.323 198.056 295.738 201.473 299.955 201.473 cv
304.17 201.473 307.588 198.056 307.588 193.84 cv
307.588 189.624 304.17 186.207 299.955 186.207 cv
295.738 186.207 292.323 189.624 292.323 193.84 cv
clp
292.323 186.207 mo
307.588 186.207 li
307.588 201.473 li
292.323 201.473 li
292.323 186.207 li
cp
level3{
gsave
clp
[7.63306 0 0 -7.63306 299.957 193.844 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.63306 0 0 -7.63306 299.957 193.844 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
299.117 206.848 mo
299.117 211.065 302.533 214.482 306.75 214.482 cv
310.967 214.482 314.384 211.065 314.384 206.848 cv
314.384 202.633 310.967 199.215 306.75 199.215 cv
302.533 199.215 299.117 202.633 299.117 206.848 cv
clp
299.117 199.215 mo
314.384 199.215 li
314.384 214.482 li
299.117 214.482 li
299.117 199.215 li
cp
level3{
gsave
clp
[7.63354 0 0 -7.63354 306.754 206.848 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.63354 0 0 -7.63354 306.754 206.848 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
308.973 272.949 mo
308.973 275.265 312.391 277.142 316.607 277.142 cv
320.822 277.142 324.24 275.265 324.24 272.949 cv
324.24 270.633 320.822 268.757 316.607 268.757 cv
312.391 268.757 308.973 270.633 308.973 272.949 cv
clp
308.973 268.757 mo
324.24 268.757 li
324.24 277.142 li
308.973 277.142 li
308.973 268.757 li
cp
level3{
gsave
clp
[7.63379 0 0 -4.19247 316.609 272.949 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!
s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!
s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!
s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!s8N'!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8N'!rVH]tqtC?rqXY*qq!Saop?NCmo]I%ko&C\inD>>gn(T)fmFN`dld@?bl-;!`kK5X^k/KC]jMF%[
ik@\Yi4;>WhR5uUgp0WSgTFBRfrA$Pf;;[NeY6=Le"0tJd@+VHd$AAGcB<#Eb`6ZCb)1<AaG+s?a+A^>
`I3=<_g-t:_0(V8^N#86]kro4]P3Z3\n.<1\7(s/[U#U-Zrs7+ZW4"*Yu.Y(Y>);&X\#r$X$sT"WBn5u
W'.utVE)WrUc$9pU+spnTInRlSg`1jSKuqiRipSgR2k5eQPelcPn`NaPS!9`Oppp^O9kR\NWf4ZMu`kX
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.680984 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.63379 0 0 -4.19247 316.609 272.949 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,tr;-9bp\"1LnaGo5lg!]s
k2kX_i8<AFgY(61e^Msnd*BkYaiMNB`5BF,^:_+i\[T#SZa-j>Y,nY&W2HJfU7n3NSXZ(8Q^*f!P)t`a
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,sq=aFLmHWlqiSN;?eBlI_
a2Gg.]=>5QY,eLtU7[sDQBRAgM2$Y5I!KmVE,96#@piSG=&`$l91MB95!(_]1+t.+,p=<K(_mYo$jd+?
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!#"UGJG&JQ$"*?ZUT.P<G42`a)e6Uj[B:f
CCt>[LrOBPVO,Fa/7^Jq]#=NfoZpS"?=LVlHl'Za[NZ^r+16bg4bhg"kTHk3;7$o(DeT~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
grestore
gsave
312.258 266.711 mo
312.258 267.597 314.205 268.316 316.607 268.316 cv
319.008 268.316 320.955 267.597 320.955 266.711 cv
320.955 265.824 319.008 265.106 316.607 265.106 cv
314.205 265.106 312.258 265.824 312.258 266.711 cv
clp
312.258 265.106 mo
320.955 265.106 li
320.955 268.316 li
312.258 268.316 li
312.258 265.106 li
cp
level3{
gsave
clp
[4.34872 0 0 -1.60554 316.605 266.711 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.34872 0 0 -1.60554 316.605 266.711 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
grestore
gsave
304.014 196.063 mo
304.014 200.279 307.43 203.697 311.648 203.697 cv
314.553 203.697 317.078 202.073 318.367 199.684 cv
317.338 200.896 315.808 201.667 314.095 201.667 cv
311 201.667 308.49 199.158 308.49 196.063 cv
308.49 192.968 311 190.459 314.095 190.459 cv
315.808 190.459 317.338 191.23 318.367 192.442 cv
317.078 190.053 314.553 188.43 311.648 188.43 cv
307.43 188.43 304.014 191.847 304.014 196.063 cv
clp
304.014 188.43 mo
318.367 188.43 li
318.367 203.697 li
304.014 203.697 li
304.014 188.43 li
cp
level3{
gsave
clp
[7.40844 0 0 -7.40843 311.191 196.066 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.40844 0 0 -7.40843 311.191 196.066 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
GQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf309.521 199.413 mo(m)sh316.97 199.413 mo(7)sh321.821 199.413 mo(G)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
321.889 274.048 mo
328.461 276.239 325.754 277.399 328.461 276.239 cv
331.166 275.079 329.748 273.991 331.553 275.372 cv
333.355 276.754 330.135 278.431 333.355 276.754 cv
336.577 275.079 332.453 272.631 336.577 275.079 cv
340.697 277.527 340.313 278.946 341.602 277.143 cv
.75 0 1 0 cmyk
@
.5 lw
326.656 271.237 mo
331.744 268.757 li
0 0 0 .6 cmyk
@
323.662 266.345 mo
328.752 263.865 li
@
325.654 273.802 mo
330.744 271.322 li
@
grestore
0 0 0 .6 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/s <1C60D8A8C9B7A73DB93069DBC6375B57C8CEA5298ECD155D330F5DEADB84BCE0F3B9931445A3E0A23408E166E94ED9B84A4F77C41F0369937E8C2C9831D0AAA0C414A32B88A399DE991143E3662049761DB0B0648AFDE42A4B3062552586F0EBBA0F2E7BF3A4DFA292E6EBB84128A6A9679FD085A8A3EE7D119B409E196F8DD013E73279FEB2FAD41E214F19FAE59B2DE112620184CF1FA5F8444A4C3EBCD7B771E48653A08D11A41EDDC944A6794EED345CDB91C69F6C018931F290C225B8C2B7916D95BB63059EE22EE396098AC463522A22CE66834854EDE7E984119074789DC9CD95809278277DFC5F487D01C620166BB029D76936EA500E2DBA569CE0343EEFE105A4474A80777509B8E0D1BF6BCA9D29EA70910F3731811C708532E5A8C24D816BA3F135B8B9EBA4D9360824E69CC0DC3D45097EC5A74ECA5FEECBEEBDE4BFBA7F33D81257F3182B67A858EF8443FF7D0CE5> |-/t <1C60D8A8C9B831A983F3E33337748713E88A1E5224168E0F67E7570999394DC65B3C1F9E93E779E823D948B9BA81E8D28F7AA76A84CA0D8886E947D6DA351FC6D6DA2491F91E4DCFCC3CFCAB956E68A2E9A2422BEE8CAB716B00E0C2DA95565D6409476535> |-/u <1C60D8A8C9B7EF322440D101B9C5BDB658AC9990163C1DE216301D6A78F7E75DE20D48E148DE5D0B10EDCFF1F56F3D9DFED7E3EA1166FDE58BF5A95F3934CB8D172597F9074D97457D8256FE204274315A9853C456013DFC9C30B22C57D3DD5E6E54038141F8007BF38045054A25F79544E8DF7208> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 115 /s putdup 116 /t putdup 117 /u putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash 2{/.notdef}rp /two 4{/.notdef}rp /seven 9{/.notdef}rp /A /.notdef /C /D 2{/.notdef}rp /G /H /I 2{/.notdef}rp /L /.notdef /N /O /P /.notdef /R /S /T 6{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u 3{/.notdef}rp /y 49{/.notdef}rp /acute 84{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [9.2761 -1.136e-15 -1.136e-15 -9.2761 0 0 ]msf116.293 168.002 mo(N)sh123.074 168.002 mo(u)sh128.333 168.002 mo(c)sh133.398 168.002 mo(l)sh135.55 168.002 mo(e)sh140.689 168.002 mo(o)sh146.097 168.002 mo(u)sh151.375 168.002 mo(s)sh94.2627 191.025 mo(C)sh101.136 191.025 mo(y)sh106.117 191.025 mo(t)sh108.983 191.025 mo(op)[5.4082 0 ]xsh119.976 191.025 mo(l)sh122.127 191.025 mo(a)sh127.238 191.025 mo(s)sh131.979 191.025 mo(m)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
4.47168 172.03 mo
35.6475 176.362 67.1309 176.979 98.5605 176.597 cv
130.687 176.207 162.893 175.707 194.999 174.539 cv
227.586 173.354 260.111 170.861 292.713 169.991 cv
320.85 169.241 348.982 165.738 375.879 157.197 cv
389.018 153.026 401.691 147.437 413.617 140.531 cv
414.314 140.128 413.686 139.048 412.986 139.452 cv
387.113 154.429 358.084 162.347 328.584 166.134 cv
314.08 167.994 299.525 168.499 284.927 168.972 cv
268.633 169.499 252.353 170.413 236.076 171.299 cv
203.74 173.06 171.45 173.725 139.083 174.495 cv
106.947 175.261 74.7847 176.178 42.6626 174.442 cv
29.9995 173.759 17.3647 172.57 4.80371 170.825 cv
4.01563 170.717 3.67578 171.92 4.47168 172.03 cv
f
4.47168 177.023 mo
35.6475 181.355 67.1309 181.971 98.5605 181.59 cv
130.687 181.199 162.893 180.699 194.999 179.532 cv
227.586 178.348 260.111 175.854 292.713 174.984 cv
320.85 174.234 348.982 170.73 375.879 162.19 cv
389.018 158.019 401.691 152.429 413.617 145.524 cv
414.314 145.122 413.686 144.042 412.986 144.445 cv
387.113 159.423 358.084 167.34 328.584 171.125 cv
314.08 172.987 299.525 173.492 284.927 173.965 cv
268.633 174.492 252.353 175.406 236.076 176.292 cv
203.74 178.052 171.45 178.718 139.083 179.487 cv
106.947 180.252 74.7847 181.17 42.6626 179.436 cv
29.9995 178.751 17.3647 177.563 4.80371 175.818 cv
4.01563 175.709 3.67578 176.913 4.47168 177.023 cv
f
grestore
gsave
204.306 51.9063 mo
204.306 55.4482 207.176 58.3188 210.718 58.3188 cv
214.26 58.3188 217.13 55.4482 217.13 51.9063 cv
217.13 48.3652 214.26 45.4941 210.718 45.4941 cv
207.176 45.4941 204.306 48.3652 204.306 51.9063 cv
clp
204.306 45.4941 mo
217.13 45.4941 li
217.13 58.3188 li
204.306 58.3188 li
204.306 45.4941 li
cp
level3{
gsave
clp
[6.41079 0 0 -6.41079 210.719 51.9063 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.41079 0 0 -6.41079 210.719 51.9063 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
264.053 40.3921 mo
264.053 41.6602 264.559 42.8232 265.401 43.7529 cv
266.575 42.458 268.404 42.5791 270.467 42.5791 cv
272.527 42.5791 274.358 42.458 275.53 43.7529 cv
276.373 42.8232 276.88 41.6602 276.88 40.3921 cv
276.88 37.3589 274.008 34.8989 270.467 34.8989 cv
266.925 34.8989 264.053 37.3589 264.053 40.3921 cv
clp
264.053 34.8989 mo
276.88 34.8989 li
276.88 43.7529 li
264.053 43.7529 li
264.053 34.8989 li
cp
level3{
gsave
clp
[5.51016 0 0 -5.51016 270.469 39.3242 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.51016 0 0 -5.51016 270.469 39.3242 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
.5 lw
[] 0 dsh
266.765 43.3472 mo
273.915 43.3472 li
.808 .751 0 0 cmyk
@
267.224 43.3472 mo
267.224 44.1592 li
@
268.383 43.3472 mo
268.383 44.1592 li
@
269.543 43.3472 mo
269.543 44.1592 li
@
270.702 43.3472 mo
270.702 44.1592 li
@
271.861 43.3472 mo
271.861 44.1592 li
@
273.021 43.3472 mo
273.021 44.1592 li
@
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginGQKSMN+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/X <1C60D8A8C9B7D8BE790159D4ACF8C0AB3CFF274784ECFA93F0B84AF40613B3A797A8A94B0CA266AA8C332D95E0498C9B98E96DDEB03B32477EC6A3> |-systemdict /gcheck known {setglobal} if end {end} ifendGQKSMN+HelveticaNeue /Encoding getdup 88 /X putpop%ADOEndSubsetFont
/GQKSMN+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash 2{/.notdef}rp /two 4{/.notdef}rp /seven 9{/.notdef}rp /A /.notdef /C /D 2{/.notdef}rp /G /H /I 2{/.notdef}rp /L /.notdef /N /O /P /.notdef /R /S /T 3{/.notdef}rp /X 2{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u 3{/.notdef}rp /y 49{/.notdef}rp /acute 84{/.notdef}rp]GQKSMN+HelveticaNeue nfGQKSMN+HelveticaNeue*1 [4.6381 -5.68004e-16 -5.68004e-16 -4.6381 0 0 ]msf269.206 47.5161 mo(X)shgsave
0 0 mo
418.262 0 li
418.262 310 li
0 310 li
0 0 li
cp
clp
[] 0 dsh
15.0288 118.338 mo
14.0679 118.401 20.4297 116.226 28.895 116.422 cv
34.7949 116.561 37.166 119.212 42.229 119.083 cv
50.792 118.865 80.1826 114.924 68.2456 128.023 cv
67.0088 129.38 70.0337 131.995 68.2456 133.185 cv
63.73 136.192 52.5229 136.563 45.6118 138.454 cv
42.4248 139.324 45.3779 143.86 42.3257 144.626 cv
36.7998 146.013 26.1538 145.37 20.7788 145.69 cv
11.6069 146.24 8.90674 147.046 8.90674 147.046 cv
.039 .878 1 .00400001 cmyk
@
15.0288 117.137 mo
15.3159 117.122 21.3887 118.042 29.1846 118.163 cv
33.3076 118.227 38.4829 116.958 43.1958 117.137 cv
47.6226 117.304 51.8296 119.138 55.854 119.67 cv
58.313 119.995 60.6328 120.323 62.7139 120.684 cv
70.355 122.013 77.4326 121.378 73.8979 125.256 cv
72.6528 126.622 63.1968 124.086 69.5327 129.152 cv
71.6689 130.86 61.7739 131.893 61.2646 133.345 cv
60.6836 135.004 62.4648 137.454 59.9116 138.826 cv
55.0786 141.424 41.0576 140.945 32.5576 142.392 cv
29.9678 142.832 33.1787 147.253 31.0117 147.766 cv
22.564 149.768 11.668 148.12 8.90674 148.493 cv
@
3.25 35.6182 mo
3.8042 35.5513 19.8071 34.6392 35.9771 30.2603 cv
49.8618 26.499 50.998 13.0674 56.4619 19.645 cv
60.6401 24.6753 61.6582 34.4395 66.4141 40.1304 cv
69.0278 43.2583 80.7432 45.0352 83.8071 53.8511 cv
86.856 62.6211 80.3291 72.6064 76.938 81.8721 cv
76.123 84.1001 90.042 95.1182 89.1221 97.1392 cv
87.8018 100.037 74.354 106.298 65.2539 104.387 cv
55.2661 102.288 41.208 94.915 28.6611 94.2461 cv
22.7588 93.9312 19.854 95.9561 14.623 95.7861 cv
9.01416 95.605 8.55615 99.4302 4.63818 99.6934 cv
@
3.25 41.6953 mo
3.39795 41.6763 17.5679 61.4355 20.1221 35.7095 cv
22.0161 16.6172 41.5332 22.6123 54.5288 28.0513 cv
59.0449 29.9414 74.7998 32.0503 76.938 35.0083 cv
82.957 43.3374 71.6538 56.0264 72.5991 61.1943 cv
72.7329 61.9331 87.6211 67.0083 89.7012 76.1543 cv
90.7749 80.8765 83.874 98.4453 74.7241 104.869 cv
64.4448 112.087 51.415 107.875 45.3501 106.833 cv
35.687 105.172 26.021 91.5425 21.1528 90.7612 cv
-2.1499 87.0273 23.1812 104.525 4.63818 105.771 cv
@
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
/GQKSMN+HelveticaNeue*1 uf/GQKSMN+HelveticaNeue uf/HelveticaNeue ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.1.0%%For: (Chris Roy) ()%%Title: (RNA_Sequencing_methodologies.eps)%%CreationDate: 2014-04-5 8:46 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6LK5nLdP1UV!;?IC.O$R/A/q=(-d76@fchQt$0UTgWp[u&"FSPKs4Xb(bk-"U>h*-9d:f44m^Cj*pHn>@I$fJO^uiKrbClV;%^%R.B[(2f'EbRG,'IrdEj"Ir)3ZI^[no.^tFaA[K5$\#ph@1RYhr.<n>a%7?hV[9YVr%>.4AtEd7o4;'meeAlg<KJN4I-Gc0?=$?%V_,CEMb3g*9;UI,/%rc#I2$;H,_Hn9m\MUTG?QBSYD,0\L\Vorj^1QnY(t@IkSnuKQhS,:cF>0m6-nWCrYO?2if2.iq0jcR7PJpt%S:uD,O)'Nj;8Q>p[JFhc^UJun6%.8NFe<,8PCm3AX$6:ug;+4+>fg@O:44B$cuMf<.>Cu&KQk=XV'HJ6PY/1ECbhL*Z1*b9_dZeC%Z94<Y$Na*slKF?0C<M)Of]k&65iF!u7[NNB!!HCi?l8`8mp(f5o&.+67R3mA;N=*1\CZm*coLLh8uMZk$j\?0he@YBqVYX#!S-g'%@g#4aS5ibnKH/PBPm8"jfYD3.mU#R(81tVr.fum+A3-99OlPX+#iRV4%Wc@48idC]&[[9qrLMN#[:*?U,8n;L);t"+d!fnWo8/D3%0]TJ`7;m=qDX#fuE8`?r,@a;W%KAH]T6;-m58qXLAIq+D`FHS&L.NFndKZj<J,m4S2?8g"ZJf%LS:qFfJ5!PNqPXm*)%d(^-iXi4%r&[6FA)NF2nNEG_pKS3cMad:gcf6D!j'A7s]0&mX<\!l$I4Cf-;?4Zm^14-a)G?pUQ&8aX/r+"Y3@pAH5C>MY_c"#bQGRS8NhqV%%/6+7\PJna&.2K0^V1NnAQ#mq:Y#On>V*^fJ4f81SrLkgk]D/1JT*MC8G:\GX_KRPb@o>fhn)9)l*R!Asn/]QO6@qCZA&<HfKd4HY%XGOfNer1ijG8rPji`-s3[Rm/agW*2O/pt\pPmUhrnUj!&0W%[B:r7GQ,TSo44mb>u)f6UBY2Vu(63"/'NXt$P-Ak)MC3kqM$pV!2%N_dVJKaN5Da+s-Y$V*_WO70I=GQm!0'TN^].2F@t:q4sIYsjo^YidM7W&URNUJT!/'Q,C*kf@K,Z0/K$Zs?kAMD&."rPLBM3gDI?%FSI[528+q._fmY#ko7Z5@7$U*G:\BA$Un(<<dBHeNj_3P>GYbn<`EhOSl87T[%QuDMGjk+g,fXag+J'up0>Rm3]>]9/>]dMCT#M-%qt,sCS8osQAr:X:)d5U_r)*=@\XbntMQ5I3F-[.\Sb=LTX)tPo+$QgUONQfKQ;o@!GebB"OMn&>BW->Zql@.ul_RC_/49F+P=e8E%q;XG\8,oB7W5e=&s.k.<W$p(EqBu6bAE[t1PQ#."oQN3o[[gFt,`1C*5NuOK5_&*loIgn1Q08t]PQ$ijoXFfkrtt-ab&bKA^/M\m%hs)lk$01'!U**K/'t>H!.j[Z<cQ%ChpJM4RROO.WIV4=-=oFU79A)uV0N2G=oJs@3T:%IkJ_q4=NS`\&pfkmu4?b>(pk_e1?Te=>%k=^+aG_IA"5R@HaiA[^5N.&TIZ0.oFq'45'K12c\(F:-H,aRPg/5P`_;FOo$i4al:KH#.eMpKa_EP0Xc1.DTUXHgok/^g(5peAbf%Zj&4XA#*U85"eS;oEFR#Q7GBP.qVlnHc:TfB<t`,XV'uA7FX/!Tn)%Y+26]PGY74gnR!:qBdZ:,ML>]-6JnUZ^>gSlV5TWBa=*]F%TS`gE9k"D[,Ul+=;TT7s-YE.DQk@Lm5$"APJMK6=)jJY`.Ekq8L!N>4F:*Bq'&#:lg1U6m<fIG.;5G""%gL`aW.?H3\1'";:B=r<%rPnGs,5.5`!KK4$9.Wsp;Ps"l;(+up'M9)h'F:RW#)oQ]MJ_q'$GZd6N@cTS!gj)%(SK$SQo27kWhZ6#<_#MI7'Qjm;d_4<;bKmO%Bb'I(d)99`gH=RHg2Djc8a-?NO7nk23N#b3egY1+1;Y%"BXFGAStgC%q-<;;;q/@84C'jQ[)?K(s/R-=I]&Ec4X8u'./.,q.95Xi%60c_AG)?V1;+S#UiMR<&-V^R/e@8)m,52Xr6Q)+"'HT<j'RD6+Y!gs+.FEJ\0+/Ks74DK1;u6Ri-[j2Ob::]9/H[p3V84aKIV^F%%e6Yse,Pimf[6T"-W?5or#0AjG\AVWQ0_-\iMaXhGeZ$n>O`48LB_YO+<<si!!)cs+:p84Y'W(l*&jV7<d/6$)-QHm$Q*cBX:a)C+%F@kPu8iqXITu]5.P:AfGVmm^J_1+n^!qlbi!1#t^(3?Kt&:%H:bGkDj,q#mas(Uko.$oRlUu^Sab'!ZT;P-^t3,V`:Ot2,J-A4T(%O\0=W/gkt-i#D+m-!iuS!AYBh]u3oa8X3BMB3"jB/L]g?gAOs`UhW7#l9qP5SnG%@;mAX]/tqR#RD4PGa]Tmp=hA7a$82tU'NF?P%fEGFF)UK&G7(O);rQH.!V*%nfkV:Q$emmG6;AsOT1=`$\9kcrAUP):EISlGHPd<?D-$/@=#`kfR.id?h.(hfVDpAV_oj?<"</7cB%c<8_2oOk-DUX5C*T.$fj,o)h?Zn+jsMO^I%)^m\$'MN1cK$G,!J="[3EW/@R)m<qFRBuo=RR\;WOf?8/;^&18?a4X-]J+DaqG44V%X6.e/&[EsM/CZj?ru7RGJNDJkdJ?eL.-b]hDP45`A;cS]>WrlQecffW(*IadWN9+,77QAuKlSJsDmcGnO/:5.'LBp@4JqC[luTa'%qFl-.KM"\+2/;=DJtfbG$YWa2kmXC.[,S$3-am4cm$&-o3kR^('?(F/=#s".UUDVL[#@-]TTpM*"SO;:;7Ec,qp:YU;H,JM7K%u0%R1ea-C1g:@7Sblq_#e,RGPqL,(n9[FcdS>3Ppk`<bj"?4\5AQr;?lZU'e1OlbK_U;^[/MOe#I7R/J(dA0"RRK'LO=#PL+_.nI1\^%]$+3SSYMbbTf5I"/X6ZB8PQ/b/Sq"Wm6f%T7Tk7`c"@a3WYW%oOudL/B$%!B<P9ae>`RO$!b]<B_P)jp:AA,b4*.E\eh"`ZPnlu]%RSAb$VQE`V$pEXm-aBVDY8,<^c6t9N!'-oQ`%j;idV_hQCfN-CIN#&NlJ2^Ij[o*C-lbq\`:kKQ<U;Wn<(.l+6[C%K,nOg@_t\7Q%hhQUBYW\+IA@1@pW\C?Gd7.2WUau[I6oHKu_oO3f"<[^nA4\f<^(0PE:snWNh0N/11UUf02WBru:lh4tC:]m4#\[W"Ne.jf);8.T%1<"]?EC'*0jf$F7nhj(?PmuUWD5!5b.3[TTJiX+di\gPh##CT8PZ?h%-=9Ic,m-:8H-%L9G_*Xs<,(%_dqJDV]h#S*AN:W"N^c@V%o`Au;f:a)f^g06[UD=SpJ"H/-UhWu2QYFdn3ajdKKujmq#$\Q'6bs):,?91Nq#79=<P;ECYGngboN7hIT[:O3dW&d_5\oRd&H#(V%otb7>?Br\*=d7V7*W7K\CKe?7]2[Y<r-Jb["15"&N`[Jga,qUt.Tq?^jdBR$/"edjmneSSKFP$)2-]C6=9RP:BFr[&8p#/?kH'PL%PR&22.a]Q,b%gj6qK/[Z_-5d9ZD^451`P6%-]SMGZEbt3&>(H8U@nS)jDmAB:uu^?P&g&_-bNAGDjac1kWr.Y_&C:ucD`cYooj^-%MS.s`9gWq.eL?`+`!Wo<30s2k=Iks::1<pn:uaF:6_YD2WE)hQ)Wbo_2%fg7>R=1FZo`]%7S*#_Ssp^R@5O.tX23F-]rV.mMc^Z2%V/Mf`6MqHn*<g@s@o*JJiI@%eUu%4BZA!TbBX]C,'!1:[a+)7*`a2QAW1Op#2;U^W;rnMRGt.=[/CLM,m;5mZX*P<1<[!I9jRi:k%?V5rDg'$4g5&KYc#qKQjpEf-Mea#'K@b#X2;3_ACC'(N3CdQCKfs=4&=b1T"W@qOSUI.L6Wd<G\h>c!FUIthAJYb+T+TGhVWU/\[%:G>8&;rFgqNkh1'I3hm;Wq)]MBLGGBUQQNm<9tce4t)NqAW.Im7_(fLJ`DEbU)AWYWr7klfq^Psoe!Uao\>65>G8Wp8pHGC(]ifu%VZK&7U2<o4-km+K>1Ni.SC&G-X]/J-YsGa!=;JRsr6O>hZ957]`)A[*Z&k7koIl>"<4X;:W)Q,5UpNj8U=aLd`[L&@-<>4jdSHTu%d`A-3K20m_-EWp(!/-'+4d@cJl6/bJb>H0N2GbTEC':]X.5>`b7rm)q<oc:*M/H`6.p%Y`;8,KrO?fp!!mX5$i>@!=o0$nYSQueH%*fR!R6ube581WQ.TMh?&6SGH&6Z%A20s4!ITq!%icR9]8SRJ6M.^MboQ-0kg9i1Mh;O1BIJ$s1?@91"*8k%L5/\,4f/0$s8&[>o$%pIuX-[\/Z8KQ6#7P;*I!QrR?f/&dhh>#dC.q,Yo(!O6a*Yn:R&-1a@7j8MVcUqVE.S#k0o60i<?qJ*BK;!ADb=),C5c8s<#&=0%l%BcIIC0bPM4I,]R=7jRZ/`);l/D8r^!D!D+e<%EAPemn?K]K`A:;^<E@q@e>=-_P@N#[N4#(0\]JkoT"e?uDel"/V`Q=Y\4o81IXS%qEepoI:"iILu6Q@=!Q2Zm&N1r6>@gQIq4:l;kKp.]esh%+[Tg=#tu3/>:>rk>"0#uj5A&#Y:aO1C@m`U/Z6g+jAbrS:fidf5t\2`%;G]*/nr;'9d9"ipbGsEkb"oU8W/lQt%]MngGnnV(Auc[1&ugL)?GSm*JdOs#[TSOQ=OUlhFDk(*nK81--`PAdOWNQtH'fm=8*/p>%ia#H?!6.8MPM([:Ff=e1kP>TaHWANDEQ+I9T97gm/F[(N<&?ea2^/)F-2*:!,fN7XW22Ke?"VMRNFo0aCQNA6,.g[8PZ5bco7H17%)4sa=9G1"B&^OUN7p#An(;hMASu!&"ja:,#Ypm)RKn)4Nbde<m0IuD$ELJg_[5[al1g#m@kW'8/%]G*)L`HCE'LM^WWM4.mX@)p&%C11?H8`WnGj#";aPV]me;4u/FW(M_d8ns#EZ"Z&^VoF'sgPTo^RCDee=0t7/f1,7]<7\"P67"PZ"%PuGe/<>Md0NAH2/O\bi%*hK%+Q@6IXBELWoIZh20@b6MnsEUi&P@0#`"H&1+4^r$R"0>dYOdd*A#Qc.e>1i\C31l+@]Vsa,Gh\T5=WiP(+u;Vhho*#>jaXP(K[1;%HC`nS]r-9+G:r")\0$#&n[[0D\2TS+mI#<k%d29>pHea2)4,'7UfL\@^n"n+)Sk`>Ypm09SPD=JXuFBG3H[)lG?T%P<%SkX?#*6c%BotHU/QH_t#L2ej>=\Z?<S,F@kNer7VHUN(Sd_H+qP\4T<7W+-e*>\p9\WC@Xd/.6l9hNl/_d%3H\SghX_a&AAPA#BC!j1l1mAno%AR"j%GBo9b5mLs]eHC,pL*Luj_,1X&-Ecu829)2I4A,;4",&r>,6^kje[qqQ#G<mrbG1c><iXj=s#Xo/IuI:#6+nT)!pLEdK@X;5%gDdQ]\!0ieSIRaSiC?GNeF/?O?g[8`0;O'r.sFp!A*`7'6ojqH2e]nH:fY+Xj7fbRYW;.0&%+YCXt-W(O6%MpZISiaS!*ecG3WGq%.o9<Z=ms-.g/Dp\*[#[4)t.9%[J\PoFl^#orej*0mW@02*;QgGDosMc,"#7a:&-38H:T::(3CuOIut7.a8f[IWVV7u8UfpUl,?^#%Y;R#L"uHeO2=9/QTM@4F*Y3RmVhA!UIZn-7\kq[o%0KYP"'SImTq,Kt$&%5?kHdX+-u0hK5G76(UGj4qM1eciJOI\9mh2IUZIZQA%"jK6E^2G:KIBCj[/TaSmSJpcla*gQQ>gj>;`bM[@XVPA\3,GK$:K'Z/eXHZ:pOQ"reXM48-qdL!%])A/h=pbRr7.d-8&0nnY5F]&%f&=0d<LKpi(CsiTL>spI+$P7FFR;7(;rqo'L\V_]n;AaU_34ifO>>]gR1%JTnlPRm@ZZ:Y[Ge1&=MFX@%lLS*<ak5HS)I9G)Yn_b%n%b!+Wni(*een@$?oS8o.0/p:Xs8Pg7gP>Bnf@5uW*Sl!g2CmY(tTSGKLkb@^"0\";P=OWN_mGUp"<U8oLjY:LI5lQ9S!a?*X]6a%9WHs)#Q@SHOisUoEbA>^F0)#G/hl(1jR0W"jobkrGCYob0)tlboK"WSqIpkY84!(R+?fo*i%"]P8K[D3?d:]B\5aRA`r5l(>;*?5%[<`9"^]T`=^i\<*"bJ<A?<&WAh_)t:OdrM^q_?][.\6E$%b$p:0_q\sH9Y\uhg0o.rGd.kh#0n6o_O;W[4B$^iS44%mp5ThVr"Nd%_W8:/o2-G`i)q(.Ut;_Uo22JL)"pf?r2"S^dXXsk_^ur>eOL_?63kHe:og)b1j>Hro<.PfM>8-DE+(FAIY=nN]oH-qq3G'nEg^1O%o)BYGS<4&fVd0Y&ad/.mes<,Jk^T`M..,dkh#(N^]iYMF:(3e=e#i_@qcZYb?4ast,-O0-dcnkmjU=RuZQiiV$`;OB>AXWTOS:=L%6mCIZhY+\[R/[u:r2B@$;Wm8=6:tR!'oJqsN&!;R#k:Tuco$X;.Z/LJPPO_5FgkTTP$?mhj\dWdGq$sl\T"5Gf(ru,>KiD=j_Q6`%jB-AHq4*N[F6QpVQd+X-bph_2\PfT#X%82fJfhp(Jg<s&M9]d*;F)d)-1I<P"fB'Npjs&,LkTpo;of_p"fY<H'FUa(\PO_17@#L`%(5cQU?-F#IU9m7l==b317J)/a&m+'c6:i`)EJD#g.nQR(W>NK@rM<,S.C3Tgba4$h=AFLTPV)(@;RoUVQ:p<pGV;aEX`,#h,#lKQ%\rs&.O=JU/n8@/mn8,O#9Sg[fE:ft\J?^n%P./4W3HgeXQ4AhOhOqYq./Mq.TJ-eZeuL?s4_T0QSgfm\KW5m\LVtl^K1<BG#EcbA%+rOTY14N-rqk;H0.K=AKDhq$2(7!Ys<;q?FjD@c9s$>c8LJ#AuQ,4VBrdLd[D,Db]607Qjb-W`Mdsk3iqk5cTMos6c<;q?FbhAdH%qZiD$+"D??W6G3+j_ooH>IX0a=8<dZdPbp^r<_6WL8_HggMq_[G/#1MmH*XU!W*h1dPbp^r<_6WL8_HggMq_[G/#1MD8UN:$/=ta%Pq3fD2SREI=[u_O=,AI[/cmTn-,D):Y:R=An4Jl\Al]6-io.k=(CMmn_I*OXhnDto!*oYF(BN_'!5/L@^_]fX=Yu\(QO#6q]Qe[@%n7(@qi!Xm_'p-Z@!U6FI#gccU,YN[Q*$@@JU02YRG_to&i5NTl,;0g=%'I:!([2+S62$9@)P\7"KLf]-:c-O##,j'^["^47?9I&O%%]GHm>(d]C"qCf`60]R3)?N>0jlV)BZ\;'Y#WW"JS-G]'$Ndtco&ATH_M]is#Yp4A!s_/u`N]pLQW'&A1[n#S9+1jmLql=Y0G:O#%kCBQ$`CLEsKE)^[5uYS(,?P3MA]ZG)Y;Em[GR<m!6borhfaERh(R&@7"L3ar"DG4LFAGH$9Sf?,OImh4(C@Ybd0r<\M-s@.(sNUs%$3Z,8_-NI:X[%u5%1t.J"@%\[L>\jqE$5f-A-hZ.!d'_.]1g"F+Q1KWW/:_L#Y?@2J64#2P6fMH?m:.8_MBA>.1qq<"<&-Z"b@)R%-,[_'(BJ@c!%Jr1B!U[&Laf'$0$@jp9SFaa'`k!@5V\bMAC;>M,@pQXQXMZY0L6Q^Y6`48!5dE2#.J8@$Y_fLV:d[=!Y-X]<>L,u%,QN<pb_Tt1,[!!paGLCF:DkRh#ZMuKC9g/q8.2.7#e[qZXM=gKQ%>B^5X,n>/0!S)I$tjsJ`h<=B6a^1@Xug`5[4pE1s9I?1ad;F%a)`6@EXXX4)47'&KI6f+ZYY@jZQ^p(FCQ9Jr<fhJOuAI:"(Prk%!7GZ\f':7'M/?")24\F>Sc:A#)_N8GQAj9_;c8r+j$<<e13la%)/(B&m1l;M'!u$))!D>4I1i2kBeC'NNom"P"mC1;##O7r(^pY%&n#Zm(aR4@Ki&XpoOX-1$p]FIW!EBo1dEJtd#nBD7=\]IW.[PC%^r_^l,nWD$)]Ii=j95O3$.DSs%,ca?]Ej%[1uKejplYVq7DN7J6pCeKj8c@bi&@4KKE0[c5^EHmO-rb./-?$kiLW%p+DDs_/5V9.%PiG[WL4&5P%^hupAJk!A%K.`nO?[T\C-oMJ\=Eu6\O1J2j_?iGA9(hhnL=,p4R8eB%I2EEaD>&0G/f2.s3[Qj[-/S`qF?JCd@u,t%kT;DAWC:YOX1:HYe\>Np_03,Qq_MCR)ktc(ZC:YH=oJ5kdP_1,-NO2D+jr:Jr[7XCq]XBGqYk-Pm-f^#gAoTm'skXs,&Mai5;(%G%LIbV[jGsE6q]XD=s7kW'r,3e-Auh:=]n9t\NrJFe_bfX&g\\TUIY@<d<N4a=`kn\g5]Cs2Pe([\ofKI*QO0:=k`.Jn1*-?&d6?OT%mU,a/!+12kV8&^JiT'FF',,9"jgtmun?*Kud61Vj6K(m8IY1Fc`ktrq8,MY6[4]&"Sn*(.5<#&TVs>ZI7ej6[Ucj$eAai)p4:)j/%SprC7i+d\q)*Reh#L`U*L7L^3]jVq-6\lK@=sm=*h)TS'5HB"hd7>Ut3,=VEnRXl1)Z)?"9cS5&edS)aZprQVJoK0N<+gm=`#)#G%cXGH_`%ps#h%9gkq>Z]&:m'k66fgpIeK_KdVLpNNof&NWJ$mC9C%]<Wo_723d7LMfgYU]kYQ".Dl,)gUI5DkL)rm&CMuf2/;/%__%s5-d1L\_IVRNLolCERh8)(qH5#KUS&nSRnODB4@R=-pP:QbVg<i<D!WjTr=h1Dg"jhANA*nbUV+*,8DU9^0[Go]nGi%`g?W#@KU+%k,7#*!u\N-qL<]oNHQ,ISn!2-%>a%B*hABYG`U0QH;<[r&JD/q,^bTd?#Ogq5D8K^e_c52o7-RJFY*ArVJ$rUF$(H8^Aba-m-!Rd%5HLX9JiXEEbV)!U3+"pXreJ)Urs(.s^A\!pXH!8'CbY4_S%lQd(>*Gd9=(%*l9_XtSB(JM]/BHSK41V7IocdEi"UGFkX3?aMZ&K)%/c"9EP37Apn\p"Xo>C@TcS5@sD[uq<8"nOU)+LA[!r[To^PttnD6e_jpS]F2q&duV7*&[-`e1-n^s,(ClcL8JdXSk:?h1/P!o%A=%IcP,-a'q[J2Y`su6XdVOAi3UGCp@4cZs,1SJ`VANIYqI)BJc#d<5u^]9),N@48sEb6+AipiVrZ3iFpU8<9\Ul'pEHs1%bHDg96Gs%*ArXn"3gj>_d.c"O5td[('_12Cj+P2E3k>NlT\f?GbCtg,8^HYkcd0)W8lh>M8*HN]g9/*n'nsDWu/''dN?OtH17.?menFBqA;+/%C'.;%@)H0HL`ASj5,rhaa7XX:I+IWDf%8IWf^P;4m1kR9>]-r>ogZRB*\$*1:%MLoCI##8=RZ5h+'uDU,>T4Z(6OHc))lm75n!F!%9jMtt9ctVp27b$WKJi^Seq:55aITBg"dN4]\#X/T@2nMYG?KitiVuJEK7Q@:dY.iSqa7d38rV-L8IC8OHe@f:s#mLq53\&#%Y0dT%pl(mgV!X([7in$DYJN>8,6W&LlAL:$?Q.".M=?2H4]15UBg3CtQA6R@$UR8Ks,c/Ppd-%q3b/(K8_7c\A^kZ<9%?FP\:ND"PATGf%$@d5Gbth`#n2oGdSM8^6Z.s)T^C1Q89k)\6(b6LV';?G"Fi^j,M<2TsQ!g&o:2aOkS9TN?W-=$q3_6pG^X06/.m2;ed4gSc\6n\l%>Jp0d\5V#<_D<N0SrQ<h(n`rAe"XpANa3("_"DHhb<l3n;c$:.8k'goX5?ZUH<p!HLDFnMp3Tgppf/CcFN:<0U%IZQQ6qoorNJ+"%os@$,5"C/O1\_u16W4l4Ud+0MPgb3D=jkXtca%j%<.J-ead&as371UXm.C?D^$_K.+QjaQ(ZeC^Q[5as<iu^oNK-$rEg9D'2`Q54%)p50aFB,!3rH_D+b_REtJRd@@%HuJMQ?=WYd,CAS=M^hEeUS[$+W3AaF.%-iTit>tl`+Sh]s!$TbrGB]'K'uuE@;&99@N7/<H;:O%?T.3jV<ps2jcV1@jMG%Xa*Bh(OLqK9gVXO5N2.;m"eSe0&HlIKi&M]`0V^pP>>HR^TUr2jhb].CLpZ/#m9uL<"dc"\89TK?+<^Gh%#%b@&D9;fWg4Q(hs/_8db0=8%V(-%R"Ye7tBP,;I,4?GPcYPWU!8GG:SK6O^RX*gqYK2[l@,4-0W>:`8J'Rcb9j@T9`XYJd8@N=;%7p1\!YLK&IKSQ=J'dgi'P]ii3D<SE-QkfArjIoXeV%4oC&/iLZGo:I\^LY2"G4a`E;+]4MU0i!][3eaV@A?Io2o/.E)PlU%p9WEk%[,ff6`=l";oL>_4RNXIQ;r)bL_J$Q_s!8b>c.rS29!sb9';[taC8U)qq]E?NFha'VP9p]#YX6NGQf01]jRB)_4LKui3`ZoT20r-p%aJm/'10NO-)0J(QWKu9!Q>/4M[9dU4V/E6t="q47Ah0Bn6?,>qCn4CDR7j:o4B\bA?><@-;D3u8We3`Y1?GbF?hQS)Ku*\o!mcf=%;T&f4`/08$!Lu:3!cN#*,rMOk(g6-*YE:(4X*6Vt#m.Ld%L-]]6MFUjiRr+$To=sA@]lgD5MQ,@%-#aLR+b,Igh3?drETV_l<TDL%9Y,8q-e)QDT%_PC$+N1_T\$tXI_lBH8]%@siC__!,*$2.9$K]QU]Pb7et'p#:Ck*kgKbH\_8(Xe;R/Z:o.-f[FF'\m2maMr2S]7i%1j_BOJp?ROVGpU"PF'D\XkWmf!=?3OO/nVVVe;'qn6_\IU.LQ^[rt8bmFE(9mRCVM-,V"!\+W6tUjTl1mHIS9"i*ML2)$q1iBCFa%ghh?OOh3Tdg'SJM0\5bi5M;T`&QoJ5qQ7"mJY?-Sc(6^DTE']ih$`kd5f"Z`/p2#(.;9'9M@LrK@lMS<SoH/=Ya3ca[ABNR)ELFi%I>WJtj?k(uB6-(c)R:.WW427M:Y5G(/96/ejB;gs2^6GF>g%L<6P#0m3kKE<q7WrO!$)D(g*h*.!BP<BZqJHMP.0j-3?0uZcBbk/%X4&0'olPi-Z'[-Yd^J(_s8#FK0tbE\gKTid;#)_-d,QrH8rn9N/4#-pj3'#*3ZcFO<#4udd!,G57]duVj4o6+UcsYT7d?bU2GtW.%9tdt?$]2/Hl2ru"^iBOpqHT)UBPFii0(<V$?l4_.cBL(U:37Ip97B5A_Q\F'ao#n\7pkr'<C1sZ/(+Va4_g$=rlc`N5b\a2e`o-<%+YH:Y-t?.\[]"*S>"Q)+3q[sm0;%?2TS:?Sm>a)G?u$TER:3GTFV?119Y]%U-^sBj1G)YraD0TqbC+VpEU`B*#:Q@sA#H-,87.cb%EZZIO?iQl[plD0>32^f1!I?UE>h&*KP*uge/jT$W]r\7&q`X7ETs^[KY^P1(m^A/DHOM?%q'^!^1[V8IX^"4r/DsQ;9-1P!]3^Tc%pBO8FO5rb9=QlMmLsA'uqqGI4j0Bbnb&hp:>*@c.K!iITJ&A)`=98R8!<\DKprS>^X_`YWm4XR@-B0;5"S]b;IDfaRMs>'/US+cH%1-*Ch)PNI/*K(fNAuk<m8;kdW]#[i!'YmulN]Kf&I_Y""1_s#Yf#mfe)9O.5G'&E6GmG9V*crbr1JSsbj]13YOAFs"*VMN7RJ=Ck%V=93VJ><shMZQS*!^D!\n$QA'72,*qSnV_1NPPg5ap\Iee9dl'?8l1VQX%*QmdFf-P)P%1>3"AsCF6c:dmu3mq!iZXk@;Hj2br!f%ch#kMF6spWZ,,m6N=)Mk>kN/VnRAP*H=L^Eg0H>FFclZZX?N^;7FmOgC8#;dhFsM0f""C-'&W[n`h2FVGj?j%Upb"md\n!3`m08]%2`ugIPs0nme(8HNOQEh5qt/M=B&^5HbM;Y^9>A[:]u\1/@(Y9tG&Dad6IE[9n[TpIpF>_(D/nMe[3scP8pffn@c_>p\D'`;2M^eo%_&'HPH</N64f)F2j'uOk=b^L&KAp,.0d</P?X6_kbJGoToLHeqF>2X-ogo"0ocOmNIW%_W>>-f8\D4WO,dI_'ZMsC[.Zu40"<?.\%PX>gIQ,2iU`\=F_0ash&RU>Kkf;dioGdhd%\[d@o0pV[cBrRGG]hCt=BW^B"8Sb]:TQ@.\cp8Fn_\7I.cjC7s0G$in-?]'NYnfY_%%NapH6BXRUNoSmEaKe!gA87L6EoYkh"+F949$8]S#(qooh;B__3lY3R9*ttGDt%T@?<H.VC[`J$2'@K-qK/8\3Ar@Yo:H+XUY8g.%L9H6-n'SO1UW#_!U7U:Z)]`O/=f4a`KNqLQ,lD+-f$/p1iQ>'%DqF2\r0gkoD(JsTg,7#PR%6rEUSJXQCjL(M]CD2nDcEYu16noW%\a;p(.fFbe[!d=1gLt`7G8,oqN&A;YEc<9D4(7f.nCZe3YgM)KGSb8nW&Rt3a+PLJ1__fV28?N#1jZU9@_o'`Q)SptU[4H!.%;0(%)Ech4/fYeS^P&?@FmD2e2f!+!3H93$fOuW)G.D)>k[l(u)!9jG]hoW)U"QcrZZ,YYZu4LZE+QZ$3]&=8`)[4ce\4nS#1A[6jHpV8%YqB#41J8Nkgo4SS9]bN<im;@b1&BQd0'\DtNL?6;1Y)0M)uE+*N3je4Annd4*A+G_.#ldjWtqQ=7<_L[X[h)]q=1e#C@lt=3Q`UL%CijNgd65%<Eb_Ii*U1thI9gb*n7!GSk-J'5G&"D&*3VNell4d\cL:`NS6X]($@',:=Q(:?RU/+@06tR2d>%jGq%?o9DtJ!E5'aZ!%Xcc/)OtC1W=m<X^2L>1=Y/jt>7]XbX@=Qb/d84qpE5Y8M/%_9T[K+&++"TB0HLk$?(caI"b1uD)Q:RcAA!XA@DjOh&c_$eF)gsdG%gimT,=&!L2ll&<P/3IO4VdUr]&)`XYrNF[TQFC`'AO"RbCig6%N(6F6U$1Q>CY)7jrH2N&B_E^V&D;J(PbHM&\!:[I0:<WQd0:]A%)[2XgC_OEFWiqOs\WuR44]A,:8'L:&?G]1`-T')kYO?&ri8k:ah&8tc\)-ZkBb^6`BI@[8CBP?"N&Fk<Z28-1\3:a9Db%%ZjJ5K'%:T,KiNq>f7'l5eBZ+#glA)1Q(',FHThA8pn8Yc2]^3F=/FD3G-2nIWi@iaf!P'_k.JLasJ#8+$7'n><Q8u)4RUdZabo]4USWnuh5%9A80t^$FeC?J]^(f>urXm@=-dEI.H`Cs2%pnLfXSd^$dHoHMr0bOM<9@`Z=FN9,LLbJ'qR*e%_'GInq)GE-l'BD_KpKp(ikB=YF.%=3%5F+8+e3a1DtnI,D<d2;0`Sna6nMq".GDoPMM9mcd'EZ0-'Boulp_k4OhmIp;`o=e<?f[l8abGM.\_okrgJZKlc0VA*+59RrMT%rS)!1'leWtp9Bk>EkM8fIEjBHmM[8BCNS.bF+!iUL+AcUhYm;PCd1#;NFFF$)kuBk"&@L_F1g8o2D1&\mOh"qpE/"W+gtXANZ5:a%dg+[R!par0MJu4n]HbA54f5m"VN*^P\maR^pso1Z8%DhtDHcI7]iN`1Vn8Vrf9USZF4fXSg<TZbWU[-qI\D"6r6fl'QrkjoXd+[9%,/%<X*M[CNGnF%jBm.c9.EIL7ct+h!&dPrcFY;W)M:X5>p!Q8@heka0jd%_>SOs`q^%t/`Q(*D[:m>2;3_LmtJ;kIi`:bCi6@;>h%mXT(bi25"D[^uU$jP?1_44)j=VUjU5WkHr=JS\O=UU-/gkl&>LhIq;#HTu^f1qgDDh=!JY2_*>F/WGLZHF'8tI^+om16o>49?0M!%@5aYpD%SEmCK@rM1,PF_.9mc0D(RColAZ8i5NE3S;;MB2mI-l)D5>6+VIj<qa$p*F>F]2u`,fm2'_Mk1%aTI-k-7*1O*%'N'V$+2%cTuI`\^JtYq@4V@NG_4KDN,^>3&V+E+'KqM@mu=:b(NbTV`%>b.>Wcpmos.ZjbSRe90SEO\t1dV(VcTcGGh%o`".Ri5[%!R^At$X%Pi@GeQHm(FX'Z.'$U[$o].tEU_I`O`f>@'Wp0rJVJ(sCp[]XR#`77AWKOEX(a#<fuNN8k4mG-RH0@GXC>kOcnJu`4tQ?e[%_WJ>N%;<;Zn\47IaHni#0]g"3XXZe=IMBe9l;^(fWQ_N3gL!dt#a6918$!XAYE>TEO#<Q[eYKu.i1.KU0CFXG)c*)q5_[+PRblBT;SN.7V%TI\+hP2r`HV`o2!/mWc@Y5mf.YB)3Ube>.%+oO0BY6=(Ee$sA\"a#,j3_t0ES+3UKo^OBAdP=/f9uin/r[o#"n[F>N72b'Q?0IIb%'pu_eZf$n_qBuPp^*qJ2/8&GUZ"o&#'tl([6K1?"%`$dh\5S\g<sg7c:fd8ZgBZfqi?!kSaFe2K58VW0EJ=;FJHbH[?9EdM(-Soo%dIUU$,M"O^&W-e17eq%R?j*.RAJ5'1WT\?]b3-&7?u(8ANg//[RfYYiFIe(j/Rda5UYrTD8eTCT*Em<ra3[.MbMXp=j*,CDNa7B/%hPu@Sf^B3'Ng/OsW1uC/N(Q9,/h>SH+SIRtEmo(O:rjDVQ3![0G\?5m`eHrDIuQ$IkO(rcBL9A]f)'93Bk;3`^bCdV_6NXl>:T#R%PY=D1p6Do..c73TUII05h:a.3eLQZ-kK\3^Ricu]?aq&eic:/e^Ll*fm3-A7CR?4POGg1$6cDfD6R]YL6M2Jp,]1?l/2GRSe`f*Y%;CH;E)2r-+[I)Xj[4ubAj=V[<Y#?)d9ZO:;0f)G]P:1-F]l]d6kV6kXcg9"U1"k6=(5l$C%+`Y?809gVr7lDhXWgI4Hrs/Klb[gS%PlSuYVeps,gsZ]n].QrV]S[l\",BXB?7=BpK1T_CP)Vc*kt2D1I[%l#GknLsKpU&&_I,=fC0:8N+)0j'CHe"L<L7"'W[M0T=(YJ]%T)Bl'AB2i-mS6G0Lj@Wq5mI-?Qm9Pn&hPfUqF3eubmYp=f?q%5&@,EY\o"N>965%GLbn8DTX@eH>iG)qiZZ>N#.?ZrNcl3#`g)7i%n"jEP17^b'KFL8,4Zo/B3jjZQpYLS9TsHo3e?W^(_;6m$,7q0t$N\V]4g__DQB$XrFN%GkG]\V_^-Pgo[cJ2WEFaFEO\jQI2iKhs%W:rF`>sAJ]%-a#=\S>>H!`EgpSq`6#+e0#!p6"@X!?*Wr2,#n:fRf5nikp=5p+9k]Y.4nd.<Cgkr<e'OeAJM:)F`K4Z6'*4-3&E*%!T6/U't`uZ`.A*Ib>PRkCs4$tbuFRU+/]6[k:s^!#j:rSL/n8Y:'[C2B`E^/,_f,P.'QrYg^[H/3[J!<"_;TdYfmO$0BGArVAUoZ%G$nm$>:7ZW\cak%i%IFV(/$WkL1IF"0nj.tCD8.)pN9lPi#S=sc]B^.a=FTO8If]6_m/7K6;\g*%d;!MfW:BkKf9_&#>4dRAfm+7%V]'$KY#.4fRW*#O(-M"peh7"?Y?7Dc'KF$H&2n60P\^m7VFZ?mPhmEb9kg8QL^!S-)FZSpg'.e;<`@]eG++)h&68_b,7*Kl^;02B%B3%>rfD(J89DHl6#,gIIr-<)o3iA3i32-?L7AES!hESC44`*G0cL3:#8SH/GnpCfF,E2_uU>i6Ui,D$16'p)d_[`]lad*+o=;7=,%*[9IA@a3W+3h39T0s9EL;8G+S`1V1B[X)n%kXF]2dNdoA8J-057,++TN2s[6drnQU(2n?Y(E`0JXNZ\"r5iJ[R[GNP#hCOVcY8Ec%ZQ?Ftl-UII3H86KF<"tr"arsW_ou)@&%reMU\SS7VA[6Y8e`Sd0eA=k"m`4$Ha?6Y\]utJ@$!'2Z?ULEl3=<KP(Dfk*'sBn?Ln3?%OP'VVQ"\(]fRuX3I`?e,[#bekU'Q;&rLQHP&M80M*QWhVQ"\cm&kuL@&Te3`.gmKI*%WCp9@#nu!S3K9B!0106jrgjB3'jYf-eUO%SpMck36h^?3EB84k&F;-S7>$URg6&h*KiA;7PVq9P_Ggr.R`cO-=Z"[/arnEK78)Mq+f4MR2(:r:If0LHH(eHXR%:n/f@!i`N7tI%%sDDOkP`"3GAl2r.8@$Y=k)LX@D(oG0^TlrdBIPlB@\@?8hI&1m6:.0?&uaS7j33_B!#mL=LG:>NGEl[KQ4%NKPQE0p:["LU`NkT%4SfH+,m&P_qccQrW-Ndi[Ge7"I;c"k*Fl<Ufi7[Y$)`jA6l4.I`=QfK6<]sa%-n41h`GL+;U<S\4fQCl(RismH.M#]2Sr0)g.@[P%n)2pH9c(MP./(p>n7=<8EhnQ>k>rPWhfiEiV(]`*'LFGT(\7bp8b+F6$UgL/(3at$>.SlsI]+eOG<>O,H.t3Vi$rNe&9BdS6^,$%%nq[:48RJ1Wak9Uf`s30h8NBE=5V)FsQZS+XX]T;S_pl%QBu!u1$+3`+VL83)5+FI4E7],8SnD09(5ghJ?(2[\1$Le.i.JQkd@S?s%?E7qJ.W+Un"ttNCe3dgFd`17n4<c$NYtQhb_n63$7*1.p(I+3LXiu@LCNbVS%BZ!u1HKX#ga/R,ESLrT`]ts<lM>=$4RUpL(((OB%[bU@8P3ALP7+Q:JbE7Ir5@`PTR:OZuU@ZL#F3gL8AdlqI6YE3]aUC5Z/cdchd(*f9)7'KZae<e%TJN\iSfrm74bM%I/N?B5SU1R3%>IIq$*'3g&3chafoJq$])0EYIF31,6]4TD=>&<=@3ZNlq"s',<QpV@SHNp#rQ@Lu;V?P'oGsH!m'pC"_lh27a3p-o&YGEj>-N!(m%f>?o4GN2q270%S5"C$!5'OiOpX^CGCP`agXP$-OdT[%hCY@J(s"br5,=([8M33>$lC978(_YYY:3-NDeNmFg_pN9RJj."71n]mZr%4hccoeau+&q<4!VbX[`8Q!9T2X>/AL_33r4aI4m+Ie(5j`84V!XcM73dZEq:+?mZ^N^70=V*o@JArg$D&rW'Lfrr!W9QgfR'ZA;S%#Fl$Z(u*uKYH%e-0?G`tc.Sf!J45sd[0=dm@Z]j0&44Kf1UR'2_."d)C`;*<=6?8BR8pH#42%<fDJt/7n:M"9'N;V+^13d<LYdS<%!#D!GG)Go1_^,3_LS*86,tnBd?4Y79<jUl<W+MAjORkf^9(SASk%SuBaQ"3EauFCa!c*&B^FYh*<mI[Yc:K]*;qc:%r6!U2U6@UI%X%/K3nYbO>H)uSk4`AcKRNn2C3Ua]Rpp("*S/>1),\l^IfaJamk1Km9bWSNEclh^(IVO[aA]t:/QtMk$&;]"VL>][!9C>L4Y*Lap%FJ@GaY1YW1CtXZ4Y>*#ucKp#Nj]nX9_n6gcn`dcSa<LB$4gXqWl7/A!m$p61XJg&MmsWNkZ_pf2fcpQuYRqH7<ER_SCplefH`oK-%S^YG<''3paA@,`!Gg#l)_sBAl'AU6Gh\-uqp&**Gmki5JOX2rchOH,5(m'HpD:X`9h(':'1-_:2b.h*ufn%qG@qE(nSLF<c^5qcD%-2GV?]@NDnk9Y8@1SR?sF0`j[*B@HhpQ/12s0Wps]OP*"A>$4+JDhN8bV<n/@D]5?9*0Yg1+6R93lM8Za>eC#Y))Sfc<bH&]JAi$%_^S\U`o8;4j1i^XLs4Je/.ia%N?-4aOT@Ogaj,r'9,O;c3D92/EhJ4^.-e1$mpPjF$rjIrZFV8G)OdjcN;J&rJFf0R173`,bt+BL%,(gbHJpSU_j:a5m&K*gT3P#ZP8U:EcF50hgi$fq1DCk*6<j$_HretE;k;p=j2s*@cM>b=@=#*IP\H4);.s9?gh_5mNIaqq&YFhNa%?,04qA+gVJEufC`/d4cf]BT.5(A,bMo3O6mns*98le;#.'EOEk!>t8Jkb2Jle4Rgmr+fT<G;_IBMUsublgm"00Ps"D`>;H.i`r=q%'_u](mm#qb+3p(ik)p71GnuS]ERWuO\E1U3=J7cC5+K_iehZ7ISIans,Nq8\iS7I$WR&e[%qe)JaG(/eOq4IlJ[]1.q9iOLo&6,.%1>dI=%q!Op=pOZOB$[PK"ZNnJOf0enZ_I]K@rkfe)2.a>TDXpcJ8lk\=X#SIc4e^5mY-(]p%ZWRd;-"H_iT3,ONF?$AC/"8dj.Y\%(!e/9c8k6.?3BY7`Uh7Hg;Jm3Q#A/sCfV/C@`+[<4D6<a=fqA[`eI<TR0e;_0h4.'omJAcp9M[MhB)Zj^QcQ[lip/KnR*G'hCGR<%-MC:m\Upo$E:&YPQG@CMBfRcOT%jt2CH&Use1E9n>G$j_@IdPtLY=1%Q!KaZ!4@f?kE1m1?[2*3+q9Wr>$ksqL(&ZFUu'BA,PCSR%4rL>%cTEs\0jebjN)Zli*Z:qZO68FJb$NHOq-1>2S#6$bA7T"ho,:9SYi4E^E@k2-BZY3XOpYjQ@Qmib9U,tJ@k[%+Ur""Zo$1=(%HE'rSl2AaIWGp-5mcKoELU0+?A2r0u?IPdg@4S3c3'1F*dkIj`)MVc;JPd8/mg*9j=<QS5,<XDA99ts#>NC"JL-j,9:0l]WA?<p3%3&us-1U5'+kN%592L<X2'TUp+_'$mWb&bdRohKD5G3RCo4.KT8_YIDgWcKhb)RjV9Sq8,3/GeU$[<#8r.4r!Jj\W=I>M=M.>]$*u%G>k7O4:s_T/)=9A=/Gfb?ru&T?QBgga_%e[80-\5"IFO:)+?XL/h7M]F"S6M3]"c`bo'+ac?X'UoDG#=]ZeK8)pQiAA+809@4-N*%75lGSVnB>t[q)sKb-=faW4#?R*?M7eGA?d#V9s$%B4r!#Z-;D$jl8_1;/<HV*]:'jC1oUqD.1u^\2ZD2P$o0ah"Yp4YY-W%I](5I%:<@Aa/fAg4i%MPJ]AD)'A#%4;njgm&;;(n1^@OGL7a!.i<CcO2Fnq"5a7K(@k7^r$G#atYh\8,tq^f3Bar0ic6V68,aB+?fm#76/%<9I+^2ae,F0pQl3j,Q"FiYFWLZ/jJN_8a)#F$sZa]pVfGP]Nq=<iB2s-I1dVI0WttjcWO)[5`;<o#irB2q(?=G3?pa<nbma,WRs9%q2N6SP^G-HFC,PWno<ZFahW!Yb07/9g.)k&rulECj7@9YS(D'n5/p)nG!W#-';n3a][%Jc$Zs]@e%YXS.Z\toaUn&c4Fg3$pu[i9%BBNS(Nl-*Re(ONt%VKe,OA0@.R_Sf0JnEKbGpT/pB@BRIVrohkHZ5S0FEWnDc&9guS'F$/4jRq*]7hNHFpRW%:$92ZE?<eTG4ROc%F0F&*dog[J\TBG[,?&4'3R,7_2k/)=B4R%UFFNtpROt#S=BNhEZ_%u'-(E1T):;U7H"POYFiflm0pc];]3ICd'6@d0VR+14c7ee3%VR*<qS)KoB2P",+SR'O^CtWo/6S)%lSJT6,P>,\V9,A:OhV!!o\TCS,<mt^1fiam[\^`KKe(Nj2=jKg04e'`7[Y4LBo?=)<bGB:Q%?DkrCZbs-@bfI0EF=%F0=Eg@,=#QV%?g.iVl*BPI^j,CnXIh8;c>Glj+4CIA1HU+dNnMXdrn7mkFd)DG?JkgPGAE^,n`edQERnT)%bi-2q:[;IBkLD"qFPbT&5<+Y^.t0i5KI^?RL%@,PI$"ENi:]3gefX0L,=bVhYgVCiF?-NLB^NBAPF2KC$?YX?>F-$7e$"FEJWnop%b750)d3I@R%u(j\LgS<t4UsBZ"MpU'b;()[(Yli.;R=ktZ.""9h^5n;A*to2N&ZB<`aeFMm)%eU426VoNXI-1Y>:bOQof@)Vo(fE%!MWQea4piX-r,!1SUEoREmU@%FSm2$2n9U3bs?PP/b\BMc=*=qIcm/BcSb<dB5oo'h7C_@=T?b:&n&2BD8dKMAloB(GsL3Hg-`XI%WVVl*O`&`epb@cRG")#@8eoY\6g$lX^9c6A_pE\^@=UdW#TMTMG,8`)'jK7:U:o0t'l,uFDOG7r)p2+03@q-iqsp6/jgI2jLrs3j%G_"=@:mnNV\rYB<:mJd1h<kZ?M<p^)k2Yf,+f#mK_.nmVTCqt\H-RqP/uRdGa]e20M-4lP9pIa-/a23tG&(RSjlE-B\2M*-!O8rp%d_>'KF@1!F#W&7DEWkJ=!G0XL?JQ53egC?@bf$POar[Hkq?d,Z,iMu`;loj;#>Ja5jLuZ1&0JV!):kUiaR$Qh*QW\RaaBVtS1rOR%[]2,K4`f7%JCZO,C"6hqL",.1\5oiAWn2EN%("1I`o8mmG[m)]0MM[6p^)-Sq3BYOG>kf@WN)H/SBe8138r/d2*Tb$GK.kIH*F"@%$$T==PSZ<OaQ]M5);3AW_O^#lr-n3(I%>3mo"@W?PUG8^h:3LOT4ZlIMTE'Cn$saq6<,pUNd:(Zhheb%hgrFTkKLu7:J&V)_ILLO%VDHc_7rEXS\K^^jT$Kt`;NI@^dXmG#3>WI-AY9^Mn@1U4r-#[t-BemKA]+H2q?.c"=$7+'(Y<[epW\C$K-i=TCd!iM[?teLPA?>M%F6ll\YKrj$Ng9F_:cH#R:0a2oou!&DP*f:Y]$WP6Q$;X+r.JGA+Lk_^DJL-'$q"f0iQaTG.Bm6J<-4ti1p"r7ml&[f##R'o;I7]i%f>c0-5,36BGdiX9l*mOqih\QJiuW"4"KZBV[3$?b1%__8Q1'q-;LW[l?$:.RgsgT6**:Q7hc\9C3NbsW#SD'@Z#<Dqr@m,G0,36R%.XeVA6L*L;Zm[#$Q?M8S='NAiGT+:rcY.4Rh.*;#X_]YTW8\to>sms\q.<7945%0k)^Vqh0dCSGGZ-[[L8rJ\YiUcR22?RhQu`mH%-or3[k#p_H/STIRRPjgmY+NUt\VNC/-/h#PNDch'SGUq$SK"[`hHr?&]!C3a^>#K]_,po2OdJdVg6q/p%l[b8/F2I)RT%\RO4`aC%6V#Hl[iTYcjEC<&4mCTI;`WVqZYMB3V-/hq8a4bS%I_94dHXW`\^B^<ik6LUAPL&uV,gb=]l;0m41qh6'Hfkds2rq.1KKk3rjqet%8\lCMD5DWFj,8jf_Dmfk?J"b2NuI'ShPdNV8JlMCQsAI@:"S#c<JiEsPG[QVQVAs$3.P"fRHK2po/VI(C>S62!\P@2:.[4q]T]7\%q<h3:a=d#&M(Z-q5?f2SZF%d(-"Apdp1+rROee07+Xm1Z8.R[cHC`mM4"Do8dOLTb2#A#Vf%j(!d8R8L>)mBF8Ch(>D>7DJo_@gi%0E/<G>ZYWnJoo.\_jc2SdW8QhV=\A/D62EuL2Ln4R>"Xdo$!?_>R@?Uhg&-p^G4C(ngqU/1W4#7O/4PEZ]WJjjXFhfT$)\.U34[O%/6V`%$lf9tleFSF^=LVA^QIVSe0>??ekKi"??(Gc`OrjLah?]XE>Td_R2:k89X3/!mQ%Vf,tqm15'"=lYK]fsiD/ECRoMD`2S0#u%\SQu'"DC,!f:\ZpWZlgd/0O`3%XcnRb#t7+fkkrY]:A[f,W!Xi<o#@:5`'$;9Vts5XE#BZ*9bP$8k\>B\]'RlX`9Q$oU0c,XR@AK%d"K0[-*R5ps/CNTBAQb\kI@su<V9,:nP'EOBAn$>EM1Go:XRS8(CO-/7B=W:1!a*r+:rTs5S/1%%PsI#60q-eFQh=E]!,n'GIf=j%^Xf+?XL*L\J6&gpaoSm*<Ps"rTX>;*3Io]POb73GqTT%?-,62_jB+j4'D:_S`Va?LqTT'53$Zru$d`f%TZpYo!*Oi4n?g7Gf,Q<e%/3n^!T4M'Q4J6*:^prM,3r@"1Zp0bLRc7/XWD@%4'Ff"F/Sgr5np*Y=k&VrCFroP%*m/,\@m>#_T+W08Op(\(aqsVfgui`,+48/S%!oAtZau@T@Q,+!mZ]?SDVp[3+1[0nNhGAr*rCj,Vc!tZ?gJe'&B6)[tlfT=0G08kQHENn;WI?Y+[ai[rRq\FVmrSH_ZgQt\2\]l[%c!bN=+6WLrbHIH/>X&<TfRu"r.!_h6rR;6,qf&^SZ^Bu^^OV_WF'>\Z51OR\V95%cqRI-]rVT:fkPD`$h7;oo($Jme5Gp<]I]f=+%$Iu\WlfW_s?RQh'c'e16IdZ!l=lV<0lfYG7XS1;RkPD`]l=\mN-"q\BGcm\9d](T`cLpe6$@33FqRN6`(\Bi(kn7q_cf:Mf-sO;^%rLA%G%=51LbAoA!rV;)9lfUI*6DFmoTBk\*WR5kKF#_cIm?ddNIZo&\e",gf5#4Pc15BrLg_X3WB;>_nf?[lrUiNK-@IA98F8alA%\jBF/]&c)bSEguEpSU7-c`j_4k#B*0cf=UV:<rTZI)4,$F/gNHO),<n>X)FG=.@b5\(XmV4P.o-@B5^/5NB;'me_8HcK1JY>X(C5%b"a7M1PVbkf?]3lS&;dcc70?#opaEUHlg/RpN_-BZ&dj+^,[0kl*ScW^tfqVch6ljMN8VJNZ"esch2?DePG]cB0Oqn.94N:Y3;,G%>B_.cC)L&?b^Q^e]:!0OXInHV56J90Z>c^'O"Y/^Y/>O41IndqVu"Ya*hU1u>h:i72Wsp2QOHZ!8oluDcch-p4XOknZ_-Q]-*t/L%68S5DIdRT7W!,9[\UNsa]*bgRjZM4fl5(R\Bni!.hqa?#)<>$epJ_%Q[<g3u<'T\do@';skC0F<.-e],e55IYY+L&-XM%(5I]f=?%WIA1IR/_hA[o<6a&]Inuop`sU$%B%L$RVoe?iIBI*V`Pnf?^!3PkC=uTBk[C*,'HDU)m2j2VPj6E]Cb@?h'foG#]Jn]D=7R%.1nh%kKpC/_L#58,0At$dM%=k*lH^gl5M'G'U)7*C=NH=A5<F<P<+uX)E^eH.u94?K)mq/Lk&YhLr:B1QC-1XB8.2<I&b99nb.Ep=m\[V%c%j$K%mCIQgRY7tq=WHVi[_H8pb"7ImjHQCpUH<F4P!_!I!Z%=^QdOkQ^<b/^G!Ooce:`U9FB&2ETJfuQlJN4UT3fe\G3_nBjDdX%Da1Dc'Cks3<IS/`Q"!)Ef>?(WiFfm2H.S7(<kI6BRIB?I\!oR<gn*l6/FfdkFS+s/+*;(1r3?#>oH**V5qU4GgqLM6]SRoocaseW%rVIqUafk%dQ,6s\WOt)!QtgsC@PE&OXU^*=g\p*jF1O(?)\6Rb,2cIK/![V=njg4o!Wq<YEqrdO0RW6GEHAZZHPp;80AX-&HHAb'%o0-nSm0H6F:NHBU7b=HlUB;N="B;'C!>Y\@%!]-A)":01IB5=OrE-2*aCgDipK-*Bh*J'HbR*au`D.r3_G&A[p"[F*GeGc#i-Mfk%Y*+tcOXaF6;.`C;_:>l`fjsPUfE[.S<]$Vrl1%flcp4\sE)?0j`C;ml*1-(Dnf9_UZhRM5\4`G.>78'BdH88_C=q7=j;'u+b.#"\%1OuU>?1$G&4\C(c8-<V;q,XP%-*o)%D#?)AWJn7J:ippA-o)q*P.l646g=+6p*F%Z\_G#?0]994&sILjWE[+hecs'6@T&t$>`J5.%U67J^-<J]8lmdi3"%4nMpmG80X)8\S5ih;+iPO/,q$C6k@/rNM8bKnlW`%u>ZV^$1'/-IXa-G2grI&j;jl8esk$cJY,<)W<2t/(n%_l]\Y;nJ;KhK[>eg5V?e7_e`$h-^[NWeGB8/iZuYf0W?rlLemZ/Uk!C/H.9/Zl;SW^*1+t[*,+7=CV";'cq:t+GkE:m,$"kr]FOD%<7#lN-OKLmf4gr@;C8S<0+`h.?3Rd*fOD*V$F?&4f]LICK'cgB[X!<rWl:4Rbsd;/*-7$p>$Bop#m%1.X+V'o>\n%s"'aHo$1Ed=%-i(J'SMf;b8r*;+9:[rJAB^e$EOGC!$X@MOZ:UnSI&fCpg<qH&Lnh:&3>ASZh.PWAbOJKBI,?tpE.k;fakYA?H+2G/VcY9GHfe<p%]+PMp..(P%U:Eu0:i`E(,3m&"Pe&(fI##9P:O#Xh/ZY8Qi[rOd4oE<8hZR+OH/gCa5OXjU?^cWNmSiDWpPeg*2:<<oO_q/t\`XDB%I4]k"Q(+E'3@=Fp92rrPY8jpk`0R\;f=?j+f5n4[h$rLYaV_B^UqfDi$.TpMPVAaC\_@mlP'Wo$EpOKkq?1`EgK"0kC>V!\\`7l7%Y6et!daXo\b3Md(=Gga$PtLlI->Tt''W#+m)WIsJN_p>=^U(Kmf!R2gNY4K;>)pNZ:P;7_[;pm<\J/0rAN(@[]`#Bn2\%%thu-Kd%!C%mE'j3c8gP`.]0+JDZ)fZ%%/@CH'Z`;8QJ=ol[eZ$2Nq.XF+E_V[Y_!JSX.tQd*O=L$rgN(!u&pkbu&>R>%>9uCip>7q1>bb#%%jGGH6*o]-pOHGt[9G"W[JeIIP3t5W`6mfuLHXB_,B@(NX=$dsCgk/18$b2[,iNAJW>-"]LKe9b)A/M@`q76/`\r:)T5p[qA/*lY.%WRAUpO+G05Uo#i;pncbYVpJT1<nP@=reDj"@`kc#Q!)Y4Kd7NZPH+&j&\lB)BOf5H].gs6-%X=]!1k"anFJ'ILlFb9%k!;[/^m49%h5W'ICM2>QgNna*Ls*oKWf"3aWb'(WLugM.P\Q,A+r>%OD(paaY?`d33]p;J]N#W$*.'oX\eg+_1L,kDjd:hLMp3g&Qmecaebp[F%IIpAI++,MIG-H:3mEu[+-.Y[&\6&Y4,TaFb"_Csgo#nLtBcQ$<##C.UTuV`pf]r37M3lBH1L,Ts@h.2X1)KiAbNTboY(AQ2!?OU6%@bt/O-")9R_j*.gLMZQkkD8UT;"p_qkDP_c\T<Fl>jM8t$"]Pc(d2\VjiGQ/im,nF"l/(I/o[l[(I`NG,E^rO,O&sCh0;.N*WE"T%dq89G&Yf$D5rHBq*&RAu.6JP>V^8eJ&J=rX'*-\*S\`laQ7<RgV7lV?[efo[%9*N'iM"CWNE.ic%DKt<\">9(n=7Q<0L@V5+GCk:%;6+;s\!OK8='iMM<'2Nmn;M>ecY)a0\^K)9*cR?*":Q;NrF;,M4FfWVGF4"i>ojP=/@*NU_aA!uaj^REWZ,G$;B4V&?fKW\LH-2O%%Vf6%!g8JhRSPP]";7YO0lK!D#KZdI9]07N,64+TRcpA:51[kAQ1[9KWUjA2l#)-#q:[j;",:g7SVbEHO.l13->l`)ENbLi4lDk/%blD!XX<85=QXBKK^4-;OaVqo!^-0*/OMu?l(JMp/Shb:H8J[Nc0>J>S>@i#"bX(VE#tQ\@!i%n[d*?t2M38+HF?ePhhMri$aLGBG%Z'YEs4Wq,=ImuMuD.Pu`*$-;nE@;)YndY"_*.]iL"s2uBBfFSF]pJQVS$+EP>.iTXWi[b/LO=(J%p\Z*2YP#p4M.#aU)Xj<]?J)s%j2N`3^^k\HiMB8GN8R6ZhA_'+SK9hM$u7I+$B8C*3#[!&"<:7k8sME\^\a<Xm.rYJ@1LS+-'UGN:r#TZ=7Xf*a^G2?!ic(E'/n3=%f`3@I#,$Dm4=W%fLqkJMTSdEO$j5SQh)5PSEn3HXHsUW0AcDZKF?#`p+0#j1gUN?0\>?B;7$n<0@k_W42qe8)rW7QE.\%q$g2:Gp%SH6R/k><+8K;nQ;!2@UJ;7OjjY"%l.P/TRka?K"_dd84:&f0#%SkVTd,)n#Ieg2F`^@nc<SrYeEG.>sf0&r].AZ[i%ILQX#IJ%mk%o5J+hjYZ+Lp['t@$'cTL)7d]@0,!DN03rO1?CunFOnen?DC"'N.ZsCjecGc/71oj9=sVruSj_/?8hgr_/$)5Rfu.qWf'[?E'&E.L%]ZUjB*J6aQ-<lL4j4k!tV?hB\;QOjp[1`bbLDesi]/PLLqj!Mq<M]P]55hFmXR@`5Vsg*FdT&k@._VA`01[@&(jT9c$RaX[%0g&2%McT1SULYG!fW7H8V/G8aD"jo,'#dr:C?*o\C&]?)!:K(9_X?P]-)j=S^@`mYl6G"'JG"7<9Lc.$#&N$Lf6g`Uh0AjB.4$WR#K=0S%DSpJ(Tr<+L=<gm^T'hu&AXW0&CtYpMnj\l3DH2.eHts3)EP92^Xt1*,DcZ;?GC+[h)JM2Go`JrFR?n,?dW@'n7P;A+pD<FKZ.(2R%?^i]7Jc;&.!V/8"fM;ENff.+t*hjZ$Ip_#!/4K9l8eNdSh)b!>>f$'lYT.T=In3X"[t>,M2u&&g7QrTbHP]36H@7)B^2GTN&71#j%Z=D%BC[]0>'"=A3e)u1R9qnCPG]-s(J=Vt*]VP0K#CYf7%NK.5aO$h11shLRL@-m;N[rW3IEb3_).VQ)]l+[^2I_oefYoEWU[dr0%%@!N`Od5q=&e/T+n6A<UHARcDD*>N41-%60X@LhdY:DTLS,"bML#U3,BD0P5MjOOTQTo]+hl0[jrh9VLpWr3>odLgh7=>ShB%[B;%V>#LGLC8cYZ\4P6(F+lgXX&V6_MY1$p#N<e+IQ!AJ1s'kn60KPDY)%eL7+0<`OZR#*f.fM/KVQ92**d2UW'DPS&K'/!&V.D)q=kB%CEYNr@mmEE"j%fhb_EI"YF0(JCor8AEOFC\j9k`I>iDhLZ?LXDm+sOlB`@8_3%+*ie%>+X=X^qS/=qrq\T2l;<Q-\>=hZIm*pogo%4,;7U(`=$[%SE(A1:N$-Rd9(OF5AaY-pB>sWF>gZ9OA_0Om*(bgXX2$nVEE(;_'Nk\2M_@/eFXL0BS<JG4T:U?2.Z14YQ8p[FsAS%.4(8Q^Y6RtWP]L9LqZ]#Wu/X?G<2Y7Za%2[)7BL1qo*%'F/Ab98nM+YG'6h5C26R4HV_U0)r3JY.Qs)teZDV41&i90L;?>27RSBb%$1TdGiTNY#LOAFU5h=CP<+-Peq]5:p=tG3#A>_n0DI*Qn-orII_7aEt$u[7u3LG2b]-g?3$U7HnZ`OVS9:?CPh;PO%(J>"q*!<G>%`1a0SR=Wc"QbJL(5fZkR2rAr\XPN03@Nij4TJ^I,PGRq9ZR[oZ:F`33\9K-upTBq4\GgIU9'5eWp[+uq;'%hW:,d@KRk.^Z;VG8(%o9HAI9^RW-bEN&.X:&%dcI6(lY?tmXH"dS,lLuOoh[<Vl`TKb+Wmr^UnY>q,Lh7mp=a1D.CUbKq'&>saiu!^uqINu(f#J1c]t^@!%>UX>')$l,a>HX2aDVfsGrP\,A*.2'p"s/Z5@<sgF8nTcPYormc3YFsLcPd#ZDHXAUI'V@gbb^rQ2Le'"Q")VsR+H<%2!2nd;iWjP%%E)RO17*^7]\(ClEs_.K\87"AS.hg)91NG=pGn2umG_=N@sBBnB5F]c71t[C98j/u@>+(\D^6Rn+29GuB*FVajWj(McO:-Y!VXdS%^KEpR[T6Z^3q$aoST08oP53*H!^oS29Wh(/q'Uj^s+QLrK!EN]:16)#S:>O:"jY/D,6#bBTubnsYZ$>U-gg.Iia^G64DC4BjX1XY%nQn@`M4]aCgA5`OnZgDoWT.K&5*e_TT+80)nFQ%kYHMEUj^;@Ro(gSMg7rb4rTi,QMj&(EQO)_V1oQ;^gblu%1k$<:Wk<_&egaRq%rl^(5,Mrcd`@JjIepU=uQ^aF9dBBVegQ@8YIkOC>.7l3TG7hD-*;;UfK%eilgo7^VOa3+<o%5n##JY]C7=(p`>S`H'dU:n4BUn,[%;8aDc&q:J_"RW^Vi("ATd&rn)olGp:B_O[51G.Smg-a707XVF#^1e0Td&sHLq)QADrlYfshR<[SL3U\EkM4P#9P:1>+VsMb7pmMe%`CX&NM];ER,/Bi'%YrO(.l"HIO?Z%<gfE^,Y,*"]5tpN;O_]3WhRP\r1l**_8LiBJ\W#!c'ke?ZO6]AY'd&=jV>*@.VP=o@L?,)F%7U*Ui%Lf,1#NKZmdL,IH6Z.-4=iK#m`SU0W0f;A/Uke],,_Ggbq?_pi0k'do?6$^+[;.43NG,S6#/4Gn@li@pB%/N8aa8pY-0&3f%DFRs_I)%=/,E%W5`mVgN+AA_C@Udc=imf]f[YHOk3?8\o4EABsk/Q#,`mZf6&kQtWFKSDuA3nR6n5>&_`mo\YpR[NU^TIlE6DMX*%iVg*SjbuZ$9&r5e!\ll[qPg9(Ear/5X8#0UoGA6F(=_1X:<?bi5nJpV4Uh+?$A:OB"!L^XD`t-d81%"q+=G!%&3Lmt^qH@U+Lp#h%!+WkE(kFBprq6C[IIfi3!WUMTZ\C7PSq`6#Yu0VI9Ec_+J<8:6#Gj\RJm_ER4h/sl*pqW$X1U0IkWjq0_hVe4#^7nC5^1/B:jfV]%'"'@)X17LW<oKeTOtV"-S#$ItLQjkb:qX;X"E(:r>9@/U#-OK!MT4!J>LV8?V^gcTN.(I<ldBfGU?Y/E;Pdi`:!0B'DBSA=i9dk>%:/]CP@Y(S)m*@.ic<_KDP[A6s2$T?R</?sB\9Fu?*dV:*D95Vj:@Yr/MC<A7IEY5]B:i\G$=GFaX6<!b6#"O#\d^Gt:ogOCkuBEa%a0hedApVs?Ve5-E;gI(QD'rS8l2.//[o(Zo_5%RhR'd:S8g4<#]_5b[&;A.%F+!@r$3Ds2=KOZVE>Sd^W=t-n(rgf/b!'JqG/(QN%`GOE";6M1LEq=9blpIQ,/9M@>faSQ'q0SDkOBn>>AgFCrkKobDW((sJ7\`$P0"=RiI#k2UaQRYQ7eLFBNind`8IX55=0dtM?[-HT%A>(D'(t-&EMAoW+dju2ZUKUp#]6L"7XmG5Ep`2j(%.>+@T.Fb*FJk#keOm!NQIW/5Ym2_$rF;s%S"eYSHnH[9[Q2*eP?AN4+R<I!%?kq6fPD7H$oiAdT>q^,<e\qL25-\>2:8>4%]!'Vdi]0;.iegeH_gtJCr>-7FjiD$\eNUSq=SM(1p'/$9N.,naEOZn$hAE&tYD!W=%o@-rDG&"P%N$pb&e/gS$A,MVL\`jop]^s.jH75fLW[jiZ>gSI#E;R`orDm8b?H;L(HB+9)4.?aG,E2j0Fc$/G&>2<m:'^&LJ.>#G%"EbhP)fr%^JN=@86W!jVf8+;bK:A,k=6+rO0T$l]cZ@cS763(cOBk5HJZZW%@!eqOg500CQ$-24pY>PMh)+if2;Y1a9[VZ/eo)4t%Pn/F^Iq%&Kdre`S!.0UQ"Thi"A-1N!qC&6CrA6gV8iO\&>c3hV2sqMPD?srTmNRH@\qQE\E<5JH+fL!Ul`k6EL\jm^pLh!;8]8+p%RW[KroTn$`'S5FMNR002YsK1TAB_QmfA6j'QsgLL-(jkoBT%dSUlUMI'!1VXD2aR\PNEe0$+`jUhdfU\-M/7Q'lp@n!=@iIW=q"I%fsbKF`4^<KCaHo_p6Ci]e3+]TnPm+t5K)q-Gf4,DeJ@n'q;mTkQcV^43Fu8$'fp.Q6_pcYh[2m/0oM5+M@"uo#\u&a`-CP>o`Fm_%aJR\W>@m61oIHiKX@.@H@aDtT`LV8WAL=Dm0?9(L:E4RWa4\d5Ft^2!c]s>(]NjHm62O"/[::N4830WdGNg_m'nn/.X0med-R,%8%\Fi7XD=gtnH->)^^bribq6LsQY^?p>T!*?/^HaoO*):="OoLRu?gJtb85n8QH^Jl#*(`L\4/]'=[s/Cl!4\d<A'GBEQ#UH#QP%VD%)D.uC*d:#P0:WM+e<V9i,=H2"QjlW$SHQ_&Sa4@aDD+G#Y-pP'g%CeEFXp_f9E%i-T.%WW)Cje>jPCf[PR&!Y\FJb@Wd/ZI^-R=>%G*VAt,-Q/?+\Ra<_g^b8G._aPoD;Gb1b=*]Y)XPJbNbrOEIF0;2$#XSc:9eI.gBdEbST&_`oG(P^M&"d8[T@YEDqqkK[#N`EA"\a%N$B`\A1UeR44TOEn#fns2TnE_0hV>pbIA>L$?t!&MC^]mLPC7l!GTtSWa.[i/m,ktakf'%_gXJ3!6gkn$WQZ2]-:UIp01`5L$WT!%XL<s!BACOBh"oMYEEY<gVc;C)_Ecsp;VBdgI\3Guplq5F*8/l_OS*GBdb,_8XXh"G5`Ij];,@K!1g%!2JN=@8EFr`2:^7&D-orZQ%K)hA&MkQ&Z>qt_eVWmlqY<jVK8/0Ms\m0AO\%I=%k'^cc36^Ea_oT&XUnWW`B;Lr7!i.+MeckfjD[OM?:%db>g,3AM35-.m15C;B%9'Y82C_RrAT#n]>."o"!^PlB]ThP18Ub#9M.'&pmlY[&pOm:g&C;3$6RMB:e85O^N)DFW-F8j_W$ZW3IPI<\MT?Bm^ZqH+"ISV&,%k+o_tV//;,fo(B+><U6;btR,IClQ?RTD:'^r?ZHbM7jn"6o<N*;7O+rR5?fKX:Ui<Mj"?lED;!kOUVZ6NdOF(c/"XPmA(],Hg:b$%>dD[KmFP'a8[`V\?"DfpLJ%EGWR2)_UDW.gf!J#I\;%IS._SOe<h-6/JX=s=b+PRmgZFgjeD2)/$^\Y3NH%A>S8)M31h&j(F/=Xd%_tlkWWj>P\&P\n^Z\ugpbN^*2K-_439tJC(V!/\*fID5Fk$GdM,&SN&7PRhl53B2%\r/0&E+A-sD?iRBd]ApIXVJZ-\_F$/gSVeF%Bu-oFj:Fti\31[rQ0n9'g!%XLGm:[Ea@;XCh<#7Xj&O9ES&P(t<chOme9(#oBR?+?/>Ib"?AZ*.>KgU\2Ne'iA)*suW9=4og>\D=%lTAtj__E#e)euJHY>4S(,80BU<duH>Oo.G'?0#&n'N^R-E'G_1M(fE.Iom[(@BApk3itA*ofs_GIaT5B]$Ou#A!u:^2[^hh+@5ZN%mQHAMP=iVOW'_#?5DVrqV*ds4+8rh$;``DT/Om3SYcIg]Rdo8>Vq=-/&)qi1MC)%!:JN9af4oKKit0i8?*2-G`%HE>>4Ic-K,O_1%?h4Y=Oted&Vum&=BP]_+#6H`Rp,a"f!s)T[%i.E)*VZ030@M^TVi?$!NHq8K2gs3)*:o,W1o);K6)"]olVZ]X.+YeCn^W>$FE_]8%=]qFudc$U4h=&iM9mURpoDZl:=u^:UHe`J(:Jr:JI"?W-mVclfQ(F21+=U]![dJn$)S+I+e]*J1<qB\B[rQi'0qL9KV5Ru%d]=_a%i!kuA];-&F!9.dW6Pp6j(4o:5fKqr4C<_8Fdd5H7bCSr+de,ULW]F4)Nj]8FP\#;U0B1U+hR8uCNnZjcpd2!/9j1">8S`ZaB<B<7%Std`"1)D>(%G5g#]+/MsoVk,pF`Ala.pQoT\SUn0iL7`/VK7..G]JYZ0>@og.PHsp?6d]fjW.2un*d0#j9g\dhm8!>pn`u@JVr*)%(,lK\$rOMjgcCLOqoh7u\lRZ80j*jTYI2OnN:'S'N(8<b=%4622DB$him)FAG5XLXk&i/7]4;tgc(uS]L[i^qHW6bZ_#enBVR1@1%=[EYZKqa;eT$^nc\*@u3R!hI]fB&\oi+_^g_!+pSn09PW9kZ^+LIXe0[(%]GHd'P.)shO]Br>";>S;.=fVu2)WTM+GC8uQ?Wskm5%$kbYT4u<Q%ErNie)OrQ:8G=3I&#8WEl"YS]PlR'H',+diQ%8`Zs1h$i73s@_TRXaC=qL@?'oqBG*@0Z*M*L/GOW/E*r4idTg\'kT%&bjA2@HZSl/T.^c)&U:/lr9Vf"DH"RQjV>o!);S-'VGp;kh)LECf$R$,:()j:%W(K.0ZC*).mgb:+:jjZcq;$SPf_rB5]W%RqP@?%TQi_eXXg7LcMC^b.L`r7l=h;D[7eu/D;<f2:"Q5=3FcrtQoSjX`690mB@(1kE95@,%Rrd)48[U&G-$tFC00H;hKJcI<dVosh*-bI%*f@P_m:G)!prM00@&oi%j7[YC[J2;@YG'L<,cAWDbuVF^?Gp6ld:t%EXrQg%G-,([X3X?LSFq8u3N2@InGItL[))LhoqS]'$$!<A%cf,^]n9MBYZ.e`,LOC;6)NPfI)AegZNQ<QRg\GMuWN=b>CPa7nEbbd'$*)6Z[3I!pZeK,tg54nbA[fup[Au4#\)$Ia[23&ZWDRsp%[3n*X8UK^"A!.V(;`pZHBfS4b1>G4Z>(@(q>,'f`8c2Z0`[SF>")SHf8b:<C[Ip\n8c\5X`.Yin-'30]k!,PX;$j8*SF_EJAX45.%LN.<qVH>9\(GcHt["Cd%UJUSq*Mc\.p<t!_^Q&GT.;@F_mUmLb79BJmK1&C)NKSe66&HWU;=oqi,XZ;BBaq;1Ir#<\O1!GZ8j>+a%UrV1\D#B'#O>,6%qm5GMs'X)OMG2\.(X\r?%km&l+r^CXT3]ZX4=fg^(3>\9gnEpB:P]XoJaoueSId*/-"kg/jC3#4PhW\`DDFu2%p8;6@%B\jH-"keY4g9d>Tu?@F=3r6r(-t-\p\Ep7PO-MO\`;D8O?^:CRk3[PH%0Tdj'qFo0(nb#/2E""N*pDrZ;2TD^PhR!U19_T%a[1?K!'e"?I_!.VG@'&&nJ9s#H?K`=k!s>IMru5F%+j3k8[)XUC-TIE.Oc)$jNs(1e!>%>auj\S@Sp:NUqH@e;(W]lBm\'2C%&_@%%e06+4k2C`ZM.\a8f,%>E_>(q1<VT)`@'Zmfb"k$6Lk)`pZ67//'6Y?^u#0U(i6ja[>TGh2IMi4PCt5j?Od)L!p%%=rje["XfCfT%>-_\^[Zo"+iL+>!T[D3QY-,He[>%u2DSKY)\HR(olo21f('?)eAs$*HqRl%l(ZZW03q"(^6De)R'2'hJ[7]aLqO,BK.f3bS,KNEN%Vg2NAS4MGti*0T9'N`grC%";D%=Ps[<:UX+ST9f,8=_mA]_GG<X2h^c=$B$m'B08bNYem$#9a;\#1#:#Xk+USB8oI-g#*`\IMHLa%O:!PdE5DmeTlNk\,%3l!=*Z,Z.@,4=M,;i"[e<mgR"%h>QN<Vnr2#5"BEiD_o9Z]27PfQnR(l7sZlHtaAFYXk!5I[hV)<eL:+"GE%XX)ml^1"'/0l%kBSG=ZZmhtsMj31lS*ZWQ-r^Z,D-*q9mMqO0rE!j;[g;TupE!j=qlX*+:J5bqHP[YjU^qIs!o-^N?,2[E+"8L/i%e<E!,CfPjt(otZpdoVL29phSL+#W$/gGtF:Jrbn#!2hN#"^9q7#&jq@2i(T/0n:i8Zc?p+;4B?c"u+9jnefrWpl]=iWjN-V"5$bp%G.UDI\U%OgcrY];/O^*+']q&hR-X!*rH.1BGt8#sCAqO`SsNU7=mgfBHEl,A_D>;tg@`R4$X;qkHa5K/Qf!5?Y^1U'A&]RuPs,]e%i%QStqJ,D;`E:i3g;\eS?u=E<3gPTJBcA__^h,*><i@[\Y[0gSJ5_iMaSA=_J5_iMZ'P/m#&jq@(]3c^BE7ccIkS$!k1%i4G^90o%*SV2c`bWP#)epg%WWYu#Q7_%mMa'U!`;\._.%5YlnGuST5!BkIoAc-:?fca^EdtZ``pN`^-24b82"5ad=p_RLp9Qf)m<ii!!IYbe%eB[fs(M$ceeCs`Tp-Oj.1/dLe++"%Tb3YWZM0pP4$TG(a-]r<Y)K8_PSOC1X>$mf=n5C:]WKZPoi<UT0js%jVF>3QWD(]k!9./b9%W!&Fs7BA8(9uaGOO_^LrCbh#>"!qUCe4F2uW/pUnl=<dYps7$9$KiglCBuF>.gUDVX8Wie@;[N/#j^dT;?`cQXUAnONK_W8d2YJJ%m?2IPU4Q4[?8KeoNlsg#ea`=V7E0tuL9)L3Q3B?7hH>G/qe\2S(\s3XYV.eEAcD\r3+ec56/eljK%W(If`R#)$E!CZdB'BVW7'mo%?9VP3_m!KdN/?6Lm1<aI9Na#U2YY'u-*T)4GN,c(lB3?a@6[_,.gd=u2>,DBh?o(;RY.Iid`.c%jAR+Y9nGf\qL0*$o%_T];t_,!%X&jIF<;<[O4`.hO05)<:4&)BB4'OrJ]Xb#F?;@mV8?AGj+'7s8>&T?1fe9<hb"%d)HVj[tV_IZ-9hY2.9<tEFM'f<oM"B,/+q(6t%VkdS`'V!PfGU*>PU.0At!ZifX]tG=;2a=\0CuEh<@stH:ao^>!-/-/nWon3hm(Qbj,"@3dk/]Ir>!\n(0bp-Yf]A<02d!3G&-9q0%0$F.,jAT+rkd'E]bc@m!ct26`5%^#3O6Gb)QR2MTV`_RVQS%9cB,Bd;jAj8b5T/N"C:C9.SE%1jeq\?+'T+n<ob$*NZT@]0lBAcR%\O,sHZr^MuhigFudi"ZE^ZLUdP=%*=7IK(P#JMJh7qI?lE:%*[7qIR(>g-13=cp<mC/uPo\S:AL;/NIi2->:$!>D#nA$(g4FbE0I%!.S0V6."b(0o+E>/k18!/E<tVlrONiD(]7nBpkl=/l*Iu'YY;ZXQ*qV+Xh\kE_%hk-!scATpOX8C1Fns]&\^u@2mNZ@.)pCnIm(h%$q&Z6HaVOOe,0&h$3R"a&K;S7[*T/7Ks>&u0+Kl=dED:)1Di0D_b0/o,pntB9N,fg?u@T+_Wp5GD_!q.L%Y>tmrq8VJ.jZD_qDIq%"#rUPZWd_']qD"_a"uGhh9HGKK\$?QG2r009O?IQc/8&8$[<F'=k/.[DGF\HN4!OEg1UJUm)"3bBictRZ\7(C'JF6@Z5,<EA<9G]%ajjr&%uST[]>?MS&l2!Z;*)1_6JM.=TLUbf;jb>Y9&W/?\9@RX]QDi:)DW%rpD?L'^T!3U$9bWKT4X93@mXLopTbVO8t\TMZk8\L%+cT.LBE<>Pn!!X9FYo9:5L_WTjo4/hV'V<%T2!htlDS\;3?\@:A+"$f8FQnPO<8qKXu/kjKZo[X$cNM^JeMjeZ9,?A#Yq10=L%3"%JeJsScVtdRIABtY?<s$rPVQ?S=d_$KPS0I6p0-ZHEQFstBVEs):OY,@j=+YDj;qH;/h8_2EfVb.l!mkQ`.(hK4i%[N"G`eV85'_R%s*g+)iKL"d]%:AkK$dC'-Uf-BVp0pmhAl9Y'W%S)!HSI()"VEO;`N/9(1!?60niUpG^B*10SC`=qgbR57G4'\DRTI$&b=3DGFti&%U42raHj2=m4gKh4<2QsV9D[leY&_UXKbr6"TeX$4aM-t&nF)!4OhLe!!ENF&'9'q:)7_AQ]<nbld"]?&Gfp?1mKer-a]`LtRC.s]%LBplF=Gf3O)n+sES#+:s]fGt8S'Zq%dt\72*r`STHJ;p3,Kd..mFrAue"0&s(nNM;ISZPA/3A<J=u2I^s5L`sjY06R[<l)WPJ'\&%ilTlO4\$j9I7hUqcgo:T5PG>f:#$`RRueS`D1IQ[NkKILXM*BMdn](C";,D`4KJO.Er'Ee7''8H&<BqI,S>3`ce(&^jc9&!7&.gH%Y`U`][>Bg1WB"$)`S5so-TAOb'QY&c4rSCC,+fX>ig"d9gX/>t2H4S9FsZV8SYl%,N5WuJNUpYTEI2ZXn[7'p4*rp>*\tsTD6_:e%P`[YPW-OF32"V/3aRY9(@>:G)V$Jn#Tf#0PT-Ok!(I4Pd4G-@l[MlXH+#d<Vm[U*'Xo)kL!8>u]\eSfho[g7UN]MQTJLnOaMS=DD%YRV?AWHDoV(N81J`F%p8]OgVG,"Or\RC/bmcd`C/7)VP2p.If\`b@N5l`@>!@rEU[M$:5.k)G5D?Y;)=ZpF)ZoTNX/Sp%efZN)Z7%R5YmFrO#)*%_ecTJ"(CQB2*<1cXsT0eT\'q]st_7MP1LOq`M'Khd*YpdWH7.XH0e7m*EBq7NCJ9p\!XH=B%6a;+RtEq0T)Xs0Vm?%kgP=Ke#gqHfr,`":N&JEc)eSckKg><L"J"Zfm4CSNd^RMr/Q1(R-_r2eRi\F%BIaM?"h2Lap/E>(:m<^7@Qrid0Z.E`VNt@CNF34%\\^nk>ZtEnCToh95mH+"?+Lo^r>\^P"r\FuW<ZVjIn!aO?2?1.cNs5j-CY`QHXVsQ';sIR!pp-)ou6eec0J#?-rpWj!sKa/Y&YZ7%qWo@=TfCn(";C?fS_ngb#>OtH;M%'FFE?,e'n,QK2e,0LYHmH<>Wa@o(P.1CFYerU]ginWqIt64l@B9;K.UR^d7afY_d(.:#&X^r%U51i=LqaMPj#($pQ9JS,7BTUm$R%(&p8[qVTXML+e2*rcJCUs<e%"5iTc+pj7$IoLBmn,\i4:5)pGDH&!;\E:0.p@tn!_nt^r7p;%bJqun6aV6A$pc_IiEJ35a*e;D"u^+gjZ^@=)YaJ#,FA;'m:`0$M*T&E61>W4/?<1`X$*:)gW`rl-(9.RQkmmid.q1YOS6n,kJ15:%]M,H1Hu89<cR`b3HgCZQ@iG?Ne0l$#ZgZJ:""S,ZmUV0fa[BVJ);^7gLWR9;#<@::M7/X\9/2>e'5^=&"-$lN#S8B)75aoaU>2oa%k)KB^m(n=p=7!d$Ym1L8`[MUC!P!rHN+<B:&^a6s>V'rHMb5tt<(,Wl6K/GGc9)b\oNi0DaZ60gkEZV"Be7FGf/PKe.-AtG-R&a^%W#E34BqeZPLNYlo0h<92eF$u!I].76"5]1G^dWopE1WSF]:U]J*ee[VN:kW2OY\.:JCKJB0pFhsQB0Oa<sY5h#&<2Of!r`i%B?_U%[)Ot`DhRcDg`X"8:2b;5Y&ShVaW&P<;N"'%Zh/sjnI8fkP\#hi*8`.YZ`\;-ZW*0F<K</E^rQ#"+WsE(6HM56pAPl'C(/d:QHO^0%Fggu%qlkpjGd"E;U<1U!3HfDlhEd'<R^mb?#U+Vf`\2@(m"MoZ>iVi]T!Z60,fd'lpkEeU^:`ud4^P:tlJma:K6DW?=jZiNqT40+%,ufj+$XJ]E=SHQ3k0M?q#=*cBSm^*s:+_G'"O$@\=V&NnIT\9H7^*WAP%.#(Z'uakcfKOo)Mm[T'pnflk/c<uXhn=E2LRd?SJs\%%%WRT()YcFY3oj%M/Qh;O2WdQV!jR,WAf(->(4(p&A#WU8Jq&^ol8sZq\BFa5kJ,fF6Z,0-7)H/](OK(T+If?j$s2f?@#lJtO?:&Y%9]L@<&]Th]6ZgCTqfUfJT+!Kag=)[!md!Y\O3.C^^@eg]<q=l*F4PCVFd`SI&L:+_nQ3I_Tou38Q[GH"a?CDg9$G6A6WjFqagg!=%:A'0Cl3`h\e>[?C*aehK0&Jn\0"#PCO`HeSg?/#^3Rn@TW>CFZ3n4IUW=+,j_#3$QdU430s6+@k\O=L.]]@e4K.I)jaHe>=2d$94%G'[Kagu7i[6sG\D/?M?kqiY+Ji;^YdiK6ba')74*m`5j/>NRBr$dThm%-7fA9md%Yhf=G6Njne(M-``V6>l;J(#C_m_\Ri\5"L^/%Qt7Z33$742=N++_kXEXOTb0-l`/)LXQOrWqN*54qcl)<^ZGj*Vj1h>5&+1@j^&.J[2ZI!edkcheoZBqT:?)?O-+?S)J8]O.EZWVd%TsE,Pei4!s,'8S9]]Y$r)/(!&9.^[-c@A?9-(\><<PY>SI:YU1<b`(^I[O5&oRb-&E_IGu^-S2cSr&)n*^b2qF9^,#Y/,:HcD$)4%puhm-#=HlHN:D&)/[Fu;DbJ`6^n_GC`q%(2D1A9d>k\P@9<m<DX<*kM^<-8b=8XJ_?W7s',CaOXYE?O2]H8/s@aL0rQ`>e3]iUmI%pHVZGjGQ$'ZO2#XIWG4#?8(b!n&Dc85i;>u`r\!k'B9a!-1%!YK0Y[M4Knk$g0./ha+TEEqQfTQL0?3]4r/%^(sPHED"edqg+g<A%A3pcRGIIG:gZ_ja@B[oLI7ntbaO%DL1?]rG$GZ?'-Q/c1WH#,d0%Q"V=SE#i(TOI]2HLk7oTbnkfZT1K`k.Y`N^QU@>&_URJnR/)%j_ZqokLZ3)rGL"oXj4g>CG0EA)"2Eo\ZB;uaf!*K:4:LZ1HgV/]ViI[L8[KH(^*9LE"#S]Xj/O+&iYrGAgFE*8DGMb/cYuC6/qn.%.c.&ND:6Gq/Dg*fI4F)[E$hKtDI7d^3S\:ddna<!5&SXC]%53_p.Y'orr0.pC%.c$.8GF?hD6R#]XTXf,>CU&cFd5(TIsU^I',aI%;AT\ZS:`"BLI*`YTElGSf[&Pd@9n6!:/ARM4D$>C;X4E&)MMYG5nTs"A<&qf1,MN@cSHt9L'IBU-Y!m%6dCBpc9W$dB8NFN00(8:%jVegV#DL5Ab.4<87A@l,U]]rWEt+$%d;$WhEM\5>4K,sU^uq3in,5(hZfj_q+G]oW/Gd*^%J]A[T,@k0ic'7M&+j;k4YMbX(t>EV%0M]daFDY"4T&I(jl*nkqcmS?9ndY5bh!_(0j6IYfOceN4)$tr;]LGA2MN%20#j]a0JQl_a&_<F?o4Z#)'k+dY1s*lK.`,X6CM^aG%.(r)>L18P]XNV?4W_gpC#!Ll`TI8o'K-'Lk+6P,/)Y>/Hb+h':V7e-hd=eH^<SC*?(6'2"3OCGrB[K_5)6eMq]"ePYd:i"3:p_0S%-"UGj)e%,$6:dD2]+GfQPam0Lm]0-_(P(=WhREpU.VEAD-e3gG\V#6l&BY$0(11JU]_UZ,9lu\3;p1N._8f8W*\JH-$pFeA]fnH/%nWu"c*QoUVm=rp346oQ9eG,mGda$T\gf@KW=EUHbi9)TNd(Uc'j65[uNaCgl5Fr-f(IWLp=#lRYnFS?kH&8M@]K*.=hnL1EkJp"#%Gj1+ur!HYE;,u=uUPK!]<4[XArR-T+<'Dqa;&J&&4X2@!XElY$N)BLaTqn;cXNgEl`9RosDn1'EU25Seq@shBb"=@BI*>c$2C?R.%C5Tg/[BkIip%crJ^FugL@a,50@E)>fL2/U@\%FTTF>n5sD1EPVehk?g>D:_dRJm0Mb#N,Wm*>abH/-8A"[d3gCJCJ;)f58sR&57(%Dd.gd@j8e+a#0[>_hph^r2OVhXh\Z*r^marQG-P7=iAUaVD0h&*q!^X$)D4+DDsYYHLnW^_)tf!Sk&)8U@eWqoWnfK9OKIqJUu*"%?ioAc,%OScor7[Ri'?/`I;n*`IFk9"l@2BAQ"m,cZ.qR#UYHqSYoN.jK67r8(Y/@H-TRC.^I24oY26Q8F*kXA@qR-1Uo!@STmP4b%kt##B]t1-<b.jgobI@5*nQPJ7L>$0=Q*6&<.J9jO?uh/i7)$V=d??&[fk*rESfArH@SdMWFBJ'7%5s30+Y?sLCK,D_W9A=LFZ\<.%$9j%_WHeR$iO@lO.]+XXL.5r2e^s@D'QYlA,JFb3s2br<:3JA8([*K-]k2t]+3-<"&k,:Xa[Ek:TJbjKjR;Au2i;r;dE,35B'>g[%F>D4rccSD=k[`V^E#H26':k?NK,q<4mGJn<Dcu-.FSG7\.h*YidM@3Y3/W1,#6Hr?8j6@"qJ8IPf\L7Nd=T=if&*T\?!5oQ>O\?!%-+W*312=W1G%0iCnf^rX2]bL5nFp[i-SpNq>Ed*-D1B@e?4i:Vl_">)g5>q3X,\_%G<]H]<J)Qg[]W!"efYmkcBBPaioE+)23G2!%,Hh"jFIfWdP:Ws+Ef)OkZkk+Ef^c/(PnK*`](re.2lDsYXH[Do*GLQ<SeAU_^9Hnmfpm6akoEbu(pJm@'1cig2(":D?$&pp@H!$C%>u)QgBifL#Q[!.%`N/6ImL<CeA65ch4&SbKVt6Rr3Sr;_<qN[p9*[rQ;]F>b<jfmCDiUZ"QM(fErG,K\GE^2&BNWPZ:^j0Xk04Ng%ZfEh)i0V#85O's!o-6$L^%'hNpM@Ke`B*%EMu)$"S!Bg/^24fYdS#fDr"#op.\@bRA7#J%TF^20:MSP'%ctT=P4+D`T125l66s6L%dms=aaYeL"^5@64k*\CW.Cig^#b)ge4pu.SH"HdL7s?]*:X`XVU%5B#^T*7p*[\Ldjd&(s$gf09jHVp'e0F.A4sKqd]UC(;NZ8)W%i:_U`*B=28&KnMnhiXZhFG8Oi3=W/,G(Y*o3@0a;2S;935S&7FY_0[I10<*o^EPO>cd$<[?'Z4Kfm.c?o4(A*Tfd_YZB&Y]jCrie%O-?K'Q,JjrrgmkV$%LOgM#l^^q_S)j_nstQ:`bM5Q]Yo.cE@>Y=LVoJmHV0W;4p&(7I=]T[8+`n$-E@V3^[9r..TN;0BiQ2cVFu3%j4SHK]Em"H_2fCi0r$VYSB4=5cJ+^3Q',J1o="KCZ]m/!A:&[$G</C3A<po\ap*1/``Mfppp("m7;Gg"$U[>P2^W;ng8k)"pqddX%`\,``mDi6%WcoIe,*3SpS&WD5nd`7<(@gI1g;_so%'*.l0-ER7`q%(F2CL]RbF$[d!\kZHZ]"J[d$09">ra%K#1$*5b"BbmA4+N<%gn;ZBaL`;?]-QK23ZO(7hPD=SV5*U+>Y7F,Dbn-DMYVm..7Hit<[aCKdlUUupX/<Zg%4Xd,e^>trb(6*ZsV7[\oVDAUJ]DqX8MF;%#><n>,^!%+T-"k:?hMpkd30Ro_a$0F7Xur>I3.o5/BrD*pK-hGKfU'6WJ.(QIC:gW;o8J2Ku[X5Lon[6Q-H$Gd.PlX8RUj;la)60%)'U.LQO$K^B1-m0Ln7Hb-%^f=]ZF>n+!Xf*G@sD?h>?u'(3'7K2KGg`C.S3+&!Z6*3k(:u[h?=3hm/q]Y<9!rQK]SNp!?>j&*p=N%WEAZPLB[(V[(h>eapr$=[e/#t@o\fBiVcu/Qi\"IDp#jReK&JoZ%i$-LIWK][jITG?*?,b1IR,9:$SqlcVE["IhLU92J>ath_G4N%8Y@Z[?%"]F>r=O<QS$B_C)`/%9'1@j]R*=MfH^"A\($*HOc0P1.EjAR[teNgp6kJIH"%n;c*'a_bL$uFA-7ID8g<hFoMCTQheSd:%YY#U0Ke.r.J!StI/q>lg($EYQ=5k,7MYU8b"`#Z08Fe9'Q8.o28rci^&sY)c@:I`h`o(TuYB2WG8f)Z=$&NM/ij@NMe`1SMs%oNB%g8Ja&M!:mA=9>qgLf(an5PYtFIu[k-EdQ%7<TV.nd_`FZGr7=TXPom&hra(t=>Rde!h.e6qdG&H5;LU0[\hV`f1pP;j$_acQ<lai%DGuHN<k4](1+(!We@'2-P)%gj00>Q![&'s4c8rsuTe4)QI"R\Dgmclt:WA`'or#Kp2T$le%3iC+k(,GUj),ns]6`,kdV6qOL6?HN%(e31brH16s1m".B;=Y(!C0oOS4G9.^(^eNlC0j<M9BsGVU71fuQZ)]oY>OjBs8EaM&:.VCRV118b8.o0_nhlF:A&?!5;h?(1^`""%q3GpYG(+<IpK-h/[sU0!/GdOGrd)LdO-^6UqY0&3nN`NpYgKX1+;!qj`pN3>R^R502jfAm-<H1`gV5WPZYOhbi]`\<0TYtkoi%Ul%Huj%2'42)9Z$ne;>lJu>?.<XoPQY\oHsR$KGeCI;C+4Ka-D]]7Rij%6VRIA2O3[F]?gGQr1*h@,j\F=V1sDN#6lqXYote^!^T1FB%Z#5!mekLk+5*d\%fc@V9GLU!)D?`P2;#6$h@TMtVaN/K/8$'LKDhRqR5/C?Z/UH-j6)P2J\%)V3kBIFfb[WBTi=RSN5J@D8Ka=Gb%eX%4$Ee%:YFsgFrqfc\#YP;`uemtsBbE"1%M^ku8pC0e-fS8#Xe:KW#m#Flk]7RGVJ(DFq\bsFsJESnnSP6sg4`%Z1F*c<fp13[]%Ar"Q*iSDJeeQjc-a/;tSW-Vs[l:2'YSCH,Kji3AUfF_?nHg,3MT,Rb-!K.Q:2HjA5:T'Y]D7";e2Q^i_3n#LfD7qsA]S/97kP*U>%@`$JnCIcRP-.hamqeZo?eP7&<cUV_Qh(+MUfWmQN&o#U^4LGR_ret\upSV4O?s-_SF\5)DHhG'_go7=$\OkI8Y1J%VXG3+Zb"FE-%NX+l><UEJcP=0<:h92ug5,H)X"B*`WF!qKX\?A_a)*)Haf0qYmhs/$XN7Yeo_tC.7%,N3++.R>;,C2]\AU#,^"rb[ogqD.d^G7a:%7]e>qEq]Qh,YM3=XP/W#?$UQ^%Ff!-]k5k62-t,HSt$_a/L[D69ProLM,VLM-ULXJAK0.]Q"c>eT4`S[\V5k!7t[kejFQb-oeri(%/H(lS:i?I@23Q\+HOJ?qq=Xo&W.(i6lFTo1Sj,Gh,SW2)=`k'(5PTe,Jm*3K.([-OV:GNu:lD`h2.L+gCal;!,IRC'2O9d><[;OH%eV^^%j&8Bi-[m=1,1%C"B@YGa'^Ee>TR6[BL&/5d9K`9]UKt&C0*_9]1!sf!Tif7XK!nfC=ocufl(i5:';qHc@q)IkC#$-XTV7_H%Vci]U]-Z$7D!iE0be)!j&@%$Z<EdZ"8]l]cNR-HbrLNg&5EYC,UrZ(kR&Z97W^7GDEA1Chg?IXBp#hCj;*_.k5Ih:ue]8k5g_*DZ%;8P@g]iNeI>[cgojIN4pk&>35/!@T"@a7_!P.c`jR1DQhlm=r)?h0C(g7/k73<M+%-!D_Z%+$OR3G3kSiZ%)'b8$]G[>3R7+B=,)%cL?"a]7j_>n92aEH(Ioon92aE"od/qIE?iBB^.+:Vh%5e)CRTr"/uN`L::^AQi,Cj+1*\HI*r.b4Yl>8Lgii`4.8"2EA6R+NNp%9%Xc;m_%1JDt_eg^3A+XTH8gnD*lgI-f"Q_(DOR:U<UafQ;OI5EI)o[_j-"FK*lG[;GXhjaK_(!cE-K7k?@m0<\QoM(;DZAgt(1q]7%;S+RK<'t0?&o/LPki(hWE5E+J_AM+6B\nk%]>?qO5;?T@,qps4S*^'M@^>:MpaXp]Xcmt`U;llB=GK,3/J)Y3*57\LD0'hL*%4]V%$-[^t8bOULC4iLtZD;??4C_jGEZ7FYY&Wi$7X7H/'W&$N.;$uF]$87'NK71MHV#eX`%#YGiaPtk1GWFf?AdB8Tf@,G3H,`Q02no%%?X%mS1CICPhRYr-Ql`OHG$N1KO$=D%_PVG%Clt3L-RX)Sc4%8Z59EBM:i/!Y#.*@^/RFF.\PX?o[t=IC4CLO<`c<bj,Pi1)9:r@U%#EQ(0@/2%";)QcP10FOs?k4ooI1h/rM<XR?L+#Xa`SbP"B[2#=e$^s/,ZiX3p.7s,?hH9PBi*^V0R69CqhAJLP_R@[C2!DEh-mZO%LDC(+^(JkPjp?-2.-Aspi4lNm@\uD7e6sj(('YAb+V8d:::im=T0l1U`&CBGJ'rXu^H;u4F@Wq(QcC`IE6GVndVFWBgTXW5'!$3$%QA2Jok3,'_H%uY!%4cRK;4p"bPTp1a+biVtVRa5Xar=E4md?-KZ2WEEPd`SRE!Ohc^AJ`aM1N315j\6qGP^RJjXb'oDr)a>!).te%?_""LIq^@,S*X`e'f'mmbM!$$lNkKgmZ(?,"Y6'!(A8A24ic?M>V_Ta:CCSj]kDW23,`ndQcs>S1q-ed%SraRkoV)KB7Njs$PO&Y%NEnH'Z=s];cdV`*m<Jel&PTkuA[d5M/o4JX<)ciNKKV<?<55e4`/_+p[+XCqM4<jVNjT[9\'SQ#BU^MbMoN]u9j*\D@hHY$GDu2B%O4<&a*8s_<a+OeU^AT(ISIrF\1B#uE8T0/s4SS+/#Udj[h=2,M4@PT5?=1Q<I="^_VQK^aCYk83.KeTRY4X*Pf+W[qk1?c%g@iBU%oCMOhp/:R'HXla9<HZ"&?M`B,5CD:E</1SsE_!)>d;-l]@mI:u]Y7(fT3a[o^WY)Q23MbAe^HUYCQ-cm:_n-oXt`gQ$[KA(r/0!/%?"3nj8`L_qdb7uHI%sN^"^jI02ag,'ec=_B^*0:SL3?W<hg"MhOZ/S0:C,]V:N'8P#CAlG(f]OWg$&TYNeQ`RQWHuODt*C6UGP>a%p%5tEHN3@p]rg+Gf7)__rP\^rrPUKFYSQH"3>Yd&Q!ASM=9f]UkmORQE:b7Veo3)b1=6fe2O;5aed+a#I8>m3B8qaN]@FF!VAHY"%rUWee'j/@X@ZZGP0!OJ`j&'>2'pj^p9[=`DLbf<3K[HHq0<f3]07>9QKQ"E,XIjq_TBQO_4?K3R4Sn<nj1MYdd@#Vo)dm0'HC,A%%Y.L=?@t8%n*U.X%0`-PJ[E)bmHaE$hlqV<";oZK?\aW]m?bL:LC!OWR&qTXMIU^ND;gS8q[q<4\N8=Ua\J\5s!*Q;JWj2@@2lDL<%?9N/cAUT]K*H+H&34piq^Vacn@N9qP><g.iF9gg]Y3X@&m2<jFh.YSE(Rrni#\\$qj_RXUD4\I;&`OW_^k%_45_rp[!(VaQAacTX%:OOQVQj#W#!daE!mnW=3Pt'YfPl#RH-9k27Ika8M)&Keq=/,/4AUP?mYBs=eW0*3[AQ&6:Sp^J%1pQ^r$K*Dk&(@<HF[MR'%$O<B%K(/C-;`1f0Yfrm9lKu\TYHR`p26ZImjRodXpG2F,mJ.cJIBVM!hrF+O?G/M:akN"FAGXj2PHKs?Dn^erI^V+)EI:.5oO_0W'ZW.c%'MIF*jcI?W<"u+]]^`c`KR*V^/69WAV:aC:VBBlXjpjSRk4nA6K7Ldn$uWaNAc^ao%@0mWlJER7(e_2='/S6VbZk7TA3[Ce;,/sV%@fCeg@j9K6Z)Y_-V^l1XgM5)jf4\4u.btP=`H'$3&:*u#8,`og[<"!@/dS34PYR%tmiECC?s0S\@sSc<7>jELk[^p*E.;8X4daS>%ps.EZjg4&F+.:PD,Yo&Z*p7c`\0+T<HMV%paIU8U:K`u6&*r^7[[q`?9XNpJ5?u#Fc!ZLWJHZ[sG\Ot0??g-kUP*bL@is=\V2gIn%L;92Vp]*'e6!Fk'.tBpof@2^%=/oZZ@t16Er?cisR!-/#^;;K<NGWK5A,s*K=^]dLa#09'R>7'b^CP5u<dpl0qHU=khg]^Y1',ce%2I[?<'UaK-TfW5K4?`6(r[9MsDrfD4arspbV0Z`pJ;0**r=@dmjo4_)o(7X`I?!f.''1iSUHHZl63ne[PDlk.^/6:jSWO].2pg<C%D+7\KhnTuM2C!'H[$*9s(O8G2aVjIketiIP?bZ"@5%[m!n.>4l7*0_k6\nG5SDbXj=ZPu`PEU]0g2<pUpg0uN1bJ&+WAV,RC:1[-%rO@VG@@V&_lF\iRXnZcGm%@sZVL27Z[UJ^fH<1Xn1;]CDN@q,2(,j0O2dc]Bdr?u+@Ic'0LHCR5QV0T1',>rNCE6C4j\sPC]O`45%\I]c(GW@=k`?u's]3nh2c0ER,Mtam"YB4imMTEfLF&P\uH]rk^!m>h\"/B@Ua0o<'q!0/n`s`AkD9H%-3lS&ljpo%=D#r[cT.<(P%jcZ^s61O&c5B_?3\m0H5h/N.0^!YpK)<&c`/?i-&EH?H7*G5H^St&4Mgr=T5%4lXh9WK\T1*+!/Uc`a%&UVd!\g!5,dKc73F[_tH%$7i(d!nVD]p-?Fq.@)WW]l.'7$>3-AQIu-uW[ec&(r%@u3-ug2F,%#&OMGpjZR<I1pfK#k0bg-@nI<FDcP=`spdUsE1RpVu%FJ$6%5<+#4O[b"c>iG%k"t'3n:H3^,J\t%:H.?tn.*k.ZE/FX,KLLN2R4k)Dn;cW>B2:'^>2o@T6rAtRSoFDAU+pjK=#g(2?=0i=E.qcH%E;%4/"EJt:.8eMTRVtf_ON;,ZMZs/4qYMQ=/.1l!d_a];r=T,^!kZl_"1rPm8cSWbo"`iC//V$XgREc+JWPo_KX3%M"8?)[$tnJ]%m;>a^NY:=;*I);;"3^Ig+l;%*fZX`bni.um4-?0t=cdB**[U%Lp\"/&_AIuZme$a3p".TS3qf?.,2KASqQSL_=R0sQ/f;JScOY)"%DpCJHL7T7RQLK$F&thVVp8BA)<DPhn?d>p";0.\Qg"@-qhj`g]cnY*O&6G2kKQtJoCDZX6Ohic'5T4HW@[lC`m&98Zb/#XaEAj_e%:+`q0r,/gkb1[JSi/_J!A)G^9CWB*El<_`23N<B0HmsDtg.Ms5*WjjohoAmIr%_XFl)[EN/IuTAbb+j('ef/Cq`$+aW3Edg`+)/G%%Gm;gGEDm^Zf"NSNR7:24=RrWiS(73,4n6&E"@o;pQ*VabsHs:rJD`c"l>gb!po>V'QNT1*R/<Me,,&B5c1H1Eq\\hncLd\&#G3'%q8P3](lP2J;(&,9'#r;tls$ecI<cG=`pW-Yr:jq[^+&9Ll<EeZ.&A](X6R@+EIM^(T=3K.=(`C=hDFBe?F)GtA?U_.,7dK!Y!'3q%[FCUCH2Ei^6MWCSg'`6`X?(bl&$LJY=tCIoR]Pd%&&ne\&JO7%,UaVp+F8mN@m(8tElJhOEV2-h%S<UnB&_(j-N8+[eCMFf%ZYrU%02F1u)Q;jhb*ToGdC8>:*'R9L0nl4PG*HST$gZM^LT01X;-M;b_YhaH-lm57G+Y*E+BI.7o4qsiDoh9[N#Y$;Gc!I/D<Bf0LhE_a%bU%WJnP"Wm,";n]oVd[Il<j*RKon6Lq52$U6Hcl@DQ,=scp2*S+uNsj/6Y>"b8``"@*q;>aot!_@*s6fGi*C/(L$@Hj9Ta/a?(Y:%$SCbgHm)6RhF5^$VuO-l5IlKd?G$78Y3nMAf)!+T":V/NT\hL@KB3g]1;]dSILaAlWVS'mh#02J>ps<U]-#(fQ(4n6EqeTr1f<h1%kJh[fV3W4o"ndDeZb2/2>-VH*.Bi%-^^hY!TC9q+5,I/p;p)bclIDdHCTqXQkfl&:P4L9/,/+Y%-"YDs7IR/Pb,^>:?q`]7B%#,R%T5SuinVpBE=<?R(+\L%^]^"%FP_W$`2.k.7:FY$*f[m-S>cIu4:J(NJ<Xk;4mZ3*jo=2*Q)_i]M+3)@FH!Jb(#\MB$_Xes0D(?J;%L=[(5V=,bcS4I.0GY`gr\nVj4V/Ik:f?\4Sr*"Y/=_anW6dm@$'-!6<JLX7N+t$9p,^9Rf8CtVt9><Z\C]lab"JR9bIfJhpZQ>P"%UOE6uX3Ci%/VIHbH9VRRIt%VPk8M#gF5U%M6i:+D)rYTs&-(qad_^q:+'m#a?aA.tq>rgj7<\\*]Ff_GAaT=U4^:*OL$LAW$Fci%%_'rlg\SS6H_J*H/PK?@`@<^Da>GKDG+!6]_HA*.f$2ujnG^)j8\6E;MO&_19Ai'@5D@uJY2@90!QX\HdnSVnj!\b=&\qji0#s",:%=53NDh2BHk%/O(;P5j/J&,(>e'R!M(+^H]%A"NBJcNS<qO69q[2EcmZFM*KWiZ,#%Hs8q!@8PH#c^I$uObl)ZZeEFE(Cdb[22B3#%bP!5QR`0KOYrOYYAOdAg8P2V!/3B"bGa#"f<Hb1bq3.[Rn%0p)^\U[#[JS;mV4"Q8qHWUU8+0)!AoZ2,`g*4Aqcn0)N99Ki_7%X]%q`Y8XX?N!K*P6hoD)GXA5Mkih^f:VnVXjUcpA-.hACs4g'`9H-4Du:sl>q6Gihs<+!A"&0Oh_1[EcJ]@$,88JIe$DmAJ]mSP<YAE%6A[Zq]L']bSp0'=WIr1Z581a/WBat(q*b@M)a,Hlq*b@M435"T5j;$Kj$IbT<W81gleT\)7">c30<$'ToFqiW8H9cW34FZ1FD,HL%gXab!C5"IFFo8l\L@Sh15RBt\\eA*3/o>tMV)qQ9(5P"KV&SK@AX"P!g3%+HM7".dG68Q(E0KbaRYb.4j2oQX_Z5i3VV_iCTrfJ)%8?`=@T3([8#OJ(V:OnVXIU9iW'be2]Zp?'MMsTGoF$uaV>%GOSB<[T/V]W/,`.S5,XQ(V8[TV=VA_#(I'0BefLj&?61rGrV0fij<%K9?`)QebcF,b9q^EhmLYp1gWXd^il='FEG7>,%\DeM5@:nVOg4YNT#X)6\KM?6?i)J<(/i,NH<UZClte1Z3%@C#[j-^IHM(\N&p6%-Ls;8r#ZpUp[hbPLj5RZ8l>VT_;hU!Y&PV+2"nF:-J`]-&(0<NS<f=fB$fqsm?+).OV-]Io#0I;&jc`G^(;_+.%u(2^:=7/[n9fu%Yh0tKXmpmPhs->M_>U\g3J3L+K.fG5-$>Jl6(R@S&mJ6=G=P<k2XV,]bW(!2%]F)B4[r.[pAKd'&9NV8ehuE+Whu_r+/C6r<Z)a+%/m?;.JUTSjX_k@9$jQS@XE*VW6Nlioll5)K"1]6Egd9Cjg3u7,_M(ordn;XPJ*a#.C<+f\ecJ'MQZg"ur?DM8SL_8'bs\M@L/GUR%>%8B7$Qe<NXb-\g[nank@)SS[_T)&"lF%p\:?UAp^3ZSl;@1!bg0@b/:UdNOWG7o8&PV6<33VsBOGe>^oZ*"[VdgfU?ZK"eJ#B'I%SocG,.lpiSF\cke:EB+\V]WXFh\[!o*587>1%k1b+cE=Tb>*PFk0,@=cWQ%&i/Ul/bt`aq>u/\b$h=cQrYU[pfAVc"M@C,u0i7GV%X$$.qF(DL+HR$M30i;sm7p?_41K?Zo1-Z:@rG4cPNTk-BpTq![@0jsp]fOCfGAHg(2>^up@!i(Rg!4B&V;e29Ap:LEjc4M,[*?1S%/bOYXl=eqUT.M3!%hKQoRSkOfIc"P8S'.(qIh7$M`l.-[[ZJm>T7HXS@]^;5!lpu$D3`B+@;qArXO3CaWthPJ-FY't.*Tf5Nt3c;%lK.RP.4RULCTFPJ;D_OaF#8M1bj!`oN-@(I*>p_om'"*Z,'X8U"'(UB7"JHBj1ki]a#crjWU\SI]fgVrGd.-pGcJe.:$`4,Y4C$j%U4#Io_GQXaf)D-<^9dBQj)'/9E:*O"oBC5o=7>?P>\o;-AWQ$hn,>+6FD<)5Ed1Ei1IML?bD@1ICObd`)(d9Oo)pn:&ZH%&H_qNr%J[Fb.@[8G2d]713^FBiIT$/A"[p^3N/b;XT-.ea0m-8K:C6jTs;m3RCI#S:*37^f/3;"lUm+t2ic6i1Ejd#]_0EjM&UZF\;#c8ql%rAuR,pIeS3++(&$E;&m?>tO<!EQ^IK=-<p7/\]U^NakU=6F__s8G>=P%sA5(#*srrdINK6s*tGo:p?gO[ZLf]B<PTQ#%\-.LZt3J%1ceRVWKnpkeh<udn*(kik<F;Tp*4I'ZsONfrqXm=@t/R-ecNIa[Z63fNjeJ`5-8ZAlo08Qp*4I'rg%qXb62^2[$!l]H]<+5LY_eb%I*9s&]k/fYNDIS?MM%<WUVG2PbPTaR`1J$R3aK7*lZ`V?>5utpR3gpsQT\6Mc53C*48..s;XO:GQaMNh?!$'Tc7HU5M6s^C0QE\-%IA3hEQ0b\_!u],4Mj$ei$<Z#U>\"%S=)5.#]idjB3ht,jD(JJqDsHFQXi8*\.sIO1f"*SQ<\5=F!_$d,<2uVfN55(Mg$(XE!_>qK%T(.>/DmQ!0A\Cl3/pFu#:.(VCgMJ32K\MdB^)hsl`*D(SqoA7&#O>&>G[Hm>]0ksZ@rJP')f+:lo5OBSfp<5-NL,@De[O^[ILPX@%+Emlu7)V/$E7sS#+g;nu3U>t.lf5r@E/BED6;eh2?aFr!-%TM@3TU]=c:`>+6dotd3;o/dQS]bQ;=rUmIVj4;]5j&=Pp*8Yl_=Sn%9=b_P`SJiJV(Yq\MXQTm\uGTbL#S2+mm-a:+2riW3.-R1CoB6?"8Q^>WBE/7phPJQ_Kc>;eQr?WJsK@t1oP,CrK;1Dh1&Vh]g:5/%Di*XB\e2gPOhpSi2j?.b0=W/;/q-H"nb,5>EG[g.<@gYi=Z$8:Ar*0cVCt/P*S4qMQ_.>g@cF]kS2*`(jl_Dd#hIL,pC*N]@K4%o%cEVP0m5QiC*Z&=AIE=Ik*Z&>,h<u@qVf%`I&bp_3n,IL.11e.UG&C!bi#/Jf1\28^_;h5KN6Q)VDtK7jNX)n]2gU28B?G0UR[_\3%mL$RNpCOLOG!YeL3Gq:A#\i*(="e3Rju9scY2BdM0]Gc)R5c#;cZT\`kM-,N&%Z0JcT+6Nm7m3\^j0@R]:CjGLehH^`YpD_c8pOt%**<'$SM6agbdfW5E9f'BmJ]3RK#_FDmVdO/Rl;[3&)TmorCRTV@7te?L\l_hg4S\b;>^X3]`s$6T'SCt9UKZZa%qAu!"lJCfH)Yb%(VL!O;aZ"^)FB_+MB(2Sh@<\@'N]j]TP0&tl-M:YdSuU%_X9kY'om1#6d,/*l58Slg"%:b).Xpm+[6")8E9dSfSqmQO8pNqKl8+8%G%9+?!pg:=/7;f:a(6eCFF]nU$%LrV+9<fD<I,!+em_/51%f?8^aaPLZeFR,4$+]\QA`cR`5Ms`cQsj*l6NF5Hu'-S.6KVT&J5ac%Lu'g>IS+,9qTZ[%3jjg`W:(\,FY^Zs\^p4Xat#D&V3DW-CkLo,F1,s;["5>\k-U-2(DGlQfplATJ%%`"GkCR`p]A(+;u`0j7piA]%Y3Dk(VAK#c&b"`>brj("Nsf'/Bc=rtccb\Qn*t8e1#$ZnEsG*KgHqF'/SmQ#!a=DAWH@<!PoI3qhps5b$H%3JR$TgM/=h/En1B9)%:^OHo&=P.3?MfEW?bJd=Rn^#h)0%F_:/1kKDtf#D@Qlo[lHRS$]Ggl3"7g"!Q$Bq9l.ZrE#L&K'%KkTd&Q'8aI=poVP&/agh`I][%`:_18([2!-fDLj/<V98746>B2l5.[j<J!HNMOhFbR?N,(W<IbQ_sZQ:r53h*p]F@2c'&"B%eK^>/Bk$Cgf,ssD_;aCjhS$a5:LMg%XWqXfFUBt%03IW<[L=Y:2is<,4\!0ndCHk+4Ssg&lsOXhHt$#?:#bGDj*'kG7A8jaOkA=BBi&SkGeq^MnEWSjm$(o4]15>#lbab&%DZ5>UXkC2%`MILI;c>h\+l7ZM>A]nT:A?0X[tsoV)BW66l7fF1.u@&!FT+JM))\ndroC2G#K$]:JW6h!i?pUCjG7ZC+7&OT\dnUX%IV-r&'Wo)+kn.ADn+Pt%26'B$?hYN!m^j]<rcB,Vep1)r%Y(uFPWp.K)^hGe+QE%Ec_C3#]*DPsCgJ-KY?1_3f62h.3UeEF3VWKo%_*:f$]pJ]/+tG;L@D!Rq_!2_/nC&8=5@"J2c3p=;]R2NIAn/N%>+7"fcT%P3Dmn4l[u*K.[*uG[@SOXGi=&;6N42_PQD!]6?NLG>%FB5(+Or*)J]_I3CPD$DtXG:Gg+S.ms]#&h)IZU4pe0c'Q^N+JdHDOq:27BN7rAD4D\D;Y6F$PT:l82!Z+u'[LaO;6Pe%<:2=^V;F%J@@L6?(?dc%%*9Lnn+0>+34tIhm*QgXn/O*EdG3:)6bNbZ2'EW=m)8&ni']:jK,cee)nVNo@EW"s*`O`lcYID?`lo9f\)be8'[-N%#qbTfHs==7o6h'B?,lJDeRu?-p'dY9/H+IR_=:c?bV`(,XKhNcrp"4\l1X95qcL6[;eR_a1\UA9jc?gIX/j"<rqC!sa2P6;X7%]O%dpnB6%kHu3Y-iRun`01TN8lge3f8@$B.<&q84p,JEK8RbYBAHG]/OrBHEA438#u[57XK$cesHTBJ%ROd2`k@&54ljqJ)A,8:9X!D%Q!_u^`iE>@X5c'S9BT?])U;03(u,XEBKmK^ekXhG31gZI187VR>k=fWj7^LPVY<4A[V%hVf7"^.T:/P_%Q+;D=drWa]:c9-]Qc`N%6=N,5IF-Kq[9o:3p%PqD">jf/j?N*oQYL/OnG>-5T:,6'P-GC%4`NSj^:g-\YC1p#"oGuYBM<N=[]>``QP@t8=K.i)5]Al6iVp7,%\H@aOYS&W))tJ[AaV-n(38X`UMo>X[&F\rp>'KA6X;$FW7hrCRs2IO$#cZN==C[3uE*4Ybb<JZr.4;0A4?Y4pYZOnQ='nu$3kn]s%rh.3Ii-6\3JF`Qf1mnGWp!'VXMS_$-eT\LR!blrh$ht<95cZ+55\ikW3F*5K\b/fI5,X8_YkCVP$WaOE?4.=0ISGZoZJ2@"H-[5u%h*$`o`8I7\r,nVr(=(*IY,1CEGP/6QCBs0*DT!u-e%ndb]O`dZ''4pA(h0Z\pUih4pa;)X#\sQod%QE7:L$VE-3#YFZE5RrL_=Al%EmRTkCX6oMXoiXFna9m-;l1DuRQF)jn>0AaeJ.JtF@H,&!:[D>],OZUNC1nhQ?1D5f%U)q[E1$aMuP#`Uk;9tcE'Wt01Q_s6>B_n%i]f<8CfL1*b.M)!$lY>tE-4)4iC!Kkot'o,dW0>N@G_Jk``2O4D9%0*V=\V$n6t0+Y5A>rHaUWbp@;8u<pXU;Dh%WLcAtlpoCCJP%Er#]KGHp[I\!NRfrNDX,cM..crMTTI95T%R]V=J2L]GPm0T<qVPpM@Br?9H@A\q'bGl5e1U"_N<'>?L!/1m7cUhka>g:V!_.Gt?0%\G1[pZ=:0)H/ab`qh$so&HoH(ppu:&)0OXgFC$&0DCP2'JoDI$Q>(e%CI3TkiqY>87Te3TT?9O+3@1a]XAX?Y;[2rP?X4<0*EYhG%i_`dA!sEULh3e/7Fk]Kl3C<8'S!)[<>nMB)3CS0U08sr;&%dFg;f=`oJ$&o1!u!,.2C[9e+j.De#Q)Ojq(^1p&tp=1Mf2f3\*od+%(6H>g$`7XN#PiX.)tN,Sf.[U8Z;Q2^?+?A]hiGds?V8ZD,Bg[?@8=5qAp`c.].AD<I<q@Z0r6pBWO-BJ[O%Yq7,N=44"p`l"NKf;%j2L,(X7?i='4$Z$DX^0C"5)=VM^\pBSBLF&!VKj8Sc@=fqF6`oSkaqYqt*gI*BZ2sGJ8^rR[lSfr^s2/kiCY\S)l<%G)XmZ<+]ba%p<]us:5F>[IJhPurhl1]O5#f^H2^+E:?Q^s:iPuT:G%$e3eR$%=bApmNeBuR.$k^0mZlLP;)L[e?oU5ln:gbS?k7]@I-DU?dYjYJ%F>^hLfc5Z'B<*#Rf`(Z,7MDBgV?on@E('"[0.ia0g\ZSOKf<V%cU[Z,A"fi'KO]-:oUGT^#l'0BFU;G6l4Vm_O)bOBGqUDQ#fYKe%;n30G,?P)=c^j'T7paYW#o9E,^<7gi.KYT`(89kDJp8^rK%L]Y&JCC;mR>S'YOQ!,5_CqdO!acnkWoF]e%78bYa<P&rXuTQf&(lP%.$oIO7i*2e]'$-#P=`<Fdk$'7iZB<bJ9><m%j2rcs$pHYR1\S3*\tt-+5oV\dTu*##<8!^5N@($<#o[%6-mS4Ruon0A(FT&Tht+G%Ll^#E+c/fR!)k<9!Q`<9H3?9I9>Tl\IC;0!O.L6Rh;u#)LjssL1,Tu*5u"$c4,5)=-ks9oU/S&bI=sY:Xp9>b[E*Lu=fLi/g$EnO%#ik-?\`tE"SMW_LR6s7DF/e$?2+BSF*!\]?*=Bd86Eg*#S^A[RhmD+\ne(TMWM:j$VfH'Yq.Ei8\+Ydb.qZOb9U8WMb0HKU^,4F,%X'-T<$J,U3=PAJ&%#mR:]MOQM.E0@t3:Wr17L;JQb1*'2I^drHr4%JpXBf&Z7f&(Ph-gUHQM/8+(\[JbF*O-l0`M/jo;2G+<gCbm%r4(COW-Z_Ir2*@`S:d'I8[AthG[uF=<FcU/QA]r^D57hp;4FW\?:pI'4W2k*]eU;R+X>`N--DA_V_W)^Q<<7oR7+sN=;m!"hh-GY%i'43bn(r*r8HLO$ac"*eTl^i`1h64ZRU!_9ANAgJQkW;0CTbhYo#po#:[m[B?/E$@nGW6QC4B"XI1frQCmNU9GqWgEM-EjWd&Hec%JX\Oi&')t\s+a(rb.U[/'(NW0LN@f7*W&r"Qd=?fWdhN50E",b3E-j"#E='Ki05HPDDU5ljdu3llb3.23!-UummY.pBQ74C%FqR&%go:SL6Ag$6'6:>V$(($B'6h+h8.R#WmmdE5-VqUEJPCaSmsim;PZ>,#GAm;kIP\C=HZ@l89TL#p3kk#B"O#V-RiV'VER2NNhag#i%a+bZu*3qg&q,apC5;VONqFi>%=?,s+n:*4h".D"V2Z.kLZDgVPB]BUBISR@pW6+3B.b(>flGpUlo?^>6Y^6%=`Wa+[^5L?=djsiN%'Ur++HlSg5#Mp$YV@fW_"TLkO(k#DS5K6*:#8d%`r,_?Fh$=-(aFDXgBS%tDFb>\&^R?nKH,"P!l!S)1ig/3IRTlDKUmW@Vc1Acj%MJPB\VQb5A(*+rWI;G"+[N[C$oFkpDZc(8Qj[UeJn!XO+!B];D\>c=8`t1?/@#@@*l-`AB1<E_$@G&8Pf#T!S\PH!VhWN+'58;`e%8'sFGreKOQ0@Al-LaZY>NIZ5pp^;&E$>3Uab$P=5S6r78ceR.8o/e#'$Sa7c#TcH%(qA7',5MYIj7;h_A65oU4;</H3)s6<.H3ag%_[&2.CIdF<$;-0Y%q/<2o^i+-(M4"CN!,_/^L+!<^d>:3,9O'pIQcZof#dL5c0b8NftX\]$>b\$:P8]+^Q(7mFE^Ef/GR3$dE[$2%7+[I(nlY(%Tm5!fH?r`-]m.*dnbqh=?XqPE[(k/e\@t!^4iXZgJSSo<8h_4O"KmJDPqhoU!])qfBOa^)s8DtKJ+a4Qh:::8XmT;=%&t9&!9F!3G(]:Q>5CA*Wru#>#f[e];5,OBhe]'63&UO]!2X8M-N%npiFkcSjZ%mp>3ctP#FthJrHmnoG)g2QYFK9!'28`j4\nBM%%h9b+-a0'cD)iSn:&brPDC*&?/\&k?@mO*,abNB%'I),=1Ye[)rhnPdH>[<BG4Iod7_L@`g?eLfJG9#@\kdR#YV.P(GkLQ'e=C\LH%gFca@HrH\&S,?IcZYe5Uf/1Nif;uS:m+_(ui>URe]UZ3#lL/5Bm2n!.<u4)m/n&e147lWt2K=ppls61<Dk4R(h>T(_10.R]>&T6.%qs4+!df]W6fPVg_b9,nK-VNbHd_U^*J)+J&"Hs*'"WQ42N%CRWC[hJ#ebBL!GM?W(o%<s)?t3kaQj[+<$u'jT\aC;rLM(kJG1(Eb%b*HBK*$+IPoO(3fKm\XT]6MSS:H,FX[nL;UItFI-s"/9LU*(g-7tR0"B68RG8tfPc>hC[A06lK'3I)QU>rV9+#-6LEKjX4\FU]DN%O*(:3c)WYFJ-#[&0ll1MS.oLnr1O=Uem.@RJ_"p52j'#3FjG(KTN5[U%8F/hIE>i29XC/Te2>:#/_(jTf>-rN^8:*Hnn3m2>n\#V%f/WGa7eD>Xl46gCs#'4i-t$7"blg'_1uOh"9?^<#[-lL>b@"h7>;o4i!P/I#%(t7MJEAs:?l^$'Y^fte`6qAQ<uq:9!F<QmDX'7l%k_;P#BTA&SHJN0;*X`Xic1^)O%+km(kLr1)%U?pD]#S2c%:D3kGD>"1\(DfC>Vi$GgSrr=kKtS:Sl`Dh)E.S4eK)ZUX.X;MO!i]i%LJ>8IBYi;f9S9)DD`8QH7RnV1j#r]6B=c*<>RQ9;Zd&u3YDHl/LK]"0pZV(;B/@1hK:1A6J`jk)S$6S1!\aU%fu+&ulF'1f#d1OJ%C9T&/_0(DeAa$oA9TXRl.h<Lk(7*hM5Q^NXgOPb%]+-W;K-Al#Qib$Wg$h:5HQ(3Lp*=5"%?Rj%$CWPJ_*m\sX2$i%X9(r=n1%Ne%Xb&(+J9A*X3e4BK(P7Kt0H@>/0]2@d0G>6(p;d>>"\r-33+Q-q1'[bLp]Bt[L+U/s('<aMn`eP`d]"DRe/!.@#)$_`6F?uj3eC1F%K+k9H84#1]6F?uj1.)VQ,7#$uQ;ae08C]N-8_"H\C._[;"L4DI=D8q7=ER87X!t!tN)6Rd:Fh.^(mPCC):m-,p!S@M*X\bSX(1(D%M7`$2E`jZB`$J\*^k^Zl4*1RX^P6\$@-TY5(@3Y)H.N5(/[0[F4r-$k[MrcpHmX:U:bE=N=P!^Ee&4mfB0`P<:;EK[gLJ,/]<56:%"\u+&A,fI]nBdPMM-ulkpf8D1Ju'F&&?:*VFngUOi+5/H\o.BiTrW^D?j<P81*D(+GaTDclPT%2EXgY4%Ac-?:(Zb7PEdl6E"(9#%"&r:Q"!A`BAe+dn$%Bj#E8U*&Q(>eLE+$F2#F6#!:k],TVN!GeXUinX5[MfU+;38??XE[as8BjYO/IKLht=5YhRE.UjnA'?p?_VK%q[KA-dL/@XfHGA\8kF41:n*"uOH[NN2g(jki8_dQ-Q'-lh8(,t.!Nh=qj=:(85tA4;?$$3:AA!Td5J>KDtY/1H[>J;r`J[Xi83DJ%h9V#VhV[kS`%M<q@G3,OJp67+cu%64mgmF&GPh+an*YL.lkf\V[jHR/"$G(#VQ.;`##=T#TbRsTP^!$!.dueO?L/L.L:8LXZ,2q,%GCr%`LP<.cqh)03h8-e@]=X[OpVjo-Xj=bI\$Fe6.k!N7A#O3=N$qp@"LJ9GKXdNl]C12LDoS6h$^9e83H0ZYW]hg^F\=MM56pE\%#MU?c"@EY;F>!*)s%YRt+7lkl:X/j/M-oRoiWKLE$u=t7:2#pk+_@)?4-aB;4tZJ<o6t8V]X5KNY[$;/\cru'\pAQS'YHE81O*ok%e)H'mcEBq><\d-d;ggC,l])idWF/8BZ%&\Bionj#^GYI]p6QWqMZYm)h]3+/0+RCY?JP4\hVo`W=8lN/TarS&d_EU85oR_)RBY^.%dkjW8dj&@9boFQRc5?LIIWI=]4\!W]h[*n/*@*P$ge$*:?qcCt<N^Nj@sG\WT+_iA?plfkd05$[A$FFj@A?uFcu(\1KJ@a*4rnQ2%di0!9YV4C97)u<&k,K9`"@J3)k6h_eH!`8rTjVUDZu(2C$g5kZ+)<Rml.cToTu[@$VK$,:?8=k+2'2U=5hMGN577B$n7Kr-:0IlC%1b<'/grc5oHg.7d!4E(iRl%BX$l7OD8Jmo[?,3"e*>A2<h>)IHaioF`OcIe?G9$NmpitW#EMo$U-P2.R/1CAE@`QF#^O%!&m+0!?%Niukr_a$F@`lOB!%ua0e@q<.S1ns;B_O.k-GHZXiffE7![e.'\Ymm6j6N.PmE#=F0kpD9,&i]gX2/mT&/oG:%%%PRp6Sh2H-.@t/%!Wt8aFf5r^\bLeGbZ<R;%/o$_p+fhSi5UN=3+PpKPQ%6UieST7bU/B7Eb[R;Q>:hW%&d!D;,Wf'd$Fq]?j>AG@JogF@&*K1_eT5r%YHGJS5'+-CAS>VN"Ci4V3IoR^2D?)91a_Yhm0bY+nK2'C"8s#O"2Y8YD1[^4EU8`H(t!IHdbu3C5]eN*9]#[$(F"@RQ49nK%e,?a%[>FukOc@/:3&<f=F%F8\0!GuE!9*u=CjMT_i\/eH(PO_XkZVMOrVK/u=HPb^/+T$_CdaE<'r9;1`e25S/]e[*9!kX>.%@p0*_6^M%@6tP=LM7EAJ0nKE^toC;3m*fn3\N;"dp:`YL[MdHQ6mnG&(5T*jQM?>Z]MrO/D!6V6Sm@3B]YhFd;sqQ0#0?5BCOH85GM+gH^7nj%:f0_Urh+P(b+-\O.K/ML%m=dh;m:C.Pm'Mt==@d!RWZepPl9,uoe9+X$q;j?pGX+X0QbJ>lO]8$n4sgRX*in]l]*p46=fNL%T@(F%+ZjqRlXK!]n17clI_kn,M$:5K,;:Wtm_Mnd1>smN-5Bg<`0?(\6Q2a:nqX_i@Nd'U=LMXl'+9jh2I\S"f"e?udq5BXC8<oe9L=\[%'XluO%EG0HMLV6<]C12LRNlSNKEg1>\GU=8+)@5S@F]3.%\E+*>(]Rcl^S7F$<*kGjj/Yf_?qn%(2UA<RW_#IqQLlP&$*!OMG-ii%d^(Y]#jb;YOR`(20<A^g,FBWa8`&Z<'p+8s:dj)D.)_q_s0K^sV[/^t?6ogF*]Y>B)P>C;;ki07S?WnXDUaZ*\u"X@\]YSMg`n3)%53A7)-[%:4m'`li(]6Vl"id&?g]ZgKm=3Wk!eT%[JDfC!"$!-nF=U:A\(*Jb:$GH;]U>AP,;f0lLnRbVDHWE#nA2sG":t&iF"CV1%.NfH)+FbLVGb;VOWVTDQ`9b62+a?!hTAZKB-Lt$UjDJD5'u.Y:[hq57h&l57-GImg#<Zltgj:.7]JO/;"e-eDbAl@r#7^X\NX&q0%.+oVALhZWj^6s'\/6GXGTS`-X=kL*kUJ\^pPNVs)Bh!T@lE0\XO8G`Sd"=@^WftPdWbg%'2)En/J?HfjB@sBOg$2!i?2+s$8,1gk%<8p3'`8EI'*[F9-<]p.Unh9R3m6<#iD(19J3W!h*e3M9%_Lrsh-L\X/4ZNCsh]@aO0t.ejX@iDn/gqB_:l$2%DV"pN2K.lI;u4tm%D\#VAEf!cd#G0)*)^>;g"PHMW5.1.rnjgXa<;HhM_8ZoQi(9*S!j4-[<;I+Xo&oC)./J(C#J^=d`oA+I1m)_l9V*#\pVPBq;KoLZ%DN`N/QZ\P9d#!;E\aOiH)VTDX=>dlf#OQ:$_(oi\1Q:7<W2B`+)=X(undhDC@#/++/6u6H4L3V<=@6?@Fc6/NrsFO2Qt_*L5@Wj]%4]f@qlbB\\rR5DVmgetM8-TURPKID$]RiMk'RPI5Q!kAqoQ-#N)*qh?pLo6.gMqnW66[73mG'4BL+_nS:qE`YYra!q.$1\qXuLo5%DLaABg!:1gD$XpH3Ner!7PLEn6S;L>FOja[nV^YmU]DE-Dr^mWBOFD:jVh"qKEHs@$0*;<*m(_.jCKXY,oi7KPhh#53-^*1=TC8)%462fR/9-qE6$rV]MFtYumphrTk4H33mk#!lpqhB]j#8+6_YVfGIfPXdV(aJ+8X`7;>ZWq5(d3f6,6,hN_k@s37k94ukK;CurASno%J,8O)>Q6lW%g7^Ql%7(t_J[aYMu-Rl3(cTWdOrm(SL$k3k^i9hRO)J_k,aXNU)A?b2!-Kt>F;c`F?#l':6l8DM-(4/L5t4='V@kB%U^PWTDo8?.@oT4V,DIh6)\(D<BnZ#<JJbp?+b\R_EYT4KLF3dB-Ot-,8WjUVItUXG0iLV,9d?5po#h@\2,tQh;X4LQh8_W1c0=iB%_5>i$gM\i;1OBEk?\3i+Bu#:T*utaOLhSh:.U?,!5D.;9on;r>*]i!]9G2^35B0X#dg*,G((B._O=*eg55\4]&k\=d.`OU8/<dp\%%fn0466:HqE?_*uFQ%<!B9#B\3'9ND9(D5>?7D-6qd;o&<HMZKS>JnD9U7K:O9>\Yd2aTVNGaL3BPPS?Y<`LEp(1o!Wj)*f;+2a&%I8jNs+7m!A'uHC^!"=;-">A?<c_.&Rr#l"IbNRT$Y^^a;CfkbJ\W1tAPtS_2&u_HK#0g"<k/DtnUAku.M4Nt)5)&rZU#.Shb+o_-%>RBLA-cmS#ZfYGj0<T\.9bD+eSh*g&I'Mip;1bfWQF'Os&>SB&HG3q$i"TrEQ5![_+'8&M<Pj;VCm]*2%[n5'GLVOm?>LJbe?8H]%.c+^pbL*<4G]i6QAUdPETcD31gb_8AI$DRJ\9)f4W`s./gE*6Dig7MG)E&QJ3R[Ff&9gF81gYHo*4bNa:0aB9Id]m$V?_D)(at/6%:0nH1`/RcuEhq`VkZ@k&;DOWL99.eO4X][`np=Hdf6Ic:.Fe$D2)5^j+BTLA'!/"D.p1-]F5jnd^NUt>o4XM0V7[B2'G2W6\5eOl%0,->Kmu':S[Y-$#(F=NsDLeMf>q:.CdstGK!?U#I8!Fh4gQYc/T+q0FH+koAljQ:;WJ+ZYF(bmAV.)i<WOtrNC%P!e'k]P@mPbrc%A=)s\Csk2]*03bV#Cj\"l5HO:?i^dO"tXX[hM#t[FSNG*Bu!D0kQbFj&r`O\DP201Bcn<3\?TQ'?HSRT4Us.'$4k411'EKC7a)H]%8d"TYieGC2oJFl:+9`!nfPtU%`<^/&(@3K!(ZpY.E?k%Whjp77B:%68J@at.TLZgq1b=\T%Ik$,Gu=BhcNRUrZXQGC?,(dgL<X@j%WN-#YOrPYM\l_);YOdNcfO(Wq65UlpAnLCk\FI$]6N.k3HN"ekH?LSigp[Hg(EmK<MOYO3D'!Q['X1\uUV([ZaW#a,<p$#jX66*k%X(P@\&lOSB]'5BU&aXE+qWK%0/<dC[s!gj*4d&a0c,#qf6hI&/^Q68N=T_WbN[X&%N)sVC4>`EH0j-A-O]5'+XE#O'@RqY`eNfaN%W5Ke6"gEDqUuRLY<g./nJ\S]fNnehA-^F"TohB#k1uJc66&o^mXHJ7A_e[3`i^[Uj>h-Z5ZCFeJ:pG;iZ1IeOc6no9BgD)!;3FZ]%QJ>&*(rl28!u$.Rb_iN6TO(J:SfG6?HI1sp8FS8e60iV513I#&oJ)tGm(2M5HF-"LmFVP1a57k5'eH<N&F_&sN_=n(4H(Fi,`0[9%M]@8XaS?%lLegF:(WP_aT0/&S8Nami%OGVXF_].C`K)9Z%IgJP,/Jg?m$^*c0`@,o14i>1@iaYX)S#6^8udNC7rgSWR`!5qLJu6,%Z\Gu.Y)NnnMIQBAS:l#814/6@7NEuejC2\^_9(1E,u*TaT?QpR#6$OV7oLGV9ZuJSIcqL-Hg<=7rH;%'S-I^j^c_U/8K.Tq_#V1.%66RGA]**^uE,+q#_10-H"ETY@a@Z5(LjV`koH[&QW9G7DP63.&o(GS$nda(EIE[gE6/L":HrE`E2Jl2`]#4Wh1bj;F5i.qGO>m)r%FUa-jR3?i[b)EEt$2nl7:7[X,7=,Q!)#=@i9;";8Ic[:rnqI=p0Y'[P=d"NP>oAabm12eJoUd;*=2#n%D`J%ohH^@3nfc-9D36AX%(,pL[r/j5IinFm^NZ!t'h02"0'nMi[q3\>_%jjJDLm!TK]Xm-2]MV8<1j+'P0RC^Q(=Vd.]&dOgKA:5lJ"363kM5t3Jh(=ZgP\[b%NmO2M\7ncWJhVKsl,WnNIiU#qp9,)*mls5<cJNXSO:56'-3:i<-V,/5jmlk-_)6fWrJ-'?V&r:0B3:,&]^AH:l0].'f6tk/83t\[%q=TSdjI14\Z4?`[2;#+(Pu2^Ehtd1ii_H%Jn*^g"R;&8(e(>Ui&=:"B.TX0;d&%ohrupBGnJ[+od2Sm^j=TREG`<P:akOR"bgh26%phLN,)se%I\"MIpQ6:.1UE%1boIO=hb8a1u&Qa+,X-`oCg;$DAY%ORTEa*,fkdj<cZU>E,&?F(IOA'$i[H&E7(P+\'`=oSC9V+[+%ZPi:bXuk]oq,b'a:>')W(7E+</mm*#hmdt2nH73`rVN*'KZci5&2Y*M1^"#MD-01WK&h'G<<74/&=0V.[k,a@EO^.96''E0)j<>J%UjAM8-%RR+3]E3X!c8U_G!0gJ4>b8!6:LL`BK9<BeLeX!O-L'DiR*bQ3?2AZZ!9n\n1<"1Cp9m]s*&?i:o[<1M(&QBirCl@CQL)@%$k>sk39%Bl(X(i57c<XK\o7bej>H2mW_RLJH6YR?-\2nU<iX("po1<cP/GF$>;M4;M>OI?nXOC=8hu*q,ZWhfrs\NKR+QI&PMG+<%H2DRprStr#mgetMDCtu33F%B09\:''jOPIMP_aoCSuA?pKX;XJV'9Q+Umc(]IXl]ie-^^2<mdjR_F-'im[[irC+]SYU5KCJ"bR'>%RD:X:B#o<192<M52&omActtE!9WY84!E]QX+1NFZA#P_:`>F9b$O>5ui`'36jKg1oN0$gG_3%TkQoohTXMa(r8?r'[B;IY)DC14W%L1>2H"33m`.q3`P1PPefQAokLRj]74eN\N<qJO.]2S;.ZMO^@BkR/S#U8k<c\;SIqB1Vm-Ak@7qO,kIs`<dc_BpiK1&bMp"InYRG%iNFsmk&SRsIV+t)Na[K(G/;"=c&d0k&7eHF?,D^&!u[N\r0Jn,OAZU?8uTlfWEq%e:T0WNWr)3sV)iWGF7WmW@f-9DN2LW,!-E&-%5p,[I,8XE$j8\''P9f+g;4@n=Q,SRZ`(oud+1Vuio6p"&MA!'h;K!J<2Q4;\%FZ+`^'5@//F3S9>Cfb3419uTd2/??a7NpnWhFMQ%\b*ET6?T6mQ7np?3mt_F1H7";,33/.e/B^E#145l-P2Qj2<YXg!M)No`[,+o#\[%(M.VPf?eaQd,+.u_nO.-J_<cMS(YM[5;1>?W%Ge?&)Ae;73>fhNr34Sa.V+$GUQmJm+:2$(CZ>a8+FMu1-B,YU$_r$HV".LEVa_eh#XYJ'DQr$]tYe/PTJlWu"SMUgAKoi=CLj0'<%^C:#=;1BAeM`/X_!&MeVnDQ";VHeM)6?b%+!"k*]c$NL%<o$4U.&+-OmmYOhg)Q4kPHl0q0kHh/7,5\_)VCG`PI[X-$"TXQaOL2S%lqgIANk2b\2D1+`Dl64cLOoVK_K'V:i(<AXS2N7HU1n,(V[d$EH)MRk8C1<of_$dh/9DJA_R*:X9EaZM=Ag+Oq7*TQHNi@>2C.<M%N5D:X70Lk]hu,)jF0Q[E%%HJ]\ahC^YkkLKl`t4V2)m(i'ni8HSc:gCC/=cb*F).Y&==@mKU#86<FDIM":m#_N[@fY&1%@>bCL$n%SK[!U6Z?Em]TRZ"57kKL+*(X^$](V&OC7!\2S+=AM4R;S9pkh@)ER8$2LTk(\:dpu,kOC)ZjdN/W+"BcL4SGg-Q)G[$/I6&'I3?,%cUnAAV?P7"/;<")!SUXMr_g)\O;Z]-C!:!,<_6[3,k5^DHMKA"R=jnTJ7S/63$X;FHEO;Ba\A/MT9acf6M?OZr^PiZBcKf-(h7]_%7?=Kq@XDflJLQI`3QZWh!l[\q2>dKtn)>W0.V6Gj!Cn4&TAn=YI$$XD#=Zi_\0rIWq4Om/9%4FN.o?X8A<d<3P@FsAqbQRsXPA6J%o2:]6MibV`.Ptb*SB)OcKaLdk!E6>$92WAgrZ#*#Zii-,HV9o-dZ"/bh5AQ8M.:_ONZosTY#)jIa8XKkPT8&P*)jpI4K+a1L/%_+%BJbtf+N_ZRSK(I%J:CGc/b225?^H!=4A]3X;oR5G?pPmC1&sJ[FNn3p'9&VgcZ?i!>NO4[bgTJ;^Rg&VYoM:K3L</nNU8%@^S,(;%"]R<Tn\cJp\K$-e.K/c=O?V@:h^Z0+&'BoA@mgapK>'cF)01Z2b(@>P#EXm1cd4u:oWRdV76Dlh-i'bMKuPrXn,(H$Bub^k5D"Yb%bfCl)5"'],\iq^6qK:Y_)!c1WC*NA4*XV*JcA+I'&5:L"\]Wsi.ECkgT9bB0N<o'tT"X\26"pho'b5Br<R<JM)s#>T668TXR*Zs3%TRE\2M'^F1O4/RS9Gi8SE/ci=]eW%le>VMcp7qU&o;0DK]c9?/7t])cLa+#Yq'9N>]^J1`1[\]^*[I[3GafO8lBbH?YOP1Z33'SS%/Xc;q?Ip:Yr1Y)h`;.B>b5'#Y.d)jV/J[fF.6,*,Eq;L9k=>QKiT8;ZA#An=WBYg^N5&@BkEe7[H+'U%/[1ubc;1$?L$uoKF8OYR%qiXd'^+ZHWjno%EjSSL.$K%a_.9tc&NPbAeO79]/oWo/b,N,ADNZK&)5knGLJQNJ(W"TS2moUsI;%DE+5:[K%>7#I*Du`Zm*DU+K%/;PTa)TWdIK,NL"Y.U?p<G<N$^Jib2WL06I9<YR_B(X-C5!;f?^NX.D*g@h3HVk6LM_[5r^O0<!TL91g.0?9@BY/bR:FG]^rd]7B%KgJG(+F<jJ^l]o!'KD9Rg%a1ooCW0M.J->k'[LkBG<rG=CjGtEha,[Z%X"!Zd*5fZjPMA?m^o*VMW,@E7J)]eA0$dK4BAd*ckhk3%_fZ<jiAG%JdQZY"Y/;Eml$?"jN+GlPEs)R`NT+YIN]O#4)?"Q4:QJ98Dj4@u#A$H0Ri'sOG"ei$Edq(MU]I8YO&mA!fD'G3TAgB;%2dM*XM`Q(c:D%+N]L`NNiP9*d?PCeTGY7%dP'O^I*H\[:1td\IcAb'>;8tlb(n/_jSFTuHFs$=g<+PHrN8E&p9h(-BK)1JhRYVc1%[F;?BLr(Eq39V8Zl8SLE6)G@6P&`DG^!WN#l++5`Vkbd?EOpABF*c_[`&4j"l8@3l&*"uHl/\`0.@[E+Ugf!UUh/eaX$h%8'b>n9%$qQ1g4MTj,3^f-q`qP$N@_l'1#Ts5u2T3uFOmVoGA/#8uem.J'"ArS_<uhn1`Jndj#1G==NX28.#o4jd?6KOB'lk5l20,S`)&0PV%^'@=G9.5/XX5PrIZY4rUOU!(45<6T_*59Sp<Pe+5TV`U#&b0/_LO+Jcck2B?;"NbT[0]NcnW$V("jBXf%]X#_%a>s1W2bi!KL'"Q%3&"sEOmWdk!`m.QIVC]T#bI'+dBW3g`lgBr-N9Red_IDF%aYT-)]#Xcpof\u#=.J3+AR/52HoFX!cPAQOW>4MaO#2XOch1JIj]Q]%"ncH24bj^iPA<Me-m%6@@F3Uk`fKXT;L*e&Y:,r9D*PsQ@(@@?*"4)<S\dnd#R>E;!q#ab>\=U'-1Z$0,.n7f1Q4n(QW$hi%u#_F%&]P'QbWM6!F@5)L_^\U*&^@%*$%WON@)&B_mO1eLGEf5?"5V(pet6oq^rl4mP;_9"KGitmL/gW44DN2tW<#%.@pm)TPRIZs,iC>#%q5%lu1%[R>!Z<0Y!\#;L%5u&o4Nn@g(RQD3>^(GjPo5A]K,&+QWLPY&6&B/8aFil?Ff\iupi-j;2IT]t_[XfNXV63jJ@U1[^pht$%3%?dDm;W<AFtm<![6'1:J[PooYU+i,o;)_nM(WeR'=%;%:%'mc.]!-ONIZ]+k#\7d#0d\(5!oD_Mn^s!n+`0O0RmDcLTlWNhCsiR%nh;k/\Ij&7?-7+q#g3E_08,5FC5cnC.8Kt]<t!JuYX[6m0S@1U(r;T,V=Uu+gD.5XYUFUUV=TX2>YAhBM"r40gi]X7#*kH9VI0lq%#-qW1*\fD,`PG5=0qr/5(Ht**FhW'a$48ktiT2sN7tq6c@h(D'7qmS./S)NXG`Zck(Ddds-URb+BTqtFBq&uQOoQ/YYaZ4:J3sVk%aT!\L!er,1D.)rG`47U-^/A6I]M_j1BNsXBfEuK]/rtDUZjd*UP,V73aJKiciW@hg1$Tf!&@[Z;CcE&(2jV/ifVV!k5\(XAS,1VD%$7jN9:Ygao?Q#SU9]**0(W!"e>QGJS5'8*?46B.gW13<6TRaTc$j,ZhTl+*VHCmO[-9fpYW8"b*N^Z4h2X[F+KW//h;T#DMgj/IM%#jR/(_A%!T\Bu_$3^97H%=qFr:cHh'_&`D:FV>)@<<7AT@LT)5q;dND0fMe^9I/'ke."_L;hu.QL@8Ng.0AcMZIgOBU]Ehm$?9Qp%PF%1&`/Wd#;eVXULFe.f9gi$i6aVhhOt!2deW"N[];QQ<40tFed&d`$eu=ikV;q+4-hqF0)!`S[#S)c[YT;h33HcM9]MrL))sH\q%X/\gZWr/[tSADOWWgq=MTLG1iA5Tf`**2%eP!;lXDh_g98<?@\UR=D)%o\m[R5Ca)D?dYNh7UStM)BTUa&%-'bZrEOQF4KLHu0m8%":-(YF%T==Y4;lg4t.<\n%2CfNJX*Is%/B(K(mA!4OnIQr`'!XaX;4Z?Xff5*ho?S%C-HWgF0DS6!OhgR2kN@@l=ZIl9,a7/'%'f%SsS^RGeq\!a'=g!/+T$q@6#_I9OM"hWB$=eBF5#Q\q]_ojNkE4EW&<RJ21oi6U8sTPrY7(;u5O0^e9(]K'i0VgI1rm(iss(##UfM%o$gGHYV&^N70Id`gJL;j+r_><mk>[s4#J4H*Y+PuAV=e\8^AK0gDjKe%tgp5Ed>C$GS#H5@QS8rD2=f-mc%.PW)HGQ(_Ij6U!g?o%gUQ1raRSCkCG8CA_EZ>`1s"UTJBHu;\e[(bO:*uZnL]c\M$5fkMU^ek;enN!EKNVQ@LHNP)J8c]?jq-%;j1:o]TOadV*>a,&j7:*%pd.!:?3e[6+Sp+lP5\SI8d7=>$U6B`$XG2TX2p'S1$-R8DU&_"BIA"-1U(iB7?n&j^4C'9(79eF$Ymop)o1)/BuTrXi=PL.Wh/CF%+\ZmM1/(NW-oopFAWmg7;kRE+m]/WW1&4[#+51_n'%##[]*a&^(cfN";oLS)Hjb34>YrLIeD`Rue)!BV_]"sZeo<CHDI$W\Hf"CJ%>"jRKNHO7ceUtFqZ.Zku:D^@a_e5b$8StNMSVBl-Be#JuNp50JDj"O)(C*f`aXN&6E^I='r7\N&Im7bd"A1.lO.g(OL5g]AIF6uk%:l?21CV>P3T\GEXH/$,pE?Q@C($ON0;F"$JL2h7(,t_Aq04=I`($o(BL(9<pr*9Bc`\n)^'].$[U@E>C.8]+9edcta)[`5?F(B>/%E"*<?Dnp]?53-*<)?P/n3o;m=mR@1scViU&MrA'H^.gtZnPB++4heI+F9<jI]#aDc!u5k/>dmI::eqbZU'["a$mQ^"enm7P#UI`[%Slf*1C6&P,N/*5RQuc!(>@!R3$fDM@\-]=[SP*p_cHdmc_Aful2U3CeFP#LmK9:'hkkoPMP]Q(9`nN!tltAkm\$R%p;%^]2LQ1t]%-Dr&.HsIj_2hb5H&EYZpn-)dC_,+khfiXX3N^-t@I(0N%ZB1;VhG;cjEsR0s(*Q^d_\J(reeT?HGQe,W?#8emJnN.N[irX-%jVGd%AIc<K(uk^_`JbQbRQ_^P*_W7Fj1U'oob0kL+=l`s@ZY6LW+1)\'t?"+Zbd"l+U=<n8Yh#0L688dD"<u:BIjX<gm/'-n;rL$V.bsk%"$8B8`5B%6\9ll!_8_oOO)H[Y8Wu7a(;e[udOl0q$)n^lIN(.kXP,r^O%nd?f1U=tlu5YnFr)0X"ugJ!e#$o:ahf!bl&$)^f><Cp%L\EsJiWS)tKk^f]XW3iVf"8LqdX\gB#\*bu<0IF$)$u[f\jbX,(Q0A3\tGI"P@<dOfhVr9DB'WC;B#&3UZi.b`R5Ln4!Su(QmXL6%$psn]p"<cX4Qpsb&gN<9a1B?O)?!;oCYE2oDiT8(L`+R=_l7>sLJG=X[N+p_7^o$(!YOC1#amIA&@Dgu%1Ql"NkglXZ3[[C#[+Nt%.Sqgo#)Q:[47.kJSJU/s&j>qT[fj>X?PE_sB?fGB"jNB2=tBu)FI*kE@f^B6JuOLU#kBgC0T@O-(/Bs'RNAX>67i^BIA/(H"Whss%jG)&*UhWE$<3`s]:JLmPgrOTBRfW="nT]@$n(d?JiT"1\0m*Bq)M0-E%`]P4fI2,"Cbn*5W'&;"Ro#8V)^$\*,Z>NdcGB0dg^Sn"%eZ#Rsigq]o>!,?s,;<DjiFu]LXVD52^iUmU@uu<S1LY+fQEdBR&fOKIc3p(4S\]>9Mke-DA9g5R.S+T;ehHZMRO!K53ukJ]g;VuL%9EuE&^X6/HU3i13%#h4!FMN?.>.77qh_.'(s13NVeI':Tmb,k8?Vb=DpK(.ES*.-XG;XR;rVMYBZ^7^_p^>^Y=3mPY>`CoHrSrBH%"E'?g(Q6P/[DMqKK/V!)~>%AI9_PrivateDataEnd