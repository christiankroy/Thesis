%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: MolCel2013_FigS1.pdf
%%Creator: Adobe Acrobat 10.1.9
%%For: royc
%%CreationDate: 2014-04-5, 9:14 PM
%%BoundingBox: 0 0 368 503
%%HiResBoundingBox: 0 0 368 503
%%CropBox: 0 0 368 503
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 52323 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:MetadataDate="2014-03-28T06:14:50-04:00"
   xmp:ModifyDate="2014-03-28T06:14:50-04:00"
   xmp:CreateDate="2014-03-28T06:14:49-04:00"
   xmp:CreatorTool="Adobe Illustrator CS5.1"
   xmpMM:InstanceID="uuid:8f8a86b7-72b6-3140-a5cf-9c36b6d042ac"
   xmpMM:DocumentID="xmp.did:F97F1174072068118C14A856FF5F266D"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   illustrator:Type="Document"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 9.90">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">MolCel2013_FigS1</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="176"
      xmpGImg:height="256"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACwAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FWH+Y&#xA;NB80SedLDX9MaKW1srV4/qU05iR5Cs1QQIZSGcyRhZA3wgNVW+HFWM/8qk1WbVrUz3Ri0mRpZL+C&#xA;C6lHDlLKyrCCnqVCegoZZF+y/JW5DDap95p8v/mFPqVvF5c1aG10L6vHDdWtwOUlUJV+EnFm+OMg&#xA;VLVBFcVY8nkz84I9Zt7q31mKK3ikt0nV52k9WCKWZ6KvoqqKsTqjJ8Rc/FyWm6rIda0Dz5f23mS3&#xA;W9T6vemH9DQmXgYo0mrOjMkIYNKgPEksBUKwIBLKoW0/LnVrPyjDY2uoTRa3PLZS6jd/WpnH+jSB&#xA;n9JnDUqta0UcvbFWL6X5X/OGfUZNJ1e9mWJJZLz9KQTrHbUkvoLiONFWPkZFX16tTvxpQKxVewaU&#xA;l/HpdmmousmoLBGt5In2WmCASMKBdi1e2BUVirsVdirsVdirsVdirsVdirsVdirsVdiqhLqFhDcp&#xA;ay3MUd1KvOOB3VZGUOsfJVJqRzkVa+JA74qtk1PToo5ZJLqJUhbhMxdaIxAbi2+x4kGnhiq76/Y/&#xA;W2s/rMX1tEEjW3NfUCE0DFK8uNe+KtHUtOEywm5iEroZVTmtTGvGrden7xd/cYqukvrKKJppLiNI&#xA;UUs8jOoUKKkkkmgA4n7jiqEvPMnl6ykEd7qlpayGUQKk88cZMrU4xgOwqx5DbFUcZ4AvIyKF8ain&#xA;Qn9QriqEfXdEQ3IfULZTZK73gM0Y9FYgDI0u/wAAQMC3LpXFXJruiPEkyahbNC8ckySrKhQxRU9R&#xA;wwNOKchyPbFVWTU9OjnFvJdRJOwBWNnUMQX4CgJ/n+H54qsi1rR5r2WxivreS9g4+vapKjSpzAKc&#xA;0B5LyDAio3riqvLd2kMbySzRxxxqXkd2CqqqCSxJOwABNcVVFZWUMpDKwqCNwQcVbxV2KuxV2KoK&#xA;z1rSr3UL7T7W5Sa900xrfQrWsRmXmgbt8S74qjcVdirsVdiqU6z5Y0vV7yxu7z1vV09xJAIppIlJ&#xA;WWKcCRUIDj1LeNqHwxVJl/KfyOltHbR2TxwwyyTxKk0q8ZJYTAzghq8vTNAeo64q3r/5X+WNdhca&#xA;j9YmumjRFvGmcyBo1YI9K8DTnWhHH264qg3/ACW8hzvLJd2kly8lApeV14oEVFUBCoNONakVqTja&#xA;q0n5O/l+9qbY6cREY44TxlkDcIi5X4g1esrffiqqPyo8k/Vzbmzd4frMl6qSTSOFuJKkyLzZqMGY&#xA;sCOjb9cVQWn/AJKeRbbSP0ZPbyXkbD9/JNIwaVuDpzcJxXlxkIJpU96nFU2l/Lzy3JdXNyFnje8S&#xA;5iuljnkVJEvECSqyg9KIvHwoPDFUtu/yW/L26blLYSV3rxnmWtUWMA8WFeKRgDG1RUP5UeRoIZ4I&#xA;bAxw3BLTIsstCzS+qT9qtS2Nqo6n+UvlG9X4Y5baYvAXnjfk7R2/pBYm9QODGRAtVO3XxNW1VrD8&#xA;qvJNgyva2bpIiTxRyGaVmVLlGSUAlj1VzTw7Yqyq3gjt7eKCOvpxIqJyJJoooKk9cVVMVdirsVdi&#xA;rCNA8kjy15guPMN3rplfUvWj1GO4SOOJ5Z7j1bf0WBUp6dWQKxetdqYqzfFXYq7FVK6u7e1i9W4c&#xA;RoSFBNTueg2yGTJGAuRoMoxJ5Ohu7WdVaGZJA4qnFgaigP8AHGGWMuRBtTEjm39Zt68fVSvLhTkK&#xA;8v5fn7Y8ce8I4StS9s3l9JJkaTiG4hgTQkqD96kYBlgTQItJieblvbNgSs8ZCllJDDYoaMOvbviM&#xA;sD1C8J7lRJYpCQjq5ABPEg7NuDt45ISB5FBBSu382eW7mF5oNQheKO1S/dg3S1lZ1SXf9ktE4+Yy&#xA;SG4/NnlmSK2lj1S2eO7UyQOsqkFFR3ZyQfhULE1WO21OuKrZfNvlyLSYNXa+jOnXT+nb3KhnV3+L&#xA;ZeIJP2G7dslGJlyTSt/iPQPqJvxqNubMLy9dZVZacPU2oevD4qeGPBK6paVG1zRkt4rlr63FvO6x&#xA;QymVOLu5AVVNdySRtjwHuRTY1nSCvIX1uV4GXl6qU9MHiX6/ZrtXHhPctIwEEVG4PQ5FXYq7FXYq&#xA;7FXYqxrz60a6TGXIArdCrdKnT7oAb+ONgc1pMfMWszaTYrcQwLcSMX+B3MY4xQyTt8QV9+MJA264&#xA;qmmKuxVDX9hBexJFPUojrJQGlSvY5VmwxyAA8rtlCZjyS1PKOmJeR3KNKgTn+6RuCEPyoPhofhDk&#xA;DMMdmYxMSF7Xty53+tt/MSqlD/Bts7mSS4kD+s0qhOIHH1WlVSSpYkc9yT/DK/5LiTZkfqv/AGRI&#xA;8+rL8ye51x5NtmgPozMLken6UrBF4mMOqsOCruBLX5gYz7LiRsfVtR26X3Dz+YCjUm9+Tf8AgnSx&#xA;KrrJKqJyCxArwo1diKb05N1w/wAk47uzt06fjmv5qS638rSWWr299Y38kMIY/XrRkR1mi9FkVASA&#xA;Y+MnB6r/AC06HMjT6KOKRkCd2GTMZCiwS6/5x68u/WtN+oTNb20SxJqctaTzC29Z4yvEBKyTTK0n&#xA;If7rSneuY1Wrxf8AOPXleO1SP69dNcxz291HcslsaSWiTpEvpel6Xp/6TV4+PFyvxdWqrbItN/LW&#xA;wt/L9loF7eS32nabdi6s1KpCwURFfScxBKj1JHeop1p0GWxycPLuQCQlH/KjPLqz3UkN7cxR3XJf&#xA;QCWxjjjZ+fCJWiISjBeLL8QAIB3OW/m5dzPjLafktpBvrxpLh0sZOBs4oqKyMbj6xMzUUKC3FIwV&#xA;FQo61x/NGl41N/yH8tNp0dmb+95xcSlzzX1Ko8rj4uNacp+le3jh/Nyu6C8ZehaXp8Om6ZaadAzN&#xA;BZQx28TSGrlIkCKWIAqaDfMWUrNsCicCuxV2KuxV2KsW/MSGabRolhuGtnD3DGRFRiVWxuSyUcMK&#xA;MNj38MBB6K3+Yc0kOjRukRmblcLwXrRrG5Ut3+yDXCb6JCO84anf6boklzYsiXCn4WkTmoCqzn4a&#xA;r140xQivMGpz6ZpUt5BEs8qNEiRO5jUmWVY92CuRTnXpiq3UdcisNE/SskLyKViIgjK8i0zKiirF&#xA;F+04qcIFquk1mIaPDqcUTypcrAYIfhVybllWMGp4jeQV32wKu/TNoNIh1QrIIJ44pI4wvKQmfiI0&#xA;4ry+Is4GKom0uobu1huoCWguI1liYgqSjgMpoaEbHviqrirsVdirsVdirsVdirsVdirsVdirsVYp&#xA;5UZ/8R62pdirqkrKzMw5/X9Qi5UJ6+nDGn+qqjoBirK8VYp+ZErxaJCyMVJkmWo9OtGsrgEfvCq/&#xA;x8KnIz5c+H8cvjyTFU/MGb0dHjfgX+K4XipUH4rC5WvxlRtXx+VTkrA5opd+YbhPLUzGpFT9kFjv&#xA;G46CpwhVTz8xXyrdEO8ZEltSSNPUcf6THuqAPy+7BRPJQpeZLSW88lQ2sX95MbBFqwTc3EI+00cw&#xA;H/AN8sVBWNFO/kPSY4XWOdk0tY5HDMqt60FCQjRMfoYY0DzULLqe5tvy+02e3hW5uYYtMeOBnEKy&#xA;OssBCmRuQQE9z0xsDnyUIm11G7sfy/sr6GJTdR6dbskRIZeZiQUryjB3P8y/MYkqjrPWv+dWg1u+&#xA;Th/oKXt0kYrT9yJXCgFq03oKn54qubXYX8uS63axtLGts9zHC9Y2PBC3Bqg8TUUxCu0zWGl0M6lq&#xA;MX1NoBN9bSvPgbZ3SQ/Dy/32TQE/M4qibLVLK809dQgc/VSGJd1ZCPTJV+SsAw4lSDUYAb5K3pup&#xA;WepWUd7ZuZLeXkEZkeM1RijAq4VhRlI3GFW9P1Gx1G1W6sZluLd6hZENQaGmKofQtZh1jT1vYYpI&#xA;EYkCOXjypsQfgZxupB64qmGKuxV2KuxV2KsU8q/8pLrP/GFP+6nqeKsrxVin5j39nY6LFNdyrDE0&#xA;k8Su3QvLY3KIv+yZgMIWlXz/ADQw6RG80ixpW5Xk5Cjk1hcqoqe5JoMQFb/MFgvluYnpVv8Ak2+C&#xA;6VX88uE8s3DmRYgstsTI9OK/6THuakY0TyVQ8w2Ud95Ngs5YhPHO1hG0LSPEGDXEIoZEBda+Iwjm&#xA;oLolYeStFVCFYDSgpNWA/fQe4rgPkrVYV8kaQZyoiC6WZC9AvH1oK1rtTEi9iqnctCPy3gZ3KQ/o&#xA;+3LOpYELwSpBQhun8pr4Y13KvjAb8sVEbmh0QcHNSf8AeTY/Ean6Tiro1eP8vLlZH5uljch5DtyI&#xA;V6t3pXEBWpp0fyJrU9uwlRk1V4nT4wwM05UrTrXCdlWeVLu+uvITXV7E8d7Kt89xE6GJxIZ5iylG&#xA;PwmvY42DySUd5Hdn8tW7tG0TNLckxvxLL/pMmx4ll+44lCh+X/8AyjkP+x/5NJiVd+X/APyjkP8A&#xA;sf8Ak0mJVFeUtdvdZ017m8tBZzLIAIg4eqSRRzRtUE/sSj9dB0AVF6LrNvq1s9xDFLEqMF4zBQSH&#xA;jSVHHFn2ZJFIrv4gHFVTTdWsdSjmks3Z1glaCTkjx0dQCaBwtRRgQRscVREVxBNz9GRZPTYxycGD&#xA;cXHVWp0Ir0xVfirFPKv/ACkus/8AGFP+6nqeKsrxVjfnxEfSowyhhW6NCK7jT7kg40DzW2/PX/HL&#xA;j/6Ov+6fdYhWvzA/5Ryb/Zf8mnwhUT5y/wCUfm/4zW3/AFEx4ArV+6p5csGchVWXTiWJoAPrMOJI&#xA;G5VLdQOof8q7086a0aX/AKWmfVWmVmjEnrQcS6pViK+GO3W68uaRzWX+m/pT8tNP02eQxfXINNgl&#xA;li2K+pJApZa/PbCDRQrr6dp+W9lyJ9O30+0q3U8USPfb5YCqqJUP5aiWtIzo3LkdtvqtamuKqcss&#xA;b/lxfTRvyiawu3SRD1UpIQVYV+g4eqoLy/Ok/wCVU86PJIslrfusk7mWVgXmNZJCF5t4mgrhlzSU&#xA;40x2fyxeO1OTSagTTYVNxN0rXK4EkAlTzX+SwR5dgBJY+rc7mlf96ZPDJIQ35f8A/KOQ/wCx/wCT&#xA;SYSrvy+IPlyKhruv/JpMCpZ+UdrdW3lqeO6RklNyHAYRg8JLaF0P7tnXdWHevjQ4SAOSSmnkX/jl&#xA;yf8ARr/3T7XAUKP5euWsNSJmWel8w5IAAKQQ/DsW3HQ4SKVvyW9u95rvosjFL6dZeBBo4nlJDU77&#xA;98SFZRgVinlX/lJdZ/4wp/3U9TxVleKsZ8/xs+kRhZGiIa5PJOJJAsLklfiDCjdD+GEKv89f8cuP&#xA;/o6/7p91gCrfzB5f4bm4gE1bqaf7rf54qv8AzAt/rHlO7g9WWD1JLYetAeMq/wCkx7oaNv8ARjdK&#xA;r3n/ACj+n/8AGbTv+omHFUJ6Sy+SdIiYsFcaWpKMyNQzQdGUhgfcHCq+EU8m6KPD9Ff8n4MVaH/K&#xA;B2X/ADB2n6o8VWzFh+WjlftDRiRsTv8AVfBdz9GBVK2LyflrOZvtvp1wZKB03KPXZ6Ov+y3HfHZW&#xA;4YIIPIWqQW1TBFHqaQ1dn+ETThfjYszbdyTjd7qUZpYkHli8EqhZBJqHNVcyAH6zNUB2Cs3zIxqu&#xA;Slf5N/5R+H/jNc/9RMmJVAfln9d/wpB9dEYuOXxCHkU48F4U5UNeNK++Equ/LiWOXyzE0asqhgKO&#xA;jRmojQHZgp+nEild+Xlv6GjSx+o8tXgflK3JvjsbZuNfBa0X2xJVU8hsG0qQivW1G4I6afbDvgu1&#xA;U/IDztY6iZoxEwvmAUNzqoghoa0HXwwlV/lBQLvWqV3vJjuSf+PibxwUrXk4ILzXOIILX0zPWu7e&#xA;vKtd+vwqB9GNqpeVf+Ul1n/jCn/dT1PFVTyxc3UnmHWY5Z5ZYwiSJHI7MqN9evofgUkhB6cEYotB&#xA;tXrU4qv8+KG0qMGvW6OxI6afcntjVqp/mFbxXGjRxyokicrh+Mih1qljcuDQ9wVqD2O+KrPzMiaX&#xA;ypOitKrFgeUJVX2Vj1bam2/thCph5y/5R+b/AIzW3/UTHgCtX6K/lywVwGVpdOBUioI+sw4kA7FU&#xA;IY3k8kaTGkrQOy6WFmjClkJmg+JQ6utR7qRiq+AEeTdFBNSP0Vuep/fweGKqVzG0v5cwRqqMz2Fs&#xA;qrKOUZJRBR17r4jCOar4lZfy0RCFVl0YAhBRQRa9h4Yq2xK+QL0tuRZXdaDr8MnQb4Aq1JxceRtV&#xA;nCPGJV1NwkqlHXlNOaMp3UjuDhI3VGWf/KP6h/xm1H/qJmwK7yb/AMo/D/xmuf8AqJkxKoH8tZLm&#xA;TyrA9zCIJi1DEH9QABFCnkAvVaHCVW/llJeSeV42u4Vgl50CK3McRGnE1oOoxIVEeRf+OXJ/0a/9&#xA;0+1wFVP8v5hLpErUpRrdf2h9mwth+0F8MjGXEkilP8u2uzp+pfWgok+vuF4jiOHoQ8duUnb3+gZM&#xA;oV/KP+9es/8AMZN/1ETYqt8nRRJe62yIqs97MzkAAsfrEwqadcSql5V/5SXWf+MKf91PU8Cu8q/8&#xA;pLrP/GFP+6nqeKqf5ox6m3l2F9Ou4bKYXkEUk1xBLcJ6V2TZyDjEVIbjcbMdvGnUKtfmo9xD5Va6&#xA;t7tLN4Jl5yyW8l0vpTK1vKPTiZGr6czFfeg6kYq7815p4fJtzLBcR2siuv76aGW4jVNxIWWIq20f&#xA;Ij3oOpGIVEfmbctbeRtTuo7y3sXgWKZLq6R5YgY5kehSL42L8eKhd6kYq155lvdM8iXE1nPGt7Yr&#xA;avbzyQvNGZIZ4ipaKNufFiu/xfCNzUDFVLzOZ9M/LctaX8CXNhbWjWt9JE0kDywPGYj6cbk8ZXUA&#xA;UY0r3xVvUPrf/Ks4JtLuY3uraxtbqzumhZona3EcyMYg4YI/Df4qqPGmKqd9cyQflStyLhYJodKh&#xA;kS4mgcIJEiUqzw8uaKWG4LfCOp2xVtr6P/lUi3SXcbh9DX071Y5PSLPahVk9InmE5GpBNQOpGKqE&#xA;OpxJ+UE2o3N7HIv6JnluL+GCR4g5jYyOIVPNkRq9D0HUDCqlo+tQXv5X6ncz36yTx297+kb23tpT&#xA;Gk0ytO7xW7H1HQCYMu4JHXiagBUV5XvnHkC6a/vzeXlmt4NUvktZEBuCXlmaO3FHZQZPhpTl1FK4&#xA;q1+W2tRt5Nf63c/WrrS3nGpTw28sSFyxuD6cTcnb4JR06+GKqP5UavHN5WeKa5+t3lkeV00VvLCO&#xA;DoGhKRMZHPKID3PYUIqVa/KjWLW48rlP0jFqk1usdzLLaQSxqsNxEJbdPTYyOZPR4lgOjfD1GBVn&#xA;5S6zHd6JdLJerfzJ6F0ssVtJbA2c1ui2hWJ3kkYmKDc9OXJRXiTiq38p9ftry0vrA6hHf3cLRzho&#xA;baW2C2rQRx26skjO3qCKNTJ2qaCtCcKqn5Xaq9wmq2kspuZDcfXYbhbaS2j+qzARQIRIzn1B6Dcx&#xA;tT8SlVP8tvMVjf6x5is1vlubn67NcQwrby25jtmlYqr+qas6tJ8RAA+kGiql+W/mXT7vzJ5j00X6&#xA;XFzJfXk1tbi2lt3jgt7j05hJ6rEsyTT8ahQD235KopUf5D9eTzH5rllvEuBFdi0igS3eE26pLPce&#xA;nI7O4kkJuy1VFOBU/tcVVb8mLcL5u80rNdLcenLFHDAlvJC1vEZbi4CyyOzLI7tcsy8P2OLGnKgV&#xA;Zfc2ttdRejcxLNEWVzG4DLyjYOpof5WUEYqo6ppGl6rbrb6lax3cCSLMkcqhgJENVcV7r2OKt6lp&#xA;Wm6nbG11G2ju7ckN6Uyh1qO9D86Yqvu7CxvLR7O7t47i0kXjJbyorxsvgVYEYql2t3vlGiaJrV1Y&#xA;p9aCelp11LEhkHKicYnILfEu1B1GKpjcWFlc2bWU8CSWjqEaBlHDiOgp7U2xVptN09tOOmNbRnTm&#xA;h+rG04D0vRK8PT4U48OO1PDFV13Z2l3ayWl1Ck1tKvCSFwGVlPYg4qsXTNOTThpi20S6eIvQFoEA&#xA;i9KnHhw6cabUxVo6VpraY2lm1iOmvEbd7MovpGFl4tGUpx4lTQjFVkGi6Rb2M1hBZwxWVx6nr2yI&#xA;qxv6uz8lAoeQ2+WKqsWnWEUEtvFbxpBOWM0SqArlxRuQGxqOuKqOl6Fo2lWklnp1lDaWsrvJJBEg&#xA;VGeT7ZKjb4u+Ku0rQtG0hJI9LsobJJSGkWBFQEjpWnzxVdpui6PpacNNsoLJCkcZW3jSMFIhxjU8&#xA;QNkBoPDFVul6Doukqy6XYwWSuscbLBGsYKRDjGtFA2UE0HufHFWtP0HRNNmkm0+xgtZZUSOR4Y1Q&#xA;skY4opIHQAYqrWOl6bYCQWVrFbCUhpfSQJyIFATTrtiqjY+X9DsLua8sbCC2up6+tNFGqO3I8mqQ&#xA;O56+NB4DFV1noejWV1Ld2dlBb3M5czTRxqrsZZDLIWIG5eRizeJ64qvs9K02ylmltLWK3luTyuHj&#xA;RVLnkz1YgbnlIx38TiqrFa20Us00USpLcMHnkUAM7KoRSx70VQMVVcVdirsVdiry/wDMz8uPMvmX&#xA;zEbvTWt1tJ9OjsZJJrh4zFIk0snqNCsEwnWko+HmlfHCr09QwUBjVgNz0qcCt4q7FXYq7FXYq7FX&#xA;YqxnzD50l0bUPqn6Fv79SgdZbOFphVq9aCgAI33r7Yqk8n5w6csRmXQNbMKGX15msyI41tyRKS4Z&#xA;hUcTQdztiqIv/wA1LOxm9K58va4pNwlqrizBRnc8QQ4k48eW1a7mlK1xVbY/mxpd1c6dE+j6rax6&#xA;tNDBY3M9uqRM068lBbn1ABJ48thXxoqzjFXYq7FXYq7FXYq7FXYq7FXYqg9Y1ay0jTZtRvmKWtuA&#xA;ZXAJoGYKDt2qdz2xVKLPztZalHH+ioHnmurJr2wWZ4rcyih4qYnf6ylXBWphoKHFUjPnj8xYPRe7&#xA;8kMsMlwbdmTULeqczGsLbgVDu5X2xVkupQ+Yb/Trmya2t4FuonhaaK8kEih1KlkJtWAIrttirCov&#xA;yq1mO1SxGo3P6PDySTQfpKUGVpPTHxsLUAhVi2+GtSTXDapV/hPT9C1S2nl81/Uru2uPVMdxrwQu&#xA;DMJpoZFa2WqSuo5L8wKVOKs8HnGSayvLnTzpWofUoXnljtdSMrBUUnfhbtStO+BWSXU3oW0s9OXp&#xA;Iz8a0rxFaVxVIWuPNWr6A/p2UOmT31syxsbxjNA0qEK9YoWXkteQo2KsNn/J/ULhQ02o3rXPJXNz&#xA;+lZC5KsG3rZkEbMPiB616gHDaoU2Vlp9qumz+dViFq7fBJ5gVZAKpSJgbapVRHTiR3PiaqGQ+Sde&#xA;eGwttGtLuDV7gGT07ia6uS7LVnVOTWvECOOijft4nBYKWZaVey3ln600SwyrLNC8aOZFBhleIkMV&#xA;QmvCv2cVReKuxV2KuxV2KuxV2KuxV2KsX/My3WfyXqCvci1QCNjKxKrUSrxBYJKy/FQggfapXauI&#xA;Vjvlq2nu/OehatLGLhF0GOK31C1T1bVkIBYi6Zkf7f7JiU7jbaoKs080SvFpQkjhe4dLqyKwRlA7&#xA;n63FspkZEr82GBU2JABJNANyTirzwXF/58v3SFmh8rR8CgNONwKkiWRaAtz2KQseAX4pFYsEVjvv&#xA;0/H4Py76iT0DK9I8o+W9JiEdlp8KMKcpSilyR702+QoB2AwSAPNIFK3mNVXy3qiqAqizuKAbD+6b&#xA;CAlE6n/xzbv/AIwyf8ROKqeiSvLo9lJJC9u7Qx1hkKFl+EdfTZ1+5sVYVf3Ooedtal0yzmMPluxk&#xA;ZLqWJv8AellJR+dNmj5BkWM1V92bktBjH7Pxt+v8VGR6BmGk+W9E0mJI7G0jjKAKJCA0lB25nem3&#xA;QbDtid0iICZYpS7QP94Zf+Yy9/6jJcVTHFXYq7FXYq7FXYq7FXYq7FWN/mNp0epeStUspbm2tIpo&#xA;0EtxeyGG3VBIrN6kg3VSBSuKsV0zR7uD80tFuEaF7G30CK2VxNCwPANQ20Yb1WjNftsteu9MKoq/&#xA;80fmDN9Xhu/J5gtW1CJGuRewHisc8LwsV6kStVajp4Yqmn5i3800Fn5WsTXUPMDmN+vwWcZU3LtQ&#xA;dGVhGfZif2TiBbGRpkVna6bommJFzWC1gA5zSsFBYkDk7Ggqx/piTaQKRUd1bSQmaOVHhADGRWBX&#xA;iVDA1G1OJB+WBKA8yyR/oHVIuY9Q2VwwSo5cRGQTTw3xVFan/wAc27/4wyf8ROKsZ17zDf6Z5HtZ&#xA;YYvR1m/SGy0+AESFZ5loGFBRvTjVpad+NMavkgmgnHlTQYNB0C006McTDGvrNWtXCgH4u4FKD2GE&#xA;9w5IiEwtb+xu15WtzFcLUisTq4qtK/ZJ6ch9+BkqevDVB6i1kYogqPidQSVHiRxO3tiqB0D/AHhl&#xA;/wCYy9/6jJcVTHFXYq7FXYq7FXYq7FXYq7FWCfnYVb8vr2ErJI1xJDEkcbcSxMgPxfvIqqKVYfFt&#xA;+ycQqD062tY/zM0ORrmOK4HlyKCLTRCY3VA7sz0WExxrsF4CZen2TRThVmPmhrhdKDWyJJOLqy9K&#xA;ORzGhb63FQM6rIVHvxOBWN6HcG/8ya75kXhPcRv+i9ItaqJDa2cpSeQCo5c7gTcW8BTGfEIWBf4/&#xA;H2MRvJMdW1HU77TLy0uNAMqsADbvcxryjLsBIabgDgDmKcuWrEPtZbMUuPyz8oCHWYX8uyRoY4uC&#xA;NeTMsq21w0sbt+9HpqWAYdK7iuT8TJv6fd5rsg28o6fbPJex6OtrJBBeESC9M32refYozPyCk1Ud&#xA;BSvUYITzEjihQWw9X1P/AI5t3/xhk/4icyFYRp8yar5u0xdQMEMflzT42aMSF1N/erzCBpFj5GK3&#xA;hWTZdueTiDuR+Px+lhIiwyIa7rqkI2iuWMXIMZo0DzCNmMaqeR+0tAfDfMIZcn8zp3tjER+Xnla8&#xA;1a2lvPLrQF45OcsV3IRzeNrIrwSQA0hpyanf2yccmS940EbJG35faFxiMXl+NRHIs6M1+1ASQXBR&#xA;3cUYOwbbevXocr8TUfzFsd71fQP94Zf+Yy9/6jJcy1THFXYq7FXYq7FXYq7FXYq7FUi86+UrHzX5&#xA;fn0e8CcJWV0aVDKisp6mMNHy2qOu3XqMVQ2k+VdYstV067n1j1bWwsEsDYQwvDFIyCnrEGaUAnwp&#xA;4b7YqkP5g3v5kWFrf6hbJpr6BYv9aKkyrdiK3EUyMtQ0ZYSxvUEdPuxVfZeXNFFlpq2/l2/m06Gz&#xA;X07n6xAsh4BDGxiSdebyCrM2xqOm+18NROIoFqlhiTZS7y4nlbzHpJbSvLt5cWH1o21231mNSqwK&#xA;0kTj1JkZywkQsvQcjueO8vzeS7tj+WhVUqaNr2ga7L5itdF0i+uboFzc2/1iKNZiWanNpJKRUuFk&#xA;T4a0G/emR8eW3lyZeDHfzQUl35RPmC78t6ZotyuuCG4hhDTRkrcG25lDWUoF9GcNy5e1MMtTOQon&#xA;ZEcEAbAeq30Ty2VxEgq8kbqo6blSBmO3PNvK0UGseWhetod3f3c97KL2RbmGJWKSraycWMsbcI4L&#xA;dOKcf2QK9WNmPLKHJhPGJc1lpJ5Xu9T1XSbHy7eS6taR3LxWrXEcfqRspt35O0vGIeqzxinLb4xs&#xA;ct/NZO9r/Lw7kVb615asvOlrolppV/FqyRvCFWaKqlALsRbzNGweOV2Y8tth1O0ZZ5EUWQwxBsJX&#xA;rd75K0S40y01zQLu31C9RJJ4TcRylFHCMsrJKRKRO0adF6lu2T/N5O9j+Wh3PTdDhuIrAi4iMEsk&#xA;9zN6TFSyrNcSSLUoWWvFh0OYrej8VdirsVdirsVdirsVdirsVdirsVaZVZSrAMrChB3BBxVL/MUu&#xA;txaLdy6GkUuqxpytYp1LxuwNeJAkh6j/ACxirF7XzB+Y41W0s5PK8UdlO6C7vknQCIesFlfhy+Ks&#xA;fIjfbb7VcKt6d5g8+yadOT5WjttTijgZk9VUikleVfVUHwEbu9QzUIpuTiqhrXmD8zTG/wCg/LNu&#xA;t9GIDJJdyc42eS2WSVFKtEW4OfTDKSKj7lVTT/MP5qG7mXUPLVuLaGKco0M6hpZfS9W2C1duKlla&#xA;OSo2Zl41WpwKsfzV+ZqW8axeTl+sPLMZG+tRemkfF3jbiDVmLDiwqPHvTCq6380fmM6GSfyglizR&#xA;Ss0q3SXLKyGLjWNAjPy5yUA3+HFUZqmo+fhDZXOmaHapdXCS/XIp3WVoJVcJEDIjxc1dTuV+yN96&#xA;UKqd+XZtUvdGtbjXLWKDVAXE0cYbgCkpCsnqDmA6oriu+BU1xV2KuxV2KuxVCW+r6Tc3s9jb3sE1&#xA;7bb3NrHKjyx9vjQEsv0jFUXirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirB&#xA;vJ/kzWNH1SMXdrpbWlibs2+rRCRtQuPrcxkpJVUWOgPxnm/I06YVZzgV2KuxV2KuxVgPnrz75p0L&#xA;VfqWk6E+p8oY/qqqk7Geaf1VUh4laKNIZEjEnqMNn2ptyUsZk/OPzxJeWgTyxcWVndXUURaazuZp&#xA;IopPV+0A8AZ2CI46cVboxxWmf3fmu94LPp9g93ZTKkltdBX4yJJCsqUAHIFuVNwB9O2FC0+atYji&#xA;jeTRp2ZvtKqvRfhBFW4n7VT226deiq2fzndQc5LjTJra2tyDczusjARj+8ZeKV+Bat706eCq6781&#xA;6oh1D6ppE9wkKqdOlCsFn2/eE1oVAaijxrXpXKDkO+zjTzSF1E7cvNAXPnXzH9Ue4h0WSKMtyiaW&#xA;ORnEXrBPjiHCjFJFb7fjkTllXJrOpnV8P4tlmk3U93plpdXEJt554UkmgIIKOygsu++x8cuibFuV&#xA;jkTEE7FFZJm8z1j8xfP2l63qcZ8sG80aO7FhptzGJVkLmJZPUcL6zOh5UBCItduR3opSiX8+9bMN&#xA;wtt5OvZZo4pBDdD1Xt3uIn9Jk/dRSEAOr7E12oaVqFaVU/PXzBxcT+RtQtpdooFmdozLdSSCKGFe&#xA;USirSOob4qr8Wx44rSCT8+fODXVlG3ke8VGLpflkuRx4xqfVB9E8Ig5+LZjx9zitJpqH50+ZIdAl&#xA;v7fyNqn1w3EtvBaSRylgEi5pJIqxdeRoyA9iQxocVpkf5dee9Z8zm7h1TQJ9Hms47djNJy9KV5lL&#xA;OqB1RgUI6b4qzTFDsVSPzjfeYrHSoZtAjglvHvLS3kS4ilmUQ3Nwlu8nGJ42/der6jGtOKn5hVgu&#xA;j/nB5tlNkNS8mXkRu7aSdvQWc+m8NuZirK0XI+owCqOxNPixTSCT89fNJhuC/kW/jlLILOonMYR4&#xA;EkLyMIKsFdv2B0I+eK0n63nmj8xPJ6XOh38/lK6hvXj+s8BL9YWCJopaKSpVPrDMAa1+CvfZQo+X&#xA;/J/n7y9rUV/qvnKfWbe8f6rLaSxUVS8iOskQLsiHihRvgPX4SN8VZno/m3y3rN1PaaXqEV3c2yh5&#xA;4oyeSozFQ1CBsWUiuKBIHkm+KXYq7FXYq7FXYq7FVJbu1aUwrMhmFQYwwLbddq1xVVxVpERBRFCg&#xA;kkgCm7GpP0k1xVzIj05KGoQwqK0I6HFW8VdirsVdirDPzP8AK3mnzBY6VH5d1Eafc2d/HPcOZJIe&#xA;UHFkko8Px14ORQEVr1BAxSwVP+ce/MQv21FvOlwNSlmuJbi7jgEZcSQokdVRwf7xWZ0LFOJoqqas&#xA;VbTlfy5/MTSvL8WnaX5ka7uJtShvbuaRpbcxxtDJHPHG6tI7RB/SdEr+ya1BoVUPb/lP+aEQhJ/M&#xA;W8eRJxI5dZWUovEqpX1hyHLkSNqj4a0xW2W/lj5T8w+WNFvbLXNU/S1zPeyXMNyeVRE0caBW5d+a&#xA;Mx8a164oVfMvmHRx5i0ryzKsk2ozlNQWFYWlQQwyhOTcQ3R2r7UqabYq8z8n2Pmry5qEt5baNdRz&#xA;3Ajhmc2crViUhiCQvZiT9JyuO1+9xcVxMrB3l+gPXIfNMMpjB03Uo/UkMfx2koC8afG1AfhNdj7Z&#xA;O3IEgi/03Zbfu7rcEj/Q7rt4/utumFlbf6as+PL07qlOX+8l1WladPTrX2xRbjrNoAT6dzsA3+8l&#xA;z0P/ADz/AAxTbZ1i0Fax3OxA2tbk7n5R/jitrJtdtIonf0LuQpy+BLS5LMVFaL+7A37b0xW12jat&#xA;+k7V7j6ndWXCQx+leRejIaAHkFqfhNeuAG0RlYQsl0lt6HqxTn07qZ39O3mlor+rxP7tGqDyGFKv&#xA;+nrGhPpXdBt/vFd139vSxVsa9YlgvpXdSaf7xXYH3+lirX6fsf8AfV5/0hXf/VLFW/09Y7furvcV&#xA;/wB4rv8A6pYq0NesSD+6u9t/94rv/qlirv0/Y/76vP8ApCu/+qWKr7DULi5dRJbNCrJzJYSAg7fC&#xA;Q8ce+/YnpiqOxVgPmn85/K/lrzHPod/BdSSW8Amee3RXQMIzNJEeTJ8UcHGQ/wCS2KaSu2/5yK8k&#xA;3Op6fZR219x1AKFmaJAI5HZAEajkGiyqzcSSARsa7K0iZ/z58pQ3OuI1rffVdARmu7n0lUSOt0lp&#xA;whVmXl+8lXc02602xWkdeeY/NXmvybaat+X1xZQX0k7C4S9YSoIgjjjWMPR2JjcVH2T96hA+XI/z&#xA;kstdjuPNV5pdzp1zW2ijtko0MjyxkFfgRnV41bq4oeobbFXpOKuxV2KuxV2KuxV2KoHR9ZsNXtWu&#xA;rFy8KuYyWUqeSgE7H54qjsVdirsVdirsVdirsVdirsVU3t7dzV4kY1JqVB3K8T967fLFXnPnLVvz&#xA;L07XUh8teWLe90m2kidZOMXxxsgEhqZY2DhvsqqD7Aq1GAxSx2TzN+fhup5F8jWDxSo4EUnpjkyk&#xA;k8iJm+J6LWrcfg2+0Dir0fyFeearrSrpvMmlQ6ReRXckVvBb04PboqBJKB5KEnkvXtttTFC7zNrO&#xA;ix6lpekXN4kWoTTxXMdsZDG5iSQJyqCNubAdd/ffFULof5oeVNWuZ7dZXsTAOXq3vCCNxWnwMXNT&#xA;3pgsMeMd6cL5t8rM6ImsWTs/2QtxE3Yns3tjxBeOPK1zeaPLKqGbV7IKejG4iAO9P5vHGwokD1aH&#xA;mryuV5DWLIr4i5ip4fzY2F4x3tf4t8qVp+mrCorX/SYexof2vHEyCmcRzLX+L/KdQv6asORBYD61&#xA;DUgUBP2vcY2niCjqXnLy9aabd3kWo2dxJbQySpAtzEDI0aFggILbtxp0ONheIJD+TczS+VJuVape&#xA;zLUmtfhRv45DD9LjaMk4xfefvLKJ/MOnW83pTsY6u0Qb4W+JQSfhUs4+ydytMscpUt9e0S4FYb+3&#xA;egBKiVOQr/Mtaj6cVWjzH5eLcRqlpyrTj68Va+H2sVa/xJ5d/wCrrZ/8j4v+asVb/wAR+Xtv9ylp&#xA;uKj9/FuP+CxVf+nNF9H1/wBIW3o/799aPj1p9qtOuKqf+JPLv/V1s/8AkfF/zViqzS703D25F2Lj&#xA;1bcyyoPTIR/goPgAI+0euKppirDvMv5teSfLerNpmr3bQTR8RJJwLIrMFfiafFVYnEjUWgXvWgxW&#xA;lB/zq/LasqQ6t9YnhkWKSCKCcyB2JHEgotPssd+wJxTSu/5vfl6l3qlsdVU/oVDJqcyxyNHFSdbf&#xA;jyCnk3quAONa4opvXvN3mKbytaa15I0hdbluZmRraeQW5WJBIrOORFSJY1FK98VY/wCW9a8/XPm2&#xA;LUPNfk2009TC9nYalC8clzGzzR1ikkMleDLVxxU19t6qvUMVdirsVdirsVdirsVQ2n6lY6jB9Ysp&#xA;lnh5FS6bjkOo/HFUTirsVdirsVdirsVdirsVdiqSax5J8n61cm61bRrO+uGUIZZ4UkYgCg3YeBp8&#xA;tsVeaecbvy35a1+Wwsvy6W/t3uYLm9uoLVyJCUYiZSkLoBG0xA+LejjiKVxSkNx5+s3uL9X/ACmu&#xA;JrW9WQ3CiBw07iX1pC3KBeVXijbjx5BlY9Vpir1X8sL61u9Cuvq3lxvLEVteSWwsGUoH9KONRMoK&#xA;RbEUTp1Ujtigpv5gmjMmnWyzrHcvdxSJGSC5RGo7BTuR8QBPaoxVOMVdirsVdirsVQt/qul6eqNf&#xA;3kFoshIRp5EiDEdacyK4qs1y+msNE1C+hCtNaW008auCVLRxlgGAINKjxxViP5NzSS+VZ+ZqUvZV&#xA;B9uCH+OV4iTHdxtJIyxgnvP3lneWOS7FXYq7FXYq7FXYql9hLcs1qZJmkFxbmVlYIAGHp/Z4qp/b&#xA;PXFUwxVTubiC2t5bmdxHBCjSSyHoqIKsT8gMVQC+Z/LZkji/Slos0yRyRwtPGshWYViPBiG+MfZ2&#xA;3xVTfzh5US7urR9Xs1uLJDJeo08Y9FVcRkykmiUdgtG74qlfmnz9HpHl621zStMuvMVvczGFU05S&#xA;7KFSQmQihPENFxO3U4qw/QvNWm+aPPVvqOseTNS0q7t7Z7bTtSuhNwci4jPpGNVEaOrNyqzVp0r2&#xA;VelS+XPL0rs8ul2kjsxdmaCIksepJK9TgoI4QsHlXywDUaPZA+Itoq/8R98aXhC9fLfl1SpXS7MF&#xA;QQpEEWwbrT4e+NBHAO5p/LHlp6c9Js2oAorbxH4R0G69MeELwR7vJ3+GPLfFl/RNnxcAOv1eKhAN&#xA;RX4e2PCEHHE8wFknlLyrIxaTRrF2avJmtoSTy61qvemNBPAO5pvKHlNwwbRLBgw4sDawmo32Pw9N&#xA;zjQXhHcj7LT7CwiMNjbRWsTMXaOBFjUsaAsQoArtiBSYxAFBRn0PRLiVprjT7aaZ/tySQxszfMkV&#xA;OFKn/hzy9Qj9F2lDuR6EVKj/AGOKuXy35dVgy6XZhh0Igirt/scVd/hvy7/1arP/AJERf804q3/h&#xA;zy9t/uLtNhQfuIth/wADirQ8t+XRWmlWYr1/cRb/APC4q1/hny3UH9FWdR0P1eL/AJpxVGW9jZW1&#xA;Pq9vHDQcR6aKvw+GwG22Kq2KqN7aQXlnPZ3C87e5jeGZQSKpIpVhUbjY4q8G83WX5KeVvN1lFq1p&#xA;qV1qlk9vC10127lVCq8VQ8od0QGJDsFAIodiMCUouPOv/OPrXGtRtpGpCDVkZ9RmhqTJ/pC3LfYl&#xA;2RZIo2Vg37fhXCr2P8qdU8rX/luZPLK3aadY3T2jR3ztJIsqRxs3Es8vwsHDbHcknvigp/r/AKnC&#xA;w9OnP67B9qtKVNentiq/S/Meh6rLNDp17FcywGkqIake48V36jbADbGMgbromOFk7FXYq7FXYq7F&#xA;Us8veYLHXrA31kHEIkaL94FB5KAT9ksO+INojIEWEzxS7FXYq7FXYq7FXYqpx3FvKzLFKjsmzqrA&#xA;kfMDpiqpirsVUpbO0mYtNBHIxAUl1ViQK0G47cjiqz9HafUH6tFUEkHguxavI9O/I1+eKq0cUcYI&#xA;jRUDMWYKAKsxqxNO5PXFUj1LyhbX/mey1+W9ukksYGt47OOTjbktKsvqMtK8vgod9xTwxV5p+X+n&#xA;WE/mHzcl1dTaNbaNqP1OzuILh7b1YmleNRI77NyaEAU75ERH2tYwgcuptndh5F0mNONhrWpKjETs&#xA;sF5RW9WpDkIKfF498REBY4hHl3/eiH8r2sdxBA/mDU0uJFcQQte0aQLu5CkVbjy7dMNMuFV/waOv&#xA;6b1avHj/AL1n7/s9ffGl4Gp/Llsiskuu6jEeAYk3fEhUNC246b7nGl4Vt/pmmxfubrzFeWrgxtRr&#xA;xIm3VgvUA0YQuffix7HGk8KnN5Msgv1efXdV43ZMSxSXzH1PgZiihhU/AGO29BXtjSOFjn/OP+oy&#xA;6h5IuLiWJIn/AEhcLwTnT4Vj/n3wRiAKCMeMQFDk621t7r80tf0G/SC20bR7ZL+C9KKr+pJHG0vq&#xA;yyqY2VfrB27bfRJmy+00bSSI/qV84JVzG8EkYZl5/HUotXAfxrQ4qqy6Za23pCfVbqL1XWGESXHH&#xA;m5BIRa7ljQ9N8VVP0GK1+v3vb/dx7fRirUmlRIUV9SukLVCAzAFqAseo3oMVQ88GmWyo1xrU0SzL&#xA;ziaS6VQy8lXktaVHKRRt3YeOKqp0+1EKTnVbkQSFBHKbgcGMpCxhWpQ82YBfEnFWL/lt5n1PWtf8&#xA;1adeqgg8t3p07TiisGMIZ1/eFvtNSFd/8yqz/FXYq7FXYq7FXYqwRfyn026/xHFrc0eoWWvXyX62&#xA;8EAsmi9MsViaWFi0oPL4iaVYu1OTk4q8utPyyW10zStTH5W3ban60kd1YJrpAgUywyrKCxIZTI7l&#xA;Vr8Pp79a4q1a+SrlzYQf8qlvIEumiW5uJdbDC2SSMWtwSiFa8YrRCopQ1G3RCqpXflK9u7azit/y&#xA;jvViaY6kA2tOiiSUskvqoxidZDHAvHb4SwJG1GVUV/KuS81P0v8AlXMi2MV76QnN/cQn0I54EXaS&#xA;bk6ojynlTi1OQHEUKlHaB5V1rRo7aTS/ywlTVNNura5d5dTcoZ0iuYkaIyEVVGlDmjuKNxY7A4qn&#xA;v5X+RLay89i7n8iT+WTYx3N3a30t/JfK883GI/GG9L4o7mQcSKjjWvgoej/l/wCRbDyXpV3pli6v&#xA;b3F5LdrRChVXVURGJeTmyRxqvPblSpFakqsT88+Udei1/U9Ys9Mj8x2PmK3TTr3S4RFY3FvHGi0m&#xA;W8qzOWdPiqBsEU1CLRVg0/5W2i62LRPyqvGtDPI/1xdepDRkkh+JSaj1I4kqBt8e52FVVtl5G129&#xA;jlvP+VXvYXAmt5BBday8rOqfWbmRlMT24Dcrn01r3PxdyFVGPyLqcNjd2GpfllLdyTmKUpZalPAk&#xA;jWFqWVJJC0yHlKxRacQQ23Ig4pUdT/LWWSyv1j/LG5gabU4obSI6pcTGa2McweZ2ilPojnEpZm6B&#xA;6BSd3ULrL8vtR0zT3lm/LSaRJV9OaCHU5mkIkjS4YKFe4Kq1wWRhx2B7EMWUptd+UNYg813fmMfl&#xA;jLeai2pDUhdJq/Ck0TxzROYy0ivRv2UWlVPQHjih6X+W3lEaUdR8xzRC21DzUtrf6hZGJ43t52ja&#xA;WaJi7szUnnkIBUFa8egFFX//2Q=="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="uuid:9efa0710-a85b-c642-b0bb-d20be206c660"
    stRef:documentID="xmp.did:08801174072068118C14F3235FA19F7F"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="default"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/pdf to &lt;unknown&gt;"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:D27F11740720681191099C3B601C4548"
       stEvt:when="2008-04-17T14:19:15+05:30"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/pdf to &lt;unknown&gt;"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/pdf to &lt;unknown&gt;"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F97F1174072068118D4ED246B3ADB1C6"
       stEvt:when="2008-05-15T16:23:06-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FA7F1174072068118D4ED246B3ADB1C6"
       stEvt:when="2008-05-15T17:10:45-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:EF7F117407206811A46CA4519D24356B"
       stEvt:when="2008-05-15T22:53:33-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F07F117407206811A46CA4519D24356B"
       stEvt:when="2008-05-15T23:07:07-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F77F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T10:35:43-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/pdf to &lt;unknown&gt;"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F97F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T10:40:59-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to &lt;unknown&gt;"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FA7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:26:55-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FB7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:29:01-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FC7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:29:20-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FD7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:30:54-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FE7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:31:22-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:B233668C16206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T12:23:46-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:B333668C16206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T13:27:54-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:B433668C16206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T13:46:13-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F77F11740720681197C1BF14D1759E83"
       stEvt:when="2008-05-16T15:47:57-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F87F11740720681197C1BF14D1759E83"
       stEvt:when="2008-05-16T15:51:06-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F97F11740720681197C1BF14D1759E83"
       stEvt:when="2008-05-16T15:52:22-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FA7F117407206811B628E3BF27C8C41B"
       stEvt:when="2008-05-22T13:28:01-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FF7F117407206811B628E3BF27C8C41B"
       stEvt:when="2008-05-22T16:23:53-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:07C3BD25102DDD1181B594070CEB88D9"
       stEvt:when="2008-05-28T16:45:26-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F87F1174072068119098B097FDA39BEF"
       stEvt:when="2008-06-02T13:25:25-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F77F117407206811BB1DBF8F242B6F84"
       stEvt:when="2008-06-09T14:58:36-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F97F117407206811ACAFB8DA80854E76"
       stEvt:when="2008-06-11T14:31:27-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:0180117407206811834383CD3A8D2303"
       stEvt:when="2008-06-11T22:37:35-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F77F117407206811818C85DF6A1A75C3"
       stEvt:when="2008-06-27T14:40:42-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:01801174072068118F62C262592E568B"
      stEvt:when="2012-01-04T09:22:07-05:00"
      stEvt:softwareAgent="Adobe Illustrator CS4"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:02801174072068118F62C262592E568B"
      stEvt:when="2012-01-04T09:22:18-05:00"
      stEvt:softwareAgent="Adobe Illustrator CS4"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:06801174072068118C14F3235FA19F7F"
      stEvt:when="2014-03-26T20:33:25-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:07801174072068118C14F3235FA19F7F"
      stEvt:when="2014-03-26T20:33:35-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:08801174072068118C14F3235FA19F7F"
      stEvt:when="2014-03-26T20:35:31-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:F97F1174072068118C14A856FF5F266D"
      stEvt:when="2014-03-28T06:14:47-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="5.111111"
    stDim:h="6.986111"
    stDim:unit="Inches"/>
   <xmpTPg:Fonts>
    <rdf:Bag>
     <rdf:li
      stFnt:fontName="HelveticaNeue"
      stFnt:fontFamily="Helvetica Neue"
      stFnt:fontFace="Regular"
      stFnt:fontType="TrueType"
      stFnt:versionString="8.0d6e1"
      stFnt:composite="False"
      stFnt:fontFileName="HelveticaNeue.dfont"/>
     <rdf:li
      stFnt:fontName="Helvetica-Bold"
      stFnt:fontFamily="Helvetica"
      stFnt:fontFace="Bold"
      stFnt:fontType="TrueType"
      stFnt:versionString="8.0d3e1"
      stFnt:composite="False"
      stFnt:fontFileName="Helvetica.dfont"/>
     <rdf:li
      stFnt:fontName="Palatino-Roman"
      stFnt:fontFamily="Palatino"
      stFnt:fontFace="Regular"
      stFnt:fontType="TrueType"
      stFnt:versionString="7.0d4e6"
      stFnt:composite="False"
      stFnt:fontFileName="Palatino.ttc"/>
    </rdf:Bag>
   </xmpTPg:Fonts>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="100.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Red"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Yellow"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Green"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Cyan"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Blue"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Magenta"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=15 M=100 Y=90 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="14.999998"
         xmpG:magenta="100.000000"
         xmpG:yellow="90.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=0 M=90 Y=85 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="90.000000"
         xmpG:yellow="85.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=80 Y=95 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="80.000000"
         xmpG:yellow="95.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=50 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=35 Y=85 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="35.000004"
         xmpG:yellow="85.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=5 M=0 Y=90 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="5.000001"
         xmpG:magenta="0.000000"
         xmpG:yellow="90.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=20 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="19.999998"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=10 Y=100 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="100.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=90 M=30 Y=95 K=30"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="90.000000"
         xmpG:magenta="30.000002"
         xmpG:yellow="95.000000"
         xmpG:black="30.000002"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=75 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="75.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=80 M=10 Y=45 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="80.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="45.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=70 M=15 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="70.000000"
         xmpG:magenta="14.999998"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=50 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=95 Y=5 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="95.000000"
         xmpG:yellow="5.000001"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=100 Y=25 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="25.000000"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=75 M=100 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=100 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=35 M=100 Y=35 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="35.000004"
         xmpG:magenta="100.000000"
         xmpG:yellow="35.000004"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=10 M=100 Y=50 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="10.000002"
         xmpG:magenta="100.000000"
         xmpG:yellow="50.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=95 Y=20 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="95.000000"
         xmpG:yellow="19.999998"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=25 M=25 Y=40 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="25.000000"
         xmpG:magenta="25.000000"
         xmpG:yellow="39.999996"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=40 M=45 Y=50 K=5"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999996"
         xmpG:magenta="45.000000"
         xmpG:yellow="50.000000"
         xmpG:black="5.000001"/>
        <rdf:li
         xmpG:swatchName="C=50 M=50 Y=60 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="60.000004"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=55 M=60 Y=65 K=40"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="55.000000"
         xmpG:magenta="60.000004"
         xmpG:yellow="65.000000"
         xmpG:black="39.999996"/>
        <rdf:li
         xmpG:swatchName="C=25 M=40 Y=65 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="25.000000"
         xmpG:magenta="39.999996"
         xmpG:yellow="65.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=30 M=50 Y=75 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="30.000002"
         xmpG:magenta="50.000000"
         xmpG:yellow="75.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=35 M=60 Y=80 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="35.000004"
         xmpG:magenta="60.000004"
         xmpG:yellow="80.000000"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=40 M=65 Y=90 K=35"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999996"
         xmpG:magenta="65.000000"
         xmpG:yellow="90.000000"
         xmpG:black="35.000004"/>
        <rdf:li
         xmpG:swatchName="C=40 M=70 Y=100 K=50"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999996"
         xmpG:magenta="70.000000"
         xmpG:yellow="100.000000"
         xmpG:black="50.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=70 Y=80 K=70"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="70.000000"
         xmpG:yellow="80.000000"
         xmpG:black="70.000000"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Grays"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=100"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="100.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=90"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="89.999405"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=80"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="79.998795"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=70"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="69.999702"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=60"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="59.999104"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=50"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="50.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=40"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="39.999401"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=30"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="29.998802"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=20"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="19.999701"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="9.999103"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=5"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="4.998803"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Brights"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="C=0 M=100 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=75 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="75.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=10 Y=95 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="95.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=10 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=90 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="90.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=60 M=90 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="60.000004"
         xmpG:magenta="90.000000"
         xmpG:yellow="0.003099"
         xmpG:black="0.003099"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -503 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 503 li
368 503 li
368 0 li
cp
clp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: CLIRMX+Palatino-Roman Initial
ct_T42Dict begin
-0.465 -0.48 1.703 1.172
 256 array 0 1 255 {1 index exch /.notdef put} for  /CLIRMX+Palatino-Roman
Type42DictBegin
[<00010000000b000b000b000b63767420dec1ba6b000000bc000005986670
676d603e945f00000654000006fd676c79663e98b65a00004dd400001bd4
68656164d8141f1500000d540000003668686561fa0e820f00000d8c0000
0024686d7478c39d441000000db000001b706c6f636100b78c4c00002920
00001b746d6178700f36088900004494000000206e616d653adb74aa0000
44b40000036270726570feed8aee00004818000005bb6764697200000000
000000000000000005d10000058c001a0580000503a600220000ffe30000
ffe80000ffe3fdcefffc058d0043fe5c00000362000005ab000002340000
058d00000000000003510000000000000000000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000000000000000
00000000000000000000000000000000000000000000ffffffffffff00bc
000000bc0000000000000000000000000000000000000000000000000004
00050040000700050039000700c100c30072013200be0005008e00320043
001400680030005500c30223009e0011003a00a5005700d5000600880010
005b008100f80053009900ac00bd04010044008e00ef0042004a006c011f
0068008000a900d0004a00a400adff94007600b400c00031011a01290017
00afff6f0001002d008b00c30446ffcc0030ffec001200450051009100a1
00a901570000001d002a0031003100420052009500d600d600ef015a01d5
0282032bffb7000b001d0029000300330035003c003e0047006d00e00194
0391ffc0ffd5000500080041005b0063007f00a2ff4effb1004400260044
004a0073008f00a200ab00b000cc010b0159017b018501b7027c02d80375
03a404bd0516ffac00200037003b00450053005a0061006c0076008f0095
00b500bc00d500ec02d600fb001d003b003d005700650066007a008700a1
00a400ab00c600e100f0013201560166018102130233024a0264028a02bb
0313032e03a903c605e9ff4affaa00000008000a0026002800550055006b
00c700d100da013d014a019801e30247038005a6ff2dffe6ffea000a0017
0020002500470049004e00580076008f00950099009900a500b600bb00d0
00e600fe01040117011d011e018f019301b201e201ec01f90202023502f7
035e0387038f03a603bc03d403d6043a045e04fb052c0584058e059a05c6
fef0ff21ff7f0021005a005a0068006e0085008a008c008c009c00a600b4
00cf00d900df00e800ec00fa01000106010c0115012a013901690201042c
0497052a05ca06bf0800fdcdfee2ff1500030005000a000c001d00220024
002e0046004a00510057005c005c005e006a006c00770079007d007f0081
0086008b008f009500b100b300bb00be00bf00c500c600cb00d100d800da
00db00df00e200ea00eb00fe0104010a010a012d013401360139013b0144
014b014f0153016101670168017d01a901b601b701ba01bd01d201de01df
01f102240233025e02680275027502ae02dd032d034503510367038e040a
041304a204f0050005b506190620066206cd0737077d07c4fca7fe6efec8
fee9ff00ff6effe90009000900230027002a002b004e005c00660068006a
007800800080008500890092009a009c00b400b600b800bf00c500d100dc
00ef00f801080116011701380138014b0157016301670168018801920193
019b019e01ae01b301c201cf01df01e801f401f501f9020b02270227023f
0247026e0278028e02a402c102d002f502f70305030d030f031e033a033d
03590388039503df045a0543060106420708070c074b076300bb00c800ba
00000000000000000000000000000149010e0379005b00dc00e3039400b6
0249020f04e0014c001a0104035e00ae0221022900c501d6027c02c7057e
017d0039015c034602480432039e01fe0071007001c8014001920115017e
016c004502a500f303fd013302a8015001650235012403d3022903af00e8
001a031f007501420237feae01ec008f044602f202dd01c40046003000c5
01860083055000c100af00cc004b0047001a005300b2002800c300520095
00eb0267009500470168007300720083003f002302e10276005b01d90280
023600e6019c010500f201c700510490feac0099031c004c00a3006100e1
03a80410008000a2005a0457049304c7025701ac016c00510092030801bd
00d900390092001a008300bc064a021201810359015700820030002a002a
403231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19181716
1514131211100f0e0d0c0b0a090807060504030201002c4523466020b026
60b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061
b004262348482d2c45234660b0406120b06660b004262348482d2c452346
2361b0406020b02661b04061b004262348482d2c0110203c003c2d2c2045
2320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d4423
5920b0042651582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b0054358b94000fff50a1bb94000fff10a592d
2c00b0054358b9001640000b1bb9001040000b592d2c2045b00043617d68
18b0004360442d2c45b04a234445b04923442d2c2045b00325456164b050
515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b00043
60442d2c01b00743b006430a2d2c2069b04061b0008b20b12cc08a8cb810
0062602b0c642364615c58b00361592d2c45b0112bb0472344b0477ae418
2d2cb801a65458b00943b801005458b9004aff80b14980444459592d2c8a
03458a8a87b0112bb0472344b0477ae4182d2cb002254661658a46b04060
8b482d2cb0022546608a46b040618c482d2c01182f2d2c20b0032545b049
234445b04a23444565234520b00325606a20b009234223688a6a606120b0
1a8ab000527921b21a4a40b9ffe0004a45208a54582321b03f1b23596144
1cb114008a5279b34940204945208a54582321b03f1b235961442d2cb005
4358b91ef138060b1bb9187e3b210b592d2cb0054358b9333326660b1bb9
2d412d410b592d2cb0054358b93d1e12fd0b1bb93b21187e0b592d2cb005
4358b93d1eed040b1bb93b21e7830b592d2cb0054358b93333d99b0b1bb9
2d41d2c00b592d2cb0054358b91ef1c7fb0b1bb9187ec4e00b592d2c4b52
5845441b2121592d2c0120b003252349b04060b0206320b000525823b002
253823b002256538008a63381b212121212159012d2c4569b00943608a10
3a2d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b0064365b00743
0b2d2c3eb02a2a2d2c352d2c76b04b23701020b04b4520b0005058b00161
593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb8
2000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621b
b200802f2b59b002602d2c0c6423648bb84000626023212d2cb400010000
0015b00826b00826b00826b008260f10161345683ab001162d2cb4000100
000015b00826b00826b00826b008260f1016134568653ab001162db80032
2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db800
332c2020456944b001602db800342cb800332a212db800352c2046b00325
4652582359208a208a49648a204620686164b00425462068616452582365
8a592f20b00053586920b000545821b040591b6920b000545821b0406559
593a2db800362c2046b00425465258238a592046206a6164b0042546206a
61645258238a592ffd2db800372c4b20b0032650585158b080441bb04044
591b21212045b0c05058b0c0441b2159592db800382c2020456944b00160
2020457d691844b001602db800392cb800382a2db8003a2c4b20b0032653
58b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b0032653
582321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a235920
b0032653582321b801408a8a1b8a235920b80003265358b0032545b80180
50582321b8018023211bb003254523212321591b2159442db8003b2c4b53
5845441b2121592db8003c2c4bb800095058b101018e59b801ff85b80044
1db9000900035f5e2db8003d2c2020456944b001602db8003e2cb8003d2a
212db8003f2c2046b003254652582359208a208a49648a204620686164b0
04254620686164525823658a592f20b00053586920b000545821b040591b
6920b000545821b0406559593a2db800402c2046b00425465258238a5920
46206a6164b0042546206a61645258238a592ffd2db800412c4b20b00326
50585158b080441bb04044591b21212045b0c05058b0c0441b2159592db8
00422c2020456944b001602020457d691844b001602db800432cb800422a
2db800442c4b20b003265358b0401bb000598a8a20b0032653582321b080
8a8a1b8a235920b0032653582321b800c08a8a1b8a235920b00326535823
21b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800
03265358b0032545b8018050582321b8018023211bb00325452321232159
1b2159442db800452c4b535845441b2121592d0000000001000000010000
b443bf105f0f3cf50111080000000000a426b48000000000c9de200efc44
fc250da70963000000090001000100000000000100000695fdc800000ddd
fc44fd760da70001000000000000000000000000000006dc060001000000
000002000000020000000239008d02f8006804d9006f0400003906b80069
0639005c01aa007b02aa007902aa0079031d005604d900680200fff202aa
002d0200008804d901150400003e0400007d04000022040000220400000c
0400001d040000460400005e0400004004000034020000880200001504d9
002804d9004c04d90020038d005905fa002f0639002304e3001b05ac0047
0631001a04e300320473002c061b004006a8003102b2002f02aaffe805cf
003304e300250791002606a60031064a003104d50036064a00300558002d
0433003804e7002b0639001e05c70015080000170556001f055600170556
002402aa00a704d900e902aa005504d9006a0400000002aa00a404000052
046dffea038d005004e3005403d5003302aa00310473004704a800070254
002d01dfffbe047300210254002d0710002a04a8001c045e004404cf0024
047b004f0329002f0364004a029c002e04d3001a0485001e06ac001d0421
0024047300100400002402aa007704d9023302aa006804d9006806390023
0639002305ac004704e3003206a60031064a00310639001e040000520400
005204000052040000520400005204000052038d005003d5003303d50033
03d5003303d50033024c0029024cffe9024c0014024c001a04a8001c045e
0044045e0044045e0044045e0044045e004404d3001a04d3001a04d3001a
04d3001a04000045033300660400007f0400fff60400003804d9010c0506
004e0473002b05fa001605fa001607d5005202aa00a402aa001a0464002d
078d000006aa004905b400220464002c0464002c0464002c0400ffe5049c
003003f4001c05b4006c0696005c0464000c0231ff4202aa003002aa0014
0625004c0610002d04730028038d00670239009a04d900690464000a0400
00120464001b04e500220400006604000061080000df0200000006390023
06390023064a003107fc0048069e00350400ffff08000000040000730400
00390239002d0239002d0464000e03f4003b04730010055600170156fe29
05f4ffb202a6006202a6008104d7002a04dd002b04000046020000880239
002d04000039092700690639002304e300320639002304e3003204e30032
02b2002f02b2001402b2001a02b20022064a0031064a003106520000064a
00310639001e0639001e0639001e024c002902aa001402aafff702aa0011
02aa00300200009302aa007402aa0096030a002f0281008a02aa001404e3
00070254ffe9043300420364004a055600240400002404d902330631001a
045e004c055600170473001004d5004704cf002904d9004a04d900b00266
003b0266ffff026600010600001d0600002e060000180400000e061b0040
0473004702b2002f043300380364004a05ac0047038d005005ac0047038d
005004e30051063900230400005206390023040000520639002304000052
05ac0047038d005005ac0047038d00500631001a04e3005404e3003203d5
003304e3003203d5003304e3003203d5003304e3003203d5003304e30032
03d50033061b004004730047061b004004730047061b0040047300470473
004706a8003104a8000706a8003104a8000702b20010024cffd402b20011
024c000c02b2002f0254002d055c002f0433002d02aaffe801dfffab05cf
00330473002104e300250254002d04e300250254002d04e3002503a6002d
04e300250254002d06a6003104a8001c06a6003104a8001c06a6003104a8
001c04a8001c064a0031045e0044064a0031045e0044064a0031045e0044
0558002d0329002f0558002d0329002f0558002d0329002f043300420364
004a043300420364004a04e7002b029c002e04e7002b029c002e04e7002b
029c00190639001e04d3001a0639001e04d3001a0639001e04d3001a0639
001e04d3001a0639001e04d3001a0639001e04d3001a0800001706ac001d
055600170473001005560024040000240556002404000024043300420364
004a04e7002b029c002e04d9002c0000fce80000fce80000fc900000fc74
0000fc8d0000fcac0000fd640000fc960000fcf00000fc440000fc900000
fd2d0000fcf90000fd1b0000fc7b062500530631001a061b004004730047
04e300250254002d05cf00330473002106a6003104a8001c0558002d0329
002f02aa002d0473002102aa003106a6003104a8001c038d005003d50033
0710002a0329002f029c002e0485001e06ac001d0239002d0239002d0333
01240333012402aa001102aa00a402aa00a402aa001102aa00a402aa00a4
0000fc440000fcac0000fd110000fd110000fce80000fce80000fd330000
fd640000fc960000fcf00000fc900000fc900000fcac0000fcac0000fc74
0000fc8d0000fd330000fd330000fd3300000000000000000000000002aa
002d02000088062500530639002303f4001d03f4002f05b4006c05b40092
0464000a0464ff8c0231ff420231ffe004640012046400340464002f0464
002b0000000008df006607a6006605cf003302b2002f0564002f0816002f
0879002f05c70015087900150b2b00150ddd00150808002f0556001f0808
001f0aba001f04e3002505ac00470631001a079100260254002d04a8002d
06fc002d06d9002d0485001e06d9001e092d001e0b81001e0675002d0421
00240675002408c900240254002d038d005004e300540710002a02b2002f
024c00030239008d0b87001a0a31001a08e30054078d002506c200250433
002d09500031088500310687001c063900230400005202b20014024cffe7
064a0031045e00440639001e04d3001a0639001e04d3001a0639001e04d3
001a0639001e04d3001a0639001e04d3001a063900230400005206390023
04000052078d00000610002d061b00400473004705cf003304730021064a
0031045e0044064a0031045e00440b87001a0a31001a08e30054061b0040
06a6003104a8001c0639002304000052078d00000610002d06aa00490473
00280639002304000052063900230400005204e3003203d5003304e30032
03d5003302b2ffc7024cff9702b2002f024c0000064a0031045e0044064a
0031045e00440558002d032900090558002d0329002f0639001e04d3001a
0639001e04d3001a06a8003104a80007063900230400005204e3003203d5
0033064a0031045e0044064a0031045e0044064a0031045e0044064a0031
045e004405560017047300100400003902b2002f063900230400005204e3
001b046dffea04e3001b046dffea04e3001b046dffea05ac0047038d0050
0631001a04e300540631001a04e300540631001a04e300540631001a04e3
00540631001a04e3005404e3003203d5003304e3003203d5003304e30032
03d5003304e3003203d5003304e3003203d500330473002c02aa0031061b
00400473004706a8003104a8000706a8003104a8000706a8003104a80007
06a8003104a8000706a8003104a8000702b2fff80254ffcf02b2001a024c
ffed05cf00330473002105cf00330473002105cf00330473002104e30025
0254002d04e300250254ffe704e300250254ffe704e300250254ffea0791
00260710002a079100260710002a079100260710002a06a6003104a8001c
06a6003104a8001c06a6003104a8001c06a6003104a8001c064a0031045e
0044064a0031045e0044064a0031045e0044064a0031045e004404d50036
04cf002404d5003604cf00240558002d0329002f0558002d0329002f0558
002d0329002f0558002d0329002f043300420364004a043300420364004a
043300420364004a043300420364004a043300420364004a04e7002b029c
002e04e7002b029c002e04e7002b029c001904e7002b029c001c0639001e
04d3001a0639001e04d3001a0639001e04d3001a0639001e04d3001a0639
001e04d3001a05c700150485001e05c700150485001e0800001706ac001d
0800001706ac001d0800001706ac001d0800001706ac001d0800001706ac
001d0556001f042100240556001f04210024055600170473001005560024
040000240556002404000024055600240400002404a80007029c002206ac
001d0473001002aa003104e3003203d5003304e3003203d50033078d0000
0610002d079100260710002a0000fce80000fce80000fd110000fc960200
001502aa001a0200008806390023040000520400005202b20010024cffe0
024c00290639001e04d3001a042100240558002d0329002f01dfffbe0400
00520631001a04e3005403d50033043300380364004a0000fe5f0000fe78
00007fff00007fff00007fff04d9023309b2023301dfff4e063900230400
0052063900230400005206390023040000520639ff9e0400fe9806390023
040000520639002304000052063900230400005206390023040000520639
002304000052063900230400005206390023040000520639002304000052
04e3003203d5003304e3003203d5003304e3003203d5003304e3003203d5
003304e3fee703d5fe6a04e3003203d5003304e3003203d5003304e30032
03d5003302b2002f024c002902b2002f0254002d064a0031045e0044064a
0031045e0044064a0031045e0044064affad045efeb7064a0031045e0044
064a0031045e0044064a0031045e00440639001e04d3001a0639001e04d3
001a05560017047300100556001704730010055600170473001005560017
047300100200fff50200008b0200001802390090038d005c080003890800
03c5040001c5040001c4040001c402aafdb102aafdb002aafdc502aafdb3
02aafdbd02aafd6b0449003f0000000006000000061b004002b2003305cf
003304e3002504e3002506a600310558002a062a002704e7002704970081
0635003304e3005404730047047300220254002c02b9002c04a8000c0329
0036029c002e048b0041086700400b07002e08f9003c0810005007c20050
0630005005350031075c0031076600310535003107bc00310726003109b1
00310753003109de003107060031099100310495003102aa003104bc0031
04c30031051b0031072d00310733003104e9003106f800310725003106ec
00310809004a0614004a04f9002e061b002e02f5000f02aa004702b0fff3
023d002702f700310275002701bb002502bd003102f5000f018a0022015b
ffee02c5000f018a0022046d001f02f5000f02aa002202fc001e02d20022
020c00280230003401b6002302f5000502be000503eb0005028a000f02bc
000f0255000603d0002e042f0022027500270400003e02e6fff004000022
0400002503d9fff90400002004000046038d004004000040040000340400
002804000082040000290400001304000007040000110400003e04000047
040000400400003a028f002d028f000e028f001b028f0032028f0041028f
002f028f0027028f002d028f0054028f001c028f001e028f000e028f001b
028f0032028f0041028f002f028f0027028f001f028f001f028f001f01c2
005001c20025028f001f028f001f028f001f01c2005001c2002501230046
0133fffc028f003c028f005204100054067400540674001c067400540674
001c0674001e0674000e067400540674001b067400540674001e0674001b
06740041040000be040000be040000be040000be040000be040000be0400
00be040000be040000be040000be040000be040000be040000be040000be
040000be040000be0400000004e5ffe90625000b0473002e0400001e0400
001e0400001e0400001e0400001e0400001e0400001e0400ffec04000039
040000bf0437fff2058e0038058e00450400ffdf0400001805280033062e
005d08ee00290400008903cd008d038d005a0239008c0400000003660051
0593002906ac001601c00089035500a203d5006304d5009202d6008302d6
008304d500b202d600700800000004d901a2040000000800000004000000
0800000002ab000002000000015500000400000002000000019a000000ab
0000000000000000ff8602aa00dd02aa007402aa007402aa000802aaffee
02aafff802aa000002aa002602aa00850000ff7b02aa007e02aa00e502aa
ffc402aa001102aa007802aa007502aa007402aa001002aa001d02aafffa
02aa000c02aa003c02aa00940000ff8702aa008702aa00e802aaffc702aa
002402aa0082063900230639002304e8003304e3001c0441002904410029
0441000a05f2ffee04e3004904e3004904e3004904e3004907dc001c07dc
001c07dc001c04db008204db008206ac003306ac003306ac003306ac0033
05cf003305cf003305cf003305cf0033072a000005d5ffe40791002606a8
003306a80033064a00300681003304d5003305ac004705ac004704e70027
05640018056400180560003305600033056000330560003305f800300556
001f0556001f068100330612000e0626000e0612000e08a4004e08a4004e
0643000006fb003304e8003305920030063e005e08bd00330558ffef0618
000007b00033067d004c064a003005c700150424003302b2003302b2fff8
02aaffe8043300400593003005ff00330721000006da0000068100330842
000008f000330400005204000052047a004403c6003d0334004f0334004f
0334004f046a000003d5003303d5003303d5003303d500330696002e0696
002e0696002e0449003f0449003f0449003f038b005d038b005d050e004f
050e004f050e004f050e004f0431004f0431004f046b004f046b004f04ef
00000497000005df005604ab002f04ab002f047a00440516004f04cf0041
038d0050038d005003c600260435fff30435fff304b8001e04b8001e0435
fff30435fff3061a004403eb001203eb00120516004f0449000004490000
044900000732004f0732004f049c000005cd004f03d1004f0430006003e7
005b0681004f044d000004ba0037043000440364004a0254002b0254ffc4
01dfffc0060800000630002f056f0043056f00370516004f049200120492
001205ec0053047a0044047a00440485001e0324004f08e000f902f5005d
02f5005d0627002304db001c048b00330583003804d80049055600240696
00330658003002a9003305c6003306080023078f002606a60030058b0056
065800300681003304cc0033057c005d04e1002705de000605f80030054f
001f06f60025062700230627002306270023062700230627000906270023
062700230627002306270023082f0023082f0023082f0023082f0009082f
0023082f0023082f0023082f002306270023062700230627002306270023
082f00230565001005e10017060700170680000106b9000106b9000106cd
0001058c000105f000010729000b07ac001707d700170894000108bc0017
08d0001708e6001708ec000108ec000109ed00170a1800170ad500010afd
00170b1100170b2700170b2d00010b2d00010770000107de000108e90033
0345000b02a9003303b6001703e10017049e000104c6001704da001704f0
001704f6000104f6000102a9003302a90029037a000103e8000106f30042
06f3001706f3001708440001086c001707a2000107ce00170720001706c6
000105c3000106ad004205de000606ce0017081c000107ba001707880001
05de000605de000606d0000106b300010711004106ff001606ff00160850
00000878001607ae000007da001607c7000007c70000096f0016096f0016
0ac000000ae800160a1e00000a4a00160a3700000a370000072c001606d2
0000090b0046051e004404ab009204c1ffee042c004403da008e03fe0052
04b4fff80501008d026700c00490001904c100000481fffd044b007c0462
0044045e004403db004004d6004403df00410486001b05a90044049d0038
0587000a05f20035044f00400509001c05aa004406090044051e0044051e
0044051e0044051e0044051e0044051e0044051e0044051e0044051e0044
051e0044051e0044051e0044051e0044051e0044051e0044051e0044051e
0044051e0044051e0044051e0044051e0044051e0044051e0044051e0044
051e0044051e004403da008e03da008e03da008e03da008e03da008e03da
008e03da008e03da008e03da008e04b4fff804b4fff804b4fff804b4fff8
04b4fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4
fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4fff8
04b4fff804b4fff804b4fff804b4fff804b4fff8026700c0026700130267
00c002670085026700c0026700b5026700580267000d0267005702670034
026700080267002a026700240267ffd30267ffd30267ffd3026700330267
fffe0267ffe4046200440462004404620044046200440462004404620044
046200440462004404620044045e0044045e00440486001b0486001b0486
001b0486001b0486001b0486001b0486001b0486001b0486001b0486001b
0486001b0486001b0486001b0486001b0486001b0486001b0486001b0486
001b0486001b05f2003505f2003505f2003505f2003505f2003505f20035
05f2003505f2003505f2003505f2003505f2003505f2003505f2003505f2
003505f2003505f2003505f2003505f2003505f2003505f2003505f20035
05f2003505f2003505f20035055e004305720067071c0025050800460200
0014020000140200004b02aa012202aa011302aafff402aa000b02aa010a
02aa00f702aa010a02aa00fa02aa011002aa008502aa007802aa005502aa
00b002aa001c02aa002902aa005c02aa004502aafff402aafff402aafff4
02aa006402aa002506660030049c0044069e001e052000100400008b0000
ff930000ff560000ff6a0000fea40000ff77048a001903c6003d041b0043
049c004f03c6003c035b00440431002d04ab002f028400620284000b0431
004f03c6005305df005605080044049d005603c60054049d00560431004c
035b005103c60026049d00370464000b05df001903c6fff703c6fff803c6
0014048a0019048a0019048a0019048a0019048a0019048a0019048a0019
048a0019048a0019048a001905df000a05df000a041b0043041b0043041b
0043041b0043041b0043049c004f049c004f049c004f03c6003c03c6003c
03c6003c03c6003c03c6003c03c6003c03c6003c03c6003c03c6003c0431
002d0431002d0431002d0431002d0431002d04ab002f04ab002f02840062
0284fff30284fff20284000b0284ffe40284002302840062028400120284
00620284fff20431004f0431004f03c6005303c6005303c6005303c60053
03c6005303c600530508004405080044050800440508004405080044049d
0056049d0056049d0056049d0056049d0056049d0056049d0056049d0056
049d0056049d0056064a00470431004c0431004c0431004c0431004c035b
0051035b0051035b0051035b0051035b005103c6002603c6002604e20026
03c6002603c60026049d0037049d0037049d0037049d0037049d0037049d
0037049d0037049d0037049d0037049d003705df001905df001905df0019
05df001903c6fff803c6fff803c6fff803c6fff803c6001403c6001403c6
001403c6005404a40062026a0030018600660463002e02aa008706660030
06660030049c004406660030049c004406660030049c004406660030049c
0044069e001e05200010069e001e05200010069e001e05200010069e001e
05200010069e001e05200010058a003d069b0046052d00bb056b00820000
000000000084000000840000008400000084000000840000008400000084
000000840000008400000084000000840000008400000084000000840000
0084000000e0000000e0000001200000012000000120000001f4000001f4
000001f4000001f4000001f4000001f4000001f4000001f4000001f40000
01f4000001f4000001f4000001f4000001f4000001f4000001f4000001f4
000001f4000001f4000001f4000001f40000036400000364000003640000
036400000364000003640000046000000460000004600000046000000460
000004600000065400000874000008740000087400000874000008740000
087400000874000008740000087400000874000008740000087400000874
00000874000009e8000009e8000009e800000b8c00000cac00000cac0000
0f0000000f0000000ff400000ff400000ff4000010d400001348000014c8
000015e00000179400001794000018c8000018c8000019e400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd400001bd400001bd400001bd400001bd400001bd400001bd4
00001bd400001bd400001bd400001bd400001bd400001bd400001bd40000
1bd400001bd40001000006dc00b4001000c2000700020010001300460000
07e806fd000400010000000c00960001000000000000006c000000010000
000000030015006c00010000000000040015008100010000000000060015
00960001000000000007003100ab000300010409000000d800dc00030001
04090001002a01b40003000104090002000e01de0003000104090003002a
01ec0003000104090004002a02160003000104090006002a024000030001
040900070062026a436f7079726967687420a920313939312d39392c2032
303036204170706c6520436f6d70757465722c20496e632e20436f707972
6967687420a920313939312d3932205479706520536f6c7574696f6e732c
20496e632e20416c6c207269676874732072657365727665642e4952564a
574b2b50616c6174696e6f2d526f6d616e4952564a574b2b50616c617469
6e6f2d526f6d616e4952564a574b2b50616c6174696e6f2d526f6d616e50
616c6174696e6f206973206120726567697374657265642074726164656d
61726b206f66204c696e6f747970652041470043006f0070007900720069
006700680074002000a900200031003900390031002d00390039002c0020
00320030003000360020004100700070006c006500200043006f006d0070
0075007400650072002c00200049006e0063002e00200043006f00700079
00720069006700680074002000a900200031003900390031002d00390032
0020005400790070006500200053006f006c007500740069006f006e0073
002c00200049006e0063002e00200041006c006c00200072006900670068
00740073002000720065007300650072007600650064002e004900520056
004a0057004b002b00500061006c006100740069006e006f002d0052006f
006d0061006e0052006500670075006c00610072004900520056004a0057
004b002b00500061006c006100740069006e006f002d0052006f006d0061
006e004900520056004a0057004b002b00500061006c006100740069006e
006f002d0052006f006d0061006e004900520056004a0057004b002b0050
0061006c006100740069006e006f002d0052006f006d0061006e00500061
006c006100740069006e006f002000690073002000610020007200650067
0069007300740065007200650064002000740072006100640065006d0061
0072006b0020006f00660020004c0069006e006f00740079007000650020
004100470000b8003c2bb800322bb802bab26e231fb802c0b273321fb802
bfb26e241fbd02b502b30014001f02b402b3b2141fdfb802b3b401040213
1fb802a4b7d21f1fc360311f00ba01bc0001028eb27c181f410902900285
0018001f028f02840018001f028ab2cb181fb80288b2a6181fb802864039
761a1f2fa63fa64fa65fa66fa67fa68fa69fa6afa6bfa60a3f76af76bf76
c0f1041f7c2f7c3f7c03ff7c012f7c3f7c4f7c5f7c5fcba0cb0610411c02
850001000f0284001f0284004f02850050028500cf028400050000028500
4f0284006f0284008f02850090028500a002850006009d0155b2071fb1b8
0184b2031f67b801afb2081fc1bc0123000d001f0142017bb6051f95d707
1fd7bc01b2004f001f010b0108b20d1fd7bc01b2004f001f013501b2b40d
1f110840411d0233021200d9000d020100d9000d01e500d9000d01a900d9
000d019e00d9000d017000d9000d016700d9000d015d00d9000d015b00d9
000d0139400bd90dc4d90d8cd90d78d90db8012f400b5d0def5d0dc65d0d
795d0d4113020c00a2000d01bd00a2000d01a500a2000d018600a2000d01
6800a2000d013000a2000d011c401aa20de9a20dc8a20d70a20d69a20de3
5a0de15a0d635a0d575a0db8012cb20f0009410901f700600801001f01f3
0089019a001f01f2b2d2891fbc01ee0084019a001f01a2b286721fb8019f
b286cd1f4115019d00860801001f019c0086019a001f019b00600401001f
019a00600801001f0197007a0401001f0193b284891fbc018d0084012500
1f018cb284e41fb8018ab277cd1fbc018400640125001f0161b2d2891fb8
015fb284ab1fb8015eb284cd1fbc015a0068019a001f0138b2862d1f4111
0134008902ab001f012d006802ab001f012b00640156001f012a00640201
001f011bb286cd1fb80118400977bb1ffe86791ffcd2b80401b21ffbd2b8
0125b21ff884b80156b61ff677241ff568b80401b21ff464b80156b21fec
89b80201400b1feb84621fea84891fe777b80801b21fe464b80401400f1f
d1d2e41fd084891fcf849e1fc577b8019a40171fbd86811fbc779e1fb864
931fb764811faa84621fa864b80801b21fa1d2b80401b21f9e68b80201b2
1f92d2b80201b61f8b84cd1f8764b80125b21f7f64b80801400b1f7e8643
1f7d84931f7584b80801b21f7477b8019ab21f6f68b80401b41fd260191f
b80191b260181fb8028b401760291f6857281f86603c1f7a6e2f1f6d64e4
1f5e84931fb802874010a92d1fa977281f9f77af77bf7703896eb8010040
271f6e603b1fd06001606e1e1f306e406e506e03606e706e806e906e0455
180918099f029f030290be02130007009001ed00070090013d40430790e6
0790da07909007908f07908207906a07906207905f07905c072408220820
081e081c081a08180816081408120810080e080c080a0808080608040802
08000814b8ffe04032000001001416000001001606100000010006040000
01000410000001001002000001000200000001000002010802004a003041
0b023300400233005002330003008002330090023300020173744bb0c063
004b6220b0fb5323b80105515ab005234218b9000101ff858d16763f183f
123e113946443e113946443e113946443e113946443e11394660443e1139
46443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b2b2b2b73014b5079bc001f01980007001f0194b6071fe8
071f8d072b2b2b2b4b5379bc00900198000700900194b60790e807908d07
2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d5974752b742b2b
742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b00456953424b5058b1080042592b
2b2b2b2b2b2b2b2b2b73747573747573732b2b2b2b2b2b752b2b2b742b2b
2b2b2b0000>
[7125 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 3 <> CLIRMX+Palatino-Roman AddT42Char 
1 132 15 <0001fff2fecf018e0105000c0024bb000c029f000802a2b30805ad09b802
a1b4000c0b000d10d4d83910f4f439003ff43130033e0137363f01363717
020f010e4c4012090f6c164a1a7cb255fee87e8b4422721b071a1cfedfd2
2700>CLIRMX+Palatino-Roman AddT42Char 
1 224 17 <00010088fff6017700e5000b0011b700ad060a03ad090c10d6fd003fed31
30253216151406232226353436010032454631324646e546323146463132
46000000>CLIRMX+Palatino-Roman AddT42Char 
1 288 20 <0001007d000003540593002800534014a604a62802111757145812160825
004703070212b802a3b70d5808b30bd20217b802a340101b584f1e5f1e6f
1eaf1ebf1e051e49291076d45d18e4e4c4fde4e4e4003fd476dc18c03f3c
e4fd3c3130005d132f0137363736371702151114171e0217152623220535
3e02373612351134273427262322070699120a0a6b7eba351a1005031b35
93fd4030fedd982f1705080c010704070925aa047305520a1f364f1b0afe
3644fe8dde7243230f063d08083d090b16141f01274c018af13d1b070410
4c00>CLIRMX+Palatino-Roman AddT42Char 
1 500 41 <0001002c00000434058f0047009d40276a236a247a237a248c238c24fb23
fb24080b230b2402247f207f22562300210121210b180c7f0bb802894037
0947491373182d60395d015d3f5644564176480b0b1a11181aa92d582b48
2b3200135811a909580358060057010234573a573758353908003f3ce4ed
ed3fedc4e4e4fde4111239762f18e4fdc41112392f0110f4e4e4e4e4fd3c
e41076d418f4ed1112392f5d3ce4eded313000715d133516333224333216
1706072326272e012322070607060715163332373e013f01330717232726
272627262322071514171e02171526232207353e0137363736131134272e
022c986a4b01844449793119073f0910349965656c0602010470567f4c1d
110a083f07073f070b05081e39c9474b04021734767f7e71d976340a0c03
010303031733054d400608030455da794112110c362f1bcade030d051749
3ee4f5406d080e070d04ca88815f2411024008084002110f144d15010701
cf88825f23110000>CLIRMX+Palatino-Roman AddT42Char 
1 868 47 <000100250000049e058d00300066b2277f2ab80289400b282832091b5620
561e6000b8025c4029115d07560c562f097f098f09030976311657105713
5815110201200024205822a9282a582f582e0008003fc4e4e4c4fde4c411
12393f3ce4eded0110f45de4e4e4e4fde4e41112392fe4ed313033353637
3637363736351134272e02273516333237150e0107060706031114171633
2037363f013306070607062325227f3e110a040903040303173377f43a40
df77330a0c030103047270011a710d0a284316152918346cfdb060341d11
090e1c5c891a021a88825f2311024008084002110f144d14fef8fd606942
07241e27a695c90802030800>CLIRMX+Palatino-Roman AddT42Char 
1 1120 53 <0001002d0000054e058f004d01104057940a940b020309030a191e191f23
1f2c283511351235233a2849285d2c6710671167236e2c74117412791f79
207f2c80118012801380148f2c9111911291139114a411a512a521a422b3
09b30ab511b720da0ee70e281eb8028db71013141013134710b8028d4060
241e1424241e241e13101e101a243f24012424330c2a860c2f1a011a4f3a
5d36562f563360005d3f5d45564a562f470147764e1319101040242c1f27
4f27b0270327273f012f732d680057045808010219573a5740573d581c58
1e3b3f031a08003f173ce4e4ededed3fc4e4edfde41112392f5d1ad81ac0
1112390110f45de4e4e4e4fde4e4e410d45dd4ed1112392f5d1112393911
390709102b76d407052b3130015d005d1335161f0132373633321e011514
0e0107161713161716171633152623220726272627262737163332363534
26232207060706031114171e02171526232207353e013736373613113427
2e022d2750c039789c19bfaf605aab89195dfc6c1209090f334c393b5641
995541695f0a341bb6bca2a467630402010604021734768e7760e376340a
0c03010303031733054d40010205040644995a54a66e1e2379feb48b1007
03054006064bda7951866d1e03ac8d7b911f362f0efeebfe4488815f2411
024008084002110f144d15010701cf88825f2311>CLIRMX+Palatino-Roman AddT42Char 
1 1620 54 <00010038ffe303f805aa0039017640d567067606781877338c0a8c0b832c
832d080302030306050306081413363905332543255812582e5a2f68140d
0b0006110612031d061e062f170a270a360a39143d153d16343234335202
5203573257336b196b2a8405840682138214822d843184328433930b9711
91309336aa14aa15b50eb812b813b532b533c711ca14ca15e812f002f003
f505f006f91330353830171b120c182b180c08112b2f289b08ab08bb08cb
08db08eb08069428a428b428c428d428e42806121111602f30142f2f302f
302f301111121112302f352b11120c17227f21b8028940131e1e850c010c
d19f35af350235353b17037f02b80289401300008a2b012bd117a63a1112
1b082f3038281eb8fff4b6000c001e381b21b80102400928681b03020868
3809003fedc43feded11123939383811123939111239390110f6fd5d392f
f4ed1112392f5dfd5d397c2f18f4ed1112393911123939070910d9c00709
102b10c000717111123911123938381112391112393130005d71015d3736
37331e0333323e0135342e01272e01272e0235343e01333216170e010723
2627262726232206151416171e01171e0215140021224110034405175894
4565aa4e27503b25de4e68623d7bf18d55c9570e0c03440306192b677091
ad3e5037fa645e5a3afeb6fefac63160d792353c2f5d975642603b0c061c
1120568c5176d1742d2b3f6d6a9a0e241d3ab18d555d1c1321131c4d7d54
c7fed800>CLIRMX+Palatino-Roman AddT42Char 
1 2164 68 <00020052ffef03cf03c20033004100ac4031060b0c404940692c7625792c
7637763884258a2c9b2ce425e426e4270e09251925021c562a1d416e180e
56201030100210b802854015434000217f018f019f010301013b7a202330
230223b8028e402a4200402a411d34212a1d2a0920052e152e252e352e45
2e05f42e012e830907175a1c1a58180a3e84200b003fed3fe43ced3fed5d
71111239392f1acd10c9101acc0110f65dfd392f5d1ac91a10fc5de4c4fd
3c3ce4313000715d13273635342736373633321617161507111417161716
1f011526232207370e0123222635343e0137362437362e012322060f0106
050e010706070615141633323637d93501017f513e4d729c261a0408060d
0a2041523e3c6405cc4c3a79872f42223a010580013072523b590a121b01
be82b82617111a524943834102ad0e17282a19531d1556503861b7fed630
150f07060206390707b09a27816b457243101b3e0f5f6a44200b243cbf16
361d1122323d4a534d4d0000>CLIRMX+Palatino-Roman AddT42Char 
1 2536 71 <00020054fff004a305cc002e003f00e540740041b916bb17b93be61de537
06293b293c34203421343744374438533753387a237c30882383279327a4
27b427c916c923c427c934c93cd816d327d637d638d83ce527ea30e638fc
1c1e3b2115181518151e0113562a5628152f6e0e6b05b30f090100092009
5009600970099009a009c0090809b80290401041367a0f1e4f1e02201e30
1eef1e031eb8028e400c403d2f393215281a25005a01b8012c4011040032
8325070e5a1258130f0a39841a0b003fed3f3ce4ed3fed3ff5ed11123939
111239390110f65d71ed10fc5d71e4e4fd3c3ce4e4cc11123907101ac831
30005d015d01353e013717060f0111141e0217152623220736370e010706
23222e01353436373e0233321617113427262726132e0123220e01151416
33323e0137363502a76f99490d04050407122a687a322b85030228872650
3d71be673f301bc077463f79390c040b142f449548528a49b680436a500b
08054e390c21180955f3a0fd8e66951d120936070745751d74251470d585
64b3311c72331f2001078b1e0b0509fd8c4b4554aa77b7ce386c422cad00
>CLIRMX+Palatino-Roman AddT42Char 
1 2956 72 <00020033ffe8039103c800240032008340579a2ed409d50eeb08e60de60e
06451f501f631ff93104061e01181d252b25871c1d1d2130306412070040
242101100109211a212a213a214a21052183060b00a42d7a18564f166f16
af160316cb34251d7a200a010a7c3310f65dfdc410fe5de4ede4003fed71
3dd438181ac81a393fed1112392f3cfdc4111239313001715d005d250706
070e0123222e01353436373e01373633321e0115140706070623211e0233
323637011617163332373635342623220603742045202f794384d6773f28
1d7a3c4f5c70b5540448396c6cfebf025fa75a3d7959fd8f1c4e9538852a
01806b718a9b482b0e151d6edb9373b92c2053182166b06f1c280e04088f
b1542734018803030505180d9e94a2000000>CLIRMX+Palatino-Roman AddT42Char 
1 3244 74 <00030047fdca045c03c9003a0047005e01414099662566266c286c297b28
7b29733d73538b288b29853d961c962093539357ab25cb25db25ec25f654
14065401092f09301a2f1a302b202b21292f29303b203b216035603d6b44
6046605360547d437d44ab0cac0dab2dbd0db325bd2dcc0dcc2ddd0ddd2d
1c485b5e4f4c25035527154a0d12162e3f0b010300252a324f52273b4c2e
120d0c051039594200011a0b642f3f013f3f4a3603e700b80187b6456436
07165615b8015f400d5d204a304a024a0b55641e0f60b801a0b306597a1a
b80131b30603f301b80136b2427a06b80221401432527a22f33210aa2af3
3b7a003220320232495fba012e012400182b4e10f44d5dedf4ed10f4ed10
fdedf4e410f4ed10e6003fed3f5d3cfde43fedf4ed1112392f5ded011112
391112391217391139123911123900111239111239123939111239121739
10e63130015d00715d01170607231615140e010706270607061514161716
3337321e011514060423222e013534363736372e0135343736372e023534
3e01333216173605141e0133323635342623220601220706070607060706
15141633323e01352e022726045408270cba174f9856385f41110b1d1e2d
73d871753887fef6a58ac25d1b207a35532f1e31695a613668f669447b37
bcfd333567425684845d61760125952613184f050a0c15a38f6aaf590321
2f29180375133b163b344c9167120c02341a12151825070c043b794c67d5
7b56904f2c4d2c382a1b30181458294b1943734566a1652c2c01de478644
6f7b7e957bfcf004031138060a1f3839699155934a4042260c03>CLIRMX+Palatino-Roman AddT42Char 
1 3840 76 <0002002d000002260580000b002f005e401060067006800690060406fe00
040c5a0db8018740170f071c5a225a1f58211d0a09fe035610561d6b0f31
0131b80285400b126e0c6b216b28562c562ab90284003010f4e4e4e4e4fd
e45de4e4f4ed003f3ce4eded3ff4ed3fed5d313001321615140623222635
34360335363717061d01121716171e01171617152623220735373e013736
3734133534272e0101212f41422e2f4242c5c28416080501010a05101006
69985b50b65f1517060b03060a061f0580422f2e42422e2f42fdb739163e
10d571b6fefc153217090d0401023907073901010d0a14330d0112b0951c
0f0f0000>CLIRMX+Palatino-Roman AddT42Char 
1 4084 79 <0001002d0000022405d2002e004fb30f300130b8028540142b6b1bb32356
216e07560c56126b006b60090109b80284b32f125a13b8012c400b16002a
5a015a2d582b000a003f3ce4eded3ff4ed0110f45de4ede4e4fde4e4e4e4
5d31303335373e0137363736131134272627262726233536373633321615
140f01060f0111121716171e0117161715262322335e1617060b02010606
0407050b0f7be2580d07070802010501020501010b041010076888676239
01010d0a14330d0112019fa7b2780e0a04073b1c2a060908070d21b37e9c
fdf9fefc153217090d0401023908>CLIRMX+Palatino-Roman AddT42Char 
1 4308 80 <0001002a000006ef03c3007e010c403ba33ba33ce42df42404d526d62702
842601131d13261349134a136c231d236c3524794579688a450b49252526
6c211c1c1d1c1d2526047b22105a11b8012c402b155647842b076a842207
7a5d573b04015a3f585a587d587b5c58403c05000a2642251d661c40b343
6e3b80b80285b5345600310131b80291402d005801586b505625734d6e0f
5c1f5c2f5cbf5ccf5c055c6b635600660166007b017b6b73566e5619561c
706e66b80291400e106b006b0c560756600970090209b90284007f10f45d
e4e4e4e4e4fd3ce4e4e4e45d105de4e45dfde4e4e45df45de4e4c4fde411
1239111239003f173ce4e4e4fd173c3fed3fedf4f4ed111217390507101a
c90710c93130005d0171725d3335373e0137363734133534272e02073536
373633321615140706073736373e01333216173736373e0133321617161d
0117161516171e011716171526232207133735342e012322070e011d0117
161716171e01171617152623220735373e01373637361335342e0123220e
0107061d01121516171e01171617152623222a5f1517060b030603030d20
72ca5d1407070801040283190617562f6096286e250e1a602f729a160e03
03020a04111006687e2e2c850903226d4853433220030201020a04101007
68935948be5f1617060b0201052864463c6b3a060a06020a04101106688a
61563901010d0a14330d011277505c3b160b01391c2d0a0a0a0709305f78
16030d165e5c6622080f1a794d33a9688b79153217090d04010239060601
146c56a87b4c30256491438b79153217090d0401023908083901010d0a14
330d01124e817747334c2b45613dfefc153217090d04010239080000>CLIRMX+Palatino-Roman AddT42Char 
1 4936 81 <0001001c0000049b03c3004b00a7402dbb47bb48e422ea3b04161d163a16
3b241d243a243b352135227a378a379a370b48343e31b334892d6b285600
25b8028540124d405618561c3e6e006b106b07560c560009b80284400e4c
403b1d211d1c1d1c311f105a11b801874016155639841f072c5a475a015a
2d3148034a582f58000a003fe4e4173cededed3fedf4f4ed11123939071a
10c91a0110fc5de4e4e4e4fd3ce4e410fc5de4e4fde41112393130005d01
5d3335373e0137363734133534272e020735363736333216151407060737
3633321e0117161d0114171e011f011526232207363d0134272e0123220e
011d01121516171e01171617152623221c5f1517060b030603030d2072ca
5d14070708010303ba52495191490c07070515166b624138820e0c117855
4b7c3506020a04101106687a63543901010d0a14330d011277505c3b160b
01391c2d0a0a0a070924749f1e42644c2dceb1822f1e170303390707f741
a89d314352475d6e79fefc153217090d0401023907000000>CLIRMX+Palatino-Roman AddT42Char 
1 5320 82 <00020044ffe1041a03c7000f001d00b74057b602bc09b512ba19c502cc09
c312cb19d901da04d60ee504e80cec0df907fb09f915f916f51c13041a01
9512a408a412aa19e411e6160649081b64030714640a0b177a0006200630
060306cb1f107a2000300002007c1e10f45ded10f65ded003fed3fed3130
43794038011d082612260e0f0d0f0c0f030619261509175f01130b105f00
1a04175f011c02105f001607145f00110f145f0018051b5f011d011b5f01
2b2b2b2b012b2b2b2b2b2a2b2b81005d01715d13340033320015140e0123
222e01272637141e0133323635342e0123220644011ddfd2010888f89574
a1641a2ebd529b5b749c5d90577b9901cce0011bfef8d192f2894e763e6d
c67bfe75b8bf9fe75fb2>CLIRMX+Palatino-Roman AddT42Char 
1 5600 83 <00020024fdcc047c03c40043005500b94043394d4d4d5b4d75458c249c24
ac10ac24a849ba10bc24cc24dc24ea24ea25f414f415f4161205157a1a89
1a9515b91ab949c91ac949084453474f0f1125032213005a01b80187401e
06564f841307478347220b2f5a355a325834300e4b7a20175f17e0170317
b8028a401957306b28560a560f25446e006b346b3b5640565f3ecf3e023e
b90284005610f45de4e4e4e4fd3c3ce4e4e410f65ded003f3ce4eded3f76
ed183fedf4f4ed11121739111239393130015d005d1335323e0137363332
16151407061d0136373633321e0115140e02070e02070623222627151617
16171e01171617152623220735373e0137363736131134022e0127131e01
33323e0135342e0123220e010706152412748e240b0707090102a92a376d
7fb8531d2d37180e75851a3940325f3c0501010b041110096e7dce723d5f
1517060b03010508091410dc35884b5b955753984d396f5a0f0603373a11
2913060a0c05131d186a9d141b73b7683f706353150d5e450812181d9ffd
1a31170b0d0302023905053901010d0a14330d01110163ad016c211103fd
9a363e5bc0716da1512d562713360000>CLIRMX+Palatino-Roman AddT42Char 
1 6036 85 <0001002f0000030003c3003c008540230b280b290b2aa41fa420a421d628
d629fb28fb290a2b282b29022838161d3823115a12b80187402c17562c7a
2307385a015a3b5839000a402921285626263e0a3832561a561d306e116b
006b08560d565f0a010ab90284003d10f45de4e4e4e4fd3ce4e4cc111239
2ff41ac81a003f3ce4eded3fedf4f4ed111239111239313000715d333536
373e01373637123d0134272e02073536373633321615140706073e01373e
0133321f010607232e012322061d0114171e02171617152623222f710911
11050a020603020d2172ca5d140707080105012d4c111e4e2a2a29060f02
2d173d2e4d6c0501080d0f1e84b07c80390202030d0c1731010b0c77505c
3b160b01391c2d0a0a0a07093d8034660f1a1f120e8565302c7f7f6742af
3e220f0509093907>CLIRMX+Palatino-Roman AddT42Char 
1 6344 87 <0001002efff2028c04fb003100834021ea29012e272e282e293d273d283d
294d274d284d29092820400121000805030707b80254402803124700582f
f60a581003061f1c8420250b112020332e08b30a1756166e000556032a56
5f2e012eb90284003210f45de43ce4ccfde43ce41112392fc4003fc8fdc0
3f3ce4fde476c41810f411123939101ac81a0138313001715d1335363734
27363717060316333237363717072623220703061e02173236371706070e
0123222e0227363736351123222e643b066841180b0d5010095e341a0715
3f35355e06030a1c2d362933270c2f2c26422b353f342205010301293203
102a261eee4224291453fee501020103075d0101fe69953a2b1a07070e27
25280e09182b424744511013019f>CLIRMX+Palatino-Roman AddT42Char 
1 6628 88 <0001001affea049f03c4006200d840481708170914371438143927112712
2713243724382439c409c40ac437c4380f0c380c390c3a2208263a2064bb
37ed1008111811071438380707090709383d3509074e05224a5a234bb801
874044274e07005a035805010a35840e0b09170738313f0f4b014b6b0558
073d5642563f6e016b52b35c560f5a01205a6f5aaf5ae05aff5a055a642b
b3316e1a561456236b0017b90284006310f45dece4e4fde410d45d71e4e4
ecfde4e43ce4e45d111239111239003fed3f3ce4ed3fc4f4c4fdc4111239
391139390709101ac901111239383130015d005d25152623220736370607
06070e01232226272e013534363d01342726272627262322273536373633
32161514070607061d01141e013332363736373e0137363d013427262726
2726232227353637363332161514070607061d0117161716171e01171604
9f83434a4c06033c5313122b563c516d271d1f0503020704090f263720d7
611009070901040306215f46305f261c1d160e020503020704090f263720
d7611009070901030406020301010a051010063939070751653053130918
152c2d21694a233e1eab1a6942140a060a01391835090a0a080c205ba739
c37a633b211f17271d1f1e5857541a6942140a060a01391835090a0a080c
205fa339898b79153217090d04010000>CLIRMX+Palatino-Roman AddT42Char 
1 0 0 <0002010000000500050000030007005bb10504b80128b2000607bb012800
02000101d0400b0303000a0947474a020605b80128b60303027b000704b8
0128b401004908d5b901dd00182b4e10f43c4df53c10fd3c10f53c4e1045
6544e6003f3c4d10fd3cf53c10f53c3130211121112521112101000400fc
2003c0fc400500fb002004c0>CLIRMX+Palatino-Roman AddT42Char 
CLIRMX+Palatino-Roman /CharStrings get begin
/space 3 def
/comma 15 def
/period 17 def
/one 20 def
/F 41 def
/L 47 def
/R 53 def
/S 54 def
/a 68 def
/d 71 def
/e 72 def
/g 74 def
/i 76 def
/l 79 def
/m 80 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/t 87 def
/u 88 def
end
CLIRMX+Palatino-Roman /Encoding get
dup 32 /space put
dup 44 /comma put
dup 46 /period put
dup 49 /one put
dup 70 /F put
dup 76 /L put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/ZDWBNX+Palatino-Roman /CLIRMX+Palatino-Roman findfont ct_VMDictPut/ZDWBNX+Palatino-Roman*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /.notdef /period 2{/.notdef}rp /one 20{/.notdef}rp /F 5{/.notdef}rp /L 5{/.notdef}rp /R /S 13{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u 138{/.notdef}rp]ZDWBNX+Palatino-Roman nfZDWBNX+Palatino-Roman*1 [7.9807 0 0 -7.9807 0 0 ]msf98.7065 19.5283 mo(Li et al., Supplemental Figure S1, Related to Figure 1)[4.93999 2.32239 1.99517 3.93452 2.60174 1.99518 4.18987 2.32239 1.83556 1.99517 1.99518 4.18982 4.75647 4.84427 4.70859 2.33835 3.9026 7.06288 3.92654 4.60486 2.75339 4.18985 2.32239 1.99518 4.35745 2.29047 4.72458 5.01186 3.26414 3.82278 1.99518 3.95837 3.75891 1.99516 1.99518 5.3311 3.87067 2.39423 3.93448 2.68953 3.91855 4.87614 1.99518 2.64163 4.3575 1.99518 4.35747 2.29047 4.72458 5.01184 3.26413 3.82278 1.99518 0 ]xsh%ADOBeginSubsetFont: RCIRMX+Helvetica-Bold Initial
ct_T42Dict begin
-1.016 -0.48 1.434 1.156
 256 array 0 1 255 {1 index exch /.notdef put} for  /RCIRMX+Helvetica-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f321186289e000000cc000000606376
74206741296a0000012c000003886670676db24d5cc5000004b400000b97
676c7966d3a208cb00005fa40000034c68656164d03e6d8b0000104c0000
0036686865619a0f85080000108400000024686d7478c2fdbc55000010a8
000022486c6f6361001bd69c000032f00000224c6d61787011060c900000
553c000000206e616d65ea5eadef0000555c0000067470726570b552e591
00005bd0000003d367646972000000000000000000000000000303d402bc
00050000059905330000011e05990533000003d000660200000000000000
000000000000e00002ff5000785b00000000000000007079727300200009
feff0600fea4003d07ae01db2000019f4f010000044205c2000000200000
05c0001105c2002d0597001d0442001d0000ffda0000ffdb0000ffdafe53
ffef05d0000afffdffed03340000012200000122dffb011400af000700b7
007e000400d200aa0109002300ed013200d9011d012a00d800fe00db00e2
001a008b00a0001a004500e801f6000900e90128013200360082009e009f
ff700070003f003f00e801050015003800e9ff7bffc8fff90042008a00c4
01070113011dffb9002f00870087009a009c010c0262ffb10018004c0077
0080008200c900daffb2ffea001a003600e50111012f043bffdd00020005
001a0039008900aa00b701210123012a015bffe5000200180023005c00aa
ff4dff76ffb2ffef001a002f004e007b008a00e1011f0126012b019a01de
03edff80ff8e0007001c004e005500630063006d00810098009c00ad011f
01260162041c051500390044004b0063008e00cc00e800f2010001290142
017802d503ea03f0043b049affc400050055005c0060009f0103011d0124
01550164017001ad01b401c301f602370261033903d5047004a100020055
008800a100bd00c700d300dd00eb00ed00fa00fd0104012b013e014f017b
019d01ad01e20233025d027d028c02da02ef033103de0407048b058505bb
ff04ffd5fffa0007001e002a003b004700510058006500650066006e0075
007f00840107009700b100c300cc00df00df010a0110012f013101470154
015b016b0179009101a401ba01dc01e401e601e901f60213021f0223022f
0276027d0282028902ad02b202b902ed03110374037d03c003de03f60415
045d04c004c004df052d0574061c064b0751fe94fedfff2dff90ff9affea
0016001600240029002d003e0104006d006d008400870089008e009c00a4
00ab00ae00b200b2fffb013900c400d100df00e100ef00f70121011c011c
012101320138015001510154016c016d017f019801a401aa01b601ba01bb
01bb00d701d701fb01fb01fe00190209022d025b026102790279029a0098
02d302da02ef030c03210328032d034b0353fff103ad03b103f20425045a
0471047b048a0498049f051c053d0557055a0570059505b605cb05d605ef
05f4061d068706a406b406d307080734079807fe012201320120012500b4
00be0082009603700132012400430184011d015600cc010500ed00c500fb
00f900c000a7011d00fe035500880026ffa100b8ff8800dd00bd00b5037c
003c00910293024aff3f03a803090132fff700820030002a002a002a002a
002a002a402a292827262524232221201f1e1d1c1b1a1918171615141312
11100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b090
51582320b00d44235921212d2c20204518684420b001602045b04676688a
4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b00043617d
6818b0004360442d2c45b01a234445b01923442d2c2045b00325456164b0
50515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b000
4360442d2c20b0032552582359212d2c69b04061b0008b0c6423648bb840
0062600c642364615c58b0036159b002602d2c45b0112bb0172344b0177a
e5182d2c45b0112bb01723442d2c45b0112bb017458cb0172344b0177ae5
182d2cb002254661658a46b040608b482d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b0005058b21a
401a4523604459b0005258b219401945236044592d2cb9187e3b210b2d2c
b92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b
2d2cb9187ec4e00b2d2c4b525845441b2121592d2c0120b003252349b040
60b0206320b000525823b002253823b002256538008a63381b2121212121
59012d2c456920b00943b0022660b00325b005254961b0805358b2194019
4523616844b21a401a4523606a44b209191a45652345604259b00943608a
103a2d2c01b005251023208af500b0016023edec2d2c01b005251023208a
f500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c00
3c2d2c20b001610110203c003c2d2c764520b00325452361681823686044
2d2c7645b00325452361682318456860442d2c7645b00325456168234523
61442db8002a2c4bb800095058b101018e59b801ff85b800441db9000900
035f5e2db8002b2c2020456944b001602db8002c2cb8002b2a212db8002d
2c2046b003254652582359208a208a49648a204620686164b00425462068
6164525823658a592f20b00053586920b000545821b040591b6920b00054
5821b0406559593a2db8002e2c2046b00425465258238a592046206a6164
b0042546206a61645258238a592ffd2db8002f2c4b20b0032650585158b0
80441bb04044591b21212045b0c05058b0c0441b2159592db800302c2020
456944b001602020457d691844b001602db800312cb800302a2db800322c
4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a23
5920b0032653582321b801008a8a1b8a235920b0032653582321b801408a
8a1b8a235920b80003265358b0032545b8018050582321b8018023211bb0
03254523212321591b2159442db800332c4b535845441b2121592db80034
2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db800
352c2020456944b001602db800362cb800352a212db800372c2046b00325
4652582359208a208a49648a204620686164b00425462068616452582365
8a592f20b00053586920b000545821b040591b6920b000545821b0406559
593a2db800382c2046b00425465258238a592046206a6164b0042546206a
61645258238a592ffd2db800392c4b20b0032650585158b080441bb04044
591b21212045b0c05058b0c0441b2159592db8003a2c2020456944b00160
2020457d691844b001602db8003b2cb8003a2a2db8003c2c4b20b0032653
58b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653
582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920
b80003265358b0032545b8018050582321b8018023211bb0032545232123
21591b2159442db8003d2c4b535845441b2121592db8003e2c4bb8000950
58b101018e59b801ff85b800441db9000900035f5e2db8003f2c20204569
44b001602db800402cb8003f2a212db800412c2046b00325465258235920
8a208a49648a204620686164b004254620686164525823658a592f20b000
53586920b000545821b040591b6920b000545821b0406559593a2db80042
2c2046b00425465258238a592046206a6164b0042546206a61645258238a
592ffd2db800432c4b20b0032650585158b080441bb04044591b21212045
b0c05058b0c0441b2159592db800442c2020456944b001602020457d6918
44b001602db800452cb800442a2db800462c4b20b003265358b0801bb040
598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b80100
8a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003265358
b0032545b8018050582321b8018023211bb003254523212321591b215944
2db800472c4b535845441b2121592db800482c4bb800095058b101018e59
b801ff85b800441db9000900035f5e2db800492c2020456944b001602db8
004a2cb800492a212db8004b2c2046b003254652582359208a208a49648a
204620686164b004254620686164525823658a592f20b00053586920b000
545821b040591b6920b000545821b0406559593a2db8004c2c2046b00425
465258238a592046206a6164b0042546206a61645258238a592ffd2db800
4d2c4b20b0032650585158b080441bb04044591b21212045b0c05058b0c0
441b2159592db8004e2c2020456944b001602020457d691844b001602db8
004f2cb8004e2a2db800502c4b20b003265358b0801bb040598a8a20b003
2653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a2359
20b0032653582321b801408a8a1b8a235920b80003265358b0032545b801
8050582321b8018023211bb003254523212321591b2159442db800512c4b
535845441b2121592db800522c4bb800095058b101018e59b801ff85b800
441db9000900035f5e2db800532c2020456944b001602db800542cb80053
2a212db800552c2046b003254652582359208a208a49648a204620686164
b004254620686164525823658a592f20b00053586920b000545821b04059
1b6920b000545821b0406559593a2db800562c2046b00425465258238a59
2046206a6164b0042546206a61645258238a592ffd2db800572c4b20b003
2650585158b080441bb04044591b21212045b0c05058b0c0441b2159592d
b800582c2020456944b001602020457d691844b001602db800592cb80058
2a2db8005a2c4b20b003265358b0401bb000598a8a20b0032653582321b0
808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003265358
2321b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8
0003265358b0032545b8018050582321b8018023211bb003254523212321
591b2159442db8005b2c4b535845441b2121592db8005c2c4bb800095058
b101018e59b801ff85b800441db9000900035f5e2db8005d2c2020456944
b001602db8005e2cb8005d2a212db8005f2c2046b003254652582359208a
208a49648a204620686164b004254620686164525823658a592f20b00053
586920b000545821b040591b6920b000545821b0406559593a2db800602c
2046b00425465258238a592046206a6164b0042546206a61645258238a59
2ffd2db800612c4b20b0032650585158b080441bb04044591b21212045b0
c05058b0c0441b2159592db800622c2020456944b001602020457d691844
b001602db800632cb800622a2db800642c4b20b003265358b0401bb00059
8a8a20b0032653582321b0808a8a1b8a235920b0032653582321b800c08a
8a1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321
b801408a8a1b8a235920b80003265358b0032545b8018050582321b80180
23211bb003254523212321591b2159442db800652c4b535845441b212159
2d000001000000010000a723d8245f0f3cf50011080000000000a2272e80
00000000cb97f49ff7dcfc270b7e09460001000900010001000000000001
00000629fe2900000c01f7dcfcdb0b7e0001000000000000000000000000
0000089205c7009a00000000023900000239000002aa00e103cb00a70473
000004730038071d002f05c7006f01e7006302aa005902aa0015031d002f
04ac00490239007602aa002f023900800239ff90047300400473008e0473
00400473003604730036047300360473004004730034047300360473003d
02aa00e802aa00e804ac001704ac004904ac001704e3007b07cd00c705c7
003405c700a105c7005c05c7009c055600a504e3009c0639005505c7009a
023900840473002d05c700a104e3009c06aa009705c70097063900650556
00a30639006505c700a30556005504e3002105c7009c0556002f078d001e
055600210556002304e3003402aa00800239ff9002aa002f04ac008b0473
000002aaffce0473003b04e3007b0473004704e3003f0473002f02aa0015
04e3004204e300870239008902390009047300820239008b071d008004e3
008704e3004204e3007d04e3003c031d00820473004202aa001504e3007d
0473001a0639000e0473001a0473001504000021031d0000023d006a031d
002d04ac000405c7003405c7003405c7005c055600a505c7009706390065
05c7009c0473003b0473003b0473003b0473003b0473003b0473003b0473
00470473002f0473002f0473002f0473002f023900760239ffce0239ffb6
0239ffd504e3008704e3004204e3004204e3004204e3004204e3004204e3
007d04e3007d04e3007d04e3007d047300470333005e0473004504730042
0473004102cd00910473ffc304e3008905e5001a05e5001a080000cb02aa
007602aaffd504640049080000120639004705b400190464004904640047
046400490473ffea049cffcb03f4002405b4fff706960007046400290231
007602f6002802ec000e06250031071d003804e3002a04e3006d02aa00e1
04ac00490464ffd50473001e0464004904e5fffa047300af047300000800
00bd0239000005c7003405c70034063900650800004b078d003f0473fffb
080000f10400008b0400009702390089023900840464004903f400210473
0015055600230156fea305f4004402aa00aa02aa00aa04e3001c04e3001c
047300470239007102390092040000920800000405c70034055600a505c7
0034055600a5055600a5023900760239ffb60239ffd50239ffce06390065
06390065065200690639006505c7009c05c7009c05c7009c0239008902aa
ffb602aaffa802aaffbd02aaffc902aa009a02aa004202aa001202aaffd3
02aa004202aaffb604e3fff10239ffe8055600550473004204e300340400
0021023d006a05c7001204e3006d05560023047300150556008004e30080
04ac004904ac005502aa005002aa001a02aa001206ac002f06ac005a06ac
004e047300000639005504e3004202390084055600550473004205c7005c
0473004705c7005c0473004704e3003f05c700340473003b05c700340473
003b05c700340473003b05c7005c0473004705c7005c0473004705c7009c
0600003f055600a50473002f055600a50473002f055600a50473002f0556
00a50473002f055600a50473002f0639005504e300420639005504e30042
0639005504e3004204e3004205c7009a04e3008705c7000f04e3fff1035c
fffc037100010366000a035c000c0239000b0239000306ac008404720089
0473002d027bffc905c7008e0473005804e3009c0271008b04e3009c0239
002704e3009c0356008b04e3009c0329008b05c7009704e3008705c70075
04e3005c05c7009704e3008704e300870639006504e300420639006504e3
00420639006504e3004205c700a3031d008205c70092031d006905c700a3
031d00360556005504730042055600550473004204e3002102aa001504e3
002103b8001504e3002102aaffe305c7009c04e3007d05c7009c04e3007d
05c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c04e3
007d078d001e0639000e055600230473001504e300340400002104e30034
04000021055600550473004204e3002102aa0015047300360000fc910000
fc900000fc250000fc180000fc2c0000fc360000fd0d0000fc450000fcb5
0000fbd80000fc250000fd010000fc9d0000fcb50000fbfb05c700120639
005504e3004204e3009c0239008b05c700a10473008205c7009704e30087
05c700a3031d0080020e000802aa00e702aa002f023900090473008202aa
0015047300300473002e047300460473003a0000fcfb0000fc2c0000fc36
0239ffcc0239ffc905c7009704e300870000fc2b05c7002905c700a805c7
00a804a000a805c70019055600a80800001904e3003d05c7008f05c7008f
05c700b205ec004e06aa008f05c7008f0639005a05c7008f055600a805c7
005a04e500190556003106ac003d0556001b05c7008f0556005a078d008f
078d008f06aa002f078d00a8055600a805c7005a0800008f05cb00460473
003904e3004604e3008f038d00870531001f0473003506ac00100400002d
04e3008704e3008704e3008f0556004605c7008704e3008704e5004604e3
008704e3007f04730046040000290473001d06a800460473001f04e30087
0473003f06ac008706aa00870556002906aa008704a000850473004606aa
008704e30056055600a80473003504a000a8038d0087023900830239008f
0473002f05c7005a047300460239ffcf0239ffcf080000140750004607e9
008f070e0087023900040556004e0664001704e3002905c700b204e3008f
047300440617001004e30029055600310473001d05c7008f04e3008504e3
00a8038d00870000fd010000fd010000fd010000fd010000fbd80000fd43
0000fc9e0000fc360000fc910000fc900000fc2c0000fd0d0000fc450000
fcb50000fd430000fc250000fc250000fc360000fc360000fc180000fc54
0000fc2c0000fc180000fc2c0000fc2c0000fc2c0000fd0d0000fc2c0000
fd010000fc360000fc240000fc9e0000000002aa001504e30086071d0080
031d0081071d0080031d0082031d0081040a0046040a004702390089030b
ffd802aa001502aa0015047300190639000d0473001404e3007b04e3007b
04e3007b0473008104bc003b04bc003b05c7005b05c70012049e00480556
00a4055600560473004304c3003d0758009c0671007d0633005b023d00a5
043b00a502aa00e10494001b04730047011d004502aa00af02aa00af0b62
0004056500bd02a500bd040000970239008502aa002f0473000004e200af
04e200af06e400af06e400af02aa002f02a500bd02aa002f080000f10554
01d000000000000000000000000000000000000000000000000000000000
000000000239000002390000023900000239000002390000023900000239
000002390000023900000000000000000000000000000000000000000000
023900000239000002aafff6043b00a504e3007b02aa002f02aafff60473
00050473000005c7003404e3009c0473002e07920065065c00420000fd22
0000fd220000fd220000fd220000fc900000fc8d0000fd470000fc790000
fc990000fc940000fc860000fc9a0000fc080000fcf10000fcf70000fc80
0000fc820000fc540000fbfb0000fc810000fc810000fc810000fc820000
fc820000fc3602aa00af04e200af02aa00af02aa00af0464001304640019
04510011046e002405b4007705b400830231ff5e0231ff6e0464ff520464
ffd5046400110464001a08fa005e0816005e05c700a10239008404720084
06ab0084078f00840556002f078f002f09c8002f0c01002f078f00840556
0021078f002109c8002104e3009c05c7005c05c7009c06aa009702390089
0472008906ab008906ac00890473001a06ac001a08e5001a0b1e001a06ac
00890473001a06ac001a08e5001a0239008b0473004704e3003f071d0080
09d70048090f0058087b003f0876006d06af006d042c008b09440063073f
00680667005d05c700340473003b0239ffb60239ffb60639006504e30042
05c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c04e3
007d05c7009c04e3007d05c700340473003b05c700340473003b08000012
071d00380639005504e3004205c700a1047300820639006504e300420639
006504e300420239ffb60a0c006d0939006808ab003f0639005505c70097
04e3008705c700340473003b08000012071d00380639004704e3002a05c7
00340473003605c700340473003b055600a50473002f055600a50473002f
0239ff1d0239ff190239ffc60239ffcc0639006504e300420639006504e3
004205c700a3031dffaa05c700a3031d005e05c7009c04e3005c05c7009c
04e3007d05c7009a04e3008705c700340473003b055600a50473002f0639
006504e300420639006504e300420639006504e300420639006504e30042
0556002304730015040000970239008405c700340473003b05c700a104e3
007b05c700a104e3007b05c700a104e3007b05c7005c0473004705c7009c
04e3003f05c7009c04e3003f05c7009c04e3003f05c7009c04e3003f05c7
009c04e3003f055600a50473002f055600a50473002f055600a50473002f
055600a50473002f055600a50473002f04e3009c02aa00150639005504e3
004205c7009a04e3008705c7009a04e3008705c7009a04e3008705c70082
04e3006605c7009a04e300870239ffa80239ffa00239ffd90239ffe905c7
00a10473008205c700a10473008205c700a10473008204e3009c0239008b
04e3009c0239ffbd04e3009c0239ffbd04e3009c0239ffae06aa0097071d
008006aa0097071d008006aa0097071d008005c7009704e3008705c70097
04e3008705c7009704e3008705c7009704e300870639006504e300420639
006504e300420639006504e300420639006504e30042055600a304e3007d
055600a304e3007d05c700a3031d008205c700a3031d008205c700a3031d
005105c700a3031d00010556005504730042055600550473004205560055
047300420556005504730042055600550473004204e3002102aa001504e3
002102aa001504e3002102aaffe304e3002102aa001505c7009c04e3007d
05c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c04e3
007d0556002f0473001a0556002f0473001a078d001e0639000e078d001e
0639000e078d001e0639000e078d001e0639000e078d001e0639000e0556
00210473001a055600210473001a055600230473001504e3003404000021
04e300340400002104e300340400002104e3008702aafffc0639000e0473
001502aa001505c700340473003b05c700340473003b05d3003404ec003b
05d7ffe804a8ff8505c70034048d003b05c700340473003b05c700340473
003b05c700340473003b05c700340473003b05c700340473003b05c70034
0473003b05c700340473003b055600a50473002f055600a50473002f0556
00a50473002f057500a5047d002f0556002b04a2ffb4055600a50473002f
055600a50473002f055600a50473002f0239008402390089023900840239
00890639006504e300420639006504e300420639006504e3004206390065
04e3ffc00639006504e300420639006504e300420639006504e300420792
0065065c004207920065065c004207920065065c004207920065065c0042
07920065065c004205c7009c04e3007d05c7009c04e3007d0758009c0671
007d0758009c0671007d0758009c0671007d0758009c0671007d0758009c
0671007d0556002304730015055600230473001505560023047300150556
002304730015055600a50473002f055600a50473002f056d008605df008e
048600370486008708d9002006dd000c056d002904860027056d00290486
0027056d00860486003708d9002006dd000c054f003d040a002b05df008e
0486008705df008e048600870655005a0486005005df005b04120050056d
00170412001e056d00170412001e056d00170412001e05ac0059047a004c
074800a80600008d08000012071d003806aa0097071d008005c700a3031d
00600222ffbc05c7003705c700a204e300a205c7001b055600a204e3003d
05c700a206390068025e009305c700a20558002d071a00ae063900ba04e3
00520639006805c700a2055600a204e3002f04e500290556002705c70042
0556002d06ac007b06390044025e00040556002704e5004804d500770473
002504e3006204730077038d005204e1009a04e100810239008d0473008d
0473003104e1009a047300310400005604e5006004e3009a0473004e04e5
00600400004604e1009a05c700580473001405c7006d05c7003b0239ffe9
04e1009a023900710222ffb20000fd4802c601a401c7006a01c7006a0000
fc910000fc9001c7006a03290014032900140340006a036a006a02220006
0222008c0376006a01c7ff9e036e006a01c7ff9e08000073062500310639
fffe0239008902390084055400e1078d007b078d00e10473002f0473002f
05c700340473003b0473003b055600a50473002f055600a50473002f0556
00a50473002f0239ffbb0239ffb7023900890639006504e3004206390065
04e300420639006504e30042055600550473004205c7009c04e3007d0473
001a0758009c0671007d0602003f04e3ffff05c7000d04e30087071d0080
043f009c0460007f0400006004d9006e0356fff8048b00350602005d0473
00350655004b048600370639006502aaffef07ac001b07ac001b09b60087
0000f9290000f9d30000f9d30000f9650000f9dd0602005d047300350655
004b048600370222008c032900140464003104e300340400002104e30042
05300087052b003f04e3007704e3003f04e3004204e30087054500870271
008b078d003f03c60081031d008104e3003c04e3fffe04e3fffe0800003f
064c001504db001506b00015057f008b0555008b01a4006f01a4006f0239
008402aa010d02aafff602aa00af02aa000702aa010d02aafff602aa00af
02aa000701a4006f01a4006f02aaffef02aafff60272004402720044011d
0005018f0041018f004101e30041031d0007023a000b0272003e0272003e
0256000c0256000c025600130256001302aa002f02560025025600250256
0025023900210239000d011c00450256002b023900120256001302560013
0256000c0256000c02aa007b0272003e0000fc870000fc690000fc690000
fd260000fd260000fc2c0000fc2c0000fb4f0000fc690000fc2c0000fc87
0000fc810000fc810000000002390000000000000000000000000000031d
002f031d002f08dc00af07ac001b02aa00e809c6007b07ac001b071d0104
0702000602aa008002aa0080000000000000000000000000000000000000
00000000000006c5001b023a0020023a001b0239001b02390020023a001a
0239001b0239001e0256002501550018025600250155002e0155000a0272
0044023a0020023a0047023a00200239001b023a001b0239001b02390020
023a001a0239001b0239001e0256002501550018025600250155002e0155
000a06f900340639005504e3009c04e3009c0556002307d6fff70600002a
078e001104e300820800004e06ac002f05c7005c05c7006f04e5fffa0696
000707d6002507d600310556009b04e300730556009b04e3007304e30013
06390065052b009a02ad002f036dfff605c7004203060017030bffd804e3
007b04e3007b023900090239000904e3004204e5004804e5004804e50048
04e5004804e5004804e5004804e5004804e500480629006a063b006a086e
009b081d006e078d006a07f0006a078e0070078e00480473007704730077
04730077047300770473007704730077071d006a071d00b208cc009008c4
009a0896009108c0009504e1009a04e1009a04e1009a04e1009a04e1009a
04e1009a04e1009a04e1009a078e006a078e006a093d006a0935006a0907
006a0931006a078eff9e078eff9e0239008d0239008d0239ffbd0239ffc1
0239ffd10239ffc10239ffd30239ffd30425006a0425006a05d4006a05cc
006a059e006a05c8006a0425ff9e0425ff9e04e5006004e5006004e50060
04e5006004e5006004e500600800006a0800006a09af006a09a7006a0979
006a09a3006a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a
04e1009a04e1009a071d006a08c4006a08c0006a0792ff9e05c7003b05c7
003b05c7003b05c7003b05c7003b05c7003b05c7003b05c7003b07ec006a
07ec006a099b006a0993006a0965006a098f006a07ecff9e07ecff9e04e5
004804e50048047300770473007704e1009a04e1009a0239005102390056
04e5006004e5006004e1009a04e1009a05c7003b05c7003b04e5004804e5
004804e5004804e5004804e5004804e5004804e5004804e500480899006a
0878006a0a73006a0a7c006a0a15006a0a77006a09c7006609c7006604e1
009204e1009204e1009204e1009204e1009204e1009204e1009204e10092
09c7006a09c7006a0b76006a0b6e006a0b40006a0b6a006a09c7ff9e09c7
ff9e05c7003b05c7003b05c7003b05c7003b05c7003b05c7003b05c7003b
05c7003b0a25006a0a25006a0bd4006a0bcc006a0b9e006a0bc8006a0a25
ff9e0a25ff9e04e5004804e5004804e5004804e5004804e5004804e50048
04e5004805c7003705c7003706cd000606cd008c07d8003704e1009204e1
009204e1009204e1009a04e10092076300060784008c07e2000607ca008c
080700a20239ffbf0239ffaa0239ffb60239ffb60239ffcf0239ffc9025e
ffd2025effc2043b002d0453008c04e1009a04e1009a04e1009a04e1009a
04e3009a04e3009a04e1009a04e1009a055600270556002707a500580797
008c071d006a05c7003b05c7003b05c7003b05c7003b05c7003b07f60045
082b0059086500060899008c0852003104e500480473007704e1009a0239
008d04e5006004e1009a05c7003b06cd008c0784008c07ca008c0453008c
07d4005e0775006c0842006c0239ffb604e1009a067d003d04f700db04f7
007b03220013031e002b0464003104e5004804e5004804e5004804e50048
04e5004804e5004804e5004804e5004804e5004804e5004804e5004804e5
004804e5004804e5004804e5004804e500480239ffb60239ffb60239ffb5
0239ffb60239ffb60239ffb60239ffb60239ffb60239ffb60239ffbe0239
ffbe0239ffb50239ffbe0239ffbc0239ffbe0239ffbe0239ffbe0239ffbe
04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1
009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a
04e1009a04e1009a04e1009a06cd000606cd008c0629006a086e006a078d
006a063b006a085c006a07f0006a06cd000606cd008c0629006a086e006a
078d006a063b006a085c006a07f0006a047000060453008c0453008c0425
006a05d4006a059e006a0425006a05cc006a05c8006a047000060453008c
0453008c0425006a05d4006a059e006a0425006a05cc006a05c8006a07a5
00060797008c0797008c071d006a08c4006a08c0006a071d006a08c4006a
08c0006a07a500060797008c0797008c071d006a08c4006a08c0006a071d
006a08c4006a08c0006a05c700a305c7005c063900650239003b05aa008f
055600a305c7004a0000fcfb04b5004a04e3003f0639005a04e5004607b0
004107b4004205e5001a06ac004506ac004506ac004306ac0043063900b4
05560029082200a205e1005b06ac007b05c7006d05c700340473001a080a
00a20642005b0547001503d0001f0636003005ba002905c700a30473003b
02aaffcc04ac009a0425009a063d009a0524008705c700a10473008204e3
00340400002108d9ffef06ddfff7054f0062040a0033056d00a00412006a
05df00a20486007c05df005f0412002c04f8002204120028056dfff80412
ffe105ac00a0047a006205ac00a0047a0062055600230556002304d900ac
037c007505ac00a004d7006206e300a00552006a077600a205d9007c0556
0023055600230731001305d100230767002505f800250767002505f80025
075b00360543001b05df00a20486007c0473003b054f00a6054f00a606ac
007b04f0005b088a003e06a6003305c7003904e1001d05eb002f04e3001a
04730047054f0062040a003305f10022049c001402390089056dfff80412
ffe10556002f05c7003405c7005c0473004704e3fff104e3002102390059
031e002b04e30021055600a304e3007b04e3007b055600a50473002f0473
002d0239fff305c7009c01a9001a01a9001a02aa000c02aa000c02aa0007
02aaffe102aa00e802aa002402aa0024067d0057067d003d067d00ad02aa
00e8067d003d067d005c067d011002aa00e802aa00e8063900680412002c
0412002c055600a504e3008005c7005c06aa0097063000970548001605c7
005c05c7005c05c7005c04730047047300470473004704e3003f061b003a
06a80039062e003b0384002b062200240549003b04e5004f02aa00bf02aa
00bf02aa00bf02aa00bf025d003d025e003d03cc000903cc000903c30000
03c3000003c3000004c2001303fe0027043c005c04440078044400780307
0055034f0012070f003e0662004405fe00350000f7dc0698004a05450049
01ec004e01f4004e01b3002a01b2000c01d3002b01d3001a033c001f0343
001f03420013033f0013033f001302ff004e0224000a0224000b07ec003d
0982004e0933004b093300020149004e0485002505d2000705d1000d04d1
0014047a00200224000a0224000b044b0041044b004104290041038c0008
049e00440000fb230000fc720000fb870000fc180000fc180000fa110000
fcaf0000fe390000fc470000fc100000f9d30000fc5e04cc003c04cc0038
0468003c046800380821001b04a60021044400220533003b069a0037057f
003a071d006a08c4006a08c0006a05c7003705c70037025effd3025effd2
0556002705560027045f001605e5001a05e5001a05e5001a0800ffeb0800
ffeb080003b40800038c080003b40800038c0800ffe90800ffe9080003b4
0800038c0800ffe90800ffe908000000045f0016011d0045023a001e023a
001802720021023a000d023a001805c7005c0639005505c7005c045e0023
063c002f04e3002105c7003405320053062500320508003205c70058071d
008006420033067800390832003604b5004a04b5004a0347004203430047
0346004103430047034600570344004f034600570344004f03a100570394
0057039400570394005703a1005703a0000d039400000394000003940000
03a0000d03e9005703dd005703dd005703dd005703ea00570397000303fc
003803fc00290412001505a8003106de002e039b00730000fbf40000fbf4
0000fbe00000fbe00000fbe00000fbe00000fb9e0000fb9e0000fcf104cc
0038046800380aac0065095600420444007804440078044400780329002a
0329002a035d002a050d0028037800570378002d032900210329002102de
003202de00320378002f019400610329005c050d005b037800600378002f
032900320378002f0378002f0378005901e4000f037800590383003a050d
005b03290012036e00540329001a0378004604f40052066f003604f50052
04e3004204e300410501003b04fe003d0530003b078e00420329000e0194
00610236005c0378005903290012036e00540329001a0378006d0329000e
040a00460604001202390089043c005c0898002907240037052c00210558
001d0320000e052b002303730017031c000f031f00100239009204000092
0239008504000097023900920400009202390085040000970519001b0702
00090310007e05d500a208c00022047300400351002e0493006004730036
04730036047300360473004004730034046000360473003d03cc000903cc
000903cc0009046d001603a2003a044d003804b2003a0797003a0454003a
0459003a05a0003a079e003a04d2003a042c003a090a003a0459003a047e
006b06e2003a044f003a0490003f0672003a043c006b0616003a06dc003a
0630003a0467003a0678003a043d003a0485003a042d006b0497003a046e
003a0442003a04aa003a043f006b0657003a03c0003a0568003a04c3003a
0469003a0409003a0463003a06fc003a041c00bc00000000000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
00680000006800000068000000680000006800000184000002680000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c0000034c0000034c0000034c0000034c0000034c
0000034c0000034c0000034c0000034c0000034c0000034c0000034c0000
034c0000034c0000034c000100000892007a0009006c0008000200100010
0066000007e80b970004000100000033026a000100000000000000500000
000100000000000100090050000100000000000200040059000100000000
00030023005d0001000000000004000e008000010000000000050007008e
0001000000000006000e00950001000000000007003200a3000100000000
0012000e00d50001000000000100000900e30001000000000101001000ec
0001000000000102000e00fc00010000000001030014010a000100000000
01040012011e0001000000000105000901300001000000010004000e0139
0001000000010007002f01470001000000020004000e0176000100000002
0007003c01840001000000030004001301c00001000000030007003001d3
0001000000040004000d02030001000000040007003a0210000100000005
0004000d024a00010000000500070036025700010000000600040011028d
00010000000600070030029e0001000000070007003c02ce000100000008
00040013030a00010000000900040011031d00010000000d00040010032e
00010004000c0004000e033e00010004001f00040010034c00010005000a
0004000d035c00030001040400020004036900030001040600020006036d
00030001040700020008037300030001040900020008037b00030001040b
00020016038300030001040c0002000803990003000104100002001203a1
0003000104110002000803b30003000104120002000603bb000300010413
0002000603c10003000104140002000603c70003000104160002000e03cd
0003000104190002000c03db00030001041d0002000603e7000300010804
0002000403ed000300010c010002000803f1000300010c0a0002000e03f9
a920313939302d32303036204170706c6520436f6d707574657220496e63
2e20a92031393831204c696e6f7479706520414720a920313939302d3931
205479706520536f6c7574696f6e7320496e632e48656c76657469636142
6f6c6448656c76657469636120426f6c643b20382e30643365313b203230
31322d30332d323748656c76657469636120426f6c64382e306433653148
656c7665746963612d426f6c6448656c7665746963612069732061207265
67697374657265642074726164656d61726b206f66204c696e6f74797065
20414748656c76657469636120426f6c644c6967617475726573436f6d6d
6f6e204c69676174757265734e756d6265722053706163696e6750726f70
6f7274696f6e616c204e756d626572734d6f6e6f737061636564204e756d
626572734e6f204368616e676548656c766574696361204772617348656c
7665746963612065737420756e65206d617271756520648e706f738e6520
6465204c696e6f7479706520414748656c76657469636120466574744865
6c766574696361206973742065696e2065696e676574726167656e657320
576172656e7a65696368656e20646572204c696e6f747970652041474865
6c7665746963612067726173736574746f48656c766574696361208f2075
6e206d61726368696f207265676973747261746f206469204c696e6f7479
706520414748656c7665746963612076657448656c766574696361206973
2065656e20676572656769737472656572642068616e64656c736d65726b
2076616e204c696e6f7479706520414748656c7665746963612046657448
656c766574696361208a7220657474207265676973747265726174207661
72756d8a726b6520669a72204c696e6f7479706520414748656c76657469
6361204e65677269746148656c76657469636120657320756e61206d6172
63612072656769737472616461206465204c696e6f747970652041474865
6c7665746963612065722065742072656769737472657265742076617265
6dbe726b652074696c68bf72656e6465204c696e6f747970652041474865
6c7665746963612043617272656761646f48656c7665746963612048616c
7666657448656c766574696361206c696861766148656c76657469636120
c3d3e8cf48656c76657469636120c8d1ccd3cae748656c76657469636120
f2e1e47c979ad400460065006400460065007400740042006f006c006400
500075006f006c0069006c00690068006100760061004700720061007300
470072006100730073006500740074006f30dc30fc30eb30c9bcfcb4dccc
b4005600650074004600650074004e00650067007200690074006f041604
380440043d044b04390046006500747c974f5306390631064a0636004e00
6500670072006900740061000000b8005c2bb800522bb800482bb8003e2b
b800342bb8002a2bb10840ba019000145df44009011f04000b1fd819eebe
012e000d00e6012e000d00b0012e400c0d000963833c1f63838348294109
014b00370401001f014500240401001f0144b224ab1fb8013eb224231fb8
013db224231fb80102b2371d1fb80100400937241ffd37621ffc37b80801
401b1ff824931ff724931ff6243f1ff524311fd1371d1fd037471fcd41b8
0801b21fcb2ab80201b21fca24b80401400f1fc824811fb537291fb4373b
1fb227b80401b21fb141b80401b61fa437811fa384b80401b21fa22ab804
01b21fa124b8019ab21fa024b8019ab61f9f243f1f9683b80401b21f9527
b80401b21f8227b80401b21f7084b80801b21f6fb3b80801b21f6eb3b802
abb61f6d24261f6224b80101400b1f5d246c1f5c24391f5441b80125b21f
4d27b80401b61f4c27cd1f4b41b80401b21f4024b8019ab21f3683b80401
b21f3524b80201b21f3224b8019ab61f2c24bb1f2884b80801b21f2241b8
040140131f20244c1f1d24261f2ca0961f2c245e1f412ab801a8b748282a
2448279636b801f4b21f4d27b801f4b21f9527b801f4b21f6e27b801f4b2
1f6327bd01a700470029015a00250199b348296fb3b80190b21f83b3b801
9ab348283725b803e840121fb327482784274827362748272527482755b8
0154402c0797076407550733072b072907260721071e071b071408120810
080e080c080a080808060804080208000814b8ffe0402b00000100140610
000001000604000001000410000001001002000001000200000001000002
010802004a00b806008516763f183f123e113946443e113946443e113946
443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b18
2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff
1d592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b4b5279b35279eb5645652345
6023456560234560b08b766818b080622020b1eb794565234520b0032660
62636820b003266165b079236544b0eb234420b152564565234520b00326
6062636820b003266165b056236544b0522344b10056455458b156406544
b25240524523614459b35045484e456523456023456560234560b0897668
18b080622020b148454565234520b003266062636820b003266165b04523
6544b048234420b1504e4565234520b003266062636820b003266165b04e
236544b0502344b1004e455458b14e406544b250405045236144592b2b45
6953420000>
[845 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 104 36 <00030034000005a805c20002000a000b00dc406b6802012705280a380637
094806680a780a880488069a0395049806aa03a504a806b801b80ac801c8
0ad803d80a150107060602000809090200080a01070502140a0a25120909
02140505251206060207082a010000020a0b04030206090a0305080b0d17
171a0b0a040605b80114b2090302b80114b60a190c657572182b764e10f4
184dfd3939fd39391139194e456544e6182f003f173c4d3f3c3c1239392f
3cfd3c05872e2b7d104b5158b004c01bb004c459872e182b7d104b5158b0
03c01bb003c4591112393912393987103c3c07103c3c3130015d005d0121
0b012101210321032101022f0176b8ab015c020afeb25ffde166febe02ba
022d02440151fa3e012ffed105c2>RCIRMX+Helvetica-Bold AddT42Char 
1 616 38 <0002005cffd7057b05ef001e001f00744029570a94079408035b02591b58
1d660477018905a914b204b70ac604c70bda02db14dd18df1bf8181017b8
010b40231a08081a0c411f030312411a091f16371708371f1e071a210f37
1e1920219921ad56182b2b4ef44ded4e10f64d1139edd4ed2f003fed3f3c
ed12392f10ed3130015d005d123736212017161721262726232202151416
33323736372106002120272611015ccfb401160174ac5f07fecc1e2f54a5
a8c2cd9ea2552f1f013128feb7fefffec2b6b602900457d1b6f4898a6a36
60fef1f8f8f76a3972f1fed2cccd0165031a>RCIRMX+Helvetica-Bold AddT42Char 
1 0 0 <0002009a0000053d05c200030007003e402105061d02010004071d03000a
05041d0303021a0906071d0100190809aa216c3c182b2b4ef43c4dfd3c4e
10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111271121119a04a3b8
fccd05c2fa3eb80452fbae000000>RCIRMX+Helvetica-Bold AddT42Char 
RCIRMX+Helvetica-Bold /CharStrings get begin
/A 36 def
/C 38 def
end
RCIRMX+Helvetica-Bold /Encoding get
dup 65 /A put
dup 67 /C put
pop
end
%ADOEndSubsetFont
/ZDWBNY+Helvetica-Bold /RCIRMX+Helvetica-Bold findfont ct_VMDictPut/ZDWBNY+Helvetica-Bold*1 [65{/.notdef}rp /A /.notdef /C 188{/.notdef}rp]ZDWBNY+Helvetica-Bold nfZDWBNY+Helvetica-Bold*1 [15.9613 0 0 -15.9613 0 0 ]msf12.0122 38.4878 mo(A)sh12.0122 327.313 mo(C)sh.695 .672 .637 .738 cmyk
%ADOBeginSubsetFont: RSPQMX+HelveticaNeue Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.074
 256 array 0 1 255 {1 index exch /.notdef put} for  /RSPQMX+HelveticaNeue
Type42DictBegin
[<00010000000c000c000c000c4f532f32c8d7d058000000cc000000606376
7420001400140000012c000000046670676dfdfac9ac0000013000000428
676c7966f70bde210000545c00002f3068656164e3efa789000005580000
003668686561e20bc5040000059000000024686d7478237b760f000005b4
000021606c6f6361017f99dc00002714000021646d6178700a8304e20000
4878000000206e616d65cd399ba20000489800000bb87072657028001e81
000054500000000c67646972000000000000000000000000000201bf0190
0005000000cc00cc0000011e00cc00cc0000011e003200fa000002000503
000000020004800000670000000000000000000000004c494e4f00000008
fb0203b8ff29003703b800d50000000000000000020502ca000000200002
00140014b800002c4bb800095058b101018e59b801ff85b844001db90009
00035f5e2db800012c2020456944b001602db800022cb800012a212db800
032c2046b003254652582359208a208a49648a204620686164b004254620
686164525823658a592f20b00053586920b000545821b040591b6920b000
545821b0406559593a2db800042c2046b00425465258238a592046206a61
64b0042546206a61645258238a592ffd2db800052c4b20b0032650585158
b080441bb04044591b21212045b0c05058b0c0441b2159592db800062c20
20456944b001602020457d691844b001602db800072cb800062a2db80008
2c4b20b003265358b0801bb040598a8a20b003265358b0022621b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b80003265358b003
2545b8014050582321b8014023211bb003254523212321591b2159442db8
00092c4b535845441b2121592db8000a2c4bb800095058b101018e59b801
ff85b800441db9000900035f5e2db8000b2c2020456944b001602db8000c
2cb8000b2a212db8000d2c2046b003254652582359208a208a49648a2046
20686164b004254620686164525823658a592f20b00053586920b0005458
21b040591b6920b000545821b0406559593a2db8000e2c2046b004254652
58238a592046206a6164b0042546206a61645258238a592ffd2db8000f2c
4b20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b
2159592db800102c2020456944b001602020457d691844b001602db80011
2cb800102a2db800122c4b20b003265358b0801bb040598a8a20b0032653
582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0
032653582321b801408a8a1b8a235920b80003265358b0032545b8018050
582321b8018023211bb003254523212321591b2159442db800132c4b5358
45441b2121592db800142c4bb800095058b101018e59b801ff85b800441d
b9000900035f5e2db800152c2020456944b001602db800162cb800152a21
2db800172c2046b003254652582359208a208a49648a204620686164b004
254620686164525823658a592f20b00053586920b000545821b040591b69
20b000545821b0406559593a2db800182c2046b00425465258238a592046
206a6164b0042546206a61645258238a592ffd2db800192c4b20b0032650
585158b080441bb04044591b21212045b0c05058b0c0441b2159592db800
1a2c2020456944b001602020457d691844b001602db8001b2cb8001a2a2d
b8001c2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a
8a1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db8001d2c4b535845441b2121592d00010000000100005bc885c5
5f0f3cf5011103e800000000b643600000000000cb98044efc49fe1f05a6
04350000000900020001000000000001000003b8ff2b001c05dcfc49fe80
05a600010000000000000000000000000000085801f40033000000000116
000001160000000000000116000001160000000000000103004a01aa006d
022c0022022c001903e8005c02760021011600690103002f0103fff70160
001802580030011600530185003201160053014dffef022c002a022c0057
022c0018022c001d022c001c022c0023022c0026022c0032022c0028022c
002201160053011600530258002e025800300258002e022c00360320002a
0288fffa02ad004e02d2002b02c0004e0263004e023e004e02f7002b02d2
004e0103005202070016029b004e022c004e0367005002d2004d02f80026
0288004e02f8002602ad004e02880025023e000202d2004a02630000039e
000c02630000028800020263001601030048014dffef0103000002580032
01f4000000deffea02190024025100430219002402510024021900240128
000c023e0024022c004000de004500defff30207004500de004503550040
022c0040023e00240251004302510024014d003d01f4001f013b0009022c
004001f4000e02f600110206000901f4000801e00016014d003000de004d
014d0018025800450288fffa0288fffa02d2002b0263004e02d2004d02f8
002602d2004a021900240219002402190024021900240219002402190024
021900240219002402190024021900240219002400de003200deffea00de
ffda00deffe5022c0040023e0024023e0024023e0024023e0024023e0024
022c0040022c0040022c0040022c0040022c002a01900038022c002e022c
002f022c002301f4004802580030022c0040032000180320001803de0040
00de003200deffe502580030039efffa02f8002502e8001a025800300258
003002580030022c0000022c0040021600230240000002ee004e026e001e
01570000017a00190180001902e4003203660024023e0022022c00440103
004a0258003002180000022c0003025800240288fff901cf003201cf0041
03e8006f011600000288fffa0288fffa02f8002604320026037b002401f4
000003e8008201aa004201aa004201160054011600530258003002580056
01f400080288000200a7ff5b022c000d01030032010300390206000c0206
000c022c002a0116004b0116005301aa0042047c00480288fffa0263004e
0288fffa0263004e0263004e010300450103ffed0103fff80103fffd02f8
002602f800260316003302f8002602d2004a02d2004a02d2004a00de0045
00deffda00deffc700deffc600deffd400de004200deffff00de000500de
ffd100de004c00deffda02e40032022c0019022c000000de000003420031
03420024014d0042025800470288004e00de004d02c00008034200240258
0030023e002402510043014d000e014d0004028800250288000202630016
01f4001f01f4000801e000160000ff0f0000ff570000feff0000feec0000
feeb0000fef90000ff670000ff0a0000ff240000fef60000feff0000ff2a
0000ff710000fea50000000000deffe000deffd802e70026032300260282
00240263001601e00016022300200263004e0263004e02ee000202260054
02ce002602880025010300520103fff7020700160451fff60464004e02ee
0001029b004e02da004e0263000102c8004e0288fffa02a3004e02ad004e
0226005402d900090263004e03f3fffd028e002502da004e02da004e029b
004e02bffff60367005002d2004e02f8002602c8004e0288004e02d2002b
023e0002026300010335001e0263000002d0004e0292002f041b004e0430
004e030a00020368004e028d004e02ce002603fc004e029f000002190024
023d0032021c004001a80042024d000302190024030f000001fa001e0236
004002360040020e00400233000002b0004002300040023e002402260040
025100430219002401cf000401f40008032000280206000902340040020b
002e03290040033f00400269000302c40040021600450219002103060040
0218000302190024021900240236ffeb01a800420219002401f4001f00de
004500deffe500defff3036f0000036c00400236ffeb020e004002360040
01f400080226004002da00000245fffc03a7003f02d9003202f80026023e
0024029b00000212000e02da000a023500000226005401a8004202630016
01d700140402fffd031d0000028e002501fa001e02ac004e021c0040029e
004e02270040031800020266000302e3004e0246004003f7004e03010040
02d2002b021900240288000201f400080288000201f4000802750000020e
000902a3002f0221002e0292002f020b002e0299004e022c004001030052
03f3fffd030f00000288fffa021900240288fffa02190024039efffa0366
00240263004e0219002402e700260223002003f3fffd030f0000028e0025
01fa001e02da004e0236004002da004e0236004002f80026023e002402f8
0026023e00240263000101f400080263000101f400080263000101f40008
0292002f020b002e036d004e02c40040040b00520288fffa0219002402d2
002b021900240263004e0219002402d2004d022c00400288002501f4001f
0263001601e000160263001601e000160288fff90288fff90288fff9039e
fff902d2002b02d2002b02d2002b02c0004e02c000080263004e0263004e
0263004e0263004e02f7002b02f7002b02f7002b02f7002b02d2004e02d2
004e0103ffe60103ffd90103ffd8010300520103002802070016029b004e
022c004e022c004e022c004e022c004e02d2004d02d2004d02f8002602f8
002602f8002602f8002502ad004e02ad004e02ad004e0288002502880025
02880025023e0002023e0002023e0002023e000202d2004a02d2004a02d2
004a02d2004a02d2004a02d2004a039e000c039e000c039e000c039e000c
028800020288000202190024021900240219002403660024021900240219
002402190024025100240256002402190024021900240219002402190024
023e0024023e0024023e0024023e0024022c00400231ffef00deffd400de
ffc600deffc600de001100defff200deffd9020700450202004000de0041
012e004500de003801560045022c0040022c004002970012023e0024023e
0024023e0024023e0022014d003d014d002d014d003001f4001f01f4001f
01f4001f013b0009013b0009013b0009013b0009022c0040022c0040022c
0040022c0040022c0040022c004002f6001102f6001102f6001102f60011
01f4000801f400080302005201b600450241000c031f000c031f000c00de
ffe900de003200deffd900deffd900de005000deffc600deffe400deffc5
00deffc500deffd300defffe00deffd000de004201160051011600530185
00320116004b00a7ff5a0342002e034200380342001b0342002b03420031
0342004c0288fffc022c004301f4004802f8002c022c004002d2004d0206
000c0206000c0185003203e80064022c003601720022017200190172001f
017200230172002b01720021017200220190002900fa00230190002900be
002600be00070172002a017200220172003b0172001f0172001d01720019
0172001f017200230172002b01720021017200220190002900fa00230190
002900be002600be0007034200230320001800de003000de001801160053
00f1005800f10058014cfffb028f00000116005302f2000b0361000b018a
000b0361000b034a000b0364000b00edffd00288fff902ad004e0228004e
0263004e0263001602d2004e02f8002601030052029b004e0265fff90367
005002d2004d023a002502f8002602cb004e0288004e0262002a023e0002
02880002030900260263ffff033b00470103fff702880002024b002401e5
001f022d004000ed0045020f003c024b00240234004301d1000e022a0024
01e5001f01b10026022d00400216002400ed0045020200400206000c01e4
000e01a90026023e0024023a003c020100240235002401c40003020f003c
02cc002001c1fff60296004002cf002400edffe5020f003c023e0024020f
003c02cf002400de004000de0053022c0000022c001e0000feb500d0ffee
0116000e022c002301f4001c022c00280000fea60000fe3e0000fe4f0000
fe6c0000feb50000feb50000feb50000feb50000fe430000fed10000fe9e
0000fe4f0000fe870000fe870000fe4d0000febc0000fe6c0000fe840000
fed10000fe580000fe580000fe4f0000fe4f0000fe3f0000fe4d0000fe3e
0000fe3f0000fe4d0000fe3e0000fe3e0000feb00000fe3e0000feb50000
fe4f0000fe510000fe9e000000000116000d022c004003410040014d0042
03410040014d0043014d0042020900280209002900fb00420193ffff0116
000b0116000b01f4000502d2000801f4000a022c004c022c004d022c004c
01f4003e024b001c024b001c02d2002b02d2001002370024029b0055029b
002f01f40020023e001c035e005302ba003e02f300280104005901af0059
0116005f0238001501f4001d00960028014d005e014d005f05620007029b
0074014300740219fffb020b005e020b005f02a2005e02a2005f014d002a
01430074014d002a01620050008b00000000000000000000000000000000
000000000000000000000000000001f4000003e800000116000003410000
014d00000116000000a70000022c00000069000001160000000000000000
00000000000000000000002c0000000f0000014dfffc01ae0059014d002a
014d00030219003802190038029b000f02630055022c00230379002702a4
001d0000feb70000feb70000feb70000feb70000fe6e0000fe730000fed3
0000fe700000fe810000fe7a0000fe760000fe7f0000fe3a0000feaa0000
fead0000fe710000fe720000fe4d0000fe530000fe6a0000fe6a0000fe6a
0000fe6b0000fe6b0000fe4f00a7002f0136002f0462003603f30036029b
004c01160062022c00620341006203b10062029b001903b1001904c70019
05dc001903b10062029b001503b1001504c70015022c004c02d2002c02d2
00510341004a00de004001bc0040029b004002d2004001f4000502d20005
03b00005048f000502d2004001f4000502d2000503b0000500de004301f4
001d022c001b0341004004d300390446002703d6001b03d5003402c30037
0173002b045900370363003402c00029029b000f022c0028011600030116
0000030a0027022c001d02d20053022c003e02d20053022c003e02d20053
022c003e02d20053022c003e02d20053022c003e029b000f022c0028029b
000f022c002803e8000803790024030a0030022c001e029b004c01f4003e
030a0027022c001d030a0027022c001d00deffe004c900290463003603e6
001b030a003002d2004c022c0040029b000f022c0028029b000f022c0028
029b0055022c0023029b0055022c00230116ffba00deff9d0116fffc00de
ffd6030a0027022c001d030a0027022c001d02d20058014dffeb02d20058
014d002702d20053022c003e02d20053022c003e02d2004f022c0040029b
000f022c0028029b0055022c0023030a0027022c001d030a0027022c001d
030a0027022c001d030a0027022c001d029b001501f4000a014d0026029b
000f022c0028029b004a022c003a029b004a022c003a029b004a022c003a
02d2002c01f4001d02d20051022c001b02d20051022c001b02d20051022c
001b02d20051022c001b02d20051022c001b029b0055022c0023029b0055
022c0023029b0055022c0023029b0055022c0023029b0055022c00230263
00550116000e030a0030022c001e02d2004f022c004002d2004f022c0040
02d2004f022c004002d2001c022c000d02d2004f022c00400116fff600de
ffd0011600130116000b029b004c01f4003e029b004c01f4003e029b004c
01f4003e022c004c00de0043022c004c00deffd0022c004c00deffdb022c
004c00deffe10341004a034100400341004a034100400341004a03410040
02d2004c022c004002d2004c022c004002d2004c022c004002d2004c022c
0040030a0027022c001d030a0027022c001d030a0027022c001d030a0027
022c001d029b0055022c003a029b0055022c003a02d20058014d004302d2
0058014d004002d20058014d002402d20058014d000c029b002f01f40020
029b002f01f40020029b002f01f40020029b002f01f40020029b002f01f4
0020026300100116000b026300100116000b026300100116fff102630010
0116fff402d20053022c003e02d20053022c003e02d20053022c003e02d2
0053022c003e02d20053022c003e029b001901f40005029b001901f40005
03b0001202d2000903b0001202d20009029b001501f40005029b001501f4
0005029b001501f4000a0263001701f400190263001701f4001902630017
01f40019022c00400116000802d2000901f4000a0116000e029b000f022c
0028029b000f022c0028029b000f022c0028029b000f022cffe6029b000f
022c0028029b000f022c0028029b000f022c0028029b000f022c0028029b
000f022c0028029b000f022c0028029b000f022c0028029b000f022c0028
029b0055022c0023029b0055022c0023029b0055022c0023029b0055022c
0023029b0044022cfff8029b0055022c0023029b0055022c0023029b0055
022c0023011600550116004b0116006100de0040030a0027022c001d030a
0027022c001d030a0027022c001d030a0027022cffec030a0027022c001d
030a0027022c001d030a0027022c001d0379002702a4001d0379002702a4
001d0379002702a4001d0379002702a4001d0379002702a4001d02d20053
022c003e02d20053022c003e035e005302ba003e035e005302ba003e035e
005302ba003e035e005302ba003e035e005302ba003e029b001501f4000a
029b001501f4000a029b001501f4000a02de002f01fd0011010bffe3010b
00050000fe950116005600b2004200b200420000fe870000fe8700b20042
015d000d0152000d0179004201800042010b0016010b00170186004201a7
00360190004201a700360300002e030afff8022c00740342004c03420074
022cffeb02d2fff9022c00400341004001ec004c0223004b01c8002c0217
002d030a0027014d000f03cc001203cc00120000fca50000fd170000fd17
0000fd150000fd1502ef002f022c00270318002602350025022c0012022c
001d025b0040025f001b022c00380250001b025d001e022c003f025d003f
010b004103b0002301b90042014d0041025b001d024e00180286001803a3
001b02a0000b0210000b02d6000e02530043024e004300d0004300d00043
00de005300bf003b014d005e014d001c00bf003b014d0004014d005e014d
001c00d0004300d00043014d000f014dfffc0116002001160020006ffff7
00a7002200a7002100dd00210169000400fa000501160026011600270124
0007012400070124001201240012014d002a012400160124001601240016
00fa001000fa0003006f00210124001c0116000401240012012400120124
000701240007014d003b011600270000fe700000fe5b0000fe5b0000febf
0000febf0000fe300000fe300000fddc0000fe5b0000fe300000fe700000
fe6b0000fe6b000000000116000000000000000000000000000001850026
018500260358005e03cc00120116006f0458004c03cc001203790066036c
000d0116003e0116003e0000000000000000000000000000000000000000
00000000032a001c030a0030022c004c022c004c029b001502ee00170395
000803cd002b0342002c02d2002c029b002b026400370337000e029b0055
022c003a029b0055022c003a02630001030a00270254004f011a001101aa
000802d20027015500110193ffff022c004c022c004c00de001500de0015
022c001e0263002c0263002c0263002c0263002c0263002c0263002c0263
002c0263002c02cf002c02c8002c03a0004203a5004203a5004203b00042
03ce003603b90036022c003a022c003a022c003a022c003a022c003a022c
003a034d0042034d004204210042042b004204140042041b00420263001d
0263001d0263001d0263001d0263001d0263001d0263001d0263001d0384
0042038400420458004204620042044c0042045200420479003604790036
0116005601160056011600200116001c0116001e0116001e011600110116
001101c8004201c80042029b004202a60042028f00420296004202bd0036
02bd003602630036026300360263003602630036026300360263003603bc
004203bc0042048f0042049a004204830042048a00420263005a0263005a
0263005a0263005a0263005a0263005a0263005a0263005a034d0042042b
0042041b00420442003602f6003402f6003402f6003402f6003402f60034
02f6003402f6003402f6003403b2004203b200420486004204900042047a
00420480004204a7003604a700360263002c0263002c022c003a022c003a
0263001d0263001d011600560116005602630036026300360263005a0263
005a02f6003402f600340263002c0263002c0263002c0263002c0263002c
0263002c0263002c0263002c03f0002c03ee002c04ac004204ce004204a3
004204b1004204cc003604ca00360263001d0263001d0263001d0263001d
0263001d0263001d0263001d0263001d049a0042049a0042056e00420578
00420561004205680042058f0036058f003602f6003402f6003402f60034
02f6003402f6003402f6003402f6003402f6003404c8004204c80042059c
004205a60042058f00420596004205bd003605bd00360263002c0263002c
0263002c0263002c0263002c0263002c0263002c029b000d029b000d0320
0016031d001703be000d0263001d0263001d0263001d0263001d0263001d
03420016034000170355001603490017040000560116ffe80116ffe80116
ffe70116ffed0116ffee0116ffe30116fff10116fff701980016019a0017
0263005a0263005a0263005a0263005a02630053026300530263005a0263
005a029b0014029b00140344001603740017034d004202f6003402f60034
02f6003402f6003402f600340397001603ae001703b2001603be00170423
002e0248001202660088026d004f0171000d0155001102d2002c030a0027
00de0010029b005502d2004f0000fea102990033022c001b03a3002c0386
00220342001e0342001e0342001c03f9006602df00430340003e02d20046
029b000f01f4000503b6006602d60043025e001b015d001202db000b02b3
001b02d20058022c002801860000025e004f01ea004f0312004f02590040
029b004c01f4003e0263001701f40019026d001501fd001c025e005c01b4
0047038e001c02b90013038e001c02b9001303a3002302c8001b02de0054
02350047022c002802980054029800540412002102de0013029b0019024d
000501f4001d0298003801f9002302e70013024000120116005c02a60016
01fd0012029b0019029b000f02d2002c01f4001d022cfff40263001000de
001e0155001102630010029b0055022c004c022c004c029b0055022c0023
021e001100deffed02d2005300d0001000d00010014d0019014d0019014d
001c014dfff50116006f014d001d014d001d02af002c0248001202480039
0116006f0248001202ae0025024800390116006f0116006f030a003701fd
001f01fd001f029b0055022c003e02d2002c0341004a02dd004a02bd0022
02d2002c02d2002c02d2002c01f4001d01f4001d01f4001d022c001b02d4
0017034f0016030d00170186000d0304000c0266001802360022014d005d
014d005d014d005d014d005d0134001d0134001d019c0000019c0000019c
0000019c0000019c00000236000901f0000f02220029020e0040020e0040
0176002d019e00090339001c0318001e028500170000fc49035c00110266
001000ea002500ef002500aa001200aa000500c8001500c700090175000b
0179000b012c00090124000901240009015c002500e6000300e6000303dd
001c04a20025047d0024047d0001009a0025021e001102b4000202b40006
0251000a0214000c00e6000300e6000301f3001e01f3001e01f6001c01ad
00050226001d0000fdc90000fe6a0000fe100000fe3f0000fe3f0000fd42
0000fe790000ff4f0000fe510000fe340000fd170000fe5a0225001a0225
001101f4001901f4001203a5000b0219000d01e9000e027e001903170018
0256001901f6000a02e1000a02e1000a02e1000a03e8fff603e8fff603e8
01cf03e801bb03e801cf03e801bb03e8fff503e8fff503e801cf03e801bb
03e8fff503e8fff503e80000006f002001160014011600120116000f00fa
00030116001202d2002c030a003002d2002c022b00110299001402630010
029b000f025a001402d00026025e002602d2002c0341004002d70018031f
001b03fe001a029900330299003301c3001f01b5001d01c3001f01b5001d
01c3002901b6001d01c3002901b6001d016d002901690029016900290169
0029016d0029016d0004016900000169000001690000016d000401a70029
01a7002901a7002901a7002901a7002901380000018e002201ce001301d6
000502760018033a001401bd003e0000fe330000fe330000fe2c0000fe2c
0000fe2c0000fe2c0000fe0c0000fe0c0000feaa0225001101f4001204fe
00270420001d020e0040020e0040020e0040018b001c018b001c01a10014
02770019018b0029018b0014018b0019018b00190172001c0172001c018b
0015009e002e0163002c024f002e018b002e018b001501630014018b0013
018b0015018b002900c50008018b002c01af001b024f002e0163000401b2
003e018b000601b20024025f00260306001502510019022c001c022c001d
0264001b0262001c026e001c03a1001e018b0005009e002e00ec002f018b
002c0163000401b2003e018b000601b2003b018b00050209002802d10008
00de004002220029037000160351001a025c000d026e000d016300060266
000d018e0006016400050165000600de0053014d0026028f003c0256000e
017f004602aa004a04460011022c001f01670019022c001f022c0018022c
0019022c0020022c0026020b0015022c0020022c002401db000401db0004
01db0004018e001b02ac0023030e0023023f001b029f000e031100050209
00080282001c03f3002c0296001403ad001701e5001b025f001b045f0014
03e6ffec02a70027028100100307002b03c6001b0229001d0379fffe0369
002b0377001b0296001002f7fff10323002b023f000a0323002b03e70018
02c5001402610018029400080357002b02be001104e7002b0363001003ef
0000045b002b022d0024034e001c047700200267001502b1001b02250000
02b7001002ce001c0209001c03e200020261002f02e40007033200100332
00100311000502310025037f002602f90010028b001b028b001b02e1002b
02c7000a039a0005025d001c02e5002b0375000a030b0014030d001b02b0
00200349002b036b002b049b00140323002b039700230265002b0265002b
04e3002702d2ffff0359000602c50014035a002b0293001c0315001c02ce
001c02b3000c02ea001b0400002b0288fffa02d2004a029b000f015e0049
0208001b01d00034023e0037024a002703b50024020000340220002a02d9
002503be00210251002501e4001d0496002401f1002a0200002603620024
0204001f021b0027033e002401ee00260307002f03480023030d00210200
00250320002201d4001e0212001e01df00280234002101fd002401ff0022
023e001c01f1002b0315001601db002e02a0002a023d00180222002a01e9
001e02240029034d00240216007800000000000000640000006400000064
000000640000006400000064000000640000006400000064000000640000
006400000064000002e8000002e8000002e80000037c0000041400000414
000004140000047000000494000004c8000004c8000006200000066c0000
077c00000948000009d400000b0400000c8400000cdc00000ef80000106c
0000106c0000106c0000106c0000106c000010a4000010a4000010a40000
11040000128c00001368000014380000149c0000149c000015bc00001634
000016340000163400001698000016d80000176c000017ec000017ec0000
18bc000018bc000019dc00001b0400001b5000001bbc00001bbc00001bbc
00001c1c00001c7800001c7800001c7800001c7800001c7800001c780000
1c7800001c7800001df400001f24000020080000214400002214000022ac
00002410000024b400002508000025080000256c000025a0000026d40000
2764000028a4000029d400002b0000002b5c00002ca400002d4800002de8
00002e2800002e2800002e2800002e9c00002e9c00002e9c00002e9c0000
2e9c00002e9c00002e9c00002e9c00002e9c00002e9c00002e9c00002e9c
00002e9c00002e9c00002e9c00002e9c00002e9c00002e9c00002e9c0000
2e9c00002e9c00002e9c00002e9c00002e9c00002e9c00002e9c00002e9c
00002e9c00002e9c00002e9c00002e9c00002e9c00002e9c00002e9c0000
2e9c00002e9c00002e9c00002e9c00002e9c00002e9c00002e9c00002e9c
00002e9c00002e9c00002e9c00002e9c00002e9c00002e9c00002e9c0000
2ec400002ec400002ec400002ec400002ec400002ec400002ec400002ec4
00002ec400002ec400002ec400002ec400002ec400002ec400002ec40000
2ec400002ec400002ec400002ec400002ec400002ec400002ec400002ec4
00002ec400002ec400002ec400002ec400002ec400002ec400002ec40000
2ec400002ec400002ec400002ec400002ec400002ec400002ec400002ee8
00002ee800002ee800002ee800002ee800002ee800002ee800002ee80000
2ee800002ee800002ee800002ee800002ee800002ee800002ee800002ee8
00002ee800002ee800002ee800002ee800002ee800002ee800002ee80000
2ee800002ee800002ee800002ee800002ee800002ee800002ee800002ee8
00002ee800002ee800002ee800002ee800002ee800002ee800002ee80000
2ee800002ee800002ee800002ee800002ee800002ee800002ee800002ee8
00002ee800002ee800002ee800002ee800002ee800002ee800002ee80000
2ee800002ee800002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f3000002f3000002f3000002f3000002f300000
2f3000002f3000002f3000002f3000002f3000002f3000002f3000002f30
00002f3000002f3000002f30000100000858009600090021000200020000
0000001e000002000428000100010000002301aa00010000000000000212
00000001000000000001000e021200010000000000020007022000010000
00000003002302270001000000000004000e024a00010000000000050007
02580001000000000006000d025f000100000000000700e4026c00010000
0000000900160350000100000000000a01330366000100000000000b0018
0499000100000000000c002504b10001000000000100000d04d600010000
00000101001404e30001000000000102000904f700010000000001030010
050000010000000001040012051000030001040400020006052200030001
04060002000e05280003000104070002000c053600030001040900000424
05420003000104090002000e096600030001040b00020010097400030001
040c0002000c09840003000104100002001009900003000104110002000a
09a00003000104120002000609aa0003000104130002001009b000030001
04140002000c09c00003000104160002000c09cc0003000104190002000e
09d800030001041d0002000c09e60003000108040002000609f200030001
0c010002000809f8000300010c0a0002000c0a00436f7079726967687420
28632920313938312c20313938322c20313938332c203139383920616e64
20313939332c204c696e6f74797065204c69627261727920476d6248206f
722069747320616666696c6961746564204c696e6f747970652d48656c6c
20636f6d70616e6965732e20416c6c207269676874732072657365727665
642e0a0a546865206469676974616c6c7920656e636f646564206d616368
696e65207265616461626c6520736f66747761726520666f722070726f64
7563696e672074686520547970656661636573206c6963656e7365642074
6f20796f75206973206e6f77207468652070726f7065727479206f662048
656964656c62657267657220447275636b6d61736368696e656e20414720
616e6420697473206c6963656e736f72732c20616e64206d6179206e6f74
20626520726570726f64756365642c20757365642c20646973706c617965
642c206d6f6469666965642c20646973636c6f736564206f72207472616e
7366657272656420776974686f7574207468652065787072657373207772
697474656e20617070726f76616c206f662048656964656c626572676572
20447275636b6d61736368696e656e2041472e0a0a436f70797269676874
2028632920313938382c20313939302c20313939332041646f6265205379
7374656d7320496e636f72706f72617465642e20416c6c20526967687473
2052657365727665642e48656c766574696361204e657565526567756c61
7248656c766574696361204e6575653b20382e30643665313b2032303132
2d30332d323748656c766574696361204e657565382e306436653148656c
7665746963614e6575652248656c766574696361204e6575652220697320
612074726164656d61726b206f662048656964656c626572676572204472
75636b6d61736368696e656e2041472c207768696368206d617920626520
7265676973746572656420696e206365727461696e206a75726973646963
74696f6e732c206578636c757369766c79206c6963656e73656420746872
6f756768204c696e6f74797065204c69627261727920476d62482c206120
77686f6c6c79206f776e65642073756273696469617279206f6620486569
64656c62657267657220447275636b6d61736368696e656e2041472e4c69
6e6f747970652044657369676e2053747564696f48656c76657469636120
284c6174696e20666f72205377697373292068617320746865206f626a65
637469766520616e642066756e6374696f6e616c207374796c6520776869
636820776173206173736f63696174656420776974682053776973732074
79706f67726170687920696e2074686520313935307320616e6420313936
30732e204974206973207065726665637420666f7220696e7465726e6174
696f6e616c20636f72726573706f6e64656e63653a206e6f206f726e616d
656e742c206e6f20656d6f74696f6e2c206a75737420636c656172207072
6573656e746174696f6e206f6620696e666f726d6174696f6e2e2048656c
766574696361206973207374696c6c206f6e65206f662074686520626573
742073656c6c696e672073616e732d736572696620666f6e74732e687474
703a2f2f7777772e4c696e6f747970652e636f6d2f687474703a2f2f7777
772e6c696e6f747970652e636f6d2f666f6e7464657369676e657273536d
617274205377617368657341726368616963204c6f6e6720732053776173
684c6967617475726573436f6d6d6f6e204c69676174757265734f707469
6f6e616c204c69676174757265736a196e969ad4004f007200640069006e
00e60072004e006f0072006d0061006c0043006f00700079007200690067
00680074002000280063002900200031003900380031002c002000310039
00380032002c00200031003900380033002c002000310039003800390020
0061006e006400200031003900390033002c0020004c0069006e006f0074
0079007000650020004c00690062007200610072007900200047006d0062
00480020006f0072002000690074007300200061006600660069006c0069
00610074006500640020004c0069006e006f0074007900700065002d0048
0065006c006c00200063006f006d00700061006e006900650073002e0020
0041006c006c002000720069006700680074007300200072006500730065
0072007600650064002e000a000a00540068006500200064006900670069
00740061006c006c007900200065006e0063006f0064006500640020006d
0061006300680069006e00650020007200650061006400610062006c0065
00200073006f00660074007700610072006500200066006f007200200070
0072006f0064007500630069006e00670020007400680065002000540079
00700065006600610063006500730020006c006900630065006e00730065
006400200074006f00200079006f00750020006900730020006e006f0077
0020007400680065002000700072006f007000650072007400790020006f
0066002000480065006900640065006c0062006500720067006500720020
0044007200750063006b006d00610073006300680069006e0065006e0020
0041004700200061006e006400200069007400730020006c006900630065
006e0073006f00720073002c00200061006e00640020006d006100790020
006e006f007400200062006500200072006500700072006f006400750063
00650064002c00200075007300650064002c00200064006900730070006c
0061007900650064002c0020006d006f006400690066006900650064002c
00200064006900730063006c006f0073006500640020006f007200200074
00720061006e007300660065007200720065006400200077006900740068
006f00750074002000740068006500200065007800700072006500730073
0020007700720069007400740065006e00200061007000700072006f0076
0061006c0020006f0066002000480065006900640065006c006200650072
00670065007200200044007200750063006b006d00610073006300680069
006e0065006e002000410047002e000a000a0043006f0070007900720069
006700680074002000280063002900200031003900380038002c00200031
003900390030002c00200031003900390033002000410064006f00620065
002000530079007300740065006d007300200049006e0063006f00720070
006f00720061007400650064002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00520065
00670075006c00610072004e006f0072006d00610061006c0069004e006f
0072006d0061006c005200650067006f006c00610072006530ec30ae30e5
30e930fcc77cbc18ccb40052006500670075006c006900650072004e006f
0072006d0061006c004e006f0072006d0061006c041e0431044b0447043d
044b0439004e006f0072006d0061006c5e3889c44f5306390627062f064a
004e006f0072006d0061006c0000b800142bb8000a2bb800002b00>
[12081 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> RSPQMX+HelveticaNeue AddT42Char 
1 1044 19 <00010053ff6e00c2006f000c002dba000c000000032bb8000c10b8000010
b80007d0b800072fba00080000000c11123900b800082fb800002f303137
1533160e0207153e013d01533b01050e17113a346f6f0c1c1b1706321152
3965>RSPQMX+HelveticaNeue AddT42Char 
1 4260 40 <0002fffa0000029002ca0003000b002500b800042fb800052fb800092fba
0000000700032bb8000010ba00020005000411123930311b013313030133
3721173301c9790277abfeea6150012e4e69fee90127014dfeb301a3fd36
d7d702ca0000>RSPQMX+HelveticaNeue AddT42Char 
1 4748 42 <0001002bfff002aa02db0025006dba001e000b00032bb8001e10411b0006
001e0016001e0026001e0036001e0046001e0056001e0066001e0076001e
0086001e0096001e00a6001e00b6001e00c6001e000d5d410500d5001e00
e5001e00025d00ba0019001000032bb8001910ba0006002300032bb80006
10303101332e0323220e0215141e0233323637230e0323222e0235343e02
33321602445f08344e6438527f552c29527c53899e0e5f031e35492f405c
3b1c1c3b5b404b6d01f339573a1e3b66894e4e88643996872c4c371f3051
6d3d386851304c000000>RSPQMX+HelveticaNeue AddT42Char 
1 5176 44 <0001004e0000023e02ca000b0033ba0009000000032bb8000910b80004d0
00ba0004000100032bba0000000900032bb8000010ba0008000500032bb8
00081030311311213521352135213521354e01f0fe6f0173fe8d018e02ca
fd3650f750e350000000>RSPQMX+HelveticaNeue AddT42Char 
1 5276 46 <0001002bfff002b902db002c00a1b8002d2fba0002000000032bb8000210
b8000010b80006d0b8002d10b80025d0b800252fb80010dc411b00060010
001600100026001000360010004600100056001000660010007600100086
00100096001000a6001000b6001000c60010000d5d410500d5001000e500
1000025db8000210b8001bd0b8001b2f00ba000b002a00032bb8000b10ba
0020001500032bb8002010ba0004000500032bb800041030312517331121
1533160e0223222e0235343e0233321e0217332e0323220e0215141e0233
32360264193cfec7e4021e3b56383c5b3e201c3b5d4128473826075f0a37
51673a557f552b2e587e503f7c595901785031553f242f4f6738396d5534
13263b293f593a1b3f6a8d4e4682643b3100>RSPQMX+HelveticaNeue AddT42Char 
1 0 0 <00020033000101cc02c8000300070037b800142bb800082fb800092fb800
04dcb80000dcb8000810b80006d0b800062fb80002dc00ba000300050017
2bba0004000000172b303101211121131121110199fecd013333fe67029a
fd950299fd3902c70000>RSPQMX+HelveticaNeue AddT42Char 
RSPQMX+HelveticaNeue /CharStrings get begin
/space 3 def
/comma 19 def
/A 40 def
/C 42 def
/E 44 def
/G 46 def
end
RSPQMX+HelveticaNeue /Encoding get
dup 32 /space put
dup 44 /comma put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 71 /G put
pop
end
%ADOEndSubsetFont
/ZDWBNZ+HelveticaNeue /RSPQMX+HelveticaNeue findfont ct_VMDictPut/ZDWBNZ+HelveticaNeue*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 20{/.notdef}rp /A /.notdef /C /.notdef /E /.notdef /G 184{/.notdef}rp]ZDWBNZ+HelveticaNeue nfZDWBNZ+HelveticaNeue*1 [9.3108 0 0 -9.3108 0 0 ]msf113.327 331.664 mo(CAGE, )[6.65723 5.89368 7.16934 5.754 2.58841 0 ]xsh0 0 0 .5 cmyk
%ADOBeginSubsetFont: RSPQMX+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBNZ+HelveticaNeue gcheck setglobal} if
1 1916 26 <0001001dfff501fe02c5003e0123ba0010001100032bb8001010ba001b00
0800032bb8001b10410500da000800ea000800025d411b00090008001900
080029000800390008004900080059000800690008007900080089000800
99000800a9000800b9000800c90008000d5dba001f0011001b111239ba00
220008001b111239b800222fba002c00110010111239b8002c2fb8002ddc
b8002210b80035dc410500da003500ea003500025d411b00090035001900
350029003500390035004900350059003500690035007900350089003500
99003500a9003500b9003500c90035000d5db8001b10b80040dc00ba000d
001600032bb8000d10ba0027003200032bb8002710ba003a000300032bb8
003a10b8000310b80001d0b800012fba001f0003003a111239b8003a10b8
003dd0303113153633321e0215140e022322262723061e0233323e023534
2627353e0135342e0223220e020733343e0233321615140e022b01222322
da181b20372818192a381f494c025501213e5836325942273f412a38213a
4f2e3551361d02551021332236481625311b120505040195480311233321
20332313574537563b1e1b365135405e0e02134a3031482e17223c54331f
382a1939391c2c1d0f00>ZDWBNZ+HelveticaNeue AddT42Char 
1 2376 27 <0002001c0000020302c50003000e0051ba0004000000032bb8000410b800
0010b80009d0b8000410b8000bd0b8000410b80010dc00b800052fb8000a
2fba0001000800032bb8000110ba0003000a0005111239b80004d0b80008
10b8000cd030312523133313112301152115333533350153eeec025044fe
bd01375060f1015bfea501d4fe3352a6a64b0000>ZDWBNZ+HelveticaNeue AddT42Char 
1 5564 47 <0001004e0000028402ca000b0047ba000b000000032bb8000b10ba000600
0500032bb8000610b8000b10b80002d0b8000510b80008d000b800002fb8
00072fb800012fb800052fba000a000300032bb8000a1030311311331121
113311231121114e5f01785f5ffe8802cafd360147feb902cafecd013300
>ZDWBNZ+HelveticaNeue AddT42Char 
1 5684 50 <0001004e0000029e02ca000b002dba000b000000032bb8000b10b80002d0
00b800012fb800052fb800002fb800082fba000a00010000111239303113
11333537013309012301114e5f77010278fec7012d7bfe9602cafd36fa6f
fe9701aa0120fe9c0164>ZDWBNZ+HelveticaNeue AddT42Char 
1 8516 76 <00020024fff502030211000a0026005bba0014001f00032bb8001410ba00
15000000032bb8001510b8001410b80001d0b8000010b8000cd0b8000c2f
00ba000f002400032bb8000f10ba001a000600032bb8001a10ba00010014
00032bb8000110b8002410b8000cdc303101213e0333321e0217230e0123
222e023721362e0223220e02151e0333323601a7fed70216263521203527
1754540b45362a3e28120101830215375b4535594124021f3e5b3e587401
341e352817172736ae33321c2f3d222f6858392848623b3b64482858>ZDWBNZ+HelveticaNeue AddT42Char 
1 9632 84 <00010040000003150211002a00b7ba0003000000032bb8000310b8000ddc
4103005f000d00015d4103008f000d00015d41030020000d00015d410300
b0000d00015db80010dcb80018dc4103008f001800015d4103005f001800
015d41030020001800015d410300b0001800015db8001bdcba0023000d00
10111239b8000310b80028d0b800282fba002900000003111239b8001b10
b8002cdc00b800012fb8000e2fb800192fba0026000800032bb8002610b8
000810b80013d0b8002610b80020d0303113113311343e0233321e021511
3311343633321e0215113311342e02232206072e01232207233540550f21
35251d25160955483f1f27160855192d3f2733551a104e306d3a020205fd
fb01420f2d2a1e111f2a19fead01423c48121f2a18fead017b283924112e
2a3028584c000000>ZDWBNZ+HelveticaNeue AddT42Char 
ZDWBNZ+HelveticaNeue /CharStrings get begin
/three 26 def
/four 27 def
/H 47 def
/K 50 def
/e 76 def
/m 84 def
end
ZDWBNZ+HelveticaNeue /Encoding get
dup 51 /three put
dup 52 /four put
dup 72 /H put
dup 75 /K put
dup 101 /e put
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBNZ+HelveticaNeue*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 6{/.notdef}rp /three /four 12{/.notdef}rp /A /.notdef /C /.notdef /E /.notdef /G /H 2{/.notdef}rp /K 25{/.notdef}rp /e 7{/.notdef}rp /m 146{/.notdef}rp]ZDWBNZ+HelveticaNeue nfZDWBNZ+HelveticaNeue*1 [9.3108 0 0 -9.3108 0 0 ]msf143.978 331.664 mo(H3K4me3)[6.83412 5.24199 6.04277 5.20474 8.02588 5.1582 0 ]xsh.695 .672 .637 .738 cmyk
ZDWBNZ+HelveticaNeue*1 [9.3108 0 0 -9.3108 0 0 ]msf185.625 331.664 mo(, )[2.58839 0 ]xsh1 0 1 0 cmyk
%ADOBeginSubsetFont: RSPQMX+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBNZ+HelveticaNeue gcheck setglobal} if
1 1136 20 <0001003200ee0153013e0003000b00ba0000000100032b30311315213532
0121013e5050>ZDWBNZ+HelveticaNeue AddT42Char 
1 4356 41 <0003004e0000028002ca000a0021002c0101ba0001000b00032bb8000110
ba0019000700032bb8001910410500da000700ea000700025d411b000900
070019000700290007003900070049000700590007006900070079000700
8900070099000700a9000700b9000700c90007000d5dba00290007001911
1239b800292f410500da002900ea002900025d411b000900290019002900
290029003900290049002900590029006900290079002900890029009900
2900a9002900b9002900c90029000d5db80012dcba0016000b0012111239
b8000110b80022d0b8001210b8002edc00ba0022000c00032bb8002210ba
000b000100032bb8000b10ba0000002300032bb8000010ba001600230000
1112393031133533321e0215140623011121323e0235342627353e013534
26272e0323033533321e0215140623adbe1f372a184751fee30159355137
1c464233373123102d343517a4d91e382b1a473f0197e307182c26393901
33fd3623394a27425c0e02145339364a150a0a0501fd86f70b1b2e233c44
0000>ZDWBNZ+HelveticaNeue AddT42Char 
1 5848 52 <000100500000031702ca000e0057ba0003000000032bb8000310ba000b00
0800032bb8000b10ba000d0000000b11123900b800012fb800052fb80009
2fb800002fb8000b2fba000400010000111239ba000800010000111239ba
000d000100001112393031131133113313331333113311230b01505a02df
51df025a82e2e102cafd360252fdae0252fdae02cafda80258000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 7196 64 <000100020000028602ca0008002bba0000000600032bba00030006000011
123900b800072fb800012fb800042fba0003000700011112393031090123
0b0123011133017501116cd1d67101145f012401a6feac0154fe5afedc00
0000>ZDWBNZ+HelveticaNeue AddT42Char 
ZDWBNZ+HelveticaNeue /CharStrings get begin
/hyphen 20 def
/B 41 def
/M 52 def
/Y 64 def
end
ZDWBNZ+HelveticaNeue /Encoding get
dup 45 /hyphen put
dup 66 /B put
dup 77 /M put
dup 89 /Y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBNZ+HelveticaNeue*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen 5{/.notdef}rp /three /four 12{/.notdef}rp /A /B /C /.notdef /E /.notdef /G /H 2{/.notdef}rp /K /.notdef /M 11{/.notdef}rp /Y 11{/.notdef}rp /e 7{/.notdef}rp /m 146{/.notdef}rp]ZDWBNZ+HelveticaNeue nfZDWBNZ+HelveticaNeue*1 [9.3108 0 0 -9.3108 0 0 ]msf190.802 331.664 mo(A-MYB)[6.08922 3.78026 8.1842 6.11716 0 ]xsh.746 .676 .668 .898 cmyk
%ADOBeginSubsetFont: RSPQMX+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBNZ+HelveticaNeue gcheck setglobal} if
1 100 12 <0005005cffeb038c02d200130027003b004f00530197ba0000001400032b
ba001e000a00032bb8001e10ba0028003c00032bb8002810ba0046003200
032bb8004610411b00060000001600000026000000360000004600000056
00000066000000760000008600000096000000a6000000b6000000c60000
000d5d410500d5000000e5000000025d411b0006001e0016001e0026001e
0036001e0046001e0056001e0066001e0076001e0086001e0096001e00a6
001e00b6001e00c6001e000d5d410500d5001e00e5001e00025d410500da
003200ea003200025d411b00090032001900320029003200390032004900
32005900320069003200790032008900320099003200a9003200b9003200
c90032000d5d410500da003c00ea003c00025d411b0009003c0019003c00
29003c0039003c0049003c0059003c0069003c0079003c0089003c009900
3c00a9003c00b9003c00c9003c000d5dba005100140046111239ba005300
140046111239b80055dc00b800502fb800512fba0037004100032bb80037
10ba0023000500032bb8002310ba000f001900032bb8000f10ba004b002d
00032bb8004b10303113343e0233321e0215140e0223222e0227141e0233
323e0235342e0223220e0201343e0233321e0215140e0223222e0227141e
0233323e0235342e0223220e0213013301a70613221c1d2112050613221d
1c2112054b11263e2d2c3c27110f253d2f2e3e261002390613221c1d2112
050613221d1c2112054b11263e2d2c3c27110f253d2f2e3e26108cfde656
021901fc17332b1d1d2b331617342b1c1d2b33142948361f223749272949
3620213849fe9917332b1d1d2b331617342b1c1d2b33142948351f213749
272949362021384901effd1902e7>ZDWBNZ+HelveticaNeue AddT42Char 
1 1224 23 <0002002afff5020202c50017003300cbb800342fb800352fb8003410b800
18d0b800182fb80000dc411b000600000016000000260000003600000046
0000005600000066000000760000008600000096000000a6000000b60000
00c60000000d5d410500d5000000e5000000025db8003510b80026dcb800
0edc410500da000e00ea000e00025d411b0009000e0019000e0029000e00
39000e0049000e0059000e0069000e0079000e0089000e0099000e00a900
0e00b9000e00c9000e000d5d00ba0013001f00032bb8001310ba002d0007
00032bb8002d10303113343e0433321e0415140e0223222e0227141e0433
323e0435342e0423220e0484010911213224243221110901051b3c36363c
1b055a04101e344f37384e341e100404101e344f37374f341e1004015d1a
3f3f3c2d1c1c2d3c3f3f1a2863573c3c57632727545047361f1f36475054
2727545048362020364850540000>ZDWBNZ+HelveticaNeue AddT42Char 
1 1568 24 <000100570000016402c5000a0023ba0001000900032bb800011000b80001
2fb800002fba0007000800032bb800071030312111230e03231533110164
410726374424b802c528341e0b44fe04>ZDWBNZ+HelveticaNeue AddT42Char 
ZDWBNZ+HelveticaNeue /CharStrings get begin
/percent 12 def
/zero 23 def
/one 24 def
end
ZDWBNZ+HelveticaNeue /Encoding get
dup 37 /percent put
dup 48 /zero put
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBNZ+HelveticaNeue*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 6{/.notdef}rp /comma /hyphen 2{/.notdef}rp /zero /one /.notdef /three /four 12{/.notdef}rp /A /B /C /.notdef /E /.notdef /G /H 2{/.notdef}rp /K /.notdef /M 11{/.notdef}rp /Y 11{/.notdef}rp /e 7{/.notdef}rp /m 146{/.notdef}rp]ZDWBNZ+HelveticaNeue nfZDWBNZ+HelveticaNeue*1 [6.6506 0 0 -6.6506 0 0 ]msf84.7295 376.01 mo(100%)[3.51817 3.93716 3.65783 0 ]xsh98.8155 399.952 mo(0)sh.75 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
105.818 373.558 mo
103.823 373.558 li
103.823 397.5 li
105.818 397.5 li
0 0 0 1 cmyk
@
103.823 385.529 mo
105.818 385.529 li
@
.746 .676 .668 .898 cmyk
ZDWBNZ+HelveticaNeue*1 [6.6506 0 0 -6.6506 0 0 ]msf84.7295 410.18 mo(100%)[3.51817 3.93716 3.65783 0 ]xsh98.8155 434.122 mo(0)sh105.818 407.728 mo
103.823 407.728 li
103.823 431.669 li
105.818 431.669 li
0 0 0 1 cmyk
@
103.823 419.699 mo
105.818 419.699 li
@
.746 .676 .668 .898 cmyk
ZDWBNZ+HelveticaNeue*1 [6.6506 0 0 -6.6506 0 0 ]msf84.7295 444.35 mo(100%)[3.51817 3.93716 3.65783 0 ]xsh98.8155 468.292 mo(0)sh105.818 441.898 mo
103.823 441.898 li
103.823 465.839 li
105.818 465.839 li
0 0 0 1 cmyk
@
103.823 453.869 mo
105.818 453.869 li
@
.746 .676 .668 .898 cmyk
%ADOBeginSubsetFont: RSPQMX+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBNZ+HelveticaNeue gcheck setglobal} if
1 744 15 <0001002fff3b010d02db000f005dba0004000b00032bb8000410411b0006
000400160004002600040036000400460004005600040066000400760004
008600040096000400a6000400b6000400c60004000d5d410500d5000400
e5000400025d00b800072fb800002f303117332e0135343637230e011514
1e02cc41473d3c48414e4f16293ac573e27e7be07267f0764278726f>ZDWBNZ+HelveticaNeue AddT42Char 
1 892 16 <0001fff7ff3b00d402db000f0061ba0004000d00032bb8000410410500da
000d00ea000d00025d411b0009000d0019000d0029000d0039000d004900
0d0059000d0069000d0079000d0089000d0099000d00a9000d00b9000d00
c9000d000d5db80011dc00b800092fb800002f303107333e0135342e0227
231e0115140609404e4f16293a2440463d3cc567ef764278736f3873e37e
7ae1>ZDWBNZ+HelveticaNeue AddT42Char 
1 1644 25 <00010018000001ee02c5002b0091b8002d2fba0001000000032bb8000110
b8002d10b80022dcb8000bdc410500da000b00ea000b00025d411b000900
0b0019000b0029000b0039000b0049000b0059000b0069000b0079000b00
89000b0099000b00a9000b00b9000b00c9000b000d5db8002210b80016d0
b800162fb8000110b80018d0b800182f00ba0018001500032bba00270006
00032bb800271030311333263e0233321e0215140e02070e03072135213e
03373e0335342e0223220e022c55010f2235251c322516172d442d254436
230501cffe940627374221213e301d233c512e38583b1c01ca203f321f12
222f1d2538302f1c163242593f4b21332c2714152e39482f324c331b2643
5c00>ZDWBNZ+HelveticaNeue AddT42Char 
1 2516 28 <00010023fff501fd02b9002b00adb8002d2fba0016001700032bb8001610
b80002d0b8001610b80004d0b800042fb8002d10b80021dcb8000cdc4105
00da000c00ea000c00025d411b0009000c0019000c0029000c0039000c00
49000c0059000c0069000c0079000c0089000c0099000c00a9000c00b900
0c00c9000c000d5dba002a0017002111123900ba0011001c00032bb80011
10ba0001000000032bb8000110ba0026000700032bb8002610ba002a0007
0026111239303101352103173e0133321e0215140e0223222e0227231e03
33323e0235342e0223220607273701d6fea2424919412a243b2a17182937
1e20352717025501243e512e3e5d3e1f243e542f2449170226026e4bfe90
041e25182b3b232a3f2a1513232f1b304c331b2742552d3d5b3d1e191a02
cc000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 4204 37 <0001002efff9022a02020006001500b800042fb800012fba000600010004
1112393031371525352515052e01fcfe0401a93c43e53ee644c1>ZDWBNZ+HelveticaNeue AddT42Char 
1 4968 43 <0002004e0000029a02ca000e0019007db8001b2fba0001000f00032bb800
0110b8001b10b80016dcb80007dc410500da000700ea000700025d411b00
090007001900070029000700390007004900070059000700690007007900
07008900070099000700a9000700b9000700c90007000d5d00ba00000010
00032bb8000010ba000f000100032bb8000f103031371133321e0215140e
0423031133323e0235342623ada0425a39191b2a35363010fdf559825428
b2a550022a25476540425d3e241305027afd36325f8b5aaca8000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 6124 55 <0002004e0000026202ca000800130089b800152fba0001000900032bb800
0110b8001510b80010dcb80005dc410500da000500ea000500025d411b00
090005001900050029000500390005004900050059000500690005007900
05008900050099000500a9000500b9000500c90005000d5db8000110b800
0bd000b8000a2fba0009000100032bb8000910ba0000000c00032bb80000
1030311311333216151406270111331133163635342623adba514b4b51fe
e75fda6c6f6f6c0174010643404044010156fd360124017064646f00>ZDWBNZ+HelveticaNeue AddT42Char 
1 6620 58 <00010025fff0026302db0039008dba001e001f00032bb8001e10ba002900
1400032bb8002910b8001e10b8000bdc410500da001400ea001400025d41
1b0009001400190014002900140039001400490014005900140069001400
790014008900140099001400a9001400b9001400c90014000d5db80032dc
b8002910b8003bdc00ba0019002400032bb8001910ba0006003700032bb8
000610303101332e0323220e0215141e0615140e0223222e023523141e02
33323e0235342e0635343e0233321601eb5a0229475e37315d492c274152
5552412720344120284c39235a2f516b3c31635033274152555241271b2d
3a1e4a5f01f93b55381a19334f363141291913121d2e2527321d0c142a41
2d415f3d1e1733513935462e1b14111a2921232f1c0c45000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 7288 72 <00020024fff5020a02110030004200c3ba003c002400032bb8003c10ba00
07001a00032bb8000710411b0006003c0016003c0026003c0036003c0046
003c0056003c0066003c0076003c0086003c0096003c00a6003c00b6003c
00c6003c000d5d410500d5003c00e5003c00025dba00110024003c111239
b800112fb80012dcb8001a10b8002cd0b8002c2fb8001a10b80031d0b800
312fb8000710b80044dc00ba0037002900032bb8003710ba000c00150003
2bb8000c10b8003710b80003d0b8000c10b80012dcb8002910b8002fd030
312535062322263511342e0223220e0207333e0133321e0215140e02070e
0315141e0233323637141633320315140e0223222e0235343e04020a0f0b
1407223845232b4e3c240255034836142921151c303f23213f311e1b2f3e
23365d232721277412263c2a13251b111d2e3a39340242051c1e010a2d38
1f0a1229423039290612221c18190d0707061223382c2737230f252a2a25
0116571229231708121d1520251409070b000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 7668 73 <00020043fff5022d02ca0018002c00adb8002e2fba0018000000032bb800
1810b80002d0b8001810b80004d0b800042fb8002e10b8000edcb8001810
b80016d0b800162fb8000e10b80019dc410500da001900ea001900025d41
1b0009001900190019002900190039001900490019005900190069001900
790019008900190099001900a9001900b9001900c90019000d5db8001810
b80023d0b800232f00b800002fba001e000900032bb8001e10ba00130028
00032bb8001310303113113335331e0333323e0235342e02232206072311
01140e0223222e0235343e0233321e024355020e292e2f133b593b1d1e3b
593c365a1502013b10243b2c2c3e271211263c2b293d271302cafd364517
1f12082a49623737624b2c272b010bfe3d26483822213647262446372220
36450000>ZDWBNZ+HelveticaNeue AddT42Char 
1 7972 74 <00010024fff501fa021100230079ba001c000b00032bb8001c10411b0006
001c0016001c0026001c0036001c0046001c0056001c0066001c0076001c
0086001c0096001c00a6001c00b6001c00c6001c000d5d410500d5001c00
e5001c00025d00ba0017001000032bb8001710ba0006002100032bb80006
10b80000dcb8001010b80014dc303101332e0323220e0215141e02333236
37230e0123222e0235343e02333216019f5805263b4d2c3d5c3d1e1f3d5b
3b63730e5708473f283a241110253e2e3640015f2e432c152b4b653a3a61
462668603c42203544242749382236000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 8200 75 <00020024fff5020e02ca0013002c00bbb8002d2fba0015001600032bb800
1510b8002d10b80022d0b800222fb80000dc411b00060000001600000026
000000360000004600000056000000660000007600000086000000960000
00a6000000b6000000c60000000d5d410500d5000000e5000000025db800
1610b8000ad0b8000a2fb8001610b80018d0b800182fb8001610b8002ad0
b8002a2fba002b00220015111239b8001610b8002cd000b800152fba000f
002700032bb8000f10ba001d000500032bb8001d10303137343e0233321e
0215140e0223222e0205112311232e0323220e0215141e02333236373315
7e10243c2b2c3e271211263c2b293d2713019055020e292e2e143b593b1d
1e3b593c365a1502fe264838222136472624463722203645da02cafef617
1f13082b49623737624a2c262b460000>ZDWBNZ+HelveticaNeue AddT42Char 
1 8724 77 <0001000c0000012902d20017004fba0003000000032bb8000310b80006d0
b8000010b8000ddcb8000010b80014d000b800012fba0011000a00032bb8
001110ba0015000000032bb8001510b8000010b80003d0b8001510b80005
d030311311331133352335343633321617352e012322061d012315635564
64221f0b1a0b0c1f0c46495701bafe4601ba4b48221803044a0404413f4d
4b00>ZDWBNZ+HelveticaNeue AddT42Char 
1 9396 80 <000200450000009a02ca00030007002fba0001000200032bb8000110b800
0210b80004d0b8000110b80006d000b800052fba0001000000032bb80001
1030311335231d011133119a5555026268685dfdfb020500>ZDWBNZ+HelveticaNeue AddT42Char 
1 9480 82 <000100450000020702ca000b0033ba000b000000032bb8000b10b80002d0
00b800012fb800052fb800002fba000800010000111239ba000a00010000
1112393031131133353713330337230711455550b16cdccd72ec02cafd36
c44afef20149bce201a7>ZDWBNZ+HelveticaNeue AddT42Char 
1 9940 85 <00010040000001ec021100170045ba0003000000032bb8000310ba000e00
0b00032bb8000e10b8000310b80015d0b800152fba001600000003111239
00b800012fb8000c2fba0013000800032bb8001310303113113311343e02
33321615113311342e022322072335405513263927313855112a44337335
020205fdfb0124233b2c183830fea201542a45321c5e5200>ZDWBNZ+HelveticaNeue AddT42Char 
1 10084 86 <00020024fff5021a02110013002700cbb800282fb800292fb8002810b800
14d0b800142fb80000dc411b000600000016000000260000003600000046
0000005600000066000000760000008600000096000000a6000000b60000
00c60000000d5d410500d5000000e5000000025db8002910b8001edcb800
0adc410500da000a00ea000a00025d411b0009000a0019000a0029000a00
39000a0049000a0059000a0069000a0079000a0089000a0099000a00a900
0a00b9000a00c9000a000d5d00ba000f001900032bb8000f10ba00230005
00032bb8002310303113343e0233321e0215140e0223222e0227141e0233
323e0235342e0223220e027e192c3b21213b2c19192c3b21213b2c195a20
405e3d3e5d402020405d3e3d5e402001022f49321a1a32492f2f49311a1a
31492f39624929294962393963492a2a49630000>ZDWBNZ+HelveticaNeue AddT42Char 
1 10404 87 <00020043ff3b022d02110018002c00adb8002e2fba0018000000032bb800
1810b80002d0b8001810b80004d0b800042fb8002e10b8000edcb8001810
b80016d0b800162fb8000e10b80019dc410500da001900ea001900025d41
1b0009001900190019002900190039001900490019005900190069001900
790019008900190099001900a9001900b9001900c90019000d5db8001810
b80023d0b800232f00b800012fba0013002800032bb8001310ba001e0009
00032bb8001e10303113113311331e0333323e0235342e02232206072335
05140e0223222e0235343e0233321e024355020e292e2f133b593b1d1e3b
593c365a1502013b10243b2c2c3e271211263c2b293d27130205fd36010a
171f12082a49623737624b2c272b46fe2648382221364726244637222036
45000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 11008 89 <0001003d0000014d0213000e0027ba0003000100032bb8000310b8000dd0
b8000d2f00b800012fba0009000800032bb8000910303113113335343e02
333526060723353d55142c4833455a1f020205fdfbe6324d361c5a023c3f
6d00>ZDWBNZ+HelveticaNeue AddT42Char 
1 11100 90 <0001001ffff501d60211003a00abba0000000100032bba0020001f00032b
b8002010ba0031001f0020111239b800312f410500da003100ea00310002
5d411b000900310019003100290031003900310049003100590031006900
3100790031008900310099003100a9003100b9003100c90031000d5db800
0bdcb8000010b8002adcb80015dcb8000b10b8003cdc00ba003600060003
2bb8003610ba0025001a00032bb8002510b8000610b80000dcb8002510b8
001fdc303137231e0333323e0235342e02272e0335343e0233321e021733
2e0323220e0215141e0415140e0223222e02745502243c4e2b274f3f271d
2f3d201e3c301f142027131529221602550322394a2c22453723324b584b
3218252c141a312718a3304329120f263e2f2532211407070d131d161419
0f06091421192f3f250f1123382732381f11152221181f10060a1727>ZDWBNZ+HelveticaNeue AddT42Char 
1 11428 91 <000100090000011d02a00017005bba0001000200032bb8000110b8000210
b80006d0b8000310b80007d0b8000210b80017dcb8000dd0b8000110b800
14d000b800012fba000f000c00032bb8000f10ba0004000500032bb80004
10b80000d0b8000510b80015d030311335231523153311141e023b013523
222e0235113335b65558580e1d2f21412714190e056702059b9b4bfeb724
2c18094b030a120f01414b000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 11932 145 <00010032024c00f502db0003000b00b800002fb800012f30311307333788
56408302db8f8f000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 11972 182 <0001000000ee01f4013e0003000b00ba0000000100032b30311115213501
f4013e505000>ZDWBNZ+HelveticaNeue AddT42Char 
ZDWBNZ+HelveticaNeue /CharStrings get begin
/parenleft 15 def
/parenright 16 def
/two 25 def
/five 28 def
/greater 37 def
/D 43 def
/P 55 def
/S 58 def
/a 72 def
/b 73 def
/c 74 def
/d 75 def
/f 77 def
/i 80 def
/k 82 def
/n 85 def
/o 86 def
/p 87 def
/r 89 def
/s 90 def
/t 91 def
/acute 145 def
/endash 182 def
end
ZDWBNZ+HelveticaNeue /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 50 /two put
dup 53 /five put
dup 62 /greater put
dup 68 /D put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 102 /f put
dup 105 /i put
dup 107 /k put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 171 /acute put
dup 208 /endash put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBNZ+HelveticaNeue*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 2{/.notdef}rp /zero /one /two /three /four /five 8{/.notdef}rp /greater 2{/.notdef}rp /A /B /C /D /E /.notdef /G /H 2{/.notdef}rp /K /.notdef /M 2{/.notdef}rp /P 2{/.notdef}rp /S 5{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp /i /.notdef /k /.notdef /m /n /o /p /.notdef /r /s /t 54{/.notdef}rp /acute 36{/.notdef}rp /endash 47{/.notdef}rp]ZDWBNZ+HelveticaNeue nfZDWBNZ+HelveticaNeue*1 [0 -5.9855 -5.9855 0 0 0 ]msf114.799 485.702 mo(0\320200)[-3.74094 -3.1843 -3.39377 -3.55539 0 ]ysh224.531 486.181 mo(>3000)[-3.74698 -3.48953 -3.55539 -3.55539 0 ]yshZDWBNZ+HelveticaNeue*1 [6.6506 0 0 -6.6506 0 0 ]msf119.178 482.409 mo(Distance from annotated 5\253 end)[4.8682 1.63605 3.46497 2.25456 3.73766 3.84406 3.7177 3.5714 1.84886 2.11493 2.34761 3.96379 5.67294 1.84886 3.73766 3.83075 3.83073 3.90395 2.25456 3.6911 2.12822 3.76425 3.94382 1.84888 3.63123 1.47643 1.84886 3.75096 3.84404 0 ]xsh121.905 490.39 mo( to nearest peak \(200 bp bins\))[1.84887 2.1282 3.81747 1.84888 3.83073 3.731 3.74431 2.34096 3.76427 3.46495 2.09497 1.84886 4.09679 3.73099 3.72437 3.45163 1.84888 1.82228 3.75093 3.93716 3.69772 1.84888 4.08347 3.94383 1.84886 4.0835 1.60278 3.85071 3.33859 0 ]xshZDWBNZ+HelveticaNeue*1 [0 -5.9855 -5.9855 0 0 0 ]msf244.485 485.702 mo(0\320200)[-3.74094 -3.1843 -3.39377 -3.55539 0 ]ysh354.217 486.181 mo(>3000)[-3.74698 -3.48953 -3.55539 -3.55539 0 ]yshZDWBNZ+HelveticaNeue*1 [6.6506 0 0 -6.6506 0 0 ]msf248.802 482.409 mo(Distance from annotated 3\253 end)[4.86821 1.63605 3.46497 2.25455 3.73767 3.84406 3.71768 3.57141 1.84885 2.11493 2.34763 3.96378 5.67294 1.84888 3.73764 3.83075 3.83075 3.90393 2.25458 3.6911 2.1282 3.76425 3.94382 1.84888 3.7576 1.47641 1.84888 3.75095 3.84406 0 ]xsh245.184 490.39 mo(to nearest PAS peak \(200 bp bins\))[2.1282 3.81749 1.84886 3.83073 3.73102 3.74429 2.34097 3.76425 3.46497 2.09494 1.84888 4.09009 4.41595 4.30957 1.84885 4.0968 3.73099 3.72437 3.45163 1.84888 1.82227 3.75095 3.93716 3.69772 1.84888 4.08347 3.94385 1.84885 4.0835 1.60278 3.85071 3.33859 0 ]xsh84.7249 341.842 mo(100%)[3.51817 3.93716 3.65782 0 ]xsh98.8108 365.784 mo(0)sh105.818 339.388 mo
103.823 339.388 li
103.823 363.33 li
105.818 363.33 li
0 0 0 1 cmyk
@
103.823 351.359 mo
105.818 351.359 li
@
218.878 360.919 mo
225.529 360.919 li
225.529 363.163 li
218.878 363.163 li
cp
f
.5 lw
218.878 360.919 mo
225.529 360.919 li
225.529 363.163 li
218.878 363.163 li
cp
@
109.145 347.867 mo
115.795 347.867 li
115.795 363.163 li
109.145 363.163 li
cp
f
109.145 347.867 mo
115.795 347.867 li
115.795 363.163 li
109.145 363.163 li
cp
@
116.46 363.163 mo
123.11 363.163 li
123.11 362.166 li
116.46 362.166 li
cp
f
116.46 362.166 mo
123.11 362.166 li
123.11 363.163 li
116.46 363.163 li
cp
@
123.775 363.331 mo
130.426 363.331 li
130.426 362.665 li
123.775 362.665 li
cp
f
131.09 363.331 mo
137.741 363.331 li
137.741 362.998 li
131.09 362.998 li
cp
f
138.406 363.331 mo
145.056 363.331 li
145.056 362.998 li
138.406 362.998 li
cp
f
145.723 363.331 mo
152.373 363.331 li
152.373 362.749 li
145.723 362.749 li
cp
f
153.038 363.331 mo
159.688 363.331 li
159.688 362.998 li
153.038 362.998 li
cp
f
160.353 363.331 mo
167.004 363.331 li
167.004 362.914 li
160.353 362.914 li
cp
f
167.668 363.331 mo
174.319 363.331 li
174.319 362.998 li
167.668 362.998 li
cp
f
174.984 363.331 mo
181.634 363.331 li
181.634 362.998 li
174.984 362.998 li
cp
f
182.3 363.331 mo
188.95 363.331 li
188.95 362.998 li
182.3 362.998 li
cp
f
189.616 363.331 mo
196.266 363.331 li
196.266 362.914 li
189.616 362.914 li
cp
f
196.931 363.331 mo
203.582 363.331 li
203.582 362.914 li
196.931 362.914 li
cp
f
204.247 363.331 mo
210.898 363.331 li
210.898 362.998 li
204.247 362.998 li
cp
f
211.562 363.331 mo
218.213 363.331 li
218.213 362.998 li
211.562 362.998 li
cp
f
110.142 362.914 mo
114.798 362.914 li
114.798 353.088 li
110.142 353.088 li
cp
.453 .363 .352 .016 cmyk
f
1 lw
110.142 362.914 mo
114.798 362.914 li
114.798 353.088 li
110.142 353.088 li
cp
@
117.557 362.914 mo
122.213 362.914 li
122.213 355.711 li
117.557 355.711 li
cp
f
117.557 362.914 mo
122.213 362.914 li
122.213 355.711 li
117.557 355.711 li
cp
@
124.773 362.914 mo
129.428 362.914 li
129.428 360.952 li
124.773 360.952 li
cp
f
124.773 362.914 mo
129.428 362.914 li
129.428 360.952 li
124.773 360.952 li
cp
@
132.088 362.914 mo
136.743 362.914 li
136.743 361.605 li
132.088 361.605 li
cp
f
132.088 362.914 mo
136.743 362.914 li
136.743 361.605 li
132.088 361.605 li
cp
@
139.57 362.914 mo
143.893 362.914 li
143.893 362.696 li
139.57 362.696 li
cp
f
139.57 362.914 mo
143.893 362.914 li
143.893 362.696 li
139.57 362.696 li
cp
@
146.885 362.914 mo
151.208 362.914 li
151.208 362.696 li
146.885 362.696 li
cp
f
146.886 362.914 mo
151.209 362.914 li
151.209 362.696 li
146.886 362.696 li
cp
@
154.201 362.914 mo
158.524 362.914 li
158.524 362.586 li
154.201 362.586 li
cp
f
154.201 362.914 mo
158.524 362.914 li
158.524 362.587 li
154.201 362.587 li
cp
@
161.35 362.914 mo
166.006 362.914 li
cp
f
161.351 362.914 mo
166.006 362.914 li
161.351 362.914 li
cp
@
168.833 362.914 mo
173.156 362.914 li
173.156 362.586 li
168.833 362.586 li
cp
f
168.833 362.914 mo
173.156 362.914 li
173.156 362.587 li
168.833 362.587 li
cp
@
176.414 362.914 mo
180.738 362.914 li
cp
f
176.415 362.914 mo
180.738 362.914 li
176.415 362.914 li
cp
@
183.397 362.914 mo
188.053 362.914 li
188.053 362.806 li
183.397 362.806 li
cp
f
183.398 362.914 mo
188.053 362.914 li
188.053 362.806 li
183.398 362.806 li
cp
@
190.714 362.914 mo
195.037 362.914 li
cp
f
190.713 362.914 mo
195.036 362.914 li
190.713 362.914 li
cp
@
198.095 362.914 mo
202.418 362.914 li
202.418 362.696 li
198.095 362.696 li
cp
f
198.095 362.914 mo
202.418 362.914 li
202.418 362.696 li
198.095 362.696 li
cp
@
205.411 362.914 mo
209.734 362.914 li
209.734 362.806 li
205.411 362.806 li
cp
f
205.411 362.914 mo
209.734 362.914 li
209.734 362.806 li
205.411 362.806 li
cp
@
212.328 362.914 mo
216.651 362.914 li
216.651 362.806 li
212.328 362.806 li
cp
f
212.328 362.914 mo
216.651 362.914 li
216.651 362.806 li
212.328 362.806 li
cp
@
220.042 362.914 mo
224.365 362.914 li
224.365 361.497 li
220.042 361.497 li
cp
f
220.042 362.914 mo
224.365 362.914 li
224.365 361.497 li
220.042 361.497 li
cp
@
111.471 347.951 mo
113.467 347.951 li
113.467 363.163 li
111.471 363.163 li
cp
1 0 1 0 cmyk
f
.5 lw
111.471 347.951 mo
113.467 347.951 li
113.467 363.163 li
111.471 363.163 li
cp
@
221.206 361.002 mo
223.201 361.002 li
223.201 363.163 li
221.206 363.163 li
cp
f
221.206 361.002 mo
223.201 361.002 li
223.201 363.163 li
221.206 363.163 li
cp
@
118.788 361.251 mo
120.783 361.251 li
120.783 363.163 li
118.788 363.163 li
cp
f
118.788 361.251 mo
120.783 361.251 li
120.783 363.163 li
118.788 363.163 li
cp
@
126.103 363.163 mo
128.098 363.163 li
128.098 362.249 li
126.103 362.249 li
cp
f
126.103 362.249 mo
128.098 362.249 li
128.098 363.163 li
126.103 363.163 li
cp
@
133.418 363.163 mo
135.413 363.163 li
135.413 362.499 li
133.418 362.499 li
cp
f
133.418 362.499 mo
135.413 362.499 li
135.413 363.163 li
133.418 363.163 li
cp
@
140.733 363.331 mo
142.729 363.331 li
142.729 362.998 li
140.733 362.998 li
cp
f
148.049 363.331 mo
150.044 363.331 li
150.044 362.998 li
148.049 362.998 li
cp
f
155.365 363.331 mo
157.359 363.331 li
157.359 362.998 li
155.365 362.998 li
cp
f
162.68 363.331 mo
164.675 363.331 li
164.675 362.998 li
162.68 362.998 li
cp
f
169.996 363.331 mo
171.991 363.331 li
171.991 362.998 li
169.996 362.998 li
cp
f
177.312 363.331 mo
179.308 363.331 li
179.308 362.998 li
177.312 362.998 li
cp
f
184.628 363.331 mo
186.623 363.331 li
186.623 362.998 li
184.628 362.998 li
cp
f
191.943 363.331 mo
193.938 363.331 li
193.938 362.998 li
191.943 362.998 li
cp
f
199.259 363.331 mo
201.253 363.331 li
201.253 362.998 li
199.259 362.998 li
cp
f
206.574 363.331 mo
208.569 363.331 li
208.569 362.998 li
206.574 362.998 li
cp
f
213.89 363.331 mo
215.884 363.331 li
215.884 362.998 li
213.89 362.998 li
cp
f
218.878 390.018 mo
225.529 390.018 li
225.529 397.416 li
218.878 397.416 li
cp
0 0 0 1 cmyk
f
218.878 390.018 mo
225.529 390.018 li
225.529 397.416 li
218.878 397.416 li
cp
@
138.406 397.582 mo
145.055 397.582 li
145.055 397.252 li
138.406 397.252 li
cp
f
109.144 393.144 mo
115.794 393.144 li
115.794 397.383 li
109.144 397.383 li
cp
f
109.144 393.144 mo
115.794 393.144 li
115.794 397.383 li
109.144 397.383 li
cp
@
116.459 395.837 mo
123.11 395.837 li
123.11 397.416 li
116.459 397.416 li
cp
f
116.459 395.837 mo
123.11 395.837 li
123.11 397.416 li
116.459 397.416 li
cp
@
123.775 397.416 mo
130.425 397.416 li
130.425 396.752 li
123.775 396.752 li
cp
f
123.775 396.751 mo
130.425 396.751 li
130.425 397.416 li
123.775 397.416 li
cp
@
131.09 397.582 mo
137.74 397.582 li
137.74 397.084 li
131.09 397.084 li
cp
f
145.722 397.582 mo
152.373 397.582 li
152.373 397.084 li
145.722 397.084 li
cp
f
153.037 397.416 mo
159.688 397.416 li
159.688 396.752 li
153.037 396.752 li
cp
f
153.037 396.751 mo
159.688 396.751 li
159.688 397.416 li
153.037 397.416 li
cp
@
160.352 397.582 mo
167.004 397.582 li
167.004 397.084 li
160.352 397.084 li
cp
f
167.668 397.416 mo
174.319 397.416 li
174.319 397.002 li
167.668 397.002 li
cp
f
167.668 397.002 mo
174.319 397.002 li
174.319 397.416 li
167.668 397.416 li
cp
@
174.984 397.416 mo
181.634 397.416 li
181.634 396.752 li
174.984 396.752 li
cp
f
174.984 396.751 mo
181.634 396.751 li
181.634 397.416 li
174.984 397.416 li
cp
@
182.3 397.416 mo
188.95 397.416 li
188.95 397.002 li
182.3 397.002 li
cp
f
182.3 397.002 mo
188.95 397.002 li
188.95 397.416 li
182.3 397.416 li
cp
@
189.616 397.416 mo
196.266 397.416 li
196.266 396.752 li
189.616 396.752 li
cp
f
189.616 396.751 mo
196.266 396.751 li
196.266 397.416 li
189.616 397.416 li
cp
@
196.931 396.086 mo
203.581 396.086 li
203.581 397.416 li
196.931 397.416 li
cp
f
196.931 396.086 mo
203.581 396.086 li
203.581 397.416 li
196.931 397.416 li
cp
@
204.247 397.416 mo
210.898 397.416 li
210.898 397.002 li
204.247 397.002 li
cp
f
204.247 397.002 mo
210.897 397.002 li
210.897 397.416 li
204.247 397.416 li
cp
@
211.562 397.582 mo
218.213 397.582 li
218.213 397.084 li
211.562 397.084 li
cp
f
117.391 397.252 mo
122.046 397.252 li
122.046 396.069 li
117.391 396.069 li
cp
.453 .363 .352 .016 cmyk
f
1 lw
117.391 397.252 mo
122.046 397.252 li
122.046 396.069 li
117.391 396.069 li
cp
@
125.039 397.252 mo
129.695 397.252 li
cp
f
125.039 397.252 mo
129.695 397.252 li
125.039 397.252 li
cp
@
132.355 397.252 mo
137.011 397.252 li
cp
f
132.355 397.252 mo
137.01 397.252 li
132.355 397.252 li
cp
@
139.57 397.252 mo
143.893 397.252 li
143.893 397.013 li
139.57 397.013 li
cp
f
139.57 397.252 mo
143.893 397.252 li
143.893 397.014 li
139.57 397.014 li
cp
@
146.885 397.252 mo
151.208 397.252 li
cp
f
146.885 397.252 mo
151.208 397.252 li
146.885 397.252 li
cp
@
154.301 397.252 mo
158.624 397.252 li
cp
f
154.302 397.252 mo
158.625 397.252 li
154.302 397.252 li
cp
@
161.285 397.252 mo
165.94 397.252 li
cp
f
161.285 397.252 mo
165.941 397.252 li
161.285 397.252 li
cp
@
168.933 397.252 mo
173.257 397.252 li
173.257 397.013 li
168.933 397.013 li
cp
f
168.933 397.252 mo
173.256 397.252 li
173.256 397.014 li
168.933 397.014 li
cp
@
176.249 397.252 mo
180.572 397.252 li
cp
f
176.249 397.252 mo
180.572 397.252 li
176.249 397.252 li
cp
@
183.231 397.252 mo
187.887 397.252 li
cp
f
183.231 397.252 mo
187.886 397.252 li
183.231 397.252 li
cp
@
190.547 397.252 mo
194.87 397.252 li
cp
f
190.547 397.252 mo
194.87 397.252 li
190.547 397.252 li
cp
@
198.095 397.252 mo
202.418 397.252 li
202.418 397.013 li
198.095 397.013 li
cp
f
198.095 397.252 mo
202.418 397.252 li
202.418 397.014 li
198.095 397.014 li
cp
@
205.51 397.252 mo
209.833 397.252 li
209.833 396.778 li
205.51 396.778 li
cp
f
205.511 397.252 mo
209.834 397.252 li
209.834 396.778 li
205.511 396.778 li
cp
@
212.827 397.252 mo
217.15 397.252 li
cp
f
212.826 397.252 mo
217.149 397.252 li
212.826 397.252 li
cp
@
220.142 397.252 mo
224.465 397.252 li
224.465 377.9 li
220.142 377.9 li
cp
f
220.142 397.252 mo
224.465 397.252 li
224.465 377.9 li
220.142 377.9 li
cp
@
110.002 397.252 mo
114.658 397.252 li
114.658 395.597 li
110.002 395.597 li
cp
f
110.002 397.252 mo
114.658 397.252 li
114.658 395.597 li
110.002 395.597 li
cp
@
111.471 397.252 mo
113.466 397.252 li
113.466 396.336 li
111.471 396.336 li
cp
1 0 1 0 cmyk
f
111.471 396.335 mo
113.467 396.335 li
113.467 397.252 li
111.471 397.252 li
cp
@
118.787 397.416 mo
120.781 397.416 li
120.781 396.919 li
118.787 396.919 li
cp
f
.5 lw
118.788 396.918 mo
120.783 396.918 li
120.783 397.416 li
118.788 397.416 li
cp
@
126.103 397.252 mo
128.098 397.252 li
128.098 396.834 li
126.103 396.834 li
cp
f
1 lw
126.103 396.834 mo
128.098 396.834 li
128.098 397.251 li
126.103 397.251 li
cp
@
133.418 395.92 mo
135.413 395.92 li
135.413 397.252 li
133.418 397.252 li
cp
f
133.418 395.92 mo
135.413 395.92 li
135.413 397.252 li
133.418 397.252 li
cp
@
140.733 397.252 mo
142.729 397.252 li
142.729 396.834 li
140.733 396.834 li
cp
f
140.733 396.834 mo
142.729 396.834 li
142.729 397.251 li
140.733 397.251 li
cp
@
148.049 397.416 mo
150.044 397.416 li
150.044 397.085 li
148.049 397.085 li
cp
f
.5 lw
148.049 397.084 mo
150.044 397.084 li
150.044 397.416 li
148.049 397.416 li
cp
@
155.365 397.416 mo
157.359 397.416 li
157.359 396.919 li
155.365 396.919 li
cp
f
155.365 396.918 mo
157.36 396.918 li
157.36 397.416 li
155.365 397.416 li
cp
@
162.68 397.416 mo
164.675 397.416 li
164.675 397.085 li
162.68 397.085 li
cp
f
162.681 397.084 mo
164.676 397.084 li
164.676 397.416 li
162.681 397.416 li
cp
@
169.996 397.416 mo
171.991 397.416 li
171.991 396.919 li
169.996 396.919 li
cp
f
169.997 396.918 mo
171.992 396.918 li
171.992 397.416 li
169.997 397.416 li
cp
@
177.312 397.252 mo
179.308 397.252 li
179.308 396.834 li
177.312 396.834 li
cp
f
1 lw
177.312 396.834 mo
179.308 396.834 li
179.308 397.251 li
177.312 397.251 li
cp
@
184.628 397.252 mo
186.623 397.252 li
186.623 396.336 li
184.628 396.336 li
cp
f
184.628 396.335 mo
186.623 396.335 li
186.623 397.252 li
184.628 397.252 li
cp
@
191.943 397.416 mo
193.938 397.416 li
193.938 396.919 li
191.943 396.919 li
cp
f
.5 lw
191.943 396.918 mo
193.938 396.918 li
193.938 397.416 li
191.943 397.416 li
cp
@
199.259 397.416 mo
201.253 397.416 li
201.253 396.919 li
199.259 396.919 li
cp
f
199.259 396.918 mo
201.254 396.918 li
201.254 397.416 li
199.259 397.416 li
cp
@
206.574 397.416 mo
208.569 397.416 li
208.569 396.919 li
206.574 396.919 li
cp
f
206.574 396.918 mo
208.57 396.918 li
208.57 397.416 li
206.574 397.416 li
cp
@
213.89 397.416 mo
215.884 397.416 li
215.884 396.919 li
213.89 396.919 li
cp
f
213.89 396.918 mo
215.885 396.918 li
215.885 397.416 li
213.89 397.416 li
cp
@
221.206 383.782 mo
223.201 383.782 li
223.201 397.252 li
221.206 397.252 li
cp
f
1 lw
221.206 383.782 mo
223.201 383.782 li
223.201 397.252 li
221.206 397.252 li
cp
@
109.144 431.67 mo
115.794 431.67 li
115.794 431.338 li
109.144 431.338 li
cp
0 0 0 1 cmyk
f
116.459 431.504 mo
123.11 431.504 li
123.11 431.088 li
116.459 431.088 li
cp
f
.5 lw
116.459 431.088 mo
123.11 431.088 li
123.11 431.504 li
116.459 431.504 li
cp
@
123.775 431.504 mo
130.425 431.504 li
130.425 431.088 li
123.775 431.088 li
cp
f
123.775 431.088 mo
130.425 431.088 li
130.425 431.504 li
123.775 431.504 li
cp
@
131.09 431.504 mo
137.74 431.504 li
137.74 430.922 li
131.09 430.922 li
cp
f
131.09 430.922 mo
137.74 430.922 li
137.74 431.504 li
131.09 431.504 li
cp
@
138.406 431.67 mo
145.055 431.67 li
145.055 431.172 li
138.406 431.172 li
cp
f
145.722 431.67 mo
152.373 431.67 li
152.373 431.172 li
145.722 431.172 li
cp
f
153.037 431.67 mo
159.688 431.67 li
159.688 431.338 li
153.037 431.338 li
cp
f
160.352 431.67 mo
167.004 431.67 li
167.004 431.172 li
160.352 431.172 li
cp
f
167.668 431.504 mo
174.319 431.504 li
174.319 431.088 li
167.668 431.088 li
cp
f
167.668 431.088 mo
174.319 431.088 li
174.319 431.504 li
167.668 431.504 li
cp
@
174.984 431.67 mo
181.634 431.67 li
181.634 431.338 li
174.984 431.338 li
cp
f
182.3 431.67 mo
188.95 431.67 li
188.95 431.338 li
182.3 431.338 li
cp
f
189.616 431.504 mo
196.266 431.504 li
196.266 430.922 li
189.616 430.922 li
cp
f
189.616 430.922 mo
196.266 430.922 li
196.266 431.504 li
189.616 431.504 li
cp
@
196.931 429.176 mo
203.581 429.176 li
203.581 431.504 li
196.931 431.504 li
cp
f
196.931 429.176 mo
203.581 429.176 li
203.581 431.504 li
196.931 431.504 li
cp
@
204.247 430.424 mo
210.897 430.424 li
210.897 431.504 li
204.247 431.504 li
cp
f
204.247 430.424 mo
210.897 430.424 li
210.897 431.504 li
204.247 431.504 li
cp
@
211.563 430.256 mo
218.213 430.256 li
218.213 431.504 li
211.563 431.504 li
cp
f
211.563 430.256 mo
218.213 430.256 li
218.213 431.504 li
211.563 431.504 li
cp
@
218.878 420.031 mo
225.529 420.031 li
225.529 431.504 li
218.878 431.504 li
cp
f
218.878 420.031 mo
225.529 420.031 li
225.529 431.504 li
218.878 431.504 li
cp
@
110.141 431.373 mo
114.797 431.373 li
114.797 431.022 li
110.141 431.022 li
cp
.453 .363 .352 .016 cmyk
f
1 lw
110.141 431.373 mo
114.797 431.373 li
114.797 431.021 li
110.141 431.021 li
cp
@
117.457 431.373 mo
122.112 431.373 li
122.112 431.197 li
117.457 431.197 li
cp
f
117.457 431.373 mo
122.112 431.373 li
122.112 431.197 li
117.457 431.197 li
cp
@
124.468 431.373 mo
129.456 431.373 li
cp
f
124.468 431.373 mo
129.456 431.373 li
124.468 431.373 li
cp
@
132.088 431.373 mo
136.744 431.373 li
136.744 431.197 li
132.088 431.197 li
cp
f
132.088 431.373 mo
136.743 431.373 li
136.743 431.197 li
132.088 431.197 li
cp
@
139.57 431.373 mo
143.893 431.373 li
143.893 431.022 li
139.57 431.022 li
cp
f
139.57 431.373 mo
143.893 431.373 li
143.893 431.021 li
139.57 431.021 li
cp
@
147.024 431.373 mo
151.347 431.373 li
151.347 430.852 li
147.024 430.852 li
cp
f
147.024 431.373 mo
151.347 431.373 li
151.347 430.852 li
147.024 430.852 li
cp
@
154.201 431.373 mo
158.525 431.373 li
cp
f
154.201 431.373 mo
158.524 431.373 li
154.201 431.373 li
cp
@
161.35 431.373 mo
166.006 431.373 li
166.006 431.022 li
161.35 431.022 li
cp
f
161.351 431.373 mo
166.006 431.373 li
166.006 431.021 li
161.351 431.021 li
cp
@
168.833 431.373 mo
173.156 431.373 li
cp
f
168.833 431.373 mo
173.156 431.373 li
168.833 431.373 li
cp
@
176.148 431.373 mo
180.472 431.373 li
180.472 430.676 li
176.148 430.676 li
cp
f
176.148 431.373 mo
180.471 431.373 li
180.471 430.676 li
176.148 430.676 li
cp
@
183.075 431.373 mo
187.731 431.373 li
187.731 431.022 li
183.075 431.022 li
cp
f
183.075 431.373 mo
187.731 431.373 li
187.731 431.021 li
183.075 431.021 li
cp
@
190.779 431.373 mo
195.103 431.373 li
195.103 431.022 li
190.779 431.022 li
cp
f
190.779 431.373 mo
195.102 431.373 li
195.102 431.021 li
190.779 431.021 li
cp
@
198.095 431.373 mo
202.418 431.373 li
cp
f
198.095 431.373 mo
202.418 431.373 li
198.095 431.373 li
cp
@
205.078 431.373 mo
209.401 431.373 li
209.401 431.197 li
205.078 431.197 li
cp
f
205.078 431.373 mo
209.401 431.373 li
209.401 431.197 li
205.078 431.197 li
cp
@
212.394 431.373 mo
216.717 431.373 li
216.717 431.197 li
212.394 431.197 li
cp
f
212.394 431.373 mo
216.717 431.373 li
216.717 431.197 li
212.394 431.197 li
cp
@
219.913 431.373 mo
224.236 431.373 li
224.236 411.672 li
219.913 411.672 li
cp
f
219.913 431.373 mo
224.236 431.373 li
224.236 411.672 li
219.913 411.672 li
cp
@
111.471 431.539 mo
113.466 431.539 li
113.466 431.207 li
111.471 431.207 li
cp
1 0 1 0 cmyk
f
.5 lw
111.471 431.207 mo
113.467 431.207 li
113.467 431.539 li
111.471 431.539 li
cp
@
118.787 431.539 mo
120.781 431.539 li
120.781 431.207 li
118.787 431.207 li
cp
f
118.788 431.207 mo
120.783 431.207 li
120.783 431.539 li
118.788 431.539 li
cp
@
126.103 431.539 mo
128.098 431.539 li
128.098 431.207 li
126.103 431.207 li
cp
f
126.103 431.207 mo
128.098 431.207 li
128.098 431.539 li
126.103 431.539 li
cp
@
133.418 431.539 mo
135.413 431.539 li
135.413 431.207 li
133.418 431.207 li
cp
f
133.418 431.207 mo
135.413 431.207 li
135.413 431.539 li
133.418 431.539 li
cp
@
140.733 431.539 mo
142.729 431.539 li
142.729 431.207 li
140.733 431.207 li
cp
f
140.733 431.207 mo
142.729 431.207 li
142.729 431.539 li
140.733 431.539 li
cp
@
148.049 431.373 mo
150.044 431.373 li
150.044 430.957 li
148.049 430.957 li
cp
f
1 lw
148.049 430.957 mo
150.044 430.957 li
150.044 431.373 li
148.049 431.373 li
cp
@
155.365 431.539 mo
157.359 431.539 li
157.359 431.041 li
155.365 431.041 li
cp
f
.5 lw
155.365 431.041 mo
157.36 431.041 li
157.36 431.539 li
155.365 431.539 li
cp
@
162.68 431.373 mo
164.675 431.373 li
164.675 430.957 li
162.68 430.957 li
cp
f
1 lw
162.681 430.957 mo
164.676 430.957 li
164.676 431.373 li
162.681 431.373 li
cp
@
169.996 431.373 mo
171.991 431.373 li
171.991 430.957 li
169.996 430.957 li
cp
f
169.997 430.957 mo
171.992 430.957 li
171.992 431.373 li
169.997 431.373 li
cp
@
177.312 431.373 mo
179.308 431.373 li
179.308 430.792 li
177.312 430.792 li
cp
f
177.312 430.791 mo
179.308 430.791 li
179.308 431.373 li
177.312 431.373 li
cp
@
184.628 430.293 mo
186.623 430.293 li
186.623 431.373 li
184.628 431.373 li
cp
f
184.628 430.293 mo
186.623 430.293 li
186.623 431.373 li
184.628 431.373 li
cp
@
191.943 430.293 mo
193.938 430.293 li
193.938 431.373 li
191.943 431.373 li
cp
f
191.943 430.293 mo
193.938 430.293 li
193.938 431.373 li
191.943 431.373 li
cp
@
199.259 431.539 mo
201.253 431.539 li
201.253 431.041 li
199.259 431.041 li
cp
f
.5 lw
199.259 431.041 mo
201.254 431.041 li
201.254 431.539 li
199.259 431.539 li
cp
@
206.574 431.539 mo
208.569 431.539 li
208.569 431.207 li
206.574 431.207 li
cp
f
206.574 431.207 mo
208.57 431.207 li
208.57 431.539 li
206.574 431.539 li
cp
@
213.89 431.373 mo
215.884 431.373 li
215.884 430.625 li
213.89 430.625 li
cp
f
1 lw
213.89 430.625 mo
215.885 430.625 li
215.885 431.373 li
213.89 431.373 li
cp
@
221.206 417.24 mo
223.201 417.24 li
223.201 431.373 li
221.206 431.373 li
cp
f
221.206 417.24 mo
223.201 417.24 li
223.201 431.373 li
221.206 431.373 li
cp
@
109.144 459.771 mo
115.794 459.771 li
115.794 465.839 li
109.144 465.839 li
cp
0 0 0 1 cmyk
f
.5 lw
109.144 459.771 mo
115.794 459.771 li
115.794 465.839 li
109.144 465.839 li
cp
@
116.459 464.428 mo
123.11 464.428 li
123.11 465.84 li
116.459 465.84 li
cp
f
116.459 464.428 mo
123.11 464.428 li
123.11 465.84 li
116.459 465.84 li
cp
@
123.775 464.676 mo
130.425 464.676 li
130.425 465.84 li
123.775 465.84 li
cp
f
123.775 464.676 mo
130.425 464.676 li
130.425 465.84 li
123.775 465.84 li
cp
@
131.09 464.428 mo
137.74 464.428 li
137.74 465.84 li
131.09 465.84 li
cp
f
131.09 464.428 mo
137.74 464.428 li
137.74 465.84 li
131.09 465.84 li
cp
@
138.406 465.84 mo
145.055 465.84 li
145.055 465.426 li
138.406 465.426 li
cp
f
138.406 465.426 mo
145.056 465.426 li
145.056 465.84 li
138.406 465.84 li
cp
@
145.722 465.84 mo
152.373 465.84 li
152.373 465.426 li
145.722 465.426 li
cp
f
145.722 465.426 mo
152.373 465.426 li
152.373 465.84 li
145.722 465.84 li
cp
@
153.037 465.84 mo
159.688 465.84 li
159.688 465.176 li
153.037 465.176 li
cp
f
153.037 465.176 mo
159.688 465.176 li
159.688 465.84 li
153.037 465.84 li
cp
@
160.352 465.84 mo
167.004 465.84 li
167.004 465.176 li
160.352 465.176 li
cp
f
160.353 465.176 mo
167.004 465.176 li
167.004 465.84 li
160.353 465.84 li
cp
@
167.668 465.84 mo
174.319 465.84 li
174.319 465.426 li
167.668 465.426 li
cp
f
167.668 465.426 mo
174.319 465.426 li
174.319 465.84 li
167.668 465.84 li
cp
@
174.984 466.005 mo
181.634 466.005 li
181.634 465.507 li
174.984 465.507 li
cp
f
182.3 465.84 mo
188.95 465.84 li
188.95 465.426 li
182.3 465.426 li
cp
f
182.3 465.426 mo
188.95 465.426 li
188.95 465.84 li
182.3 465.84 li
cp
@
189.616 466.005 mo
196.266 466.005 li
196.266 465.673 li
189.616 465.673 li
cp
f
196.931 465.84 mo
203.582 465.84 li
203.582 465.176 li
196.931 465.176 li
cp
f
196.931 465.176 mo
203.581 465.176 li
203.581 465.84 li
196.931 465.84 li
cp
@
204.247 464.178 mo
210.897 464.178 li
210.897 465.84 li
204.247 465.84 li
cp
f
204.247 464.178 mo
210.897 464.178 li
210.897 465.84 li
204.247 465.84 li
cp
@
211.562 465.84 mo
218.213 465.84 li
218.213 465.426 li
211.562 465.426 li
cp
f
211.563 465.426 mo
218.213 465.426 li
218.213 465.84 li
211.563 465.84 li
cp
@
218.878 463.098 mo
225.529 463.098 li
225.529 465.84 li
218.878 465.84 li
cp
f
218.878 463.098 mo
225.529 463.098 li
225.529 465.84 li
218.878 465.84 li
cp
@
109.875 465.633 mo
114.53 465.633 li
114.53 459.17 li
109.875 459.17 li
cp
.453 .363 .352 .016 cmyk
f
1 lw
109.875 465.633 mo
114.53 465.633 li
114.53 459.17 li
109.875 459.17 li
cp
@
117.622 465.633 mo
122.278 465.633 li
122.278 464.391 li
117.622 464.391 li
cp
f
117.622 465.633 mo
122.278 465.633 li
122.278 464.391 li
117.622 464.391 li
cp
@
124.705 465.633 mo
129.361 465.633 li
129.361 463.645 li
124.705 463.645 li
cp
f
124.705 465.633 mo
129.361 465.633 li
129.361 463.645 li
124.705 463.645 li
cp
@
131.788 465.633 mo
136.444 465.633 li
136.444 464.887 li
131.788 464.887 li
cp
f
131.788 465.633 mo
136.444 465.633 li
136.444 464.887 li
131.788 464.887 li
cp
@
139.536 465.633 mo
143.859 465.633 li
143.859 464.887 li
139.536 464.887 li
cp
f
139.536 465.633 mo
143.859 465.633 li
143.859 464.887 li
139.536 464.887 li
cp
@
146.718 465.633 mo
151.041 465.633 li
151.041 464.141 li
146.718 464.141 li
cp
f
146.718 465.633 mo
151.041 465.633 li
151.041 464.141 li
146.718 464.141 li
cp
@
154.034 465.633 mo
158.357 465.633 li
cp
f
154.034 465.633 mo
158.357 465.633 li
154.034 465.633 li
cp
@
161.256 465.633 mo
165.911 465.633 li
165.911 465.135 li
161.256 465.135 li
cp
f
161.255 465.633 mo
165.91 465.633 li
165.91 465.135 li
161.255 465.135 li
cp
@
168.138 465.633 mo
173.458 465.633 li
cp
f
168.138 465.633 mo
173.458 465.633 li
168.138 465.633 li
cp
@
176.301 465.633 mo
180.624 465.633 li
180.624 465.383 li
176.301 465.383 li
cp
f
176.301 465.633 mo
180.624 465.633 li
180.624 465.383 li
176.301 465.383 li
cp
@
183.131 465.633 mo
187.787 465.633 li
187.787 465.135 li
183.131 465.135 li
cp
f
183.131 465.633 mo
187.786 465.633 li
187.786 465.135 li
183.131 465.135 li
cp
@
190.779 465.633 mo
195.103 465.633 li
cp
f
190.779 465.633 mo
195.102 465.633 li
190.779 465.633 li
cp
@
198.095 465.633 mo
202.418 465.633 li
202.418 465.383 li
198.095 465.383 li
cp
f
198.095 465.633 mo
202.418 465.633 li
202.418 465.383 li
198.095 465.383 li
cp
@
205.411 465.633 mo
209.734 465.633 li
cp
f
205.411 465.633 mo
209.734 465.633 li
205.411 465.633 li
cp
@
212.692 465.633 mo
217.015 465.633 li
cp
f
212.692 465.633 mo
217.015 465.633 li
212.692 465.633 li
cp
@
220.042 465.633 mo
224.365 465.633 li
224.365 456.436 li
220.042 456.436 li
cp
f
220.042 465.633 mo
224.365 465.633 li
224.365 456.436 li
220.042 456.436 li
cp
@
169.996 465.84 mo
171.991 465.84 li
171.991 465.508 li
169.996 465.508 li
cp
1 0 1 0 cmyk
f
.5 lw
169.997 465.508 mo
171.992 465.508 li
171.992 465.84 li
169.997 465.84 li
cp
@
177.312 465.84 mo
179.308 465.84 li
179.308 465.508 li
177.312 465.508 li
cp
f
177.312 465.508 mo
179.308 465.508 li
179.308 465.84 li
177.312 465.84 li
cp
@
184.628 465.84 mo
186.623 465.84 li
186.623 465.342 li
184.628 465.342 li
cp
f
184.628 465.342 mo
186.623 465.342 li
186.623 465.84 li
184.628 465.84 li
cp
@
191.943 465.84 mo
193.938 465.84 li
193.938 465.508 li
191.943 465.508 li
cp
f
191.943 465.508 mo
193.938 465.508 li
193.938 465.84 li
191.943 465.84 li
cp
@
199.259 465.84 mo
201.253 465.84 li
201.253 465.342 li
199.259 465.342 li
cp
f
199.259 465.342 mo
201.254 465.342 li
201.254 465.84 li
199.259 465.84 li
cp
@
111.304 459.605 mo
113.299 459.605 li
113.299 465.673 li
111.304 465.673 li
cp
f
1 lw
111.304 459.605 mo
113.299 459.605 li
113.299 465.673 li
111.304 465.673 li
cp
@
118.62 465.673 mo
120.614 465.673 li
120.614 464.76 li
118.62 464.76 li
cp
f
118.62 464.76 mo
120.615 464.76 li
120.615 465.674 li
118.62 465.674 li
cp
@
125.935 462.68 mo
127.93 462.68 li
127.93 465.674 li
125.935 465.674 li
cp
f
125.935 462.68 mo
127.93 462.68 li
127.93 465.674 li
125.935 465.674 li
cp
@
133.25 465.673 mo
135.245 465.673 li
135.245 464.76 li
133.25 464.76 li
cp
f
133.25 464.76 mo
135.245 464.76 li
135.245 465.674 li
133.25 465.674 li
cp
@
140.566 465.84 mo
142.56 465.84 li
142.56 465.342 li
140.566 465.342 li
cp
f
.5 lw
140.566 465.342 mo
142.561 465.342 li
142.561 465.84 li
140.566 465.84 li
cp
@
147.217 465.673 mo
150.543 465.673 li
150.543 465.257 li
147.217 465.257 li
cp
f
1 lw
147.217 465.258 mo
150.542 465.258 li
150.542 465.674 li
147.217 465.674 li
cp
@
155.256 465.84 mo
157.302 465.84 li
157.302 465.508 li
155.256 465.508 li
cp
f
.5 lw
155.256 465.508 mo
157.301 465.508 li
157.301 465.84 li
155.256 465.84 li
cp
@
162.681 465.673 mo
164.675 465.673 li
164.675 464.76 li
162.681 464.76 li
cp
f
1 lw
162.681 464.76 mo
164.676 464.76 li
164.676 465.674 li
162.681 465.674 li
cp
@
206.574 465.673 mo
208.569 465.673 li
208.569 465.257 li
206.574 465.257 li
cp
f
206.574 465.258 mo
208.57 465.258 li
208.57 465.674 li
206.574 465.674 li
cp
@
213.89 465.84 mo
215.884 465.84 li
215.884 465.342 li
213.89 465.342 li
cp
f
.5 lw
213.89 465.342 mo
215.885 465.342 li
215.885 465.84 li
213.89 465.84 li
cp
@
221.206 459.937 mo
223.201 459.937 li
223.201 465.673 li
221.206 465.673 li
cp
f
1 lw
221.206 459.937 mo
223.201 459.937 li
223.201 465.673 li
221.206 465.673 li
cp
@
.695 .672 .637 .738 cmyk
%ADOBeginSubsetFont: RSPQMX+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBNZ+HelveticaNeue gcheck setglobal} if
1 1172 21 <00010053000000c2006f0003001bba0003000000032bb800031000ba0000
000100032bb8000010303137153335536f6f6f6f0000>ZDWBNZ+HelveticaNeue AddT42Char 
1 5784 51 <0001004e0000022702ca0005001fba0005000000032bb800051000b80000
2fba0004000100032bb800041030311311213521114e01d9fe8602cafd36
50027a00>ZDWBNZ+HelveticaNeue AddT42Char 
1 5996 53 <0001004d0000028602ca000b004bba0003000000032bb8000310ba000700
0800032bb8000710b8000810b8000ad0b8000a2f00b800012fb800052fb8
00002fb800072fba000400010000111239ba000a00010000111239303113
11331133013311231123014d5a020175685a02fe8802cafd36023dfdc302
cafdbd0243000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 6332 57 <0002004e0000029002ca0020002b009db8002d2fba0023000000032bb800
2310b80002d0b8002d10b8001ddcba001a0000001d111239b80027dc4105
00da002700ea002700025d411b0009002700190027002900270039002700
490027005900270069002700790027008900270099002700a9002700b900
2700c90027000d5d00b800012fb8000e2fba0000002300032bb8000010ba
0022000300032bb8002210ba001a0003002211123930311311331133321e
02171e0317332e03272e0327353e013534262303233533321615140e024e
5fe8232a1a0c04050202070a6a0f0f080202030b17271f413b73662bc6ec
433c1b2d3c02cafd36013115232f1a1a362f260b122f34361a1a30271c06
021262415764feb7f9443627311d0a000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 6916 59 <000100020000023d02ca00070027ba0003000000032bb800031000b80001
2fba0006000700032bb8000610b8000710b80003d0303113113311333521
15f05feefdc5027afd86027a50500000>ZDWBNZ+HelveticaNeue AddT42Char 
1 8876 78 <00020024ff2f01fe02110028003c00bdba002e000c00032bb8002e10ba00
01000200032bb8000110b8000210b80038d0b800382fba00040002003811
1239b8000210b80015d0411b0006002e0016002e0026002e0036002e0046
002e0056002e0066002e0076002e0086002e0096002e00a6002e00b6002e
00c6002e000d5d410500d5002e00e5002e00025dba0021000c002e111239
b800212fb80020dcb8000110b8003edc00ba001b002600032bb8001b10ba
0007003300032bb8000710ba0029001100032bb800291030312511231523
2e0123220e0215141e02333236373315140e0223222e0227231e03333236
27222e0235343e0233321e0215140e0201fe5001175231435c38181d3a56
3a3259160211263a2a152e271b015502283d4b247c74ee2a38220e11253a
292838231011243b2c01d94a2b2b334f612e355f472a2d30222b48331d09
1420172a3a24107e98233946232544341f203542222448392300>ZDWBNZ+HelveticaNeue AddT42Char 
1 9232 79 <00010040000001ec02ca001a0051ba001a000000032bb8001a10ba000e00
0b00032bb8000e10b8001a10b80002d0b8001a10b80018d0b800182f00b8
00002fb800012fb8000c2fba0013000800032bb8001310ba001900010000
111239303113113311343e0233321615113311342e0223220e0207231140
5513263927313855112a443317312d240a0202cafd360124233b2c183830
fea201542a45321c0a1521180111>ZDWBNZ+HelveticaNeue AddT42Char 
1 9580 83 <000100450000009a02ca00030017ba0003000000032bb800031000b80001
2fb800002f303113113311455502cafd3602ca000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 11592 92 <00010040fff501ec020500180051ba000c000d00032bb8000c10ba000100
0200032bb8000110b8000210b80016d0b800162fba001700020001111239
b8000210b80018d0b800182f00b800012fb8000c2fba0008001300032bb8
000810303121112311140e0223222635112311141e0233323637331501ec
5513263927313855112a443339541b020205fedc233b2c183830015efeac
2a45321b2d3052000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 11752 93 <0001000e000001e602050007001900b800012fb800052fb800002fba0004
00000001111239303121132303230323130129bd598d02915fc00205fe51
01affdfb>ZDWBNZ+HelveticaNeue AddT42Char 
1 11816 96 <00010008ff3201ec02050016002300b800012fb800052fb800122fba0004
00120001111239ba000e0012000111123930310513230323032313070e01
23222627151e0133323e02010be15a91029760cd230c201a0d190c0e1e0f
1d2a231d440249fe5901a7fdfe57171808044e05040f21340000>ZDWBNZ+HelveticaNeue AddT42Char 
ZDWBNZ+HelveticaNeue /CharStrings get begin
/period 21 def
/L 51 def
/N 53 def
/R 57 def
/T 59 def
/g 78 def
/h 79 def
/l 83 def
/u 92 def
/v 93 def
/y 96 def
end
ZDWBNZ+HelveticaNeue /Encoding get
dup 46 /period put
dup 76 /L put
dup 78 /N put
dup 82 /R put
dup 84 /T put
dup 103 /g put
dup 104 /h put
dup 108 /l put
dup 117 /u put
dup 118 /v put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBNZ+HelveticaNeue*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five 8{/.notdef}rp /greater 2{/.notdef}rp /A /B /C /D /E /.notdef /G /H 2{/.notdef}rp /K /L /M /N /.notdef /P /.notdef /R /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v 2{/.notdef}rp /y 49{/.notdef}rp /acute 36{/.notdef}rp /endash 47{/.notdef}rp]ZDWBNZ+HelveticaNeue nfZDWBNZ+HelveticaNeue*1 [9.3108 0 0 -9.3108 0 0 ]msf38.3638 347.523 mo(This study)[5.48411 5.23267 2.17873 4.6554 2.5884 4.7392 2.93292 5.28854 5.60512 0 ]xsh21.474 358.696 mo(\(piRNA genes\))[2.58843 5.60512 2.12286 6.48961 6.84344 6.03335 2.5884 5.44687 5.13959 5.2606 5.1582 4.55299 0 ]xsh32.4142 381.694 mo(Aravin et al.)[6.22888 3.21215 4.92544 4.71127 2.13217 5.1768 2.5884 5.06509 2.93293 2.5884 5.11165 2.05769 0 ]xsh48.4939 392.866 mo(clusters)[5.08372 2.13218 5.29784 4.7392 2.85844 5.15821 3.31458 0 ]xsh32.4049 415.864 mo(Girard et al.)[7.18796 2.15079 3.21216 5.13959 3.19353 5.52132 2.5884 5.06509 2.93293 2.5884 5.11165 2.05769 0 ]xsh48.4939 427.037 mo(clusters)[5.08372 2.13218 5.29784 4.7392 2.85844 5.15821 3.31458 0 ]xsh43.1496 450.035 mo(Lau et al.)[5.40957 5.0651 5.1768 2.5884 5.0651 2.93292 2.5884 5.11166 2.05768 0 ]xsh48.4939 461.208 mo(clusters)[5.08372 2.13218 5.29784 4.7392 2.85844 5.15821 3.31458 0 ]xsh255.203 331.667 mo(Polyadenylation site)[5.94955 5.41895 2.15079 4.60886 5.0744 5.59579 5.13959 5.10233 4.72989 2.1601 5.05579 2.97018 2.1601 5.44687 5.17682 2.58838 4.75784 2.15079 2.85843 0 ]xsh.5 lw
239.056 348.533 mo
245.707 348.533 li
245.707 362.998 li
239.056 362.998 li
cp
0 0 0 1 cmyk
@
246.371 363.163 mo
253.022 363.163 li
253.022 362.83 li
246.371 362.83 li
cp
f
253.687 363.163 mo
260.338 363.163 li
260.338 362.83 li
253.687 362.83 li
cp
f
261.003 363.163 mo
267.653 363.163 li
267.653 362.83 li
261.003 362.83 li
cp
f
268.319 363.163 mo
274.969 363.163 li
274.969 362.748 li
268.319 362.748 li
cp
f
275.634 363.163 mo
282.285 363.163 li
282.285 362.83 li
275.634 362.83 li
cp
f
282.949 363.163 mo
289.599 363.163 li
289.599 362.83 li
282.949 362.83 li
cp
f
290.264 363.163 mo
296.916 363.163 li
296.916 362.83 li
290.264 362.83 li
cp
f
297.581 363.163 mo
304.231 363.163 li
304.231 362.83 li
297.581 362.83 li
cp
f
304.897 363.163 mo
311.547 363.163 li
311.547 362.83 li
304.897 362.83 li
cp
f
312.212 363.163 mo
318.862 363.163 li
318.862 362.83 li
312.212 362.83 li
cp
f
319.527 363.163 mo
326.178 363.163 li
326.178 362.83 li
319.527 362.83 li
cp
f
326.843 363.163 mo
333.494 363.163 li
333.494 362.581 li
326.843 362.581 li
cp
f
334.159 362.499 mo
340.809 362.499 li
340.809 362.998 li
334.159 362.998 li
cp
@
341.474 363.163 mo
348.125 363.163 li
348.125 362.83 li
341.474 362.83 li
cp
f
348.79 358.343 mo
355.439 358.343 li
355.439 362.998 li
348.79 362.998 li
cp
@
239.056 393.259 mo
245.707 393.259 li
245.707 397.252 li
239.056 397.252 li
cp
@
246.372 395.171 mo
253.022 395.171 li
253.022 397.252 li
246.372 397.252 li
cp
@
253.687 396.585 mo
260.337 396.585 li
260.337 397.252 li
253.687 397.252 li
cp
@
261.003 396.834 mo
267.653 396.834 li
267.653 397.251 li
261.003 397.251 li
cp
@
268.318 396.335 mo
274.968 396.335 li
274.968 397.252 li
268.318 397.252 li
cp
@
275.634 397.416 mo
282.285 397.416 li
282.285 396.919 li
275.634 396.919 li
cp
f
282.949 397.416 mo
289.599 397.416 li
289.599 397.085 li
282.949 397.085 li
cp
f
290.264 397.416 mo
296.916 397.416 li
296.916 397.085 li
290.264 397.085 li
cp
f
297.581 397.416 mo
304.231 397.416 li
304.231 397.085 li
297.581 397.085 li
cp
f
304.897 397.416 mo
311.547 397.416 li
311.547 396.919 li
304.897 396.919 li
cp
f
312.212 397.416 mo
318.862 397.416 li
318.862 397.085 li
312.212 397.085 li
cp
f
319.527 396.834 mo
326.177 396.834 li
326.177 397.251 li
319.527 397.251 li
cp
@
326.843 397.416 mo
333.494 397.416 li
333.494 397.085 li
326.843 397.085 li
cp
f
334.159 397.416 mo
340.809 397.416 li
340.809 397.085 li
334.159 397.085 li
cp
f
341.474 397.416 mo
348.125 397.416 li
348.125 397.085 li
341.474 397.085 li
cp
f
348.79 386.443 mo
355.439 386.443 li
355.439 397.252 li
348.79 397.252 li
cp
@
239.055 431.504 mo
245.706 431.504 li
245.706 431.004 li
239.055 431.004 li
cp
f
246.371 431.504 mo
253.022 431.504 li
253.022 431.004 li
246.371 431.004 li
cp
f
253.687 431.504 mo
260.338 431.504 li
260.338 431.172 li
253.687 431.172 li
cp
f
261.003 431.504 mo
267.653 431.504 li
267.653 431.004 li
261.003 431.004 li
cp
f
268.318 430.588 mo
274.968 430.588 li
274.968 431.338 li
268.318 431.338 li
cp
@
275.634 431.504 mo
282.285 431.504 li
282.285 431.172 li
275.634 431.172 li
cp
f
282.949 431.504 mo
289.599 431.504 li
289.599 431.004 li
282.949 431.004 li
cp
f
290.265 430.922 mo
296.916 430.922 li
296.916 431.338 li
290.265 431.338 li
cp
@
297.581 431.504 mo
304.231 431.504 li
304.231 431.172 li
297.581 431.172 li
cp
f
304.896 430.756 mo
311.546 430.756 li
311.546 431.338 li
304.896 431.338 li
cp
@
312.212 430.922 mo
318.862 430.922 li
318.862 431.338 li
312.212 431.338 li
cp
@
319.527 430.588 mo
326.177 430.588 li
326.177 431.338 li
319.527 431.338 li
cp
@
326.843 430.756 mo
333.494 430.756 li
333.494 431.338 li
326.843 431.338 li
cp
@
334.159 430.424 mo
340.809 430.424 li
340.809 431.338 li
334.159 431.338 li
cp
@
341.475 430.424 mo
348.125 430.424 li
348.125 431.338 li
341.475 431.338 li
cp
@
348.79 418.617 mo
355.439 418.617 li
355.439 431.338 li
348.79 431.338 li
cp
@
239.056 461.684 mo
245.707 461.684 li
245.707 465.674 li
239.056 465.674 li
cp
@
246.372 463.43 mo
253.022 463.43 li
253.022 465.674 li
246.372 465.674 li
cp
@
253.687 462.432 mo
260.337 462.432 li
260.337 465.674 li
253.687 465.674 li
cp
@
261.003 464.51 mo
267.653 464.51 li
267.653 465.674 li
261.003 465.674 li
cp
@
268.318 465.01 mo
274.968 465.01 li
274.968 465.674 li
268.318 465.674 li
cp
@
275.634 465.84 mo
282.285 465.84 li
282.285 465.342 li
275.634 465.342 li
cp
f
282.949 464.51 mo
289.599 464.51 li
289.599 465.674 li
282.949 465.674 li
cp
@
290.265 465.01 mo
296.916 465.01 li
296.916 465.674 li
290.265 465.674 li
cp
@
297.581 465.258 mo
304.231 465.258 li
304.231 465.674 li
297.581 465.674 li
cp
@
304.897 465.84 mo
311.547 465.84 li
311.547 465.508 li
304.897 465.508 li
cp
f
312.212 465.84 mo
318.862 465.84 li
318.862 465.508 li
312.212 465.508 li
cp
f
319.527 465.01 mo
326.177 465.01 li
326.177 465.674 li
319.527 465.674 li
cp
@
326.843 465.84 mo
333.494 465.84 li
333.494 465.508 li
326.843 465.508 li
cp
f
334.159 465.258 mo
340.809 465.258 li
340.809 465.674 li
334.159 465.674 li
cp
@
341.474 465.84 mo
348.125 465.84 li
348.125 465.342 li
341.474 465.342 li
cp
f
348.79 461.186 mo
355.439 461.186 li
355.439 465.674 li
348.79 465.674 li
cp
@
1 lw
1 lj
26.5903 145.143 mo
23.2863 145.143 li
.15 .35 1 0 cmyk
@
26.5903 111.493 mo
23.2863 111.493 li
@
26.5903 108.119 mo
23.2863 108.119 li
@
26.5903 93.1128 mo
23.2863 93.1128 li
@
26.5903 93.0112 mo
23.2863 93.0112 li
@
26.5903 84.8643 mo
23.2863 84.8643 li
@
26.5903 84.1826 mo
23.2863 84.1826 li
@
26.5903 83.1938 mo
23.2863 83.1938 li
@
26.5903 69.9043 mo
23.2863 69.9043 li
@
26.5903 67.1963 mo
23.2863 67.1963 li
@
26.5903 61.603 mo
23.2863 61.603 li
@
26.5903 109.497 mo
23.2863 109.497 li
.695 .672 .637 .738 cmyk
@
26.5903 67.2568 mo
23.2863 67.2568 li
@
26.5903 131.427 mo
23.2863 131.427 li
.8 1 .2 0 cmyk
@
26.5903 109.58 mo
23.2863 109.58 li
@
26.5903 108.611 mo
23.2863 108.611 li
@
26.5903 89.0259 mo
23.2863 89.0259 li
@
42.6123 148.913 mo
40.0303 148.913 li
.15 .35 1 0 cmyk
@
42.9736 93.0127 mo
39.6686 93.0127 li
@
42.9736 72.4746 mo
39.6686 72.4746 li
@
42.9736 71.4043 mo
39.6686 71.4043 li
@
42.6123 143.587 mo
40.0303 143.587 li
.695 .672 .637 .738 cmyk
@
42.9736 110.139 mo
39.6686 110.139 li
.8 1 .2 0 cmyk
@
42.9736 88.7524 mo
39.6686 88.7524 li
@
42.9736 74.4893 mo
39.6686 74.4893 li
@
59.3574 135.307 mo
56.0514 135.307 li
.15 .35 1 0 cmyk
@
59.3574 108.554 mo
56.0514 108.554 li
@
59.3574 146.748 mo
56.0514 146.748 li
.695 .672 .637 .738 cmyk
@
59.3574 154.01 mo
56.0514 154.01 li
.8 1 .2 0 cmyk
@
59.3574 145.232 mo
56.0514 145.232 li
@
58.9946 90.8306 mo
56.4136 90.8306 li
@
75.7393 138.728 mo
72.4343 138.728 li
.15 .35 1 0 cmyk
@
75.7393 131.747 mo
72.4343 131.747 li
@
75.7393 129.958 mo
72.4343 129.958 li
@
75.7393 100.726 mo
72.4343 100.726 li
@
75.7393 100.691 mo
72.4343 100.691 li
@
75.7393 85.9062 mo
72.4343 85.9062 li
@
75.7393 84.2168 mo
72.4343 84.2168 li
@
75.7393 83.5737 mo
72.4343 83.5737 li
@
75.7393 131.787 mo
72.4343 131.787 li
.695 .672 .637 .738 cmyk
@
75.7393 131.446 mo
72.4343 131.446 li
.8 1 .2 0 cmyk
@
75.7393 128.702 mo
72.4343 128.702 li
@
75.7393 128.697 mo
72.4343 128.697 li
@
75.7393 109.186 mo
72.4343 109.186 li
@
75.7393 91.1924 mo
72.4343 91.1924 li
@
75.7393 91.1558 mo
72.4343 91.1558 li
@
75.7393 84.0884 mo
72.4343 84.0884 li
@
92.1191 142.878 mo
88.8131 142.878 li
.15 .35 1 0 cmyk
@
92.1191 125.11 mo
88.8131 125.11 li
@
92.1191 96.7432 mo
88.8131 96.7432 li
@
92.1191 96.0112 mo
88.8131 96.0112 li
@
92.1191 78.9463 mo
88.8131 78.9463 li
@
92.1191 86.8638 mo
88.8131 86.8638 li
.695 .672 .637 .738 cmyk
@
92.1191 83.8184 mo
88.8131 83.8184 li
@
92.1191 104.126 mo
88.8131 104.126 li
.8 1 .2 0 cmyk
@
92.1191 97.1313 mo
88.8131 97.1313 li
@
92.1191 97.1211 mo
88.8131 97.1211 li
@
92.1191 96.1978 mo
88.8131 96.1978 li
@
92.1191 82.7402 mo
88.8131 82.7402 li
@
92.1191 78.4058 mo
88.8131 78.4058 li
@
92.1191 74.7065 mo
88.8131 74.7065 li
@
108.502 123.134 mo
105.197 123.134 li
.15 .35 1 0 cmyk
@
108.502 115.902 mo
105.197 115.902 li
@
108.502 101.198 mo
105.197 101.198 li
@
108.502 81.2129 mo
105.197 81.2129 li
@
108.502 147.556 mo
105.197 147.556 li
.695 .672 .637 .738 cmyk
@
108.502 129.762 mo
105.197 129.762 li
.8 1 .2 0 cmyk
@
108.502 119.488 mo
105.197 119.488 li
@
108.502 119.468 mo
105.197 119.468 li
@
108.502 117.526 mo
105.197 117.526 li
@
108.502 117.523 mo
105.197 117.523 li
@
108.502 117.112 mo
105.197 117.112 li
@
108.502 117.09 mo
105.197 117.09 li
@
108.502 85.7354 mo
105.197 85.7354 li
@
108.502 85.7251 mo
105.197 85.7251 li
@
124.885 115.659 mo
121.579 115.659 li
.15 .35 1 0 cmyk
@
124.885 114.375 mo
121.579 114.375 li
@
124.885 95.5864 mo
121.579 95.5864 li
@
124.885 92.8506 mo
121.579 92.8506 li
@
124.885 112.395 mo
121.579 112.395 li
.695 .672 .637 .738 cmyk
@
124.885 110.346 mo
121.579 110.346 li
@
124.885 88.3853 mo
121.579 88.3853 li
@
124.885 88.2231 mo
121.579 88.2231 li
@
124.885 116.553 mo
121.579 116.553 li
.8 1 .2 0 cmyk
@
124.885 115.53 mo
121.579 115.53 li
@
124.885 114.593 mo
121.579 114.593 li
@
124.885 114.06 mo
121.579 114.06 li
@
124.885 112.846 mo
121.579 112.846 li
@
124.885 88.627 mo
121.579 88.627 li
@
124.885 88.6128 mo
121.579 88.6128 li
@
141.263 122.372 mo
137.958 122.372 li
.15 .35 1 0 cmyk
@
141.263 101.319 mo
137.958 101.319 li
@
141.263 98.0449 mo
137.958 98.0449 li
@
141.263 93.522 mo
137.958 93.522 li
@
141.263 90.0381 mo
137.958 90.0381 li
@
141.263 150.382 mo
137.958 150.382 li
.695 .672 .637 .738 cmyk
@
141.263 124.349 mo
137.958 124.349 li
@
141.263 97.2681 mo
137.958 97.2681 li
@
141.263 88.813 mo
137.958 88.813 li
@
141.263 149.08 mo
137.958 149.08 li
.8 1 .2 0 cmyk
@
141.263 143.143 mo
137.958 143.143 li
@
141.263 143.136 mo
137.958 143.136 li
@
141.263 108.719 mo
137.958 108.719 li
@
141.263 107.977 mo
137.958 107.977 li
@
141.263 97.8057 mo
137.958 97.8057 li
@
157.646 149.844 mo
154.34 149.844 li
.15 .35 1 0 cmyk
@
157.646 139.526 mo
154.34 139.526 li
@
157.646 128.775 mo
154.34 128.775 li
@
157.646 101.489 mo
154.34 101.489 li
@
157.646 96.7275 mo
154.34 96.7275 li
@
157.646 93.7476 mo
154.34 93.7476 li
@
157.646 93.7212 mo
154.34 93.7212 li
@
157.646 139.615 mo
154.34 139.615 li
.695 .672 .637 .738 cmyk
@
157.646 100.689 mo
154.34 100.689 li
@
157.284 164.43 mo
154.703 164.43 li
.8 1 .2 0 cmyk
@
157.646 134.977 mo
154.34 134.977 li
@
157.646 133.465 mo
154.34 133.465 li
@
157.646 133.44 mo
154.34 133.44 li
@
157.646 125.26 mo
154.34 125.26 li
@
157.646 125.233 mo
154.34 125.233 li
@
157.646 91.6782 mo
154.34 91.6782 li
@
174.029 140.864 mo
170.724 140.864 li
.15 .35 1 0 cmyk
@
174.029 115.957 mo
170.724 115.957 li
@
174.029 89.4238 mo
170.724 89.4238 li
@
174.029 129.305 mo
170.724 129.305 li
.695 .672 .637 .738 cmyk
@
174.029 123.269 mo
170.724 123.269 li
@
174.029 120.417 mo
170.724 120.417 li
@
174.029 155.096 mo
170.724 155.096 li
.8 1 .2 0 cmyk
@
174.029 154.174 mo
170.724 154.174 li
@
174.029 128.559 mo
170.724 128.559 li
@
174.029 126.102 mo
170.724 126.102 li
@
174.029 126.097 mo
170.724 126.097 li
@
174.029 120.535 mo
170.724 120.535 li
@
174.029 115.27 mo
170.724 115.27 li
@
174.029 114.503 mo
170.724 114.503 li
@
174.029 114.016 mo
170.724 114.016 li
@
174.029 113.974 mo
170.724 113.974 li
@
174.029 109.071 mo
170.724 109.071 li
@
174.029 88.999 mo
170.724 88.999 li
@
190.412 129.489 mo
187.106 129.489 li
.15 .35 1 0 cmyk
@
190.412 124.242 mo
187.106 124.242 li
@
190.412 120.509 mo
187.106 120.509 li
@
190.412 117.995 mo
187.106 117.995 li
@
190.412 108.048 mo
187.106 108.048 li
@
190.412 107.192 mo
187.106 107.192 li
@
190.412 107.009 mo
187.106 107.009 li
@
190.412 106.277 mo
187.106 106.277 li
@
190.412 101.911 mo
187.106 101.911 li
@
190.412 93.0312 mo
187.106 93.0312 li
@
190.412 163.063 mo
187.106 163.063 li
.695 .672 .637 .738 cmyk
@
190.412 108.173 mo
187.106 108.173 li
@
190.412 105.309 mo
187.106 105.309 li
@
190.412 135.476 mo
187.106 135.476 li
.8 1 .2 0 cmyk
@
190.412 103.501 mo
187.106 103.501 li
@
190.412 100.721 mo
187.106 100.721 li
@
190.412 100.463 mo
187.106 100.463 li
@
206.432 164 mo
203.852 164 li
.15 .35 1 0 cmyk
@
206.794 115.96 mo
203.49 115.96 li
@
206.794 105.731 mo
203.49 105.731 li
.8 1 .2 0 cmyk
@
206.794 105.71 mo
203.49 105.71 li
@
223.178 151.848 mo
219.872 151.848 li
.15 .35 1 0 cmyk
@
223.178 132.766 mo
219.872 132.766 li
@
223.178 132.7 mo
219.872 132.7 li
@
223.178 151.103 mo
219.872 151.103 li
.695 .672 .637 .738 cmyk
@
223.178 135.989 mo
219.872 135.989 li
@
223.178 153.223 mo
219.872 153.223 li
.8 1 .2 0 cmyk
@
223.178 151.152 mo
219.872 151.152 li
@
223.178 135.714 mo
219.872 135.714 li
@
223.178 135.564 mo
219.872 135.564 li
@
223.178 135.326 mo
219.872 135.326 li
@
223.178 134.6 mo
219.872 134.6 li
@
223.178 133.813 mo
219.872 133.813 li
@
239.56 149.417 mo
236.254 149.417 li
.15 .35 1 0 cmyk
@
239.56 126.543 mo
236.254 126.543 li
@
239.56 153.923 mo
236.254 153.923 li
.8 1 .2 0 cmyk
@
239.56 151.21 mo
236.254 151.21 li
@
239.56 151.038 mo
236.254 151.038 li
@
239.56 151.003 mo
236.254 151.003 li
@
239.56 138.747 mo
236.254 138.747 li
@
239.56 138.644 mo
236.254 138.644 li
@
255.943 116.681 mo
252.637 116.681 li
.15 .35 1 0 cmyk
@
255.943 111.996 mo
252.637 111.996 li
@
255.943 103.661 mo
252.637 103.661 li
@
255.943 121.981 mo
252.637 121.981 li
.695 .672 .637 .738 cmyk
@
255.943 115.737 mo
252.637 115.737 li
@
255.943 112.327 mo
252.637 112.327 li
@
255.943 105.254 mo
252.637 105.254 li
@
255.943 130.407 mo
252.637 130.407 li
.8 1 .2 0 cmyk
@
255.943 130.391 mo
252.637 130.391 li
@
255.943 121.06 mo
252.637 121.06 li
@
255.943 121.042 mo
252.637 121.042 li
@
255.943 118.597 mo
252.637 118.597 li
@
255.943 117.822 mo
252.637 117.822 li
@
272.322 156.082 mo
269.017 156.082 li
.15 .35 1 0 cmyk
@
272.322 155.877 mo
269.017 155.877 li
@
272.322 155.744 mo
269.017 155.744 li
@
272.322 151.521 mo
269.017 151.521 li
@
272.322 139.607 mo
269.017 139.607 li
@
288.705 151.09 mo
285.398 151.09 li
@
288.705 149.33 mo
285.398 149.33 li
@
288.705 115.257 mo
285.398 115.257 li
@
288.705 152.59 mo
285.398 152.59 li
.8 1 .2 0 cmyk
@
288.705 149.676 mo
285.398 149.676 li
@
288.705 149.652 mo
285.398 149.652 li
@
288.705 136.392 mo
285.398 136.392 li
@
288.705 135.704 mo
285.398 135.704 li
@
288.705 125.858 mo
285.398 125.858 li
@
288.705 117.835 mo
285.398 117.835 li
@
305.087 129.335 mo
301.781 129.335 li
.15 .35 1 0 cmyk
@
305.087 125.473 mo
301.781 125.473 li
.8 1 .2 0 cmyk
@
305.087 125.449 mo
301.781 125.449 li
@
321.467 160.246 mo
318.161 160.246 li
.15 .35 1 0 cmyk
@
321.467 139.198 mo
318.161 139.198 li
@
321.467 143.644 mo
318.161 143.644 li
.8 1 .2 0 cmyk
@
.152 .344 1 .004 cmyk
ZDWBNZ+HelveticaNeue*1 [11.971 0 0 -11.971 0 0 ]msf86.5112 51.7461 mo(Pre-pachytene)[7.60152 3.93837 6.63197 4.66878 7.07489 6.40452 6.4165 6.42842 6.30872 3.54344 6.48831 6.63193 0 ]xsh.695 .672 .637 .738 cmyk
ZDWBNZ+HelveticaNeue*1 [11.971 0 0 -11.971 0 0 ]msf164.825 51.7461 mo(,)sh.008 .977 .973 0 cmyk
ZDWBNZ+HelveticaNeue*1 [11.971 0 0 -11.971 0 0 ]msf168.153 51.7461 mo( )sh.695 .672 .637 .738 cmyk
ZDWBNZ+HelveticaNeue*1 [11.971 0 0 -11.971 0 0 ]msf171.481 51.7461 mo(Hybrid)[8.57124 5.96155 7.11081 3.99821 2.65756 0 ]xsh.879 .762 .008 0 cmyk
ZDWBNZ+HelveticaNeue*1 [11.971 0 0 -11.971 0 0 ]msf206.724 51.7461 mo(, )[3.32794 0 ]xsh.773 .977 .152 .039 cmyk
ZDWBNZ+HelveticaNeue*1 [11.971 0 0 -11.971 0 0 ]msf213.38 51.7461 mo(Pachytene)[7.54167 6.39255 6.41647 6.42844 6.30872 3.53146 6.48831 6.63193 0 ]xsh.75 lw
1 lc
26.7266 165.75 mo
26.7266 46.8155 li
0 0 0 1 cmyk
@
23.2866 46.8159 mo
23.2866 165.75 li
@
26.7266 46.8159 mo
26.7266 46.0089 25.9556 45.3559 25.0076 45.3559 cv
24.0576 45.3559 23.2866 46.0089 23.2866 46.8159 cv
@
26.7266 165.75 mo
26.7266 166.555 25.9556 167.21 25.0086 167.21 cv
24.0576 167.21 23.2866 166.555 23.2866 165.75 cv
.746 .676 .668 .895 cmyk
f
1 lw
0 lc
0 lj
26.7266 165.75 mo
26.7266 166.555 25.9556 167.21 25.0086 167.21 cv
24.0576 167.21 23.2866 166.555 23.2866 165.75 cv
@
23.2866 165.75 mo
23.2866 164.944 24.0576 164.291 25.0086 164.291 cv
25.9576 164.291 26.7266 164.944 26.7266 165.75 cv
f
23.2866 165.75 mo
23.2866 164.944 24.0576 164.291 25.0086 164.291 cv
25.9576 164.291 26.7266 164.944 26.7266 165.75 cv
@
.75 lw
1 lc
1 lj
43.0854 165.586 mo
43.0854 55.9694 li
0 0 0 1 cmyk
@
39.6465 55.9692 mo
39.6465 165.586 li
@
43.0854 55.9692 mo
43.0854 55.1642 42.3164 54.5102 41.3654 54.5102 cv
40.4164 54.5102 39.6464 55.1642 39.6464 55.9692 cv
@
43.0854 165.586 mo
43.0854 166.392 42.3164 167.045 41.3654 167.045 cv
40.4164 167.045 39.6464 166.392 39.6464 165.586 cv
.746 .676 .668 .895 cmyk
f
43.0854 165.586 mo
43.0854 166.392 42.3164 167.045 41.3654 167.045 cv
40.4164 167.045 39.6464 166.392 39.6464 165.586 cv
0 0 0 1 cmyk
@
39.6465 165.586 mo
39.6465 164.779 40.4165 164.126 41.3655 164.126 cv
42.3165 164.126 43.0855 164.779 43.0855 165.586 cv
.746 .676 .668 .895 cmyk
f
39.6465 165.586 mo
39.6465 164.779 40.4165 164.126 41.3655 164.126 cv
42.3165 164.126 43.0855 164.779 43.0855 165.586 cv
0 0 0 1 cmyk
@
59.4458 165.75 mo
59.4458 69.4915 li
@
56.0049 69.4917 mo
56.0049 165.75 li
@
59.4458 69.4917 mo
59.4458 68.6857 58.6748 68.0327 57.7238 68.0327 cv
56.7748 68.0327 56.0058 68.6857 56.0058 69.4917 cv
@
59.4443 165.75 mo
59.4443 166.555 58.6743 167.21 57.7243 167.21 cv
56.7753 167.21 56.0053 166.555 56.0053 165.75 cv
.746 .676 .668 .895 cmyk
f
59.4443 165.75 mo
59.4443 166.555 58.6743 167.21 57.7243 167.21 cv
56.7753 167.21 56.0053 166.555 56.0053 165.75 cv
0 0 0 1 cmyk
@
56.0049 165.75 mo
56.0049 164.944 56.7749 164.291 57.7239 164.291 cv
58.6749 164.291 59.4439 164.944 59.4439 165.75 cv
.746 .676 .668 .895 cmyk
f
56.0049 165.75 mo
56.0049 164.944 56.7749 164.291 57.7239 164.291 cv
58.6749 164.291 59.4439 164.944 59.4439 165.75 cv
0 0 0 1 cmyk
@
75.7988 165.75 mo
75.7988 71.8855 li
@
72.3589 71.8857 mo
72.3589 165.75 li
@
75.7988 71.8857 mo
75.7988 71.0797 75.0288 70.4267 74.0788 70.4267 cv
73.1288 70.4267 72.3588 71.0797 72.3588 71.8857 cv
@
75.7988 165.75 mo
75.7988 166.555 75.0288 167.21 74.0798 167.21 cv
73.1288 167.21 72.3588 166.555 72.3588 165.75 cv
.746 .676 .668 .895 cmyk
f
75.7988 165.75 mo
75.7988 166.555 75.0288 167.21 74.0798 167.21 cv
73.1288 167.21 72.3588 166.555 72.3588 165.75 cv
0 0 0 1 cmyk
@
72.3589 165.75 mo
72.3589 164.944 73.1289 164.291 74.0799 164.291 cv
75.0289 164.291 75.7989 164.944 75.7989 165.75 cv
.746 .676 .668 .895 cmyk
f
72.3589 165.75 mo
72.3589 164.944 73.1289 164.291 74.0799 164.291 cv
75.0289 164.291 75.7989 164.944 75.7989 165.75 cv
0 0 0 1 cmyk
@
92.1582 165.75 mo
92.1582 73.7505 li
@
88.7188 73.7505 mo
88.7188 165.75 li
@
92.1582 73.7505 mo
92.1582 72.9435 91.3872 72.2915 90.4382 72.2915 cv
89.4872 72.2915 88.7192 72.9435 88.7192 73.7505 cv
@
92.1582 165.75 mo
92.1582 166.555 91.3872 167.21 90.4382 167.21 cv
89.4872 167.21 88.7192 166.555 88.7192 165.75 cv
.746 .676 .668 .895 cmyk
f
92.1582 165.75 mo
92.1582 166.555 91.3872 167.21 90.4382 167.21 cv
89.4872 167.21 88.7192 166.555 88.7192 165.75 cv
0 0 0 1 cmyk
@
88.7188 165.75 mo
88.7188 164.944 89.4878 164.291 90.4378 164.291 cv
91.3878 164.291 92.1578 164.944 92.1578 165.75 cv
.746 .676 .668 .895 cmyk
f
88.7188 165.75 mo
88.7188 164.944 89.4878 164.291 90.4378 164.291 cv
91.3878 164.291 92.1578 164.944 92.1578 165.75 cv
0 0 0 1 cmyk
@
108.517 165.75 mo
108.517 73.7585 li
@
105.079 73.7588 mo
105.079 165.75 li
@
108.516 73.7505 mo
108.516 72.9435 107.747 72.2915 106.797 72.2915 cv
105.847 72.2915 105.078 72.9435 105.078 73.7505 cv
@
108.517 165.75 mo
108.517 166.555 107.746 167.21 106.797 167.21 cv
105.848 167.21 105.079 166.555 105.079 165.75 cv
.746 .676 .668 .895 cmyk
f
108.517 165.75 mo
108.517 166.555 107.746 167.21 106.797 167.21 cv
105.848 167.21 105.079 166.555 105.079 165.75 cv
0 0 0 1 cmyk
@
105.079 165.75 mo
105.079 164.944 105.848 164.291 106.799 164.291 cv
107.747 164.291 108.517 164.944 108.517 165.75 cv
.746 .676 .668 .895 cmyk
f
105.079 165.75 mo
105.079 164.944 105.848 164.291 106.799 164.291 cv
107.747 164.291 108.517 164.944 108.517 165.75 cv
0 0 0 1 cmyk
@
124.876 165.75 mo
124.876 75.5735 li
@
121.436 75.5728 mo
121.436 165.75 li
@
124.876 75.5728 mo
124.876 74.7678 124.105 74.1148 123.156 74.1148 cv
122.206 74.1148 121.436 74.7678 121.436 75.5728 cv
@
124.876 165.75 mo
124.876 166.555 124.105 167.21 123.156 167.21 cv
122.206 167.21 121.436 166.555 121.436 165.75 cv
.746 .676 .668 .895 cmyk
f
124.876 165.75 mo
124.876 166.555 124.105 167.21 123.156 167.21 cv
122.206 167.21 121.436 166.555 121.436 165.75 cv
0 0 0 1 cmyk
@
121.436 165.75 mo
121.436 164.944 122.206 164.291 123.155 164.291 cv
124.105 164.291 124.875 164.944 124.875 165.75 cv
.746 .676 .668 .895 cmyk
f
121.436 165.75 mo
121.436 164.944 122.206 164.291 123.155 164.291 cv
124.105 164.291 124.875 164.944 124.875 165.75 cv
0 0 0 1 cmyk
@
141.23 165.75 mo
141.23 86.2945 li
@
137.79 86.2944 mo
137.79 165.749 li
@
141.23 86.2944 mo
141.23 85.4894 140.458 84.8364 139.51 84.8364 cv
138.559 84.8364 137.79 85.4894 137.79 86.2944 cv
@
141.23 165.75 mo
141.23 166.555 140.458 167.21 139.51 167.21 cv
138.559 167.21 137.79 166.555 137.79 165.75 cv
.746 .676 .668 .895 cmyk
f
141.23 165.75 mo
141.23 166.555 140.458 167.21 139.51 167.21 cv
138.559 167.21 137.79 166.555 137.79 165.75 cv
0 0 0 1 cmyk
@
137.79 165.75 mo
137.79 164.944 138.559 164.291 139.51 164.291 cv
140.459 164.291 141.23 164.944 141.23 165.75 cv
.746 .676 .668 .895 cmyk
f
137.79 165.75 mo
137.79 164.944 138.559 164.291 139.51 164.291 cv
140.459 164.291 141.23 164.944 141.23 165.75 cv
0 0 0 1 cmyk
@
157.588 165.75 mo
157.588 90.9165 li
@
154.148 90.916 mo
154.148 165.749 li
@
157.588 90.916 mo
157.588 90.11 156.819 89.457 155.869 89.457 cv
154.918 89.457 154.149 90.11 154.149 90.916 cv
@
157.587 165.75 mo
157.587 166.555 156.817 167.21 155.868 167.21 cv
154.918 167.21 154.148 166.555 154.148 165.75 cv
.746 .676 .668 .895 cmyk
f
157.587 165.75 mo
157.587 166.555 156.817 167.21 155.868 167.21 cv
154.918 167.21 154.148 166.555 154.148 165.75 cv
0 0 0 1 cmyk
@
154.148 165.75 mo
154.148 164.944 154.918 164.291 155.868 164.291 cv
156.818 164.291 157.587 164.944 157.587 165.75 cv
.746 .676 .668 .895 cmyk
f
154.148 165.75 mo
154.148 164.944 154.918 164.291 155.868 164.291 cv
156.818 164.291 157.587 164.944 157.587 165.75 cv
0 0 0 1 cmyk
@
173.947 165.75 mo
173.947 87.3505 li
@
170.508 87.3501 mo
170.508 165.749 li
@
173.947 87.3501 mo
173.947 86.5431 173.178 85.8891 172.229 85.8891 cv
171.278 85.8891 170.508 86.5431 170.508 87.3501 cv
@
173.947 165.75 mo
173.947 166.555 173.178 167.21 172.227 167.21 cv
171.278 167.21 170.508 166.555 170.508 165.75 cv
.746 .676 .668 .895 cmyk
f
173.947 165.75 mo
173.947 166.555 173.178 167.21 172.227 167.21 cv
171.278 167.21 170.508 166.555 170.508 165.75 cv
0 0 0 1 cmyk
@
170.508 165.75 mo
170.508 164.944 171.278 164.291 172.229 164.291 cv
173.178 164.291 173.947 164.944 173.947 165.75 cv
.746 .676 .668 .895 cmyk
f
170.508 165.75 mo
170.508 164.944 171.278 164.291 172.229 164.291 cv
173.178 164.291 173.947 164.944 173.947 165.75 cv
0 0 0 1 cmyk
@
190.307 165.477 mo
190.307 91.9921 li
@
186.867 91.9917 mo
186.867 165.477 li
@
190.307 91.9917 mo
190.307 91.1847 189.537 90.5327 188.587 90.5327 cv
187.637 90.5327 186.868 91.1847 186.868 91.9917 cv
@
190.308 165.477 mo
190.308 166.284 189.537 166.938 188.587 166.938 cv
187.637 166.938 186.867 166.284 186.867 165.477 cv
.746 .676 .668 .895 cmyk
f
190.308 165.477 mo
190.308 166.284 189.537 166.938 188.587 166.938 cv
187.637 166.938 186.867 166.284 186.867 165.477 cv
0 0 0 1 cmyk
@
186.867 165.477 mo
186.867 164.672 187.636 164.018 188.587 164.018 cv
189.536 164.018 190.306 164.672 190.306 165.477 cv
.746 .676 .668 .895 cmyk
f
186.867 165.477 mo
186.867 164.672 187.636 164.018 188.587 164.018 cv
189.536 164.018 190.306 164.672 190.306 165.477 cv
0 0 0 1 cmyk
@
206.997 165.586 mo
206.997 92.4534 li
@
203.556 92.4536 mo
203.556 165.587 li
@
206.997 92.4536 mo
206.997 91.6476 206.228 90.9946 205.279 90.9946 cv
204.328 90.9946 203.556 91.6476 203.556 92.4536 cv
@
206.997 165.586 mo
206.997 166.392 206.228 167.045 205.279 167.045 cv
204.328 167.045 203.556 166.392 203.556 165.586 cv
.746 .676 .668 .895 cmyk
f
206.997 165.586 mo
206.997 166.392 206.228 167.045 205.279 167.045 cv
204.328 167.045 203.556 166.392 203.556 165.586 cv
0 0 0 1 cmyk
@
206.997 165.586 mo
206.997 164.779 206.228 164.126 205.279 164.126 cv
204.328 164.126 203.556 164.779 203.556 165.586 cv
.746 .676 .668 .895 cmyk
f
206.997 165.586 mo
206.997 164.779 206.228 164.126 205.279 164.126 cv
204.328 164.126 203.556 164.779 203.556 165.586 cv
0 0 0 1 cmyk
@
223.355 165.586 mo
223.355 93.0444 li
@
219.917 93.0439 mo
219.917 165.586 li
@
223.355 93.1836 mo
223.355 92.3776 222.586 91.7246 221.635 91.7246 cv
220.686 91.7246 219.917 92.3776 219.917 93.1836 cv
@
223.355 165.586 mo
223.355 166.392 222.586 167.045 221.635 167.045 cv
220.686 167.045 219.917 166.392 219.917 165.586 cv
.746 .676 .668 .895 cmyk
f
223.355 165.586 mo
223.355 166.392 222.586 167.045 221.635 167.045 cv
220.686 167.045 219.917 166.392 219.917 165.586 cv
0 0 0 1 cmyk
@
223.355 165.586 mo
223.355 164.779 222.586 164.126 221.635 164.126 cv
220.686 164.126 219.917 164.779 219.917 165.586 cv
.746 .676 .668 .895 cmyk
f
223.355 165.586 mo
223.355 164.779 222.586 164.126 221.635 164.126 cv
220.686 164.126 219.917 164.779 219.917 165.586 cv
0 0 0 1 cmyk
@
239.715 165.586 mo
239.715 90.0784 li
@
236.274 90.0781 mo
236.274 165.586 li
@
239.714 90.0781 mo
239.714 89.2711 238.945 88.6191 237.994 88.6191 cv
237.045 88.6191 236.274 89.2711 236.274 90.0781 cv
@
239.714 165.586 mo
239.714 166.392 238.945 167.045 237.994 167.045 cv
237.045 167.045 236.274 166.392 236.274 165.586 cv
.746 .676 .668 .895 cmyk
f
239.714 165.586 mo
239.714 166.392 238.945 167.045 237.994 167.045 cv
237.045 167.045 236.274 166.392 236.274 165.586 cv
0 0 0 1 cmyk
@
239.714 165.586 mo
239.714 164.779 238.945 164.126 237.994 164.126 cv
237.045 164.126 236.274 164.779 236.274 165.586 cv
.746 .676 .668 .895 cmyk
f
239.714 165.586 mo
239.714 164.779 238.945 164.126 237.994 164.126 cv
237.045 164.126 236.274 164.779 236.274 165.586 cv
0 0 0 1 cmyk
@
256.068 165.586 mo
256.068 103.168 li
@
252.63 103.168 mo
252.63 165.587 li
@
256.068 103.168 mo
256.068 102.362 255.298 101.709 254.349 101.709 cv
253.399 101.709 252.63 102.362 252.63 103.168 cv
@
256.068 165.586 mo
256.068 166.392 255.298 167.045 254.351 167.045 cv
253.399 167.045 252.63 166.392 252.63 165.586 cv
.746 .676 .668 .895 cmyk
f
256.068 165.586 mo
256.068 166.392 255.298 167.045 254.351 167.045 cv
253.399 167.045 252.63 166.392 252.63 165.586 cv
0 0 0 1 cmyk
@
256.068 165.586 mo
256.068 164.779 255.298 164.126 254.351 164.126 cv
253.399 164.126 252.63 164.779 252.63 165.586 cv
.746 .676 .668 .895 cmyk
f
256.068 165.586 mo
256.068 164.779 255.298 164.126 254.351 164.126 cv
253.399 164.126 252.63 164.779 252.63 165.586 cv
0 0 0 1 cmyk
@
272.428 165.586 mo
272.428 106.288 li
@
268.988 106.289 mo
268.988 165.587 li
@
272.428 106.289 mo
272.428 105.483 271.657 104.83 270.707 104.83 cv
269.759 104.83 268.988 105.483 268.988 106.289 cv
@
272.428 165.586 mo
272.428 166.392 271.657 167.045 270.707 167.045 cv
269.759 167.045 268.988 166.392 268.988 165.586 cv
.746 .676 .668 .895 cmyk
f
272.428 165.586 mo
272.428 166.392 271.657 167.045 270.707 167.045 cv
269.759 167.045 268.988 166.392 268.988 165.586 cv
0 0 0 1 cmyk
@
272.428 165.586 mo
272.428 164.779 271.657 164.126 270.707 164.126 cv
269.759 164.126 268.988 164.779 268.988 165.586 cv
.746 .676 .668 .895 cmyk
f
272.428 165.586 mo
272.428 164.779 271.657 164.126 270.707 164.126 cv
269.759 164.126 268.988 164.779 268.988 165.586 cv
0 0 0 1 cmyk
@
288.787 165.586 mo
288.787 108.126 li
@
285.348 108.126 mo
285.348 165.587 li
@
288.787 108.126 mo
288.787 107.32 288.016 106.668 287.066 106.668 cv
286.117 106.668 285.348 107.32 285.348 108.126 cv
@
288.787 165.586 mo
288.787 166.392 288.016 167.045 287.066 167.045 cv
286.117 167.045 285.348 166.392 285.348 165.586 cv
.746 .676 .668 .895 cmyk
f
288.787 165.586 mo
288.787 166.392 288.016 167.045 287.066 167.045 cv
286.117 167.045 285.348 166.392 285.348 165.586 cv
0 0 0 1 cmyk
@
288.787 165.586 mo
288.787 164.779 288.016 164.126 287.066 164.126 cv
286.117 164.126 285.348 164.779 285.348 165.586 cv
.746 .676 .668 .895 cmyk
f
288.787 165.586 mo
288.787 164.779 288.016 164.126 287.066 164.126 cv
286.117 164.126 285.348 164.779 285.348 165.586 cv
0 0 0 1 cmyk
@
305.145 165.586 mo
305.145 110.84 li
@
301.705 110.841 mo
301.705 165.587 li
@
305.145 110.841 mo
305.145 110.034 304.376 109.381 303.423 109.381 cv
302.474 109.381 301.705 110.034 301.705 110.841 cv
@
305.145 165.586 mo
305.145 166.392 304.376 167.045 303.423 167.045 cv
302.474 167.045 301.705 166.392 301.705 165.586 cv
.746 .676 .668 .895 cmyk
f
305.145 165.586 mo
305.145 166.392 304.376 167.045 303.423 167.045 cv
302.474 167.045 301.705 166.392 301.705 165.586 cv
0 0 0 1 cmyk
@
305.145 165.586 mo
305.145 164.779 304.376 164.126 303.423 164.126 cv
302.474 164.126 301.705 164.779 301.705 165.586 cv
.746 .676 .668 .895 cmyk
f
305.145 165.586 mo
305.145 164.779 304.376 164.126 303.423 164.126 cv
302.474 164.126 301.705 164.779 301.705 165.586 cv
0 0 0 1 cmyk
@
321.5 165.586 mo
321.5 128.592 li
@
318.061 128.593 mo
318.061 165.587 li
@
321.5 128.563 mo
321.5 127.756 320.729 127.102 319.779 127.102 cv
318.829 127.102 318.062 127.756 318.062 128.563 cv
@
321.5 165.586 mo
321.5 166.392 320.729 167.045 319.779 167.045 cv
318.829 167.045 318.062 166.392 318.062 165.586 cv
.746 .676 .668 .895 cmyk
f
321.5 165.586 mo
321.5 166.392 320.729 167.045 319.779 167.045 cv
318.829 167.045 318.062 166.392 318.062 165.586 cv
0 0 0 1 cmyk
@
321.5 165.586 mo
321.5 164.779 320.729 164.126 319.779 164.126 cv
318.829 164.126 318.062 164.779 318.062 165.586 cv
.746 .676 .668 .895 cmyk
f
321.5 165.586 mo
321.5 164.779 320.729 164.126 319.779 164.126 cv
318.829 164.126 318.062 164.779 318.062 165.586 cv
0 0 0 1 cmyk
@
337.857 165.586 mo
337.857 65.0784 li
@
334.419 65.0786 mo
334.419 165.587 li
@
337.857 165.586 mo
337.857 65.0784 li
@
337.857 65.0786 mo
337.857 64.2716 337.087 63.6176 336.138 63.6176 cv
335.188 63.6176 334.419 64.2716 334.419 65.0786 cv
@
337.857 165.586 mo
337.857 166.392 337.087 167.045 336.138 167.045 cv
335.188 167.045 334.419 166.392 334.419 165.586 cv
.746 .676 .668 .895 cmyk
f
337.857 165.586 mo
337.857 166.392 337.087 167.045 336.138 167.045 cv
335.188 167.045 334.419 166.392 334.419 165.586 cv
0 0 0 1 cmyk
@
337.857 165.586 mo
337.857 164.779 337.087 164.126 336.138 164.126 cv
335.188 164.126 334.419 164.779 334.419 165.586 cv
.746 .676 .668 .895 cmyk
f
337.857 165.586 mo
337.857 164.779 337.087 164.126 336.138 164.126 cv
335.188 164.126 334.419 164.779 334.419 165.586 cv
0 0 0 1 cmyk
@
354.217 165.586 mo
354.217 130.193 li
@
350.776 130.194 mo
350.776 165.587 li
@
354.217 165.586 mo
354.217 130.193 li
@
354.217 130.194 mo
354.217 129.388 353.447 128.734 352.497 128.734 cv
351.546 128.734 350.777 129.388 350.777 130.194 cv
@
354.217 165.586 mo
354.217 166.392 353.447 167.045 352.496 167.045 cv
351.546 167.045 350.777 166.392 350.777 165.586 cv
.746 .676 .668 .895 cmyk
f
354.217 165.586 mo
354.217 166.392 353.447 167.045 352.496 167.045 cv
351.546 167.045 350.777 166.392 350.777 165.586 cv
0 0 0 1 cmyk
@
354.217 165.586 mo
354.217 164.779 353.447 164.126 352.496 164.126 cv
351.546 164.126 350.777 164.779 350.777 165.586 cv
.746 .676 .668 .895 cmyk
f
354.217 165.586 mo
354.217 164.779 353.447 164.126 352.496 164.126 cv
351.546 164.126 350.777 164.779 350.777 165.586 cv
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: RSPQMX+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBNZ+HelveticaNeue gcheck setglobal} if
1 2820 29 <00020026fff5020702c50023003700e3ba001c000900032bb8001c10ba00
13002900032bb8001310411b0006001c0016001c0026001c0036001c0046
001c0056001c0066001c0076001c0086001c0096001c00a6001c00b6001c
00c6001c000d5d410500d5001c00e5001c00025d410500da002900ea0029
00025d411b00090029001900290029002900390029004900290059002900
69002900790029008900290099002900a9002900b9002900c90029000d5d
b8000910b80033dcb8001310b80039dc00ba002e000e00032bb8002e10ba
0004002100032bb8000410ba0018002400032bb8001810b8000410b80000
dc303101332e0123220e0215141e0233323e0235342e0223220607273e03
33321607321e0215140e0223222e0235343e02019e550868584c643c1911
34604f435b37181e3751333a591e02010e254236333e7a24362411132435
23233725141326360210585d406a8949387864402d45542731543e232c31
02295e51353ac31a2b3b211f392c19192a3a21213b2b1900>ZDWBNZ+HelveticaNeue AddT42Char 
1 3204 30 <00010032000001fd02b9000e001fba000a000900032bb8000a1000b80009
2fba0002000300032bb8000210303101352115210e0307333e0301fdfe35
017438614a2f065f052e495e027049503b8c9dab5a53b0a692000000>ZDWBNZ+HelveticaNeue AddT42Char 
1 3292 31 <00030028fff5020402c5000f002f00410161ba0030001600032bb8003010
ba0026000800032bb8002610411b00060030001600300026003000360030
00460030005600300066003000760030008600300096003000a6003000b6
003000c60030000d5d410500d5003000e5003000025dba00100016003011
1239b800102fb80000dc410500da000800ea000800025d411b0009000800
190008002900080039000800490008005900080069000800790008008900
080099000800a9000800b9000800c90008000d5dba003a00080026111239
b8003a2f410500da003a00ea003a00025d411b0009003a0019003a002900
3a0039003a0049003a0059003a0069003a0079003a0089003a0099003a00
a9003a00b9003a00c9003a000d5db80020dcba001300160020111239ba00
2300160020111239b80043dc00ba003f001b00032bb8003f10ba002b0005
00032bb8002b10ba000b003500032bb8000b10ba00130035000b111239ba
00230035000b111239303113343e0233321615140623222e02271416170e
0115141e0233323e02353426273e0135342e0223220e0213343e0233321e
0215140e022322269b14212e19344342331a2e22145a362d3c4025415833
31563f253e402d351833523a294b3a22411729371f1e3528171527352042
55020d1b281c0e3736363c0e1c2b20305112155d3f3651361a1c37503442
5b14144f302241331f182e43fe8c1f3224131524311d1e32251549000000
>ZDWBNZ+HelveticaNeue AddT42Char 
1 3832 32 <00020022fff501fe02c5001f003300dfba002a001100032bb8002a10ba00
07002000032bb8000710b8001adc410500da002000ea002000025d411b00
090020001900200029002000390020004900200059002000690020007900
20008900200099002000a9002000b9002000c90020000d5d411b0006002a
0016002a0026002a0036002a0046002a0056002a0066002a0076002a0086
002a0096002a00a6002a00b6002a00c6002a000d5d410500d5002a00e500
2a00025db8000710b80035dc00ba001d000400032bb8001d10ba000c002f
00032bb8000c10ba0025001600032bb8002510b8000410b80000dc303137
231e0133323635342e0223220e0215141e0233323637170e012322260114
0e0223222e0235343e0233321e02865508765981752742583233563e221d
39543634581802044e4e334a010e142636211f3325150f21352624362513
ab5c5ac5b865834c1f223d553334583e23352d028b873801611f392b1919
2a361d213c2f1c1a2d3a0000>ZDWBNZ+HelveticaNeue AddT42Char 
1 7100 63 <000100000000026402ca000b002700b800072fb8000a2fb800012fb80004
2fba000300010007111239ba00090001000711123930311303331b013303
13230b0123f8f86ac6c074fbec6abab272016ffe910127fed9016f015bfe
e90117000000>ZDWBNZ+HelveticaNeue AddT42Char 
ZDWBNZ+HelveticaNeue /CharStrings get begin
/six 29 def
/seven 30 def
/eight 31 def
/nine 32 def
/X 63 def
end
ZDWBNZ+HelveticaNeue /Encoding get
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 88 /X put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBNZ+HelveticaNeue*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 4{/.notdef}rp /greater 2{/.notdef}rp /A /B /C /D /E /.notdef /G /H 2{/.notdef}rp /K /L /M /N /.notdef /P /.notdef /R /S /T 3{/.notdef}rp /X /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v 2{/.notdef}rp /y 49{/.notdef}rp /acute 36{/.notdef}rp /endash 47{/.notdef}rp]ZDWBNZ+HelveticaNeue nfZDWBNZ+HelveticaNeue*1 [9.3108 0 0 -9.3108 0 0 ]msf22.3525 176.288 mo(1)sh38.7209 176.288 mo(2)sh55.0893 176.288 mo(3)sh71.4483 176.288 mo(4)sh87.8167 176.288 mo(5)sh104.185 176.288 mo(6)sh120.554 176.288 mo(7)sh136.913 176.288 mo(8)sh153.281 176.288 mo(9)sh167.489 176.288 mo(1)sh172.275 176.288 mo(0)sh184.053 176.288 mo(1)sh188.392 176.288 mo(1)sh200.58 176.288 mo(1)sh205.31 176.288 mo(2)sh216.948 176.288 mo(1)sh221.687 176.288 mo(3)sh233.372 176.288 mo(1)sh237.972 176.288 mo(4)sh249.676 176.288 mo(1)sh254.406 176.288 mo(5)sh266.016 176.288 mo(1)sh270.793 176.288 mo(6)sh282.506 176.288 mo(1)sh287.012 176.288 mo(7)sh298.772 176.288 mo(1)sh303.511 176.288 mo(8)sh315.121 176.288 mo(1)sh319.888 176.288 mo(9)sh333.408 176.288 mo(X)sh349.627 176.288 mo(Y)sh0 lc
0 lj
219.769 214.612 mo
286.275 214.612 li
286.275 281.116 li
219.769 281.116 li
cp
@
%ADOBeginSubsetFont: RSPQMX+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBNZ+HelveticaNeue gcheck setglobal} if
1 12008 237 <000100470018021201e2000b001300b800072fb800092fb800012fb80003
2f30313717371737273727072707174730b6b530b5b430b4b530b54830b6
b630b6b430b4b430b4000000>ZDWBNZ+HelveticaNeue AddT42Char 
ZDWBNZ+HelveticaNeue /CharStrings get begin
/multiply 237 def
end
ZDWBNZ+HelveticaNeue /Encoding get
dup 33 /multiply put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBNZ+HelveticaNeue*1 [32{/.notdef}rp /space /multiply 3{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 4{/.notdef}rp /greater 2{/.notdef}rp /A /B /C /D /E /.notdef /G /H 2{/.notdef}rp /K /L /M /N /.notdef /P /.notdef /R /S /T 3{/.notdef}rp /X /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v 2{/.notdef}rp /y 49{/.notdef}rp /acute 36{/.notdef}rp /endash 47{/.notdef}rp]ZDWBNZ+HelveticaNeue nfZDWBNZ+HelveticaNeue*1 [7.9807 0 0 -7.9807 0 0 ]msf151.9 298.175 mo(T)sh155.978 298.175 mo(o)sh160.607 298.175 mo(ta)[2.65759 0 ]xsh167.694 298.175 mo(l )[1.77171 0 ]xsh171.684 298.175 mo(b)sh176.528 298.175 mo(p )[4.73257 0 ]xsh183.48 298.175 mo(i)sh185.355 298.175 mo(n )[4.43727 0 ]xsh192.011 298.175 mo(p)sh196.863 298.175 mo(i)sh198.731 298.175 mo(R)sh204.341 298.175 mo(N)sh210.255 298.175 mo(A )[5.17145 0 ]xsh217.645 298.175 mo(c)sh222.042 298.175 mo(l)sh223.918 298.175 mo(u)sh228.499 298.175 mo(s)sh232.609 298.175 mo(t)sh235.115 298.175 mo(e)sh239.576 298.175 mo(r)sh242.465 298.175 mo(s )[3.99036 0 ]xsh248.674 298.175 mo(\()sh250.525 298.175 mo(! )[4.78847 0 ]xsh257.532 298.175 mo(1)sh261.69 298.175 mo(0)shZDWBNZ+HelveticaNeue*1 [4.6527 0 0 -4.6527 0 0 ]msf266.466 295.518 mo(6)shZDWBNZ+HelveticaNeue*1 [7.9807 0 0 -7.9807 0 0 ]msf268.944 298.175 mo(\))shZDWBNZ+HelveticaNeue*1 [0 -7.9807 -7.9807 0 0 0 ]msf108.663 278.811 mo(p)sh108.663 273.959 mo(i)sh108.663 272.091 mo(R)sh108.663 266.481 mo(NA)[-5.9137 0 ]ysh108.663 255.228 mo(s )[-3.99036 0 ]ysh108.663 249.019 mo(m)sh108.663 242.092 mo(a)sh108.663 237.663 mo(pp)[-4.85229 0 ]ysh108.663 227.958 mo(i)sh108.663 226.083 mo(n)sh108.663 221.518 mo(g)sh118.24 278.492 mo(t)sh118.24 275.986 mo(o annotated )[-4.58096 -2.21863 -4.43729 -4.54901 -4.54898 -4.62885 -2.65759 -4.38141 -2.49799 -4.46921 -4.73257 0 ]ysh118.24 230.065 mo(loci)[-1.89941 -4.73257 -4.3974 0 ]ysh136.638 217.538 mo
139.298 217.538 li
.746 .676 .668 .898 cmyk
@
136.638 232.71 mo
139.298 232.71 li
@
136.638 247.88 mo
139.298 247.88 li
@
136.638 263.051 mo
139.298 263.051 li
@
195.358 281.116 mo
195.358 278.456 li
@
186.047 281.116 mo
186.047 278.456 li
@
176.706 281.116 mo
176.706 278.456 li
@
167.395 281.116 mo
167.395 278.456 li
@
158.052 281.116 mo
158.052 278.456 li
@
148.741 281.116 mo
148.741 278.456 li
@
0 0 0 1 cmyk
ZDWBNZ+HelveticaNeue*1 [5.3204 0 0 -5.3204 0 0 ]msf121.847 218.803 mo(1)sh124.678 218.803 mo(0)sh127.843 218.803 mo(0%)[2.94749 0 ]xsh124.773 249.145 mo(5)sh127.838 249.145 mo(0%)[2.9475 0 ]xsh136.638 278.223 mo
139.298 278.223 li
.746 .676 .668 .898 cmyk
@
0 0 0 1 cmyk
ZDWBNZ+HelveticaNeue*1 [5.3204 0 0 -5.3204 0 0 ]msf127.839 279.487 mo(0%)[2.94749 0 ]xsh137.953 286.117 mo(0)sh191.636 286.117 mo(3)sh194.626 286.117 mo(.)sh196.116 286.117 mo(0)sh172.924 286.117 mo(2)sh175.84 286.117 mo(.)sh177.33 286.117 mo(0)sh154.463 286.117 mo(1)sh157.224 286.117 mo(.)sh158.714 286.117 mo(0)sh139.43 281.116 mo
139.43 278.456 li
.746 .676 .668 .898 cmyk
@
0 0 0 1 cmyk
ZDWBNZ+HelveticaNeue*1 [6.6506 0 0 -6.6506 0 0 ]msf168.289 258.675 mo(T)sh172.286 258.675 mo(h)sh176.104 258.675 mo(i)sh177.74 258.675 mo(s )[3.3253 0 ]xsh182.914 258.675 mo(s)sh186.379 258.675 mo(t)sh188.56 258.675 mo(u)sh192.411 258.675 mo(d)sh196.494 258.675 mo(y)sh.508 .234 1 .035 cmyk
ZDWBNZ+HelveticaNeue*1 [6.6506 0 0 -6.6506 0 0 ]msf152.86 266.656 mo(L)sh156.803 266.656 mo(a)sh160.501 266.656 mo(u )[3.69774 0 ]xsh166.048 266.656 mo(e)sh169.746 266.656 mo(t )[2.09496 0 ]xsh173.689 266.656 mo(a)sh177.42 266.656 mo(l)sh178.957 266.656 mo(.)sh180.806 266.656 mo(, )[1.84886 0 ]xsh184.503 266.656 mo(2)sh188.254 266.656 mo(0)sh192.191 266.656 mo(0)sh196.128 266.656 mo(6)sh.816 .34 .063 0 cmyk
ZDWBNZ+HelveticaNeue*1 [6.6506 0 0 -6.6506 0 0 ]msf144.959 274.636 mo(G)sh150.173 274.636 mo(i)sh151.789 274.636 mo(r)sh154.163 274.636 mo(a)sh157.907 274.636 mo(r)sh160.262 274.636 mo(d )[3.94382 0 ]xsh166.054 274.636 mo(e)sh169.752 274.636 mo(t )[2.09496 0 ]xsh173.696 274.636 mo(a)sh177.427 274.636 mo(l)sh178.963 274.636 mo(.)sh180.812 274.636 mo(, )[1.84886 0 ]xsh184.51 274.636 mo(2)sh188.261 274.636 mo(0)sh192.198 274.636 mo(0)sh196.135 274.636 mo(6)sh0 0 0 1 cmyk
ZDWBNZ+HelveticaNeue*1 [6.6506 0 0 -6.6506 0 0 ]msf251.435 258.675 mo(T)sh255.432 258.675 mo(h)sh259.249 258.675 mo(i)sh260.885 258.675 mo(s )[3.32529 0 ]xsh266.06 258.675 mo(s)sh269.524 258.675 mo(t)sh271.706 258.675 mo(u)sh275.557 258.675 mo(d)sh279.64 258.675 mo(y)sh.508 .234 1 .035 cmyk
ZDWBNZ+HelveticaNeue*1 [6.6506 0 0 -6.6506 0 0 ]msf236.005 266.655 mo(L)sh239.949 266.655 mo(a)sh243.647 266.655 mo(u )[3.69774 0 ]xsh249.194 266.655 mo(e)sh252.891 266.655 mo(t )[2.09496 0 ]xsh256.835 266.655 mo(a)sh260.566 266.655 mo(l)sh262.102 266.655 mo(.)sh263.951 266.655 mo(, )[1.84888 0 ]xsh267.649 266.655 mo(2)sh271.4 266.655 mo(0)sh275.337 266.655 mo(0)sh279.274 266.655 mo(6)sh.816 .34 .063 0 cmyk
ZDWBNZ+HelveticaNeue*1 [6.6506 0 0 -6.6506 0 0 ]msf228.105 274.636 mo(G)sh233.319 274.636 mo(i)sh234.935 274.636 mo(r)sh237.309 274.636 mo(a)sh241.053 274.636 mo(r)sh243.408 274.636 mo(d )[3.94382 0 ]xsh249.2 274.636 mo(e)sh252.898 274.636 mo(t )[2.09496 0 ]xsh256.842 274.636 mo(a)sh260.573 274.636 mo(l)sh262.109 274.636 mo(.)sh263.958 274.636 mo(, )[1.84888 0 ]xsh267.656 274.636 mo(2)sh271.407 274.636 mo(0)sh275.344 274.636 mo(0)sh279.281 274.636 mo(6)sh0 0 0 1 cmyk
ZDWBNZ+HelveticaNeue*1 [6.6506 0 0 -6.6506 0 0 ]msf153.638 211.409 mo(A)sh158.134 211.409 mo(l)sh159.723 211.409 mo(l )[1.47644 0 ]xsh163.048 211.409 mo(p)sh167.132 211.409 mo(i)sh168.728 211.409 mo(R)sh173.443 211.409 mo(N)sh178.411 211.409 mo(A)sh182.9 211.409 mo(s)sh1 lc
1 lj
139.876 275.538 mo
141.303 272.53 li
142.24 269.917 li
143.192 267.52 li
144.006 265.206 li
144.932 262.923 li
145.911 260.86 li
146.842 258.852 li
147.717 256.866 li
148.634 254.9 li
149.663 253.278 li
150.313 251.791 li
151.434 250.304 li
151.951 248.885 li
152.708 247.525 li
153.251 246.293 li
153.911 245.073 li
154.583 243.941 li
155.211 242.866 li
155.57 241.933 li
156.215 241.019 li
156.798 240.217 li
157.463 239.443 li
158.088 238.735 li
158.416 238.041 li
158.826 237.38 li
159.158 236.745 li
159.681 236.122 li
160.438 235.534 li
160.919 234.978 li
161.667 234.44 li
161.947 233.919 li
162.634 233.454 li
163.039 232.991 li
163.3 232.619 li
163.848 232.254 li
164.133 231.898 li
164.379 231.542 li
164.983 231.204 li
165.291 230.869 li
165.526 230.538 li
165.93 230.225 li
166.56 229.912 li
167.106 229.607 li
167.43 229.297 li
167.897 229.026 li
168.357 228.76 li
168.823 228.501 li
169.12 228.251 li
169.611 228.001 li
170.083 227.76 li
170.415 227.518 li
170.752 227.311 li
171.208 227.103 li
171.787 226.895 li
172.133 226.701 li
172.426 226.51 li
172.708 226.324 li
173.03 226.138 li
173.383 225.959 li
173.624 225.786 li
173.844 225.621 li
174.055 225.455 li
174.309 225.29 li
174.633 225.142 li
174.899 224.997 li
175.43 224.862 li
175.697 224.735 li
176.081 224.609 li
176.307 224.494 li
176.547 224.38 li
176.982 224.265 li
177.233 224.151 li
177.463 224.058 li
177.704 223.968 li
177.944 223.879 li
178.215 223.79 li
178.554 223.705 li
178.774 223.625 li
178.963 223.549 li
179.178 223.477 li
179.383 223.413 li
179.598 223.354 li
179.813 223.295 li
180.12 223.24 li
180.514 223.181 li
180.75 223.13 li
180.934 223.075 li
181.179 223.024 li
181.39 222.973 li
181.599 222.927 li
181.819 222.884 li
182.055 222.842 li
182.295 222.804 li
182.495 222.765 li
182.765 222.728 li
182.971 222.689 li
183.17 222.656 li
183.36 222.621 li
183.581 222.587 li
183.806 222.558 li
184.025 222.524 li
184.214 222.494 li
184.415 222.465 li
184.66 222.439 li
184.89 222.41 li
185.136 222.38 li
185.351 222.354 li
185.633 222.329 li
185.827 222.308 li
185.96 222.283 li
186.154 222.261 li
186.391 222.24 li
186.63 222.223 li
186.82 222.206 li
187.082 222.189 li
187.292 222.177 li
187.48 222.164 li
187.68 222.155 li
187.952 222.147 li
188.14 222.139 li
188.326 222.13 li
188.5 222.126 li
188.688 222.117 li
188.873 222.113 li
189.052 222.109 li
189.155 222.105 li
189.339 222.1 li
189.523 222.1 li
189.707 222.096 li
189.897 222.096 li
190.081 222.096 li
190.271 222.092 li
190.439 222.092 li
.508 .234 1 .035 cmyk
@
140.847 273.962 mo
142.495 270.421 li
143.735 267.261 li
145.234 264.185 li
146.719 261.122 li
148.372 258.106 li
149.442 255.442 li
150.829 252.871 li
152.257 250.731 li
153.419 248.596 li
154.264 246.626 li
155.334 244.801 li
156.384 243.127 li
157.438 241.641 li
158.662 240.408 li
159.619 239.179 li
160.447 238.045 li
161.313 236.96 li
161.799 236.164 li
162.588 235.456 li
162.833 234.762 li
163.642 234.101 li
163.995 233.465 li
164.389 232.91 li
165.388 232.368 li
165.91 231.843 li
166.344 231.364 li
167.035 230.945 li
167.133 230.572 li
167.472 230.204 li
167.768 229.847 li
168.709 229.508 li
168.858 229.179 li
168.951 228.848 li
169.197 228.534 li
169.456 228.226 li
169.964 227.916 li
170.604 227.619 li
171.355 227.34 li
171.673 227.061 li
172.012 226.794 li
172.37 226.527 li
172.723 226.264 li
173.045 226.023 li
173.552 225.794 li
174.208 225.578 li
174.453 225.37 li
174.996 225.159 li
175.2 224.967 li
175.467 224.781 li
175.636 224.599 li
175.862 224.422 li
176.101 224.248 li
176.31 224.078 li
176.384 223.914 li
176.629 223.765 li
176.741 223.616 li
176.874 223.477 li
177.022 223.35 li
177.509 223.232 li
177.663 223.112 li
177.774 223.003 li
177.924 222.909 li
178.333 222.816 li
179.064 222.728 li
179.29 222.638 li
179.515 222.553 li
179.895 222.477 li
179.951 222.397 li
180.084 222.329 li
180.156 222.265 li
180.211 222.211 li
180.38 222.159 li
180.493 222.108 li
180.739 222.058 li
180.816 222.016 li
181.134 221.973 li
181.303 221.934 li
181.583 221.897 li
181.993 221.863 li
182.351 221.825 li
183.026 221.795 li
183.308 221.762 li
183.381 221.728 li
183.852 221.697 li
183.964 221.668 li
183.999 221.638 li
184.112 221.608 li
184.45 221.583 li
184.491 221.562 li
184.604 221.541 li
184.752 221.532 li
185.351 221.528 li
185.565 221.528 li
.816 .34 .063 0 cmyk
@
139.757 275.542 mo
141.016 272.539 li
141.815 269.921 li
142.67 267.523 li
143.361 265.214 li
144.149 262.949 li
144.916 260.89 li
145.721 258.882 li
146.473 256.903 li
147.256 254.938 li
148.157 253.282 li
148.935 251.677 li
149.458 250.186 li
150.424 248.704 li
151.111 247.258 li
152.175 245.894 li
152.544 244.657 li
152.969 243.45 li
153.466 242.37 li
153.727 241.378 li
154.234 240.455 li
154.786 239.659 li
155.447 238.879 li
155.918 238.113 li
156.347 237.414 li
156.44 236.736 li
156.782 236.071 li
157.12 235.427 li
157.592 234.783 li
158.262 234.194 li
158.431 233.64 li
159.434 233.097 li
159.583 232.577 li
159.926 232.114 li
160.549 231.704 li
160.637 231.331 li
160.723 230.975 li
161.416 230.636 li
162.218 230.301 li
162.316 229.971 li
162.511 229.641 li
162.613 229.31 li
162.798 228.992 li
162.909 228.688 li
163.07 228.387 li
163.58 228.09 li
163.775 227.794 li
164.375 227.535 li
164.686 227.277 li
165.28 227.031 li
165.433 226.79 li
165.792 226.557 li
165.9 226.345 li
166.504 226.138 li
166.662 225.942 li
166.759 225.752 li
167.619 225.562 li
167.891 225.379 li
168.049 225.192 li
168.1 225.023 li
168.229 224.854 li
168.276 224.685 li
168.408 224.536 li
168.509 224.396 li
168.848 224.265 li
169.365 224.138 li
169.559 224.011 li
169.657 223.892 li
169.759 223.778 li
169.933 223.659 li
170.061 223.549 li
170.849 223.443 li
170.998 223.346 li
171.658 223.252 li
171.781 223.159 li
172.058 223.071 li
172.313 222.986 li
172.385 222.906 li
172.462 222.83 li
172.478 222.752 li
172.61 222.689 li
172.666 222.629 li
173.971 222.579 li
174.069 222.524 li
174.3 222.469 li
174.535 222.418 li
174.611 222.371 li
174.678 222.325 li
174.867 222.283 li
175.103 222.245 li
175.215 222.207 li
175.358 222.168 li
175.421 222.134 li
176.025 222.096 li
176.117 222.063 li
176.362 222.028 li
176.429 221.994 li
176.746 221.965 li
179.054 221.931 li
179.254 221.901 li
179.336 221.876 li
179.449 221.847 li
179.576 221.821 li
180.448 221.795 li
180.483 221.774 li
180.631 221.753 li
180.913 221.732 li
181.108 221.711 li
181.139 221.694 li
181.219 221.676 li
181.395 221.66 li
181.461 221.643 li
181.496 221.63 li
181.645 221.614 li
181.768 221.6 li
182.049 221.588 li
182.516 221.575 li
182.653 221.562 li
182.695 221.549 li
182.765 221.542 li
183.073 221.529 li
183.313 221.52 li
183.442 221.512 li
183.606 221.503 li
183.759 221.495 li
183.83 221.486 li
183.938 221.478 li
184.103 221.469 li
184.23 221.464 li
184.373 221.456 li
184.481 221.452 li
184.573 221.448 li
184.69 221.44 li
184.895 221.435 li
185.022 221.432 li
185.494 221.422 li
185.596 221.419 li
185.734 221.414 li
185.924 221.41 li
186.103 221.405 li
186.231 221.402 li
186.476 221.398 li
186.61 221.393 li
186.846 221.389 li
186.942 221.389 li
187.046 221.384 li
187.153 221.38 li
187.292 221.375 li
187.408 221.375 li
187.526 221.372 li
187.664 221.368 li
187.757 221.368 li
187.92 221.363 li
188.308 221.359 li
188.325 221.359 li
188.458 221.355 li
188.642 221.355 li
188.914 221.351 li
189.062 221.346 li
189.14 221.346 li
189.281 221.342 li
189.441 221.342 li
189.523 221.338 li
189.676 221.338 li
189.932 221.338 li
190.025 221.334 li
190.106 221.334 li
190.187 221.334 li
190.204 221.33 li
190.316 221.33 li
190.403 221.33 li
190.495 221.325 li
190.664 221.325 li
190.777 221.325 li
190.909 221.325 li
190.996 221.321 li
191.187 221.321 li
191.294 221.321 li
191.448 221.321 li
191.6 221.317 li
191.739 221.317 li
191.847 221.317 li
192.026 221.317 li
192.164 221.317 li
192.338 221.312 li
192.42 221.312 li
192.553 221.312 li
192.655 221.312 li
192.742 221.312 li
192.855 221.312 li
192.865 221.308 li
193.07 221.308 li
193.182 221.308 li
193.325 221.308 li
193.445 221.308 li
193.739 221.308 li
193.868 221.308 li
193.986 221.304 li
194.099 221.304 li
194.355 221.304 li
194.468 221.304 li
194.559 221.304 li
194.625 221.304 li
194.637 221.304 li
194.759 221.304 li
194.933 221.304 li
195.03 221.299 li
195.112 221.299 li
195.297 221.299 li
195.537 221.299 li
195.701 221.299 li
195.829 221.299 li
195.89 221.299 li
195.896 221.299 li
.746 .676 .668 .898 cmyk
@
0 lc
0 lj
219.769 217.538 mo
222.429 217.538 li
@
219.769 232.71 mo
222.429 232.71 li
@
219.769 247.88 mo
222.429 247.88 li
@
219.769 263.051 mo
222.429 263.051 li
@
278.49 281.116 mo
278.49 278.456 li
@
269.18 281.116 mo
269.18 278.456 li
@
259.838 281.116 mo
259.838 278.456 li
@
250.527 281.116 mo
250.527 278.456 li
@
241.184 281.116 mo
241.184 278.456 li
@
231.873 281.116 mo
231.873 278.456 li
@
219.769 278.223 mo
222.429 278.223 li
@
0 0 0 1 cmyk
ZDWBNZ+HelveticaNeue*1 [5.3204 0 0 -5.3204 0 0 ]msf221.083 286.119 mo(0)sh274.739 286.119 mo(3)sh277.729 286.119 mo(.0)[1.54825 0 ]xsh256.059 286.119 mo(2)sh258.974 286.119 mo(.)sh260.464 286.119 mo(0)sh237.597 286.119 mo(1)sh240.358 286.119 mo(.)sh241.848 286.119 mo(0)sh222.561 281.116 mo
222.561 278.456 li
.746 .676 .668 .898 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: RSPQMX+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBNZ+HelveticaNeue gcheck setglobal} if
1 6992 60 <0001004afff0028802ca0011002fba000a000b00032bb8000a10ba000100
0200032bb800011000b800012fb8000a2fba0006000f00032bb800061030
3101112311140623222635112311141633323602885f5f5b60665f9b8a87
92010201c8fe386063636001c8fe388f8389>ZDWBNZ+HelveticaNeue AddT42Char 
1 10708 88 <00020024ff3b020e02110013002c00a9b8002d2fba0015000a00032bb800
1510b8002d10b80022d0b800222fb80000dc411b00060000001600000026
000000360000004600000056000000660000007600000086000000960000
00a6000000b6000000c60000000d5d410500d5000000e5000000025db800
0a10b80017d0b800172fb8000a10b8002ad0b8002a2fb8000a10b8002cd0
b8002c2f00b800142fba001d000500032bb8001d10ba000f002700032bb8
000f10303137343e0233321e0215140e0223222e0201112315232e032322
0e0215141e023332363733117e10243c2b2c3e271211263c2b293d271301
9055020e292e2e143b593b1d1e3b593c365a1502fe264838222136472624
463722203645fe6102ca45171f13082b49623737624a2c262bfef5000000
>ZDWBNZ+HelveticaNeue AddT42Char 
ZDWBNZ+HelveticaNeue /CharStrings get begin
/U 60 def
/q 88 def
end
ZDWBNZ+HelveticaNeue /Encoding get
dup 85 /U put
dup 113 /q put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBNZ+HelveticaNeue*1 [32{/.notdef}rp /space /multiply 3{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 4{/.notdef}rp /greater 2{/.notdef}rp /A /B /C /D /E /.notdef /G /H 2{/.notdef}rp /K /L /M /N /.notdef /P /.notdef /R /S /T /U 2{/.notdef}rp /X /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /q /r /s /t /u /v 2{/.notdef}rp /y 49{/.notdef}rp /acute 36{/.notdef}rp /endash 47{/.notdef}rp]ZDWBNZ+HelveticaNeue nfZDWBNZ+HelveticaNeue*1 [6.6506 0 0 -6.6506 0 0 ]msf225.123 203.431 mo(U)sh230.057 203.431 mo(n)sh233.875 203.431 mo(i)sh235.504 203.431 mo(q)sh239.574 203.431 mo(u)sh243.418 203.431 mo(e)sh247.163 203.431 mo(l)sh248.779 203.431 mo(y )[3.3253 0 ]xsh253.953 203.431 mo(m)sh259.766 203.431 mo(a)sh263.497 203.431 mo(pp)[4.0835 0 ]xsh271.664 203.431 mo(i)sh273.266 203.431 mo(ng)[3.84406 0 ]xsh234.154 211.411 mo(p)sh238.238 211.411 mo(i)sh239.84 211.411 mo(R)sh244.556 211.411 mo(N)sh249.524 211.411 mo(A)sh254.013 211.411 mo(s o)sh263.151 211.411 mo(n)sh266.968 211.411 mo(l)sh268.584 211.411 mo(y)sh1 lc
1 lj
222.953 275.372 mo
224.382 272.13 li
225.318 269.301 li
226.27 266.695 li
227.086 264.234 li
228.012 261.824 li
228.99 259.588 li
229.923 257.407 li
230.798 255.255 li
231.716 253.122 li
232.745 251.36 li
233.395 249.747 li
234.517 248.14 li
235.276 246.663 li
235.935 245.338 li
236.48 244.027 li
236.997 242.758 li
237.667 241.532 li
238.297 240.379 li
238.656 239.36 li
239.301 238.4 li
239.886 237.553 li
240.551 236.704 li
241.177 235.944 li
241.503 235.189 li
241.913 234.472 li
242.676 233.832 li
243.152 233.229 li
243.904 232.647 li
244.182 232.088 li
244.874 231.596 li
245.279 231.112 li
245.8 230.691 li
246.056 230.284 li
246.307 229.923 li
246.543 229.563 li
246.844 229.202 li
247.451 228.846 li
247.86 228.507 li
248.183 228.175 li
248.725 227.895 li
249.022 227.623 li
249.514 227.386 li
250.061 227.152 li
250.4 226.924 li
250.855 226.703 li
251.185 226.486 li
251.537 226.278 li
251.824 226.066 li
252.402 225.862 li
252.725 225.667 li
253.008 225.468 li
253.246 225.281 li
253.469 225.099 li
253.724 224.921 li
254.047 224.76 li
254.677 224.62 li
254.944 224.483 li
255.329 224.352 li
255.553 224.225 li
255.988 224.102 li
256.245 223.979 li
256.778 223.86 li
257.043 223.746 li
257.27 223.643 li
257.511 223.545 li
257.782 223.452 li
258.258 223.359 li
258.544 223.27 li
258.877 223.181 li
259.098 223.096 li
259.292 223.011 li
259.611 222.927 li
259.969 222.846 li
260.178 222.769 li
260.394 222.705 li
260.609 222.642 li
260.849 222.579 li
261.055 222.515 li
261.289 222.455 li
261.475 222.4 li
261.72 222.341 li
261.931 222.294 li
262.324 222.247 li
262.596 222.205 li
263.062 222.17 li
263.261 222.133 li
263.482 222.099 li
263.671 222.064 li
264.132 222.027 li
264.379 221.992 li
264.609 221.958 li
264.833 221.925 li
265.039 221.891 li
265.244 221.861 li
265.429 221.828 li
265.648 221.798 li
265.853 221.768 li
266.088 221.738 li
266.335 221.708 li
266.544 221.684 li
266.739 221.658 li
266.985 221.632 li
267.18 221.607 li
267.312 221.586 li
267.548 221.559 li
268.015 221.543 li
268.27 221.526 li
268.466 221.509 li
268.676 221.492 li
268.864 221.479 li
269.084 221.462 li
269.296 221.454 li
269.479 221.445 li
269.664 221.441 li
269.905 221.434 li
270.088 221.428 li
270.263 221.424 li
270.452 221.424 li
270.636 221.424 li
270.822 221.424 li
271.057 221.424 li
271.268 221.42 li
271.365 221.42 li
271.672 221.42 li
271.96 221.42 li
272.165 221.42 li
272.347 221.42 li
272.533 221.42 li
272.809 221.42 li
.508 .234 1 .035 cmyk
@
223.926 273.781 mo
225.575 269.984 li
226.816 266.58 li
228.315 263.245 li
229.8 259.93 li
231.455 256.68 li
232.843 253.889 li
233.912 251.3 li
235.342 248.975 li
236.505 246.663 li
237.35 244.528 li
238.421 242.556 li
239.47 240.735 li
240.525 239.127 li
241.483 237.791 li
242.314 236.564 li
243.179 235.402 li
244.402 234.277 li
244.89 233.428 li
245.678 232.664 li
245.924 231.91 li
246.319 231.302 li
247.312 230.721 li
247.839 230.156 li
248.269 229.652 li
249.08 229.231 li
249.171 228.824 li
249.473 228.463 li
249.622 228.103 li
249.719 227.742 li
249.959 227.407 li
250.227 227.072 li
250.975 226.77 li
251.48 226.491 li
252.121 226.219 li
252.629 225.977 li
253.325 225.739 li
253.981 225.506 li
254.228 225.277 li
254.544 225.06 li
254.751 224.852 li
255.297 224.648 li
255.558 224.45 li
255.727 224.254 li
255.974 224.067 li
256.178 223.882 li
256.256 223.702 li
256.496 223.537 li
257.439 223.401 li
257.567 223.27 li
258.059 223.138 li
258.208 223.015 li
258.319 222.897 li
258.468 222.782 li
258.617 222.68 li
259.03 222.579 li
259.764 222.48 li
259.989 222.387 li
260.307 222.298 li
260.644 222.205 li
260.869 222.116 li
261.249 222.031 li
261.305 221.946 li
261.659 221.861 li
261.885 221.784 li
262.018 221.708 li
262.094 221.645 li
262.151 221.58 li
262.263 221.518 li
262.432 221.466 li
262.509 221.415 li
262.677 221.373 li
262.92 221.336 li
263.278 221.297 li
263.616 221.259 li
263.897 221.225 li
264.256 221.191 li
264.665 221.156 li
264.779 221.123 li
264.818 221.093 li
265.285 221.06 li
265.567 221.03 li
265.68 220.999 li
265.997 220.969 li
266.11 220.941 li
266.448 220.915 li
267.123 220.889 li
267.16 220.864 li
267.272 220.843 li
267.631 220.822 li
267.707 220.809 li
267.856 220.801 li
268.455 220.801 li
268.671 220.801 li
.816 .34 .063 0 cmyk
@
222.835 275.372 mo
224.095 272.135 li
224.894 269.305 li
225.749 266.703 li
226.44 264.238 li
227.23 261.833 li
227.998 259.601 li
228.802 257.424 li
229.554 255.268 li
230.338 253.138 li
231.24 251.34 li
232.018 249.591 li
232.541 247.977 li
233.508 246.375 li
234.194 244.894 li
235.259 243.578 li
235.629 242.268 li
236.054 240.989 li
236.55 239.834 li
236.813 238.763 li
237.319 237.802 li
237.872 236.95 li
238.532 236.106 li
239.004 235.351 li
239.435 234.612 li
239.526 233.891 li
239.87 233.255 li
240.208 232.618 li
240.68 232.016 li
241.35 231.43 li
241.519 230.869 li
242.523 230.381 li
242.672 229.966 li
243.014 229.559 li
243.64 229.194 li
243.725 228.833 li
243.814 228.477 li
244.506 228.116 li
245.309 227.781 li
245.406 227.446 li
245.601 227.165 li
245.702 226.885 li
245.887 226.618 li
246.001 226.363 li
246.158 226.126 li
246.671 225.896 li
246.866 225.684 li
247.465 225.473 li
247.777 225.265 li
248.372 225.06 li
248.525 224.861 li
248.885 224.666 li
248.993 224.475 li
249.597 224.292 li
249.755 224.11 li
249.853 223.949 li
250.712 223.809 li
250.984 223.677 li
251.144 223.545 li
251.194 223.415 li
251.323 223.291 li
251.367 223.168 li
251.501 223.054 li
251.604 222.939 li
251.942 222.825 li
252.46 222.723 li
252.654 222.621 li
252.752 222.523 li
252.854 222.426 li
253.027 222.337 li
253.156 222.243 li
253.946 222.154 li
254.094 222.069 li
254.755 221.984 li
254.877 221.899 li
255.154 221.819 li
255.411 221.751 li
255.481 221.692 li
255.558 221.628 li
255.574 221.568 li
255.708 221.509 li
255.762 221.454 li
257.069 221.399 li
257.167 221.344 li
257.398 221.297 li
257.632 221.255 li
257.71 221.212 li
257.775 221.173 li
257.965 221.141 li
258.202 221.106 li
258.314 221.072 li
258.458 221.042 li
258.518 221.008 li
259.124 220.978 li
259.216 220.95 li
259.461 220.919 li
259.529 220.893 li
259.846 220.869 li
262.155 220.843 li
262.356 220.817 li
262.437 220.791 li
262.55 220.771 li
262.677 220.749 li
263.549 220.728 li
263.584 220.707 li
263.732 220.689 li
264.016 220.673 li
264.209 220.656 li
264.24 220.643 li
264.322 220.626 li
264.496 220.613 li
264.564 220.597 li
264.599 220.583 li
264.747 220.572 li
264.87 220.559 li
265.151 220.541 li
265.619 220.529 li
265.756 220.52 li
265.796 220.508 li
265.869 220.499 li
266.177 220.487 li
266.417 220.478 li
266.544 220.469 li
266.71 220.461 li
266.863 220.448 li
266.935 220.444 li
267.042 220.435 li
267.206 220.427 li
267.333 220.419 li
267.478 220.414 li
267.584 220.405 li
267.677 220.401 li
267.794 220.396 li
268 220.389 li
268.127 220.385 li
268.599 220.381 li
268.701 220.376 li
268.84 220.372 li
269.029 220.368 li
269.207 220.364 li
269.337 220.359 li
269.582 220.355 li
269.715 220.351 li
269.952 220.347 li
270.048 220.347 li
270.15 220.342 li
270.258 220.338 li
270.397 220.334 li
270.514 220.334 li
270.631 220.329 li
270.77 220.325 li
270.864 220.325 li
271.027 220.321 li
271.416 220.317 li
271.431 220.317 li
271.564 220.313 li
271.75 220.313 li
272.021 220.309 li
272.169 220.309 li
272.244 220.304 li
272.389 220.304 li
272.548 220.3 li
272.63 220.3 li
272.783 220.295 li
273.039 220.295 li
273.131 220.295 li
273.213 220.291 li
273.296 220.291 li
273.311 220.291 li
273.424 220.287 li
273.511 220.287 li
273.602 220.287 li
273.772 220.287 li
273.883 220.283 li
274.018 220.283 li
274.106 220.283 li
274.293 220.283 li
274.402 220.279 li
274.556 220.279 li
274.709 220.279 li
274.848 220.279 li
274.955 220.279 li
275.134 220.279 li
275.273 220.274 li
275.446 220.274 li
275.529 220.274 li
275.662 220.274 li
275.765 220.274 li
275.851 220.274 li
275.965 220.27 li
275.974 220.27 li
276.18 220.27 li
276.292 220.27 li
276.435 220.27 li
276.553 220.27 li
276.849 220.27 li
276.978 220.266 li
277.096 220.266 li
277.208 220.266 li
277.464 220.266 li
277.578 220.266 li
277.67 220.266 li
277.738 220.266 li
277.747 220.266 li
277.869 220.266 li
278.044 220.262 li
278.141 220.262 li
278.223 220.262 li
278.406 220.262 li
278.648 220.262 li
278.812 220.262 li
278.94 220.262 li
279.002 220.262 li
279.007 220.262 li
.746 .676 .668 .898 cmyk
@
0 lc
0 lj
136.638 214.612 mo
203.143 214.612 li
203.143 281.116 li
136.638 281.116 li
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: RCIRMX+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBNY+Helvetica-Bold gcheck setglobal} if
1 388 37 <000300a10000056105c20009001400290059402ca904a707a71203771687
16021c0a2a010127002a28020b2a27081c100536184f10371f1a2b000b25
27192a2bbc011e00210052012a00182b2b4ef44dfd3c4e10f64dedf4ed12
39003fed3ffd12392ffd393130015d005d01112132363534272623011121
323736353427262700171615140706071e0115140706070e012321112101
c7016a617950456bfebc016a6136625f35600146714444264a7173422a3f
47c171fd6402cc04c2febb495d672117fdc7fe771a3088732b1801033599
5e8387522e2629b27f8368452f362805c200>ZDWBNY+Helvetica-Bold AddT42Char 
ZDWBNY+Helvetica-Bold /CharStrings get begin
/B 37 def
end
ZDWBNY+Helvetica-Bold /Encoding get
dup 66 /B put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBNY+Helvetica-Bold*1 [65{/.notdef}rp /A /B /C 188{/.notdef}rp]ZDWBNY+Helvetica-Bold nfZDWBNY+Helvetica-Bold*1 [15.9613 0 0 -15.9613 0 0 ]msf81.3926 201.142 mo(B)shgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/ZDWBNX+Palatino-Roman*1 uf/ZDWBNX+Palatino-Roman uf/CLIRMX+Palatino-Roman uf/ZDWBNY+Helvetica-Bold*1 uf/ZDWBNY+Helvetica-Bold uf/RCIRMX+Helvetica-Bold uf/ZDWBNZ+HelveticaNeue*1 uf/ZDWBNZ+HelveticaNeue uf/RSPQMX+HelveticaNeue ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
