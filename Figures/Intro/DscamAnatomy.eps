%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: DscamAnatomy.eps
%%Creator: Adobe Illustrator(R) 15.1
%%For: Chris Roy
%%CreationDate: 2014-04-29
%%BoundingBox: 0 0 383 498
%%HiResBoundingBox: 0 0 383 497.8682
%%CropBox: 0 0 383 497.8682
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.1.0 x39 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 100 128 8%%BeginData: 11556 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDDDFFA8FD63FFA8A8FD1FFFA8FFA9FD40FFA8FD1DFFA9AFA9FFA9%AFA9AFAFFFAFFD3BFFA8A8FD1BFF84AFFD06FFA9FFA9AFA9AFA9AFA9FD36%FFA8FD1BFFA9AFFD0EFFAFAFA9AFA9FD33FFA8A8FD17FFA9AF84AFFD12FF%A9FF85AFFD31FFA8FD15FFA9AFA9AFAFFD17FF85FD31FFA8A8FD10FFAF84%AFA9AFA9FD1BFF84FD1DFFA8A8FFA8FFFFFFA8A8FFFFA8A8A8FFA8A8FFFF%A8FD11FFA9FFFFAF7D7D84FD06FFCFA1FFCAFFCACFCAFD0CFFAFAFFD1CFF%52522752537D5252287D7D5227527D7D7DFFFFA8A8FD0FFF84FFFFA8F827%F8277DFD05FFA79A99A0999A9AC3CAFD0BFFA9FD24FFA8FFFFFFA8FD07FF%A8FD10FFAFFFFF7D272727207DFD06FFCAFFA8A9A8FFAFFD0DFFAFFD1EFF%52FD047DA852A8527D7D7D537D7DFFFFA8A8FD0FFFA9FFFFFF5252277DA8%FD06FFAF84A8FFFF83AF848484AFAEFD07FFA9FD1FFF847DA87D7DA87D84%A853FD047DA8A8FFA8FD11FFA9FD0CFFAF85FFA1FF84838383585E34A8FD%07FFAFAFFD2FFFA8A8FD10FFAFA8FD0BFFA9AFFFC9A0837DA8A8A8A7FF84%FD07FF84FD30FFA8FD11FFA9FD0DFFAFAFFFA8A8FFA8A8A8FFFFFF85FFAF%FFFFFF85FD31FFA8A8FD11FF84FD0DFFA9AFA7A8FD04FFA8A87DA8A9AFA9%AFA9FD32FFA8FD13FF85AFFD0CFFA9FFA7A8A8FD05FFA7A8A8A8A1FD33FF%A8A8FD13FF84A9A9FD0AFFAFA9FFA8A87DA8A8FD04FF7DA8A8A1FD32FFA8%FD15FFAFAFA9FD09FFA9FD06FFCAA8A8A8FFA7FFFFA8A8A8FD30FFA8A8FD%17FFA9AFA9AFA9AFA9AFA9FFFFFF7D52527D7C7D525252A8A8FFA8A8FD31%FFA8FD24FFCF7C7D7DA176A87DFD04A8FD33FFA8A8FD2DFFA8A8FFFF7DFD%30FFA8FD2FFFA7FFA7A8FD30FFA8A8FD2EFFA8A1A8FD82FFFD5DA8FD0AFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD%1BFFA8A8FD62FFA8FD63FFA8A8FD09FFA8A8A8FFFFFFA8FFA8FFFD07A8FF%FD05A8FD16FFA87DA8FD29FFA8FD09FFA8A8FFA8A8FF7D522E5252527D7D%525352525253525952A8FD15FFA8A8FFA8FD29FFA8A8FD07FFA8A8FFFFFF%A8FFA8FD057DA87DA87DA8527D7DA87D7DA8FD11FFA8FFA8A87DFFA8A87D%FFA8FFA8FD24FFA8FD08FFA8A8FFA8FFA8A8FD18FFA8FFFFFFA8A9FD0BA8%FFFD0BA8FFA8FFA8FD1BFFA8A8FD07FF7DFFA8A8FFFF7DFD17FFFD07A8AF%84A9A8FFAFFFA8AFA9FFA8FFA9AFA8FFFFFFA8FFA8FFFD07A8FD18FFA8FD%07FFA8FFFFFFA8FFFFA8A8FD17FFA8FD05FF8585FD0461858B3D8585613D%AF376137856185616137AFFD04FFA8FD19FFA8A8FD06FFA8A8FFA8A8FFFF%A8A8FD16FFA8A8FD05FFAF61A9608585FD04A9AF8485A9AF84FD0785A9FF%AFFFFFA8A8FD18FFA8FD07FFA8FFFFFFA8FFFFFFA8FD17FFA8AFA9AFAFFF%A9AFAFFFA9AFA9FD07FFAFAFA9FFFFAFA9AFFFFF85AFA9FFA8FD19FFA8A8%FD05FFA8A8FFFFA8A8FFFFA8A8FD16FFA8A8A9FFA9A985FFFFAFA9A9FFFF%85FFFFFFA8A8A9AFFFFF84A9A9FFA8AFA9FFFFAFA9A8A8FD18FFA8FD07FF%A8FFFFFFA8FFFFFFA8FD14FFA87DA884FFFFFF85AFFFFFAFAFA9FFFFAFAF%FFA87D7DFFA9FFFFFF85FFFFFFA9AFFFFFAFAFA8FD19FFA8A8FD05FFA8FF%FFFFA8A8FFFFFFA8A8FD13FF537DA8AF85AF84FFA9AFA9AFFFAFA9AFA9FF%FFFF537DA8AFA9AFA9FF85AF84FFA9AFA9AFFFA8A8FD18FFA8FD06FFA8A8%FFFFFFA8FFFFFFA8FD14FF7D7DFFA8FF85AFFFFF85AFAFFFAFAF85FFFFFF%A8277DFFFFAF85FFFFAF85AFFFFFA9AFA9FFA8FD19FFA8A8FD05FFA8FFFF%FFA8A8FD04FF84FD13FF537DA8A884FFA9A984FFAFA9A8AFAFFF84FFFFFF%277DFFA9A8FF85A9A8FFA9AFA8AFAFA9A8A8A8FD18FFA8FD06FFA8FD04FF%A8FFFFFFA8A8FD13FF7D52FF84FFFFFF85AFFFFFA9AFAFFFFFAFAFFFA827%7DFFA9FFFFFF85FFFFFF85AFFFFFFFAFA8FD19FFA8A8FD05FFA8FFFFFFA8%A8FD04FFA8FD13FF527DA8A884FFA9AF84FFAFA9A9AFAFFF84FFFF7D2E7D%FFA9A9FFA9AFA9FFA9AFA9AFFFA9A9A8A8FD18FFA8FD05FFA8A8FD04FFA8%FD04FFA8FD12FFA82752A8A8AF61AFFFFF8585AFFFA98585FFFFFFA8A87D%FFFF8585FFFFAF61AFFFFF8585A9FFA8FD0AFF5252527D7D7D527D7DAFFD%05FFA8A8FD05FFA8FFFFFFA8A8FD04FFA8FD13FF7DA8A8A985FFA8AF85FF%A9AFA9A9A9FF85FFFFFF527EAFA9A9FF84AFA9FFA8AFA9AFAFAFA9A8A8FD%09FFA87D7D7DA87D7E7DA8A8FD05FFA8FD05FFA8A9FD04FFA8FD04FFA8FD%13FFA87DFF84FFFFFF85AFFFFFAFAFA9FFFFAFAFFFFF5259FFA9FFFFFF85%FFFFFF85AFFFFFFFAFA8FD0CFFA8FFFFFFA8FD08FFA8A8FD05FFA8FFFFFF%A8A8FD04FFA8FD13FF5252A8A985FFA9AFA9FFA9AFA9A9A9FF85FFFFFF52%A8FFAFA9FF84AFA9FFA9AFA9AFFFAFA9A8A8FD09FF7D527D52FD047DFD07%FFA8FD06FFA8FD04FFA8FD04FFA8FD13FFA87DFFA8FF85AFFFFF8585AFFF%AF8585FFFFFFA8527DFFFFAF85FFFFAF85AFFFFF8585A9FFA8FD0AFFA8FF%A8FFA8FFA8FD08FFA8A8FD05FFA8FFFFFFA8A8FD04FFA8FD13FF527DA8A8%84FF85AFA8AFA9A9A9AFA9AF84FFFFFF52A8FFA9A8AFA9AF84FF85FFA8AF%A9A9A9A8A8FD09FFA852A8527D7DA87DA87D7DFD04FFA8FD06FFA8FD04FF%A8FD04FFA9FD13FF7D7DFF84FFFFFF85AFFFFFA9AFAFFFFFAFFFFFFF527D%FFA9FFFFFF85FFFFFF85AFFFFFAFAFA8FD0AFF7D7D7DA87D7D7D7E7DA87D%FD04FFA8A8FD05FFA8FFFFFFA8A8FD04FFA8FD13FF527DA8A8A9FFAFA984%FFFFA9A9AFFFFF84FFFFFF277EFFA9AFFFA9A9A9FFA9AF85FFFFAFA9A8A8%FD09FFA87DA87DA87DA8A87D597DFD04FFA8FD05FFA8A8FD04FFA8FD04FF%A8A8FD06FFFD0AA8FFA85252FFA8AFA9AFFFFFA9AFAFFFA9AFA9FFFFFFA8%527DFFAFAFA9FFFFAFA9AFFFFFA9AFA9FFA8FD0AFF7EA87DA87D7D7DA852%7D7DFD04FFA8A8FD05FFA8FFFFFFA8A8FD04FFA8FD07FFA8FFA8FFA8FFA8%FFA8FFFFFF7DA8A8AFA9A9A8FFFFA984FFFFFF84AFFD04FF7DFFFFFF85A9%A9FFA9A9A8FFFFAF84FFFFA8A8FD0AFFA8FFFFFFA8FD09FFA8FD05FFA8A9%FFA1A8FFA8FD04FFA8A8FD15FFA8AFFFFFA9AFAFFFA9FF85FFAFAFFD06FF%A9FFFFAFA9AFFFAFAFAFA9FFA9FFA8FD0AFF7D7D7D527D5252FD08FFA8A8%FD05FFA8FF27A8A8A8FD04FFA8FD15FFA8A9AFFFFFA985FFFFFF85AFFFFF%A9FD05FFA9AFFFFFA985FFFFAFAFA9FFFFFFA9A8A8FD0CFFA8FD0BFFA8FD%06FFA8A827A8FFA8FD04FFA8FD16FFA8AFFFAFA9AFAFFF85FFA9FFAFAFFD%06FF85FFFFAFA9AFFFAFA9AFAFFF85FFA8FD19FFA8A8FD05FFA8FFF8A8FF%A8FD04FFA8FD15FFA8A8848584FFA98560FFFFFF6085A8FD07FF6085A9FF%848585FFFF8560AFFFA8A8FD18FFA8FD06FFA8FF277DFF7DFFFFFFA8AFFF%FFA8FFA9FFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFFFFA8AFFFAFA9AFAFFFA9%FFA9FFAFAFFD06FFA9FFFFAFA9FFFFAFAFFFAFFF85FFA8FD19FFA8A8FD05%FFA8FF2752F87DFD04FFA8FF7DA87EA9A8A8A2CBA87E77A9A8FFA2A8A8A9%A2FFA884A9FFFF8584FFFFAF84AFFFFFA9FD05FFA9AFFFFFA985FFFFFFA9%A9FFFFFF84A8A8FD18FFA8FD05FFA8A8A827277DA8FD04FFA8A87E777777%7E777E7DA27777777E7E77777E777EA8FFA8AFFFFFA9AFAFFFA9FF85FFAF%AFFD06FFA9FFAFAFA9AFFFAFAFAFA9FFA9FFA8FD19FFA8A8FFFFFF7D7D27%27F852FFA8FD04FFA8A8A8FFA8FFA8A7A1CAA8CAA8A1A1FFA8CBA8FFA8A8%7DA884847EA8A8845AA8A8FF8485AFFD07FF8485A8FFA98584FFFFA984AF%FFA8A8FD18FFA8FD04FF527D52A87D277DA8FFFFFFA8FFA8FD05FFA0C299%C299C2A0A7A8FD07FF7EA9A9AFA9AFA9FF84FFA9FFA9AFFD06FFA9AFA9FD%05AFFFFFA9FFA9FFA8FD19FFA8A8FFFFFF7D7DA8FF52A827A8FFFFFFA8A8%FFA8FFFFAFA9FFA8A8A8CFCAAF7EA87EFFFFFFA8FFA884A9FFFFA985FFFF%AF84AFFFFFA9FD05FFA9AFFFFFA985FFFFA9AFA9FFFFFFA9A8A8FD18FFA8%FD07FFA87D7D527DFFFFFFA8FFA8FFFFFFA9AF85AF84A8FFFF85A9A8A9AF%FD05FF7EAFFFFF85AFFFFF84A9A9FFFFAFFD06FF85FFFFAF85FFFFFFA9AF%AFFFA9FFA8FD19FFA8A8FD05FFA8A87D5276A8FFFFA8A8FFFFA8FFA8AF5A%84A9A87DA9A8AF5A85A8AFA9FFA8FFA8A884AF84FFA8AF85A9A8AF85A9A8%FD06FFAF84AFA9FF84AF85FFA8AFA9A9FFA8A8FD18FFA8FD07FFA8FFFFFF%A8FFFFFFA8FFA8FFFFAF85A985FFA8A9A9FFA9AFA9AF85FD05FF7DFFA8FF%A8FFA8AFA8FD19FFA8FD19FFA8A8FD06FFA8A8FFA8A8FFFFA8FFFFFFA8FF%FFAFA9FF84AFFFFFFFAFA9A9A8FFFFFFA8A87DA8A8FFA8FD1BFFA8FFA8A8%A8FD18FFA8FD07FFAFA8FFFFA8FFFFA8FFFFA8FFA8FFA8FFA8AFA8FFA8FF%A8AFA8FFA8FFA8A8A8FFFD0BA8FD0BFFA8FFFD0BA8FD19FFA8A8FD07FF7D%FFA8A8FFAF7DFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD09FFA8%FFA8FFA8A884A8A87D7DA8A8A87DFD06A8FFA8FFA8FD1EFFA8FD09FFA8FF%FFFFA8FD27FFA8FD04FFA8FD28FFA8A8FD08FF7DA8FFA87DFFFFA87DFD04%A87DA8FFFFA8FFA8A8A8FFA8FD15FF7DFFFFA87DFD28FFA8FD09FFFD05A8%FFFFFF5252277E7D52527D275227525259527DFD15FFA87DA87DA8FD28FF%A8A8FD0FFFA8A87D7D7E7DA8A8FD057DA87D7D7DFD17FFA8FD2AFFA8FD63%FFA8A8FD62FFA8FD63FFA8A8FDB3FFFD5DA8FD0AFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD1CFFA8FD62FFA8FD63%FFA8A8FD11FFA8FD05FFA8FD4AFFA8FD13FFA8FFFFFFA8A8A7CAFFFFA8A8%FD0CFFA8A8A8FFA8FFA8FFA8FFA8FFAFFFA8FFA8FFA8FFA8FFA8FD21FFA8%A8FD13FF7DA8A1A7A1A7A1A8A8A7A8FD07FFA8FFA8A8A8FFA8A87DFFA8A8%A8FFFD04A87DA97EA8A8FFA8FFFFA8A8FD20FFA8FD14FFCFA1CAA7CAA7CA%A7A7A8FD05FFA9FFA8FD07FF527D525252A87D7D7D7E7D52527D52FD05FF%A8FD21FFA8A8FD0DFFA8FD05FFA8A7A7A8A7A7A1A8A7A8FFFFA8A8A8FFA8%FD07FFA8A87DFD06A8FFA8FFA8FFA8A8FD05FFA8A8FD20FFA8FD0DFFCACF%A8CFA8FFFFA8A7A8A7A8A1A8A1A77DA8A8FD0DFF5252527D7D7D527DFD0C%FFA8FD21FFA8A8FD0FFFA8FFFFCAA17D52A77DA77C527DA7A8FD0DFFA8FF%A8A8A8FFA8FFA8FFFFFFA8FD04FF7D52527DFFA8FD20FFA8FD13FFA8CAA7%7D7DA77D7D7DA8A7A8FD0FFFA8A2FFFFFFA8FFCBFFFFFFA8FFFFA8272720%277DFD21FFA8A8FD0DFFA8FFA8FFA8A7A1CAA17D7DA77CA77DA8A1A8FD0C%FFA8FF777777A27777777E77A8FFA8A8FFA852F82752A8FD21FFA8FD0FFF%A8FFFFFFA7A8A7CAA1A77DA7A77DA1CAA8FD10FFA9A8FD07FFA8A8FFFFFF%A8FFFFA8FD11FFA87DA9A8A8A8FFA8FFA8FD06FFA8A8FD11FFA8A7A1A7A1%A8A1A77DA77DA17DA7AFFD0BFFA8FFFFFFA1A09AC3A0A19AC3CFFF7DFFFF%A8A8FFFFA8A8FD10FF7D527D7D527D7D7D527DA8FD05FFA8FD12FFCAA7CA%A7A8A7CAA7CAA7CAA7CA7DA8A8FD0EFFCAA1C3A0C3A0C9CAFFA8A8A8FF84%FFFFFFA8FD11FFA87DA87DA8A8FFA8FD08FFA8A8FD11FFA1A7A7A7A1A8A7%A7A1A8A7A7A1A8A8A9A8FD09FFA8FD0BFFA8A9A1A8A8A8FFFFFFA8A8FD10%FF7D527D7D52A8FD0AFFA8FD12FFA8A7CAA7A8A7CAA7A8A7CAA7A8A7FFFF%FFA8FFA8FD13FFCAFF7EA8FD04FFA8FD12FFA8FFFFA8FD0BFFA8A8FD10FF%CFA1A7A1A8A7A7A1A8A7A7A1A8A7A7A8FD05FFA8A8A8FFFFFFA8FD09FFA8%A87DA8A87D7EFD04FFAFA8FD10FF7D7D7DA87EA87D7DA8FD07FFA8FD11FF%A8A8A7CAA7CAA7CAA7CAA7CAA7CAA7CFFD06FFAFFFA8FD29FFA87D7D7DA8%7DA87DA8FD07FFA8A8FD10FFCAA1A7A1A8A7A7A1A8A7A7A1A8A7A7A7FD09%FFA8A87DFFA8A8A8FFA8A9A8FFA8AFA8FFA8AFA8FFFD05A8FD12FFA8FFA8%FFA8FFFFFFA8FD05FFA8FD11FFA8A8A7A8A7CAA7A8A7CAA7A8A7CAA7A8FD%32FFA852A8FD05527D5252527DFFFFFFA8A8FD10FFA8A1A7A7A7A1A8A7A7%A1A8A7A7A1A7A7FD38FFA8FFA8FFFFFF84FFFFFFA8FD11FFA8CAA7CAA7CA%A7CAA7CAA7CAA7CAA7CAFD32FFA87D7D527DA9FD0AFFA8A8FD10FFA8A1A8%A7A7A1A8A7A7A1A8A7A7A1A7A7FD32FFA8A87D7D7DFD0BFFA8FD11FFA8A7%A7CAA7A8A7CAA7A8A7CAA7A8A7CAFD32FFA87D7D52A87D7DA8FD08FFA8A8%FD10FFA8A1A7A1A8A7A7A1A8A7A7A1A8A7A7A7FD32FFA8A8A8FF7D7D7DA8%FD08FFA8FD11FFA8A8A7CAA7CAA7CAA7CAA7CAA7CAA7CFFD42FFA8A8FD10%FFCFA1A7A1A8A7A7A1A8A7A7A1A8A7A7A7FD42FFA8FD11FFA8A8A7A8A7CA%A7A8A7CAA7A8A7CAA7CFFD42FFA8A8FD11FFA1A7A7A7A1A8A7A7A1A8A7A7%A1A7A8FD42FFA8FD12FFA8A7CAA7CAA7CAA7CAA7CAA7CAA7FD43FFA8A8FD%11FFA1A7A7A7A1A8A7A7A1A8A7A7A1A8A9FD42FFA8FD12FFA8A7CAA7A8A7%CAA7A8A7CAA7A8A7FD43FFA8A8FD11FFA8A7A1A8A7A7A1A8A7A7A1A7A1A8%FD43FFA8FD13FFA7CAA7CAA7CAA7CAA7CAA7A8A8FD43FFA8A8FD12FFA8A1%A8A7A7A1A8A7A7A1A7A7FD44FFA8FD13FFA8A7A7CAA7A8A7CAA7A8A1FD45%FFA8A8FD13FFA1A7A1A8A7A7A1A8A1A8A8FD44FFA8FD15FFA1CAA7CAA7CA%A7A8A8FD45FFA8A8FD14FFA8A1A7A7A7A1A8A8FD46FFA8FD17FFA7A8A7A8%A8FD47FFA8A8FD17FFA1A8A8FD48FFA8FDFCFFFD7DFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">DscamAnatomy</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2014-04-05T20:47:44-04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-04-05T20:47:44-04:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-04-05T20:47:44-04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5.1</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>200</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADIAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYqhY7t21&#xA;W4syBwhggmVu5MryqQfl6QxVFYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FUug/5SO+/wCYO0/5O3OKpjirsVdirsVdiq2WWKJDJK6xxr9p2IAHzJwgE7BBkALKCaY6&#xA;g4itnYWa7z3MZK8z2SNxv/rMp26DetLRHgFn6u79f6mky4zQ+nv/AED9f4Cg0jSgKG0hYnqzIrMf&#xA;mzAk/Tg8afeWXgQ7g79FWY/ug8HgsMkkag+PBWCfhj40uu/vC+DHpt7iQ76neKKx30hI6CVImX6e&#xA;Kxt/w2PHHrEfavBLpI/Z+x3+5ZD/AMe9wD/rwU/5P1x9B7x9v6l/eDuP2fraXUlV1juoXtWchUZ+&#xA;JjZjsAHUsBU9A1CcTi6xNr4tbSHD+PxzRmVNrsVdirsVdirsVdiqR+a/OOleWLeC41FJ5EuGkSMW&#xA;8ZlIMcTSnkARQcUO/TxoN8VSiz/N/wAh3kRlgvZTCtKytbXCrUldviQbjlWmNKsT84/Ij3EMK3U3&#xA;78qqSfV5uAZ3SNVJ416ydRsKGpxpVmofnR5CsZRFJdTSSV+NY4JTxTkyGQlgoIBTotW6bY0qdaf5&#xA;40DUdTttOsXlnnuYkuAwjZUSOWETozs3GnJGGw7nFUdB/wApHff8wdp/yducVTHFXYq7FUPeXEkS&#xA;xrCoeeZ/TiDGig0LEsfAKpPv0ycIg8+QYZJEcuZYL+ZH5oeWvIcduPMF9d3F5eKWh02wjRWZFNC1&#xA;WKsi17mWvhXJeIByA+/9n2MfDkecj8Nv2/as/LL81fy/893EsWkRSw6vap60ltfoDcenUKXSTlLy&#xA;UMwH2qivQYDlkRV7JGGIN1v+Or0XK2xjM/5h+Xba/ubG5aWGa2kMRqnJXZVdzxMZem0R+3TMU6yA&#xA;JB6OfHs7LKIkKIP7P19Fo/Mnyq4m9CaW4aAOZFSGQU9Ply3cKv7Bpvg/O4+if5MzCrAF+YZRmW69&#xA;2KrJoYponhlUPFICro24IPbDGRBsIlEEUeShpjyNZqsjF3iaSEuTUt6TtGGPuwWpyeUDi267/Nrw&#xA;k8O/Sx8jSKyttdirsVdirsVdirTIjCjKGHgRXqKYqwOCw/OCOwVDPoj3Qpu8UtPhbvwCCp+1suxG&#xA;FVe0sfzIS6sJXt9EiikuIzrEcaS8/TQqpeF9qvwUceXTiBiqU2um/nZDG1q0ukzBXdjezKfVdZBK&#xA;3FQq8RxcRmpX4uR2AFAqnmgQfmetzC+ttpHoVCzJZpMrcBTdWcnfrtgVP4P+Ujvv+YO0/wCTtziq&#xA;Y4q7FXYqhNTqkUd0N/qsglYf5FCkh+hHJ+jLcW5rvasuwEv5pv8AX9jBfzX/ACU0H8xHtLm6u5tP&#xA;1GyQxRXMQDq0THlweNqVodwQR9OVNqj+VX5FeXvy+vbnUoLubUtVuIzALmZVjWOIsGZUjWu7FRVi&#xA;T02pvVV6XirH9YuLpre+aNFhW0ZWmiVOc0kZoGkrT4VaLkKqGb6QVyWURxw4gOI/Z5/j7CjAZZMn&#xA;ATwjl5+XuF/2hIL3zJZJfQQ6OkScgDNLLdCBj6wV4JaStSTkjcm9RCx+85X+ZkeQBB8mjLinGXCA&#xA;dtjv+AfNXGuefoLz0V0iS8YVch2jji9PnwAEioq8yN/te/HB4xO3B8r/AE20ceYHYE/L9XP8Uy3S&#xA;ryW80+G5ljEUrg84weQBUlT4eHQ9OmWGJGx5uZjnxRBReBmg9KYPatKNxLLM6t/Mpkbgw9ilKZbm&#xA;2NdwH3NWE3G+8n70ZlTa7FXYq7FXYq7FXYq7FXYq7FXYql0H/KR33/MHaf8AJ25xVMcVdirsVWTw&#xA;pPBJDJX05VKPQ0NGFDvhjKjYYyiCCD1Qa3k1nxj1DePot8BRD4eqP91sfH7PuK0y3gEt4/L9Xf8A&#xA;e1eIYbT+f6+77vuR+Ut7sVQWqIY4vr8e09orP/rxjd4z8wNvA0OXYjZ4TyP4tpzChxDnH7uoS9Uv&#xA;tM+tQyaf+kNNuJZpjJAVaak7F3WaGTgHA5FQUZiVAHHKG9QsrbQZ5Wj0O+k0y7SrPZRVj4jpV7G4&#xA;XigJ3qI1J8cVW3LaxpAnvLs87Efvbu5sKKyhV+KVrWcTbKASxjkLH+UnLfFNUQDTV4QuwSLRFhO2&#xA;oTPZ363tu7RiWOC5aFDLCTxY/wCj+BpzUmoBXxpiM1cgB+PNBw2NyT+PKk+AAAAFANgBlba7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FUug/5SO+/5g7T/AJO3OKpjirsVdirsVcQCCCKg7EHFUGulxxbWs0tq&#xA;n++4ipQf6qSB1X/YgZb4pP1AH8eTSMIH0kx/Hn+hv6rfDYXpI7Fo0J+mgUfhjxx/mp4Jfzmm00y0&#xA;Fzcyzx1q0J4IhI334KrEexanjiMtcgAg4r5klLvOcHmyfRSnla5jtdU9RD6kgRh6e/IUkV18MpN9&#xA;G8V1YrfaT+bWoWypfxaHcPFJVEdHZCp5AtUjmrAUoVKn8cjRZWFXT/LP5kH1rTVNSgn0ySNGa0WW&#xA;RhKWk/fQvPKkk6xtHsCGP4nGiiwyaKE62JPrqGzvdNuGhE1nMx2eNGZVlKRtxZJArDjswqNwCJc0&#xA;ckx0s6aLNU06RJbaMsvKOT1fjqS/J6sS3I1aprXrhCCi8VdirsVdirsVdiqjd31lZxiW8uI7aIni&#xA;HmdUUsQTSrEb7YqhP8S+XP8Aq62f/SRF/wA1Yq7/ABL5c/6utn/0kRf81Yq7/Evlz/q62f8A0kRf&#xA;81Yq7/Evlz/q62f/AEkRf81YqhI9Z0BdVuLw6tZcJoIIVX6xHUGJ5WJPxd/VGKov/Evlz/q62f8A&#xA;0kRf81Yq7/Evlz/q62f/AEkRf81Yq7/Evlz/AKutn/0kRf8ANWKu/wAS+XP+rrZ/9JEX/NWKu/xL&#xA;5c/6utn/ANJEX/NWKu/xL5c/6utn/wBJEX/NWKu/xL5c/wCrrZ/9JEX/ADVirv8AEvlz/q62f/SR&#xA;F/zVirv8S+XP+rrZ/wDSRF/zVirv8S+XP+rrZ/8ASRF/zVirv8S+XP8Aq62f/SRF/wA1YqlVxL5Z&#xA;kkuWh8xLaRXh5XUEFzbBHYqEYgsGeMsq7mNl8ftb4KTaZQ6/5Xghjgh1KyjhiUJHGs8QVVUUCgBt&#xA;gBhQv/xL5c/6utn/ANJEX/NWKu/xL5c/6utn/wBJEX/NWKu/xL5c/wCrrZ/9JEX/ADVirv8AEvlz&#xA;/q62f/SRF/zViqvZ6rpd6zLZ3kFyyCrLDIkhA8SFJxVFYq7FXYq7FXYq7FUDDPM2t3duWrDHbW0i&#xA;J4M8k4Y/SEXFUdirsVQttqul3VxJbW15BPcRV9WGORHdeJ4nkqkkUO2Kqpu7VZxA00YnYgCIsOZL&#xA;KzAca13WNj8gfDFV8k0UQBldUDMEUsQKsxoqivcnYYqpW+oWFxz+r3MU3pgGT03VuINacqE0+ycV&#xA;XfW7X04pPWT05yohfkOLlxVeJr8XLtTFVwmhMzQh1MyKrvGCOQVyQrEdQGKNQ+xxVfirsVdirsVd&#xA;iqFm1bS4LtLOa8giu5OPp27yIsjcjRaITyNT0xVFYq7FXYq7FXYq7FXYq7FXYq7FUug/5SO+/wCY&#xA;O0/5O3OKpjiqVa60s5ttKhZka/ZvrEiEhktYhWYqRQgtVYqg1HOo6Yqp3VpDeWs9rp0a213pEirY&#xA;MAERJVhSRAAnSNlk4OB+zUYqxvXvy28uedzFrlzPeW811DERHHIFCAW9xCY3j+JCaXbc671WlaFg&#xA;VUJpH5G+XdM1W11JL+7nmtJ4riL1/Rcl4SpVmb0+XMrGqFweRXYk1xVSi/ITy0Y4Prl9d3U0aRJM&#xA;zlGST6rF6Fq/pyLIFeGLYFe5JO+G1Wab/wA4++VLGFo0vr52ZHj5loqqHREJUenRfhj4im3Gi9Bj&#xA;ask8n/l3pnla/uLiwlLR3EQQxlET4i5Zj8AVeIAVY1CjiAeu1ArLMVS+TXtPjmkhpcSPE3CQw2tz&#xA;Kobw5xxsu3ffFVNtdPFnh0+8lRQWLlEgAUd/9JeHCBaCaU7XzDLexh7HT5Z0O4lE9o0dD35RTSn8&#xA;MlPHKJqQpjjyxmLiQR5Lpr/X40UtaWURkPGITXjqS5+ytBbkV9gcAiTySZAc0t0/TdUTTGtJxp9y&#xA;17ya7ZpJHNzIR+9ctxXr2AX4FoBsMTEqJDvRWmzeZbe3js5ksrqeHknqG8l9RlXdeY+rsS4Rl5nu&#xA;d9q0x4TzXiF0jBqWqptLpEzHbeCW3dffeV4T+GRZO/TFyv8Ae6VeRr2NIJN/lFLIfwxVa/mTTY42&#xA;klS6jjQcnd7O7VVA6lmMVAB3OKppirsVdirsVdirsVS6D/lI77/mDtP+TtziqY4qldoBceYL+4O6&#xA;2kcVnHX9l2HrzU/1lkhr/q4qv0r/AHu1j/mMT/qDt8VWaL+6n1Oy/Zgu3kjB6lLlVuCf+RskgHyx&#xA;VNMVdirsVdirsVSTS7t1mvreCL1ZzdTOQTwRVqBVmo3XtQHLIw2smg1ymboCyqX841C0uNLeF0up&#xA;1eF4gyjipUVlD0YcPiG/E77ceuXY48EhO9hv+z3/AItoyy8SJgRudv2+78UxvUvJ9jeSyS6lLcfX&#xA;4zydIhFxmNwSg9P4V2b7JBp4nxzOxa2UQBADh+O1d7rs/Z0MhvIZcQ92/Ft3fD7+9F2/k6yiX6lc&#xA;meP6zcPdQyiRH/fGCSOhYIhDKshcbU+Hr2NctbI+oVsK+Fg9/lXxbI9nQHpN7yMufXhI7u42Pcra&#xA;v5D0O7EKS3DwKIUtIl/dklUpQBmXlU8a0B675DF2lOHQc7bM/ZOLIKN/Tw9OXy/HNDap5JsL++mM&#xA;LXDSgg3LiURKXKx0AojEuFjBrQdeuwpZh18oRF1XTa+/7N2rP2ZDJI1xX13ru8ue342Q8fk7Tbr9&#xA;3G1zcXQjjSRrlo1MKQepEFLcJPiY1NVB3UNUbVmddOO54QN+V73R7/xdNcezYS6ylKgN624bHcd/&#xA;d3A+8foeiafpF2bmzjmN64azNkxjCKSwnJ5KAAgBqCPHpXYU6jUSyxqVcPO9/d8/xycjTaWGGXFE&#xA;Hi+mtv63y/X3plrt1I2hatBPF6Uwsrh1oeaMvpkEq1F6VFagZgygKsGw7GMzdEUU6ytsdirsVdir&#xA;sVdiqXQf8pHff8wdp/yducVTHFUs0Acoby5P97cXtyZD4+jKbZP+ScC4qu0r/e7WP+YxP+oO3xVa&#xA;tY/MsvLpd2Ufp/8ARrK/P/qJXFUzxV2KuxV2KvNPzm1C5sBosiTxW1vNO8dxLNqFzZUVVDn0kgXj&#xA;JNxU8OTcq7KjVNCrJdOElvcXC2bSSXXryo6FfV5RIRRpC7xfECdiX3qdj2vxgGPq+n9PyLj5CRIc&#xA;P1fo+Y+9EB29UTq7nWSzRvD6an4OKsUKepxCAcW5ep9o9d+OWVtX8Hv/AGc/h8OrVe9/5T3ft5ed&#xA;8+u9LyVdLma9eSO8j9LiojUFPjJh9NQ0obm+x+Lfptg5UI/Tv+2+XL3J5gmViW337Vz5+9WtpbqS&#xA;9gGoBonXk1snpqiM/Ehqsss+4Umikjud6bRkAInh+P4oMoGRkOPbu2/aXm350XV4nmzypZQaZZyL&#xA;qMpgk1S5e1Z0jLqjoLe5Dc0T1A7Eb7hQysa5juU9Hme8hu5VsayyEK10giVo1k4hQQWlhoSoFV5H&#xA;anSu+RERMRxfD8UXFmZCR4N+/b9oUImaORZNPeSa6kQm7jaNTWkj7sGeAIwkLqBy6bUNKiZFipUB&#xA;038h5G9q/BYA0bhZl128z5it7/AXqQsQnWRzqjTtVPTFTIUAaP0+YAT01U/b7A8j3HWv4K/Bv3+X&#xA;lSRyu/Xf21yq+VefnaH1ZpJNJ1h7vkt5HYTrHGUCKImQkstHlDVZRy+LsNh3hkoR9P0/p+QbMZJl&#xA;6vq/R8z97I8x3IdiqVa95p0DQFhbWLxbRbkuIC4Y8zGvNgOIbfjvTFUG/wCYfkZF5trtl6YVmaYT&#xA;KY1Cfa5SAlF6dziqLsvNvle+l9Kz1a0nk5FOMcyMeQIWmx61YDFU2xVLoP8AlI77/mDtP+TtziqY&#xA;4qlvlof7gbGQ/anhW4f/AF5/3rf8M5xVvSv97tY/5jE/6g7fFWrr4fMGnuRs1vdRA/5TNA/6ojiq&#xA;ZYq7FXYq7FXln50x6/cXejW9poZ1WwV/UeRLa4uGSXkAFJtmDRoQByLLQgnwwqyzT7m4jubme0iM&#xA;lzcTy+pYv8LFFIIYvusZQuRv1rTL8cRKNS2A6/s6uPkkYyuO5PT9vT9Kus0wnF8tW1VmaFtP40on&#xA;FWMfLenGgb1D8Jr7jLeEVw/wc7/T+xp4jfF/Hy4f0fp4uXzVHZpluLm7P1S8h9H04OJk9Ojkx9D+&#xA;99Vvh+H5CjA4AKoR3ib/AG+6v28kk3Zl6ZCtu7u99/s5q1vc3lxfQLfw/UjHyeCKvqeo3EqT6g+F&#xA;eKsfg69+gyEoxjE8J4u/y/HezjOUpDiHD3efx/R+p51+aumWlx578vXFzqPCaI276ZpxuLKKtxHP&#xA;ISypdXVs9ZeaIWjjkOw27HHcp6LPc3lvfTrYwfXGk4yXEVeHpPxCg+o3wtyVR8HXv0OZEYxlEcR4&#xA;e7z/AB3uLKcoyPCOLv8AL4/o/WhoZZoJBNYj6/dXClrqAj0aUkc1q393xZmTi1SaeIOWSAIqXpA5&#xA;deg+fff62uMjE3H1E8xy6n5d1H9BXc3WNLxWrqTTsGtuJ3YxhWgoTVfgjVufT9r7Jpgrfh/hrn8e&#xA;f28vhzTdDi/jvl8OXyHP48lDVZZ7jS9Yku0+r3MWnzrHafa4o6Es/qDZ+RQdPs0yvIBGIEdwTz/Z&#xA;0bcZMpXLYgcv29f0MkzHch2KsV8/pqDWtp9S8r2/md+coeK5eKMQgQsysPUV/tuqqaYqxaKw1ZWu&#xA;rY/lnYJaTRivGe2IflIG4MvAbgnr4ivQYVZX5P0m19GS4uPLlpo11azyW9usKqeUUbCkinhGQGcH&#xA;j9464FZRiqXQf8pHff8AMHaf8nbnFUxxVLfLX/KOaV/zB2//ACaXFW9K/wB7tY/5jE/6g7fFWtUF&#xA;NQ0dhsxunQn/ACTazkj5VUH6MVTLFXYq7FXYq83/ADkjvmGhDT7rV7e8lumiWPR5JxzQgM/rRwyx&#xA;cgAuzNUDp33KsktJ5LW8vJYKSzz3MyNanlVljIIdWRX48S9DUU3G47344iUaOwHVx8kjGVjcnp+P&#xA;eqidll/SaurXrsYPqRWQfDRW9OnD1Aw48+RToelKHLeHbg/h53t8+deXNp4t+P8Ai5Vv8uV+d19m&#xA;692+spcXk8i21xB6XGIq59MxvzHIMEZ/UJ47L/q75EemojcG/wAeVf2sieIGRNEV+PO/7Fa2u5ry&#xA;+gW4UWxi5SxRUk5SHiUqDIkWyhzVaV3Fad4ygIxNb37tvkSyhMzkL2rfrv8AMD8dzBfzW9abzn5N&#xA;tBps17GZZZecNwITGVubSrmP07guqDZqoNmoHUnMdymdXN3PZ30y2yi69bjLND+85RniEBrHHJsw&#xA;Tod+tK9siMBKIvavdv8AMhxZzMJGt7367fIFDwzPauJ7ZkvLi7QtNCodTtI7chxWQoFMhUhx28a1&#xA;nKPFsfSI/q+Hv2YRlw7j1GXv7z7651v968vwjXUVlU3TzsTBxkoSUCNCFCmTkFiDV4V2JoBgqzw1&#xA;tXl8+7r3puhx3vfLfuqu/p3fYhtVmkutK1iaekU0FhcRrajnVVkQlnYuqcuRjAFBTY7ntDJERjQ3&#xA;B6/j3tmORlKzsQOXv+XcyTMdyHYqwv8AM20e8s7O14ao0RaSV30g0lUxBWUmoIqOq96jbc4QrBdQ&#xA;06MyS3i2/mqPU4E+qyPbuUW4+qNbRIxcJWsn1YFm47lt+QpRVfdXi29nb3xi84X41S2mula2ZXCu&#xA;Hfuh4RkcVaMfZI49d8Vej/lx9YHknS1uEvUmSN0ZdScyXdFkYAysyxkkgVHw9KYFTOD/AJSO+/5g&#xA;7T/k7c4qmOKpd5a/5RzSv+YO3/5NLirtK/3u1j/mMT/qDt8Vdqv+92j/APMY/wD1B3GKpjiqHvLq&#xA;eAKYrOa75VqITEONPH1ZIuvtiqG/St9/1Z7z/g7P/soxVdHqd60iq2k3casQC7Na0UE9TxnY0HsM&#xA;VYB+cmmX+rXGjWkOkvfw2chvRKLeacCUEIqoYgAkigl1Mren/MrDCrLLOU2Vxf3pMZie6kilWR1j&#xA;NVPJSjNRa/Eagkfhl2McQ4evNoyHgPFtXLu+Sv8AvklOtF4CrAxmP1QI/SPEbS0Cl+S/L9mu1cs2&#xA;I8Pf5dfd3f2tW4PibfPp7+/+xf6cl+sl/G8K09IwqHDofQcyH1HWo3rTavHrv0wWIek31+3bb8bp&#xA;oz9QrpXwN7n8VzVba6Oo3MTqYhHasXYJKsrF2RkH2KgLRjud/bIzhwA89/KmUJ+IRy9Pnfkwn8zN&#xA;D1LWPOXk/wCrWjXFtpt19ankS2Scx1dPjLzosMfH067TcvCNzxK47ks1ubo6ddSu7RGK7YOoklWJ&#xA;g6osZ+3QFaKu439syIQ4wOdjytxpz8ORuql515KKl9MY3krwMLv+8X1FjAbm8i+mz0Dj95v08e9M&#xA;n/eekXt5X3Df5foYD936jXq867zt38/0rvTlRf0p6kBYyGZ1Mg9L02jWKiy0+18AIaniOhrgsH0b&#xA;8q8+d8vx3poj17c78uVc/h+hC6tIb3RtVvgYxHHYXMMSRyCQ/EnJjIVqtfhWgBPfffIZBwDh+P8A&#xA;YzxnjlxbVy5382RZQ5DsVSbzRpGtarZC20vVn0hmEiyzxxh3IeMqCpqpUqTUEH36jFUlbyl56+u6&#xA;g8fm6SOzuJGksIPq0btAHmDspdyxcLGWVfeh6LTFWReXbLVrHRbW01e//SmowqVuL/01i9U8iQSi&#xA;/CCFoNsVTHFUug/5SO+/5g7T/k7c4qmOKvJtc8yalp3m78ntNilkTS9TW8N7Em3qSR6asduH6VVW&#xA;uGantXqBir0jSv8Ae7WP+YxP+oO3xVrUavqukx/ySzTnx+CB4/u/fYqmWKuxV2KuxV2Ksbs54bK+&#xA;vL26X/R/rE0Sz9fSYsCfhHxfvNug/Z3zIxxM48I5/f8A2fpcfJIQlxS5VV939v6FUPEl1+mWjppp&#xA;LMvirMqqLnh7gFNvi36bnLaJHh/x/j0/p7vsabAl4lej8er9Hf8AavkA1AT3lrGZLR/Q5JspuBDI&#xA;WfZqfs7DlTl0O2Aeion6t/hY/Hu96T67lEenb40fx7/crwX1rqV9by2QLi2LevORx4hlI9LejHk1&#xA;G8Ph8aZCWM44kS6/i/x3s45I5JAx6cz+j8dya5jOUlM99a6ZfXEt6CguipgnAL8giAeltVhxardK&#xA;fF41zJjjOSIEen4v8dziyyRxyJl15H9H423Q8EsWlyG6vk9C2mUrAacvRrK7+mQvIjkrL9mo2p2X&#xA;JyByDhjuRz89hv8Aj9bCMhjPFLYHl5bnb8fqXUVANRaOtgJ2uRHtVFMSqJuP+sGag3+Kv2tsHP0X&#xA;6qr7eX47u5PL116bv7Of47+9D6tPDe6Xq97aj/Rv0fcRPN09VghI2Pxfu/i6/wA22QyRMI8Mud/L&#xA;+39DZjkJy4o8qr3/ANn6WSZjuQ7FXYq7FXYq7FUug/5SO+/5g7T/AJO3OKrde8zaJoMUMmp3BiNy&#xA;/pW0Mcck80rgFiI4YVkkeiipouw64q+cvP35jaTrmr+Q08lXS32saDqz2lvNNHLFaLLdiSKzilkf&#xA;gQHEClkG4XbqMVe3/ljpHmfS9O1WHzRqw1nW5dQM93dRp6cSmS1tyIoV2pHGNhsK9aYqmmuyyJfm&#xA;SFykkOl3zc1AJRmaAoRUqK/AaVI6YVYw2pfmgpCyaGZG9CV2EV2qKJauUAYlq/C9KUrUDw3yPDxf&#xA;zm/gh3rR5k85/pSS1bSihWISLam/i9febirEVrxK7fZ969sgRi5cW7LwBw8W9d9bKd3rX5k292Z0&#xA;0yKawQ0aAXiCUhVPxiQtx4loQfsVo9O5IkBhr6ljiiepv3K66957mtbGez0C4ljnCSyM16g/dNRR&#xA;SoU8qAMajx/m2Rjx/wA5icUQSCUZpepec1uLU6ppNxbWysouZ1nFzU0Yn91Grvx2p9I3yE4xHI21&#xA;yERyKJ07WdIg1S9muZVHCaUIGBEkJYliWiI9RRKqGjceiHJR3hQO/wB/9jiz2nxEbV8v7f0K8epa&#xA;Ut+b71I/qHNisQYFlmYIon9H7QqTw6cqmtPiJy0m48N+r9HdbSBUuKvT+n+dX2d/zVBeWOpTXD2D&#xA;JNC4geW3UgPOqOHdvTJBp6bpuR8YoOlMETw0Cd9/h+Ps5plHisgbbfHff8deSYrLDd39tJbRODbl&#xA;xNO0bRAIVI9L4wpar8TQbbb9shRjEgnn8fi2WJSBA5dar4fjuTLMdyEtaWK0vrmW6ic/WCghmSN5&#xA;aoFA9L4AxWj8modjy23rTIAMogA8vh8fx3OOZCMiZDn1q/h+O9C2a/UZTcXMDpbshFqAjSGEGV2K&#xA;cUDFOSsnTbbj2GTn6xQO/Xz2H7fva8Y4DZG3TrW5+XT7ugbEJUrctbP9RFw0y2/A8kBjCiT0hv8A&#xA;3gZuNK/FypXHi6X6qq/jyv3fdS8PWvTxXXw517+nnahrTJPpusXcEbRwtp06SyspT1W4EpRWAb4F&#xA;rvT9r2yue0eEne/l/b+hth6p8QG1fP8As/SyLKG92KuxV2KuxV2KpdB/ykd9/wAwdp/yducVQXmn&#xA;yfZ+YTaSve3um3liZPq99p03oTKkyhZY6lXXi/Ff2aimxGKvOfNnlDyho+i6VpNxpsb+WNI8zwXN&#xA;7FKjzgx3FjIv1i5+28n7+4oXevTfpirKPyYTUY/KDpf+v6q3LCH63y9f6sIo/qvqc/i5fV+FeW/j&#xA;viqfXX7671+RV5JDZx2tKEn1AkszgUVzuk8fRT8jiqa6ldfVbKWUMol4kQh2CgvQlRU7ZZihxSAa&#xA;8s+GJPVhN7ZaJ5invb+aAXcVt9Whu3Qy8WKMrtsktY2jrU/C3w0NTXJZuzsRl6vqPny7vn8E6btb&#xA;PGP7v6Y+XO9j8vcfis0/yv5POnR39rpzfpR4VaSGR5HNvIFFfWEbvxowFeJJ/l8cxsPZuOwSNvv9&#xA;zl6jtjMYmIlvv05e+kV5Tvp4VtUtb/65pgWTnb0LsoWojW3LM0jBUUHjuNjTwzYS0ogDtXKvx+Oj&#xA;rfznGQeZ34vx7/svmWU3skU0VlLGyvG88To/wkEGpBFQfwzDIINFyRIEWEh076mPMWpPepyhVv3T&#xA;uOUSP6klS43CkinFiPEVy7HxcJEef2tOTh4gZcvs/HcjVitxc+o8LDRORMcbIfTEpVaSenTaP7VK&#xA;inL4u4OXEmqv95+juvv/AEbNAiOK6/d/ZffXd+nfzUbhI31PlZRv9QaEmZIgVSTjNEZTGgK8/gI5&#xA;FUbkPhBrsYgkVxH1b/dtf6O7myIBvhHp25dd96+HPv5JhD9Qe+t206MLx5C5kiXgnp8CAj0AHLnx&#xA;ovUb9MjLiETx/BlHhMhwD3+7+1NsxnKSqcWCX1w2pRq3Pj9WeVeaenwAKJUEcufIkdTt17ZMeIxH&#xA;B8XGlwiR4/h7u75oW2S3jlD6hEVtOJ+o+utVjBlfYgj4CUKcQ1DT4exyyRJHpPq617h8+v3tUAAb&#xA;mPT0vpufltX3LhFEEUvA36IE7MkPBuKp6ahSYqV9P1ORoR4N0GCz3+uv09/fVfcnhFcv3d8vh3d1&#xA;39/JQ1cW503WZLFAtqdPuBO6CkckvA8Sn7LEDlyYeI322rnfCBLnfxr8cm3HXGTHlW/cT+OfwZJm&#xA;O5DsVdirsVdirsVS6D/lI77/AJg7T/k7c4qmOKpXJ/o3mOOQ/wB3qNv6FSNhLbM0iKPd45ZD/sMV&#xA;XaWQL3WSTQC7Ukn/AJg7fFUJptvJd+Xry4VA0+rie5VXpRlmXjbhqhh/cLGpFMVRd4l7dRhDamOR&#xA;DyhmWUVjdlCc6CleIkbY+HyycJ8Ja8kOIJdJo1w1r9VFmFtZ41S+thIGSUhEXbmX47LxJ3JHeu+X&#xA;fmDdnc9PL9bXHBw/Sa76/GyLmtrpNPmtrHT0tS5Z0ELpGOZq3I8APtMBy8a5VCdSBO7blBlEgc0M&#xA;NJuiz8rIQxgqIo7SQQKAv7Rp+0QgWv8AK1PHLTqD039+/wCP1tA0w939Xb8Hp7kXeJqjw28VpZxx&#xA;ejIhXnJRFVTx6JxrQb0+jMcmzZckChQS6Hy9qFvd3k7W1vfyXUjObmW5lgbg/L92IkhkVVTmwX4i&#xA;fE13xSimS5WQvPokkjnkS1tcRuK8i3+7Xt9iXPbAq6C5jtH9T9C3kBoR6n7mY0PGopFNK2/Adu2K&#xA;q8vmXS4YnllW7jijBaSRrK7CqoFSxJioAB3xVv8AxNoNPivokbakbnhIa/yo1HP0DFVsfmfSJC4h&#xA;NxN6ZKu0VpdSKGABpySJhWjA4qv/AE2z/wC82nXs43IPprBsP+YlocVd+lNTbZNHuFNesslsq0p4&#xA;pLKfwxVD6jH5jvtPubI2lnEt1C8Jk+tSsV9RSteP1cVpXpXFU6xV2KuxV2KuxV2KpdB/ykd9/wAw&#xA;dp/yducVTHFUs8xWN9eaYV04xrqMUkctnJKSqI6OCSSoY04cgQBuDTviqX6qPMepWa2EenJbJM6L&#xA;qkks68Hg5qsyQNGHkJeOoq6Jt4HoqiPN9z5gs9F9by/6H15ZoI+E9vJdIY5ZViakcMtuwKB+deVK&#xA;A7dwqwnT/wA1PNl1HqMk/l17GKytRJHNNHOEeUzxxBiZFhovpy+oyU5LQip64VWR/mb+Yum6RDNr&#xA;HlB72+lgjueNj60I4zNQKYuN5xKAHkPVLVK/B8R4qt2P5r+driV7aTyZcJLBLEktyvrmNleTi/pI&#xA;0KFiBtuw3qeg3aVO/Kfn3Xdb15LC+0I6XbvBO6u7yu7PCYfiAlht6R0n41p9r8QrOMVdirsVdiq2&#xA;WKKaJ4pUDxSKUkRhUMrChBB7EYqkFjL5rs9ONjJYpc3cZaOzu/XVoPSDERNcMwSbmEA58I2qe++y&#xA;qYeXrG5stHtoLsL9dKmS9ZGLq1xIS8rhiqV5OxP2RiqY4q7FXYq7FXYq7FXYq7FXYql8Ct/iG9ah&#xA;4m0tAG7EiS5qPxxVMMVdirsVdiriARQ7g4q7FXYq6grXvirsVdirsVdirsVdirsVdirsVdirsVUb&#xA;tL1owLOWOGWu7TRtKvGh24q8W/vXFUJ6HmP/AJbrP/pEl/7KcVd6HmP/AJbrP/pEl/7KcVd6HmP/&#xA;AJbrP/pEl/7KcVd6HmP/AJbrP/pEl/7KcVa9LzAWK/X7LkACV+qSVANaGn1n2xVv0PMf/LdZ/wDS&#xA;JL/2U4q70PMf/LdZ/wDSJL/2U4q70PMf/LdZ/wDSJL/2U4q70PMf/LdZ/wDSJL/2U4q70PMf/LdZ&#xA;/wDSJL/2U4q70PMf/LdZ/wDSJL/2U4q70PMf/LdZ/wDSJL/2U4q70PMf/LdZ/wDSJL/2U4q70PMf&#xA;/LdZ/wDSJL/2U4q70PMf/LdZ/wDSJL/2U4q70PMf/LdZ/wDSJL/2U4q70PMf/LdZ/wDSJL/2U4q7&#xA;0PMf/LdZ/wDSJL/2U4q70PMf/LdZ/wDSJL/2U4q70PMf/LdZ/wDSJL/2U4q70PMf/LdZ/wDSJL/2&#xA;U4q70PMf/LdZ/wDSJL/2U4qr2ceqIzfXLiCZSPhEMLxEH3LSy1xVFYq7FXYq7FXYq7FUug/5SO+/&#xA;5g7T/k7c4qmOKuxV2KuxVK31tLS9NpqS+hzq1vdCpida9Cf2GWu9dvffATSaQl35vto5SlrCbhVN&#xA;DKW4If8AVNGJ+dKeGVyzRDIYyVeLzXpDWzzSuYXj+1A4/eH/AFQK8h7jp3pkhMEWgxIR+nXF1c2q&#xA;z3EP1cynlHCTVlQ/Z5/5R6kdumTYonFUNcalY27mOWZfWAr6K1eUggkUjXk5rxNKDFUJc6/Fbyqs&#xA;1rPHAw5C7k9KKIfvEioTLIjKSZQQCN96b7Yq6PzFaPBFccONtKyqs5mtTHV2RPtCYg/E9Nq7g0r8&#xA;NVVUasaAm0lUbciXt/h+yTWkv7PI1/1T7VVQ7eZ7Fb2OwdeN/LGJo7Mz2gmMbEDmI/W5Fa8hUbfA&#xA;3tVVXg1f16+jayScWKNwktmoykBlNJTupO+Kt3GqTQW8s8lhcBIUaRvit60VeRH97iqPxV2KuxV2&#xA;KuxV2KuxV2KpdB/ykd9/zB2n/J25xVMcVdiq2YyCJzGOUgUlFPdqbDAVCB+t6qp4NZh3Ckl1aiFh&#xA;2FchxS7mdDvSfzrqFvFbW6TcY2jrcyuxAEaBSu5NAKljv7HI5TtXemHO2HW+vabdWcF5aTx3Vtc8&#xA;vq8kLq4fiCWp8uJHzzG4G3iUrXzNp9xeyW1qUvbm1nWOeCNkYLIvJ/TlBYcaiM5MR4SCgm9nptrd&#xA;ajfW8VxF6NvBMquhPKaTiwBoQPTVWG46tmY46/8ARKSA/W7ia6qKFWf00oRQqY4vTVgf8oHFUVBb&#xA;29unpwRJFHUngihRU9TQYqxvz5plzqentZ21jHqE0sXFbaZ3hRgLq2ZuUqAMnFVLbP2+y/ZV5tpv&#xA;kSW4WGS//LswXNuqCGI6mWgCpEXZVXm4X95QKKtudzthVPdF8kx3OtWsOpeSxY6e9u4kuxftIIxA&#xA;EhhieIH4jIqlifv3rirIrv8AKPyDcT2081gQ1rGLeACaVQE9WWULs3891Jt7jwWgVF6X5W8n+TBf&#xA;avEy2FsYVS5nuZqQxRo7vXlIfh5NJ8RJ3oo7DFVK3/MXyPr9pf2mi67Z3l5HbTP6EUyiTiqGrKC0&#xA;RIHchhTxGKssxV2KuxV2KoaXU9Niu0s5buGO7k48LdpFWRvU58KITyPL0np48T4HFV31+x9V4vrM&#xA;XqxqHkj5ryVWJAYitQCVIxVU9eHmI/UX1DUBKipI3O2Kr8VS6D/lI77/AJg7T/k7c4qmOKuxVbKH&#xA;MbiM0koeBPStNsVQcS6wOId4iN6tQ19um2KsN1q4e51G4mffg/phRuAsXwGnty5N9OYmWVypvgNm&#xA;KXGlyQPcqipLZygpBCrFSiMkpZaBTQF5TSnbiKbVwA2kom1V7ZLUSRvJOZmnvZ0Q8S7pIpbbcrWi&#xA;r/k0wEc1D0HyVfxXFhNDHIJBBISpUggLJvSvjzDZkYj6WqY3ZDlrB2KoOX/jr23/ADD3G+388P04&#xA;qwW+0bzP5d43c/nCVbCa4YyC5iecpyUP8JIlbiixMaHioFanLsmpxRFyjTmYo+KajGyh0Orev6z/&#xA;AJhWxHI/u1ji4+oiMhA+P+WNiQNq70rkPzuDuHzZ/lp/6nJkunKdV0O/s4tZXVroMs1reBAqRyAK&#xA;8O6/C4WeItt8jlYzQmfS42bDKFcQ4UL578u6L58/L2a11K5k06ymjS8e4SheBof3jc1Ox4UIYYWl&#xA;5p5A/wCcarfyxcReZ9Q1ea6vrW2eaCwjh+renK8LAiSRZXZuPL9krv3xW3v2KuxV2KuxV5d+YHl7&#xA;Wb7z5a30HliPV7KKyiUagtxJbzxzq919kiVY/wB0JARWMt+8NDStCqh5S/LjSJNXvYNR8pfoyFEM&#xA;0V59amk+KUvEsSksyuyrzZmBpuppuMVZlY/lt5MsdQTULbT+N3E6yRSmSVijK3IceTHuTgVk2Kpd&#xA;B/ykd9/zB2n/ACducVTHFXYq7FVk8qQwyTP9iNS7fJRU4q84j5cF5faoOXz75rpGy5YGzYAAoBQe&#xA;GBXAAdBSu5pjapj5bs4ptWl4s0E725P1iE8ZAUPFa7EOF9ZiFcFa702zJ055hqyhlfPVYG+ONbyI&#xA;nYxUjlAJbqrng1BxFeQ+XbMlpVbW/s7ossMgMif3kLApIlQD8cbAOuxB3HfFVktP0tbbivoT7VFf&#xA;tw/s8hX58D8x+0qvvtOsL+JYr23juIkYOqSKGUMARWh9iRkZQEtiLZ48koG4mkCPKnleP4xpdqvF&#xA;vU5ekgo25LdP8o5X+Xx9wbTq8v8AOl80tur3ynDbpb2eoWNpZSER3UdpJHHKyu3FQjxuhQK0hZm3&#xA;2rlsBGHIMDklM+o2fNBadKLvUpdAhuo7+zacapc3MJUxCJ29R7f4SwBe6HIqxNYyRjEEDdrkQTts&#xA;GVawCdJvQBUm3lAFCa/AewDn7lPywoReKuxV2KuxV515/wBJ8s3nmSA3Oq6nYa1NBbQxrprsgERm&#xA;liSU7cfha5fka141p13KsYj8z/lzLEzT+bNdf6szesp+sVkjhBQIfTjIbklux2+IgtXfooZDoX5i&#xA;eR/LWlCyn1jUL+V3a7L3yyTzhLpxIBzVSvFQ+wBJ2Ptilmvl/wA06Lr6TPpkrSi3KiYPG8ZUuCQK&#xA;OF8CDgVVg/5SO+/5g7T/AJO3OKpjirsVdiqD1k00e+Phby/8QOAqGB5rXMdirsVTPy2xGsw0/aDq&#xA;flxJ/hl+n+pqy8ma5mNCjc2VrclDNGGeM1jk3DqahvhYUYbqK0O+KoP9HalHdxyQ3waCOJ41juI2&#xA;kcFvToeayRBgPTr8Slqk/EBtiquYtW7XNv7fuH9/+LvlirjFq1DS5twd6EwOexp/u7x4/j47KuaL&#xA;Vt+NzbjrxrA5p9qlf3w8V+4+PwquaLVt+NzbjrxrA5p9qlf3w8V+4+PwqqV5Z6rcWs8AubZRMjxg&#xA;tbNIBzDgclaXi1KrUHrQ/wA2yqYYq7FXYq7FWDecfMes6brtxBZ6lpdsg0z6zBb3wcy+rEZ3d1WM&#xA;c2jKxrWhNKdPEqgPJfneJ9OlvfM+taJ9TnjMsAgLQsqAF39VZwjcQr916U68sVegxwWErJdxxxSM&#xA;6fu7hQpJRqHZx+yeI/DArVrpunWclxLaWsNvLdv6t08Uao0slAvOQqAWbiAKnFUNB/ykd9/zB2n/&#xA;ACducVTHFXYq7FUHrX/HGv8A/mHl/wCIHAeSQwPNa5bsVdiqZeXP+Ozb/wCz/wCINl+D6mvLyZtm&#xA;Y47sVdirsVdirsVdirsVdirsVdirsVQN7oWi305uLywguJzEYDLLGrv6TVrHyIrx+I7Yqg7zyV5S&#xA;vbx7270m1nuZIzFI7xqeSFVSjDoaKigVG3bFU3hhighjhhQRxRKEjRRQKqigAHsMVX4ql0H/ACkd&#xA;9/zB2n/J25xVMcVdirsVQurIX0u8RRVmgkAHuUOJVgIIIqOhzWuY7ArsVTbysnPWAT+xE7j51Vf+&#xA;NsyNONy1ZeTMsy2h2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpdB/wApHff8wdp/yducVTHF&#xA;XYq7FXEAih3BxV5uYmhZoG+1CzRN80JU/qzXzFSLlROzsgydirIvJ0FZLu5I2HCFG9/tuPxXMzAN&#xA;rcfKd2TZe1uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVLoP+Ujvv+YO0/wCTtziqY4q7FXYq&#xA;7FWFeZLM22rO4FIroeqh7chRXH30b6cxM8d7b8R6JZmO2tMaCtCfADck+AGEC0Es70SwNjpsUDj9&#xA;8avNT+dtyK96dB8s2EY0KcUmyjskh2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpdB/ykd9/z&#xA;B2n/ACducVTHFXYq7FXYqg9V0yHUbUwSEowPKKUblGHff7iPDBKIIopBphmp6ddaYy/WgvpvXhMh&#xA;JQkdt6EN7fdXMOeEjk3xyAp7oXlxo3jvL6nqLRobfrwPXk57sPDoPfal+PFw79Wqc7ZFlzB2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVSW1iW7kuhX1ZY44nNduMTOy7fOVsVVcVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:7E5C34563F2068118C149AA0EBC2798A</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:7E5C34563F2068118C149AA0EBC2798A</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:c3667a37-d0d6-c84f-b721-18013a87630c</stRef:instanceID>
            <stRef:documentID>xmp.did:FF7F1174072068118C14BB3BB4EBF54E</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D27F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:15+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T16:23:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T17:10:45-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF7F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T22:53:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T23:07:07-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:35:43-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:40:59-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:26:55-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:20-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:30:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:31:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B233668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:23:46-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B333668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:27:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B433668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:46:13-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:47:57-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:51:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:52:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T13:28:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T16:23:53-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07C3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T16:45:26-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F1174072068119098B097FDA39BEF</stEvt:instanceID>
                  <stEvt:when>2008-06-02T13:25:25-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T14:58:36-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:31:27-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811834383CD3A8D2303</stEvt:instanceID>
                  <stEvt:when>2008-06-11T22:37:35-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811818C85DF6A1A75C3</stEvt:instanceID>
                  <stEvt:when>2008-06-27T14:40:42-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068118F62C262592E568B</stEvt:instanceID>
                  <stEvt:when>2012-01-04T09:22:07-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118F62C262592E568B</stEvt:instanceID>
                  <stEvt:when>2012-01-04T09:22:18-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:06801174072068118C14F3235FA19F7F</stEvt:instanceID>
                  <stEvt:when>2014-03-26T20:33:25-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07801174072068118C14F3235FA19F7F</stEvt:instanceID>
                  <stEvt:when>2014-03-26T20:33:35-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:08801174072068118C14F3235FA19F7F</stEvt:instanceID>
                  <stEvt:when>2014-03-26T20:35:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F1174072068118C14BB3BB4EBF54E</stEvt:instanceID>
                  <stEvt:when>2014-03-27T12:16:54-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F1174072068118C14BB3BB4EBF54E</stEvt:instanceID>
                  <stEvt:when>2014-03-27T12:53:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F1174072068118C14BB3BB4EBF54E</stEvt:instanceID>
                  <stEvt:when>2014-03-27T12:54:18-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7E5C34563F2068118C149AA0EBC2798A</stEvt:instanceID>
                  <stEvt:when>2014-04-05T20:47:44-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>383.358398</stDim:w>
            <stDim:h>498.333984</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>HelveticaNeue</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica Neue</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>8.0d6e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>HelveticaNeue.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -497.868 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 497.868 li
383 497.868 li
383 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 497.868 mo
383 497.868 li
383 0 li
0 0 li
0 497.868 li
clp
gsave
0 0 mo
383 0 li
383 497.868 li
0 497.868 li
0 0 li
clp
gsave
138.422 370.685 mo
156.999 370.685 li
156.999 360.323 li
138.422 360.323 li
138.422 370.685 li
clp
gsave
146.437 366.96 mo
139.026 366.96 li
139.026 361.431 li
146.437 361.431 li
146.437 366.96 li
clp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 .200784 cmyk
%ADOBeginSubsetFont: HelveticaNeue Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /HelveticaNeue def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 66 /B putdup 114 /r putdef/FontBBox {-951 -481 1446 1077} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B7A73DB69766C728F992B45CDEFDE836A03F03808DEA1F562730C87541D1DACD> |-/B <1C60D8A8C9B620B7F30120D77E6D1DEEB702625C217D9FD2EF8F935A91E0710EC795439CEE068523F9441ADAD7136CF6C94AC238D0E32C2A55259426386008D2D2D9DC469892AC55EB4139B732521898438EF59C6F81BA5322CFD97A7E55FF8D0B73942999B91CBD84A9B4864D7E6EB1337B0F1FF485E0F3E7AB554382985B41CBE193914226C44F0A041326ADEE636F92991AA36960A0AD1A00887B4FEEEE7A29D290F98B2FB7C5A00A58157954CE7F148E041C16DC4164B592A6DC826C2194463678EBB615C423182AA552A36C586B5611E1B7B94C2918987FF33A458E9408DCA4667CC0> |-/r <1C60D8A8C9B81F2C3A9A44CEFFCAE2B5B722C19E625B807D4F857B444383631BDC722B031B7D18A27CB4F561CDC7869F3EE923C7D65D3D994DE91855248F92102B302065D5EB4599> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue /HelveticaNeue findfont ct_VMDictPut/AVAFNQ+HelveticaNeue*1 [66{/.notdef}rp /B 47{/.notdef}rp /r 141{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf138.422 366.959 mo(Br)[5.43652 0 ]xshgrestore
gsave
150.611 367.045 mo
146.848 367.045 li
146.848 362.862 li
150.611 362.862 li
150.611 367.045 li
clp
false sop
0 0 0 .200784 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginAVAFNQ+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/a <1C60D8A8C9B78256DD1AA79B6E96B03E77EADE6FF0A6D5505B6476A0AEF13AFACC9B9C8107B755C96D4F2B6E7E4B814B70964F745A892BC2F7DBFD243A80BF261760C9115B3944A3DA63A020A1AC36E19994149E7CE1B81ADBD95B3735B8B753C51EA80398564C8D7E879660069158F6495BCE5C1CC6F9940CB3DD2B8B23F910189F52BDAE4D25F8EB2F4BA6F1E6AD2095AB8B6D03B0775D8BC8855AA1504E5A7E5B439B95621696C1C488B653996DDD18B169E460146B238E345F90A764D9FE3365CCE5645836155E954C349F53190EFFDB827467125C7F5A3C5C60D1FBE8F22BBB8C97BE208DFD9DC4E5F6D263D8673965AF624CC2B44D231FB29D854E8BA6BDF51C75F50BD9580344B6256F49927DBEC126269CA38BF3AEA7EAFC1130171EAB68FAF23EC73F45ED90287F5F700E3446D017248495E4F4341F88DDC2D8678D90B36E81C0D293EF71C1EB3B674292620537318BBB1B0E97C39B96F9AC815A7DF2153FC96D5B493F9A7D151B6F> |-systemdict /gcheck known {setglobal} if end {end} ifendAVAFNQ+HelveticaNeue /Encoding getdup 97 /a putpop%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue*1 [66{/.notdef}rp /B 30{/.notdef}rp /a 16{/.notdef}rp /r 141{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf146.568 366.959 mo(a)shgrestore
gsave
152.06 366.96 mo
151.401 366.96 li
151.401 361.431 li
152.06 361.431 li
152.06 366.96 li
clp
false sop
0 0 0 .200784 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginAVAFNQ+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/i <1C60D8A8C9B88C08555B3F0CC9C107C8E85C213909EEB355601DF6E16718C8> |-systemdict /gcheck known {setglobal} if end {end} ifendAVAFNQ+HelveticaNeue /Encoding getdup 105 /i putpop%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue*1 [66{/.notdef}rp /B 30{/.notdef}rp /a 7{/.notdef}rp /i 8{/.notdef}rp /r 141{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf150.866 366.959 mo(i)shgrestore
gsave
156.496 366.96 mo
153.182 366.96 li
153.182 362.862 li
156.496 362.862 li
156.496 366.96 li
clp
false sop
0 0 0 .200784 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginAVAFNQ+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/n <1C60D8A8C9B7EF322B311F684FFCE372DC830C5B5622CF8CC481131E62D787051C7F6F8AFE4E0678E980DEFED9D3B42136CA31D6B181415CC612E43F129CA0C6B7129B72601C197C1289FE3B0E87810C0E52F39D3150ED1541E70F1FAC5E47A3847D5C5288BFD9C72CA7FDA1DA3E70FC> |-systemdict /gcheck known {setglobal} if end {end} ifendAVAFNQ+HelveticaNeue /Encoding getdup 110 /n putpop%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue*1 [66{/.notdef}rp /B 30{/.notdef}rp /a 7{/.notdef}rp /i 4{/.notdef}rp /n 3{/.notdef}rp /r 141{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf152.686 366.959 mo(n)shgrestore
grestore
gsave
138.422 357.536 mo
156.735 357.536 li
156.735 347.175 li
138.422 347.175 li
138.422 357.536 li
clp
gsave
143.146 353.811 mo
139.026 353.811 li
139.026 348.281 li
143.146 348.281 li
143.146 353.811 li
clp
false sop
.125982 .200784 .326767 0 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginAVAFNQ+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/P <1C60D8A8C9B67DB58874415D94C2E559C88E36CC055437F3DF216575C839AACCA6EDB9DE2233509536944435A6A5FF417152CE02855876750F1D682335EEC3E41C9ED4B523CEEEE05D751D6FA45C4F6D05E3066B38F21D39CF4DAF8C04DD> |-systemdict /gcheck known {setglobal} if end {end} ifendAVAFNQ+HelveticaNeue /Encoding getdup 80 /P putpop%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue*1 [66{/.notdef}rp /B 13{/.notdef}rp /P 16{/.notdef}rp /a 7{/.notdef}rp /i 4{/.notdef}rp /n 3{/.notdef}rp /r 141{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf138.422 353.811 mo(P)shgrestore
gsave
147.273 353.895 mo
143.959 353.895 li
143.959 349.808 li
147.273 349.808 li
147.273 353.895 li
clp
false sop
.125982 .200784 .326767 0 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginAVAFNQ+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/u <1C60D8A8C9B7EF322440D101B9C5BDB658AC9990163C1DE216301D6A78F7E75DE20D48E148DE5D0B10EDCFF1F56F3D9DFED7E3EA1166FDE58BF5A95F3934CB8D172597F9074D97457D8256FE204274315A9853C456013DFC9C30B22C57D3DD5E6E54038141F8007BF38045054A25F79544E8DF7208> |-systemdict /gcheck known {setglobal} if end {end} ifendAVAFNQ+HelveticaNeue /Encoding getdup 117 /u putpop%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue*1 [66{/.notdef}rp /B 13{/.notdef}rp /P 16{/.notdef}rp /a 7{/.notdef}rp /i 4{/.notdef}rp /n 3{/.notdef}rp /r 2{/.notdef}rp /u 138{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf143.463 353.811 mo(u)shgrestore
gsave
152.184 355.336 mo
148.389 355.336 li
148.389 349.714 li
152.184 349.714 li
152.184 355.336 li
clp
false sop
.125982 .200784 .326767 0 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginAVAFNQ+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/p <1C60D8A8C9B7CA642A857E43B6E4584C21053D20464CD900CD9FAC314FFFF57B29E654571390EB20E46B7B48BB4AFE15157A1CE094B6FF462457B10AE9964D7A692D9B23249B54E98BB36FE18513C4E36124EE91E8B55E0D32F87793F9BE4B91CF07577AD6B1D404AAE3A88A4BEF896F462E4ACBCC0D5DA06B2EBCCC22792F58753666AB72F6C0F48104C745CE06B90FA6FECCB3A7C2A512102AC3FAB9143D8756393E66D37DCB1849D10BFE85B4757E9DB634D20E735C4DA1388EDE7F62254793AA9AEE6F6333E1CD0C532177362FACB6E0BE0F0AF66D33E6D9BDA8C896BA2F385679C44BD75AB95077ACF0FBEACEBAE1202AAB81> |-systemdict /gcheck known {setglobal} if end {end} ifendAVAFNQ+HelveticaNeue /Encoding getdup 112 /p putpop%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue*1 [66{/.notdef}rp /B 13{/.notdef}rp /P 16{/.notdef}rp /a 7{/.notdef}rp /i 4{/.notdef}rp /n /.notdef /p /.notdef /r 2{/.notdef}rp /u 138{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf147.87 353.811 mo(p)shgrestore
gsave
156.612 353.895 mo
152.849 353.895 li
152.849 349.714 li
156.612 349.714 li
156.612 353.895 li
clp
false sop
.125982 .200784 .326767 0 cmyk
AVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf152.57 353.811 mo(a)shgrestore
grestore
grestore
10.0024 317.999 mo
366.361 317.999 li
366.361 316.999 li
10.0024 316.999 li
false sop
0 0 0 1 cmyk
f
10.0024 107.946 mo
366.361 107.946 li
366.361 106.946 li
10.0024 106.946 li
f
85.3188 487.166 mo
85.3188 325.835 li
85.3188 487.166 li
cp
0 0 0 0 cmyk
f
84.8188 325.835 mo
84.8188 487.166 li
85.8188 487.166 li
85.8188 325.835 li
0 0 0 1 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginAVAFNQ+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/M <1C60D8A8C9B69A176219A01250C7EA2D701C37B963BD6632B98EF7CF81DE700912E41ACE3B8720F8AAD99EFC7EF6FD978C2016D91A029015D7F660E6> |-/N <1C60D8A8C9B6079F62EC3E4F2BCB53C58C5901674E014053D1B07FD718460ADB03ADEDF1E7C7BBA86E2EBA052A2038> |-/d <1C60D8A8C9B7CA642AB5CCFFBCBE446607BF45444797C5129AD75C694597C0629AB24E9D54F936C16BE3D25CEA1B8C96881ECFDC60B54236C9EC2FA30DA2A848A4CBD37893E1F8056DD3D8F4E5A5D50258DF41ED55CD2290EB5E498577916ED80F4FA5E4334DFE9F6809FADC5C0C40C6A401244D172FFF645E3FFF16A6C1094A4ED1826F3037EA86B64A0380C8B3E3229F349226214FDF5E286B75FB471FB9C2CD502C2219A5BB1B135C46A2C2BE44B969A462B8AB31BD353D37BE3C3C7080EAE8E54A6B7465DCDE55846A7689FA6A8296E41948930065D5B640E4496541971418DA22DBA1100ADCA9406D6F37305465E596699F7A> |-/e <1C60D8A8C9B78256DD55438017BC8C1833CE266A01A5BDCA1B9E966A1AD681838D6CA45F44E08AD46E17D686288D23390B2FFF6378472ABC69E374A8B6ECB2A52EA29263AFEB4E06DEA16052EA24A1400E2DF2276D2E8A45445FDD018FF05A2C8F08BE043D78D9C3FF8D67946FFB6ED6FABF052655B4BF4DBDD6E8C1E3FCFA055088CA6071FC379A1CF225CE66EE3C231FBB0FAEDF30BB250911BC9FE90F7DE212622E1297D593A829F344F788CA5B330F3559D2E33FB2EFAC5B38F4C75E3F0FF8F9AB8251282F4E9ED2B8D5F76F3259AF9F7CA6A537CEB7170E211C3C4C514E> |-/h <1C60D8A8C9B7EF322B3C3F3F21044A9FB99BA13EAE1C2C34C29E7AEFCF85896CB222A9E2E462E0E0EF9E1459C34491C3635B4F81DCAC33B3CC47C54DD9513944C59C7E1D8863AB1590AAA126A1BF7CF76466CCB47431302FBB36367021A54497B008F2CBFCE4F87B789E3710B9E14C99ED235DE7F95A088383DE818CAFFC46D95433ACC38BD4> |-/m <1C60D8A8C9B6889AAB3FDFDCB8C7A7D4A445E72A6050547E3926FD5EF288CA98CBCE73BD6F51BD8BF77C15E93641E82F5FBA14322965E5F6D81A4346526A3A1BECA76E268C8FE3D1A76E8FCF70B9F3D9BBE79361A40E85058ED9D209065D2BA116AF30A8A9294941853304D630ECD80D50338AF92C33CA5A86089BC3A675BE5255469C0261FC17E304AD4871EC7D0C588F6D20F8D311D5E6B56770EA483EDEB3A414A9F873D9B06A4DDE3FA472A91892F8707248B10279ED4753FAFA79F58F24457691EAC3AA3568D8C5440F> |-/o <1C60D8A8C9B7FD849A41D15A513197C7FBD61B6F7FFCAC3AF3E97AC59087245F09701F75E50338558BB40AA9680A2FBD1EAE25AE04491DB1C148A07BBF7B8B2FC83A811B9F5493B2A0F2D79BE2ADCDBA13E2B19DD819B8D5A15937446D8F358692DC5FAB8E88C19B1533D50FF00A7803A38C9128B8EC16408B839CC48067B9ED6B4A3117F3C447EC07CDF75A5742341E297006EE8A172AE85B4C2C86A95A30C1C97E6432A14DD7AB146A08EF57B3F2578CC5ED7C800F9538F93029A11370A11A675530BB39260BAF32B1B7C0D93D402CF73D54D64C2CF3F082E9F79B4662EF26FA2BCB25FE481D961CEE5EA35FDF563D67AB6E8F> |-/s <1C60D8A8C9B7A73DB93069DBC6375B57C8CEA5298ECD155D330F5DEADB84BCE0F3B9931445A3E0A23408E166E94ED9B84A4F77C41F0369937E8C2C9831D0AAA0C414A32B88A399DE991143E3662049761DB0B0648AFDE42A4B3062552586F0EBBA0F2E7BF3A4DFA292E6EBB84128A6A9679FD085A8A3EE7D119B409E196F8DD013E73279FEB2FAD41E214F19FAE59B2DE112620184CF1FA5F8444A4C3EBCD7B771E48653A08D11A41EDDC944A6794EED345CDB91C69F6C018931F290C225B8C2B7916D95BB63059EE22EE396098AC463522A22CE66834854EDE7E984119074789DC9CD95809278277DFC5F487D01C620166BB029D76936EA500E2DBA569CE0343EEFE105A4474A80777509B8E0D1BF6BCA9D29EA70910F3731811C708532E5A8C24D816BA3F135B8B9EBA4D9360824E69CC0DC3D45097EC5A74ECA5FEECBEEBDE4BFBA7F33D81257F3182B67A858EF8443FF7D0CE5> |-/y <1C60D8A8C9B7A73DB9A768D4DE1B8D033D4F7C563492C8A327101232088D507937FF5600A36C7A42C1CE1C7FCDC89BE897F465E05DD52CDFE7355348374B782682DB87301A384A03DB070153A4F68D0E62C089E4C47F4748C6E0F5295766246C7C05B27061C85149A2902C18C39FFC54AE9ECC91> |-systemdict /gcheck known {setglobal} if end {end} ifendAVAFNQ+HelveticaNeue /Encoding getdup 32 /space putdup 77 /M putdup 78 /N putdup 100 /d putdup 101 /e putdup 104 /h putdup 109 /m putdup 111 /o putdup 115 /s putdup 121 /y putpop%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue*1 [32{/.notdef}rp /space 33{/.notdef}rp /B 10{/.notdef}rp /M /N /.notdef /P 16{/.notdef}rp /a 2{/.notdef}rp /d /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n /o /p /.notdef /r /s /.notdef /u 3{/.notdef}rp /y 134{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf260.946 345.407 mo(M)sh267.784 345.407 mo(u)sh272.222 345.407 mo(s)sh276.233 345.407 mo(h)sh280.647 345.407 mo(r)sh283.327 345.407 mo(o)sh287.904 345.407 mo(o)sh292.473 345.407 mo(m )[6.60547 0 ]xsh301.23 345.407 mo(B)sh306.651 345.407 mo(o)sh311.221 345.407 mo(d)sh315.929 345.407 mo(y)sh260.946 354.7 mo(N)sh266.661 354.7 mo(e)sh270.967 354.7 mo(u)sh275.388 354.7 mo(r)sh278.068 354.7 mo(o)sh282.637 354.7 mo(n)sh287.059 354.7 mo(s)sh.5 1 0 0 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginAVAFNQ+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B81F2C3A4864C06E4CFD01869C53CC11FA099954D939> |-/A <1C60D8A8C9B67DB5878EE221F210438E2D1F518277932B525F370D850642FD46B0F79A79CF11337DC6AEE53D885E0E1A7DF59B4B5DCF38DE8A6C> |-/R <1C60D8A8C9B620B7FC729AF8F4061A1A450A8D3AD24E1257006308FC1D758B7163CE246A589C3C1FF42BF41C53E72A1D845E2C5B56C92E17410DDB3044FB434DE2CD131B44CC49542E89790E077569AAE7DFE8E8291AFE90275C34A2942D76E09B43AFCC0B1D219F8A30BA7721EAEC249BB363718B24B1F64BEFB784F0EC2C4BEF6738250802A28FD9247B8540CB43AE353032E39962A446CF2BCB9B8465C455DDDF1AE16191C618FA995497D543D03F085D9079AF4264BD36FF070924F7FC68F721E9BD259D08A0D1E3D48EF33AD4ED9C3BB2C7BA2CD9E84E1F04E58C601E31743C68> |-/c <1C60D8A8C9B78256DD72E59F8D9EE3DA4C3A3D2C848028DFC44C2D7B28374D45276541C9B192FADB296DC40B35992C7F5DCFFD2AD8C20286A661A838F0FF848A5B590ED3544893F482AA00380CFEBB3F71CA4DDE96092132A8333355ADFC12D4AA1A68870C56C09C2DA680A9433A1DA80A9131F388EC47284850BF5BE2E71F4A6AA01921CCB344F4703453FA574C9F5F304B61147AC2FFE6D5A3AE79E389CF45C56EC750C5100A8E919AB8B3DC57C23D01902AFC1FAC089A7D9DD67123B38E49707F6731D8B46DE7BB> |-/l <1C60D8A8C9B88C087228DE33F4F68C5654F20641D38FAA> |-/t <1C60D8A8C9B831A983F3E33337748713E88A1E5224168E0F67E7570999394DC65B3C1F9E93E779E823D948B9BA81E8D28F7AA76A84CA0D8886E947D6DA351FC6D6DA2491F91E4DCFCC3CFCAB956E68A2E9A2422BEE8CAB716B00E0C2DA95565D6409476535> |-systemdict /gcheck known {setglobal} if end {end} ifendAVAFNQ+HelveticaNeue /Encoding getdup 47 /slash putdup 65 /A putdup 82 /R putdup 99 /c putdup 108 /l putdup 116 /t putpop%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue*1 [32{/.notdef}rp /space 14{/.notdef}rp /slash 17{/.notdef}rp /A /B 10{/.notdef}rp /M /N /.notdef /P /.notdef /R 14{/.notdef}rp /a /.notdef /c /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf265.398 366.432 mo(R)sh270.804 366.432 mo(e)sh275.109 366.432 mo(p)sh279.817 366.432 mo(u)sh284.216 366.432 mo(l)sh286.074 366.432 mo(si)[3.98828 0 ]xsh291.896 366.432 mo(o)sh296.466 366.432 mo(n)sh155.327 245.24 mo(A)sh160.345 245.24 mo(t)sh163.032 245.24 mo(t)sh165.565 245.24 mo(r)sh168.275 245.24 mo(a)sh172.542 245.24 mo(c)sh176.847 245.24 mo(t)sh179.364 245.24 mo(i)sh181.199 245.24 mo(o)sh185.768 245.24 mo(n)sh190.268 245.24 mo(/)sh193.009 245.24 mo(R)sh198.414 245.24 mo(e)sh202.72 245.24 mo(p)sh207.428 245.24 mo(u)sh211.818 245.24 mo(l)sh213.677 245.24 mo(si)[3.98828 0 ]xsh219.5 245.24 mo(o)sh224.069 245.24 mo(n)sh209.957 253.568 mo
208.896 253.568 li
208.896 254.568 li
209.957 254.568 li
0 1 1 0 cmyk
f
206.293 254.568 mo
207.342 254.568 li
207.342 253.568 li
206.293 253.568 li
f
191.854 264.816 mo
189.933 264.816 li
189.795 264.816 189.683 264.928 189.683 265.066 cv
189.683 265.204 189.795 265.316 189.933 265.316 cv
191.854 265.316 li
191.992 265.316 192.104 265.204 192.104 265.066 cv
192.104 264.928 191.992 264.816 191.854 264.816 cv
.5 1 0 0 cmyk
f
188.225 265.066 mo
190.632 264.083 li
190.061 265.066 li
190.632 266.051 li
188.225 265.066 li
cp
f
183.707 265.316 mo
185.628 265.316 li
185.766 265.316 185.878 265.204 185.878 265.066 cv
185.878 264.928 185.766 264.816 185.628 264.816 cv
183.707 264.816 li
183.569 264.816 183.457 264.928 183.457 265.066 cv
183.457 265.204 183.569 265.316 183.707 265.316 cv
f
187.337 265.066 mo
184.93 266.051 li
185.5 265.066 li
184.93 264.083 li
187.337 265.066 li
cp
f
308.293 378.015 mo
309.652 376.655 li
309.75 376.558 309.75 376.399 309.652 376.302 cv
309.555 376.204 309.396 376.204 309.299 376.302 cv
307.939 377.661 li
307.842 377.759 307.842 377.917 307.939 378.015 cv
308.037 378.112 308.195 378.112 308.293 378.015 cv
f
310.684 375.271 mo
309.677 377.67 li
309.385 376.569 li
308.286 376.277 li
310.684 375.271 li
cp
f
306.97 378.631 mo
305.612 379.989 li
305.515 380.087 305.515 380.245 305.612 380.343 cv
305.71 380.44 305.868 380.44 305.966 380.343 cv
307.323 378.984 li
307.421 378.887 307.421 378.728 307.323 378.631 cv
307.226 378.533 307.067 378.533 306.97 378.631 cv
f
304.581 381.374 mo
305.587 378.976 li
305.879 380.075 li
306.979 380.367 li
304.581 381.374 li
cp
f
208.473 256.533 mo
210.394 256.533 li
210.532 256.533 210.644 256.421 210.644 256.283 cv
210.644 256.145 210.532 256.033 210.394 256.033 cv
208.473 256.033 li
208.335 256.033 208.223 256.145 208.223 256.283 cv
208.223 256.421 208.335 256.533 208.473 256.533 cv
f
212.103 256.283 mo
209.694 257.267 li
210.266 256.283 li
209.694 255.3 li
212.103 256.283 li
cp
f
207.1 256.033 mo
205.179 256.033 li
205.041 256.033 204.929 256.145 204.929 256.283 cv
204.929 256.421 205.041 256.533 205.179 256.533 cv
207.1 256.533 li
207.238 256.533 207.35 256.421 207.35 256.283 cv
207.35 256.145 207.238 256.033 207.1 256.033 cv
f
203.47 256.283 mo
205.878 255.299 li
205.307 256.283 li
205.878 257.266 li
203.47 256.283 li
cp
f
188.736 261.602 mo
187.806 261.935 li
188.143 262.877 li
189.073 262.544 li
0 1 1 0 cmyk
f
186.646 262.906 mo
187.533 262.906 li
187.533 261.906 li
186.646 261.906 li
f
315.241 377.865 mo
311.308 379.618 li
311.715 380.531 li
315.648 378.778 li
f
308.856 387.265 mo
308.856 383.704 li
307.856 383.704 li
307.856 387.265 li
f
gsave
0 0 mo
383 0 li
383 497.868 li
0 497.868 li
0 0 li
clp
gsave
153.447 482.378 mo
213.367 482.378 li
213.367 332.927 li
153.447 332.927 li
153.447 482.378 li
clp
183.407 481.394 mo
182.726 481.388 182.308 481.182 181.884 480.81 cv
181.252 480.252 180.712 479.246 179.885 478.217 cv
179.057 477.189 177.892 476.152 175.998 475.606 cv
172.503 474.592 169.394 471.979 166.695 468.068 cv
162.648 462.205 159.567 453.456 157.516 443.142 cv
155.463 432.828 154.43 420.95 154.431 408.811 cv
154.427 384.279 159.332 362.575 166.783 349.452 cv
166.79 349.439 li
166.796 349.427 li
167.168 348.676 167.332 347.873 167.331 347.06 cv
167.328 345.422 166.688 343.742 165.764 342.126 cv
164.819 340.483 163.568 338.895 162.327 337.514 cv
162.361 337.535 162.394 337.557 162.428 337.578 cv
163.944 338.548 165.599 339.52 167.165 340.256 cv
168.736 340.989 170.204 341.5 171.436 341.506 cv
171.44 341.506 171.445 341.506 171.449 341.506 cv
172.154 341.506 172.825 341.316 173.3 340.818 cv
173.307 340.81 li
176.492 337.821 179.887 336.229 183.407 336.229 cv
183.41 336.229 183.414 336.229 183.417 336.229 cv
187.127 336.229 190.533 338.244 194.123 341.407 cv
194.466 341.711 194.91 341.829 195.357 341.829 cv
195.36 341.829 195.363 341.829 195.367 341.829 cv
196.401 341.818 197.6 341.292 198.915 340.551 cv
200.691 339.539 202.647 338.087 204.256 336.802 cv
203.794 337.44 203.304 338.131 202.814 338.841 cv
201.789 340.327 200.763 341.901 199.985 343.297 cv
199.596 343.995 199.269 344.648 199.034 345.232 cv
198.801 345.819 198.651 346.326 198.647 346.797 cv
198.647 346.922 198.659 347.045 198.689 347.168 cv
198.708 347.249 li
198.753 347.319 li
206.913 360.142 212.389 382.9 212.384 408.811 cv
212.385 423.652 210.251 438.695 206.354 450.785 cv
204.407 456.83 202.019 462.135 199.25 466.303 cv
196.482 470.474 193.338 473.497 189.902 475.025 cv
188.587 475.608 187.731 476.348 187.155 477.12 cv
186.293 478.279 186.042 479.464 185.643 480.222 cv
185.445 480.605 185.236 480.873 184.922 481.066 cv
184.607 481.259 184.149 481.394 183.407 481.394 cv
.125982 .200784 .326767 0 cmyk
f
183.882 482.378 mo
183.043 482.378 li
182.296 482.303 181.688 481.986 181.216 481.553 cv
180.664 481.054 180.254 480.428 179.81 479.795 cv
178.916 478.524 177.947 477.221 175.719 476.566 cv
171.927 475.464 168.651 472.665 165.872 468.636 cv
163.091 464.603 160.791 459.323 158.95 453.172 cv
155.468 441.531 153.635 426.76 153.447 411.429 cv
153.447 406.395 li
153.758 382.73 158.581 361.9 165.905 348.972 cv
166.199 348.373 166.331 347.738 166.331 347.06 cv
166.347 344.663 164.585 341.745 162.539 339.289 cv
160.501 336.827 158.22 334.804 157.314 334.034 cv
157.055 333.814 156.912 333.698 156.911 333.698 cv
157.523 332.927 li
157.549 332.927 li
157.622 332.984 157.947 333.235 158.461 333.618 cv
159.049 334.055 159.882 334.66 160.857 335.332 cv
162.806 336.677 165.33 338.29 167.591 339.35 cv
169.083 340.056 170.472 340.506 171.418 340.506 cv
171.424 340.506 171.43 340.506 171.436 340.506 cv
171.914 340.504 172.245 340.403 172.474 340.221 cv
172.594 340.108 li
175.908 336.983 179.561 335.228 183.405 335.228 cv
183.405 335.228 183.406 335.228 183.407 335.228 cv
187.507 335.232 191.127 337.437 194.784 340.657 cv
194.902 340.76 195.074 340.827 195.367 340.829 cv
195.373 340.829 195.38 340.829 195.386 340.829 cv
195.971 340.829 196.915 340.496 197.96 339.936 cv
199.02 339.373 200.2 338.595 201.342 337.768 cv
203.628 336.113 205.766 334.265 206.598 333.528 cv
206.836 333.318 206.966 333.2 206.966 333.199 cv
206.966 333.199 li
207.303 333.569 li
207.696 333.878 li
207.695 333.879 207.309 334.372 206.702 335.176 cv
206.094 335.981 205.268 337.095 204.394 338.328 cv
202.647 340.788 200.702 343.755 199.962 345.605 cv
199.749 346.128 199.644 346.562 199.647 346.797 cv
199.655 346.875 li
207.679 359.572 213.032 381.381 213.367 406.357 cv
213.367 411.055 li
213.052 432.731 208.297 454.469 200.084 466.857 cv
197.247 471.128 193.986 474.299 190.308 475.938 cv
188.983 476.532 188.269 477.235 187.785 477.961 cv
187.302 478.689 187.061 479.462 186.754 480.197 cv
186.549 480.684 186.308 481.165 185.902 481.563 cv
185.437 482.022 184.777 482.308 183.882 482.378 cv
162.327 337.514 mo
163.568 338.895 164.819 340.483 165.764 342.126 cv
166.688 343.742 167.328 345.422 167.331 347.06 cv
167.332 347.873 167.168 348.676 166.796 349.427 cv
166.79 349.439 li
166.783 349.452 li
159.332 362.575 154.427 384.279 154.431 408.811 cv
154.43 420.95 155.463 432.828 157.516 443.142 cv
159.567 453.456 162.648 462.205 166.695 468.068 cv
169.394 471.979 172.503 474.592 175.998 475.606 cv
177.892 476.152 179.057 477.189 179.885 478.217 cv
180.712 479.246 181.252 480.252 181.884 480.81 cv
182.308 481.182 182.726 481.388 183.407 481.394 cv
184.149 481.394 184.607 481.259 184.922 481.066 cv
185.236 480.873 185.445 480.605 185.643 480.222 cv
186.042 479.464 186.293 478.279 187.155 477.12 cv
187.731 476.348 188.587 475.608 189.902 475.025 cv
193.338 473.497 196.482 470.474 199.25 466.303 cv
202.019 462.135 204.407 456.83 206.354 450.785 cv
210.251 438.695 212.385 423.652 212.384 408.811 cv
212.389 382.9 206.913 360.142 198.753 347.319 cv
198.708 347.249 li
198.689 347.168 li
198.659 347.045 198.647 346.922 198.647 346.797 cv
198.651 346.326 198.801 345.819 199.034 345.232 cv
199.269 344.648 199.596 343.995 199.985 343.297 cv
200.763 341.901 201.789 340.327 202.814 338.841 cv
203.304 338.131 203.794 337.44 204.256 336.802 cv
202.647 338.087 200.691 339.539 198.915 340.551 cv
197.6 341.292 196.401 341.818 195.367 341.829 cv
195.363 341.829 195.36 341.829 195.357 341.829 cv
194.91 341.829 194.466 341.711 194.123 341.407 cv
190.533 338.244 187.127 336.229 183.417 336.229 cv
183.414 336.229 183.41 336.229 183.407 336.229 cv
179.887 336.229 176.492 337.821 173.307 340.81 cv
173.3 340.818 li
172.825 341.316 172.154 341.506 171.449 341.506 cv
171.445 341.506 171.44 341.506 171.436 341.506 cv
170.204 341.5 168.736 340.989 167.165 340.256 cv
165.599 339.52 163.944 338.548 162.428 337.578 cv
162.394 337.557 162.361 337.535 162.327 337.514 cv
166.348 349.205 mo
166.348 349.205 li
0 0 0 .501961 cmyk
f
grestore
179.982 352.668 mo
180.362 352.343 li
180.352 352.331 179.904 351.807 179.279 351.269 cv
178.965 351 178.607 350.727 178.224 350.511 cv
177.841 350.298 177.43 350.132 176.979 350.129 cv
176.755 350.128 176.519 350.176 176.303 350.289 cv
176.019 350.446 175.456 350.5 174.852 350.495 cv
174.609 350.495 174.359 350.489 174.112 350.489 cv
173.678 350.491 173.262 350.499 172.87 350.619 cv
172.675 350.681 172.477 350.777 172.311 350.945 cv
172.144 351.112 172.036 351.352 172.013 351.596 cv
171.957 352.087 171.8 352.332 171.551 352.516 cv
171.298 352.699 170.879 352.815 170.292 352.813 cv
169.994 352.814 169.782 352.792 169.568 352.791 cv
169.409 352.793 169.218 352.8 169.012 352.914 cv
168.86 352.998 168.743 353.135 168.67 353.267 cv
168.56 353.468 168.504 353.673 168.434 353.951 cv
168.367 354.228 168.293 354.578 168.191 355.041 cv
167.96 356.095 167.521 357.347 167.136 358.503 cv
166.943 359.082 166.764 359.638 166.63 360.144 cv
166.497 360.652 166.406 361.104 166.404 361.514 cv
166.402 362.876 166.579 364.157 167.234 366.243 cv
167.908 368.372 169.196 371.002 170.948 372.419 cv
171.449 372.823 171.593 373.292 171.696 373.76 cv
171.747 373.995 171.774 374.214 171.856 374.45 cv
171.9 374.568 171.96 374.702 172.092 374.828 cv
172.221 374.957 172.434 375.035 172.612 375.03 cv
172.816 375.028 172.981 374.967 173.155 374.885 cv
173.328 374.801 173.512 374.688 173.73 374.536 cv
174.205 374.204 174.508 373.96 174.715 373.771 cv
174.869 373.629 174.971 373.516 175.039 373.433 cv
175.121 373.33 li
174.949 373.179 li
175.068 373.372 li
175.121 373.33 li
174.949 373.179 li
175.068 373.372 li
174.968 373.209 li
175.03 373.391 li
175.068 373.372 li
174.968 373.209 li
175.03 373.391 li
175.03 373.389 175.149 373.364 175.376 373.327 cv
175.376 373.327 li
175.935 373.236 176.322 373.037 176.679 372.859 cv
177.04 372.68 177.399 372.506 178.05 372.353 cv
178.451 372.261 178.699 372.174 178.856 372.115 cv
179.004 372.061 li
179.012 372.058 li
178.987 371.961 li
178.987 372.061 li
179.012 372.058 li
178.987 371.961 li
178.987 372.061 li
178.987 372 li
178.979 372.06 li
178.987 372.061 li
178.987 372 li
178.979 372.06 li
178.996 372.055 179.255 372.145 179.823 372.34 cv
180.504 372.569 181.141 372.633 181.698 372.633 cv
182.436 372.632 183.049 372.525 183.407 372.528 cv
184.217 372.527 186.127 372.365 186.135 372.364 cv
186.093 371.866 li
185.93 372.339 li
187.219 372.784 li
188.307 373.911 li
188.417 373.95 li
188.675 374.038 189.043 374.307 189.401 374.577 cv
189.583 374.711 189.766 374.845 189.961 374.957 cv
190.157 375.065 190.367 375.167 190.647 375.171 cv
190.886 375.179 191.166 375.053 191.325 374.853 cv
191.324 374.854 li
191.53 374.611 192.022 374.14 192.53 373.647 cv
193.041 373.148 193.574 372.621 193.926 372.176 cv
194.234 371.785 194.88 371.014 195.467 370.284 cv
195.762 369.918 196.042 369.561 196.264 369.258 cv
196.375 369.106 196.472 368.968 196.551 368.844 cv
196.63 368.716 196.691 368.617 196.741 368.476 cv
196.773 368.378 196.886 368.078 197.029 367.697 cv
197.246 367.12 197.537 366.337 197.776 365.613 cv
197.896 365.251 198.003 364.905 198.082 364.601 cv
198.161 364.293 198.216 364.044 198.219 363.8 cv
198.22 363.514 198.196 363.342 198.176 363.227 cv
198.159 363.118 198.148 363.077 198.147 362.847 cv
198.147 362.622 198.164 362.236 198.217 361.553 cv
198.237 361.302 198.245 361.032 198.245 360.746 cv
198.245 359.623 198.115 358.26 197.957 357.137 cv
197.878 356.576 197.791 356.077 197.708 355.694 cv
197.665 355.502 197.625 355.34 197.581 355.204 cv
197.507 355.01 li
197.473 354.945 197.452 354.879 197.335 354.771 cv
197.334 354.77 li
197.329 354.765 li
197.283 354.721 197.136 354.555 196.958 354.347 cv
196.686 354.031 196.319 353.601 195.929 353.186 cv
195.538 352.771 195.132 352.371 194.738 352.096 cv
194.567 351.979 194.296 351.728 193.982 351.427 cv
193.507 350.974 192.92 350.406 192.235 349.938 cv
191.55 349.474 190.752 349.097 189.852 349.095 cv
189.613 349.104 li
188.493 349.19 187.83 349.5 187.444 349.865 cv
187.057 350.229 186.999 350.617 186.997 350.702 cv
186.976 351.049 li
187.294 351.19 li
187.472 350.788 li
187.18 351.117 li
187.294 351.19 li
187.472 350.788 li
187.18 351.117 li
187.484 350.774 li
187.027 350.774 li
187.029 350.961 187.132 351.076 187.18 351.117 cv
187.484 350.774 li
187.027 350.774 li
187.475 350.774 li
187.104 350.52 li
187.068 350.571 187.026 350.665 187.027 350.774 cv
187.475 350.774 li
187.104 350.52 li
187.398 350.721 li
187.179 350.439 li
187.104 350.52 li
187.398 350.721 li
187.179 350.439 li
187.252 350.533 li
187.194 350.428 li
187.179 350.439 li
187.252 350.533 li
187.194 350.428 li
187.164 350.451 186.817 350.58 186.004 350.724 cv
185.153 350.879 184.664 350.877 184.235 350.921 cv
184.021 350.943 183.806 350.98 183.589 351.082 cv
183.372 351.183 183.183 351.345 183.021 351.545 cv
182.629 352.02 li
179.955 352.169 li
179.982 352.668 li
180.362 352.343 li
179.982 352.668 li
180.01 353.167 li
183.122 352.994 li
183.793 352.18 li
183.897 352.056 183.956 352.016 184.017 351.986 cv
184.102 351.941 184.284 351.913 184.642 351.891 cv
184.997 351.866 185.496 351.834 186.183 351.708 cv
186.824 351.59 187.2 351.495 187.451 351.404 cv
187.577 351.357 187.673 351.314 187.774 351.243 cv
187.929 351.085 li
187.98 351.012 188.028 350.898 188.027 350.774 cv
188.025 350.559 187.907 350.423 187.843 350.368 cv
187.698 350.275 li
187.496 350.732 li
187.995 350.763 li
187.781 350.75 li
187.992 350.795 li
187.995 350.763 li
187.781 350.75 li
187.992 350.795 li
187.995 350.794 188.006 350.684 188.207 350.527 cv
188.41 350.372 188.837 350.167 189.69 350.101 cv
189.852 350.095 li
190.658 350.088 191.499 350.577 192.25 351.202 cv
192.625 351.512 192.974 351.847 193.292 352.15 cv
193.611 352.454 193.889 352.723 194.168 352.918 cv
194.558 353.185 195.13 353.778 195.608 354.319 cv
195.85 354.59 196.072 354.85 196.252 355.059 cv
196.342 355.164 196.422 355.256 196.491 355.332 cv
196.681 355.527 li
196.685 355.531 li
196.68 355.526 li
196.873 355.304 li
196.6 355.43 li
196.68 355.526 li
196.873 355.304 li
196.6 355.43 li
196.607 355.443 196.639 355.532 196.67 355.652 cv
196.902 356.522 197.248 359.031 197.245 360.746 cv
197.245 361.012 197.237 361.259 197.22 361.475 cv
197.166 362.171 197.147 362.574 197.147 362.847 cv
197.145 363.115 197.171 363.282 197.189 363.391 cv
197.206 363.494 197.217 363.549 197.219 363.8 cv
197.224 363.883 197.155 364.237 197.034 364.638 cv
196.856 365.251 196.576 366.04 196.327 366.716 cv
196.077 367.396 195.863 367.948 195.792 368.16 cv
195.791 368.161 li
195.766 368.223 195.608 368.469 195.398 368.748 cv
194.759 369.608 193.614 370.956 193.141 371.557 cv
192.856 371.919 192.336 372.441 191.832 372.93 cv
191.325 373.425 190.841 373.882 190.564 374.205 cv
190.563 374.205 li
190.632 374.265 li
190.595 374.184 li
190.563 374.205 li
190.632 374.265 li
190.595 374.184 li
190.647 374.296 li
190.647 374.171 li
190.595 374.184 li
190.647 374.296 li
190.647 374.171 li
190.642 374.17 li
190.614 374.167 190.51 374.126 190.383 374.044 cv
190.188 373.924 189.939 373.727 189.668 373.531 cv
189.394 373.335 189.099 373.134 188.753 373.009 cv
188.585 373.479 li
188.945 373.132 li
187.773 371.917 li
186.157 371.359 li
186.051 371.368 li
186.05 371.368 185.573 371.408 185 371.448 cv
184.43 371.489 183.757 371.529 183.407 371.528 cv
182.898 371.532 182.341 371.635 181.698 371.633 cv
181.217 371.633 180.698 371.579 180.142 371.392 cv
179.49 371.183 179.344 371.08 178.987 371.061 cv
178.881 371.06 178.779 371.083 178.705 371.106 cv
178.592 371.143 178.519 371.176 178.393 371.219 cv
178.269 371.262 178.094 371.316 177.824 371.379 cv
177.083 371.55 176.604 371.779 176.234 371.963 cv
175.86 372.149 175.621 372.272 175.212 372.341 cv
175.197 372.343 li
175.211 372.341 li
174.967 372.384 174.848 372.396 174.681 372.454 cv
174.554 372.494 174.406 372.617 174.354 372.688 cv
174.27 372.789 174.255 372.826 174.096 372.98 cv
173.941 373.129 173.664 373.363 173.158 373.716 cv
172.967 373.849 172.819 373.937 172.721 373.984 cv
172.616 374.027 li
172.6 374.031 li
172.612 374.105 li
172.612 374.03 li
172.6 374.031 li
172.612 374.105 li
172.612 374.03 li
172.612 374.275 li
172.777 374.099 li
172.612 374.03 li
172.612 374.275 li
172.777 374.099 li
172.659 374.224 li
172.806 374.134 li
172.777 374.099 li
172.659 374.224 li
172.806 374.134 li
172.794 374.141 li
172.807 374.135 li
172.806 374.134 li
172.794 374.141 li
172.807 374.135 li
172.797 374.123 172.761 374.001 172.73 373.831 cv
172.63 373.323 172.477 372.357 171.572 371.638 cv
170.099 370.473 168.805 367.941 168.189 365.944 cv
167.553 363.908 167.406 362.788 167.404 361.514 cv
167.403 361.264 167.473 360.865 167.597 360.399 cv
167.968 358.988 168.789 356.967 169.168 355.256 cv
169.347 354.43 169.45 353.952 169.522 353.798 cv
169.541 353.759 li
169.547 353.75 li
169.438 353.669 li
169.482 353.795 li
169.547 353.75 li
169.438 353.669 li
169.482 353.795 li
169.467 353.752 li
169.477 353.796 li
169.482 353.795 li
169.467 353.752 li
169.477 353.796 li
169.568 353.791 li
169.7 353.79 169.95 353.813 170.292 353.813 cv
170.997 353.812 171.627 353.686 172.13 353.332 cv
172.636 352.978 172.944 352.391 173.008 351.698 cv
173.026 351.644 li
173.036 351.628 173.137 351.566 173.337 351.534 cv
173.534 351.5 173.808 351.489 174.112 351.489 cv
174.344 351.489 174.595 351.494 174.852 351.495 cv
175.492 351.489 176.168 351.477 176.765 351.176 cv
176.824 351.145 176.888 351.129 176.979 351.129 cv
177.158 351.126 177.437 351.214 177.735 351.383 cv
178.183 351.634 178.663 352.041 179.018 352.383 cv
179.196 352.554 179.344 352.709 179.446 352.82 cv
179.564 352.949 li
179.602 352.993 li
179.763 353.181 li
180.01 353.167 li
179.982 352.668 li
cp
0 0 0 .4 cmyk
f
321.872 360.385 mo
321.872 363.276 325.728 365.623 330.482 365.623 cv
335.239 365.623 339.092 363.276 339.092 360.385 cv
339.092 357.494 335.239 355.148 330.482 355.148 cv
325.728 355.148 321.872 357.494 321.872 360.385 cv
0 0 0 1 cmyk
f
319.261 387.089 mo
308.23 357.639 li
307.293 357.99 li
318.325 387.44 li
f
328.34 365.418 mo
318.709 386.779 li
294.944 386.779 li
294.944 387.779 li
319.355 387.779 li
329.457 365.373 li
328.546 364.962 li
cp
f
188.584 356.934 mo
188.584 357.918 189.898 358.718 191.519 358.718 cv
193.14 358.718 194.454 357.918 194.454 356.934 cv
194.454 355.948 193.14 355.148 191.519 355.148 cv
189.898 355.148 188.584 355.948 188.584 356.934 cv
f
188.012 365.944 mo
185.129 356.783 li
184.175 357.084 li
187.058 366.244 li
f
190.489 358.512 mo
187.293 365.599 li
183.547 365.599 li
183.547 366.599 li
187.939 366.599 li
191.606 358.468 li
190.695 358.056 li
cp
f
175.445 356.934 mo
175.445 357.918 174.131 358.718 172.511 358.718 cv
170.89 358.718 169.576 357.918 169.576 356.934 cv
169.576 355.948 170.89 355.148 172.511 355.148 cv
174.131 355.148 175.445 355.948 175.445 356.934 cv
f
176.972 366.244 mo
179.854 357.084 li
178.9 356.783 li
176.018 365.944 li
f
172.63 358.923 mo
176.091 366.599 li
180.482 366.599 li
180.482 365.599 li
176.737 365.599 li
173.336 358.056 li
172.424 358.467 li
cp
f
85.3188 6.45361 mo
85.3188 102.284 li
0 0 0 0 cmyk
f
84.8188 6.45361 mo
84.8188 102.284 li
85.8188 102.284 li
85.8188 6.45361 li
0 0 0 1 cmyk
f
85.3188 112.779 mo
85.3188 309.764 li
0 0 0 0 cmyk
f
84.8188 112.779 mo
84.8188 309.764 li
85.8188 309.764 li
85.8188 112.779 li
0 0 0 1 cmyk
f
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginAVAFNQ+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B7361F02565A2847C0BACC3FC3DBCA2AB7> |-/colon <1C60D8A8C9B854D0DD5F866E4F44EC260CFA4AAEB17CBEFD4A0038244B97D7A560E95A32> |-/H <1C60D8A8C9B6079F62EB0118C852A105FA7C8BF6E6C135E413B5042633AD275F8C347ACCC5B2EDBBBE16A4E3BB> |-/I <1C60D8A8C9B869C1622DF13404AFBF404E77BA2A5B38FA> |-/S <1C60D8A8C9B67DB58789F51595DCF90BBB2B674A76ABEF9D3D99EDAA9A938BC68ADD5BEE2127863866D61B9300DF3B85FEC013588736057136A85174EDF694645A60BB146B9F318FBA70B24445023BC05CF20E83A6623DCF831D8ECC6A24C62AF958CD06AA90FBFDB74C8EC0BF0BE4C00D0D4E79EE653DED50EF7F30AE97D9038F7C9B094876F1EA3755148F1F43647E5C429D294D6460D6F25919A9AE918BA7D5BE3BFC9FBA263E097CBE1F74B9382A78B835574F3EFF81AE06434B3662B15A1136B409583A42C5AAD7891A0F68572F64C075A65E754AF812C6961647E04F7CA02060CB99A000061C8DBDD93F8BCDE1317C9A0906C52352E462B3C4169E2E84CD2AC06D8A9597BE6A0AB9162239A1995D98012687D0DB7364CADA4388EF51A11DEE0DD68697F61E8AD620A382C9CB4BBCF3CA6573D44C597320828A6E0659B7BFDA6A4AB3AC1FE485D254A9F85A14C6D3D2730D15> |-/b <1C60D8A8C9B7CA642A857FF686DAD32159D2062D315BAE64CA93EF1212355EFAB4F941555B5DFAB7E0DB0EBF46BE5BF626774D21301A61767603A7E3329B266AFD95FB042C48D7AE0B1A71A7EED73B6176B23BA998C159682DFBC00411691AA93E78AB65E3372C26F4D7044205C631873E483D3E3BA629E30A9A3C20C4809EFACF36AF57B98376D998D6ABB8B51847B3330B970A6221D0809489D7BECE0F0DB6ACFB1C3A488D53353A8ED082E46638E7D240A3DFDAF00CC8B0547D72F3135993BEB0D010B2D0EC536A2AB8507EC8943842ED13D1AB4B8CD501693498E78B9888FFCBD2267148C5E484C853F2C630DDA6E7C737AC97> |-/f <1C60D8A8C9B8425701F9C9038E59CB2C58F503EA569DF0365457A7586EF99D1302CD268628AE6153CD99072FDD60FA02C7AC392298E82EDA8D36342D070A06EC22DC63DCE2FC770E0EC270D7B25F2B1725D04D2FF6D144576F34FC23A1E6> |-/g <1C60D8A8C9B7FD84950EF8BFBDCDE7CBD4F87E3C30345FE5BE39EB528D4316C6168698F38A0490D24000538A6A6E021802168DE74172C000571E5ABA506BD1736523D6C8158464C76F177854D828AD9E7DFC10FA568A7DC39E1F2DD93F52ACFBA111CE4DF746FE47F28A42FBF5AF88CA5AE78F8399225C9769A032F2842F653F372DAD8CA2E74794FF93F1822152CE160530BBCC9345318BFEA3A088341B284DCFD987279D7E9B9C7486BDE2F037BD268BFE3768E5BB08F848F5DBDDE288E6B4A57054124B4F86CC4CCDE4451A5C86E4077AA5968C73216E3A588AE416E0709AF36D4E19CE459B51414B15FF8D053B35761D2CC110387D3E2906A961B3B069AC96DB8CAB62B7778F7BD53CCF3A3D2851D533887D1E2FAFD606AEC300EA40C1770F6EA99E8D9BB94576BA39FB0C5FF925CAC815600E001556CA8073ECDFECF74135290D16594F8A0C215A> |-/v <1C60D8A8C9B7A73DB9473C9211908C7A52640D514AEA40364377D9E8236E7C741EFC5642D04359> |-/w <1C60D8A8C9B6EB66DCC09F9AE573CD6DDE0A4875ABFACE255A9F7E57619A2AB011A573CADC678761C9C6B80037DE955D306532A7FCDA465570C90D30F35DA916> |-systemdict /gcheck known {setglobal} if end {end} ifendAVAFNQ+HelveticaNeue /Encoding getdup 45 /hyphen putdup 58 /colon putdup 72 /H putdup 73 /I putdup 83 /S putdup 98 /b putdup 102 /f putdup 103 /g putdup 118 /v putdup 119 /w putpop%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /.notdef /slash 10{/.notdef}rp /colon 6{/.notdef}rp /A /B 5{/.notdef}rp /H /I 3{/.notdef}rp /M /N /.notdef /P /.notdef /R /S 13{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf24.4385 188.822 mo(M)sh31.2915 188.822 mo(e)sh35.6279 188.822 mo(c)sh39.9023 188.822 mo(h)sh44.3086 188.822 mo(a)sh48.6138 188.822 mo(n)sh53.02 188.822 mo(o)sh57.6895 188.822 mo(-)sh24.4385 198.115 mo(s)sh28.4346 198.115 mo(e)sh32.7554 198.115 mo(n)sh37.1851 198.115 mo(s)sh41.1885 198.115 mo(o)sh45.7729 198.115 mo(r)sh48.7075 198.115 mo(y)sh24.4385 207.408 mo(d)sh29.1387 207.408 mo(a )[4.1582 0 ]xsh35.4497 207.408 mo(N)sh41.1646 207.408 mo(e)sh45.4697 207.408 mo(u)sh49.8994 207.408 mo(r)sh52.5786 207.408 mo(o)sh57.1475 207.408 mo(n)sh61.5693 207.408 mo(s)sh24.4385 216.7 mo(i)sh26.2583 216.7 mo(n )[4.30566 0 ]xsh32.7168 216.7 mo(b)sh37.4556 216.7 mo(o)sh42.0244 216.7 mo(d)sh46.7324 216.7 mo(y w)sh58.627 216.7 mo(a)sh62.9248 216.7 mo(l)sh64.729 216.7 mo(l)sh24.4385 225.993 mo(o)sh28.9219 225.993 mo(f )[2.29199 0 ]xsh33.3667 225.993 mo(l)sh35.2021 225.993 mo(a)sh39.5151 225.993 mo(r)sh42.4268 225.993 mo(v)sh46.2915 225.993 mo(a)sh21.5576 376.449 mo(M)sh28.395 376.449 mo(u)sh32.8325 376.449 mo(s)sh36.8438 376.449 mo(h)sh41.2578 376.449 mo(r)sh43.9375 376.449 mo(oo)[4.57617 0 ]xsh53.0903 376.449 mo(m)sh21.5576 385.741 mo(Bo)[5.42871 0 ]xsh31.5547 385.741 mo(d)sh36.2627 385.741 mo(y)sh21.5576 395.034 mo(N)sh27.2725 395.034 mo(e)sh31.5776 395.034 mo(u)sh35.9995 395.034 mo(r)sh38.6787 395.034 mo(on)[4.56885 0 ]xsh47.6772 395.034 mo(s)sh21.5576 404.327 mo(o)sh26.041 404.327 mo(f )[2.29199 0 ]xsh30.4858 404.327 mo(d)sh35.186 404.327 mo(e)sh39.3599 404.327 mo(v)sh43.2012 404.327 mo(e)sh47.5142 404.327 mo(lop)[1.83545 4.56104 0 ]xsh58.6182 404.327 mo(i)sh60.4385 404.327 mo(n)sh64.8604 404.327 mo(g)sh21.5576 413.619 mo(br)[4.73096 0 ]xsh29.0068 413.619 mo(a)sh33.2969 413.619 mo(i)sh35.1167 413.619 mo(n)sh21.5576 422.912 mo(i)sh23.3774 422.912 mo(n )[4.30566 0 ]xsh29.8359 422.912 mo(P)sh34.8696 422.912 mo(u)sh39.2759 422.912 mo(p)sh43.9761 422.912 mo(a)sh9.36133 47.3652 mo(H)sh15.0684 47.3652 mo(e)sh19.3896 47.3652 mo(m)sh26.1187 47.3652 mo(o)sh30.7109 47.3652 mo(c)sh34.9312 47.3652 mo(y)sh39.1206 47.3652 mo(t)sh41.5522 47.3652 mo(e )[4.1582 0 ]xsh47.8633 47.3652 mo(c)sh52.1533 47.3652 mo(e)sh56.459 47.3652 mo(l)sh58.2632 47.3652 mo(l)sh60.1216 47.3652 mo(s of )[3.87207 2.15234 4.44531 2.29199 0 ]xsh15.8271 56.6577 mo(I)sh17.9253 56.6577 mo(m)sh24.6392 56.6577 mo(m)sh31.3457 56.6577 mo(un)[4.41406 0 ]xsh40.1738 56.6577 mo(e )[4.1582 0 ]xsh46.4849 56.6577 mo(S)sh51.6187 56.6577 mo(y)sh55.5762 56.6577 mo(s)sh59.5566 56.6577 mo(t)sh61.9883 56.6577 mo(e)sh66.3091 56.6577 mo(m)sh72.8838 56.6577 mo(:)shgsave
0 0 mo
383 0 li
383 497.868 li
0 497.868 li
0 0 li
clp
220.433 56.0649 mo
223.923 61.105 li
224.745 60.5357 li
221.255 55.4956 li
1 0 1 0 cmyk
f
259.165 83.1379 mo
259.169 83.146 259.523 83.8519 260.024 84.6678 cv
260.535 85.4867 261.155 86.404 261.844 86.9029 cv
262.166 87.1299 262.541 87.2018 262.902 87.2017 cv
263.657 87.196 264.451 86.9136 265.206 86.656 cv
265.949 86.3925 266.667 86.1567 267.034 86.1654 cv
267.134 86.171 li
267.137 86.1714 li
267.135 86.1712 li
267.586 86.2216 268.071 86.5259 268.427 86.9094 cv
268.605 87.0988 268.75 87.304 268.846 87.4842 cv
268.942 87.6624 268.982 87.822 268.981 87.872 cv
268.979 87.8266 li
268.981 87.8717 li
268.981 87.8903 li
268.983 87.993 268.95 88.219 268.888 88.4962 cv
268.705 89.3406 268.291 90.6819 268.106 91.9993 cv
268.004 92.7371 267.92 93.4922 267.92 94.2167 cv
267.923 95.1975 268.067 96.1432 268.612 96.8927 cv
268.756 97.0842 268.931 97.2025 269.133 97.317 cv
269.832 97.6984 270.972 97.992 272.263 98.2238 cv
273.549 98.4504 274.96 98.5941 276.115 98.5945 cv
276.623 98.5943 277.082 98.5671 277.473 98.5007 cv
277.864 98.4267 278.19 98.3459 278.476 98.091 cv
278.477 98.0903 li
278.777 97.8025 279.136 97.33 279.555 96.7468 cv
280.176 95.8767 280.893 94.7827 281.469 93.9058 cv
281.756 93.4678 282.008 93.0839 282.191 92.8146 cv
282.282 92.6805 282.357 92.574 282.405 92.5104 cv
282.446 92.4582 li
282.238 92.27 li
282.416 92.4859 li
282.446 92.4582 li
282.238 92.27 li
282.416 92.4859 li
282.131 92.1408 li
282.346 92.5333 li
282.416 92.4859 li
282.131 92.1408 li
282.346 92.5333 li
282.112 92.1057 li
282.112 92.593 li
282.246 92.5895 282.306 92.5524 282.346 92.5333 cv
282.112 92.1057 li
282.112 92.593 li
282.112 92.0977 li
281.938 92.5614 li
282.112 92.593 li
282.112 92.0977 li
281.938 92.5614 li
281.942 92.5629 li
281.946 92.5645 li
282.051 92.5974 282.064 92.5902 282.099 92.5959 cv
282.18 92.6026 282.264 92.6031 282.384 92.6035 cv
283.097 92.6033 284.851 92.5402 284.855 92.5402 cv
284.819 91.5408 li
284.818 91.5409 284.38 91.5565 283.855 91.5722 cv
283.331 91.5879 282.717 91.6035 282.384 91.6034 cv
282.218 91.6014 li
282.187 91.5999 li
282.153 91.9799 li
282.28 91.622 li
282.186 91.5928 282.193 91.603 282.187 91.5999 cv
282.153 91.9799 li
282.28 91.622 li
282.113 92.0933 li
282.289 91.6251 li
282.112 91.593 li
281.929 91.6013 281.873 91.6559 281.828 91.679 cv
281.705 91.7868 li
281.62 91.8831 281.544 91.9917 281.429 92.1581 cv
281.038 92.7259 280.318 93.849 279.592 94.9309 cv
279.229 95.471 278.865 95.9995 278.546 96.4356 cv
278.229 96.8697 277.944 97.2195 277.789 97.3647 cv
277.789 97.364 li
277.762 97.3821 li
277.689 97.4268 277.474 97.4953 277.185 97.5334 cv
276.895 97.5741 276.527 97.5947 276.115 97.5945 cv
274.888 97.5952 273.272 97.4143 271.918 97.1412 cv
271.242 97.0052 270.628 96.8454 270.17 96.6814 cv
269.941 96.5998 269.751 96.5166 269.618 96.4426 cv
269.466 96.3448 li
269.418 96.3008 li
269.07 95.8355 268.918 95.0996 268.92 94.2167 cv
268.92 93.5698 268.997 92.8548 269.097 92.1371 cv
269.209 91.3312 269.424 90.4787 269.614 89.7346 cv
269.709 89.362 269.798 89.0164 269.865 88.7099 cv
269.931 88.4012 269.979 88.1397 269.981 87.8903 cv
269.98 87.8392 li
269.982 87.8847 li
269.98 87.8389 li
269.968 87.5503 269.87 87.2867 269.729 87.016 cv
269.515 86.6138 269.188 86.2058 268.77 85.8645 cv
268.353 85.5258 267.842 85.2511 267.256 85.1785 cv
267.254 85.1783 li
267.257 85.1786 li
267.034 85.1654 li
266.356 85.1742 265.629 85.4565 264.878 85.7111 cv
264.138 85.9717 263.388 86.2073 262.902 86.2017 cv
262.668 86.2015 262.516 86.1544 262.422 86.0864 cv
261.985 85.7894 261.344 84.9164 260.876 84.1439 cv
260.638 83.7564 260.432 83.3907 260.287 83.1232 cv
260.215 82.9895 260.157 82.8802 260.118 82.8049 cv
260.059 82.6902 li
259.165 83.138 li
cp
.55 .6 .65 .4 cmyk
f
263.369 75.5109 mo
264.172 75.189 265.056 74.5062 266.024 73.8732 cv
266.982 73.2376 268.002 72.6684 268.874 72.5502 cv
269.123 72.5319 li
269.462 72.535 269.713 72.6301 269.981 72.8329 cv
270.381 73.1355 270.778 73.7273 271.189 74.5144 cv
271.603 75.2997 272.038 76.2682 272.59 77.3052 cv
273.349 78.7318 273.834 79.777 274.361 80.6147 cv
274.882 81.4503 275.481 82.0868 276.375 82.5491 cv
276.61 82.6724 276.868 82.7218 277.118 82.7214 cv
277.683 82.7166 278.234 82.4989 278.804 82.2133 cv
279.655 81.7806 280.548 81.1615 281.359 80.66 cv
281.763 80.4094 282.145 80.189 282.475 80.0383 cv
282.803 79.8856 283.082 79.8124 283.236 79.8155 cv
283.362 79.8333 li
283.695 78.8903 li
283.543 78.8368 283.388 78.8155 283.236 78.8155 cv
282.704 78.8227 282.201 79.0444 281.658 79.3283 cv
280.851 79.7597 279.973 80.3752 279.147 80.8742 cv
278.735 81.1235 278.338 81.3428 277.986 81.4937 cv
277.634 81.6461 277.326 81.7234 277.118 81.7214 cv
276.993 81.721 276.907 81.6987 276.838 81.6628 cv
276.109 81.277 275.685 80.8332 275.207 80.0817 cv
274.733 79.3324 274.242 78.2838 273.473 76.8355 cv
272.76 75.4993 272.236 74.243 271.631 73.2677 cv
271.327 72.7805 271.001 72.3575 270.592 72.0409 cv
270.185 71.7238 269.681 71.5289 269.123 71.5319 cv
268.996 71.5319 268.866 71.5414 268.734 71.5601 cv
267.57 71.7305 266.47 72.3859 265.474 73.0381 cv
264.486 73.6927 263.58 74.3608 263.004 74.5799 cv
263.369 75.5109 li
cp
f
256.417 82.7412 mo
256.588 82.2714 li
224.639 70.6415 li
222.605 69.9028 221.344 67.9806 221.343 65.9356 cv
221.343 65.3681 221.44 64.7915 221.646 64.226 cv
221.636 64.2521 li
221.646 64.2262 li
222.385 62.1939 224.306 60.9329 226.35 60.9324 cv
226.918 60.9325 227.495 61.0296 228.061 61.2355 cv
260.012 72.8644 li
262.045 73.6041 263.307 75.5237 263.307 77.5682 cv
263.307 78.1362 263.21 78.7136 263.004 79.2803 cv
262.265 81.3126 260.344 82.574 258.299 82.5745 cv
257.731 82.5745 257.154 82.4773 256.588 82.2713 cv
256.417 82.7412 li
256.246 83.2111 li
256.923 83.4573 257.617 83.5746 258.299 83.5745 cv
260.753 83.575 263.055 82.0601 263.943 79.6222 cv
264.19 78.945 264.307 78.2505 264.307 77.5682 cv
264.308 75.1142 262.792 72.8134 260.354 71.9247 cv
228.403 60.2958 li
227.727 60.0496 227.033 59.9324 226.35 59.9324 cv
223.897 59.9319 221.594 61.4461 220.706 63.8841 cv
220.706 63.8844 li
220.46 64.5604 220.343 65.254 220.343 65.9356 cv
220.343 68.3897 221.857 70.6933 224.297 71.5812 cv
256.246 83.211 li
256.417 82.7412 li
cp
f
161.906 47.3706 mo
161.906 51.0137 166.183 53.9658 171.458 53.9658 cv
176.732 53.9658 181.009 51.0137 181.009 47.3706 cv
181.009 43.728 176.732 40.7759 171.458 40.7759 cv
166.183 40.7759 161.906 43.728 161.906 47.3706 cv
0 0 0 1 cmyk
f
189.815 29.5234 mo
189.693 29.0385 li
164.673 35.3305 li
164.795 35.8154 li
164.761 35.3166 li
164.735 35.3197 161.196 35.5604 157.607 36.8579 cv
155.813 37.5088 154.001 38.4229 152.609 39.7406 cv
151.217 41.0528 150.255 42.8071 150.26 45.0112 cv
150.257 53.337 152.717 57.8066 153.731 59.3246 cv
153.767 59.3769 153.8 59.4743 153.8 59.668 cv
153.811 60.1779 153.524 61.1383 153.52 62.3483 cv
153.517 63.5058 153.803 64.9167 154.848 66.4682 cv
155.892 68.0223 157.676 69.7239 160.66 71.5721 cv
165.727 74.7092 167.943 76.502 169.952 77.9089 cv
171.963 79.32 173.766 80.3254 177.83 81.7816 cv
182.146 83.3247 189.915 84.1699 197.331 84.1738 cv
200.763 84.1737 204.112 83.9898 206.998 83.5988 cv
209.885 83.2047 212.301 82.6165 213.916 81.7513 cv
215.256 81.0315 216.158 80.0575 216.704 78.9778 cv
217.252 77.8981 217.451 76.7254 217.451 75.5879 cv
217.442 72.1778 215.705 69.0094 215.692 68.9728 cv
215.67 68.9336 li
205.946 56.7567 li
221.478 48.4532 li
234.468 52.3019 li
234.59 52.2772 li
234.643 52.2672 li
234.905 52.2189 236.113 52.0149 237.732 52.0151 cv
239.311 52.0145 241.278 52.2105 243.133 52.9153 cv
244.991 53.6223 246.73 54.8203 247.937 56.854 cv
249.957 60.2637 251.174 62.1014 252.155 63.3463 cv
253.138 64.5928 253.877 65.2287 254.874 66.1842 cv
255.504 66.7659 256.499 67.0295 257.758 67.2257 cv
259.016 67.411 260.534 67.4809 262.135 67.4812 cv
265.999 67.4807 270.333 67.07 272.412 66.803 cv
274.223 66.5641 275.458 66.8163 276.724 66.5536 cv
277.354 66.4193 277.972 66.1259 278.56 65.5879 cv
279.15 65.0502 279.723 64.2816 280.358 63.1664 cv
280.963 62.107 281.428 61.5441 281.822 61.1056 cv
282.116 60.7769 282.387 60.5101 282.64 60.1543 cv
283.023 59.6162 283.299 58.93 283.52 57.7105 cv
283.743 56.4849 283.927 54.6881 284.128 51.822 cv
284.206 50.7011 284.249 49.5735 284.249 48.4485 cv
284.248 43.8624 283.54 39.3149 281.621 35.4457 cv
279.706 31.5772 276.554 28.3983 271.767 26.6345 cv
266.457 24.6752 258.021 22.9843 250.526 21.7101 cv
243.038 20.4386 236.484 19.5886 235.057 19.3505 cv
233.793 19.1405 229.61 18.2514 224.867 17.4184 cv
220.116 16.5852 214.799 15.8024 211.15 15.8009 cv
210.244 15.8012 209.438 15.8491 208.757 15.9624 cv
205.834 16.4505 203.176 17.059 200.989 18.0581 cv
198.805 19.0539 197.072 20.4673 196.124 22.5392 cv
195.294 24.3591 193.652 26.0196 192.213 27.2016 cv
191.494 27.7937 190.828 28.2687 190.343 28.5941 cv
190.101 28.7569 189.904 28.8823 189.769 28.9665 cv
189.633 29.0506 189.564 29.0911 189.563 29.0913 cv
189.815 29.5234 li
189.693 29.0385 li
189.815 29.5234 li
190.066 29.9556 li
190.082 29.9463 191.349 29.2089 192.849 27.9735 cv
194.348 26.7355 196.088 25.0081 197.033 22.956 cv
197.86 21.1563 199.354 19.9078 201.404 18.9675 cv
203.451 18.0306 206.036 17.4289 208.921 16.9488 cv
209.521 16.8485 210.28 16.8007 211.15 16.8009 cv
214.666 16.7994 219.97 17.5728 224.694 18.4034 cv
229.426 19.2342 233.572 20.1165 234.892 20.337 cv
236.37 20.5828 242.883 21.4266 250.358 22.696 cv
257.825 23.9627 266.247 25.6598 271.421 27.5725 cv
275.972 29.2578 278.898 32.2161 280.726 35.8902 cv
282.55 39.5637 283.25 43.9641 283.249 48.4485 cv
283.249 49.5481 283.207 50.6526 283.13 51.7521 cv
282.953 54.2868 282.788 55.9715 282.605 57.1237 cv
282.469 57.988 282.322 58.5489 282.164 58.9433 cv
281.926 59.5299 281.677 59.7816 281.231 60.2695 cv
280.788 60.7504 280.204 61.4136 279.489 62.6714 cv
278.885 63.7342 278.361 64.4177 277.887 64.8481 cv
277.173 65.4849 276.593 65.6199 275.721 65.6716 cv
274.858 65.7165 273.749 65.6237 272.285 65.8112 cv
270.248 66.0735 265.928 66.4816 262.135 66.4811 cv
260.565 66.4814 259.083 66.4108 257.904 66.2364 cv
256.727 66.0729 255.85 65.7575 255.566 65.4623 cv
254.543 64.4817 253.872 63.9077 252.94 62.7272 cv
252.008 61.5451 250.808 59.7387 248.797 56.3443 cv
247.461 54.0865 245.502 52.7425 243.488 51.9804 cv
241.471 51.2161 239.392 51.0158 237.732 51.0151 cv
235.787 51.0154 234.415 51.2927 234.392 51.2971 cv
234.491 51.7871 li
234.633 51.3077 li
221.368 47.3778 li
204.415 56.4415 li
214.861 69.5229 li
215.252 69.2109 li
214.812 69.4491 li
214.879 69.5772 li
215.19 70.1857 216.457 72.9018 216.451 75.5879 cv
216.451 76.611 216.271 77.6222 215.813 78.5251 cv
215.352 79.428 214.618 80.2353 213.442 80.8708 cv
212.031 81.6346 209.686 82.2278 206.863 82.6078 cv
204.038 82.991 200.726 83.1739 197.331 83.1738 cv
190.004 83.1777 182.254 82.3124 178.168 80.8404 cv
174.14 79.3923 172.488 78.4618 170.525 77.0898 cv
168.56 75.7138 166.284 73.8768 161.187 70.7218 cv
158.282 68.9243 156.614 67.3053 155.678 65.9108 cv
154.744 64.5138 154.523 63.3481 154.52 62.3483 cv
154.516 61.2897 154.79 60.445 154.8 59.668 cv
154.8 59.3719 154.752 59.0545 154.563 58.77 cv
153.642 57.3838 151.262 53.1415 151.26 45.0112 cv
151.264 43.1016 152.057 41.6495 153.297 40.4662 cv
155.155 38.6965 158.048 37.6313 160.473 37.0413 cv
161.685 36.7445 162.779 36.5621 163.568 36.4544 cv
163.962 36.4006 164.28 36.3653 164.498 36.3437 cv
164.716 36.322 164.829 36.3144 164.83 36.3142 cv
164.874 36.3112 li
190.005 29.9911 li
190.066 29.9556 li
189.815 29.5234 li
cp
1 0 0 0 cmyk
f
179.654 212.786 mo
215.754 212.786 li
216.03 212.786 216.254 212.562 216.254 212.286 cv
216.254 212.009 216.03 211.786 215.754 211.786 cv
179.654 211.786 li
179.378 211.786 179.154 212.009 179.154 212.286 cv
179.154 212.562 179.378 212.786 179.654 212.786 cv
0 0 0 1 cmyk
f
grestore
0 1 1 0 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginAVAFNQ+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF322BB630272B923963DE8E37724AA571296AF60D1BBC27C2CB1B875AEF91C6D90A9F430B230D6F17F95C57BD52BEC7> |-/D <1C60D8A8C9B635A4ABABB23E9D515BDD0F89286EFD1EBF07654AFD66CF3242CD0D63E072019FD4BD8F3CD13251170FCCAA451F8167EB0E1829A540E43DA7914FD378433FF4020CA0D3FD343F64EFD74B98C5DCF73424FA7B6A961328CC612A579ADB868A6E555DAD10A9655B63B5C7162C073238EE2879AA4DD746F12E16E830524A721CAC3A3C5205C9AA4AC1F052427092> |-systemdict /gcheck known {setglobal} if end {end} ifendAVAFNQ+HelveticaNeue /Encoding getdup 49 /one putdup 68 /D putpop%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /.notdef /slash /.notdef /one 8{/.notdef}rp /colon 6{/.notdef}rp /A /B /.notdef /D 3{/.notdef}rp /H /I 3{/.notdef}rp /M /N /.notdef /P /.notdef /R /S 13{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf274.812 374.67 mo(D)sh280.419 374.67 mo(s)sh284.414 374.67 mo(c)sh288.704 374.67 mo(a)sh293.01 374.67 mo(m)sh299.313 374.67 mo(1)sh176.512 253.115 mo(D)sh182.118 253.115 mo(sc)[4.00391 0 ]xsh190.412 253.115 mo(a)sh194.717 253.115 mo(m)sh201.029 253.115 mo(1)shgsave
0 0 mo
383 0 li
383 497.868 li
0 497.868 li
0 0 li
clp
325.523 206.945 mo
325.523 253.263 316.31 290.81 304.945 290.81 cv
293.579 290.81 284.367 253.263 284.367 206.945 cv
284.367 160.628 293.579 123.08 304.945 123.08 cv
316.31 123.08 325.523 160.628 325.523 206.945 cv
0 0 0 0 cmyk
f
325.523 206.945 mo
325.023 206.945 li
325.024 230.07 322.721 251.007 319.01 266.127 cv
317.157 273.686 314.947 279.792 312.522 283.968 cv
311.312 286.056 310.048 287.659 308.772 288.722 cv
307.493 289.786 306.224 290.309 304.945 290.31 cv
303.667 290.309 302.397 289.786 301.118 288.722 cv
298.882 286.863 296.698 283.344 294.738 278.481 cv
288.839 263.886 284.863 237.293 284.867 206.945 cv
284.867 183.821 287.169 162.884 290.88 147.763 cv
292.733 140.203 294.943 134.097 297.367 129.921 cv
298.578 127.833 299.842 126.23 301.118 125.167 cv
302.397 124.103 303.667 123.58 304.945 123.58 cv
306.224 123.58 307.493 124.103 308.772 125.167 cv
311.008 127.026 313.192 130.545 315.152 135.408 cv
321.051 150.004 325.027 176.598 325.023 206.945 cv
325.523 206.945 li
326.023 206.945 li
326.023 183.753 323.719 162.757 319.982 147.524 cv
318.111 139.907 315.887 133.731 313.387 129.419 cv
312.136 127.264 310.816 125.571 309.413 124.399 cv
308.012 123.23 306.508 122.579 304.945 122.58 cv
303.382 122.579 301.878 123.23 300.478 124.399 cv
298.025 126.451 295.81 130.091 293.811 135.034 cv
287.83 149.857 283.871 176.501 283.867 206.945 cv
283.868 230.138 286.172 251.134 289.908 266.366 cv
291.778 273.983 294.003 280.159 296.502 284.47 cv
297.754 286.626 299.074 288.318 300.478 289.49 cv
301.878 290.659 303.382 291.31 304.945 291.31 cv
306.508 291.31 308.012 290.659 309.413 289.49 cv
311.865 287.438 314.079 283.798 316.079 278.856 cv
322.06 264.033 326.02 237.389 326.023 206.945 cv
325.523 206.945 li
cp
0 0 0 1 cmyk
f
150.475 206.945 mo
150.475 253.263 141.261 290.81 129.897 290.81 cv
118.532 290.81 109.318 253.263 109.318 206.945 cv
109.318 160.628 118.532 123.08 129.897 123.08 cv
141.261 123.08 150.475 160.628 150.475 206.945 cv
0 0 0 0 cmyk
f
150.475 206.945 mo
149.975 206.945 li
149.975 230.07 147.673 251.007 143.962 266.127 cv
142.108 273.686 139.898 279.792 137.474 283.968 cv
136.264 286.056 135 287.659 133.724 288.722 cv
132.445 289.786 131.176 290.309 129.897 290.31 cv
128.619 290.309 127.349 289.786 126.07 288.722 cv
123.834 286.863 121.65 283.344 119.69 278.481 cv
113.791 263.886 109.815 237.293 109.818 206.945 cv
109.818 183.821 112.12 162.884 115.831 147.763 cv
117.685 140.203 119.895 134.097 122.32 129.921 cv
123.53 127.833 124.794 126.23 126.07 125.167 cv
127.349 124.103 128.619 123.58 129.897 123.58 cv
131.176 123.58 132.445 124.103 133.724 125.167 cv
135.96 127.026 138.144 130.545 140.104 135.408 cv
146.002 150.004 149.978 176.598 149.975 206.945 cv
150.475 206.945 li
150.975 206.945 li
150.974 183.753 148.67 162.757 144.933 147.524 cv
143.063 139.907 140.839 133.731 138.339 129.419 cv
137.088 127.264 135.768 125.571 134.365 124.399 cv
132.964 123.23 131.46 122.579 129.897 122.58 cv
128.335 122.579 126.83 123.23 125.43 124.399 cv
122.977 126.451 120.763 130.091 118.763 135.034 cv
112.782 149.857 108.822 176.501 108.818 206.945 cv
108.819 230.138 111.123 251.134 114.86 266.366 cv
116.73 273.983 118.955 280.159 121.455 284.47 cv
122.706 286.626 124.026 288.318 125.43 289.49 cv
126.83 290.66 128.335 291.31 129.897 291.31 cv
131.46 291.31 132.964 290.659 134.365 289.49 cv
136.817 287.438 139.031 283.798 141.031 278.856 cv
147.011 264.033 150.971 237.389 150.975 206.945 cv
150.475 206.945 li
cp
0 0 0 1 cmyk
f
372.525 272.717 mo
304.945 278.645 li
237.365 272.717 li
237.365 137.558 li
304.945 132.085 li
372.525 137.558 li
372.525 272.717 li
cp
0 0 0 0 cmyk
f
372.525 272.717 mo
372.482 272.219 li
304.945 278.143 li
237.865 272.259 li
237.865 138.019 li
304.945 132.587 li
372.025 138.019 li
372.025 272.717 li
372.525 272.717 li
372.482 272.219 li
372.525 272.717 li
373.025 272.717 li
373.025 137.096 li
304.945 131.583 li
236.865 137.096 li
236.865 273.175 li
304.945 279.146 li
373.025 273.175 li
373.025 272.717 li
372.525 272.717 li
cp
0 0 0 1 cmyk
f
299.684 288.426 mo
299.684 289.156 299.091 289.748 298.359 289.748 cv
297.629 289.748 297.036 289.156 297.036 288.426 cv
297.036 287.694 297.629 287.103 298.359 287.103 cv
299.091 287.103 299.684 287.694 299.684 288.426 cv
0 0 0 0 cmyk
f
299.684 288.426 mo
299.184 288.426 li
299.183 288.879 298.815 289.247 298.359 289.248 cv
297.905 289.247 297.537 288.879 297.536 288.426 cv
297.537 287.971 297.905 287.603 298.359 287.603 cv
298.815 287.603 299.183 287.971 299.184 288.426 cv
299.684 288.426 li
300.184 288.426 li
300.183 287.418 299.367 286.603 298.359 286.603 cv
297.353 286.603 296.536 287.418 296.536 288.426 cv
296.537 289.433 297.353 290.248 298.359 290.248 cv
299.366 290.248 300.183 289.433 300.184 288.426 cv
299.684 288.426 li
cp
0 0 0 1 cmyk
f
123.618 288.426 mo
123.618 289.156 123.025 289.748 122.294 289.748 cv
121.563 289.748 120.971 289.156 120.971 288.426 cv
120.971 287.694 121.563 287.103 122.294 287.103 cv
123.025 287.103 123.618 287.694 123.618 288.426 cv
0 0 0 0 cmyk
f
123.618 288.426 mo
123.118 288.426 li
123.117 288.88 122.749 289.247 122.294 289.248 cv
121.839 289.247 121.472 288.88 121.471 288.426 cv
121.472 287.97 121.839 287.603 122.294 287.603 cv
122.749 287.603 123.117 287.97 123.118 288.426 cv
123.618 288.426 li
124.118 288.426 li
124.118 287.418 123.301 286.603 122.294 286.603 cv
121.287 286.603 120.471 287.418 120.471 288.426 cv
120.471 289.433 121.288 290.248 122.294 290.248 cv
123.301 290.248 124.117 289.433 124.118 288.426 cv
123.618 288.426 li
cp
0 0 0 1 cmyk
f
138.25 288.426 mo
138.25 289.156 137.658 289.748 136.926 289.748 cv
136.196 289.748 135.604 289.156 135.604 288.426 cv
135.604 287.694 136.196 287.103 136.926 287.103 cv
137.658 287.103 138.25 287.694 138.25 288.426 cv
0 0 0 0 cmyk
f
138.25 288.426 mo
137.75 288.426 li
137.749 288.88 137.382 289.247 136.926 289.248 cv
136.472 289.247 136.104 288.88 136.104 288.426 cv
136.104 287.97 136.472 287.603 136.926 287.603 cv
137.382 287.603 137.749 287.971 137.75 288.426 cv
138.25 288.426 li
138.75 288.426 li
138.75 287.418 137.934 286.603 136.926 286.603 cv
135.92 286.603 135.104 287.418 135.104 288.426 cv
135.104 289.433 135.92 290.248 136.926 290.248 cv
137.933 290.248 138.75 289.433 138.75 288.426 cv
138.25 288.426 li
cp
0 0 0 1 cmyk
f
313.423 288.426 mo
313.423 289.156 312.83 289.748 312.1 289.748 cv
311.369 289.748 310.776 289.156 310.776 288.426 cv
310.776 287.694 311.369 287.103 312.1 287.103 cv
312.83 287.103 313.423 287.694 313.423 288.426 cv
0 0 0 0 cmyk
f
313.423 288.426 mo
312.923 288.426 li
312.922 288.879 312.554 289.247 312.1 289.248 cv
311.645 289.247 311.277 288.879 311.276 288.426 cv
311.277 287.971 311.645 287.603 312.1 287.603 cv
312.554 287.603 312.922 287.971 312.923 288.426 cv
313.423 288.426 li
313.923 288.426 li
313.923 287.418 313.106 286.603 312.1 286.603 cv
311.093 286.603 310.277 287.418 310.276 288.426 cv
310.277 289.433 311.093 290.248 312.1 290.248 cv
313.106 290.248 313.922 289.433 313.923 288.426 cv
313.423 288.426 li
cp
0 0 0 1 cmyk
f
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginAVAFNQ+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B869C16277829E5B6118DC9B787304F68637F6D323CFFF840595CD8A7861B3F30ED557A8744C0F918E8BC5F0D32A14D0F302DDEFEF3365A59F0754CC782C747D41A2DAD508D86390A3D566195A3FE1556399DE> |-/parenright <1C60D8A8C9B869C172E7BF8A9B7B4F93653847272011E9410EAEFFFA999449059B2E4446CCB9432A7FE2E7C9EF2C51CE2CC00FFD450746E839019CD1A9072CD77BDA6393F24214C6BEE028178931302C7A47E0F75E64CA> |-/T <1C60D8A8C9B7FD84E0290B854AC85AB7047BF3E25C860F1CCA51A05FE39D89FD> |-systemdict /gcheck known {setglobal} if end {end} ifendAVAFNQ+HelveticaNeue /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 84 /T putpop%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef /slash /.notdef /one 8{/.notdef}rp /colon 6{/.notdef}rp /A /B /.notdef /D 3{/.notdef}rp /H /I 3{/.notdef}rp /M /N /.notdef /P /.notdef /R /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [9.77065 0 0 -9.77065 0 0 ]msf144.957 129.713 mo(H)sh152.069 129.713 mo(e)sh157.404 129.713 mo(a)sh162.699 129.713 mo(d )[5.79395 0 ]xsh171.209 129.713 mo(\()sh173.828 129.713 mo(A)sh180.306 129.713 mo(n)sh185.748 129.713 mo(t)sh188.728 129.713 mo(e)sh194.112 129.713 mo(r)sh197.453 129.713 mo(i)sh199.689 129.713 mo(o)sh205.386 129.713 mo(r)sh208.659 129.713 mo(\))sh150.477 294.603 mo(T)sh155.362 294.603 mo(a)sh160.697 294.603 mo(i)sh162.885 294.603 mo(l )[2.16895 0 ]xsh167.771 294.603 mo(\()sh170.379 294.603 mo(P)sh176.603 294.603 mo(o)sh182.29 294.603 mo(s)sh187.224 294.603 mo(t)sh190.204 294.603 mo(e)sh195.587 294.603 mo(r)sh198.919 294.603 mo(i)sh201.146 294.603 mo(o)sh206.843 294.603 mo(r)sh210.116 294.603 mo(\))shgsave
0 0 mo
383 0 li
383 497.868 li
0 497.868 li
0 0 li
clp
129.397 133.893 mo
129.397 280.291 li
130.397 280.291 li
130.397 133.893 li
f
117.375 243.741 mo
117.635 246.807 li
110.5 251.987 li
108.054 254.027 105.986 254.625 104.297 253.783 cv
103.397 253.333 102.329 252.384 102.039 251.407 cv
101.755 250.418 101.852 249.447 102.329 248.492 cv
103.011 247.125 104.07 246.155 105.508 245.583 cv
106.939 245.021 108.267 245.045 109.488 245.655 cv
109.577 245.699 109.873 245.874 110.372 246.179 cv
110.747 246.386 li
110.981 246.531 111.158 246.633 111.28 246.694 cv
112.08 247.093 113.085 246.804 114.295 245.825 cv
114.516 245.659 114.741 245.5 114.968 245.351 cv
117.375 243.741 li
.746 .676 .668 .898 cmyk
f
118.794 248.737 mo
116.854 226.441 li
116.97 226.098 117.041 224.729 117.478 223.27 cv
117.968 221.629 118.661 220.198 120.021 219.003 cv
121.647 244.812 li
121.704 245.617 121.719 246.159 121.69 246.437 cv
121.641 246.869 li
121.519 248.003 121.92 248.798 122.842 249.259 cv
122.992 249.334 li
123.425 249.508 li
124.266 249.866 li
125.817 250.542 126.876 252.089 127.444 254.51 cv
128.023 256.937 127.842 259.094 126.899 260.982 cv
126.422 261.938 125.793 262.603 125.01 262.975 cv
124.216 263.341 122.026 263.814 121.282 263.442 cv
120.316 262.961 119.712 261.474 119.471 258.98 cv
119.471 258.98 118.96 248.792 118.794 248.737 cv
f
122.546 243.846 mo
122.294 240.515 li
129.685 235.6 li
129.779 239.591 li
122.546 243.846 li
cp
f
108.006 251.332 mo
108.712 250.794 li
109.332 250.304 109.741 249.86 109.939 249.462 cv
110.327 248.688 109.978 248.028 108.891 247.485 cv
108.095 247.089 107.184 247.082 106.156 247.465 cv
105.129 247.85 104.4 248.473 103.97 249.336 cv
103.712 249.851 103.67 250.386 103.839 250.944 cv
104.015 251.491 104.35 251.888 104.844 252.135 cv
105.668 252.547 106.723 252.279 108.006 251.332 cv
0 0 0 0 cmyk
f
121.314 259.237 mo
121.466 260.771 122.106 261.381 122.65 261.652 cv
123.094 261.873 123.517 261.863 123.917 261.617 cv
124.315 261.372 124.693 260.895 125.047 260.184 cv
125.779 258.718 125.926 256.994 125.485 255.012 cv
125.045 253.03 124.231 251.743 123.042 251.149 cv
122.242 250.75 121.375 251.776 121.026 252.478 cv
f
120.756 244.389 mo
121.028 243.844 120.902 243.441 120.38 243.181 cv
119.859 242.92 119.461 243.063 119.19 243.606 cv
118.924 244.14 119.051 244.537 119.574 244.797 cv
120.096 245.057 120.491 244.922 120.756 244.389 cv
.746 .676 .668 .898 cmyk
f
grestore
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginAVAFNQ+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/V <1C60D8A8C9B7D8BE16AB7333EB329575D8F926072F9DAC4249B9488298F9B6919613FA44183837> |-/k <1C60D8A8C9B7B4A13F02E2DB12F826777B4D78CA06622E575C6B49D9CA66A0552B3EB1DC2B346FE4BD2CBCBEB5A2F41F0F78788CCB4D5E> |-systemdict /gcheck known {setglobal} if end {end} ifendAVAFNQ+HelveticaNeue /Encoding getdup 86 /V putdup 107 /k putpop%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef /slash /.notdef /one 8{/.notdef}rp /colon 6{/.notdef}rp /A /B /.notdef /D 3{/.notdef}rp /H /I 3{/.notdef}rp /M /N /.notdef /P /.notdef /R /S /T /.notdef /V 10{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [0 -9.77065 -9.77065 0 0 0 ]msf232.308 216.526 mo(D)sh232.308 209.541 mo(o)sh232.308 203.844 mo(r)sh232.308 200.405 mo(s)sh232.308 195.412 mo(a)sh232.308 190.078 mo(l )[-2.16895 0 ]ysh232.308 185.192 mo(\()sh232.308 182.584 mo(Ba)[-6.7417 0 ]ysh232.308 170.547 mo(c)sh232.308 165.261 mo(k)sh232.308 160.171 mo(\))sh309.192 215.529 mo(V)sh309.192 209.901 mo(e)sh309.192 204.537 mo(n)sh309.192 199.095 mo(t)sh309.192 195.988 mo(ra)[-3.34131 0 ]ysh309.192 187.312 mo(l )[-2.16895 0 ]ysh309.192 182.427 mo(\()sh309.192 179.818 mo(B)sh309.192 173.086 mo(e)sh309.192 167.732 mo(l)sh309.192 165.544 mo(l)sh309.192 163.316 mo(y)sh309.192 158.451 mo(\))shgsave
0 0 mo
383 0 li
383 497.868 li
0 497.868 li
0 0 li
clp
255.104 156.013 mo
254.604 156.013 li
254.604 157.779 253.849 159.377 252.615 160.544 cv
251.381 161.709 249.672 162.434 247.776 162.434 cv
245.882 162.434 244.173 161.709 242.939 160.544 cv
241.705 159.377 240.95 157.779 240.949 156.013 cv
240.95 154.247 241.705 152.65 242.939 151.483 cv
244.173 150.317 245.882 149.592 247.776 149.592 cv
249.672 149.592 251.381 150.317 252.615 151.483 cv
253.849 152.65 254.604 154.247 254.604 156.013 cv
255.104 156.013 li
255.604 156.013 li
255.605 153.957 254.72 152.094 253.302 150.756 cv
251.884 149.416 249.929 148.592 247.776 148.592 cv
245.625 148.592 243.67 149.416 242.252 150.756 cv
240.834 152.094 239.949 153.957 239.949 156.013 cv
239.949 158.07 240.834 159.933 242.252 161.271 cv
243.67 162.61 245.625 163.434 247.776 163.434 cv
249.929 163.434 251.884 162.61 253.302 161.271 cv
254.72 159.933 255.605 158.07 255.604 156.013 cv
255.104 156.013 li
cp
1 0 0 0 cmyk
f
272.203 156.013 mo
271.703 156.013 li
271.703 157.779 270.947 159.377 269.713 160.544 cv
268.479 161.709 266.77 162.434 264.875 162.434 cv
262.98 162.434 261.272 161.709 260.038 160.544 cv
258.803 159.377 258.048 157.779 258.048 156.013 cv
258.048 154.247 258.803 152.65 260.038 151.483 cv
261.272 150.317 262.981 149.592 264.875 149.592 cv
266.77 149.592 268.479 150.317 269.713 151.483 cv
270.947 152.65 271.703 154.247 271.703 156.013 cv
272.203 156.013 li
272.703 156.013 li
272.704 153.957 271.818 152.094 270.4 150.756 cv
268.982 149.416 267.027 148.592 264.875 148.592 cv
262.724 148.592 260.769 149.416 259.351 150.756 cv
257.933 152.094 257.047 153.957 257.048 156.013 cv
257.047 158.07 257.933 159.933 259.351 161.271 cv
260.769 162.61 262.724 163.434 264.875 163.434 cv
267.027 163.434 268.982 162.61 270.4 161.271 cv
271.818 159.933 272.704 158.07 272.703 156.013 cv
272.203 156.013 li
cp
f
290.93 156.013 mo
290.43 156.013 li
290.429 157.779 289.674 159.377 288.44 160.544 cv
287.206 161.709 285.498 162.434 283.603 162.434 cv
281.707 162.434 279.998 161.709 278.763 160.544 cv
277.529 159.377 276.774 157.779 276.773 156.013 cv
276.774 154.247 277.529 152.65 278.763 151.483 cv
279.998 150.317 281.707 149.592 283.603 149.592 cv
285.497 149.592 287.206 150.317 288.44 151.483 cv
289.674 152.65 290.429 154.247 290.43 156.013 cv
290.93 156.013 li
291.43 156.013 li
291.43 153.957 290.545 152.094 289.127 150.756 cv
287.709 149.416 285.754 148.592 283.603 148.592 cv
281.45 148.592 279.495 149.416 278.077 150.756 cv
276.658 152.094 275.773 153.957 275.773 156.013 cv
275.773 158.07 276.658 159.933 278.077 161.271 cv
279.495 162.61 281.45 163.434 283.603 163.434 cv
285.754 163.434 287.709 162.61 289.127 161.271 cv
290.545 159.933 291.43 158.07 291.43 156.013 cv
290.93 156.013 li
cp
f
255.104 188.823 mo
254.604 188.823 li
254.604 190.59 253.849 192.187 252.615 193.354 cv
251.381 194.52 249.672 195.245 247.776 195.245 cv
245.882 195.245 244.173 194.52 242.939 193.354 cv
241.705 192.187 240.95 190.589 240.949 188.823 cv
240.95 187.057 241.705 185.46 242.939 184.293 cv
244.173 183.127 245.882 182.402 247.776 182.402 cv
249.672 182.402 251.381 183.127 252.615 184.293 cv
253.849 185.46 254.604 187.057 254.604 188.823 cv
255.104 188.823 li
255.604 188.823 li
255.605 186.767 254.72 184.904 253.302 183.566 cv
251.884 182.227 249.929 181.402 247.776 181.402 cv
245.625 181.402 243.67 182.227 242.252 183.566 cv
240.834 184.904 239.949 186.767 239.949 188.823 cv
239.949 190.88 240.834 192.743 242.252 194.081 cv
243.67 195.42 245.625 196.245 247.776 196.245 cv
249.929 196.245 251.884 195.42 253.302 194.081 cv
254.72 192.743 255.605 190.88 255.604 188.823 cv
255.104 188.823 li
cp
f
272.203 188.823 mo
271.703 188.823 li
271.703 190.589 270.947 192.187 269.713 193.354 cv
268.479 194.52 266.77 195.245 264.875 195.245 cv
262.981 195.245 261.272 194.52 260.038 193.354 cv
258.803 192.187 258.048 190.589 258.048 188.823 cv
258.048 187.057 258.803 185.46 260.038 184.293 cv
261.272 183.127 262.981 182.402 264.875 182.402 cv
266.77 182.402 268.479 183.127 269.713 184.293 cv
270.947 185.46 271.703 187.057 271.703 188.823 cv
272.203 188.823 li
272.703 188.823 li
272.704 186.767 271.818 184.904 270.4 183.566 cv
268.982 182.227 267.027 181.402 264.875 181.402 cv
262.724 181.402 260.769 182.227 259.351 183.566 cv
257.933 184.904 257.047 186.767 257.048 188.823 cv
257.047 190.88 257.933 192.743 259.351 194.081 cv
260.769 195.42 262.724 196.245 264.875 196.245 cv
267.027 196.245 268.982 195.42 270.4 194.081 cv
271.818 192.743 272.704 190.88 272.703 188.823 cv
272.203 188.823 li
cp
f
290.93 188.823 mo
290.43 188.823 li
290.429 190.59 289.674 192.187 288.44 193.354 cv
287.206 194.52 285.497 195.245 283.603 195.245 cv
281.707 195.245 279.998 194.52 278.763 193.354 cv
277.529 192.187 276.774 190.589 276.773 188.823 cv
276.774 187.057 277.529 185.46 278.763 184.293 cv
279.998 183.127 281.707 182.402 283.603 182.402 cv
285.497 182.402 287.206 183.127 288.44 184.293 cv
289.674 185.46 290.429 187.057 290.43 188.823 cv
290.93 188.823 li
291.43 188.823 li
291.43 186.767 290.545 184.904 289.127 183.566 cv
287.709 182.227 285.754 181.402 283.603 181.402 cv
281.45 181.402 279.495 182.227 278.077 183.566 cv
276.658 184.904 275.773 186.767 275.773 188.823 cv
275.773 190.88 276.658 192.743 278.077 194.081 cv
279.495 195.42 281.45 196.245 283.603 196.245 cv
285.754 196.245 287.709 195.42 289.127 194.081 cv
290.545 192.743 291.43 190.88 291.43 188.823 cv
290.93 188.823 li
cp
f
255.104 172.811 mo
254.604 172.811 li
254.604 174.576 253.849 176.173 252.615 177.34 cv
251.381 178.505 249.672 179.23 247.776 179.23 cv
245.882 179.23 244.173 178.506 242.939 177.34 cv
241.705 176.173 240.95 174.576 240.949 172.811 cv
240.95 171.045 241.705 169.447 242.939 168.28 cv
244.173 167.115 245.882 166.39 247.776 166.39 cv
249.672 166.39 251.381 167.115 252.615 168.28 cv
253.849 169.447 254.604 171.045 254.604 172.811 cv
255.104 172.811 li
255.604 172.811 li
255.605 170.754 254.72 168.891 253.302 167.553 cv
251.884 166.214 249.929 165.39 247.776 165.39 cv
245.625 165.39 243.67 166.214 242.252 167.553 cv
240.834 168.891 239.949 170.754 239.949 172.811 cv
239.949 174.867 240.834 176.729 242.252 178.067 cv
243.67 179.406 245.625 180.23 247.776 180.23 cv
249.929 180.23 251.884 179.406 253.302 178.067 cv
254.72 176.729 255.605 174.867 255.604 172.811 cv
255.104 172.811 li
cp
f
272.203 172.811 mo
271.703 172.811 li
271.703 174.576 270.948 176.173 269.713 177.34 cv
268.479 178.505 266.77 179.23 264.875 179.23 cv
262.98 179.23 261.272 178.506 260.038 177.34 cv
258.803 176.173 258.048 174.576 258.048 172.811 cv
258.048 171.045 258.803 169.447 260.038 168.28 cv
261.272 167.115 262.981 166.39 264.875 166.39 cv
266.77 166.39 268.479 167.115 269.713 168.28 cv
270.947 169.447 271.703 171.045 271.703 172.811 cv
272.203 172.811 li
272.703 172.811 li
272.704 170.754 271.818 168.891 270.4 167.553 cv
268.982 166.214 267.027 165.39 264.875 165.39 cv
262.724 165.39 260.769 166.214 259.351 167.553 cv
257.933 168.891 257.047 170.754 257.048 172.811 cv
257.047 174.867 257.933 176.729 259.351 178.067 cv
260.769 179.406 262.724 180.23 264.875 180.23 cv
267.027 180.23 268.982 179.406 270.4 178.067 cv
271.818 176.729 272.704 174.867 272.703 172.811 cv
272.203 172.811 li
cp
f
290.93 172.811 mo
290.43 172.811 li
290.429 174.576 289.674 176.173 288.44 177.34 cv
287.206 178.506 285.498 179.23 283.603 179.23 cv
281.707 179.23 279.998 178.505 278.763 177.34 cv
277.529 176.173 276.774 174.576 276.773 172.811 cv
276.774 171.045 277.529 169.447 278.763 168.28 cv
279.998 167.115 281.707 166.39 283.603 166.39 cv
285.497 166.39 287.206 167.115 288.44 168.28 cv
289.674 169.447 290.429 171.045 290.43 172.811 cv
290.93 172.811 li
291.43 172.811 li
291.43 170.754 290.545 168.891 289.127 167.553 cv
287.709 166.214 285.754 165.39 283.603 165.39 cv
281.45 165.39 279.495 166.214 278.077 167.553 cv
276.658 168.891 275.773 170.754 275.773 172.811 cv
275.773 174.867 276.658 176.729 278.077 178.067 cv
279.495 179.406 281.45 180.23 283.603 180.23 cv
285.754 180.23 287.709 179.406 289.127 178.067 cv
290.545 176.729 291.43 174.867 291.43 172.811 cv
290.93 172.811 li
cp
f
255.104 205.365 mo
254.604 205.365 li
254.604 207.131 253.849 208.728 252.615 209.895 cv
251.381 211.061 249.672 211.786 247.776 211.786 cv
245.882 211.786 244.173 211.061 242.939 209.895 cv
241.705 208.728 240.95 207.131 240.949 205.365 cv
240.95 203.599 241.705 202.001 242.939 200.834 cv
244.173 199.669 245.882 198.944 247.776 198.944 cv
249.672 198.944 251.381 199.669 252.615 200.834 cv
253.849 202.001 254.604 203.599 254.604 205.365 cv
255.104 205.365 li
255.604 205.365 li
255.605 203.308 254.72 201.445 253.302 200.107 cv
251.884 198.768 249.929 197.944 247.776 197.944 cv
245.625 197.944 243.67 198.768 242.252 200.107 cv
240.834 201.445 239.949 203.308 239.949 205.365 cv
239.949 207.421 240.834 209.284 242.252 210.622 cv
243.67 211.962 245.625 212.786 247.776 212.786 cv
249.929 212.786 251.884 211.962 253.302 210.622 cv
254.72 209.284 255.605 207.421 255.604 205.365 cv
255.104 205.365 li
cp
f
272.203 205.365 mo
271.703 205.365 li
271.703 207.131 270.947 208.728 269.713 209.895 cv
268.479 211.061 266.77 211.786 264.875 211.786 cv
262.98 211.786 261.272 211.061 260.038 209.895 cv
258.803 208.728 258.048 207.131 258.048 205.365 cv
258.048 203.599 258.803 202.001 260.038 200.834 cv
261.272 199.669 262.981 198.944 264.875 198.944 cv
266.77 198.944 268.479 199.669 269.713 200.834 cv
270.947 202.001 271.703 203.599 271.703 205.365 cv
272.203 205.365 li
272.703 205.365 li
272.704 203.308 271.818 201.445 270.4 200.107 cv
268.982 198.768 267.027 197.944 264.875 197.944 cv
262.724 197.944 260.769 198.768 259.351 200.107 cv
257.933 201.445 257.047 203.308 257.048 205.365 cv
257.047 207.421 257.933 209.284 259.351 210.622 cv
260.769 211.962 262.724 212.786 264.875 212.786 cv
267.027 212.786 268.982 211.962 270.4 210.622 cv
271.818 209.284 272.704 207.421 272.703 205.365 cv
272.203 205.365 li
cp
f
290.93 205.365 mo
290.43 205.365 li
290.429 207.131 289.674 208.728 288.44 209.895 cv
287.206 211.061 285.498 211.786 283.603 211.786 cv
281.707 211.786 279.998 211.061 278.763 209.895 cv
277.529 208.728 276.774 207.131 276.773 205.365 cv
276.774 203.599 277.529 202.001 278.763 200.834 cv
279.998 199.669 281.707 198.944 283.603 198.944 cv
285.497 198.944 287.206 199.669 288.44 200.834 cv
289.674 202.001 290.429 203.599 290.43 205.365 cv
290.93 205.365 li
291.43 205.365 li
291.43 203.308 290.545 201.445 289.127 200.107 cv
287.709 198.768 285.754 197.944 283.603 197.944 cv
281.45 197.944 279.495 198.768 278.077 200.107 cv
276.658 201.445 275.773 203.308 275.773 205.365 cv
275.773 207.421 276.658 209.284 278.077 210.622 cv
279.495 211.962 281.45 212.786 283.603 212.786 cv
285.754 212.786 287.709 211.962 289.127 210.622 cv
290.545 209.284 291.43 207.421 291.43 205.365 cv
290.93 205.365 li
cp
f
255.104 239.459 mo
254.604 239.459 li
254.604 241.225 253.849 242.822 252.615 243.989 cv
251.381 245.155 249.672 245.88 247.776 245.88 cv
245.882 245.88 244.173 245.155 242.939 243.989 cv
241.705 242.822 240.95 241.225 240.949 239.459 cv
240.95 237.693 241.705 236.096 242.939 234.929 cv
244.173 233.764 245.882 233.039 247.776 233.039 cv
249.672 233.039 251.381 233.764 252.615 234.929 cv
253.849 236.096 254.604 237.693 254.604 239.459 cv
255.104 239.459 li
255.604 239.459 li
255.605 237.403 254.72 235.54 253.302 234.202 cv
251.884 232.863 249.929 232.039 247.776 232.039 cv
245.625 232.039 243.67 232.863 242.252 234.202 cv
240.834 235.54 239.949 237.403 239.949 239.459 cv
239.949 241.515 240.834 243.378 242.252 244.716 cv
243.67 246.056 245.625 246.88 247.776 246.88 cv
249.929 246.88 251.884 246.056 253.302 244.716 cv
254.72 243.378 255.605 241.515 255.604 239.459 cv
255.104 239.459 li
cp
f
272.203 239.459 mo
271.703 239.459 li
271.703 241.225 270.947 242.822 269.713 243.989 cv
268.479 245.155 266.77 245.88 264.875 245.88 cv
262.981 245.88 261.272 245.155 260.038 243.989 cv
258.803 242.822 258.048 241.225 258.048 239.459 cv
258.048 237.693 258.803 236.096 260.038 234.929 cv
261.272 233.764 262.98 233.039 264.875 233.039 cv
266.77 233.039 268.479 233.764 269.713 234.929 cv
270.947 236.096 271.703 237.693 271.703 239.459 cv
272.203 239.459 li
272.703 239.459 li
272.704 237.403 271.818 235.54 270.4 234.202 cv
268.982 232.863 267.027 232.039 264.875 232.039 cv
262.724 232.039 260.769 232.863 259.351 234.202 cv
257.933 235.54 257.047 237.403 257.048 239.459 cv
257.047 241.515 257.933 243.378 259.351 244.716 cv
260.769 246.056 262.724 246.88 264.875 246.88 cv
267.027 246.88 268.982 246.056 270.4 244.716 cv
271.818 243.378 272.704 241.515 272.703 239.459 cv
272.203 239.459 li
cp
f
290.93 239.459 mo
290.43 239.459 li
290.429 241.225 289.674 242.822 288.44 243.989 cv
287.206 245.155 285.497 245.88 283.603 245.88 cv
281.707 245.88 279.998 245.155 278.763 243.989 cv
277.529 242.822 276.774 241.225 276.773 239.459 cv
276.774 237.693 277.529 236.096 278.763 234.929 cv
279.998 233.764 281.707 233.039 283.603 233.039 cv
285.498 233.039 287.206 233.764 288.44 234.929 cv
289.674 236.096 290.429 237.693 290.43 239.459 cv
290.93 239.459 li
291.43 239.459 li
291.43 237.403 290.545 235.54 289.127 234.202 cv
287.709 232.863 285.754 232.039 283.603 232.039 cv
281.45 232.039 279.495 232.863 278.077 234.202 cv
276.658 235.54 275.773 237.403 275.773 239.459 cv
275.773 241.515 276.658 243.378 278.077 244.716 cv
279.495 246.056 281.45 246.88 283.603 246.88 cv
285.754 246.88 287.709 246.056 289.127 244.716 cv
290.545 243.378 291.43 241.515 291.43 239.459 cv
290.93 239.459 li
cp
f
255.104 223.445 mo
254.604 223.445 li
254.604 225.212 253.849 226.809 252.615 227.976 cv
251.381 229.141 249.672 229.866 247.776 229.866 cv
245.882 229.866 244.173 229.141 242.939 227.976 cv
241.705 226.809 240.95 225.212 240.949 223.445 cv
240.95 221.68 241.705 220.083 242.939 218.916 cv
244.173 217.75 245.882 217.025 247.776 217.025 cv
249.672 217.025 251.381 217.75 252.615 218.916 cv
253.849 220.083 254.604 221.68 254.604 223.445 cv
255.104 223.445 li
255.604 223.445 li
255.605 221.389 254.72 219.527 253.302 218.189 cv
251.884 216.85 249.929 216.025 247.776 216.025 cv
245.625 216.025 243.67 216.85 242.252 218.189 cv
240.834 219.527 239.949 221.389 239.949 223.445 cv
239.949 225.502 240.834 227.365 242.252 228.703 cv
243.67 230.042 245.625 230.866 247.776 230.866 cv
249.929 230.866 251.884 230.042 253.302 228.703 cv
254.72 227.365 255.605 225.502 255.604 223.445 cv
255.104 223.445 li
cp
f
272.203 223.445 mo
271.703 223.445 li
271.703 225.212 270.947 226.809 269.713 227.976 cv
268.479 229.141 266.77 229.866 264.875 229.866 cv
262.98 229.866 261.272 229.141 260.038 227.976 cv
258.803 226.809 258.048 225.212 258.048 223.445 cv
258.048 221.68 258.803 220.083 260.038 218.916 cv
261.272 217.75 262.981 217.025 264.875 217.025 cv
266.77 217.025 268.479 217.75 269.713 218.916 cv
270.948 220.083 271.703 221.68 271.703 223.445 cv
272.203 223.445 li
272.703 223.445 li
272.704 221.389 271.818 219.527 270.4 218.189 cv
268.982 216.85 267.027 216.025 264.875 216.025 cv
262.724 216.025 260.769 216.85 259.351 218.189 cv
257.933 219.527 257.047 221.389 257.048 223.445 cv
257.047 225.502 257.933 227.365 259.351 228.703 cv
260.769 230.042 262.724 230.866 264.875 230.866 cv
267.027 230.866 268.982 230.042 270.4 228.703 cv
271.818 227.365 272.704 225.502 272.703 223.445 cv
272.203 223.445 li
cp
f
290.93 223.445 mo
290.43 223.445 li
290.429 225.212 289.674 226.809 288.44 227.976 cv
287.206 229.141 285.498 229.866 283.603 229.866 cv
281.707 229.866 279.998 229.141 278.763 227.976 cv
277.529 226.809 276.774 225.212 276.773 223.445 cv
276.774 221.68 277.529 220.083 278.763 218.916 cv
279.998 217.75 281.707 217.025 283.603 217.025 cv
285.497 217.025 287.206 217.75 288.44 218.916 cv
289.674 220.083 290.429 221.68 290.43 223.445 cv
290.93 223.445 li
291.43 223.445 li
291.43 221.389 290.545 219.527 289.127 218.189 cv
287.709 216.85 285.754 216.025 283.603 216.025 cv
281.45 216.025 279.495 216.85 278.077 218.189 cv
276.658 219.527 275.773 221.389 275.773 223.445 cv
275.773 225.502 276.658 227.365 278.077 228.703 cv
279.495 230.042 281.45 230.866 283.603 230.866 cv
285.754 230.866 287.709 230.042 289.127 228.703 cv
290.545 227.365 291.43 225.502 291.43 223.445 cv
290.93 223.445 li
cp
f
255.104 256 mo
254.604 256 li
254.604 257.767 253.849 259.364 252.615 260.531 cv
251.381 261.697 249.672 262.422 247.776 262.422 cv
245.882 262.422 244.173 261.697 242.939 260.531 cv
241.705 259.364 240.95 257.766 240.949 256 cv
240.95 254.234 241.705 252.636 242.939 251.47 cv
244.173 250.304 245.882 249.579 247.776 249.579 cv
249.672 249.579 251.381 250.304 252.615 251.47 cv
253.849 252.636 254.604 254.234 254.604 256 cv
255.104 256 li
255.604 256 li
255.605 253.944 254.72 252.08 253.302 250.743 cv
251.884 249.403 249.929 248.579 247.776 248.579 cv
245.625 248.579 243.67 249.403 242.252 250.743 cv
240.834 252.08 239.949 253.943 239.949 256 cv
239.949 258.057 240.834 259.92 242.252 261.258 cv
243.67 262.598 245.625 263.422 247.776 263.422 cv
249.929 263.422 251.884 262.598 253.302 261.258 cv
254.72 259.92 255.605 258.057 255.604 256 cv
255.104 256 li
cp
f
272.203 256 mo
271.703 256 li
271.703 257.766 270.947 259.364 269.713 260.531 cv
268.479 261.697 266.77 262.422 264.875 262.422 cv
262.981 262.422 261.272 261.697 260.038 260.531 cv
258.803 259.364 258.048 257.766 258.048 256 cv
258.048 254.234 258.803 252.636 260.038 251.47 cv
261.272 250.304 262.98 249.579 264.875 249.579 cv
266.77 249.579 268.479 250.304 269.713 251.47 cv
270.947 252.636 271.703 254.234 271.703 256 cv
272.203 256 li
272.703 256 li
272.704 253.943 271.818 252.08 270.4 250.742 cv
268.982 249.403 267.027 248.579 264.875 248.579 cv
262.724 248.579 260.769 249.403 259.351 250.743 cv
257.933 252.08 257.047 253.943 257.048 256 cv
257.047 258.057 257.933 259.92 259.351 261.258 cv
260.769 262.598 262.724 263.422 264.875 263.422 cv
267.027 263.422 268.982 262.598 270.4 261.258 cv
271.818 259.92 272.704 258.057 272.703 256 cv
272.203 256 li
cp
f
290.93 256 mo
290.43 256 li
290.429 257.767 289.674 259.364 288.44 260.531 cv
287.206 261.697 285.497 262.422 283.603 262.422 cv
281.707 262.422 279.998 261.697 278.763 260.531 cv
277.529 259.364 276.774 257.766 276.773 256 cv
276.774 254.234 277.529 252.636 278.763 251.47 cv
279.998 250.304 281.707 249.579 283.603 249.579 cv
285.498 249.579 287.206 250.304 288.44 251.469 cv
289.674 252.636 290.429 254.234 290.43 256 cv
290.93 256 li
291.43 256 li
291.43 253.944 290.545 252.08 289.127 250.743 cv
287.709 249.403 285.754 248.579 283.603 248.579 cv
281.45 248.579 279.495 249.403 278.077 250.742 cv
276.658 252.08 275.773 253.943 275.773 256 cv
275.773 258.057 276.658 259.92 278.077 261.258 cv
279.495 262.598 281.45 263.422 283.603 263.422 cv
285.754 263.422 287.709 262.598 289.127 261.258 cv
290.545 259.92 291.43 258.057 291.43 256 cv
290.93 256 li
cp
f
330.537 156.013 mo
330.037 156.013 li
330.037 157.779 329.281 159.377 328.047 160.544 cv
326.812 161.709 325.103 162.434 323.209 162.434 cv
321.313 162.434 319.604 161.709 318.37 160.544 cv
317.135 159.377 316.38 157.779 316.38 156.013 cv
316.38 154.247 317.135 152.65 318.37 151.483 cv
319.604 150.317 321.313 149.592 323.209 149.592 cv
325.103 149.592 326.812 150.317 328.047 151.483 cv
329.281 152.65 330.037 154.247 330.037 156.013 cv
330.537 156.013 li
331.037 156.013 li
331.038 153.957 330.152 152.094 328.734 150.756 cv
327.315 149.416 325.36 148.592 323.209 148.592 cv
321.057 148.592 319.101 149.416 317.683 150.756 cv
316.265 152.094 315.379 153.957 315.38 156.013 cv
315.379 158.07 316.265 159.933 317.683 161.271 cv
319.101 162.61 321.057 163.434 323.209 163.434 cv
325.36 163.434 327.315 162.61 328.734 161.271 cv
330.152 159.933 331.038 158.07 331.037 156.013 cv
330.537 156.013 li
cp
f
347.636 156.013 mo
347.136 156.013 li
347.135 157.779 346.38 159.377 345.146 160.544 cv
343.911 161.709 342.202 162.434 340.308 162.434 cv
338.412 162.434 336.703 161.709 335.469 160.544 cv
334.235 159.377 333.48 157.779 333.479 156.013 cv
333.48 154.247 334.235 152.65 335.469 151.483 cv
336.703 150.317 338.412 149.592 340.308 149.592 cv
342.202 149.592 343.911 150.317 345.146 151.483 cv
346.38 152.65 347.135 154.247 347.136 156.013 cv
347.636 156.013 li
348.136 156.013 li
348.136 153.957 347.25 152.094 345.832 150.756 cv
344.414 149.416 342.459 148.592 340.308 148.592 cv
338.155 148.592 336.2 149.416 334.782 150.756 cv
333.364 152.094 332.479 153.957 332.479 156.013 cv
332.479 158.07 333.364 159.933 334.782 161.271 cv
336.2 162.61 338.155 163.434 340.308 163.434 cv
342.459 163.434 344.414 162.61 345.832 161.271 cv
347.25 159.933 348.136 158.07 348.136 156.013 cv
347.636 156.013 li
cp
f
366.361 156.013 mo
365.861 156.013 li
365.861 157.779 365.106 159.377 363.872 160.544 cv
362.638 161.709 360.93 162.434 359.034 162.434 cv
357.139 162.434 355.43 161.709 354.195 160.544 cv
352.961 159.377 352.206 157.779 352.206 156.013 cv
352.206 154.247 352.961 152.65 354.195 151.483 cv
355.43 150.317 357.139 149.592 359.034 149.592 cv
360.93 149.592 362.638 150.317 363.872 151.483 cv
365.106 152.65 365.861 154.247 365.861 156.013 cv
366.361 156.013 li
366.861 156.013 li
366.862 153.957 365.977 152.094 364.559 150.756 cv
363.141 149.416 361.187 148.592 359.034 148.592 cv
356.882 148.592 354.927 149.416 353.509 150.756 cv
352.091 152.094 351.206 153.957 351.206 156.013 cv
351.206 158.07 352.091 159.933 353.509 161.271 cv
354.927 162.61 356.882 163.434 359.034 163.434 cv
361.186 163.434 363.141 162.61 364.559 161.271 cv
365.977 159.933 366.862 158.07 366.861 156.013 cv
366.361 156.013 li
cp
f
330.537 188.823 mo
330.037 188.823 li
330.037 190.589 329.281 192.187 328.047 193.354 cv
326.812 194.52 325.103 195.245 323.209 195.245 cv
321.313 195.245 319.604 194.52 318.37 193.354 cv
317.135 192.187 316.38 190.589 316.38 188.823 cv
316.38 187.057 317.135 185.46 318.37 184.293 cv
319.604 183.127 321.313 182.402 323.209 182.402 cv
325.103 182.402 326.812 183.127 328.047 184.293 cv
329.281 185.46 330.037 187.057 330.037 188.823 cv
330.537 188.823 li
331.037 188.823 li
331.038 186.767 330.152 184.904 328.734 183.566 cv
327.315 182.227 325.36 181.402 323.209 181.402 cv
321.057 181.402 319.101 182.227 317.683 183.566 cv
316.265 184.904 315.379 186.767 315.38 188.823 cv
315.379 190.88 316.265 192.743 317.683 194.081 cv
319.101 195.42 321.057 196.245 323.209 196.245 cv
325.36 196.245 327.315 195.42 328.734 194.081 cv
330.152 192.743 331.038 190.88 331.037 188.823 cv
330.537 188.823 li
cp
f
347.636 188.823 mo
347.136 188.823 li
347.135 190.589 346.38 192.187 345.146 193.354 cv
343.911 194.52 342.202 195.245 340.308 195.245 cv
338.412 195.245 336.703 194.52 335.469 193.354 cv
334.235 192.187 333.48 190.59 333.479 188.823 cv
333.48 187.057 334.235 185.46 335.469 184.293 cv
336.703 183.127 338.412 182.402 340.308 182.402 cv
342.202 182.402 343.911 183.127 345.146 184.293 cv
346.38 185.46 347.135 187.057 347.136 188.823 cv
347.636 188.823 li
348.136 188.823 li
348.136 186.767 347.25 184.904 345.832 183.566 cv
344.414 182.227 342.459 181.402 340.308 181.402 cv
338.155 181.402 336.2 182.227 334.782 183.566 cv
333.364 184.904 332.479 186.767 332.479 188.823 cv
332.479 190.88 333.364 192.743 334.782 194.081 cv
336.2 195.42 338.155 196.245 340.308 196.245 cv
342.459 196.245 344.414 195.42 345.832 194.081 cv
347.25 192.743 348.136 190.88 348.136 188.823 cv
347.636 188.823 li
cp
f
366.361 188.823 mo
365.861 188.823 li
365.861 190.59 365.106 192.187 363.872 193.354 cv
362.638 194.52 360.93 195.245 359.034 195.245 cv
357.139 195.245 355.43 194.52 354.195 193.354 cv
352.961 192.187 352.206 190.59 352.206 188.823 cv
352.206 187.057 352.961 185.46 354.195 184.293 cv
355.43 183.127 357.139 182.402 359.034 182.402 cv
360.93 182.402 362.638 183.127 363.872 184.293 cv
365.106 185.46 365.861 187.057 365.861 188.823 cv
366.361 188.823 li
366.861 188.823 li
366.862 186.767 365.977 184.904 364.559 183.566 cv
363.141 182.227 361.187 181.402 359.034 181.402 cv
356.882 181.402 354.927 182.227 353.509 183.566 cv
352.091 184.904 351.206 186.767 351.206 188.823 cv
351.206 190.88 352.091 192.743 353.509 194.081 cv
354.927 195.42 356.882 196.245 359.034 196.245 cv
361.187 196.245 363.141 195.42 364.559 194.081 cv
365.977 192.743 366.862 190.88 366.861 188.823 cv
366.361 188.823 li
cp
f
330.537 172.811 mo
330.037 172.811 li
330.037 174.576 329.281 176.173 328.047 177.34 cv
326.813 178.506 325.103 179.23 323.209 179.23 cv
321.313 179.23 319.604 178.505 318.37 177.34 cv
317.135 176.173 316.38 174.576 316.38 172.811 cv
316.38 171.045 317.135 169.447 318.37 168.28 cv
319.604 167.115 321.313 166.39 323.209 166.39 cv
325.103 166.39 326.812 167.115 328.047 168.28 cv
329.281 169.447 330.037 171.045 330.037 172.811 cv
330.537 172.811 li
331.037 172.811 li
331.038 170.754 330.152 168.891 328.734 167.553 cv
327.315 166.214 325.36 165.39 323.209 165.39 cv
321.057 165.39 319.101 166.214 317.683 167.553 cv
316.265 168.891 315.379 170.754 315.38 172.811 cv
315.379 174.867 316.265 176.729 317.683 178.067 cv
319.101 179.406 321.057 180.23 323.209 180.23 cv
325.36 180.23 327.315 179.406 328.733 178.067 cv
330.152 176.729 331.038 174.867 331.037 172.811 cv
330.537 172.811 li
cp
f
347.636 172.811 mo
347.136 172.811 li
347.135 174.576 346.38 176.173 345.146 177.34 cv
343.911 178.506 342.202 179.23 340.308 179.23 cv
338.412 179.23 336.703 178.505 335.469 177.34 cv
334.235 176.173 333.48 174.576 333.479 172.811 cv
333.48 171.045 334.235 169.447 335.469 168.28 cv
336.703 167.115 338.412 166.39 340.308 166.39 cv
342.202 166.39 343.911 167.115 345.146 168.28 cv
346.38 169.447 347.135 171.045 347.136 172.811 cv
347.636 172.811 li
348.136 172.811 li
348.136 170.754 347.25 168.891 345.832 167.553 cv
344.414 166.214 342.459 165.39 340.308 165.39 cv
338.155 165.39 336.2 166.214 334.782 167.553 cv
333.364 168.891 332.479 170.754 332.479 172.811 cv
332.479 174.867 333.364 176.729 334.782 178.067 cv
336.2 179.406 338.155 180.23 340.308 180.23 cv
342.459 180.23 344.414 179.406 345.832 178.067 cv
347.25 176.729 348.136 174.867 348.136 172.811 cv
347.636 172.811 li
cp
f
366.361 172.811 mo
365.861 172.811 li
365.861 174.576 365.106 176.173 363.872 177.34 cv
362.638 178.505 360.93 179.23 359.034 179.23 cv
357.139 179.23 355.43 178.505 354.195 177.34 cv
352.961 176.173 352.206 174.576 352.206 172.811 cv
352.206 171.045 352.961 169.447 354.195 168.28 cv
355.43 167.115 357.139 166.39 359.034 166.39 cv
360.93 166.39 362.638 167.115 363.872 168.28 cv
365.106 169.447 365.861 171.044 365.861 172.811 cv
366.361 172.811 li
366.861 172.811 li
366.862 170.754 365.977 168.891 364.559 167.553 cv
363.141 166.214 361.187 165.39 359.034 165.39 cv
356.882 165.39 354.927 166.214 353.509 167.553 cv
352.091 168.891 351.206 170.754 351.206 172.811 cv
351.206 174.867 352.091 176.729 353.509 178.067 cv
354.927 179.406 356.882 180.23 359.034 180.23 cv
361.186 180.23 363.141 179.406 364.559 178.067 cv
365.977 176.729 366.862 174.867 366.861 172.811 cv
366.361 172.811 li
cp
f
330.537 205.365 mo
330.037 205.365 li
330.037 207.131 329.281 208.728 328.047 209.895 cv
326.812 211.061 325.103 211.786 323.209 211.786 cv
321.313 211.786 319.604 211.061 318.37 209.895 cv
317.135 208.728 316.38 207.131 316.38 205.365 cv
316.38 203.599 317.135 202.001 318.37 200.834 cv
319.604 199.669 321.313 198.944 323.209 198.944 cv
325.103 198.944 326.812 199.669 328.047 200.834 cv
329.281 202.001 330.037 203.599 330.037 205.365 cv
330.537 205.365 li
331.037 205.365 li
331.038 203.308 330.152 201.445 328.734 200.107 cv
327.315 198.768 325.36 197.944 323.209 197.944 cv
321.057 197.944 319.101 198.768 317.683 200.107 cv
316.265 201.445 315.379 203.308 315.38 205.365 cv
315.379 207.421 316.265 209.284 317.683 210.622 cv
319.101 211.962 321.057 212.786 323.209 212.786 cv
325.36 212.786 327.315 211.962 328.734 210.622 cv
330.152 209.284 331.038 207.421 331.037 205.365 cv
330.537 205.365 li
cp
f
347.636 205.365 mo
347.136 205.365 li
347.135 207.131 346.38 208.728 345.146 209.895 cv
343.911 211.061 342.202 211.786 340.308 211.786 cv
338.412 211.786 336.703 211.061 335.469 209.895 cv
334.235 208.728 333.48 207.131 333.479 205.365 cv
333.48 203.599 334.235 202.001 335.469 200.834 cv
336.703 199.669 338.412 198.944 340.308 198.944 cv
342.202 198.944 343.911 199.669 345.146 200.834 cv
346.38 202.001 347.135 203.599 347.136 205.365 cv
347.636 205.365 li
348.136 205.365 li
348.136 203.308 347.25 201.445 345.832 200.107 cv
344.414 198.768 342.459 197.944 340.308 197.944 cv
338.155 197.944 336.2 198.768 334.782 200.107 cv
333.364 201.445 332.479 203.308 332.479 205.365 cv
332.479 207.421 333.364 209.284 334.782 210.622 cv
336.2 211.962 338.155 212.786 340.308 212.786 cv
342.459 212.786 344.414 211.962 345.832 210.622 cv
347.25 209.284 348.136 207.421 348.136 205.365 cv
347.636 205.365 li
cp
f
366.361 205.365 mo
365.861 205.365 li
365.861 207.131 365.106 208.728 363.872 209.895 cv
362.638 211.061 360.93 211.786 359.034 211.786 cv
357.139 211.786 355.43 211.061 354.195 209.895 cv
352.961 208.728 352.206 207.131 352.206 205.365 cv
352.206 203.599 352.961 202.001 354.195 200.834 cv
355.43 199.669 357.139 198.944 359.034 198.944 cv
360.93 198.944 362.638 199.669 363.872 200.834 cv
365.106 202.001 365.861 203.599 365.861 205.365 cv
366.361 205.365 li
366.861 205.365 li
366.862 203.309 365.977 201.445 364.559 200.107 cv
363.141 198.768 361.187 197.944 359.034 197.944 cv
356.882 197.944 354.927 198.768 353.509 200.107 cv
352.091 201.445 351.206 203.308 351.206 205.365 cv
351.206 207.421 352.091 209.284 353.509 210.622 cv
354.927 211.962 356.882 212.786 359.034 212.786 cv
361.186 212.786 363.141 211.962 364.559 210.622 cv
365.977 209.284 366.862 207.421 366.861 205.365 cv
366.361 205.365 li
cp
f
330.537 239.459 mo
330.037 239.459 li
330.037 241.225 329.281 242.822 328.047 243.989 cv
326.812 245.155 325.103 245.88 323.209 245.88 cv
321.313 245.88 319.604 245.155 318.37 243.989 cv
317.135 242.822 316.38 241.225 316.38 239.459 cv
316.38 237.693 317.135 236.096 318.37 234.929 cv
319.604 233.764 321.313 233.039 323.209 233.039 cv
325.103 233.039 326.812 233.764 328.047 234.929 cv
329.281 236.096 330.037 237.693 330.037 239.459 cv
330.537 239.459 li
331.037 239.459 li
331.038 237.403 330.152 235.54 328.734 234.202 cv
327.315 232.863 325.36 232.039 323.209 232.039 cv
321.057 232.039 319.101 232.863 317.683 234.202 cv
316.265 235.54 315.379 237.403 315.38 239.459 cv
315.379 241.515 316.265 243.378 317.683 244.716 cv
319.101 246.056 321.057 246.88 323.209 246.88 cv
325.36 246.88 327.315 246.056 328.734 244.716 cv
330.152 243.378 331.038 241.515 331.037 239.459 cv
330.537 239.459 li
cp
f
347.636 239.459 mo
347.136 239.459 li
347.135 241.225 346.38 242.822 345.146 243.989 cv
343.911 245.155 342.202 245.88 340.308 245.88 cv
338.412 245.88 336.703 245.155 335.469 243.989 cv
334.235 242.822 333.48 241.225 333.479 239.459 cv
333.48 237.693 334.235 236.096 335.469 234.929 cv
336.703 233.764 338.412 233.039 340.308 233.039 cv
342.202 233.039 343.911 233.764 345.146 234.929 cv
346.38 236.096 347.135 237.693 347.136 239.459 cv
347.636 239.459 li
348.136 239.459 li
348.136 237.403 347.25 235.54 345.832 234.202 cv
344.414 232.863 342.459 232.039 340.308 232.039 cv
338.155 232.039 336.2 232.863 334.782 234.202 cv
333.364 235.54 332.479 237.403 332.479 239.459 cv
332.479 241.515 333.364 243.378 334.782 244.716 cv
336.2 246.056 338.155 246.88 340.308 246.88 cv
342.459 246.88 344.414 246.056 345.832 244.716 cv
347.25 243.378 348.136 241.515 348.136 239.459 cv
347.636 239.459 li
cp
f
366.361 239.459 mo
365.861 239.459 li
365.861 241.225 365.106 242.822 363.872 243.989 cv
362.638 245.155 360.93 245.88 359.034 245.88 cv
357.139 245.88 355.43 245.155 354.195 243.989 cv
352.961 242.822 352.206 241.225 352.206 239.459 cv
352.206 237.693 352.961 236.096 354.195 234.929 cv
355.43 233.764 357.139 233.039 359.034 233.039 cv
360.93 233.039 362.638 233.764 363.872 234.929 cv
365.106 236.096 365.861 237.693 365.861 239.459 cv
366.361 239.459 li
366.861 239.459 li
366.862 237.403 365.977 235.54 364.559 234.202 cv
363.141 232.863 361.186 232.039 359.034 232.039 cv
356.882 232.039 354.927 232.863 353.509 234.202 cv
352.091 235.54 351.206 237.403 351.206 239.459 cv
351.206 241.515 352.091 243.378 353.509 244.716 cv
354.927 246.056 356.882 246.88 359.034 246.88 cv
361.187 246.88 363.141 246.056 364.559 244.716 cv
365.977 243.378 366.862 241.515 366.861 239.459 cv
366.361 239.459 li
cp
f
330.537 223.445 mo
330.037 223.445 li
330.037 225.211 329.281 226.809 328.047 227.976 cv
326.812 229.141 325.103 229.866 323.209 229.866 cv
321.313 229.866 319.604 229.141 318.37 227.976 cv
317.135 226.809 316.38 225.212 316.38 223.445 cv
316.38 221.68 317.135 220.083 318.37 218.916 cv
319.604 217.75 321.313 217.025 323.209 217.025 cv
325.103 217.025 326.812 217.75 328.047 218.916 cv
329.281 220.083 330.037 221.68 330.037 223.445 cv
330.537 223.445 li
331.037 223.445 li
331.038 221.389 330.152 219.527 328.734 218.189 cv
327.315 216.85 325.36 216.025 323.209 216.025 cv
321.057 216.025 319.101 216.85 317.683 218.189 cv
316.265 219.527 315.379 221.389 315.38 223.445 cv
315.379 225.502 316.265 227.365 317.683 228.703 cv
319.101 230.042 321.057 230.866 323.209 230.866 cv
325.36 230.866 327.315 230.042 328.734 228.703 cv
330.152 227.365 331.038 225.502 331.037 223.445 cv
330.537 223.445 li
cp
f
347.636 223.445 mo
347.136 223.445 li
347.135 225.211 346.38 226.809 345.146 227.976 cv
343.911 229.141 342.202 229.866 340.308 229.866 cv
338.412 229.866 336.703 229.141 335.469 227.976 cv
334.235 226.809 333.48 225.212 333.479 223.445 cv
333.48 221.68 334.235 220.083 335.469 218.916 cv
336.703 217.75 338.412 217.025 340.308 217.025 cv
342.202 217.025 343.911 217.75 345.146 218.916 cv
346.38 220.083 347.135 221.68 347.136 223.445 cv
347.636 223.445 li
348.136 223.445 li
348.136 221.389 347.25 219.527 345.832 218.189 cv
344.414 216.85 342.459 216.025 340.308 216.025 cv
338.155 216.025 336.2 216.85 334.782 218.189 cv
333.364 219.527 332.479 221.389 332.479 223.445 cv
332.479 225.502 333.364 227.365 334.782 228.703 cv
336.2 230.042 338.155 230.866 340.308 230.866 cv
342.459 230.866 344.414 230.042 345.832 228.703 cv
347.25 227.365 348.136 225.502 348.136 223.445 cv
347.636 223.445 li
cp
f
366.361 223.445 mo
365.861 223.445 li
365.861 225.212 365.106 226.809 363.872 227.976 cv
362.638 229.141 360.93 229.866 359.034 229.866 cv
357.139 229.866 355.43 229.141 354.195 227.976 cv
352.961 226.809 352.206 225.212 352.206 223.445 cv
352.206 221.68 352.961 220.083 354.195 218.916 cv
355.43 217.75 357.139 217.025 359.034 217.025 cv
360.93 217.025 362.638 217.75 363.872 218.916 cv
365.106 220.083 365.861 221.68 365.861 223.445 cv
366.361 223.445 li
366.861 223.445 li
366.862 221.39 365.977 219.527 364.559 218.189 cv
363.141 216.85 361.187 216.025 359.034 216.025 cv
356.882 216.025 354.927 216.85 353.509 218.189 cv
352.091 219.527 351.206 221.389 351.206 223.445 cv
351.206 225.502 352.091 227.365 353.509 228.703 cv
354.927 230.042 356.882 230.866 359.034 230.866 cv
361.186 230.866 363.141 230.042 364.559 228.703 cv
365.977 227.365 366.862 225.502 366.861 223.445 cv
366.361 223.445 li
cp
f
330.537 256 mo
330.037 256 li
330.037 257.766 329.281 259.364 328.047 260.531 cv
326.812 261.697 325.103 262.422 323.209 262.422 cv
321.313 262.422 319.604 261.697 318.37 260.531 cv
317.135 259.364 316.38 257.766 316.38 256 cv
316.38 254.234 317.135 252.636 318.37 251.47 cv
319.604 250.304 321.313 249.579 323.209 249.579 cv
325.103 249.579 326.812 250.304 328.047 251.47 cv
329.281 252.636 330.037 254.234 330.037 256 cv
330.537 256 li
331.037 256 li
331.038 253.943 330.152 252.08 328.734 250.742 cv
327.315 249.403 325.36 248.579 323.209 248.579 cv
321.057 248.579 319.101 249.403 317.683 250.742 cv
316.265 252.08 315.379 253.943 315.38 256 cv
315.379 258.057 316.265 259.92 317.683 261.258 cv
319.101 262.598 321.057 263.422 323.209 263.422 cv
325.36 263.422 327.315 262.598 328.734 261.258 cv
330.152 259.92 331.038 258.057 331.037 256 cv
330.537 256 li
cp
f
347.636 256 mo
347.136 256 li
347.135 257.766 346.38 259.364 345.146 260.531 cv
343.911 261.697 342.202 262.422 340.308 262.422 cv
338.412 262.422 336.703 261.697 335.469 260.531 cv
334.235 259.364 333.48 257.767 333.479 256 cv
333.48 254.234 334.235 252.636 335.469 251.47 cv
336.703 250.304 338.412 249.579 340.308 249.579 cv
342.202 249.579 343.911 250.304 345.146 251.47 cv
346.38 252.636 347.135 254.234 347.136 256 cv
347.636 256 li
348.136 256 li
348.136 253.943 347.25 252.08 345.832 250.742 cv
344.414 249.403 342.459 248.579 340.308 248.579 cv
338.155 248.579 336.2 249.403 334.782 250.743 cv
333.364 252.08 332.479 253.943 332.479 256 cv
332.479 258.057 333.364 259.92 334.782 261.258 cv
336.2 262.598 338.155 263.422 340.308 263.422 cv
342.459 263.422 344.414 262.598 345.832 261.258 cv
347.25 259.92 348.136 258.057 348.136 256 cv
347.636 256 li
cp
f
366.361 256 mo
365.861 256 li
365.861 257.767 365.106 259.364 363.872 260.531 cv
362.638 261.697 360.93 262.422 359.034 262.422 cv
357.139 262.422 355.43 261.697 354.195 260.531 cv
352.961 259.364 352.206 257.767 352.206 256 cv
352.206 254.234 352.961 252.636 354.195 251.47 cv
355.43 250.304 357.139 249.579 359.034 249.579 cv
360.93 249.579 362.638 250.304 363.872 251.469 cv
365.106 252.636 365.861 254.234 365.861 256 cv
366.361 256 li
366.861 256 li
366.862 253.944 365.977 252.08 364.559 250.743 cv
363.141 249.403 361.186 248.579 359.034 248.579 cv
356.882 248.579 354.927 249.403 353.509 250.743 cv
352.091 252.08 351.206 253.943 351.206 256 cv
351.206 258.057 352.091 259.92 353.509 261.258 cv
354.927 262.598 356.882 263.422 359.034 263.422 cv
361.187 263.422 363.141 262.598 364.559 261.258 cv
365.977 259.92 366.862 258.057 366.861 256 cv
366.361 256 li
cp
f
grestore
1 0 0 0 cmyk
%ADOBeginSubsetFont: HelveticaNeue AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginAVAFNQ+HelveticaNeue dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B6079F6D1B1A6F2E268C38C77043D3A63ADE72673FCA38C6D438E312DDEC08954CC05E57F32968FEE1A2577F241D8EFA51F017CB226260C9C2C16C1F23A2277D353C1254870F4E35BDB8453BD7478D0A93C3277435D8ACBE12175360DFF06140A517CB70D2AC45A62775EB3A02A78B48CAFC88244B3C0E956BAACF680327060760F05D2B15A5425468A217A15FF5D7D20007E1D8468B7F87EE386BC2FFAA838D58001C42778BC90D935E8376BEFDFFE44ED2F57D18218C26FF1625C01B5E9CEA8256449BFF5FCCF31EFAA31C9618AF78090F> |-systemdict /gcheck known {setglobal} if end {end} ifendAVAFNQ+HelveticaNeue /Encoding getdup 67 /C putpop%ADOEndSubsetFont
/AVAFNQ+HelveticaNeue*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef /slash /.notdef /one 8{/.notdef}rp /colon 6{/.notdef}rp /A /B /C /D 3{/.notdef}rp /H /I 3{/.notdef}rp /M /N /.notdef /P /.notdef /R /S /T /.notdef /V 10{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]AVAFNQ+HelveticaNeue nfAVAFNQ+HelveticaNeue*1 [9.77065 0 0 -9.77065 0 0 ]msf262.161 146.377 mo(C)sh269.226 146.377 mo(l)sh271.453 146.377 mo(a)sh276.798 146.377 mo(s)sh281.811 146.377 mo(s )[4.88574 0 ]xsh289.412 146.377 mo(I)sh291.981 146.377 mo(V )[5.96973 0 ]xsh300.667 146.377 mo(d)sh306.51 146.377 mo(a )[5.24707 0 ]xsh314.473 146.377 mo(N)sh321.596 146.377 mo(e)sh326.94 146.377 mo(u)sh332.441 146.377 mo(r)sh335.744 146.377 mo(o)sh341.421 146.377 mo(n)sh346.912 146.377 mo(s)shgsave
0 0 mo
383 0 li
383 497.868 li
0 497.868 li
0 0 li
clp
197.467 369.771 mo
199.292 370.588 li
199.701 369.675 li
197.875 368.858 li
cp
201.118 371.405 mo
202.943 372.222 li
203.352 371.309 li
201.526 370.492 li
cp
204.769 373.039 mo
206.594 373.856 li
207.003 372.943 li
205.177 372.126 li
cp
208.42 374.673 mo
210.245 375.49 li
210.654 374.577 li
208.828 373.76 li
cp
212.071 376.307 mo
213.896 377.124 li
214.305 376.211 li
212.479 375.394 li
cp
215.722 377.941 mo
217.547 378.758 li
217.956 377.845 li
216.13 377.028 li
cp
219.373 379.575 mo
221.198 380.392 li
221.607 379.479 li
219.781 378.662 li
cp
223.024 381.209 mo
224.849 382.026 li
225.258 381.113 li
223.432 380.296 li
cp
226.675 382.843 mo
228.5 383.66 li
228.909 382.747 li
227.083 381.93 li
cp
230.326 384.477 mo
232.151 385.294 li
232.56 384.382 li
230.734 383.565 li
cp
233.977 386.111 mo
235.802 386.928 li
236.211 386.016 li
234.385 385.199 li
cp
237.628 387.745 mo
239.453 388.562 li
239.862 387.65 li
238.036 386.833 li
cp
241.279 389.379 mo
243.104 390.196 li
243.513 389.284 li
241.687 388.467 li
cp
244.93 391.013 mo
246.755 391.83 li
247.164 390.918 li
245.338 390.101 li
cp
248.581 392.648 mo
250.406 393.465 li
250.815 392.552 li
248.989 391.735 li
cp
252.232 394.282 mo
254.057 395.099 li
254.466 394.186 li
252.64 393.369 li
cp
255.883 395.916 mo
257.708 396.733 li
258.117 395.82 li
256.291 395.003 li
cp
0 0 0 1 cmyk
f
197.806 354.216 mo
199.732 353.675 li
199.461 352.712 li
197.536 353.253 li
cp
201.657 353.134 mo
203.583 352.594 li
203.312 351.631 li
201.387 352.172 li
cp
205.508 352.053 mo
207.434 351.512 li
207.163 350.549 li
205.238 351.09 li
cp
209.359 350.971 mo
211.285 350.431 li
211.014 349.468 li
209.089 350.009 li
cp
213.21 349.89 mo
215.136 349.349 li
214.865 348.387 li
212.94 348.927 li
cp
217.061 348.809 mo
218.987 348.268 li
218.716 347.305 li
216.791 347.846 li
cp
220.912 347.727 mo
222.838 347.186 li
222.567 346.224 li
220.642 346.764 li
cp
224.763 346.646 mo
226.689 346.105 li
226.419 345.142 li
224.493 345.683 li
cp
228.614 345.564 mo
230.54 345.024 li
230.27 344.061 li
228.344 344.602 li
cp
232.465 344.483 mo
234.391 343.942 li
234.121 342.979 li
232.195 343.52 li
cp
236.316 343.401 mo
238.242 342.861 li
237.972 341.898 li
236.046 342.439 li
cp
240.168 342.32 mo
242.093 341.779 li
241.823 340.817 li
239.897 341.357 li
cp
244.019 341.239 mo
245.944 340.698 li
245.674 339.735 li
243.748 340.276 li
cp
247.87 340.157 mo
249.795 339.616 li
249.525 338.654 li
247.599 339.194 li
cp
251.721 339.076 mo
253.646 338.535 li
253.376 337.572 li
251.45 338.113 li
cp
255.572 337.994 mo
257.497 337.454 li
257.227 336.491 li
255.301 337.032 li
cp
f
229.148 273.182 mo
229.148 273.649 li
228.68 273.649 li
228.68 274.649 li
229.648 274.649 li
230.148 274.649 li
230.148 273.182 li
229.148 273.182 li
cp
f
226.699 273.649 mo
224.653 273.649 li
224.653 274.649 li
226.699 274.649 li
cp
222.607 273.649 mo
220.561 273.649 li
220.561 274.649 li
222.607 274.649 li
cp
218.515 273.649 mo
216.469 273.649 li
216.469 274.649 li
218.515 274.649 li
cp
214.423 273.649 mo
212.377 273.649 li
212.377 274.649 li
214.423 274.649 li
cp
210.331 273.649 mo
208.285 273.649 li
208.285 274.649 li
210.331 274.649 li
cp
206.239 273.649 mo
204.193 273.649 li
204.193 274.649 li
206.239 274.649 li
cp
202.147 273.649 mo
200.101 273.649 li
200.101 274.649 li
202.147 274.649 li
cp
198.055 273.649 mo
196.009 273.649 li
196.009 274.649 li
198.055 274.649 li
cp
193.963 273.649 mo
191.917 273.649 li
191.917 274.649 li
193.963 274.649 li
cp
189.871 273.649 mo
187.825 273.649 li
187.825 274.649 li
189.871 274.649 li
cp
185.779 273.649 mo
183.733 273.649 li
183.733 274.649 li
185.779 274.649 li
cp
181.687 273.649 mo
179.641 273.649 li
179.641 274.649 li
181.687 274.649 li
cp
177.595 273.649 mo
175.549 273.649 li
175.549 274.649 li
177.595 274.649 li
cp
173.503 273.649 mo
171.457 273.649 li
171.457 274.649 li
173.503 274.649 li
cp
169.411 273.649 mo
167.365 273.649 li
167.365 274.649 li
169.411 274.649 li
cp
165.319 273.649 mo
163.273 273.649 li
163.273 274.649 li
165.319 274.649 li
cp
161.227 273.649 mo
159.181 273.649 li
159.181 274.649 li
161.227 274.649 li
cp
157.135 273.649 mo
156.392 273.649 li
156.392 274.649 li
157.135 274.649 li
cp
f
155.401 273.649 mo
154.933 273.649 li
154.933 273.182 li
153.933 273.182 li
153.933 274.149 li
153.933 274.649 li
155.401 274.649 li
155.401 273.649 li
cp
f
154.933 271.139 mo
154.933 269.029 li
153.933 269.029 li
153.933 271.139 li
cp
154.933 266.919 mo
154.933 264.809 li
153.933 264.809 li
153.933 266.919 li
cp
154.933 262.699 mo
154.933 260.589 li
153.933 260.589 li
153.933 262.699 li
cp
154.933 258.479 mo
154.933 256.369 li
153.933 256.369 li
153.933 258.479 li
cp
154.933 254.259 mo
154.933 252.149 li
153.933 252.149 li
153.933 254.259 li
cp
154.933 250.039 mo
154.933 247.929 li
153.933 247.929 li
153.933 250.039 li
cp
154.933 245.819 mo
154.933 243.709 li
153.933 243.709 li
153.933 245.819 li
cp
154.933 241.599 mo
154.933 239.489 li
153.933 239.489 li
153.933 241.599 li
cp
f
154.933 238.453 mo
154.933 237.985 li
155.401 237.985 li
155.401 236.985 li
154.433 236.985 li
153.933 236.985 li
153.933 238.453 li
154.933 238.453 li
cp
f
157.381 237.985 mo
159.427 237.985 li
159.427 236.985 li
157.381 236.985 li
cp
161.473 237.985 mo
163.519 237.985 li
163.519 236.985 li
161.473 236.985 li
cp
165.565 237.985 mo
167.611 237.985 li
167.611 236.985 li
165.565 236.985 li
cp
169.657 237.985 mo
171.703 237.985 li
171.703 236.985 li
169.657 236.985 li
cp
173.749 237.985 mo
175.795 237.985 li
175.795 236.985 li
173.749 236.985 li
cp
177.841 237.985 mo
179.887 237.985 li
179.887 236.985 li
177.841 236.985 li
cp
181.933 237.985 mo
183.979 237.985 li
183.979 236.985 li
181.933 236.985 li
cp
186.025 237.985 mo
188.071 237.985 li
188.071 236.985 li
186.025 236.985 li
cp
190.117 237.985 mo
192.163 237.985 li
192.163 236.985 li
190.117 236.985 li
cp
194.209 237.985 mo
196.255 237.985 li
196.255 236.985 li
194.209 236.985 li
cp
198.301 237.985 mo
200.347 237.985 li
200.347 236.985 li
198.301 236.985 li
cp
202.393 237.985 mo
204.439 237.985 li
204.439 236.985 li
202.393 236.985 li
cp
206.485 237.985 mo
208.531 237.985 li
208.531 236.985 li
206.485 236.985 li
cp
210.577 237.985 mo
212.623 237.985 li
212.623 236.985 li
210.577 236.985 li
cp
214.669 237.985 mo
216.715 237.985 li
216.715 236.985 li
214.669 236.985 li
cp
218.761 237.985 mo
220.807 237.985 li
220.807 236.985 li
218.761 236.985 li
cp
222.853 237.985 mo
224.899 237.985 li
224.899 236.985 li
222.853 236.985 li
cp
226.945 237.985 mo
227.689 237.985 li
227.689 236.985 li
226.945 236.985 li
cp
f
228.68 237.985 mo
229.148 237.985 li
229.148 238.453 li
230.148 238.453 li
230.148 237.485 li
230.148 236.985 li
228.68 236.985 li
228.68 237.985 li
cp
f
229.148 240.496 mo
229.148 242.606 li
230.148 242.606 li
230.148 240.496 li
cp
229.148 244.716 mo
229.148 246.826 li
230.148 246.826 li
230.148 244.716 li
cp
229.148 248.936 mo
229.148 251.046 li
230.148 251.046 li
230.148 248.936 li
cp
229.148 253.156 mo
229.148 255.266 li
230.148 255.266 li
230.148 253.156 li
cp
229.148 257.376 mo
229.148 259.486 li
230.148 259.486 li
230.148 257.376 li
cp
229.148 261.596 mo
229.148 263.706 li
230.148 263.706 li
230.148 261.596 li
cp
229.148 265.816 mo
229.148 267.926 li
230.148 267.926 li
230.148 265.816 li
cp
229.148 270.036 mo
229.148 272.146 li
230.148 272.146 li
230.148 270.036 li
cp
f
272.349 265.438 mo
272.349 265.905 li
271.881 265.905 li
271.881 266.905 li
272.849 266.905 li
273.349 266.905 li
273.349 265.438 li
272.349 265.438 li
cp
f
269.848 265.905 mo
267.747 265.905 li
267.747 266.905 li
269.848 266.905 li
cp
265.646 265.905 mo
263.545 265.905 li
263.545 266.905 li
265.646 266.905 li
cp
261.444 265.905 mo
259.343 265.905 li
259.343 266.905 li
261.444 266.905 li
cp
257.242 265.905 mo
255.141 265.905 li
255.141 266.905 li
257.242 266.905 li
cp
253.04 265.905 mo
250.939 265.905 li
250.939 266.905 li
253.04 266.905 li
cp
248.838 265.905 mo
246.737 265.905 li
246.737 266.905 li
248.838 266.905 li
cp
244.636 265.905 mo
242.535 265.905 li
242.535 266.905 li
244.636 266.905 li
cp
f
241.373 265.905 mo
240.905 265.905 li
240.905 265.438 li
239.905 265.438 li
239.905 266.405 li
239.905 266.905 li
241.373 266.905 li
241.373 265.905 li
cp
f
240.905 263.573 mo
240.905 261.647 li
239.905 261.647 li
239.905 263.573 li
cp
240.905 259.721 mo
240.905 257.795 li
239.905 257.795 li
239.905 259.721 li
cp
240.905 255.869 mo
240.905 253.943 li
239.905 253.943 li
239.905 255.869 li
cp
240.905 252.017 mo
240.905 250.091 li
239.905 250.091 li
239.905 252.017 li
cp
f
240.905 248.656 mo
240.905 248.187 li
241.373 248.187 li
241.373 247.188 li
240.405 247.188 li
239.905 247.188 li
239.905 248.656 li
240.905 248.656 li
cp
f
243.407 248.188 mo
245.508 248.188 li
245.508 247.188 li
243.407 247.188 li
cp
247.609 248.188 mo
249.71 248.188 li
249.71 247.188 li
247.609 247.188 li
cp
251.811 248.188 mo
253.912 248.188 li
253.912 247.188 li
251.811 247.188 li
cp
256.013 248.188 mo
258.114 248.188 li
258.114 247.188 li
256.013 247.188 li
cp
260.215 248.188 mo
262.316 248.188 li
262.316 247.188 li
260.215 247.188 li
cp
264.417 248.188 mo
266.518 248.188 li
266.518 247.188 li
264.417 247.188 li
cp
268.619 248.188 mo
270.72 248.188 li
270.72 247.188 li
268.619 247.188 li
cp
f
271.881 248.187 mo
272.349 248.187 li
272.349 248.656 li
273.349 248.656 li
273.349 247.688 li
273.349 247.188 li
271.881 247.188 li
271.881 248.188 li
cp
f
272.349 250.52 mo
272.349 252.446 li
273.349 252.446 li
273.349 250.52 li
cp
272.349 254.372 mo
272.349 256.298 li
273.349 256.298 li
273.349 254.372 li
cp
272.349 258.224 mo
272.349 260.15 li
273.349 260.15 li
273.349 258.224 li
cp
272.349 262.076 mo
272.349 264.002 li
273.349 264.002 li
273.349 262.076 li
cp
f
197.171 368.347 mo
197.171 368.814 li
196.703 368.814 li
196.703 369.814 li
197.671 369.814 li
198.171 369.814 li
198.171 368.347 li
197.171 368.347 li
cp
f
194.727 368.814 mo
192.686 368.814 li
192.686 369.814 li
194.727 369.814 li
cp
190.645 368.814 mo
188.604 368.814 li
188.604 369.814 li
190.645 369.814 li
cp
186.563 368.814 mo
184.522 368.814 li
184.522 369.814 li
186.563 369.814 li
cp
f
182.872 368.814 mo
182.404 368.814 li
182.404 368.347 li
181.404 368.347 li
181.404 369.314 li
181.404 369.814 li
182.872 369.814 li
182.872 368.814 li
cp
f
182.404 366.397 mo
182.404 364.383 li
181.404 364.383 li
181.404 366.397 li
cp
182.404 362.369 mo
182.404 360.355 li
181.404 360.355 li
181.404 362.369 li
cp
182.404 358.341 mo
182.404 356.327 li
181.404 356.327 li
181.404 358.341 li
cp
f
182.404 354.702 mo
182.404 354.234 li
182.872 354.234 li
182.872 353.234 li
181.904 353.234 li
181.404 353.234 li
181.404 354.702 li
182.404 354.702 li
cp
f
184.848 354.234 mo
186.889 354.234 li
186.889 353.234 li
184.848 353.234 li
cp
188.93 354.234 mo
190.971 354.234 li
190.971 353.234 li
188.93 353.234 li
cp
193.012 354.234 mo
195.053 354.234 li
195.053 353.234 li
193.012 353.234 li
cp
f
196.703 354.234 mo
197.171 354.234 li
197.171 354.702 li
198.171 354.702 li
198.171 353.734 li
198.171 353.234 li
196.703 353.234 li
196.703 354.234 li
cp
f
197.171 356.652 mo
197.171 358.666 li
198.171 358.666 li
198.171 356.652 li
cp
197.171 360.68 mo
197.171 362.694 li
198.171 362.694 li
198.171 360.68 li
cp
197.171 364.708 mo
197.171 366.722 li
198.171 366.722 li
198.171 364.708 li
cp
f
341.123 395.156 mo
341.123 395.625 li
340.655 395.625 li
340.655 396.625 li
341.623 396.625 li
342.123 396.625 li
342.123 395.156 li
341.123 395.156 li
cp
f
338.742 395.625 mo
336.765 395.625 li
336.765 396.625 li
338.742 396.625 li
cp
334.788 395.625 mo
332.811 395.625 li
332.811 396.625 li
334.788 396.625 li
cp
330.834 395.625 mo
328.857 395.625 li
328.857 396.625 li
330.834 396.625 li
cp
326.88 395.625 mo
324.903 395.625 li
324.903 396.625 li
326.88 396.625 li
cp
322.926 395.625 mo
320.949 395.625 li
320.949 396.625 li
322.926 396.625 li
cp
318.972 395.625 mo
316.995 395.625 li
316.995 396.625 li
318.972 396.625 li
cp
315.018 395.625 mo
313.041 395.625 li
313.041 396.625 li
315.018 396.625 li
cp
311.064 395.625 mo
309.087 395.625 li
309.087 396.625 li
311.064 396.625 li
cp
307.11 395.625 mo
305.133 395.625 li
305.133 396.625 li
307.11 396.625 li
cp
303.156 395.625 mo
301.179 395.625 li
301.179 396.625 li
303.156 396.625 li
cp
299.202 395.625 mo
297.225 395.625 li
297.225 396.625 li
299.202 396.625 li
cp
295.248 395.625 mo
293.271 395.625 li
293.271 396.625 li
295.248 396.625 li
cp
291.294 395.625 mo
289.317 395.625 li
289.317 396.625 li
291.294 396.625 li
cp
287.34 395.625 mo
285.363 395.625 li
285.363 396.625 li
287.34 396.625 li
cp
283.386 395.625 mo
281.409 395.625 li
281.409 396.625 li
283.386 396.625 li
cp
279.432 395.625 mo
277.455 395.625 li
277.455 396.625 li
279.432 396.625 li
cp
275.478 395.625 mo
273.501 395.625 li
273.501 396.625 li
275.478 396.625 li
cp
271.524 395.625 mo
269.547 395.625 li
269.547 396.625 li
271.524 396.625 li
cp
267.57 395.625 mo
265.593 395.625 li
265.593 396.625 li
267.57 396.625 li
cp
263.616 395.625 mo
261.639 395.625 li
261.639 396.625 li
263.616 396.625 li
cp
259.662 395.625 mo
259.325 395.625 li
259.325 396.625 li
259.662 396.625 li
cp
f
258.369 395.625 mo
257.901 395.625 li
257.901 395.156 li
256.901 395.156 li
256.901 396.125 li
256.901 396.625 li
258.369 396.625 li
258.369 395.625 li
cp
f
257.901 393.176 mo
257.901 391.13 li
256.901 391.13 li
256.901 393.176 li
cp
257.901 389.084 mo
257.901 387.038 li
256.901 387.038 li
256.901 389.084 li
cp
257.901 384.992 mo
257.901 382.946 li
256.901 382.946 li
256.901 384.992 li
cp
257.901 380.9 mo
257.901 378.854 li
256.901 378.854 li
256.901 380.9 li
cp
257.901 376.808 mo
257.901 374.762 li
256.901 374.762 li
256.901 376.808 li
cp
257.901 372.716 mo
257.901 370.67 li
256.901 370.67 li
256.901 372.716 li
cp
257.901 368.624 mo
257.901 366.578 li
256.901 366.578 li
256.901 368.624 li
cp
257.901 364.532 mo
257.901 362.486 li
256.901 362.486 li
256.901 364.532 li
cp
257.901 360.44 mo
257.901 358.394 li
256.901 358.394 li
256.901 360.44 li
cp
257.901 356.348 mo
257.901 354.302 li
256.901 354.302 li
256.901 356.348 li
cp
257.901 352.256 mo
257.901 350.21 li
256.901 350.21 li
256.901 352.256 li
cp
257.901 348.164 mo
257.901 346.118 li
256.901 346.118 li
256.901 348.164 li
cp
257.901 344.072 mo
257.901 342.026 li
256.901 342.026 li
256.901 344.072 li
cp
257.901 339.98 mo
257.901 338.701 li
256.901 338.701 li
256.901 339.98 li
cp
f
257.901 337.711 mo
257.901 337.243 li
258.369 337.243 li
258.369 336.243 li
257.401 336.243 li
256.901 336.243 li
256.901 337.711 li
257.901 337.711 li
cp
f
260.282 337.243 mo
262.259 337.243 li
262.259 336.243 li
260.282 336.243 li
cp
264.236 337.243 mo
266.213 337.243 li
266.213 336.243 li
264.236 336.243 li
cp
268.19 337.243 mo
270.167 337.243 li
270.167 336.243 li
268.19 336.243 li
cp
272.144 337.243 mo
274.121 337.243 li
274.121 336.243 li
272.144 336.243 li
cp
276.098 337.243 mo
278.075 337.243 li
278.075 336.243 li
276.098 336.243 li
cp
280.052 337.243 mo
282.029 337.243 li
282.029 336.243 li
280.052 336.243 li
cp
284.006 337.243 mo
285.983 337.243 li
285.983 336.243 li
284.006 336.243 li
cp
287.96 337.243 mo
289.937 337.243 li
289.937 336.243 li
287.96 336.243 li
cp
291.914 337.243 mo
293.891 337.243 li
293.891 336.243 li
291.914 336.243 li
cp
295.868 337.243 mo
297.845 337.243 li
297.845 336.243 li
295.868 336.243 li
cp
299.822 337.243 mo
301.799 337.243 li
301.799 336.243 li
299.822 336.243 li
cp
303.776 337.243 mo
305.753 337.243 li
305.753 336.243 li
303.776 336.243 li
cp
307.73 337.243 mo
309.707 337.243 li
309.707 336.243 li
307.73 336.243 li
cp
311.684 337.243 mo
313.661 337.243 li
313.661 336.243 li
311.684 336.243 li
cp
315.638 337.243 mo
317.615 337.243 li
317.615 336.243 li
315.638 336.243 li
cp
319.592 337.243 mo
321.569 337.243 li
321.569 336.243 li
319.592 336.243 li
cp
323.546 337.243 mo
325.523 337.243 li
325.523 336.243 li
323.546 336.243 li
cp
327.5 337.243 mo
329.477 337.243 li
329.477 336.243 li
327.5 336.243 li
cp
331.454 337.243 mo
333.431 337.243 li
333.431 336.243 li
331.454 336.243 li
cp
335.408 337.243 mo
337.385 337.243 li
337.385 336.243 li
335.408 336.243 li
cp
339.362 337.243 mo
339.699 337.243 li
339.699 336.243 li
339.362 336.243 li
cp
f
340.655 337.243 mo
341.123 337.243 li
341.123 337.711 li
342.123 337.711 li
342.123 336.743 li
342.123 336.243 li
340.655 336.243 li
340.655 337.243 li
cp
f
341.123 339.692 mo
341.123 341.738 li
342.123 341.738 li
342.123 339.692 li
cp
341.123 343.784 mo
341.123 345.83 li
342.123 345.83 li
342.123 343.784 li
cp
341.123 347.876 mo
341.123 349.922 li
342.123 349.922 li
342.123 347.876 li
cp
341.123 351.968 mo
341.123 354.014 li
342.123 354.014 li
342.123 351.968 li
cp
341.123 356.06 mo
341.123 358.106 li
342.123 358.106 li
342.123 356.06 li
cp
341.123 360.152 mo
341.123 362.198 li
342.123 362.198 li
342.123 360.152 li
cp
341.123 364.244 mo
341.123 366.29 li
342.123 366.29 li
342.123 364.244 li
cp
341.123 368.336 mo
341.123 370.382 li
342.123 370.382 li
342.123 368.336 li
cp
341.123 372.428 mo
341.123 374.474 li
342.123 374.474 li
342.123 372.428 li
cp
341.123 376.52 mo
341.123 378.566 li
342.123 378.566 li
342.123 376.52 li
cp
341.123 380.612 mo
341.123 382.658 li
342.123 382.658 li
342.123 380.612 li
cp
341.123 384.704 mo
341.123 386.75 li
342.123 386.75 li
342.123 384.704 li
cp
341.123 388.796 mo
341.123 390.842 li
342.123 390.842 li
342.123 388.796 li
cp
341.123 392.888 mo
341.123 394.166 li
342.123 394.166 li
342.123 392.888 li
cp
f
240.526 247.202 mo
238.585 246.72 li
238.344 247.69 li
240.285 248.173 li
cp
236.644 246.237 mo
234.703 245.755 li
234.462 246.725 li
236.403 247.208 li
cp
232.762 245.272 mo
230.821 244.79 li
230.58 245.76 li
232.521 246.243 li
cp
228.88 244.307 mo
226.939 243.824 li
226.698 244.795 li
228.639 245.277 li
cp
224.999 243.342 mo
223.058 242.859 li
222.816 243.83 li
224.757 244.312 li
cp
f
240.104 266.006 mo
238.507 267.21 li
239.109 268.008 li
240.706 266.805 li
cp
236.91 268.413 mo
235.313 269.617 li
235.915 270.416 li
237.512 269.212 li
cp
233.715 270.821 mo
232.118 272.024 li
232.72 272.823 li
234.317 271.619 li
cp
230.521 273.228 mo
229.347 274.113 li
229.948 274.912 li
231.123 274.027 li
cp
f
177.118 263.635 mo
177.118 264.496 176.404 265.195 175.524 265.195 cv
174.643 265.195 173.929 264.496 173.929 263.635 cv
173.929 262.772 174.643 262.074 175.524 262.074 cv
176.404 262.074 177.118 262.772 177.118 263.635 cv
1 0 0 0 cmyk
f
176.508 263.567 mo
176.008 263.567 li
175.993 263.614 li
175.992 263.616 li
176.016 263.648 li
176.016 263.609 li
175.992 263.616 li
176.016 263.648 li
176.016 263.609 li
176.016 263.653 li
176.035 263.613 li
176.016 263.609 li
176.016 263.653 li
176.035 263.613 li
176.029 263.625 li
176.038 263.615 li
176.035 263.613 li
176.029 263.625 li
176.038 263.615 li
176.023 263.567 li
176.038 263.52 li
176.039 263.518 li
176.016 263.488 li
176.016 263.524 li
176.039 263.518 li
176.016 263.488 li
176.016 263.524 li
176.016 263.475 li
175.995 263.52 li
176.016 263.524 li
176.016 263.475 li
175.995 263.52 li
176.001 263.508 li
175.992 263.518 li
175.995 263.52 li
176.001 263.508 li
175.992 263.518 li
176.008 263.567 li
176.508 263.567 li
177.008 263.567 li
177.008 263.294 176.907 263.039 176.734 262.848 cv
176.562 262.656 176.304 262.524 176.016 262.524 cv
175.728 262.524 175.469 262.656 175.297 262.847 cv
175.123 263.039 175.023 263.294 175.023 263.567 cv
175.023 263.841 175.123 264.096 175.298 264.287 cv
175.47 264.479 175.729 264.61 176.016 264.609 cv
176.303 264.61 176.561 264.478 176.733 264.287 cv
176.907 264.096 177.008 263.841 177.008 263.567 cv
176.508 263.567 li
cp
0 0 0 1 cmyk
f
204.381 262.157 mo
205.18 262.479 205.561 263.402 205.23 264.22 cv
204.9 265.036 203.986 265.438 203.187 265.113 cv
202.387 264.791 202.008 263.867 202.337 263.05 cv
202.667 262.233 203.581 261.835 204.381 262.157 cv
1 0 0 0 cmyk
f
204.09 262.697 mo
203.902 263.161 li
203.938 263.187 li
203.942 263.194 li
203.963 263.187 li
203.941 263.187 li
203.942 263.194 li
203.963 263.187 li
203.941 263.187 li
203.99 263.187 li
203.945 263.168 li
203.941 263.187 li
203.99 263.187 li
203.945 263.168 li
203.98 263.183 li
203.959 263.15 li
203.945 263.169 li
203.98 263.183 li
203.959 263.15 li
203.941 263.153 li
203.909 263.146 li
203.873 263.119 li
203.869 263.112 li
203.85 263.118 li
203.869 263.118 li
203.869 263.112 li
203.85 263.118 li
203.869 263.118 li
203.818 263.118 li
203.865 263.137 li
203.869 263.118 li
203.818 263.118 li
203.865 263.137 li
203.864 263.139 li
203.831 263.125 li
203.851 263.157 li
203.864 263.139 li
203.831 263.125 li
203.851 263.157 li
203.869 263.154 li
203.902 263.161 li
204.09 262.697 li
204.277 262.234 li
204.144 262.18 204.005 262.154 203.869 262.154 cv
203.489 262.151 203.101 262.365 202.938 262.762 cv
202.937 262.764 li
202.891 262.879 202.869 263 202.869 263.118 cv
202.872 263.544 203.139 263.91 203.532 264.072 cv
203.665 264.126 203.804 264.153 203.941 264.153 cv
204.322 264.155 204.709 263.941 204.872 263.544 cv
204.919 263.429 204.941 263.306 204.941 263.187 cv
204.938 262.76 204.67 262.394 204.277 262.234 cv
204.09 262.697 li
cp
0 0 0 1 cmyk
f
174.814 261.655 mo
174.809 261.652 172.64 260.229 171.191 259.401 cv
170.626 259.078 170.155 258.903 169.873 258.779 cv
169.733 258.72 169.645 258.667 169.637 258.658 cv
169.601 258.702 li
169.644 258.665 li
169.637 258.658 li
169.601 258.702 li
169.644 258.665 li
169.475 258.813 li
169.697 258.813 li
169.644 258.665 li
169.475 258.813 li
169.697 258.813 li
169.594 258.813 li
169.695 258.84 li
169.697 258.813 li
169.594 258.813 li
169.695 258.84 li
169.694 258.831 169.742 258.724 169.857 258.565 cv
170.178 258.12 170.363 257.951 170.647 257.7 cv
170.931 257.449 171.302 257.132 171.86 256.504 cv
172.2 256.117 172.405 255.749 172.411 255.334 cv
172.414 255.066 172.303 254.808 172.145 254.632 cv
171.907 254.365 171.606 254.232 171.301 254.136 cv
170.994 254.043 170.671 253.997 170.366 253.976 cv
170.091 253.957 169.852 254.165 169.834 254.441 cv
169.815 254.716 170.023 254.955 170.299 254.973 cv
170.628 254.994 170.98 255.063 171.193 255.16 cv
171.3 255.208 171.367 255.26 171.39 255.289 cv
171.411 255.334 li
171.416 255.365 171.374 255.549 171.113 255.839 cv
170.585 256.432 170.278 256.691 169.985 256.95 cv
169.692 257.207 169.402 257.48 169.044 257.984 cv
168.858 258.257 168.71 258.47 168.697 258.813 cv
168.696 258.935 168.729 259.07 168.79 259.178 cv
168.898 259.372 169.046 259.472 169.177 259.55 cv
169.377 259.664 169.585 259.742 169.835 259.849 cv
170.084 259.955 170.371 260.084 170.695 260.269 cv
171.394 260.669 172.29 261.226 173.008 261.682 cv
173.726 262.137 174.264 262.491 174.265 262.491 cv
174.496 262.643 174.806 262.578 174.958 262.347 cv
175.109 262.116 175.045 261.807 174.814 261.655 cv
cp
1 0 0 0 cmyk
f
176.907 262.717 mo
180.168 258.394 li
178.937 258.595 li
178.936 258.596 178.532 258.662 177.997 258.728 cv
177.464 258.795 176.8 258.861 176.323 258.86 cv
176.11 258.861 175.931 258.844 175.857 258.825 cv
175.829 258.817 li
175.745 259.03 li
175.905 258.874 li
175.829 258.817 li
175.745 259.03 li
175.905 258.874 li
175.63 259.142 li
176.012 259.142 li
176.016 259.037 175.956 258.919 175.905 258.874 cv
175.63 259.142 li
176.012 259.142 li
175.658 259.142 li
175.988 259.272 li
176.012 259.142 li
175.658 259.142 li
175.988 259.272 li
176.029 259.169 176.048 259.06 176.048 258.958 cv
176.047 258.762 175.985 258.607 175.925 258.488 cv
175.833 258.311 175.736 258.187 175.679 258.088 cv
175.619 257.988 175.609 257.937 175.611 257.927 cv
175.613 257.918 175.602 257.898 175.685 257.793 cv
175.768 257.692 175.95 257.535 176.269 257.348 cv
177.641 256.532 180.32 255.872 182.076 255.88 cv
182.485 255.88 182.842 255.915 183.108 255.979 cv
183.789 256.15 184.105 256.537 184.318 257.006 cv
184.522 257.473 184.558 258.007 184.557 258.274 cv
184.778 258.274 li
184.574 258.187 li
184.557 258.274 li
184.778 258.274 li
184.574 258.187 li
184.678 258.231 li
184.59 258.158 li
184.574 258.187 li
184.678 258.231 li
184.59 258.158 li
184.592 258.166 184.463 258.264 184.274 258.359 cv
183.991 258.511 183.588 258.69 183.222 258.987 cv
182.857 259.275 182.515 259.755 182.521 260.379 cv
182.521 260.727 182.529 261.01 182.564 261.266 cv
182.591 261.458 182.634 261.637 182.719 261.809 cv
182.842 262.072 183.086 262.28 183.339 262.38 cv
183.594 262.485 183.859 262.528 184.18 262.569 cv
184.2 262.572 li
184.179 262.569 li
184.278 262.582 184.373 262.587 184.465 262.587 cv
184.818 262.587 185.117 262.508 185.347 262.442 cv
185.574 262.373 185.746 262.331 185.775 262.337 cv
185.776 262.336 li
185.797 262.212 li
185.733 262.319 li
185.776 262.336 li
185.797 262.212 li
185.733 262.319 li
185.787 262.228 li
185.708 262.301 li
185.733 262.319 li
185.787 262.228 li
185.708 262.301 li
185.712 262.307 li
185.726 262.326 185.76 262.399 185.791 262.53 cv
185.854 262.799 186.123 262.966 186.392 262.903 cv
186.661 262.84 186.827 262.57 186.764 262.302 cv
186.699 262.033 186.613 261.807 186.436 261.615 cv
186.26 261.418 185.98 261.329 185.775 261.337 cv
185.486 261.342 185.28 261.425 185.071 261.481 cv
184.864 261.541 184.667 261.587 184.465 261.587 cv
184.304 261.577 li
184.284 261.575 li
184.303 261.577 li
184.046 261.546 183.863 261.509 183.762 261.472 cv
183.645 261.409 li
183.629 261.392 183.595 261.357 183.564 261.187 cv
183.533 261.021 183.52 260.751 183.521 260.379 cv
183.525 260.168 183.585 260.045 183.712 259.897 cv
183.901 259.678 184.275 259.48 184.642 259.295 cv
184.826 259.198 185.007 259.106 185.18 258.971 cv
185.265 258.902 185.352 258.82 185.427 258.706 cv
185.501 258.593 185.558 258.438 185.557 258.274 cv
185.555 257.931 185.523 257.279 185.235 256.609 cv
184.956 255.942 184.356 255.243 183.341 255.007 cv
182.965 254.917 182.54 254.881 182.076 254.88 cv
180.094 254.889 177.388 255.543 175.763 256.486 cv
175.383 256.71 175.113 256.919 174.918 257.152 cv
174.723 257.38 174.608 257.66 174.611 257.927 cv
174.617 258.319 174.804 258.573 174.911 258.745 cv
175.034 258.942 li
175.05 258.978 li
175.119 258.958 li
175.048 258.958 li
175.05 258.978 li
175.119 258.958 li
175.048 258.958 li
175.187 258.958 li
175.057 258.907 li
175.048 258.958 li
175.187 258.958 li
175.057 258.907 li
175.012 259.142 li
175.006 259.37 175.16 259.575 175.282 259.651 cv
175.471 259.778 175.623 259.801 175.79 259.829 cv
175.955 259.852 176.132 259.86 176.323 259.86 cv
177.432 259.858 179.085 259.583 179.098 259.582 cv
179.018 259.089 li
178.618 258.788 li
176.109 262.115 li
175.942 262.335 175.986 262.649 176.207 262.815 cv
176.427 262.981 176.741 262.938 176.907 262.717 cv
cp
f
175.023 265.195 mo
175.023 267.308 li
175.046 267.381 li
175.063 267.429 175.119 267.597 175.295 267.776 cv
175.467 267.956 175.782 268.12 176.167 268.115 cv
176.312 268.115 176.466 268.095 176.629 268.054 cv
176.891 267.988 177.106 267.891 177.285 267.824 cv
177.465 267.755 177.602 267.72 177.69 267.722 cv
177.775 267.726 177.829 267.733 177.952 267.826 cv
178.073 267.921 178.246 268.122 178.442 268.486 cv
179.025 269.555 179.146 270.103 179.141 270.337 cv
179.139 270.451 179.123 270.501 179.096 270.572 cv
179.057 270.67 179.039 270.772 179.039 270.874 cv
179.037 271.125 179.156 271.387 179.375 271.563 cv
179.594 271.742 179.886 271.827 180.213 271.826 cv
180.718 271.823 181.335 271.643 182.171 271.2 cv
183.25 270.631 183.737 269.881 184.055 269.388 cv
184.214 269.139 184.339 268.969 184.444 268.885 cv
184.551 268.804 184.634 268.759 184.887 268.754 cv
185.016 268.759 li
185.017 268.759 li
185.255 268.769 li
185.434 268.767 185.587 268.757 185.769 268.675 cv
185.859 268.632 185.959 268.561 186.034 268.452 cv
186.109 268.343 186.144 268.207 186.142 268.098 cv
186.139 267.92 186.083 267.806 186.033 267.709 cv
185.94 267.544 185.829 267.417 185.708 267.282 cv
185.527 267.085 185.323 266.884 185.167 266.706 cv
184.984 266.473 li
184.942 266.4 li
184.935 266.384 li
184.917 266.39 li
184.936 266.386 li
184.935 266.384 li
184.917 266.39 li
184.936 266.386 li
184.881 266.116 184.618 265.94 184.347 265.994 cv
184.076 266.048 183.901 266.312 183.955 266.582 cv
184.015 266.853 184.147 267.029 184.282 267.206 cv
184.488 267.465 184.737 267.706 184.923 267.907 cv
185.016 268.006 185.092 268.095 185.131 268.151 cv
185.159 268.195 li
185.375 268.098 li
185.142 268.098 li
185.159 268.195 li
185.375 268.098 li
185.142 268.098 li
185.515 268.098 li
185.208 267.888 li
185.142 268.098 li
185.515 268.098 li
185.208 267.888 li
185.445 268.05 li
185.363 267.762 li
185.359 267.764 185.28 267.785 185.208 267.888 cv
185.445 268.05 li
185.363 267.762 li
185.341 267.766 li
185.255 267.769 li
185.096 267.762 li
185.096 267.762 li
184.887 267.754 li
184.46 267.748 184.079 267.886 183.811 268.111 cv
183.411 268.452 183.238 268.848 182.965 269.215 cv
182.696 269.587 182.361 269.962 181.7 270.318 cv
180.953 270.718 180.46 270.829 180.213 270.826 cv
180.047 270.806 li
180.009 270.79 li
180.003 270.8 li
180.011 270.792 li
180.009 270.79 li
180.003 270.8 li
180.011 270.792 li
179.923 270.874 li
180.039 270.874 li
180.011 270.792 li
179.923 270.874 li
180.039 270.874 li
179.848 270.874 li
180.024 270.944 li
180.039 270.874 li
179.848 270.874 li
180.024 270.944 li
180.085 270.798 180.143 270.586 180.141 270.337 cv
180.136 269.809 179.933 269.146 179.321 268.01 cv
179.084 267.574 178.848 267.263 178.575 267.044 cv
178.305 266.824 177.979 266.718 177.69 266.722 cv
177.389 266.723 177.142 266.811 176.931 266.889 cv
176.72 266.97 176.539 267.047 176.387 267.084 cv
176.292 267.108 176.22 267.115 176.167 267.115 cv
176.029 267.11 176.022 267.082 176.003 267.07 cv
175.99 267.053 li
175.852 267.128 li
176 267.081 li
175.99 267.053 li
175.852 267.128 li
176 267.081 li
175.523 267.231 li
176.023 267.231 li
176.023 265.195 li
176.023 264.919 175.8 264.695 175.523 264.695 cv
175.247 264.695 175.023 264.919 175.023 265.195 cv
cp
f
174.018 263.957 mo
173.854 263.944 li
173.68 263.944 173.386 263.984 173.06 264.171 cv
172.733 264.357 172.383 264.685 172.073 265.213 cv
171.862 265.567 171.785 265.924 171.787 266.225 cv
171.796 266.704 171.932 267.042 171.917 267.149 cv
171.901 267.213 li
171.884 267.237 171.816 267.308 171.642 267.397 cv
171.364 267.537 171.085 267.565 170.776 267.565 cv
170.643 267.565 170.506 267.56 170.364 267.56 cv
170.224 267.56 170.077 267.564 169.918 267.597 cv
169.683 267.638 169.389 267.791 169.228 268.062 cv
169.067 268.329 169.02 268.629 169.019 268.995 cv
169.012 269.901 169.378 270.544 169.753 270.941 cv
169.939 271.142 170.124 271.291 170.257 271.403 cv
170.409 271.536 li
170.439 271.569 li
170.441 271.571 li
170.531 271.509 li
170.435 271.561 li
170.441 271.571 li
170.531 271.509 li
170.435 271.561 li
170.434 271.559 li
170.434 271.559 li
170.496 271.681 170.613 271.808 170.751 271.875 cv
170.89 271.943 171.017 271.954 171.11 271.954 cv
171.323 271.949 171.437 271.916 171.56 271.919 cv
171.729 271.926 171.903 271.94 172.246 272.224 cv
172.456 272.404 172.772 272.38 172.951 272.17 cv
173.131 271.96 173.107 271.645 172.897 271.465 cv
172.416 271.043 171.92 270.912 171.56 270.919 cv
171.316 270.922 171.132 270.959 171.11 270.954 cv
171.11 271.052 li
171.128 270.956 li
171.11 270.954 li
171.11 271.052 li
171.128 270.956 li
171.078 271.231 li
171.241 271.007 li
171.128 270.956 li
171.078 271.231 li
171.241 271.007 li
171.093 271.211 li
171.318 271.091 li
171.241 271.007 li
171.093 271.211 li
171.318 271.091 li
171.316 271.088 li
171.317 271.089 li
171.184 270.858 171.037 270.759 170.899 270.636 cv
170.688 270.461 170.473 270.283 170.309 270.038 cv
170.147 269.793 170.021 269.488 170.019 268.995 cv
170.018 268.816 170.038 268.698 170.057 268.64 cv
170.081 268.586 li
170.067 268.574 li
170.076 268.589 li
170.081 268.586 li
170.067 268.574 li
170.076 268.589 li
170.145 268.571 li
170.194 268.564 170.269 268.559 170.364 268.56 cv
170.477 268.559 170.617 268.565 170.776 268.565 cv
171.139 268.565 171.612 268.534 172.096 268.287 cv
172.357 268.154 172.563 268.002 172.711 267.798 cv
172.862 267.595 172.92 267.347 172.917 267.149 cv
172.901 266.722 172.777 266.466 172.787 266.225 cv
172.789 266.075 172.813 265.932 172.935 265.72 cv
173.174 265.315 173.397 265.131 173.556 265.039 cv
173.716 264.949 173.822 264.945 173.854 264.944 cv
173.861 264.944 li
173.887 264.677 li
173.839 264.941 li
173.861 264.944 li
173.887 264.677 li
173.839 264.941 li
174.111 264.991 174.371 264.81 174.421 264.539 cv
174.47 264.267 174.29 264.007 174.018 263.957 cv
cp
f
174.046 263.149 mo
174.043 263.148 172.763 262.84 171.337 262.532 cv
170.624 262.377 169.875 262.223 169.227 262.106 cv
168.575 261.989 168.048 261.908 167.688 261.906 cv
167.461 261.923 li
167.448 261.926 li
167.463 261.923 li
167.163 261.976 166.912 262.129 166.727 262.313 cv
166.447 262.59 166.288 262.927 166.182 263.245 cv
166.079 263.565 166.033 263.863 166.032 264.109 cv
166.039 264.199 165.971 264.4 165.857 264.707 cv
165.749 265.012 165.625 265.423 165.626 265.941 cv
165.627 266.576 165.72 267.11 165.716 267.354 cv
165.71 267.45 li
165.919 267.5 li
165.772 267.353 li
165.71 267.45 li
165.919 267.5 li
165.772 267.353 li
165.773 267.352 li
165.757 267.367 li
165.754 267.37 li
165.887 267.505 li
165.755 267.37 li
165.754 267.37 li
165.887 267.505 li
165.755 267.37 li
166.076 267.698 li
165.758 267.367 li
165.755 267.37 li
166.076 267.698 li
165.758 267.367 li
166.101 267.724 li
165.764 267.361 li
165.758 267.367 li
166.101 267.724 li
165.764 267.361 li
166.104 267.727 li
165.776 267.351 li
165.764 267.361 li
166.104 267.727 li
165.776 267.351 li
166.104 267.728 li
165.798 267.333 li
165.776 267.351 li
166.104 267.728 li
165.798 267.333 li
166.104 267.728 li
165.836 267.306 li
165.798 267.333 li
166.104 267.728 li
165.836 267.306 li
166.104 267.728 li
165.893 267.274 li
165.836 267.306 li
166.104 267.728 li
165.893 267.274 li
166.104 267.728 li
166.104 267.228 li
165.962 267.233 165.927 267.263 165.893 267.274 cv
166.104 267.728 li
166.104 267.228 li
166.104 267.728 li
166.436 267.354 li
166.385 267.309 166.278 267.23 166.104 267.228 cv
166.104 267.728 li
166.436 267.354 li
166.104 267.728 li
166.554 267.508 li
166.536 267.48 166.527 267.44 166.436 267.354 cv
166.104 267.728 li
166.554 267.508 li
166.104 267.727 li
166.589 267.606 li
166.554 267.508 li
166.104 267.727 li
166.589 267.606 li
166.104 267.728 li
166.458 268.081 li
166.458 268.081 167.595 266.944 167.972 266.566 cv
168.168 266.371 168.167 266.054 167.972 265.859 cv
167.777 265.664 167.46 265.664 167.265 265.86 cv
166.888 266.237 165.752 267.372 165.751 267.374 cv
165.627 267.498 165.577 267.679 165.619 267.849 cv
165.636 267.903 li
165.68 267.993 li
165.772 268.101 li
165.823 268.146 165.93 268.225 166.104 268.228 cv
166.247 268.222 166.282 268.192 166.316 268.181 cv
166.397 268.133 li
166.439 268.099 li
166.455 268.084 li
166.479 268.06 li
166.48 268.059 li
166.6 267.938 166.655 267.798 166.683 267.682 cv
166.71 267.564 166.716 267.459 166.716 267.354 cv
166.712 266.946 166.625 266.484 166.626 265.941 cv
166.627 265.578 166.706 265.31 166.801 265.039 cv
166.891 264.769 167.026 264.495 167.032 264.109 cv
167.029 263.961 167.089 263.609 167.215 263.345 cv
167.277 263.211 167.353 263.098 167.427 263.026 cv
167.639 262.907 li
167.653 262.905 li
167.64 262.907 li
167.631 262.855 li
167.637 262.908 li
167.64 262.907 li
167.631 262.855 li
167.637 262.908 li
167.688 262.906 li
167.892 262.903 168.427 262.976 169.05 263.09 cv
169.993 263.26 171.187 263.518 172.141 263.734 cv
173.096 263.949 173.81 264.121 173.812 264.121 cv
174.08 264.185 174.35 264.02 174.415 263.752 cv
174.479 263.483 174.314 263.213 174.046 263.149 cv
cp
f
202.632 262.646 mo
200.52 261.105 li
200.487 261.088 li
200.438 261.061 li
200.316 260.993 199.986 260.797 199.667 260.534 cv
199.346 260.274 199.051 259.936 198.961 259.667 cv
198.912 259.52 198.796 259.368 198.65 259.283 cv
198.505 259.197 198.356 259.173 198.228 259.173 cv
197.988 259.176 197.786 259.245 197.57 259.337 cv
196.832 259.661 195.902 260.369 195.088 261.089 cv
194.684 261.449 194.317 261.81 194.034 262.13 cv
193.892 262.291 193.771 262.441 193.673 262.585 cv
193.577 262.734 193.496 262.859 193.453 263.065 cv
193.569 263.086 li
193.468 263.023 li
193.453 263.065 li
193.569 263.086 li
193.468 263.023 li
193.453 263.038 li
193.405 263.089 193.216 263.194 192.976 263.271 cv
192.615 263.393 192.142 263.482 191.768 263.536 cv
191.581 263.563 191.418 263.582 191.303 263.594 cv
191.187 263.606 191.124 263.611 191.124 263.611 cv
191.162 264.109 li
191.536 263.778 li
189.568 261.56 li
189.385 261.353 189.069 261.334 188.862 261.518 cv
188.656 261.701 188.637 262.017 188.82 262.223 cv
190.953 264.627 li
191.201 264.608 li
191.213 264.607 191.888 264.555 192.607 264.402 cv
192.968 264.325 193.338 264.225 193.664 264.073 cv
193.828 263.997 193.982 263.907 194.122 263.781 cv
194.26 263.657 194.394 263.479 194.437 263.243 cv
194.316 263.221 li
194.431 263.266 li
194.437 263.243 li
194.316 263.221 li
194.431 263.266 li
194.434 263.253 194.492 263.148 194.59 263.024 cv
194.936 262.573 195.727 261.815 196.505 261.206 cv
196.894 260.9 197.284 260.626 197.609 260.438 cv
197.771 260.344 197.917 260.272 198.031 260.228 cv
198.143 260.183 198.226 260.171 198.228 260.173 cv
198.228 259.987 li
198.136 260.141 li
198.228 260.173 li
198.228 259.987 li
198.136 260.141 li
198.273 259.912 li
198.019 260.003 li
198.136 260.141 li
198.273 259.912 li
198.019 260.003 li
198.258 260.645 198.765 261.099 199.196 261.436 cv
199.63 261.769 200.007 261.965 200.023 261.974 cv
200.255 261.531 li
199.96 261.935 li
202.042 263.454 li
202.265 263.616 202.578 263.568 202.741 263.344 cv
202.904 263.121 202.855 262.809 202.632 262.646 cv
cp
f
204.382 262.192 mo
204.383 262.187 204.532 261.708 204.682 261.129 cv
204.83 260.542 204.986 259.892 204.991 259.41 cv
204.98 259.248 205 259.1 204.843 258.86 cv
204.764 258.757 204.708 258.721 204.645 258.673 cv
204.421 258.515 204.086 258.346 203.659 258.139 cv
202.395 257.533 200.45 256.728 200.446 256.726 cv
200.255 257.188 li
200.729 257.348 li
201.251 255.801 li
206.41 254.554 li
206.679 254.489 206.844 254.219 206.779 253.95 cv
206.714 253.682 206.444 253.517 206.175 253.582 cv
200.48 254.959 li
199.632 257.472 li
200.064 257.65 li
200.066 257.651 201.043 258.056 202.052 258.503 cv
202.555 258.726 203.067 258.959 203.459 259.154 cv
203.655 259.251 203.822 259.339 203.937 259.407 cv
204.061 259.485 li
204.077 259.497 li
204.254 259.295 li
204.039 259.454 li
204.077 259.497 li
204.254 259.295 li
204.039 259.454 li
204.248 259.3 li
203.988 259.349 li
204.04 259.455 li
204.248 259.3 li
203.988 259.349 li
203.991 259.41 li
203.996 259.666 203.858 260.333 203.713 260.878 cv
203.642 261.155 203.57 261.411 203.516 261.597 cv
203.462 261.783 203.427 261.896 203.427 261.896 cv
203.345 262.16 203.493 262.44 203.757 262.522 cv
204.02 262.603 204.3 262.456 204.382 262.192 cv
cp
f
203.441 264.702 mo
203.44 264.702 203.104 265.018 202.746 265.331 cv
202.567 265.488 202.383 265.643 202.242 265.752 cv
202.079 265.869 li
202.062 265.879 li
202.061 265.88 li
202.219 266.209 li
202.219 265.849 li
202.085 265.855 202.071 265.88 202.061 265.88 cv
202.219 266.209 li
202.219 265.849 li
202.072 265.863 li
201.785 265.911 201.059 266.088 200.346 266.343 cv
199.99 266.471 199.646 266.615 199.358 266.789 cv
199.214 266.878 199.082 266.972 198.964 267.101 cv
198.85 267.226 198.729 267.409 198.726 267.663 cv
198.759 267.876 li
198.879 268.257 199.094 268.73 199.367 269.193 cv
199.643 269.655 199.964 270.099 200.355 270.407 cv
200.624 270.616 201.147 271.061 201.583 271.503 cv
201.801 271.723 201.998 271.945 202.128 272.124 cv
202.264 272.342 li
202.284 272.391 li
202.29 272.39 li
202.284 272.391 li
202.284 272.391 li
202.29 272.39 li
202.284 272.391 li
202.434 272.367 li
202.282 272.367 li
202.284 272.391 li
202.434 272.367 li
202.282 272.367 li
202.555 272.367 li
202.305 272.261 li
202.282 272.367 li
202.555 272.367 li
202.305 272.261 li
202.302 272.269 li
202.306 272.259 li
202.487 272.337 li
202.322 272.229 li
202.306 272.259 li
202.487 272.337 li
202.322 272.229 li
202.321 272.23 li
202.295 272.268 202.111 272.417 201.882 272.555 cv
201.535 272.771 201.072 273.009 200.701 273.188 cv
200.515 273.278 200.352 273.354 200.236 273.408 cv
200.12 273.461 200.052 273.491 200.052 273.491 cv
199.8 273.602 199.685 273.897 199.796 274.15 cv
199.908 274.403 200.203 274.517 200.456 274.406 cv
200.461 274.403 201.045 274.146 201.664 273.824 cv
201.975 273.662 202.294 273.485 202.563 273.306 cv
202.699 273.217 202.822 273.127 202.931 273.03 cv
203.04 272.93 203.142 272.836 203.225 272.653 cv
203.226 272.651 li
203.267 272.554 203.283 272.455 203.282 272.367 cv
203.28 272.181 203.227 272.041 203.166 271.91 cv
202.948 271.47 202.542 271.043 202.112 270.62 cv
201.683 270.204 201.239 269.828 200.969 269.618 cv
200.75 269.452 200.46 269.082 200.227 268.684 cv
199.992 268.287 199.799 267.855 199.714 267.579 cv
199.446 267.663 li
199.726 267.663 li
199.714 267.579 li
199.446 267.663 li
199.726 267.663 li
199.492 267.663 li
199.703 267.771 li
199.726 267.663 li
199.492 267.663 li
199.703 267.771 li
199.632 267.734 li
199.696 267.782 li
199.703 267.771 li
199.632 267.734 li
199.696 267.782 li
199.694 267.77 199.871 267.627 200.12 267.515 cv
200.495 267.335 201.024 267.16 201.463 267.037 cv
201.683 266.975 201.883 266.925 202.03 266.891 cv
202.206 266.855 li
202.249 266.848 li
202.25 266.847 li
202.219 266.518 li
202.219 266.849 li
202.25 266.847 li
202.219 266.518 li
202.219 266.849 li
202.363 266.844 202.419 266.811 202.474 266.79 cv
202.652 266.705 202.776 266.603 202.95 266.467 cv
203.447 266.069 204.12 265.435 204.125 265.431 cv
204.327 265.242 204.337 264.926 204.148 264.724 cv
203.959 264.523 203.642 264.513 203.441 264.702 cv
cp
f
204.872 264.568 mo
206.668 266.415 li
206.842 266.437 li
206.842 266.438 207.15 266.476 207.617 266.547 cv
208.317 266.652 209.37 266.827 210.228 267.038 cv
210.655 267.142 211.036 267.258 211.276 267.364 cv
211.395 267.415 211.478 267.466 211.499 267.485 cv
211.505 267.489 li
211.602 267.384 li
211.479 267.453 li
211.505 267.489 li
211.602 267.384 li
211.479 267.453 li
211.757 267.297 li
211.44 267.298 li
211.479 267.453 li
211.757 267.297 li
211.44 267.298 li
211.773 267.298 li
211.469 267.16 li
211.44 267.298 li
211.773 267.298 li
211.469 267.16 li
211.466 267.172 211.405 267.269 211.306 267.382 cv
210.954 267.792 210.181 268.461 209.511 269.028 cv
209.175 269.313 208.862 269.577 208.625 269.788 cv
208.506 269.894 208.407 269.985 208.326 270.07 cv
208.209 270.205 li
208.145 270.309 li
208.123 270.358 208.089 270.42 208.086 270.554 cv
208.092 270.634 li
208.586 270.556 li
208.087 270.585 li
208.56 270.557 li
208.086 270.557 li
208.087 270.585 li
208.56 270.557 li
208.086 270.557 li
208.545 270.557 li
208.161 270.303 li
208.136 270.343 208.089 270.418 208.086 270.557 cv
208.545 270.557 li
208.161 270.303 li
208.454 270.497 li
208.213 270.24 li
208.161 270.303 li
208.454 270.497 li
208.213 270.24 li
208.278 270.309 li
208.221 270.233 li
208.213 270.24 li
208.278 270.309 li
208.221 270.233 li
208.19 270.26 207.964 270.384 207.699 270.503 cv
207.294 270.689 206.759 270.909 206.329 271.081 cv
205.899 271.253 205.574 271.377 205.573 271.378 cv
204.981 271.603 li
206.355 273.619 li
206.511 273.848 206.822 273.907 207.05 273.751 cv
207.278 273.596 207.337 273.285 207.182 273.056 cv
206.164 271.563 li
205.751 271.845 li
205.929 272.312 li
205.932 272.311 206.643 272.04 207.361 271.74 cv
207.721 271.59 208.081 271.433 208.363 271.295 cv
208.506 271.225 208.627 271.161 208.733 271.094 cv
208.894 270.972 li
208.995 270.855 li
209.03 270.798 209.083 270.709 209.086 270.557 cv
209.085 270.526 li
209.084 270.502 li
209.08 270.478 li
208.596 270.554 li
209.086 270.554 li
209.08 270.478 li
208.596 270.554 li
209.086 270.554 li
208.642 270.554 li
209.034 270.766 li
209.046 270.737 209.081 270.693 209.086 270.554 cv
208.642 270.554 li
209.034 270.766 li
208.827 270.654 li
209.014 270.799 li
209.034 270.766 li
208.827 270.654 li
209.014 270.799 li
209.015 270.795 209.085 270.72 209.18 270.633 cv
209.524 270.316 210.231 269.738 210.883 269.168 cv
211.21 268.882 211.525 268.596 211.785 268.334 cv
212.045 268.064 212.247 267.849 212.38 267.573 cv
212.417 267.492 212.441 267.395 212.44 267.298 cv
212.44 267.101 212.353 266.944 212.268 266.843 cv
212.102 266.654 211.923 266.563 211.717 266.465 cv
211.007 266.149 209.857 265.914 208.838 265.732 cv
207.825 265.554 206.972 265.446 206.967 265.445 cv
206.904 265.941 li
207.263 265.593 li
205.589 263.871 li
205.396 263.673 205.08 263.669 204.882 263.861 cv
204.684 264.054 204.679 264.37 204.872 264.568 cv
cp
f
205.386 263.652 mo
211.684 263.174 li
213.5 265.946 li
214.644 270.115 li
215.247 269.569 li
215.248 269.568 215.978 268.906 216.719 268.216 cv
217.09 267.871 217.463 267.52 217.751 267.238 cv
217.895 267.097 218.018 266.974 218.113 266.873 cv
218.238 266.732 li
218.295 266.658 li
218.315 266.626 218.338 266.599 218.371 266.507 cv
218.117 266.423 li
218.36 266.537 li
218.371 266.507 li
218.117 266.423 li
218.36 266.537 li
218.37 266.511 218.496 266.293 218.651 266.044 cv
218.888 265.66 219.217 265.145 219.491 264.72 cv
219.628 264.507 219.752 264.317 219.844 264.177 cv
219.955 264.009 li
219.987 263.962 li
219.993 263.952 li
219.765 263.79 li
219.985 263.964 li
219.993 263.952 li
219.765 263.79 li
219.985 263.964 li
219.991 263.956 li
219.997 263.947 li
220.072 263.845 220.095 263.725 220.093 263.651 cv
220.086 263.487 220.046 263.444 220.03 263.403 cv
219.946 263.284 li
219.864 263.19 219.761 263.093 219.608 262.951 cv
219.082 262.467 218.049 261.579 217.111 260.793 cv
216.643 260.401 216.199 260.035 215.856 259.759 cv
215.684 259.621 215.537 259.506 215.422 259.419 cv
215.269 259.307 li
215.218 259.275 215.198 259.254 215.098 259.21 cv
214.842 259.107 214.551 259.23 214.448 259.487 cv
214.344 259.743 214.468 260.034 214.724 260.137 cv
214.858 259.805 li
214.684 260.119 li
214.724 260.137 li
214.858 259.805 li
214.684 260.119 li
214.712 260.068 li
214.681 260.117 li
214.684 260.119 li
214.712 260.068 li
214.681 260.117 li
214.706 260.132 214.829 260.222 214.983 260.343 cv
215.535 260.775 216.611 261.671 217.541 262.467 cv
218.006 262.865 218.436 263.24 218.746 263.518 cv
218.9 263.658 219.026 263.773 219.106 263.852 cv
219.184 263.931 li
219.186 263.934 li
219.423 263.74 li
219.163 263.9 li
219.186 263.934 li
219.423 263.74 li
219.163 263.9 li
219.544 263.665 li
219.13 263.836 li
219.163 263.9 li
219.544 263.665 li
219.13 263.836 li
219.579 263.651 li
219.094 263.651 li
219.095 263.754 219.117 263.802 219.13 263.836 cv
219.579 263.651 li
219.094 263.651 li
219.589 263.651 li
219.188 263.359 li
219.114 263.46 219.092 263.578 219.094 263.651 cv
219.589 263.651 li
219.188 263.359 li
219.593 263.653 li
219.201 263.343 li
219.149 263.415 li
219.028 263.594 218.63 264.206 218.247 264.808 cv
218.055 265.109 217.869 265.405 217.725 265.641 cv
217.653 265.759 217.591 265.862 217.543 265.946 cv
217.48 266.061 li
217.422 266.192 li
217.794 266.316 li
217.469 266.093 li
217.422 266.192 li
217.794 266.316 li
217.469 266.093 li
217.538 266.14 li
217.472 266.09 li
217.469 266.093 li
217.538 266.14 li
217.472 266.09 li
217.464 266.102 217.392 266.182 217.297 266.279 cv
216.957 266.627 216.27 267.271 215.677 267.819 cv
215.082 268.369 214.576 268.827 214.575 268.828 cv
214.911 269.198 li
215.393 269.066 li
214.422 265.53 li
212.197 262.132 li
205.311 262.655 li
205.035 262.676 204.829 262.916 204.85 263.191 cv
204.871 263.466 205.111 263.673 205.386 263.652 cv
cp
f
204.741 263.053 mo
206.519 261.716 li
209.861 260.76 li
213.931 257.283 li
212.851 254.03 li
210.037 253.574 li
209.764 253.53 209.508 253.715 209.463 253.988 cv
209.419 254.26 209.604 254.517 209.877 254.561 cv
212.093 254.921 li
212.77 256.959 li
209.377 259.859 li
206.066 260.805 li
204.14 262.254 li
203.919 262.42 203.875 262.733 204.041 262.954 cv
204.207 263.174 204.52 263.219 204.741 263.053 cv
cp
f
187.724 254.475 mo
187.724 259.415 li
187.724 259.553 187.836 259.665 187.974 259.665 cv
188.112 259.665 188.224 259.553 188.224 259.415 cv
188.224 254.475 li
188.224 254.337 188.112 254.225 187.974 254.225 cv
187.836 254.225 187.724 254.337 187.724 254.475 cv
0 0 0 1 cmyk
f
187.974 261.125 mo
186.99 258.717 li
187.974 259.288 li
188.957 258.717 li
187.974 261.125 li
cp
f
200.525 251.118 mo
206.076 252.742 li
206.209 252.781 206.348 252.705 206.386 252.573 cv
206.425 252.44 206.349 252.301 206.217 252.262 cv
200.665 250.638 li
200.532 250.6 200.394 250.676 200.355 250.808 cv
200.316 250.941 200.392 251.08 200.525 251.118 cv
f
207.786 252.982 mo
205.2 253.25 li
206.023 252.467 li
205.752 251.362 li
207.786 252.982 li
cp
f
grestore
.55 .6 .65 .4 cmyk
AVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf228.277 88.3281 mo(B)sh233.683 88.3281 mo(a)sh237.949 88.3281 mo(c)sh242.255 88.3281 mo(t)sh244.687 88.3281 mo(e)sh249.015 88.3281 mo(r)sh251.726 88.3281 mo(i)sh253.561 88.3281 mo(a)sh0 1 1 0 cmyk
AVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf205.286 46.1396 mo(D)sh210.894 46.1396 mo(sc)[4.00293 0 ]xsh219.187 46.1396 mo(a)sh223.492 46.1396 mo(m)sh229.804 46.1396 mo(1)shgsave
0 0 mo
383 0 li
383 497.868 li
0 497.868 li
0 0 li
clp
214.132 52.4985 mo
215.912 55.6562 li
216.348 55.4106 li
215.964 55.0905 li
215.96 55.0948 215.654 55.4622 215.341 55.8843 cv
215.184 56.096 215.026 56.3201 214.899 56.5296 cv
214.835 56.635 214.779 56.7361 214.733 56.8403 cv
214.689 56.9481 214.643 57.0453 214.638 57.2256 cv
214.643 57.5533 214.761 57.7985 214.858 57.9844 cv
214.959 58.1683 215.054 58.2876 215.065 58.3023 cv
215.457 57.9922 li
214.977 57.854 li
214.97 57.8811 214.927 58.0231 214.926 58.2325 cv
214.928 58.3831 214.946 58.5813 215.072 58.7911 cv
215.194 59.0035 215.457 59.1787 215.736 59.2127 cv
215.855 59.2217 li
216.082 59.2209 216.26 59.1297 216.384 59.0407 cv
216.572 58.9039 216.684 58.7537 216.767 58.6558 cv
216.84 58.5692 li
216.681 58.4078 li
216.801 58.5986 li
216.84 58.5692 li
216.681 58.4078 li
216.801 58.5986 li
216.573 58.2379 li
216.573 58.6621 li
216.701 58.6598 216.769 58.6174 216.801 58.5986 cv
216.573 58.2379 li
216.573 58.6621 li
216.573 58.2032 li
216.321 58.5868 li
216.573 58.6621 li
216.573 58.2032 li
216.321 58.5868 li
216.543 58.2497 li
216.161 58.3952 li
216.173 58.4212 216.198 58.5013 216.321 58.5868 cv
216.543 58.2497 li
216.161 58.3952 li
216.345 58.3253 li
216.154 58.375 li
216.161 58.3952 li
216.345 58.3253 li
216.154 58.375 li
216.157 58.3921 li
216.164 58.4379 216.171 58.551 216.171 58.7183 cv
216.171 59.5891 216.207 59.944 216.206 60.1882 cv
216.206 60.3105 216.2 60.4125 216.176 60.5841 cv
216.176 60.5832 li
216.146 60.7315 li
216.134 60.7753 li
216.123 60.8139 li
216.108 60.9411 li
216.111 60.9893 216.105 61.0756 216.188 61.2148 cv
216.387 61.3929 li
216.61 61.4451 li
216.79 61.4354 216.823 61.3929 216.858 61.3806 cv
216.929 61.3351 li
217.059 61.2621 li
217.138 61.2276 217.27 61.1824 217.479 61.1475 cv
217.821 61.0911 218.084 60.9741 218.26 60.8809 cv
218.448 60.7776 li
218.464 60.7695 li
218.403 60.6402 li
218.445 60.7762 li
218.464 60.7695 li
218.403 60.6402 li
218.445 60.7762 li
218.337 60.4242 li
218.337 60.7916 li
218.445 60.7762 li
218.337 60.4242 li
218.337 60.7916 li
218.337 60.3564 li
218.127 60.7369 li
218.337 60.7916 li
218.337 60.3564 li
218.127 60.7369 li
218.32 60.386 li
217.939 60.526 li
217.949 60.5566 217.995 60.6624 218.127 60.7369 cv
218.32 60.386 li
217.939 60.526 li
218.126 60.4574 li
217.931 60.5022 li
217.939 60.526 li
218.126 60.4574 li
217.931 60.5022 li
217.935 60.5281 li
217.942 60.5902 217.946 60.7347 217.945 60.9443 cv
217.947 61.2435 217.994 61.5005 218.133 61.7284 cv
218.264 61.957 218.547 62.1316 218.819 62.1234 cv
219.183 62.1149 219.438 61.9119 219.616 61.6715 cv
219.794 61.4248 219.901 61.1047 219.901 60.7432 cv
219.897 60.6212 li
219.897 60.6205 li
219.895 60.5497 li
219.898 60.3603 219.939 60.281 219.994 60.1849 cv
220.104 60.018 li
220.144 59.9464 220.228 59.8416 220.236 59.616 cv
220.238 59.5069 220.201 59.384 220.145 59.2961 cv
220.06 59.1618 219.964 59.0955 219.877 59.0405 cv
219.788 58.9866 219.697 58.9447 219.587 58.8999 cv
218.795 58.5774 li
218.418 59.5037 li
219.21 59.8259 li
219.33 59.8795 li
219.36 59.8969 li
219.489 59.7076 li
219.304 59.8364 li
219.36 59.8969 li
219.489 59.7076 li
219.304 59.8364 li
219.62 59.616 li
219.236 59.616 li
219.304 59.8364 li
219.62 59.616 li
219.236 59.616 li
219.576 59.616 li
219.262 59.4815 li
219.236 59.616 li
219.576 59.616 li
219.262 59.4815 li
219.406 59.5433 li
219.268 59.4679 li
219.262 59.4815 li
219.406 59.5433 li
219.268 59.4679 li
219.272 59.4705 219.171 59.597 219.075 59.7801 cv
218.978 59.967 218.893 60.2321 218.895 60.5497 cv
218.9 60.6881 li
218.9 60.6874 li
218.901 60.7432 li
218.902 60.9021 218.852 61.0221 218.806 61.0854 cv
218.759 61.1347 li
218.784 61.1758 li
218.77 61.1303 li
218.759 61.1347 li
218.784 61.1758 li
218.77 61.1303 li
218.819 61.2848 li
218.819 61.1234 li
218.77 61.1303 li
218.819 61.2848 li
218.819 61.1234 li
218.819 61.3431 li
218.93 61.1541 li
218.819 61.1234 li
218.819 61.3431 li
218.93 61.1541 li
218.846 61.297 li
218.978 61.1939 li
218.93 61.1541 li
218.846 61.297 li
218.978 61.1939 li
218.931 61.23 li
218.982 61.1996 li
218.978 61.1939 li
218.931 61.23 li
218.982 61.1996 li
218.963 61.141 li
218.945 60.9443 li
218.944 60.6874 218.944 60.5201 218.92 60.3552 cv
218.905 60.2713 218.893 60.1805 218.811 60.0491 cv
218.77 59.985 218.701 59.9114 218.61 59.8614 cv
218.519 59.8104 218.416 59.7907 218.337 59.7916 cv
218.125 59.8017 218.055 59.8618 217.982 59.893 cv
217.788 59.9968 217.635 60.1044 217.314 60.1611 cv
216.973 60.2179 216.73 60.3061 216.563 60.3908 cv
216.374 60.5026 li
216.342 60.5253 li
216.56 60.8416 li
216.375 60.5052 li
216.342 60.5253 li
216.56 60.8416 li
216.375 60.5052 li
216.61 60.9322 li
216.61 60.4451 li
216.434 60.4547 216.405 60.4957 216.375 60.5052 cv
216.61 60.9322 li
216.61 60.4451 li
216.61 60.9425 li
216.831 60.4968 li
216.61 60.4451 li
216.61 60.9425 li
216.831 60.4968 li
216.61 60.9427 li
217.076 60.7668 li
217.049 60.6838 216.959 60.5569 216.831 60.4968 cv
216.61 60.9427 li
217.076 60.7668 li
216.615 60.9411 li
217.108 60.9411 li
217.076 60.7668 li
216.615 60.9411 li
217.108 60.9411 li
216.65 60.9411 li
217.095 61.0488 li
217.108 60.9411 li
216.65 60.9411 li
217.095 61.0488 li
216.923 61.0071 li
217.094 61.0565 li
217.095 61.0488 li
216.923 61.0071 li
217.094 61.0565 li
217.102 61.027 217.142 60.8973 217.166 60.7254 cv
217.165 60.7338 li
217.166 60.7245 li
217.195 60.5198 217.207 60.3528 217.206 60.1882 cv
217.206 59.8584 217.171 59.5674 217.171 58.7183 cv
217.17 58.4946 217.164 58.3401 217.137 58.1909 cv
217.121 58.1148 217.106 58.0373 217.04 57.9265 cv
216.87 57.7509 li
216.788 57.6947 216.672 57.6604 216.573 57.6621 cv
216.369 57.6689 216.275 57.7481 216.213 57.791 cv
216.109 57.8753 216.066 57.9368 216.013 57.9973 cv
215.828 58.2069 li
215.794 58.2334 li
215.855 58.3582 li
215.855 58.2217 li
215.794 58.2334 li
215.855 58.3582 li
215.855 58.2217 li
215.855 58.41 li
215.883 58.2237 li
215.855 58.2217 li
215.855 58.41 li
215.883 58.2237 li
215.872 58.2213 li
215.835 58.3212 li
215.929 58.2758 li
215.872 58.2213 li
215.835 58.3212 li
215.929 58.2758 li
215.929 58.2734 li
215.926 58.2325 li
215.934 58.1501 li
215.939 58.1271 li
215.939 58.1248 li
215.681 58.0567 li
215.938 58.1304 li
215.939 58.1248 li
215.681 58.0567 li
215.938 58.1304 li
216.009 57.8835 li
215.849 57.682 li
215.777 57.7388 li
215.85 57.6831 li
215.849 57.682 li
215.777 57.7388 li
215.85 57.6831 li
215.844 57.6754 215.78 57.5891 215.725 57.4849 cv
215.668 57.3823 215.634 57.2582 215.638 57.2256 cv
215.428 57.2256 li
215.632 57.2845 li
215.638 57.2256 li
215.428 57.2256 li
215.632 57.2845 li
215.631 57.272 215.707 57.1139 215.815 56.9511 cv
215.977 56.6984 216.21 56.3878 216.398 56.1462 cv
216.587 55.9039 216.731 55.7313 216.732 55.7308 cv
216.953 55.4657 li
215.003 52.0074 li
214.132 52.4985 li
cp
f
grestore
1 0 1 0 cmyk
AVAFNQ+HelveticaNeue*1 [7.74389 0 0 -7.74389 0 0 ]msf224.629 58.2998 mo(A)sh229.832 58.2998 mo(nt)[4.38379 0 ]xsh236.732 58.2998 mo(i)sh238.567 58.2998 mo(g)sh243.137 58.2998 mo(e)sh247.457 58.2998 mo(n)shgrestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/AVAFNQ+HelveticaNeue*1 uf/AVAFNQ+HelveticaNeue uf/HelveticaNeue ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.1.0%%For: (Chris Roy) ()%%Title: (DscamAnatomy.eps)%%CreationDate: 2014-04-29 8:38 AM%%Canvassize: 16383%AI9_DataStream%Gb",KLO/MNe*+=CmNEi!TjsQe$DA?cHQerGKS0?!m'ljtrR%RrZ>g&Rs.97,hWG&Pb:99$)U44g^>`PSDg2*I`PJ1W'k'O)Xi*$c%Q)'f>pjBL;7;"_]+IYhI1UL+*)NQ7Bamu)^rU0;*B;7bn1EMke]tnBP>:KO$kcYsbhU.P,9"i^>%K<\3lnqsRgahrg5=%_RS_bHZ%8[m50ktF1oj3-\+f^!_7`l/;^aVVMBlc=_+G@Rp&MGXClMUG.;g?l:DVVfYD.(9i8_VOtpmaq+KFU7XLY0$)0I]GDEGKs%23plla%oQUcTdP(ClZ87oAnY=)me?@;?rK&*I\kE)!+"fVCh=5%*QuiT3VZ:RS1`1[#7UKX?]$YaXP>Hf8V62l:_d6j$_*AdBWG$<@8uBu`%G>1`)dGe%9oHZ$q)0@#i1\(64,+X^jdb47b.M7`!WAH'-c:mD^DWa4a_+)$m,+pHF-C<Qg,%-4`KHQ@Po&O96l\r"D?%@2-DIj.D%NX+rH0=N,Sn&rDa4!#@='@flVi2SMXmn=9.%=1s'8o>rm>!R.MeG-(#,&i5?:5>D>e_gZ+16P3se&dkc,-d;5&Rh'+G\T[ki!**C%.[a,e'\,uW2,j_/Ykeq[HtR+>:Ij78DEeq/VrB3=.2+(m>TItAl5Z^uPmmK(_h_p7s&o&foG7sb1?nFFrt3PANn&FY+aSN-)S#W/%B\76F&_od)ZBSM6TH4g[[e.b&8H[caPK=N-R6Oc1In]q="S<Lk_e1G&T@kcCQ:gL]4:^9=3'<2@iFtDLT#rh$:#8L=TN!BE^JZL/%PtF?A<(`HZS_5QYa_%5?(B))(fdrB1At]oD_'bHsQ(V*U"E0Sun>'$819q<aAN?$-[q-GKb;+?uoU,9;oS9eET#-u`GoY'6HpT8!%'7<+q(_[i;Gm5LF:FH;iJkm4BK*6H9`WVq'$Ut8k:_SBnW>S/.T.k0XL:],dBTk]FZk'!@>jr&2A/Xg?q15+N(_\;1.)@9VPDl%(%T(JTGNO00YB62!`O?Y,sj+C.+M9I([20hZ'%)/DLN/u4;JI6Z=`Wr.*$V!YK+$N9Bi=:6%.2X.SP$'&46JtJiLDCa;5gL>IYW3s,%,>a.n"E"W#AE9Q\cu[VgdOqMebnhhFrh'[YNaX8n%c/P--;S&tn-PosI`(pd9ZXj8$"[Ld*Zr:97QU`nU]lA+%#5_'0PlB5'20RZ%_!$Bp.=jSF*J$7cQbX&Vc=V`hNV"5`Z.;M6jF-Thr/mQaas>V5k+'5Ae0*d9K"ieCPBT,Q7]e.O0fZ/B:U$>I]o%=/[YdG2da_K4%:fc`[HGgp4Dl_5mI:`@gm?2e;S"_=h5PQR1;5A])7%U@7j:=Wqr2JT7cf7YFaW:&Dr2%m'\,&hu1)]XEP@8<@k[1#KSuCQ-Y?3'b%eSk$AnWh;YNquKL.M_MYr?d#GnjiI8bT2(oGpU5Y0Ck+B-RDBAUl9&Rj[)EhVrI1T=/(ZBaG$^#:'fp[#c4g1\;1&.5t-5g8Qd[d%MorZq.[,C06;",O$f$522?i]pb/.F`[K?,@A^nGi8JtF(-pc1Qek?^c/(0lL>WX]d/!FMiE=!HeW^Z/tQM$N'/V?Q`+j_CIa>^Y*%I\XBG/s2)$C.suCAZ,]#>ETBX8Z;^i9CQ4&8n;2jSJ$L!;NfJl1S-5ZlO:F%m_Mo7XL);gM*a(`\]@<4.=k8oU+F)ne(I&G>6+YX%L/Wuier""`U]`mpF?co"*('c+dUakers?3T'^7Pk3K(ocF&F@B@YOFoh+=EcKhPBrs.m+X%XjrUA7V*e(#D2=-eJF*M#3Ho__q?Z%d&E*JiYfRBL3K:spr"tS8]Fp!FI(Q!:^C\6+sO[hM8R)=-<Z0m>@g23Bf63ZXMkD!@toVV#sg?\-Z,N+J3aLso/+:H\=dWJ9^@sD%*+;[arK.-,kq=(k78fbn-n:5ROW_tiq\VO(VP6!qg2<Eh4WZCU<gl?<afa#UO\cQR9mJ7?C4mWEE0%>19=/7kC6>n.j2NoEb*Rf5%*Ab\KKdtLjNDTB]Qntbmd6>N3^^N'7-#s1aUsKs1'B9RQ`?cBoU#(Xj'_E5gMb>Ms5uMA4C501M4Q4sgb7q[*n"^<)'&bkRL!%Lm%L-pMi$)8HkhdjIaX^Rp3!Tj_":.]bl/nDBbWUMs%h6c>NM_MjFSRUA>ONLK#Ol^SQbb.oYEsK%(q-'<d`nspd;i3jJ`Ca:02edE[%fXM5/':L<K8_o==:qFh(gh#@W>83%4ojkRU):`H345b,kj1.jde65g269ip[quY(h:]pR6PXY?nPbPNREShVaX=&r_C$(SBH'GHf%8`1XV+sita@_<,a;e!BJg``7Y=)%F=s5=l;#7:W3Km--NIiNZ'.:k3@Vo1n[-*T:agdO=1Ima7p)S[kF]k+N/1E+u.1kQ7rQ6<pk%hkY:[EG-[t#sTclN^?\_%Dc"d,arX_4B1dj!["9s;D"Kq@ARX!KKgqB8DfdPSKW]Q`<;qQ,-<;\Q??]#$)S>\a`sN-Rk4;gG4(Ms%hSS5*jmG\aZZ)tl"3,6s,fu"]400^>C[d(%bUE_XL81VUaf$H(1IfF$`Wf8WH4.I5Ajh2IG'8nr;9KYg9MT#59c\;0p-+DLadh>`%fh?X<Uh)lh(m>^"/1@he4(cnZ5Mln'_#)XX25<u[&B]X>Ai/!'%G>j#8UEj4;eR&g/8<*T.q?lq@n(cMKlY/6WdS[F3'2cI8KPm9%``UCs)%D_VQp]5?OHBO&nME\gVL2%64@O[N8X';(%i%6jn9Psn`M>4Vo^JM7$`7oqrsE\dP-M?BU"V#U#@NNiU%O"Bi+O.=SRjWM%,u6tWP*-_cA_"N!D^9nojD>"scu9'7Vdu+6%TQT[iWn'-G[3LC"<GM.[J5@:N5.rA"ZkjD#qTlMUZE\W(.%)?XTj;/14>.[*.;1]%`9'&`\H5pN@h@.-bUN2Z6b"<n\W($-";rtq+MTAOatU=>'\Xb8U&6+0hIlV<E@oAOL0klS4bi1%-G5$paYJ6%`#OfD.+h5XgR,<$%)$2MO0Y,E3)8E;T2k7_l6QW0h5p]B/Q(I&B`+^_WcXS@=EAEp'mjsZilp#kEZPlplot=d1@uu?UP*lPK="0Sn)Sb]j[L%*pko.2S%_N:gs1J"lMi9+hcXWb`,+n\(K;rNd(P]C6]\h`^\VSa!,+B"-M4Ljs>AUpZ_Kh#Z20Z7!O]\_W2ZCpLG3f(&k/$n2r[T-EE'_lD#%V=8Ie)[\0sqAN`IPI:gQd2oSWk]%KL:#=Ke;<LbVq,<.DVoUhQdpSuYG4^ZhW/RcB.>d&pbhhKdGIFTXr6?^\8O(K/B[]@u,E86t%i]uC53.nE>^4o9-#qSu+R;RbYY,pUi)3M3O@]L)DK-.[CmC4RQ-r=;P4IN)b=Z1s7CE#)73Q"]N`d1$Q7,sG&7JN-C;iQ`L(P(\9%P!L<?A#FQHk^q`j+[2!Z.m,OpXPj.+&=XAHEN'NH/Y[0n!ZidfPAZ(<_tOHAR8F>u'<*lc$YiP37<no9i]p:.'hMR9<OkUC>nFj?%Jo*/M!O%/LFO^^T7TLV!"S<>0Op1D7?G4J)L5#/VBP\!pFUFXn/TN[7-lMe%KpRBK$9X$*KQf?$B1XQYe;fg6]Mjrg7&Q+]SV"\6%XSb?<;s)U36?!CI+`tpfT?:)4Wtp9p=JuN*Y40,:35mQUCE>B9V3)i<XdN;r$Q6tY1_<QhKWMH"*O>Zp]8S7l?:phD]Zi2],EPg2%+LOtMr\dt<@9G(2]o9d!m8lSK(7<VR5rD='!+'WQ$]IAnI6lGL=nQ!/b>gAgV@tEEBG8".Fp5"hZD=56F))Or.tJ>`*LX@VYFM]]%*.2N=>Eg2Xqj^>kYZ'bG>(RToc&>6VgYed,6CV7j]nLr&qF<)49O90_\Ii6XPX;'g^Him&br=/T<!sS8f*o!aOXkr#f5#3ikB%![%VMY'Jc^iF$<SOD+SPTD;:H1RtRrJsfj@gokV59.)19j<S2%eY9W%cCLa;2FHJh;u7.[MEg.$i$bV^j5QX'O&Ng7;tuPDCPc:;p59%3,;5?_TjB=24fN8J]5RH2m4aCs)udJhNcNLOcoukDiLlH',3?84icgffi0H*CWmekRX*K`QOW?`gdTY4<^30%&YpKIO'CRgM-@Z/%$`:Q?mgoJ;,I1.B9\^-4_b#sG3[?0&j?IrP:"s&Z+Dm2(ZpYff/0^I;2;KP,p*=417k!u5,;nLWOcDila.UQf",^VH-M:l!2IN-h%g+KA"9[j"cJY7V`j]RKLba#KgU@qm/&His`CB77)3aKU<_)+)78n36e(#G-NGC!p1%/(Nf!:")`"gq9hPih10;R*W/j>!"bE0<J'%Ha?O]:a8#b8D>Oi=Q"TLA_]%<oJhg`Xh\1r<M)s%?`Y9r5>I68#mF.-Vsu.ce`\Vq<lJ;:%XVEV1+J3-8?1*sQ=89n@8:%E4(HX;%bXiDF=Y'i_.u^hj&ap4QN7Ut1W)*WhOkJW:gu'V'Ck*LjA/NRqrsFcd#gP]Ipj\Ut.8sN:j%SaJ2%iuui8EcBVAVu`\8@A'UC;i.%UK+U<PGQSb%L&V\[afA<S=<\Aa]OM9H&g,<[mVeNZHc4F@"4;o0@GtoKp/>B^,7DTNeXiu.l&&8\jBVce[_FjSr1*X7_'e!+f/#k%N,elc7S_^&1_ronZJ]M0m1P@:*Dm`$cX[@Bd$1iA"c[[nodI9K-o"9YUnEU),*P+NZ\J4*,soH/?'U=hCLou1)(h^o>Z4.G7haME%3+f?kH_coQZ`n%glO&?N*I2Kd1/nn26C.72@PFY0W1jJGC"B^ICp\WK0LjH12%[$[?.KP16PXEG2=\"`Km<tr9;+7cP%JXV@KFfC%PZG1Db]"9PHt0fdlK>[/d=5+nd0DfuX1IhFf!o<I@l#*[X.//JZhPXUR$5rtZ5WG&eA]s1qESSJ!L>#g[X5N^l_B9Y,WT-b0$hh5%86b1m@![fjPYcH@ZBqSB,WquJF"tr#/^kFJ.Si[s*g#q,#A"HnAL@/!Q$s\-Vo_qQn-s:'A*-mA2B)2ln)TmWNLsI!-I\[O_%Y/7%I\q`hBADmhpGshX<:#%_pnIrjfs*lUgDQ\4j&f`C*lgmT::o9H2.Dh?CHC^u:+"e']+[8;`B:D@jc'Hnd_N90)QiG+2>r!iFoI=W%e2$+`#-PVX.du:S4g>KB[DT]3;-rXQlFWicQRgNbb4K]HT%JRX*K[Q/Y3\D&4!7gsP+klQFK-,L`26/[G2rP71Q&S;#<SJY$c+n_%SodFb(ra#6!Y><5F5#r&-F$uh":uE!`6]I\NIJLm6Vn][#ROI744Y;Yru-%;5:3YWW6t#uN'rWs6"qt*+&(CZ[of=:4!"&6it%2k%CY5,:^UsHD>)7V,e`k,gVu#/>R<%Y@0P\@F:fZ>##Hkf\j4:RB5?NI@\kcQ1R<HS(aS+OVrE/7/<j2%Q0+iAM>E'\M6$_du2aEQg%gPtqVRd/2m@++AR:"3MQ&tN@44+r`WLQ,=^<ZmT'TZBU;.^9$48AC.q'^L/,09!sX`4/_=K@Ga-WV=NZG5%%M+G^(U"m0shl>>#n%1Kp3,#.URu;NuXj?ar-mm&c0M9[NsM*#kVq#&QU:4P)'R2&kS9dR!d5'qK^\VIP9'SlgP2d0b)'+IH#'3`dJtfdHOgH$%kD$LO$D%VkhZg=!&CU.4K728mLu<>a%ZpR&TVc)rod%'CjmlN<%j+*E&ud_?<.qRS^@=p+bsL2b)9b?=Q#^F?&K.^1+2KHI$Y4_8.VCK9rY/%oXg;k3C+0IbRS5`Q%!KKEEB]9(JW8?/d1G_VL9H5(+(ak=8/M"`!]_U.p&K[kN]5oW^0=8Pb_C!F?G:Ce+oCiHK[jKf'U3qd[9sO%&KH<'(I7o(dsqaZ+!*-]!o5$2T6)$cG5(AUL;rnGK:ubld@`X>+g00\2,8\:U$=Gef]dVC]s6Q/ZcO%n!^K+'@Q#6B%+,H4dU$H?%Z#Za$Brjj7Jg)fk\GpaKn!t1B+[G!-6KOQW^V61ihFifTCIXm@+FQNu5""oD+Zc3Y+[!lZSFrcC;0=^_%eoj="-:4D*],qa4G\&'%0V(*d&Ru3Mpur7\l>kULFJ=c_0OS%GghVj0/*%k")?47)p2?9ZDhHHHqDu/kl2T/q%>J,qarNl>/%:Mcd(\eO?DHBpXl0(Kbsu%b%!RDYi7V^cE4U76q7cPX_Jj3B#F:D=di#XmlW%n*M.J=;l*%Q/qTA#<hHhR,<[NLrQZr.l<`ucg5K0`;4<r5FeS_hA1U&7-MNALK!%s0PQ%1trWpTPpe`Rf)2L6)Dh15S*n:[?he&Q=C)sgG3NZi478KH0,=90[&dB^K#[@m[O;NDY6&WIj*A.gT!/^#3,AoKSZ#-WP'="%%j;F-jmo0$m,0oP+#5HoWDo5fq82aU8Aptm\pbeqSj:rnj=_d64L)dfd_G:4PoPBFIt6Gn4)'(d<l1H\AbR.##52"u3V<YT.CgWj%'BjoQ?*&F!=O=(PEq^CHEI]Z*dB3GMLr.=)b/9FIdRL_7/o\WgUnSF_\E-jZ;X"X=)g#L7OgON[Bb>LJ\(XV\[P-&Oh;;s1D)2Dg%R"H*DK3s9u`YJou01$gtK*1+Oc9Y@4RfhC0Dm_5ZTE+Ku>(8e])q3[)aU&.1p+MZe*'3PJB[RjDU_$U+=d1M14):M^10XB=X(P.f%=ZQTIe(?I?ADjQN3@cS=Ye&V/d3DU2&%@r]hu`MSCJc48LbOEqrXZ]%.am-0WLW[IAMG>$SsL;kNM[A<Fn%f+1&?h+^,nM>)72L#%LOZF#b9DVLSA=E+`W,*[>-#+o&btQ7,RGSEn\#c(s.du2dK8*efKO%Ko6BiXO?SX=7\b]8&&(,h7N6JtnICBHFl8>#W7u"Z+Hse>%T?rGpnNQlA:tS[hZp)(7p8HH<ATVV/'h$49W8!h;TVGrn-p0SWgpdB$%7oJsSlj$#de4O7Z1"Q>UHa3A9uiI6pQeBZY0YPR3t6!7%ZdXIIjSj*V4G8LMJ*Ps"$t1OI3%#L6#-G((gE'*\Ms1*15f@te5`^m:,/Y'V!5#Kn]/ZXMps0m$5Dn@:!Z/N-T1gdGJYX=`q!C<G%@hNb9laHdoLd+"`bJA;MlJN(^s2Zp/]DS:=Hh(V"9h;?$]BD(trtnG-rLTR4Nt1OUfT%AB9h."=N:[W"(@/Yb/@QX_n.-J]T16`n%bB=^RRGU5E0RjrLVE("dNUWn<2Bc5Ym)QOI.h2d`S5IN@i#a.MOZ<2e>eD[b`[n+\SBX>QNHOp0Y!R3V(q!F1)8,B]>Gt.P'dk!9%U$3a-WLaR1rQ.L+G;ZlQa9:MIIl8-fTl0d-<29gl2^tUD^FCZ87+f@ZiBg%4qd\2oC,P!t9(8Y3*=mLV^Q'8.0Cg6VbpHN?fm"^0%9(@>GmGi;P>.UB"A.;rYP%Ub)17k;d'_\j`%0jZbA>i`F=%5kN[k.oUhL1/jRgL_mV1b'f0.NqAYV!t>^p\'#7T5^,VBo8f4rH6S%j'`$uEpGC.>dqC%mf$:Y/2EnqE7c"N7d/h*["jX!'S-BUej6"Yl!ucEXB[TtMl6GZ>]<-Vmn(-Xe@]kX)1U;O_0&-[<uCV3FA]$W%Uk;.n_$_U5_I%_u2B/=7]p&D*bhsP&472J.RqqM-QHjG4MFeEWLTSqaSd6NQUX$A*=]&%$:W!TVcid2?VqD3[LY\o3du@[XX<XY5%E%o\)qJM6@h8E5#QGZ2(Xg"20r^pT[)(9ISOe:$_NZ.ljC#cn5E]+ai!/VUrih;D3kcA$3rg^&hg>,>qg$No0Ikc'H/#T`T<dUgn%s._<_SEU)c^+G:)N<7taVh:,[WAK%KD>-C)eebkU(lU'ajWourqpC\@!4>O=ZoSB[gXETF=;Dks3]Gl7Q]1$Hd[79,#\K'\3k_+G%Unh]bgq`0Yd8GO+g2X'tK[qVpXsN[CCBHDgK78g/:sDIcTk6L*N0om))'h/hfn9WFJs1N3X03'k'O9PG@#.HY\$$K)C`YJiCtcL;%20u]=`hV%6=W(<gJHqK[4K]l/`42KeP*pF/$G9B!8Xjl8CNb(9P8VQLPs6XRJm_Fi,FGoU2BuC!7T#9\AlAnJSQ2(j;3aJ,;G%SH%+9Vj.!2["nM;VM`Ng:KCR+gfC!.F>]2'm!;=kN2P4+CR[>(]$+BdT+BBH^uYiB%859r$SdIir1X!9<asbMCR5^62(+C$Q8LY4<t=%i2nsbIZ&ih3NiS<l<'lu_?"[hWhBN4X2."NC4:LKG:%D)8VPn-2=l-aiG/d$]B>/gZWcL)/(Ss<7$:6?Z=p0=3nPMpr3?oT-HnIS%A3NM;OTI^\oNS]UFBW3cl'*k%G>.3e;&P%P2apM/WYbG)YDaj(_&$;aq8HlDN!eA:nuJuJ:O>7%4ku]2&U'kGc>&soc"'jtiCgV*%h'#[N@;kMY'lZ,SY_=?5?WY`%rfn'rU*>)[d3DAtg$#DcP>%kH8m2%[ojc(-WPK[Id1CK/Pm&@`HttENGM9D"j@\cL0[W#6B])EQ%X.3Iu*!%J'7h+6:Z*H9_KCasC]Q1%<KgnY3AZF[A$OS+X9@S,j[HXL$?D;tiD@#Td4RBG43pm-A`@Ji/e<[Z+nS#@5$)Y7$Vtkq:%AeV"JU[:DX(+MKQ4_Y)!g3V[kk6)T@0I=i/QeVT]^Z#g]Ut_3neeBim2D2BCY]0itYZ;R6rIIQn/)<CdA$AZEN%h66DpGqDG'\s2%hls/i".E]j)cM_TZ-P]lMVE"?H>HGAed=NfEO=`k2's@064b4m)L%kE;8BL1nQ0qe7.^4c?&WohPYtpQ;\#r&d,P(r)>e"^^A9e@%Ydq6OPbfPIaMFMUSt[_8>t9E'!_Vc?b';rSnmM\9Y%6kqY:hIteeNkJ!_#TSYG7H3Q.o%I+YB.Up<'01o(M_B0sL5(A.8aujP[/p%lWA>r)ng+mIg!Z/P^"oBJj(gEkk><3SJ"[P;htaIYm#$.K%#1lVF[TqhCre*[M$<75DRYcN8[Q6?ncCmD$l6hC1n(#k5l@uJT"h%%cpo?@+c;+f>I5ZRA0alA^5mAp3\Hea*9g*G/6u=RUN[P!^lV7)p#Ml7Lr!iLEUl_/oE1*Ul<)Zi'7gZQ-C0>slmC@t_m7KF&G2>K%r#(dcGMX:=e]=O_ZO:#n%a_$3M"gVe.s^GVU>os/Cb[Uldd@Q7DZa!\1+fADKp3ajhnQq#pb8Y_gKTnY#WXM$;Je]08l#X,,_:jt%_XFk*k]GTGK!YeJa,]J@-pZT<cb'F1U^i9C1fc9Ad`P*$Ph#E[(bF<shJA.P#Qi/.3&b*3U*,6'88?kd4Q8h>0k[j%6o(,=\D;E4%V2j<?2cEJ?h8skNW96u8_@!c'hO\g:4_Mn@)'B]MWb=71jqtakD9?N[Qf6H'7dVVfP.ejhqM2t/(=7YBPAX1LKeQI7:ml=(e[K!9%Us-'p@eO8@ekCrYH6(R\gN"BZ@iW2:_Z?$rob[ua-o.T&L"7J:pc&*fN;cHrSn(l>0S8DI%2H9sUStIJBYsRren(8^*tBV5A.0ba%L@%5f[aoS#c$W3@b!Am"cSX'bQ#]UaiFGqs]//lhp['(`*0-b<8'hSTT[:`0Zd5$UqiA'm*uu;l:+B3<Q+u+"6QE2@demmW4@5LP%aG.O(f@B[g-RD.:L^J:`84SY-8nJafKfOE(Aupoj@b7KM.Z)SVe%YBL98TOb33X8mHW6e8[coAg.OsLg\MBcKB^t&cD;I)`UJ39#%*7Tqi!b(d^7hl7^!MOU)r>?Q7=bfOn[eA[sL9+F2BYdL8>\IAQ\J9.9($=)gMUc1U[/MfT:T`C&)a\.oof6p,llVRR5<?i`a5(1-%;p^s`[V".MC1NJcPQlG/6>XG,`1D6`E1alIC\tt[Bn&@2/9_(T:hs`'q3hfTDjiC((-2q\nfO&T>Y0e>o3>OGE3<I)#@$`reYH;r%b>uAmCDT'lns`J5<LugVSVu!QfDcCepP+atl5lQVe;BiC_ie9qL3C<ii9.X0e@tJ[Z(61@2k'B)!p>EF1d4B7.Xrc8Vm!`&@O@[<%h5A!U[j/*I+FP1Fg?MV1p<kCL7_=Y/[<M5qo_=<Ia6/.CGT_bk\#%We=KQOl=K&(e-2B$_\D)p9[`@V!K5[IWH<*o^4XFCRitDL[%)*nu%UXEB>d9ASY^:KW>.u@%[qP1=92]>9JL,X5C5OaE-5J(6O>DRSMQh_S=,SLd&iK);8DkpK2^sN"#%aF%/K?JV>BN3Gj1lU""%DPQ(u<g/a-^%/jaF,:)HaLS4tnf[gU)(CZ@[5[A^V9pHWcCK95%'hi0T;]XrXh^#fUI;XC`9t@fqEclqUW:AA+rW\g9LHElmtNl^%BPa3<9%3WP'E,$+BZgfZUX@ZfDY+Vk+%%Q89*,EBhU&m.qo#M!$_eHV4uX(`dAQ;0fsK/fH2MHRCK)1pf(aC[oJ=$9BscA`>r3ag%@ADl,X_?:!/Wo]@^+d5;N-0JiA%]?9(`G7mR_D8CrQY"n8#&NW=ibOI)TAi:AlEL2RB<s"EMJBeUEEnYcOECU.M$U7e*ca[@ADA\%_3)cN1=jt/k.spSfPFTl7uo7d!#c<jJp6lGmRp;5d;+R>DUd_,B/R049,g%KgsjS`i[S7$iC:doTioc$qD<N0BjR/`RX=T"P1T*q%R+a+Ck]>hM`3dp6m-SiB\C#/3?o6/_`bM8^/6oMol0$"@a&1KfdIH@:>r67Pq%;71G,iQA-L-Ck$?B0,0c]MZr1760pm+[7)AV>2%-eY<Ce=,j,Ip>kj76%/Y[NSVfY;aI\<e\D&a.KLRJp4L9cI58K&\j?>4ML_b@crk1>C$.023$I2$V0H;#`T%$)Qe,dN)J+lrCDtj%mMfo9BO8&U9n0S4B<t(N_K#&oCY\.Q:N#WBFE1g>.%6LGXj+At=As!jS]eNNdca%d\9nUa)E2tEl^U)m#Q2)/KZUg1hJDoC9cLeD%32c]+T[BcYF#_r5C=M8_Y9(Z2fCIelNZipkL'OcVNS_<I=!qU>SdMt&__Q*DE(i4Aj5%l$oD-k!@A?Vr?i-^[Ib'^"fr.c0aGIrr%n20Q%Mue=s3W)(cB&\Q)^?eAdVN$U`QQ\#"eDm#=C].G8FMA=p)pOm@<kWiUOU>h[pS0+)ktCl,2VO)pe4($G#-nQj+#SY[=_Vs/%?dgk.GU0p+Es6564<nQH5(>K/K9n+<kg!j2]F?cBE2+O_-M`a@XBm19"/O=R?/4&;_XM5d^$CAAUU*'s5JflnR])4?<hS-m<c']_%`gR\S,<AjB*[XWgEMN's>j5)>kk\uBB_J,s5sNdpTejL:Ml<qpET#C=hrJFQ8/ogE7s/'NFjPEI,3#`RGY)V]<4h"3*oqE=<Jd6I%e^)5')md"<ODa<PRQa0A\%H/?1pr)1jGcumWYh;Q:0RBSPn@A*^W0\!rR:bdlCI1go\"]]O^bWDo8FBrGVsn2o?hg>1jrPh2XXe\%Vn<L\'^Fj-e$kC,Vf,e::JY%rc'laQO=qQ\mHZKPrjMWde\-AOl>D$uVrDGds0R&jff+>*;[uYV'1'k#q5ph<o:!CAqcM/2Qp,rk%4f?nS:O.bE:<nSOe$m)0UuJrLe*er8pY"o4%pD!N8t%q.O:o0LVGCFpk2h`YdgbccraX:p@N1TLEO00Op48H8(!W<c][D*KB*tnS%9rRC]fr/uk/KIQ@Y0P(5qQpsmeig]mXTf/F:QaECY3236D"'QS^Y_-7T-hDkFN#&'57a#'_331%Hmhk[p$1l59/HAiage0jECRL3%1g,S[F3,@]aO\Jm&q*1,T'QoQ01t_RMca8.?!3m8%R\ud>SJ(5*3FO7dcShXKZXDEa30:p[J2(T6^$O@>+0H\'KaV42pjt_DMf5l%W4fZWV7j9=GGc<D]PY%XMk,Z!mZ1E!7RPqYqmf:nWO9/"@IM%Bd7!q>f;Q`f2N*78VeFe_+MXIPRPkKSZXq^$)m>EhAeUNs>bd^N%i[*2iHXgP[D03GadCE'lNU+Blqm6:(N"kJEdqk[pg*d$lNb$il?9+B0$M"AO%aSmrg9Ei0O*"AC-d3N`Q%Rd=:o1$l=?CmI2nJC9%=uCW5C"au`qEQ8[*@keK=.3:ZA6JO!MG?R4FPm'U/Vc=p/,;=+mb?<[>5NTJgn!/b97B^M6em:Wr'`I-a$PS<DlKQ0lMh(P>]BDH%?$SK*b[ogT:Ijr[mTM6EId@RCm40"]?KqVo!jM)&"5?2>7R+%b2d9Md`-p:_<ZfJ?EA]5mEa6MLT_[E$O+)bC#IjeG/]J]*qh'X3%1F.Z2G!p._.`OY5AY8O5_(5=b)]^D5L/t>(%`=r\OCqk55!qOn^j7mJ1?]:?T<_sE"D8ZW!:k(F%['"$/+FFKjK2^c^9[VO?$_oV%,1Jac9:L38?a\MDIdsI?%!:`J>!0.o3df<"P;TnepbohNpo(:DNDTRMB@(2g/m%H'D[kb8*F[=9oLY,OWP6uBbTF:dOVo,u_GC_E%k/]4fK>gVhX\-!_=J384YdPb,R&/dW`FKA#W]pDAJ@mbp4[&pmU`/&BKlRAqnNM;mK=`ll[_U=sT"loCH*1g.QJ78cptX+`j`,dg%"&S6f#(RYGopAV<F%$,6^-A\DPq`$,YTlWh=kM7LHE-$D[kUllCS'M3lDkDLk4.[?V]/f%IrfaK0f8f*4ktR:?^Pr2*:iku`=Y&/%c<57AcMe6X=&:D+"7#u5$ti3l+BT!-EIC[)ON6tE^]s)Z?.in[?s`-WU"EK)X=Xbr_%\FSQ9f2>iJrN3fHb!4R:n5Dc)TbLZBjp1%ZZOf\:$KrllEiT:oX;#N2mo1!2)0J1L>h/9`9fG+TEX>5rlQD7PH?/G51"t_7dO:55i^>`5ea8IF5/(&:Y.BZQ:]W2B=l^VfPHXr%6>(<ZdqN7Ulr&XRV^+)\-1._'N3ctV=t001)4Ls[,Fq]00rfqi2Y/V"#>R7n1uJ43!@BZ/g(UAi(iHEa?toGD!O.RhW^:@J-*e/e%Jr0-8Uf40-<1>[@l1A7:;!8TrWD&lsiUMV&q3HnlS^+F,_7n5nZ#DgT\<XDhj]$u7]'LA97HVR3AQjXogFmA=2Qa&u]ngY50cRgO%bog@_98&[uUUc-3O@Q\0oOqjq3nZB'69=L9eVu#eeFp>*(P<24>!i<B(%4?!2LLH^Y`5W&P$_K5<>P%Pf%hpBaVOFuC]Ir(iR),]%WNU2ApVp\RS_^OpQ>OkP`en166d1oL\<s/LZ#5Drl\NSQ=7!JJ9h4^@)sW;M\"!OIVIY`Lipdnf%7;HdlFdD!lN\4V6aEP6c?)^2%5cdH>C#"Yfk%o.I%iAYnd/\+7d-*/S(\G:K+!q,rY>[NukK65kZs?jVaoFOf)o_)Vij0ED:)Euir;1@KJG&[qNQ)27Et<@S9gOQ@%!KQbeZ1`5\[KLN80u!2]p@k3!<TgecP;PA;rK"H;13e1aJRq.,7_kaI8qt-%8`CXrBaHo9T)FO\G-''@JY'dh(MWTo-%rV*c7C5A%[Y+ar8QO^fNCfH1;4N?rpOQ@t2d$jLRUh7ChH\Q(EWA94a/25qp`(,1:e)"m>-[G>]Kp6R@D\)4pjhulQ*\;1>3U.X"C&cdpN@X\%HpN:fZh<QbJVh&E@$>VaaW)hX=;nQHo\NQN8g?Ifl@?)5-sA(K#'4a^=/@KWVf3In;WZ2@N.=[j$h=.;HILo\Zl_<YKFd`bE%ZIY%SHfqHF+VMh1ZH`K2-PXq_aD,m;[.pBr/N=u(jE>2cS5O[E=>R+0=`J531LS&W(Y?UfL45Wl*:RU3^IC-L[aSoC9pC(%Q:@GH2e<j%'tWQ2)-!V7]E`)(?:+UIg=X&T1#hU6903T<Z'9H5dLK9SfNYKB`IY];.^L<_B07&fB&QGk4DR!?B=>in>E<qNC""$]4`OBGHk`N_%"kJi)LKUPs#BJ/N7.QJ_1cpBYKICeghCK-;"_#/Hh^i1`f0sj"3"Am(cDsSM2c,bRFhPh.$Hg[iciGOX=p<E=UQ*"i1E:90'lq+;%4:X3)&d$;6cQX><9<l*E<uS^t8%U\=B[e9Dm1'b.k(9@rBM)[!?33VaZUS/%\/kkpc/Yao76):V:C\thpPN`@h$q5KXQWaZEFOZe%URa*>'f=`-`#l">U:"9'a&(oPLt4[E[W/h?H3;_d^:\=^6l4Ct8r1Vc-d6>=i'o=uG2p!m$m*H*euACr&XuX3s6dmQ2=3es`j;O`%C,4g'p@XfOp855GZ`gKD;&9LA$X6G3n%@E,j37&7@k>FfQ-Em@<b3HCgB/Z/l(oQ7(NH;/)p(FPi[^];rIq5/J5cFGel3D7.mE.E%nCCdX2j/ll2HZno0)]*4ViO&E(+q#S@+H<bZtuQUeDj092j%RZSqZia>`5"$eG@&8emmYX@3l;@36^EDHYI.>$XZA6p9i?<AMg;H%d`gorIR.9.><>W[DA]6Ek[e:uSfgkh3"*EPLmc6AmVYcof>u6u.W\>?k5>A8[^7MdnldW`XOUV&ls-!]LsTBr*LX'CG>J#L++i]N%b`p;_o$#!W;DEd1U;mQZ<E$@t6c9_-&PJs6bgF#M_'2T'hR-)6o/P&RO3bmkD.`^BW;/&r"6.a3H^`u+H.tYcb2/,o]XW!\8!V'F%[gnIb@3IoJ9=n+WZp'9a9J528377@iAL>?%2fcXo>1%RNRWM0V-&3=W4Ra3A5R?VSnn^71gc&J@coJnhEoV@^UjrC'%Gs9L]TGPY%)<0d.3.fH9>>>TtFT`^,0sjI[*KMk[&TjHm!=Qim=\$j/d=R:pcrilcBfq.eLnV/8T];dN(Q"ilNhE_9(3C3WB,s:9N>A$KL<_i3%%aiHt@d$.E&Th!0/K@+___@.E_g<.lLnV/8TVH":)+1<A8@F<V3nolV.riI<0<`uq7pt#\\mV,rW)Il"gHfW:S9bd?H'@&ESXPt6%b'NFk\hp=]pS"[Rp,5i^^;j=+S![Hu8VntX/0ni!Aii`%UEI4qcAcP)%/9Ou.^Sid1)\tcb_U].SE'.a=K^ckHH\[AS4,Wq=K\a:%KR"$)-bBbTF2McC3;Ub-1Pi<A>RsW3<DnlfB+P;[@oK/-7T7/YArGEElB*s[d#>YUCkLPK\q1d$pX,MC[MTt-ePHteQE):C?oRZ\%[14b1%^.$`At20L>D?NZFrI(9`!&f(h6CZd5B`0Mc?NAW[U/TP>V(5knPpqM@1Zm_'ZYFa0^@$AE/&mspTi$p]tBcORGmWc1Xqga%d(@mSm>f^@Yr,5B1,*`T-rF^(ikTB\/f/MT;caPY<`*7!]D.^MNR>m21sJ,g7]/l5qS7%;I&ra8K6sV0fm<X"*1r3$]]4F(G#`=o%1l?R&*64B`fu:mCWkqePX3)36&Cp1qTZX?gA6]Sl#ik*&QsIXh.u;l5M7S8*;)/9pQ0DajMKe`Lf$T=B5?UJ%37DGOCq^)c6Ro?&%M3kR0(+/ofW/<7o>U!t3X7Rs[a/^M1Xr/hb[(E&m(OPU.a,<*W!aUfl<.t@*Yc^;7L1QGb7D!kGBA,I!bU-03E/&TH(6#_Sdq+n$%KgC6Y4mh!U6g)d6NqR(s4>p&WZf95'F$ToV;7V8HW-3GtTh"7b1TpZTo#(gpI#O=kO#4c8c[?&\*F8/s@<AV85gGDUQq'P=es<+m%m@."d9(*gV'`Y`4b.OM@6fN'$hkbV=,'$@qBp`%)3^j'N()c$a(7gWD=CfXf6p)Z`Og?'u&p=k1NoB'E,,8?gC$i[_=c:Mu_'0X4%%`]%p\&][TGhm$RVr]TB_fOCMd1'.m)3<+fOmc[tM[ZW$DrKO2+q2_Y7E.B\&t8EG/M[ljVN49=_]f0pBF/HAJB&g@bUkSFJoam3%#(lJPK]cHa8\cc#JuUB&0ijT[W6UXhGlBb2Ai++$0o<fc3B\6lIBJZnE>1HKT/R/f/a'V5l#ea<V[i(35%]bIq.lV5Fid)IfZh3'%[%L]0S\<LRa&-*tU;#q7*rmYL!&4+9cpL_FW#h-skZ@5QG;d'o$MSB.of:`RQo?'][hb_NEL'j;Nd/'fo8bnhLU4t)V8U8;SAf;4%gcTQl<q1,]4B*,QLXYJ/8jqI?j5K>\JhA8hcH7)`]sDrGSG"3Q"#=+R4<4$Ff1!V<P$K^"iQUFq\aaVsCGE/4*Je304L-"2gsUQo%5uoTcUBQKa1\6HF6i5oIpmc(!mg4hV,SlGd6FDL6B&@#[:?"go=q'dP\=P!7E[dRgl7,B38`RtR)$ec]S%Z3nnBO.f2h-E8*m^<?%qM?oq,&fr)2iFc1't\%b5$T!DU8kRgk^\_^P$re&^bse?)[CWBX;@F]$n`bD0WrHNI%79EEBO\l%u]Lhj547t)oIoU<nXk(goP-e%!o%9RoD#ERdXgnh%1@d6gb,PM,#ZD1,lgb5/A-pteAgd39b=:^Lt'FZe'MX`/gBt3)%ij/5KemSKmK$sOUCVfMasR0/^&r@KmIRa%5grubp@2@rQ:Y#G3#QGDDI*DW"#@MnfWN1QN"QQn/"poc.H\F@B<G&j#J$Lo&.6HTjddVPoj"20o<0\#KYj.(gat;r%X*+S_/P](%?Lrog5qAC33$VSc:bf&@.YcT6J7f)[)<"4E%MH2fi;ptMU;Ul678A&C#fI]olEW>k6WJl\aa%uqR3]\YRg\B+k]MYb3*'aF&M(mG%cSY(?5.FbQV+9!V3.#%eF68+T;D4OY(H-#hc4DuOrUcl=]4npBf@n]2a!YNOpR^KIh6Y71CpF?pU8R>=Hb"T*^9<Lh$FSC66)b]<%PtK$J+WNgf3Fp"Jf@+o2>+Dt)=?,T)\%uf(PTJ'/c8+Rn1EO6:_/<JZdpq80XGO/SIKY)RhLShbfpu-I><?HN-pCVb,/OhMeS^a3%qJ+Dk23R&>KifnnH$m0L=D:_VliosS/#O<N%T-I'>9+M-7P,hN6JG`%AeB3c[C)XVo[,5BmD1!`%KZ@Z.`-(BF_0:j`_kooD:WC@%qE2L`47bol-P'3Un?2NG>;)l:n^YruAegFYD'!%]4O6#=[tW"FEo3['ipk)eNJYFg.7Zhi;+ahV3VsX<?$Y/Q>?\+E`su?lobqYF%5I3k%[P:lD["k5_A`obe\!i\VA+em-kK5!EcH\FmB(O3mf!j!tE^o65ELuks3_@V1lC;&:*m0LK,d%#Rapq/dd3t@t8"&V3V]Amu%S0&qf3^*f3^=aMbia@/dZO:ou20,.-ao7eBVa._6R<D7We]u)VS2d"9klGnkMJlYFF@OF]f6/"cBKDo2JB:ra$UiJ.LZU-PN8&#,%UK*.`l-XUZh!)@9EXscYRa)1[P^Tg57FRZ/Xd9o"BB2VC/jkGYBKCJ^`FVHd)=>n?mCgde9rFU^Lo%H1)4<:Lc>;rl\^>L70dB>M%VK83hC9_G5^+bJA1YrjP,b!"L(m/+OAOb,dF\*7kZ'8o_UKBR0'6=qJVDFZ*Q!Tak9kRFjZGX;]BKDnj3hr()`M2VZL7##T3]i-L%-^r=/QHh)#m%`g(@d2*GXQGS@1X\Bu@]L<*VDF++e"<,6GVku=D@'HI/i/sA.$i/!of?/2S^BQhmu5I09rFDQ(ObGfAOY(9X=I#]%0jcc."rK#%OnEcbdhrV9j'_bW[dX?[n1fP9f?\khWLM+-nNmUKD77H0".t$Y!bZZ0`=gIsZdg[oEaBaqUU/Q)SAAnPg2q'j_,P,g%/tB%Qi<TU+"Lm2Y[*GPO4>CCN-D'oHVp!a66#4srK?+bV.9FPB>BPe*0V*5$$TK"E]55>m9NOW-nR/G&&]NA.6^r_QF[e'ke$:e8%h76nNe'KXX0/iEWENG<b3p'1]cA3A5(Hgi?fIgtM\oSc\BBgVugcp(HA+$^$S0eKs\ZesL+*6VrU,_$bGK(Ceh*H7^cuFBUh/"EW%K7iUSEqU=k/g8P@4F\qda-o#LZT)2b[Vi`22EZ*H!c0a$SUftO3)<*""6sKH&"V]->?BfL\jb*;6PuAf8+V\;MJ\$?\J'bYW&0;a%1j;$'iC!mS;&*b;9K)Fnd`3$O?Iq+.nO/Ho<LXrM<n*PIe=:qK%ICCk:.Iidit(Rp)[]U-aLprV)[]U,bbNqHYo3/IV*mL"^(l68%i>#D2flpPZF-1,'fl];&"jY[#-VZ-)bH@hg4L^u9'A2u/[?n3p'Bn<DZ3!@(o7_T1H$#h<3alX5lnSb+'aCMho3SO#)1o3\H&0D>%H7LnOA3)ID_'\,=,#e,ZO51!qk[NG0*3]rDJIKB3R<NZ)^NQHg>=:Y-U/(3c=F#&#W+QE>!_>IqSQ;ju^YjF^&(bjbX*SUsaKW_q%D]iRUL,VSQ%.dTZh4JY!&mqW.EAo6_C9"l80'V/+RhP4[C?(5CE5tI4/qXRl:Uln[Ucd9!6tRh./P(W-'CIFCo/hd>EHK'ga)R94%3D[/+RaiCPT,(*pL&'B]cdDl1;,mg8N]-X)j1sBh+'5LXo>nt+:J$?:_IG41ksG&&iL;_h=1Fj@j#M*IlEPV"R[[0Ba2.neFEO;o%*1(:Uhej.HUsWWCA=2tDB?2di\![LH]9^RLD\cmI2Mc'gkBUep`=0YO/;)HrD5U"?5%b7IW6A+l\oubE7[6!K'<6-e`3d)(pFU)b%H"Xg@T356a0Wpb)PqSo'@]6acgf]Ce\Q0-6<*!a6_tnCo[t4J<=M`3QH#@+sRpu]nN;>[+<Y8d3Vl%ng97;*+4kA-m=Nf?3-TXqB%ll\NXj-0%C:1IN\Z8]uS24cnL'mIc>e?`/6/%#An6l`%_gLI6*`4OP^^7D=qQWP`W%W9I*SV,++5'2(X1O'A*crKat`:i"Mb&(j6%GI:*I%lWfq[UXW[$,SdG?`8rnh3*hT)mA)IcZiBRp)LMGl(Mu-%i6o1_XmOle(:,2O&[!N-Ns+IIj+J)[e*#HaXd_d;/MP2IG3>g%@GJNClIu3EBqq0pc02c:BGqf4B\OK1#YdBRR`E=*2q&`23J,u3[,a`mT7?((dHLFZm[gKiIqqGH)\qGOm5(M,4['M?QoHP0RYB_6%=>X2e:RO.F4^Yha/6D[%4ABLc^<m=haM5V3UIGj68F0^F>1V!a3]mp'=#:&$)Vg00.Mj`E)@g7X;KrZ5$4^eZjT^p+.ONQ1l\Sd5%%V<8l^oC;<=?\0ccJEE$Y/CoSP6('":jG'V&>5J9L)u[66foO`>+Km2'Jme#._3Y6cYmo>3WIdPGS/OW9p^*GY2RJR:+]%Kqa41Z%:IlEa?.tk*i&E42SSOKZ<1:(IVEVVk1OO6+V.JrHK;7j>V;\oIdc6At]f;(aZh2]:\ET6'_Aej619g8sU:lubNR]Y`;)`]O>%Ud&%4YpZ`V$*fFh`Rm8;]G(EAJ*sg(1QrmN@TtJBI'^*H-T]ekDH<6[&,R7AUV9ef+t$:9"g/D[=58<[4HZP2Go!_-DADhige#Hfr\Fi%F2_k\0FfS]3fOtmYr6.YQs%HL7UG'm\KNUVfdR'Z.<KCaFlP+-'`s[i.XZ!(nb=YpG$:q=ib-8^i%$U(TT@I+3,PGFm``#-3=$nj%FqUk,R[^?C10l0S+u*,$RlgqU0I#<#]Mhk>@p<eTUFCV&c(4MJKE>oNmq^`3Ic#E!T\Z"pqY;r?m:fYh"*GS."70/mSS[Ym1=K0D%Pk2lL<2Pj/Ma>QFQH'HQ/0"q#&(5"OE^#:",p#eW2%qUDg#8JT$IGbqW&lNSAJCf/.a;E&%C9e/NWR`)_(5deIm10M-pX[bJ;j)h%/qH]sE-%bFdCu">-pX[bJ2V&9g-bs&N<(m*<H&NRBF7NUhlr'EZAep-[eA2;MJ<CW/e*bN%&!D7H&qT1G#WN&auB'OCp'i?k,2cB%o2%V4X28lej\sIbqpe(0oR-"L%csJ:d5b(>l(NJGRt^`[%ctS@),A!EeO0/p3PX#@TmXj\"mAq.6?gG_Z-*TqSa*+5`G?F&TaX`i%F!&M8I'0*Lak85.bO)iheu/?rk\[AjlaMtJP2gW^XJ>3LOW+Y%mZrqRb/(W;cJg>j4kGai#6RnZ!@H-8XriS;1,e<9.uT,,olD"m%[3TZZmAYOjSgnfQlXr@;lglWtTBg,-F_@!&b14%O:/5G(r*2Hj&(RMHlXtXGT?$-7kKNj/5ATOa[.+=Gos5EUH@9VdF8`19p#C+n%\@"!ZkPA>n:3i.IY+GeLkTubbB76ePg[k4&$c&;rO)NF@ClM3_1X";5p09fiG;>Zcr,0gQZeeM%<e\N=os7o&&\mi^SEn5lAULN8%Cu"?(kPA?Me)7J^iEST_LMQL;<-RO%RJ9A%;uO5>f7hNCZejp:kWrkspL&!DT,ZLVs'.e6Zes\?^Nn/cZT1e+nTfNMcLiuo-+]%K%%cpq[_c<kFX6\!a[UXZeT=&10'#23>\UN-*4LfHX(-:&C%Cn5,$/13/q9S_T^rMa[Y+N8GK2_`7F<7%`o5o@$ha6DAS]A3m@kl7!%/A'-_0RKsph,/Q%Yr@Y5Fa:-^or3C^?+KI8IV,9OqK#*gN8M4QafEC+6nEeiT=(,_M6((B>X&_P##Vo%S]BnO$J4?$^4i[lg/Iqc%4cdol'X":YQ,1"[o**$AS'hqpp!](t50"p_Aasj?P[HDM/2Ra,lY#VK6o<Q8ch4VN[PN^k/`t1E<'M1B9.e(%XkfPL/)?`]B76f;%ZFgFE:\E1LS"KF[5O28H4?a"MTea%<kPA<d`#;9ZpZMBUTB^'eO#[`,[5uj![jWkLY2;?&N;I\p/7u26p?auReq?6O\UN*H62`AO%51e+a3"YDS:-?H'FL6BFiGa*[m.%n#]1e"5XaWrV9tTV\\S9[LnQlm;LnctTHm17AD-4D36Z2LKWbf$k^BOhgJI3/9G1oM:n3#*D%&06a#,AI)77:PAo)gXJH(LhSqBi5)nWP%Q;]DGIAhtP,o&&Ue_oPl#Bp7ASQf0OoI40Vlc.13KWPJZ&"[$^DJ2VN.monka/H=gqr%ff21o\Oc^IeK<5]BVLbPQLCQ'd?-A5<)("@0>=U\mE=P>mDi5i,l)NAn%>d[('9?`kN^U:iE*1kI5gBNrV`@ToT*ptf2%r^Dboqn%lZ%D3ja2@,8$Xm(rE+D;$m%Jj4LI/WF8,Oro#;UX4n!ZmpRdr%G'n@,OGel_6%3Si#h@GE`G"n4ooI+\g\pZrF/h5q2BU5/5esGI%:+UE)N?;_50aJ?X="9iIdJ.\]a3A2IN-U4+^3&]?kTsGHSI\!f.Rub@H'6WXd2+A#*?D)o_P$Jp0X*5jd"!J_UJZEpX,b_<U`]TU%B'4!tk5K+>]g%Cr)cG[D]%1YDgCQr&^s4P(:;auf$2CPApM!<q[if$`q1SE9)r3XrBN=c"NdT4#c:V?_S8*!(L5+?L$3r'Ta_[c#%V.oa3mbHb'1eUWpMn@J1WP,kZRqs25`Q%9s3P5!-<k7%E59mE*GH8EH]>m5ij_^_qDLP]qI_;`@(IMPD#\C)%H[L0E8)=h!=5eLF%1bKd)hS+Xm2g7-h63BF;73Q>'9U>@`anc:HS:oP5&)IRF'>fT9alk(`')gI'N$+;OUS$cnp:=D]6nDu#Li2R4nP:FL*_,@+.EYt]%@rb"!cCeof6Dtmt9kAfkIpWV&I_;n&*X;BEfh"PV!%5$lO,cOYj\^\\n=8np%q>Hh@Hh'C+EA!m`?0mg3!nSk*Zr(Bm;K;i-Xjaa%H_RW)LuS"8`S10[!$YiWX@;204:i)P)LRCLr!!!\%rrCAha:7'qr_BcW3r5B;=9-?+eVn6CdiM8-k_02V/NW(hZpBVdqW+Mf=4ui%C#*(tBSR_=(lP55.1f($p4!h9+XRB`HX"k>(2S5&'RS7%@,\3[G#UZ\pKjkqW<?^sZjTs1<G,/9eDtJ`/XK]/q9b4#Be_V.>OQfa%eYi;gHf9"VhQ>SBcNG)YW+*()1k"42FW3&4Lt/-X%+23j*!j^_[":-D&I_:2HsQkWGT1-16.%Qi]D2Tm[,$U=ohF:PaY87G\8miW%<E-E@;s<C-Xmr6A;;aXXhRs_i/!7k,E09OnrnPQ)NkUgoegml+T<&V$qFn3"gs^m6Ktr"(OF!8-8iRc7hV/Z\ep4#"jT65>C9$;X%W#:\#mWOdi;74gH7c4u2qLh&t[skh"Pq.\EGPn%_HO4;neF_p/I_D_Ib+VKoQ7L!7).$C;6G:;fiig';08CK2)-%0I;A`V.YoK?O%GQZ\J$#_)tGln\ils28W[]+*"rQ<$1")msIGR=u.cU,;3%3OKX]YU5J&LY+tXq2\5D#jD,Ps#Mn-n2bhm0!_YD=1X5.??m8%ZXj-%5\C+!&^T?8)Y-PZ!TtU1Q<EfhRK`XC$pTB?.Bm&KjiBdp`e&H2_?qNTlnP7<4mPk20Xd+#pnmRb1V#/hhKDXg*mF$q`-)fU9riM?%Ns]a=5=`h)2i!1I(G!i!#M`luUCk@/0jb7%n&3?RgB.HkQD9>QG`&\;^O!lUC0q`$lh_b2q[:bV;8TZ>8#oKL66TCc$c2`^A#2o$%4RSp5<TOKC+$f>.pd%-*@R@AG#jgM<T\M;FUt3e4\[Z[GNNoWVog<[GgSn(fQ&0(t).Fg-QXek4c?=T1]:Kh>V:2MF^5+&-dVF_M%#.hH^JiOD!r7B\4F4cdU;dpNmF+Pf_qrAIO1r>'hJs$&XpE?+mK]o=GUBY\]+dk14$\r3'6l3H\&HD].^Vo)9Gbf:No"TZU;<P8'%<+G;>ed[tg@T_iHid^HWiGRRna4[?(*t^#>m)FsgmMW#Z-@s7aUTp?P<,gIj,BpVNeh>S>mkViX,c0,I_\;"Us%mkK%e&ODRZb?>%aKmJ*LcO9(>8O\W\d?3'0tZH*_6G0%$c,@[^/;GpJk<,<0f:FsR8(M+$&j5imJ.DNK@SE?'3&Ha!W(7tRd'R6@rNEX?0&tj06dK,%O[12dGuq"j[q-R6AtfLR_=:QPhNl=ALIXCE=9AZQh^?j9d9K^MnVupP3VG2sDi<S;YO3AMV7V<nBNGZE2\LocMHT3*>DVTqTssZ/%_6La,"YR5Z+M2Cj+Zn[n#M!q3"[$K&fK1*R;+l91j+Z7IJK+5J'Yeu?K8`TaeW3Em,sMtW/Z4/t`e2>4U(!WY'3+#24u5SgK4h*M%fL;laLej9FCuk]2Ed5j3Jckjja[p2hVepYFcnDj$iW.-FVO9`=K,rTQcI/Z#n]F%ca1!'B<$Fba!hXdT[,P'(ZWO\cJZ'`W9-J3K%?4a0`hhN\R_HNQh2?qTcYO$'5Db$ED,0f*rOChXAh.ekg_X7H'Ec:P7$9W,,2JseZk0ZU(iPGK$F&"#>&8CRq!>o/m^r<$IM4\j*%gXttH1L?[>mMF8Q`'"7Bmf\5;l2Yg00b9ZEW/P:h$l7T/@^J21r/0g;P<7$"G3bA3p!G@'Y/8r:jtXl(iS^c$M\f-Ga5$SYUWf5k%;RL21a/@g6ZB\#%Le"7b!2nko@BR;%g4LfJ=XqhcMJ?[">c`g'6$i39PDJXY,p_Nd'9[1<319#$`#_80pr;^[5,Jnp`LS$f`rZeI%N7411_d^6.jC7B_l#l(rJlj#Wr84n,A$fm+K?"eS?ct<:eH*l+U\oI"pN1SK718P5*r=MA(10kg:@QTb`h8hPYB@_ZQ.od2@di\V%gd"Z39=//(m`O5UMg"@L@'/S]D,&o3_o6:uF<bYbK2kqO`G9X_?mpaCogH%lams2[,!@Zg^:or7r&j-$V=I:<Wq?3kWL\1N]q7Wm%:u;6?Nob:W/1PsdU>/2f?;/.TF[C-eEKGCukh<NZlJ@")Y&8,I>Fk-E$a%1V+!+ecVfm&ZBf%`CBJ$[hJSdZNQ->I0`-d38Oq<ga%@]C0kD9KBoa3)fnp9"6JGnTk[&5F,QfOVMFe^3`+_lH.OP+<"YAI)clcM.MRP@$YVSL.[e`&"C#gsH:WGGe[Co)$bh[@H..h3ckg%12>RBjfQGnnmf46h>&O*Q/b(YclIY,N(&neF`Dm`T[/U-PKdd8<nu2fjp!`,JIDeb,OpoY/!'7^Z4+VYI'd^V2b&-QRs.)DKA*7V%^P$B<*admuIJX9N+gG@&4!.g;=r_m]2TnGAf.SAKbalA7Bd7:9WgjaZ_=oZe/P>-UC#40o*d9tq4E)mH;2aEe,FZZN%R",8H->KY%*\B@Da2X:^QAod#7jd!PBqp!-f]_FZa0ukSj:;X+Uj%LEBDJi8O_T6r8u<?+N1P)/,A?X6fSb`E+*`/OPH5cE&EdDff^4e3c+_jN%Ut19s;XnP/s&b;Y2oi(WI;TP$aDaH5cZ1u-/NXn(c(p++D7Im[=hFkfF147nAqXZKUINHYdZ7pbf$rgp`ti+L%[]:`-+T9"mU`ns%D18Gc7>G`AhsqSJ(1S>*%r,1`p%U'BCkucrN#=UiMb,h$X+bQ[<a&$u;i&Ua9R:(QNg_LO$1(RH^r_#U)eqh9i1oKF9C`Db)$h!(%Dre0D$-(mJ0FJts#E]VNJM4^q^tp,q@]3,U)p(L>]n('>f,NtH5Jl.V[N\):ehs<oCb1l18JY$h8G'D&G2NX=Po%I%Ie!&Hmn#,Z%PHRN4\_?oPQhMS"#A?$nX*`TH3NDHCrMXcKqsa8K83_@ClGm_u1:+b(j."?Nc/Hr3RY*,/jY_2WiCKNl\R0F).(,'##;!8hJpU^_%+"ua>`TsJp[aT.UDH*N#W*[gY.?4nF-]`0XNp]l2+kekT**l@G.C;7P7<HOVe!/u-U):q:TKcOo%t&KdY:.T(Aa0HdMSh&^-124+%pP-i=beGj;H[IFhYA`9[:a;B3kEd[HA:l6c]\B=b3S9JZd#.,=W\l!Z(W5>B$02;R-22j6>'^M.)h)KC^eXth(2lK4TVptR>9H.*%]n+eEN&Q.U>_-p8Dr`$Fs"4&@AH3dDH\Uio\Z0/Kh#@:X%+eY*_"k*7IAQI;q:b07`*Q=4(NgOGFV+OVjU3!0B4cGUg*GZc\/GmP%l^RS<Y8Cb#j9r3b1F&*>qgifJG$]XP(p8Dsh*aMA]e!$7_P_"UPcsLP>e_rc44jc-0+/E$")L=CX;g`!F1>m0m[BUrKO_0pM*'_&%j'th3fp]G5`A)ST`To2^j9<hg2a=VqIbr2Q</_/^jgJ8U.>3Jn?D2Lj,+%npj?XqOaDI73jiJ1QZ!-GcAFJo#\5aD02,C^Pi_9W(%6C.5Z8mK*QVs=_[rf$7Bb;ROO/)4%i'Ye,?GGJ9-gA)-6F08IY>9beq7:T#_6_eb4L`mg`9/F>O1r#Ceeg\Vbg;aUYl@g$/=MEGV%[4Krc[Z<"_.Iilc=R4KVB-.fM[?(.8+/3-N4,';>7Oo4\IT^ot,&VQNV2t7Ia-=BEV`dQ05I_d$[NCq`DPuDUR%qh^f*7]A7I[R$%FoD,PBnKE2)nqJB]]^hH+_t+0hFNqU><*)HP*`NZq;nXnPRG1EVZXU:?_Md4o%9H#gaLIP0cd^M9]3@4[coGf]ak.A;FM&UL]f[1%[tlsW8N/a:K=@It]lrp-'5tG)Za>S@l^#:AnMEc102F_'L\^%g&!7.c?_2L)m2k.<:HY4ln0%SXM0C(LQ8%iRg0(d*5XK6I>9qFQ%+VKf5<IGV/#lHPS7)DVG4o6,^CSD/-9\pg<V)OP>rn'*nX0>bWX=AQk2k'==8JM9?MK$&!X!1MHcW='d<:X\fEHU43SA`t.h0bKi%:Bs17r%R<7ZHOnrK[+<fVQ8_Em]<'\d.M1k`t7fmdlp#*I,lf=>ES^#eq8e0?0/:mI?'I5BRC?8i(]HkHQ'Xa'[#I'`>Q<^oEup,%^2<-5>Wpu*m>Tsn>HQ@a#_Q657s44PMOVb=5(\-j_$1:CgQ>HmL;O.d:cB%fM!0c^<_7O&n[qQ/d&<;T6"9br_5Itgka5YN^$/gp%n>K:spF4%<J\r$\_6EVI?2_FUFG8%gN'_d,fg'bk+U/#5=Z&Tu:``sn5^;?U0RYo\5bL2F1;r^fO5Ro(hIJmmM&[(!p[)St"OnB^%2UWgS&-UT>#cKX&b*RR%HHQ-.,6A#%-p>S49F1^8)?^W'&L3:Te#-R*FoajiVP6F?LoH2Yk8hJj"9bK/rBUU<^U\g`W8[jN[T,YV%r>[<_[_8k6W2-I\>=$''!^-@?WsI#(#Lt%C&6a`2E8hkd5#?U3r@fFRJ.bd,4Y(f/@Do8E5j?7.(kR+1dT.L]QE.Qr#kLSu7b\uV%'m5:a%]Zb7?uZYi%\**!"s]4Q@02:AK.8^+crZm7'U"`YZOu(Vp\SY>NVoca$6,eh9dcfdI4p7BBEK^qF`>.mQn-kr9<=$#RS$iF%e`pR7;_AhbbB\L$rV4q]4(S(idZt;%^bMle`PNN5Rg1W%1Ba+3;AI5oBGud]8?OZW5s2mWL*=&N=/K8:WXoseL1H0O:+8@B\*l[9%Z#a.WOU=Riagb(i92:SkWXi"[W"7h<B@RB,'onDKf*>;"9@3nl?8>T"G_p7U\>4D\%aE^\<`XS"V7NU^RHA]q;XqPKBJ2:6(<UoP%a?8Da^RAU^;:RRb<Z*1JH)L'XR1(R+"[B(%Jh20FE_)*fEre/.(\KHqMfn=r26h<(&;S4p6s7`geX1f'/2jci3en,QI`.BA`HnK"%X^CYu5oa>d:[qm/Vl]q.p1lOC7fWc1UdKM:$P<mtKSJ&,Z?:6H+EO.!<9:uBklKru5c^lT)FDN9-9gl>!O[>/5$\nq<<0&b(UP=8%a6\pf=U0@4<L+2s?ONBpid)tR.U6n.]p:k1LVpu/TmmHCbY#j0i%pD:Q3+2#Y*uu?AJ0V,8RYFYhk4[TfGl<M5<4(qk(G28nCBof%@g['qs(*6r4,#TS@roNA.C;6%([rc.>>O'b2iP]chXQ<)gZ)K@hG0c(4mqHe[o6sM%Pp&VD5$nk&HmS?7cGrM+b_m,&[%k@rA1l?%h@<h0NH4Ldc"hU:Or0;"p#bai_]/UM]^i4ldo5_T]l_'_$YP@tp.cOfF5)i\BSjbKlf9HH;PQ&]8m6uScIOtsdRVP\S=^ruoD1;I%@h]3n3rrfX;jp8*UEn+&`PO#HrC)=+q4rQY/3Ve+AD]1M"`8iMIJOHecUnUF(j40i7-<FG)b`TV0uL*C2MkF;HfjA_"-PlmGqgj.%%Tm1m]j2qf(cbS3"OA[go^b+oR.,?[gE\@Wg`-tHX7h+bQ`\f9OJK8qNHM9lAa-%8'Z9/hA)4K?,.>@N\\qEj&l.eN2;dO>V4@C!%9FN#&CG]?igZ[,\bCM.*a\e3uJubC:UKouVe532k1&\XcgJr:CX\.]rG?HE)o,6NS\m:IKgK,3fQ6?5Cl'BTg:a2LG:1k0CHkXTf%P,:BP[)&X#\0(Sb6uu8:GJ2&`8*!tgOrP2npO"Eh&nhuIV,q.l/jg8:52_GpfuM$<LL>*-+[4TphJOO!f&H0Eenol.5h;e`!q4#b%)X6!:Sl<c2r_SCe7TX<&oT@,*l`tRG?LrsBNUAq>6r0P$/kXPb3s@qJWG8LRhPj'-g<Kdd,qbK$?_)AWKXCko:lnZ$E<dq\)QTb\%bRk[MneQ4),sHq(+n0fU,^kt*7p%H5Z\g&#:+%/+5Lj-nJ;(MGOuOe=Es"tpLX^nI1i>c[UB_t,jZ@noc%gDOFU6#gEpE0t!Vo5t%DR"bVqebhOX\k:nP"3PjGpE%DFX:b\-IFD:-A0pX!7NOG##pK9I>(4SC@NZ?,0t7DY2+C_*8d]bT)\tTE(1_RBCRZRZYBJAqT9"B%Xu)'YWf5uFkT>i:BQnp$Qi6TW=A'I>5Z;Fq6qC&q8-/q5UY$-;-@%I@OJTW&rC1Vs1hn-Gq^bgtjUeK\a^2<e;8/CcrKb#@8XatP%7h"QITU@\;M7Vf-ls6K+Bs-d3cn.nua!\\K-Q,)!Up4*`d>Uk9V@<Ynn/^W!gK7C$S"6VNIXB,YB&cWc;NFCsp9eW397^oH#C1.k%eu?,U7CTqe(C?+e>Gi)T0UMK`915qZ2JuG$mqX+6$Lt(ra\F#m>%cG5O"\4%$DudT=IcBE_P[$H$oo7nb<]c`-2sCt$ooM\6(-5r%1RIQ>RED=#Q"7!V<$l&:El)\*P*D1j*uN7ANK>W;0'L`D@!]?rN1*B+?7/JTl)1t^Wg`[K?CHYPrZEYIj(gc,1Ft;hnL1JRPS@Jn%(Jtg+*/;?7!p$AdH5qY?a43R#C:\5igW9c^+P$i*2=^:4jJ5dOaWqQdZ@!A@AJKc:mJD:%-61KLIH(7g(-YWQ(C:;&_SSMdd$.`2%gW)9"b&[,F,;#(KNP8(LP%]urB7jo\*oD?kA-$^t<K-Q@=HMSd;%8tkJ<([18S"[C]Rsa9356nCY8]3MZJ]&/"4d@<d+q(;5-Nag%5?/@%@a`2l%$-ICc/X%Lq[[<Oh8oiAEe`^3R$@]XZ>e1cOMlr.=;8Z%H&J2aJnX\'<X5`I`4GWRIGgFQ`YP#5Frk@YH!GPg%"7N9%#/75DXK;e62B/B'(b9fh,smV]NL!.!L\VtY"ggr*?ni#q:/K$_L6(7j'#lmZ[VD]a,QWe&(^R*D"%M">WEM:q@E0aGfPU9BX8Mri%YnGqR7tTaj]"HUAW2JYSTt_-[p9&e"POc8A]%/@#LX-p@:#m.s9&ga2oaq+$h$JthpLc>Zr=i9i_[OQCLP2i*eLLpGgu#,9<c813%K#4Y7+lgQ00cGJa_!5<RHAX5X$kYkAA`HY,Z7\ZAP-dor]pM?q3@r1ug*$FRe=sr<[IT>Sb88MHT2%d9'[U%'A[[^d7;PFr,86]c%E^Y3_DBHcr/SU;U3X-WRBh#Fj3>H.#PH%`iE&Bk<^!'Xa<809n,GG2>QWNCGFmn.rCIf3JOd\;\k_L'@>m'I8@IfTSHR%q7ZZQ0&%8@uptE]NuEr@4%+A@t6A2)3X`VW__sF67^jC;pB?VD2U6B#_cWl?2YiS"\XE$TDMPoq=5F7q6PV_WPIf(h17j.=rEsae&HhRj+5N%K/W.LL!RlVdCRa8$_NW6_s2CD23q/FY1qjCA)XR-3#JWYCA)K,/::1smW$:ak@EM>bk^r`Hqjm++m,;K'*aJG``rgD&t(L.]U_CD%j80RDQk%hl?VC]CH8`gl"K%>B*t-;_5Q!#5'DqJSFsqqEJP"Jj^FV&n<OuH,QjCpufMl7a9LliJ0`QXo,"O=;0W>l)0+1GhQ1hfk%P=F4'R_U2(lEL6c"V_XUd.T#nTK%H[5\r.Y`JFngbL*FN!jgtnOo]WlJ:h#h`_L8&4f;^s'/7\.oujK@lAej^T0<m^%0#[Q*id/k%n2)i0Lhn"hg'^RDNK`'&lL8APmP7^6n(lSiB_SPlNYd_J\'RfeV*fO-i/_g3I.&2W3m#5cknqZK(!2V(C^j9EA1\c1hK!u5_G-M@%.KHXkkO&Sei7O,IF\)k,\MN/E6:egs*uug+``85pVGuC_lHIcWg#i5pE4"R^\YntG.,jQ@TLukt:U]sU"stB'\q<0rLN#4@OXB-R%HJXKsGh:VG,hkXC?JHB&@A"gm4?3PF[18$X]EKPdf(Va6q7!,3R@Mk0VK/pk?Iu")PPZq5k%o1$DoSH`6ut8qqe#7S_)dbSZ0TJA%pW'3W][[qu.7?i/NL4QQE+%-g&Uj:M^qLl]1$^Mdr?/Z#Ahe(8mN_LXinNM/I:W4##as)3M0]rZKTCB(&CpGc<dt?Y+4];ujQoFK%qDn>J654-@`+c$PH@R;9L_VoVkftOgRn&GF'$r!srN)=%A55EF_AXt*]0I^^1bqX*2E5ZT[aGLRUp/*1HJrElp:=D,-.HU2kOC.Y%&o+e4T&"[!e.PB?FjGDd\u`f`UJ&"J)D18;9=KQm/aJW9hpO'L7a!i1?5tTa?:O@lZ</ICj]Op0Q?=8+Z7Vb>b;u64/B8B<[&g&%%aieZ72dL*Y<RNWSTgfD!Z=C:99;p7D:=3L9AdL>(i.U\Tdh6E6^mV,!n%,OH>Qhh.WWq-OXBG<R/9>JUDHQ\(%%R)t3G.5k12q'=%FO%a/12qWnjn1+rlrs8:TaoeJhq:'g#=^t_K?353J:JUV\d4*^.<+7JM64JL&RO,/$c*se+h`JR*]:_pWibe2;kU#`)pFis\d(3]%>$4/n,o:%Q!F[)H'BX*DP[0F#ab#D"OT[K)=3MU:Z]3PBpi'2T?+Dc-0o<EtFPcG=[Fl@[&Lrnss5b"S?Wi11fEX=?V.oaGL`t?`%&*3oA3nQ'*#etGm#]**)F6b#f'aqjI$"*qB.D1N+ANk;Lh!9>nlp3f]S4?)_gW]%W:QsQ7IrB?WX3q=&]EEns;PTuA4/R;\n/sTH%4hSR/XO`-GKA%IW]a>pOgMdF-3F95?mt5I(NNTR@G[\4)TGe>Q9F!fJ"gg$9iq:K;/r+t&-&]2(ELHU=<Q2Y'E0ttgs,"I/Au5[[%b4:JrVNZX6ikMl"<ZcR6G3eVK[jZoJ4@7o>)or2-$Hbigkoq+*C+dQ_mju<jCCenG"QmsR5s4]XG1=@&&8+!Zcm^l&JkOhbgOBW+%pjFl&\,k#5DaK'L8EW#-ZAEbpMi7)XBTCtPKO\\*:R/KLm1e9GL#D>4g9AWl>J:1h[(2^E[d]kqA+o[5J[\Qk6b^9AFgb4L8\aP,%LS51JAc*9F+u_6.2UR_Ta\@_eXi?8NMjr@$HKX97f=@7NBG51-1:`5RZtH/^I`!sr>'k]O<6S6@0$c?9Itt+)rK)Iq<gKJBIq@a!%-S&L"fr;DBO&'Q9'.kI%JpJrI6ea'L@nV[.ZaQEFgA"!sH6J_tF&Fl9dd[%uh)*!]8W+Wf&!?c[qdM(]P8:3qe#[LjhDC;BA,]tr%7d=,<Bu$/0F%,B1+?,iPBu#aoOdehR(D1H1@#\Mf5)lVm8Y[)(P?t`PgX=Or"A'\EX'k/4TS_Q#@_2jsb\Z1TT3mH31Q9fk8h]S)%AEt_-O,=NV,cN@3L_jst[u"aaF%6W0X`(l84l](q7SnsX^a#RO9@Mr7ao-V"nFF,L3Yb/#d7Wd+>Ua^1_,mTYL3(sXNAX+VBG$k5%(0c.O#7)oMa`oO`HQp.@hd>=.'Tc>TW)5l][&)kd6]>h)30W2Pje#@d+Wd7M=!7OEF[mRg8$WV%Uj7=:84>C@0snT$70?m#(9V<`%XLQ`DZg4HSb&-\D@.3LZlD43$Z>j'n#I_6KGqfsa:ReDGV5Jt+)u@>l)JW^o*Tg]:\^%oYXJ>4SYG$!YO=Qq-OHn#YFgU"UA:EQ^%>EIV6+mg&@-DeNJ5e$Eeg[M'5jPL>nJY+[IDu>qg?gre'N>e2SjNXeR*5L;XZt]0]SFHOX+]_PL/MC/S3Hf`bK""ZlP=Vjq1Vd*[%Rq6N*0/hE2[)&cH>]+!RD3+.Ph+)_Eq!YbS?t^cZ$,LtVgr'KP$Fa7Y2_fom2Nhjdq2J?eX/BORb>#;Bb0%Ir<b?i7Iq@a!-nFsF%7fUWRhj'J+Iq@a!.4Ze;_Y[\C3<qL2kV_gYA``C'b2kVrs!oVUCP)T/b28JLo>X#p.kBde=,R%#b.hq%BmqDH^U!DhAEDh('`OH@%8p]L<n&S,7hYjXZr)Hm6S@7'92G0$K-A4&-XdFk4_0NL5D:"9+p^_b@r&c-dY2V[Qg#ehoJ69d?,^t^35B*-HI0@VmB#nmE=2,iQ%_"ulI(k*RLOO5s,0*Ja-$m:]eMZ;V[X`bZb1)p5oIKrpD*tZQU2?JOt-VU%'0Nfo*E_!dY2%Yo73E?>m-]m.lDd+^#;b>&O:_6hI%fbA8Jha%u4Wk0C.nlmh%GQ[%>FH.$qVf0-Wc9[X6Rch^7ctj3h_G.JdF(l@Y!;S6j@gLR%TDA:#R^eBNf\/"@XF2=$/E%d@J:,D>%nfjQL@-#5RCG;Bdp8]=<(o4Cg/*]K&hF_XQ:U=UJ`aTJ^"+II](OPus%s,W\Hp(OljPT[G=7ouZ7dk)DAWH##(<3%&VB:Pq,(V$!%lljICnstST"S2l'mb6O#E,aDC`Gk6_)gm",64,k**WgZT6B77ALn(VAM/PJiiQWEPi^;?F(PIEU3Y:2)VtOWVjCnW+1+0_?Nsek]%@D.DdQ*=JGar..TAF3NN=?RW8C>n/\R"%HA74]sa"$:E7i+&&nJHY!fduFu8aKTeg;"<>ncIYHH(n5]%8ho6+ED)[8;PslF,%cqu%@c"ps.iGdua5.,8'@*82lA@!0iiJ5!J4Ym_?!XZeU@Z<SGqg^X$G`'gicZCL5e-pV\1<$N<&f>M^8[0&1(hk?O.\se*;\3Y.L.+n%*_mG+#^NO`?S>agHZ.M&EA'3^jRR^Zs5>HXG_e`qP"39QC0WomU"U_rn2CE@Yd5k-PF$[ba%UG*V93.?F,2+4DZj#)6E/Lke>3:H%T=t.Ri<56&ZXJ*-Hg-+u/kVF[?VPT4UX=QObopUWS1D"ZX)&W&]1;VaV)^qa+2jeYS:jA/rpsk_i$BX*qL:X(Bf;8trog7KZXIh=%b/G#4R5/`BDi"d[gn2i"QeMDqZT4=cl[qY$^LqWcNG!;ln_SH#0=H7Zl1$@qYVK-jZUj':Kg65KL,K0lk(C&PJVs"p`$%t69s?,6%TgcrrobQ1K[`$`cm5VhoFa0\iJ^WbJ$\UdmfF*lS.*k58PlWLp%Z\3ppe22K'+q&7V"-nPh"\+Z<%a$gk78P5[^?G#>T![=0<js%%o^/BF$uBjEpdQq]g;bk77o&<DT+"=m!b*Z#:U>C;VkNV]1tkmUmZD8R=TZcH3dq-B.1lSr>SG$SM^Uob3's:Er>hk"I/jCrJFh5b%bD9i7NnLsV)a_1KN)\0fYI7iKeQB<[>S[ghPD!m/Gm?1M<Y>/WiG=PDqthG7kP:53;7239:o:>]'Xj;OP'tX0BN5T;D$$LA$np=p%OOG)K]945[*?`>L`FuRYduT'cnkTU0s$[q9D9+'.aW8M?9;[?A3Eq=,-8asb$nW_/O(O_`?qZS.]A?@7HJjcn,'@fL[b5bAmOsbW%Wh:`#Q@&$Qb6&8&s)P\W?9F/tnSC+EDip4jSEbSFhle<4eEMH6/)Y>jNi:Bd`ps"bkD8ErpM]2A\,%3-JcCFWQF[74a7h(j/ThGG%]IWiJ#rSZRdOuut0XJS:-)1Fn@/i,(D"V<7Y7:2D[)(mP:4f#8[D=K_W#8;+^Q\b&Ksk#_rg(?!Z^UpV;)9c$^%E!Zq`N)Fe4`QZ%`se:'DuPYHl1O+J+"^QJIA8>?:)EE4^SRtW]W24Ka/<:]Y@kV's4cD"Y=4R)NPeiEpAeq19lH<)(]3%u1l*OeU*,q]J0Npa^[ocq%m9`9B>1M.R<AWfs4QdRm"BekF=cniO7is4.B*H"iGItXcO7"q!RsBETY/4\f&eUBb5@+7_?"W$GS;!/J:i2Fq$6)f!<E<8:92m"4%Yfb@qTt>N-LZu#6bZ/4_R8p!%W-adBY463@D[-6U@;YAtc6MqV3[Cp97jiBEb^W_]rS+T<Rh&5+n`oE[p88.AR@Bb.LRrH:?g7>D%atVA@"hXElS@&2/q!a&5CNH66!KA,9OB8pWBu)/!Kq;+(fO9A-"q!N0\iiCaT6(T,l.hUQF8]<Yhh>T?6RViE5$FQT^,9H]'_3Rf%nn:3E>@eLjXDuAc(Ql$3?0GQ!5)[dAk;r+YFl8lo#JTA=o,Z#[,A*C-!]!Fj/Yj%P8thVZ%Yn(_Llui%iQt1(Em$aa0aoZme(;p[%KlfXt#5oj/(=EL8-(^Nf=6#OP."^e)V\nt%3AsXkfc3#<[\O:p7mZkX'mX8NF3qk3$PhpI^^J,O'00aL\SXI(:m$bH>Y)*PKSjk^%i.YWpTctKp38?1_-9[6FTa],(FCa<[96R!Q*>s*+hs+H5(PHmm9rLTQ#-RPJ1C+`[\D,`cS*,Jsool_#+e>hn&a(5_<.no)oP%r9%1aXbJQMGsXlqD5F`nJ@I*>P7)LRh")Walbmda?>cXZ\hIjaOt3GY1V=r%=mS-`rBJe4aVUa;=_e$=9t+$\]07R*^c<k\E:Eqnq`;%EO%L#DHDdGY?NaY;4e;N;VD1h1mV2U0T<VW1N17M:_H&=<+\"ZY9E/GGr<:Hd;G:5`6-)4`URe]!>GV45FH/^Q^<VDDK>-$b=d*B%lLP]n<Bd7JZl4/OMl^'NH&F"$bf"jf.8]Vu1H(*#;*3rFPS0?G0@Fabh,^oVqduLa\>f9WR<KI5\0R#64hD*RH7iae[pFm?`-'*C%.J5;l(/BYSTE.^OG-7Lm0g2F%C#/RuO8/[jk1!(GZ#Y$jU87hWCn^hf$0Pmqo@f6Ija>88(3h!.Gq'%KUMEs-/Yee8B?BS(oZs'S%1UebrU%Z7Xm6WPF^k[r^9eoC;I<+st@ih7;rlqJOe?_S`d*.2VMrObk75;ES0[CNRVdqEeG@eoarR_"eZHj64]1p\*IIHpkOQo&!%FnQGEd,uK5jhdgR3LN>DVHoQ=l6b*j;e0k1f3"%i?h1jB)C_%s@2:VZ'MQ+mAbK':(T-E@nJ%=&+1mNCU:I.%VTJbhVcKg%m"qjJ%]+mM5peAn@JVPKZf(s]AC<(!qQ4a2X!=$BQDL=%Mr_m!-pJL^aEt+jp$QkYVj\CMjN4^EBqP_k9I9+&l!b_'&CaQ"Jd0@fXkFrE$%'U*_p,HC_U#*278q<8HcTJ8M8s4#6='sgHMc!5&sD$a'0doW61<otcIaPpL"iq8;2G,[Cfoe^OiGP%)%LEt]g`K')b_t>XNWWM,Q%QOC$#r]61)4`S$EXSQ/!)n4+mQRhQkC2mRI[n^0)bH.sm<--&+UQ,,ZY>]MfR([_9AE-_%9duQl:Ru>p4o8TeN_b;Wi9;4Gf!u,`%pFi(<Dh`(VR9#hLX#D7K=CV-Bmh]3iaER=olAm_?CHi>YD%Brm-EZ,u+nLRIjck'I7\ul=.aB;M(l[3j<TJ+*jWQ2.^G=F3&4X(I%*6U\d*S?.0)$_m1r?8^6)4Ip1Ed=s+Nr,?idmlQtpHP6jH2cB"SgUqYGg>Cgd%jYg4&!V>Y,Co9ePkc)_CQDmo==h/Fd(u)VG<,t%<fE4YNJb53p8s\H4?1G\!HX6k>97^NXEWH$[:=I8psLU+(e,f&g68:)gP)A*BTs:3Jfu]"m=p-j$N]K"5XR1`-g[*cIfoZD2)rXK%Wi..@Mrd`UPA.R$[#8qSq]J)s0"2rog8LnurIn]a^#Mj[^C.50S:N28f1K!<Z1uEtlLQZ:eaFM"dB`QHI#<<!$buHTPL;[qkSpFT%lWRoc?1OeMV.c`9Y\'<ha>)mOkCp=cma`$dI8rGfT<Y]8M2K!'g*G',B\Go%pmf<AGI,l?p&5pmX#[A7<AYP?P#k<%fZ`K\g"\Sr%#adZF[l+_^O\]>rJAL<8?.tk)5XU&49)\/bL9OL=b<+^L))lbWY?XEgrd_CLH7l"qEXC\[@-s+0*sVoMac;f9I<&/mKX5/H-iZ#)%2?HtVN\DX67_;2I>&p)$os&>T/s\*B8%J&)+14`GY?[eO;%-:5,e\6?e=0X^asDlc&D713^]0]5Q?ce7joNR1@C_Iq5k9DShh4[M%fD\uhWT>?UUP0s$O(<In%5bfc6?kNuDnms2$fU=u/15L-LC3#)R=]-@GN;kR'R)+7&>"p5%e>Nh'uJF^JQ'OrN\!;nihI?eQ>?">%3X+.n,M1pR_TS-EnL9ZQ(\01B'sBlfC[k7H[V+54LHZP7YFq@^#Z&LsVE.d=Aanp>/emp#i6f0]2=\LtQh6D;JrClbo)%digNZ06%SJMO"rPoUn]>A\!N&t`p\hEM*g84Dk9i-r:%X^K;_Fsk1e(oaLYKYAXDQT7(\dd&Hr+)]e7b,g+9[LAi[mGFrH;*(%]W.VK+reET%n0>g0+H(dAihTCjW2SqZp&"=8ooB>jEU*n"##,=l1<IuDA#+P>ApkNXAHsN0qqZE>mt3K$kK3W5em.]O-Z_a2'r<Kp,V>3*5%?nm%2_.k)B]A_Xp%tcfAS0Ht-/2c/Xh*'$)qgkSXc:B=3I>o2_criKX<t43/Cgq9@NP48):5d([UJWJ>gV;nBC.A,+1H3,(Tt^H's(3R%@.":NORB;6@k/p6UlLsf\k#GCQXj`p;GT0>h=XsmFa2M2hs['fP$S=CrRj]i'cof*\J&3S2bi1t\=8$G"k,Q=EIF083PN&M@T_5@%XD=Q`8%fO0@o!i*QYY-3_Qq7eb?7r52,s/^QAP3G>!XB-=RMq^lgappV:NDb;QK!o.D,u_V7W513:fdeQ^W.7>u9XoFMTQ?+_D7&%7%BES'l7AIj3%BWGi?1GEeXn&n)Lds)gc0#DX:b^<L/OJ@\Kdl(^b",8](#a@@<0m:MqeZH(`*H,--o#5"T!kjfDEAl2pcnIDQ\l%&hgrp%FPCa>"$A9qLjN0piKRpOCancE$N-"kVr+3)\Cn%07KV-2M9,ddfYr+l^X$jegjJ6."W!ff31O.$U?I/S?]i1Y&9mg_npNL%3S+!!$<mtj?')!gZe!b&UMa_$lKcCB!clK%aVFaM[So;8=E9_I^<YZgDc38j/Q3*,;8LX"5"79@'E.W`.hqRg?`(hl>YVB7RpS5i%eP9065OSP(kE_F6]EuKQV69bT3K-kFj0"DEQ^NeZ05D=$ccra5eu%81Q4<a8I*T%n]<Z6,K't_Ck&8JL)8N+T-tXL;QR4U;Fg6>B%;RsOtb8@rM#-N9KouFq)ADmKN\ii*d2Ud!-BtI)f'(]pI->>$g#%fXR4l^kDBf9heGrMhY4MaQl[0O$P@kG>MRl8tPKiQlM(+9&\%C]aV8a_F[>.AA<:frIPr;M8nnPoXI-[:na[!_2s--_V;IS+a$UqoeX-/A5V-$?dsO3b)B\ZPM,:mMnuf;VHqtX]O9"*IV3W=Z&ud%a!+&/Pq0O<(9DKKY,sjQl,%Du$S:4?)W/P#.3>n$f_0WD2>/BT:Igamm.B^h4WZg';ptA7B!'=7UD6BH@qUQtdk7d"4#f1M4DN,L%SD!qRe[dmO9NeLHquo/lG=L6K'.Rb?f[6jZ?)NS6;krFnB6U`\EFN@`qK@=3['I(Ms89I_60YnUK>_:BX%^CK3X1EQ*uc=rCp*<m%=!&nuG'+Ls-=/jY@t1C=-4HdiRS?f&cb(1=dVe)NR86K]2k.NVpg5d3@(=PR=;D)LOdFR%rjA>lD*2G>%A#;-J`9FR6'0D16SX3*%(.k$@m_GE2&7kMFll#S@s(*5'K0-XuF6UL>b=ODWk76kSG$qLPQ%Zsk3:a>eZM%e9drW^df*o<R@g>cR^e*\7Wpo2d.;PSdasWN.%qFpaMMX/&,T60ckrG#.)2#Z-I7uXT4M]\6CL.qD:NDN=pI;[FI9M(jDVL0:@E['ahS8[LfHKLdW?$WkBo-WT5f0/^RC>nd%O&;ol%Nj[*+npJQ.Kjh5b(k+MET!sW=BXaH8c2Yb@mV/>+4kP"@_jE6g3Zh-#SKG12lSDB^jc_Qf0/jO[4;\n%[+kH:(;Pt(^\G<V8YcTV%45K%Ya'?lb;H@:GGLeAe7[p]\e*[XpST;_^QC>T`=tB<5Q1(t1I&8XGA**$1H2'^g?RRsFUOK7mj\8J.Bo?*Ro)"r*I-tp(m'X4r%PV.@`I"^e5rdiTW,IQ6H+f/_i5a3kT#5(Hae@Ekig$iomm&/8(n#kONefiLD;ei4S8mj50IVk+^XtSd?dcdIX?a;^h5/$s<WmdT6%]iJY"RkBuQ#M3Wfqi#'Wen<X"19\p(05-q_RnmU5c%fg*91C'9m1%1ZpR5#lDQV=WLkpF.F)-c$@XE-qbcNa+r`q8iJOjI]KjoLr%\[=n2.-=U!>ALTt_rO^`>ALTb,NiKU:[GNsOQ>/`$[+(*PC%&?EhTFAQ+KO9X.5%j,*aU<Dl7DHRuC<Qg9+er>[G6?MSgTCo%^+,%lBKWA-*O&9j%amjT0=i)q.nLuqs\KYKRN4d'5q/ur-L@(`Z7H>WXhKjV-%_oElVM;.6Xks-iYaop1ii&.AarT9#gubnP@c8?Su/B%Y#:f"5a?RW_bTYQdF\2MH%Y99Y[a.Qj4diZm$F'F+Aje#OS5ZkRao"b<r$?i]H-Kf[nC3iF0mR#;gB/CZY5ODd1/$IJX2>X=k]pG%`oES]dZ$ai?HSW,`,7\9T6K/<XSb8MDPj7Gor:A7:r8OK.:!<C9_GPg.f5qLgL+2TWV%\E%Fm,<:s?-BGG>(=:A)B0&7jS;=W6uI%64gUR%p!UsE1rIscd&G3VVZ0QPI%<\fc`N(W&ad/g6nbF5M,=JY2/X:XPI='Gs'^H(t<Eq>eB%2V03(l4#=e+m_GXiZoD]0Wt+LV%k!RT8Rrk2#c.X2EO&)q7EUACQZ.hMrkJuHWp5X;)p;t5=]cFRE5Ae/S`f;-Q'1F]WG--dG5+S.K5<hn[[!PGD4<p,f0l(ji]A(T2%6F!<M>nFA,OW*$a.[RWK"Bt5"'k<`b:sYVBQ+Q.62.&MjZc;S(107oCK)19[QIOem6%:sZ=_=RuALu5K30-qg/M*2Z>r/^.k-!'P%FAE`F5(8r]^p(Y8pU'A?IeM49Yl.7QITA/Y(#uV^ord_?b!8,nXn7MJ,t$!ERbo5N&or*RE:VOmjo*T]dINbCDb$jdc45^<Y=HcK%[3c)>^W0[lGnbAhMO6/"+d6<sEi2`H=c&k)f_K-$n6kF>63?RWAkh;I$4.QEQtppj?!=7O7pb/2MN[Q>:UI'jq/Ze&^TR`1f<R2^%C)=5#X;J6d\uFlKN'>;RGKuf$31bVWNB_Ueq-,q2UukH8a7JI1ci;c$jLGB6ImXI&VZu%Q7BsU@PGafHc2@P<>%[<7nVl6S*Q=4I%\cB*o-dQ&uo'HLoL:f44])Xs;!Vg$c!mph]//5G<ke$:AH5!U2ke$:Af'_b4hn5fU'3]!F*:1Z)OSKR^CjYkDi&bGol8kH9D_pn3%j?2#*B^IJ7gbOf#4@A:-FNg=A(t7.OL#V%d'DBT9j;N!$k#P[Z"M,g%?DAHtS(M(?qpQt2*4uP*M#nW1GrhJtIf8>(LFq1pX)d)L%qJ'J?pi_V[X'cDjX]]MKDJPceSI8fXjU/ZhHHgtW:@'oa!1neYf=c"=dNq5]rk5`IAGFdg3ca$;JE[cW:)l0++.l?_E>M*W&U.Er%DGc8pop93gC>lMG^VU562W?#:([>',HYXH]k@1R9%G"dOBjuAmZbO^P%I='"fU&Jum>9$02<:(4Ro?R9QmTAu?Q<^t=hNI)TPq_l%(+5XfHZeIFA:ODooaVhorYd-,S<gdQ_!KPkH`-ut<i;1AN_sQ/,].Wsg$%4D]6D[-f$!Nr&8Kl'6V(,?39Y5*YWM2SeSE5,7B!'o%\l1OYOof2C*rW\>cpp2><h8UnOnZ5-]Xb`E.k`PV5SILO2a?tTZ0?X_1];</@X7YGB^099l+^AF5&BZ3PV]:-8i]pheOZ<7Mq"mU%&jtA6)J!Y(WN5X]lqR8E]Ep__5!=6+ZLoPT'fG^O9mEfNoV?5]q,@S;,&6IOmnFX.^\b\uH'Z\d`?h+h$,^&9fKAK13mcbe*U(tU%kNY=3(M5;MJM*takNY<^B6>>489aQEFeBnY"4al0]H)LI9Bq:`B9JV21CNO[bY+Zm0\Ir4Lp3b\kK2i'O*H/%eE7u`Fs3G^Z;`+@%?JMjcg4+26C/2#5\E/,8A:Bh/COBi`[`q,XIVkf<@II`d!m*I=VA;J<<:"c=_cE5l+_i(r?3Vag=GpDBVC!j2KhKaV-MA:ckpKg6%q=]&#B=h(!&"T4BA]qp<ZZ#+=X%XKb@4<M'X^_.[fLp%e1^s^rpln\W2"kMW4FdYeYFNT/d<XC074)7H.jmO92!an,9/:?:hejdS%!#MQF.jd1X(s6?nA;%=PED(bnB2rT&^QG2)D_YSZakC9LlcC>H/%\io0B.)!RHO7c2'`X><4Z@>D++uIPa5H,C91cZfW3:&WZg<\%B+"%Vd2C:0o&42arp=KHOYncI_m6H&"K--t<A*aM9*$I:Zut$:U05rqbPAgDQ0ln+B)R=fGdY,A/ujn^Z5qA6*V.EDf=;AeZ1DIC%:"P*C:[L9m6EoH8Vh.o&m<F\\<i@>;)Y.iQU?ZgU#%>YtqN//^oKUSg%L(=H_4FW1^5q?8[*2#i=T<>(=q.N:=:ApZY1_t-5fKB/%V4\1k'SB;HDGB&P9/3BpkROZN!52\CN7Wh^+42)Wp%!V%f0:t#UNc]&^[dchgKAbW1!ruB)cQb^90rMXa^_mDM-jdkS1+/l[@p23%gH>r^oTT.E&'P]Jar0;tZd8*K:O<s5KO1VXIpS^k)2f!X""D`o]3No<-,EE"PZjZ4<Ce%SdtoLNqZEhI6S`VP-U-mGpUf0(Z7Ggh%.PZW\=lK3UWDP-QK.GH*U/IsnRnE'!m=5hU4)^J`.3ArZJsp]_.c/:Jn`E(DFeRHk8o5[-[-C".eB%HtWRMd_=+=+nj3$10G%'6t%\8.rHke.<)fZIp<&k^.#W%r^Mg?q=@Q20aqq79TdF[n4GIFII2#f5];qile'bakA_X3mn$8#3DI*+#>F-9q7mPeB,!p',$^*)L'.%[&gH$%r7QImne3`CZFr@km04K3NfMFA!>G#hWB+D+IIl]]\9+XrONG.@!S?7/WAH0fM&XVC+l'r'6mItU<Rb+KNhY<i.5@mqMfG=%b>k/hDJ:]DUe]NIUSE0#".cU,7L/Kd-9>FVND;u24\_j?Y0k3E;kBEkhFXJ8o2cEsdrj:+PW'bl.'>CdN^n8()9%l<dII/5+U\,W%,S5dgkZJ:$$%\aGbce=C('oT$Vdlj:$p5GfRo*T9Ha6Du?)&naZdJ$KCNP8>eko[d)Vl&f(e,<iVZ?D8iZ*iPr)[KMB&b0(ON!Wm%;6G8"p8j3nq,_5gmE#GX!Q"#Ls.eHc+QKVh8O2ce1(!/[lZ19'<A.ENAd#s>9+riC7]h,<J;grGQ39$@$4td@m4/LAb%2a%ABSo!%cca5G*a=gbA<n1P[kqI(:@[+SJ7`e#Ml.ZaitQ8kX(T.GH%Dtn#bQ!i@?OD29f2.`c(o9+U'_STY8_*;'CGIFH+gCK30hNsGG*&a%mk'+_?OD?5Z>"ItN'!\G=GujQb1&Pb)!=_p=KkH%@+2(U$!-u@-N\O%Fp8653s2<gBtaN5-_&!u*3dRRCPnZ_DjLcs"34PLXfd14%ZG6*D+'=sQ5ViAd'u0UEpD)"I&rB05Vhc/]XY@#*DTUC[^#ik,MV[EJ<^+qGKL5O-;QOXZ?%pg+kLDotiGte8H2Dg`nu%@Oeb]%n%M?3ULPF)#^&uD&EB-@Wek#\Q#rVMpO.t*XsejTt#^7S)Ll`s2*5F*"gYSVZ0g71.3dm^@Y\R4#l'Jh>kr4cuD9\\s%71oL4\V*AI%=qib'M9<`1fY6*P-&TP5gSF9'n?1eh-bEmO',%.AcfOGDUT^:g58LreY[]ii3t$BqE0r`p^F+2o9<^FVa0aUrQJpBS*kSP!M9N-I%35@;SgP("V//,XT\E"3/RE8_pB`D>apTlB<f$P=C6kMPpA6MK5"SlB1.[_WB&^t6]I=,.&f>\*'_AVKl]AL/@)kp9!B*oaJ[a)2#%.>?*HT02Ih-Sc=?ZR67u+oh#;-_kbPBGh`kYpX/fGIJs_H"$]sp>g&/n&0oO;4T^Y,j=&:j<K+$G$AS3jEk;BNGk3_SliOQc?[`/%\STT;cU55WrlUar9@T)F/I3bHj=Ii5V`mB*/NG>JB$\NqPY3/IkH%o$NV2/s-RtJ_b.I5$q+^@mb%/P#/C5qojYp0dbqDf-=HcL\%IW]rH;HRulK[4p!c^H^"@X.oj.kMT2om@`+^Bk%Eb1[KBMLr*8rMjkEAKRPHe]_F&\V421(`JArmOC56*B'IbZ&`<8e^C\k;m"qb%/=r'HrA.4=I'eIh19S;g4^!;0Yl+9c\YI+Br)fJd3%RamnO^u9Vaj/\p?@>cEglDD(LX`8]^i_KLmc+eQYWZqNO5ms-)u`4<^Za&%X>l-Yhj7fVnfg!(2#:-#-d)X9@/k9?[a"KNi3X+AGmDJ[L(_?9q,GqsM5+[W+ra"N9om#c\n\L=Cq%NKWT14MR>,k*K:;WcZCfi#%=XB6)ihX3VGd:^o1_s,rP[+8^H9D?Pi[a+[H,-LN=.R<qrM-YlL-!9:oS)fE]6$#bh.+Io_]MWPI5PXG,LaC*/C(QM46Bs^hMS^T%O#@5e"EBF)GO(Tn,t!N9s!b'Wj?f^b3\Eg3f!C?kmQN'^RSJ(iR)Ni]Fmk]M8`8^uoCS'`)b3tG2)0dPb1IiefX,-me$P9eM->Cc%qJ'9tV[@2sidLS;N4IiG?kDCG`33\\f-a((\RmLadF.uAA[GpM[Et5fXBqHYYJ<m/m9hMlH+gQ\@Hh5;I_FC+g\\X51f/E<YGTio%JDQCHH"OI0mN6mE/(AfcLS<S&7sEIl]iP*BW^__C27hPHVVI$k)Vph4kjDk8HlTS+$g(RQAJ*P+>q"iJ&_FX3l=*n#`:\##4SC89%bp:91bAPKA7!VnQokq[-A]7C!T,i+phXWL@P27B1Z.l!GB%APS'"a]L<QNtQUGD2AD3:%7D;m5i4:p2RCnWi@9Pa9rq&eOtbd^,<%RfB(p>3!C"8t(!f#kjP^P4GOQX8aX0=9Vao[YhK<TaImXD/E/:CVPWU+o#;nC/F1r'r^!gas;HZSUnsTaF#X70#?]66>k9IL3Ff=%=+Sm>iJ:-5<FB>8??<.KX#%VhD*6jQG-M1S%BMYfAT`,/3<r2K!V<qlGJCa!DooHpX/\RMCD0b&D)3DZnGVddgBMdbXl;X]]3T[0%IfK.D4Qs'-_;Ng;Fa>k*->C(DAH&)<5]I<QQJ<a&[oLu3`sF78DN_H_4<>hBDN_H_U:XZbga$aGQ.5ObDUP;3pE+Z^RU&3gg%LV?%)s5SI.F#M2d*=9^X&+Wo,E^M?HgoUfposAL5RWd\ZnT*Yp3D%/;L`D$l``2FFpYqE7X<jn3"uNZ^?1Ak^PV#<;q&;6[(k]c$1udA%5HNN,qPc6\.`kOZpWIB,S[OOoXH!2-M1e*7=DqfaZpar-T<pP@Q*7+JSAgo;:%;gRYgso)I4@Ei8IUZmRCiT$KFOT%&0^A7=M/VX%7S\Ze+:?qofIuOfGGk9N@p!8OdFpSU(3Xe6(5`b$@NHP7F(nBDqoe\VS#c,>o_!71[`'S?BI!sMDHrfM;QhpP<R_kuDe^"Mc7rtt%ce?&1jhp:sCpi[<-BQ9=ZK[BQUp6_r[LFbBXEPAd+DNgAQ/tXhjtJ%N);,<sCHPgna$*;N5-%B$c9$qc+45.4@J96fkaK2*^(`S;%:=Q4LSR/bO4oM4Y]Uamh!OOhuAs[ZgD=hs'f<==CYJ?62i+&joHo1.?hI#XNd95dWd#n]ch9-K*FP;lEU5'hrG@k++/l:Wj&Ug>C%Wt't!XK2r#?ZenRkK!F\6W]&m6eI<;g5nX;&=/4@]?4YF,pStAYDEVhDG?[_g]ZI4jdSimXA*/Y+XS2#I]bb*d7`Q=]b1hP82iB*%1cPB6j6G^jLZR6fL&0ij$I:c'GkLUiB_fo2e[/T!IPVE^<ak2s_gXBN0nt@pQl7a3YhsE1GVq'h>P9&_s*)HR\,/MbDTeEJ4FEiK%\!?,>#@FFdD<rdAQS2>,2WE0.pgk.-*)_4%^-&s7j<8MLjWru'N8Y[^k3Asaa[<e:k8ng"os!cD/V<p0qq^X+0u&1VHFIBFEc0_A%j=o8RL.Uekf9(,&%27K5I_Xt($e;j0oC$<t)Q(blObYU^3VP,ggp\Z?;_&RRo7cJcehTqm^/2Mt+p0#Th\f<N7Ys1PGNI_*<snX#%q6#+Z/-"#/;O)2YCT7e>7d]tP^LboRr(9sYmJ'bqN7tp#2MhT[IkE:XVVdhOQ)X?YelY+MkZ!L)8i;OL/cB8d;1q&*HX*n<5Me!5%ccI]+<TF\u1:Kn#Ljo84Q2<(AX18#^6lT/PFpC)U@UjB2$)&[(I^WDR]rKH9Ld&5+lDA$#QHdt3[sWJdh4jGel1KZbpAT6dRGXKn%7&ad4<+i+qAHtEiQAanWdI%l<kXi_JPI!2pMnO._Ia0Pj;9d-h4eLgS?T1@LoE781D=/ZXc%YFp18!drn`5FVD'c99aN$t!iQjE_%i8_`VmW-i1<KCa^`U0KRg`kK%Sic9)/9$4;p>"@O.pjr'frLl@!LgNL.PDiUS?^N.c_SNY2j;etptUW\Yb'6"$jVcnYC#Hr"aSb9%(KB>AD)_"^]u(YZB-[`onUO=)VAkAALc2SY,$&.3[[2[dLqUDD[\(d.ag@n_(?5>Ye\>d,jh=f%CQtdb+]EPF-L?h$Ck.b@[T"3:%DptP1*PDUafI9T8Q+9rpY&)6cX"H4%j611PXL<ZplTSg\lP5OsF11Bf2Z<%*o&l"m:P1%I:jNT&?ZJiE0s*USI+W`t#r_&BIXUNt%:jML#Sme8c?:I[Oc,f^9pN[jtaJo'LpG-eR`Mi\fmIQpA;42_<jqRupGIp\q0*Y&;[]7oG6O]49m6^=LqqZIL?_Nio%$]W92SW?H%&UlJRWbW$mPGqdLo(4#F2E5jF%#F91L%T=^(Zp,)KoOnHFlZ6+8SWA@o3Id=?(!134PuEL3FM+;B9fXOdE%`[-g,#>f$PL`)O3%@%lNp&Y5)m^uHZN_+<;rNYc-`kD"311_),b\QhAfZqGFlK.oPV_/PVR5Ue[I_"P/S='hTr0mYqGNGaJe!*pB"]$'elP3`g2M&j56]J%!d;Ht<%A[SX8T5G)t(l(CB*VU2E^H]'ND-1'ia4bOj<nW<C+$mq5%NRqY&_@&tHptH$6X^Hd:9&Y<=;Sip=jY!o;0hV&Q3i;GoY/%PFIII&R&(`r`)flD.e8dI86@A!4^*9A/?_pWb\6\I3/\+,r3Qt.FlRhG+K:0nTI^Q5m6X\?=Ai*.4=iO[s'P$nj&F5gU`mYRVnqt%9sC?.jrW"aQc8jLTNChQATlX-)B4aVoDb>JA!K28A&9i>kNjiPhj7i5P2ZOd!,9-&]":aa3)A6K,pd>j?#H&+98`U7bZMI4N0eAh%MgZ:8,:g=kSKlAA,kWJ[k`DQMIi@0+^;\iG/mbYt_QU/3gek@:1VW47I<aA<%\)*2BU`#Y^[bB+:3$fH,%8AKHOhqs<\6A5!*sH(%/'lq>H<@UW8%7Aa^-Vh7*j.P^gWe>GBr/_ZB&llVXXmb[2%cHCHj-oa#m6p-ER"jm6Jp*L@=Ykkaqcgcrl=I'8-C=OOp8]^rt("e%lLo)kgWOeN$h_R9c.2^/RH(M3I<JnV]Xs_gqQH0dWNdOHPD/#M]D8iZ\gpkN5OSP(l_[#=hOs,5)&N6:p>TiSm(igKgT5j-S.PZU%OXZ6@!$B^X.LF_+h$W)ML@tDn_-rOuI6;URj/>ungNN.g'([)fP6T;]IC_2COJH'hLTurFcgNbf\nLHtCAT)e+mDjrTmmHli;<J.%>"CCU9R;+(G.3R3Y)`@N5L2Y_(Jc,6%FA31*RaoR'YVQW:--X%MIMe!C!n2\ZS+>Bo(R2W3R=Ioo',qFG<6S:2Xl1i]A'&P5Y`Wg%A\Y-fVseFoc@ZauNJ1n.l@-1'4OHKY!B9hXZB4.oSd!G5[sibY:j8V#2)e+]m8ufJgtK(KMGN7ZrDE<]F]W0@h&Yq+6/(;q+a9cY%mQBp[`m/EZ[@i00ULV&?[Q<S9a.i_Er;Zc+>0p4;CF6H^#MecsGPg8u$[QRI<>L.h?$9FmbMi0l+/fA!A[e::$bA"Vm\:P>#1WT!%e:O8AB2Z6>luokP$/&2Ms)-_Ip:Bh@GGV5h0A!%9<deD#BSO8F];1a)N9CbBm4cAWKqXE^9eN!?B[ip)5L(?!Z_H]AAaAC*kcC1?%ZXVUXe?8S#U4(h0K[%/9Y;g$e1JM]F1rIW$f8gQYi2:gOH$(7o$iW$KaC96@s!97fNIFmA(7pF"n)sB>p38r+7)I)Sj522:\@@$:%_EXf;9uQa9[lT^R!RDXqJ(J.hDkjAT2il9\2Q54?Gn]$rE!4=uS]0i!V`]/]p(HbYX?9ji^U0&?=oc26on[2DB$l#e--FZ0$Q88b%F`InO>8rP;0,(7t5!^8D2p>NE.O^Y3&*r6FE)DZp]G(M/b5?q!33sMqf]?m[]9&<AF<.sfK4S\3k07uf<jTQB2Z;Lm9$Z)>faQL,%]8rJ(`]e2D`q!"?XiPL`s%-a/'oF^^o'Ig:FC&7)mrGmjc*Mdu^0Y.NZFQEYf.XPs=$,Rsr$4)Lk1&4MrFL"]%EL'R5fWJZc:7/2%7*YR.@rDJJqccQhXE!u_eil9A0GSOXYU;%V=';;@cMGf8l^k"E\l]0)H</W[4d=!M9*t"kcd_:;=t;bRcK^t"2c/B_lGM@b:rg:Q%\r:4H[Udmscg'J7VfJ0+qiK*+N/HW>mW.,t51.SiTN5AcZP^?CQ^/.]J\#\l2r)EM?AkR3Q5<o,5$U#7@(>#[`8H,ahi;bZo]0IP%"B(DCY+;3%`OLD'k!L%[^O4<Tk.L(Qr%84UE(j?jCa8c/JG$cT;29&hnD:A]bYPpO%9]N&jB3bp#57T`Ws3>D9@FpJ"p]>S8Y.'t%Fd@`!k#rd:U&*;EX'WPEqc6%5QGlU*NAirqlO(V$$TF0^:<6qu`Rk6#n*DW9J_*0ala18d5mqdO'sisM?B:N*dC<3C-/-&tY_r/`%fZ.%[hcOlEV2G$,(*4nXbobcTKNFm0Fq9(Ecm=;ApbrP`>9I'MhV^U;5I?5B*ihC2!g8AcAc<YW!lDqQe%lC&`Q?^PPcBXV3MZ!N%m.7jOQPd&e7pAs$!Ro3:*Jchi<rL2>oR:b#0C2eYrJJ"nf;o3=OL_h:gYVa:Y\fVhSmjJ=O)8C/S">T9J$bD:.cWG?G0?uscF1:(%WX%R51>=DqF)K2eCqENfX>*'Y[Z0&T)#'5pV0-G*<:-Itj8RY4H@^'[A(uG)=R=MbqaC8K^E^cK;+etjWVmWrqXu>4D>Pk1'e:R&%m4hp<C4fN`p1ILh>BL&!E9b6BlV#O_Qfbl:l@^`_WssbOUUJqS1o*$KfYlADH[N@a@BU[I)lP@>i-9XLU)!+IBq[RLWUh>#Q0Rao%]lH:Yo#;(I[^X?'FsFbG@to:i,qG]d9Zr>Ba0Hm9iQ?)@Yd<J-f3+WFY(8]`DTCYYgWUn36%`8#"a2I.0`tmFqD9<IBE@GS:&\eQ%[oZ3MnL@DT3R":dMS[ph#2kn`%U7nsD1>]:'.%He93#cfFJ$N\-0smfXV6JLgFMTRDKe0@(Rl&</AId-"`.]._3bC5k^;(_o&3m<%N&gK(\Dpbnf[aHag,O>:p7Z/h[j[=r,mUl!D,HZ=8&s4H:LBd_$nM2eX6eXo_E9U`Zl(W"3BC<J^:p4U4XD>H]<s#eN.`8'SoRU7%fRRQ]?D"uBZ2_0p'qTP3Z$Saf#\G'8)i'>d0e!ae[@#Is+0$6CXMsgN5$ADr>?HVoF`biE*[aQ4p!\ijkrm9!`BK/3OeC8g@_]N'%P1GhtLCS#-*mr34BVl(\;9pe($>W\Ic.sS4s1K22Tg\:t\=nU8',-og,W[bW7h@gH.Sa!;aW\Z)'=Jbfoe]+CERVIrq*9?A5lM]U%D/At1Rh5=Or[[jmoT6O8l5aYY%pTK'>F+hUeq229V'Kg;Al9#JkAD*-[,6@C/a,At*45A3:i`^g&$Otts,PVNj@[_9Ekj/DiM-X)%asm===LC%.:RY'[EK"Scc:ZBG<?*XaC&V=2;fW(@EJip[K2l)F2>q-Oq5'5VX8V+@P(Pei#TjTKZ4<mo1sq+WW9r#ZPc./X6HAS!%!_0lOWc;^.3QbB$[u!bR:eM=,,$Fd9PI8dd#L:tWc#m.S1al8(ecKNggAt=WG5N,U=7_g:+$!!eWsq%WGDgF,/o<)OKYdB"s0&Mb%1/MVtm_TXR.Q_tlpn7-sJnE7#0X^e&g)4,ff2uO.G?J]-#)s(cQh9$7c-Z5Rq1Pns8S=BmWU[CHCupu>>@H<^R]R<KN\uaT7+d^m%ofprW@NI3>Gj$2Vg,`sqs,qK3(;5%aDQ.`a\\'[^;<H+GLJ7+fFAD9VB9:o\p=o3a)hNP]%c;j)BGdE]T`U@1",))O[sD:SEITAs%=f7ahT<_,X7DDs-mQDl451.'qLM@$kZG2mbmrl&'ACL0tS[r@oeAF]3lR9RZg,!>[3N>pBiWYa=W+;Zl!A;Ra:A[THG`lh85ORQI%S3CKHj#[W-qZp,c1%>!nW>`=t3Mpn+Q*\;3+ceui<(ubrhN<L&ah[p840YV=E2*M^7eKp5G!"Q34g,5Lo6?YPNo3$k^Rq+US<m:E%QKJMA#VKrRpp=TM+egC$Im*YB$E@79M%]^f.pqbJfqmGKJ+/KVgcF/k-b(VP<al,IWg72U/l#fplm430F^.\@%$mj7Ka!3cBOmi;%`p3VO?I,?go\m%rHT+sd3dD7iMYE#+-Le``?PVf4\iH?oQZ5R/&%9*/\la)5hJ[aM(-A2-C2s2'_kun1>"6=#fB)V3GeeHZ\gGo7%d3[7e28-SP/Zgtt=*&^=fRo]F<q`l=)LDu6fYi/pS]sC#fdj[p&%^E<H`TfIK"BTC=Z4GMH<Gf%X;.OtH1XIT`cq)uN\nJ<D33[O%2A$$%/sP6tp?G=mK<9TOBOoRC44sY1e5N9_*/?hLA[cd^l.dgO7AoGi+Bq^mNE$%oNrQ+.)Io.&;!LQ7MuDUoiWld+hqE!*]%LX<%?*MF^2D&%`g@;G\TQbiWOVNn$jmmGp_poWc,(T&\p1.]<=JUiOp]-Yd0Yu\&!/V=k6*i%iD7O,5YBs3/;Ti@T'LVh88o&K68cM)[%+$%R#Ct\U4afFN+q93kZs1r%<\2Q)@Y[5q2J5^Et.0&e*WBV@/@C\*SC#loKR=!OfXr)XBhV;5:+g"K@Q$b&[pb4Cbmm&1Y>t2R9%U=i\:<"g70l>lr2,ADO'?B-PforHcp&B1f6dq*sjFe*!ii<?u&_682Bm3M]kopnIJ^@h3R_:oIe?SaA"ZIMr4>'a\m`3/$ZeWp!Q%ba9"s^COJuPq'6@=O)6HVu"AMNaKq%ICRLIG1p+Q_,#h[#Vr;Jp0=tB_cJo_ETBpY/kmKQo(=W[=G?.7!l=,I^Fl+k5.'BH8'IX2%;gWo+2(-srII7r%3#Zq"\^::dlW6sAEdd6m-IRgIdb!T!rn;.]")C%"\,arZ>SBY.!?UuNlD8,[Y'E.8=G&2!^eZ=OrcG:Hd5)p_%5(7_#/5EGkn+$A1A8,pBG[Gm([J"14W7/qAKW<P8)Or]%M-:&1:uG)^.8pu*K,`lkmME1+Z=$D*$lP#gi$VTFmI>nXceKfW=&fDu%FqmguB@]@D^=n(<EW,O010(3Y)S.ua;Ch8JoC'.I'AH1Q;FP+^Jr^M'!<XhdjcVPQ`#c2]-K;<;pJ::m\btQ8nN=h.>*e9@DPGpp%aY\i%OqACW-$[t<7:dS$:A:)WlYuf_ZR]K_E2e7m\p<gUNA[bP%&YfBDU.]365j/-s5jYS'R:pslUE,lh;:.-pTO%h0!B__<!q*.%qVjPGHU#f*Y2*Gi]Y!rgO"3H@Ic"K0GT<+iW@ttk?=+5VQ&Du@k8,hB!l6]*<5][Yh)[!aLUOVrXF-!Gf?KYoZR781Xb4/p<_1>H%cAkrkj1C!h7QntSQF9"ITIO<bT>#]TNL#&i]cF4kmB;ILXY$#8MPf*GWqosBroi6gS>gs?q\ad#XRh*sKI+>t>?S&_D/UtA7LsQK%F65i,mH7"6rTa?ZNtrU%en,_2cfigsp)NJnk^]g$B_(cKDfc;7qn>9uH%31.MuU"G3`/%cJbX*?5L\8#CBq'b3uT\Vh9:jZJ%YT1%=Y]-fMMfO)G4E'RP.%'f1,Cm+Y-m"[SE5^U*dHIZdE2'Y%!:O,W=GbcMhgUi@C;uUT=q1bbV.0:_4a5:Dq<EjFY+r..bC1P@7U[e%',+=8%o\\3a]^irRZW)%W#3bOZcQJ8enW2H%''s[01/&[?Jh+oSZZM;\Znsh'Z;6fh2O:?diQ=0mK!]/[,_D;G\uCk?5D.9A'ZJc%B3n(N:sqcc=N/R3<@:K<SeO\+VcDd*!)IpsfsN7*$iW0,?haB'E*e!4)9skJWg1N!G-G<3R^aNm*5&GNYj`-(9#ii!0q6U/4`*C5%*d3>WT:!:ZBQN-/)Z>"8-GYq^SYVn)"SL/VP.-Nj%f/bEg=&]Ub5beE]\]]_pQ_`MZDtLtWhpb]I:=.^5I,bREcQTmat)MIVf4X"%R:EAP>O38H[s=J*DPJc6N(K"iLLc32C0R4h5HTCg..a'iF['1n"I$F#\JkM.D=_B$C[p@hTsud4^[GppZ`1U10!737T7LB\I\-.h%bJ/VW?L4l.4TE)%48-4i]0Guap!8KF%ng+G9;S-TSV?p8hcs?mC@A#a[XQFXDVji3>&=&1Vl#eR(sDeJ"dFSX9D_3i>ZnXaYqr8A%V$F!We0o[M.O9Gg/WhcXEWjK0_O@[BcZ*`V@Xjag?kIJ@.?"YeXKG$b%%UiL3Ob65CpPf.r5"70g;i7rcs[3S&Z]"u^;r[H3@Rod%<`q'3M'W9$7'%bhGR(gD&j0o`E.F7MQ&V3(<kB+N+%M,-Z]c$:mBR!U'QJ]fgB/kU%C,mmlJ:2uppgs[$kt*Q2[S.,99cL6qYQ\7%O:t*j"RVl!2ISQRl+2;NHK5)5loq-_kmcF??YA@1Pu[H&r>'t[A9g*B#m;2qS9Rk/m'KLG:,Zj)F7IgB0E,(a^RtHbBc8KeVRXC5%WG[uH.Ke)-4V8\o=uHDKs)PKVoP-fiEAlB+`DW7&5ngK1r<>&]!H9[3NF^O8pM+SaQ09.jhDmV/'))<kKH8k"Y?q6Z]5)$@$h7:2%I:FW0EHY!I;!]$qbp^n3hsR5`@?cYCQM0iE0DV6;Dt^V6,7Ii\LsYTDZSi+<\G1!+$Qg]ki4P<+i"%(Wn,/tGPU>N'DiA(34BM*c%35Oor^i9<4I"U;b?i!+%o^)5d>(^/>C(=\pLFc#+a7`#QelQ;"(TXd*#D]Z^o[8TF=1b(qfl\6]4\8;1fRtJj'C<n$ZjHM_O6.4n%C(b\<\HNAjia-IgEG"j$g]Y*h2Z_NO*OepHHYgOreFa?_"d>TY`AaKj2F5!?2F2^'Et^TN!Ld@UmJe6X>6#;;qf"Nl2PCL!@/Y:8%fLr&8[0=h$[27`pj;&<uBVPZ4iX;g)bC,mi*CqW-MR'6&hf/]I_U3^fL[3Aef"fOEP>=1NP`OUJ%<*f/UOcb1-Z(0Nq,K7<49^_1%>O,c.KjpAtp87+B&s\jBBYgDLOH0i."kACUVn;iZk+"Y]](,2@ofGV="OZ8jdl7b.$K]bpFJ=RXZ#(jlj\!iJbVcb%YfEc#cRJ9S%o4sl?D!NO?_]'A[;]Gu>&630KAiKdk>gComE]1E`/nH+3`P+"=lDo%s;`q^+1md8;rl`F$Hfp_MY-IW",fZs7B6qVrQUQ+Fjbl.)%ojY3SNHN.=Yr?*1SJ[@Z].kEKV@uKJ+tXLmA4g-WSoE[d,Y\o-30eoed<r>u+8iXgBWP?BZ^uh>dr2K$1tM,PDpIh*4k=R:=(c9"%VYaKMRk\hlG'[-S9iTs"E-bY>G?fd5OZT[39QA)W,HA[#crKrmW'9IaT2fN>h7"#8jK=I-b[2EKl]@:s1#CJfSBA@q42K(k_)NnK%7oDY.qOu_Fg3uqkgUZ8YP4!14AO;su!C;uD=LPkm$ju%3,jiiW\6U.kk.n1D2>Pm.?!6nR;u[j;G-"'n2bW;*U;mqDig.hR[)sk@%A@$%Mi@)34J#LDqge6ZZ$-PD634C80f\XQGS7fHCro)9g=+@02Z@hM[ig'd.j[bKf9NXfqjaGF$A'PNR!;H2Hn.u'V:'n>%ZGl,=%+aG5"]]$]I=@j%4m0s_)]\0&Ol/#K*_WLC%0P-KK/s=JkWp)f*,;+2,DJGN%M`YQY>846(U.ZG"nd6Be2E06"L7Bu8^-_@H(!_j[%jZ;auAL+u_H77P4B@IncW-5$[-k,o!roC#M>X$!hoIY5ar[:+nNmHq,J#qtU7it_Eg5cHG@:l^KAU\aF5HJ,)P((79Sh^oSAn995%gYuro.NMCAAthOJ(4]&r;Pf+FI5[$Kc<0<gDX(jB6[6t:n<p8JCt"l(0e_1XkHgY`Si:FlhB+;PPf(r'g?R79,P"EQ_Kg*-VsI@1%`"VsEmscMJ@#-+t]Tf<\=kA=:%bM@P`D%u1hSn-p>??J,9MPF_/\A]M.QZZaW/Z1X,PV1DqYPj^DMJ96j"R<*cnakrT9@r%<A]8\%eMZfYrYOL!A^7gHP!9<q3O`8TQFY<PVq9^@(Lp^9Fr_o7(coa0Jdt*o.[fZuKZ\Qgp^212'MOBD&]cZCbh%)VnQ5u?J:bBe.#dcV%s-kN4(Q.D_4C7u+DL)<k`?IS(?9J5$_ZAWad`(=uO4MF&0('*`K`BAMs5C^Y1rATu`:c=g`C">)ZnOdU7p'K$oqP>GXtSWrY$@M\%?N'eAErVbo.0T$V[J&0Q7]&ZMfOGa[4Yd&=Z&W6Lr2G@Pa(&61EPWPrK`CcGYODr!pDa)Vs!=fbk-@JAkf#r.-9OT/S_RPQs#@dg%J,K&MO$E+5,Cd0mlM0/oO2n;bS#_a.Wum\h&M7)d-[<sei0OoJiB)ShDhM7<>9eoqXc[[0_et$[S/;*cM:0KELB;P6RVO_3"kTaL%DWHi5(7=::,4rT!=Nc5?TH5m>5aZju_JW96CDFPu4qrG[h@q1(c95E#bqmrj>LQta`.m'A%bgu."qaZ8hhJr:>RbHd0L)Kj0=#*B%+CR2Xo*rDCM=l2=XZ6l?+")0[D_:gFq)-du6MSf'5Mm=([(kB7iM:uWfdsWX>6SWh/B\7A,/4mS*ko\hCQ?^\"_ne/WaW%6YV6@,%E=.F&Xc_5p%G&UC!QhPWH8UJ3E8"]lr",Ha!;Nb[7M2^^0r.hER^1H(A%1id]cDWTm!^C>O@Xbqra4^X:T-Xp_9MofhN2[6hiKYN%c%9e$[E&_FCu;8G^<b^>g/_;`,N-EGL>U>^K!HUK4troq/dp\AnJq)JZ3^qJK?i$IN=]5_X;8[([G;+C#<j3q&74fb9Z%RXWbJVm%M+RtU5YAA"f8iW>=Z,*QQ$BMG%i9g?bI9TTAj+@l3C8MR6ec^?coWHb3jes4C^^oZk1cRk&0e?,NZZ6<EGL[W"aYkSRbG(\R&G!+%iL?(rH6_FbVe4/^8!jC[.\a-3!(FDKk6!8ccfKGc0l_^Wq4WG%7'PpGA&1"+LleM-I2BX)_OSs^C$NKXI=`W:n7Lb1QKS-q9)F#7%TE>#q\1KfFgL^9#SLq#\KFuMs.V@0N'?dM'+i>\o>3(T%]F_LdkB4G!pcQ>YR$d$D]eC]Kgr_p=ms!\]+1Zi@[bb-EflI67^FS^V%0QK-bYT$=?]:iUqdBK$EA!ZN$VSNcU\T!/6!&c]"6uZnqpL7&?j'_I!(Cs+7I/T]>YDFGf^':d\JhS#E(!D/$1^]Dp^tfc_-$hI$%)a9>E-W!\#&7tW[2_"@_MbPrqj9^r;>@>AJ=94u:!5:+J0q:-]HK&OJ+V;,@]M_)l8C)j^)]S#qYNEDM-_:R$flUFS<q@.9"<Bq$%5k.6%*Y:"6JlP;N;5&Y'E&?o0U6/]6jkC"^a/Z]>TC:/S&p(M>2(Z-0=[P(R6336Z^jtV,HR$#^H?dd<#=\f.r/6qQBSSPSGlmIN%i[bMp*J?<.W:6L2s+,\4BZO>-"]6jZOTEA_@5=0uTRC2K*!7R][tVQ`N%>c)-kmg!)SjDq$Vk_m'3O`_)cd39caIO6X9N5!Nr5fj%I,H<%-'3*ui*e&2\@?K"W6C"V$-9nP%NUcQiT_T3j2's_?9oOP?jRa%#9DZQ\4@GfapMfOL>4a*EG[\,.!c+`=i_#%B`Y9SB4.3W%(>:#&Gs`ZE&cjn3@0f!U7)lB$^_r8l++T$Ca2$-^T#=cZ#IGZP)R(uE:[$3cCl8[a/rU4$o&+>=+`&;Q.<(D7-,@;e_]0dZ3!pm$%+"i3)W%g7iO=Q5531RKK+?\-/!t1()RYQY8[i7_<H_d48%LQu#K&JNa4k&<G7=T6d3e5uI\hH(U,P&@#b(-Ym^fI+o#3!UEXaiej%q4rVu[*LXhg*f`#ZKBEA)G,N+&8`,UV?\3qpZ[V>+;tD9Wj$Fi\,ef!E1[-M53VMPo9$1`ZU#MM;)Vc%&i0Jr5#O/q#7qD?!BA((%R\3SgK*4[@M;J=]!:oeZUI9nA2^X[#*SD?M7`91I"pb8!,!M&$dVIgo"aL%):+!ina$@:r4GQo)-k%(V,BU9O<sS!82^(F1E')Ni%$APUgM'=M.6QP%CHibGl6`,Bc1*/[Z3dsZ3E:O)nn45EYP[+OXLc>UV)]bf1UBGUB+>tMSn1h_=U#_,Y&g:.<p(???!Uak#_1fS-%ke*lJ!)MRN+Vhn:pa^`nBI#;4T)]>CB7,O(,?jkR>r6!*@c43E1a$?h.)k1;pOc:]2TJ9R!#SE=B>S5-9]Xn%m3NVf:E_%=Zt,h:%i^'7i2aa7`3<GA$Yo+^Bb4/=OY^hn6B0RNY62H2%]gYh_LB90r&ZBsrkp2op7*I!FkE,WDNe3>C(_H(O-fC)Bp(edEjjG=s>eJDW%Rrd6g^/79;,<%8r`3D"XN_%IY-8-=J&_Tg=Ikb>4Sn$LXYjnY8OhbDrkqT\^Ct]+9^L`)*KglNuUd,bU+WfY%En7$opr0"i7X:rK%i2?XZ$U$o,2Scij!%/nbUBhDM)&Z`r&I<R`Z%2Abc4[35n.67`nW+H:`#I--?ndK6i]=LCW=4o"n2],J)aD)uG6_EbX<nen-q>sP%7,H'G,f#n8h[H1Tf`^nC#h>PPZD%<FW6iR8f#IlE5:BtA#fHQ'0-Vj#DKHs,(ge<C"c'H/7qkkcbCmJf`,fX#dqWN_Xho^!hI=pG%jk0&nJ4B^F;AZjrXU0W$m_Qh\@)_jD-5&!_)KF\9G54]BOL'N@MP':o%d6d*%Z)j;R5@=E&"ccS[+PJ2kaCLUeaLso>-CPXdOUY?%[GeTb.YTkkQAdIR<=.0gOUbbSq!),![mr@7`Ae^FX@*b&'\'AVgu&U4Mopu!8QA6thBor<l#>'U"+lD#6Bl7gAC]6b3-^#V_^NH?%n3DjsK1(Bm;<Vd$-Y7a>kYY6,PS7b]GT19&!XABdL`B,b,^.gbSN_%>;0%n-\"'E,]CbR-F[A2co"*hh*Y?g@rN,o.S0a?*-kPKD%--$m95eAta!Wg2\9j$Qh&^XSe@in%T`;Tpb/L-lg>>.otZ>ehkJ:t^@QPp#D/XuoI:S\$f6YMkB5!>%`@f8@d+nVMY.(*qM;\H\P%++f^aA@BL5^^E'9D/B(\."I)E)uC1+"*=CmLX6jAnKGD_^*2k\mJ9WmjN6dIGnT2r#iqr06D\D?O,9+Lo^9Q-_N;L9"M#Y*>:s%q%d^H!e-bF[;>`8+k_f,XLr@>+B*\Zp[jBH?acdqF1^S0K0h39#Bre<-$2ak3kJIUOg*VL3MGVFo$7Gf`#iEq_^H]."ShdXJa\-@1H%r^WI>J%"%7L\hnXA1#/H2@Hr&[kVW,0&3IukFd[c[\^A:e-P1>d`%!mAm\Z0agQbtGTRAuXol6S,?M+/joRC5\0+rNNecIY:it)W%!U:FmZ7`'\2Wt/%6pVYmh0k@M624R'(j[A.DFgFW4;+h`4TqT5$jbuujI-4raQ)m-KcP2!#W`X_P+Yd-A;NVr`1k@>b`3ke"`JB4%Hk'\$:f@oj$BAoVgc`O3k4fFh!3g\3D*ibl8]IW-JufA1,X=W57bsBFNa,C''\3*m,^)777hoDA.X]JO5io7:U$%ns@k8^5,o\*:%#$NS&"ePjf")Z*\9pc\2JjbV!`b7q%XooJPK\<:c&.D8k2TU[t\ciBQ3?HksE6fDjKNqKo_pG<bKpj((/dMi%o\B57F.t&074ga@%fl4,G1dlrD%I4L<WKu1$J:[P9!CGRX!u`=*('FU;3=7&lf0N]oTqqtg3rCrIOB@<6+b5Y+_0+,ml/U'F%<3E,Mn]`"[?3t$k+JY>%)hZ*9>YqUp6a];2Gsd@aNWL0-,J]^8dsrJblOKh11**l<07]$L#8*n85(e,HSE0A^4;W[*l[jKic]$d!L3?K3h619,E.8bA:qJu%%#7>NkpH[4%XT0G1l-L3D$2m`E"n\@<U+>pSD6PtkF_Cdk.NksfpgrsaiV!G2"-.=&&4-uH0]Y<JR^5@8fF[\*igD&BM!Nu]-'qS?%&!kuCB/m8\jhp5S(!\1XbCDUGb$3Y_a-R8$GC7ouiM4ldP5oLj$4'ur#S$!B<qSj!,$r<,<u_F?"lFet:BZ=R-_'A08H?4<ng18$%C>!X!2Vb*o+Jic>`T/KfS-"FUKdR.C8@T0_C<3oFOR%g<-UqTAKM+Up$)44<kT`?urQ?%34>CjYdbG]Y9O/!9+tJf!*=jc9)g9:s%;]Zk<5rM2q+Z$6ha@/<V)Jq`B[#kg-Gc&#;'Ae9U9c'?$&NA<2(/ch+ObbPoBP<>KIam:<dB98/#1#$8-I<&a3_SZ]Mi@l>Ae+;]%A@hUtS&+/&%Y8P>)++o7X<6&Q4p&5,%_1OX`%`==7Ml#iG_fUp!^?lC;)C\n5gEmoFFffBfKVJ-/m^iJ.sMD+MMr\T]p];2&C7L>%W2em',gV;VgI;#N+_8U%EDt7N"Bm"YMo3ujZ%Mn*Mh]!^isZEWR!@+D]Sk-EmY3ng"c%sH7`Q/3AiUOqFP)&/*j[ua3n+FP\kDQS%oE9)UM>1I)J`,a*+*)AoG_V?!q<0e9f],m_&$g1`,ls5-%_Y1]%&\maij\-jE^RdciqFFs-t6Zu'>Af`=<?Gl_.spM,PHp0(7Ic<%18<OE4AbW9(jC4W%RkPN:]c3q,?r.n+bs[(.I"^T,`@`ABJD9hU,a8Z*86=`OA)iaJ:!.(QI(u<)7WLZ>'b_eWqLLX5WhYRNi6aj%*ZtjE1iUQuLIf4@H;:8E>ZhfQpHPQ;ZM`5sHW[]>=$iBH]-CI9*BNm;74:\DM/iWE?3dp[Yu!EanWH?@,3\<S9D>!-!&^G"3P]\Y%@78.\Ct22dU>@8rSR<Ln=Q*O<B6&N9CsRL$Jt*S*Wq7]nNLZsg^CE0N5B%\c$7V8]]P:\^&&q'eQs)[7ADe8.UW@7.S-$S^2M-LA%lo?=ba\`l``^40.'u\`1%?nt:1FX$gqi$M2X4!aW2JT*Ir&WI=s1j%R,mXa8ZSpXU-mJuX<Dc^+U4j[Yr"b'50Esh&1LL^8Ee2Qs%kTg>,g-S,WHA*8\POdH"=QFsBH*,TXV/DnG76IX`'a##SE.'GXq5b/p@MgRB+Gt^E:D[a+C'ZS\J;XcS-kJN]j:lne"%)J:cNtFX%GTd%71SO<R>k<@FE`OkpV+.GLX-o.GV4XYME?EUH/FWW^R)%L5(lS\SfFAEQ;CF:ujk\QY0T`.p%$`\>JLhcP6W,]X&?ufO9J#(g%8YBb0:Mkci.Q'i#>g8MOY60FU"8<t0+>B>/Mf"*$n>-5Zni`F6U?>p+)bT_A-9)k=k(VqG@"4IUS&p3%:!bT)F?PgU:VT\DJmO]\%-.]3\M.>+f&H3gMdr/@8Y=U*"[NGdLV)oMgk?(EQLCbMCXZ$9UM]G$>NO&>UA^"[M`$Q<TZ$9b*JY)Bq[0ajQe0q_F2,b.&:2pYk%hEF("duI0bJ+&^eXS;$^lErqK/r4.Rih:<+#suf>\e9+2!QqkeAu+A"IQ0Zk<Q0/"8:Q0uk;0?<D&?]qj+cWBnE^-&@mCYh'urhN%OABSV(?Q2g4GAYJ&2<N0$B\tG&P1PfIfi9jNmKQLUEPp.&6_iR+mjfm,T,3G_5&uP(RcdYN28p`L-lNAg[4Jj<XV#K+r`4iDcrH.%`I'ESLM3hH-Ltmp)NX[Z-nuF`Z!jtX9k<HRP8>NV:qSE8SKS-rfC15])l:rC5p7)4Y(M:,#d>be#4mPcOO)qlOY*pTO%`da_bENi%(t_#<>RD@dZka'YUA'!U7:S.M:d-HdEW`+SKQ41h^b%t`:*HB/@#P,o0Yir^GVl*,nFM?k(2R8in`N.ma6+k<K7?Z%mBd;:$LOYY%+Q6gDCA3+,NQ4NmpcS@9ck)%qa;5\W_dYW[JhZ><O_Y4+#5A`DIu8@0oC,9iKBM/>+WN4^LqGSZ56C`$ckhEp_FR)$!rt7_5&8F6%?&FO@:ui;6L5k]4:?\IHgVuKLa5`nSKq"%;K##-?WT`8Z"9)"XRpqoh'[Z18b@@C`5q!@uVuubp+2`&Dq@H3-E[o'fg%F/tb_<ld%kWGRu+s94-+Dl^_n[0K0Ks&Z`I9,9(YTLZT#i/ZJl=_S$\Me^AJZ+.t$0Le86\LTV#2]V!c?t'ZOSBZs=:?+d'*IO-:I/_0XbN`.%[)r'\Cc(:K3QDNs&CM]8,.%t]1dB8!U%%NEQ'DqUTc4SBM7L;;UJ]-ikYS9T^kFu`>o+YM89m2TlXh3a:5gAB@9\"j/09G!Rq.;5%-hL88-5T5oL+3YXKqYd\Eu`-qH/']5-NMi34`5)t-AKUN"OU)>E#T\/8)gntaQsP]dL!W>E!b-QaC?#Ab%sG:lA''<#XUAX])i`N%Pi[h$K4e)jc,\@V/`;<!m#:?a*dM<?\Y2C8a'db[c2q01crC5kfqMs`!-&!Emdri%i(?6S!T,G=-U<E>UJH_s3%?%38#$p@SP`uL%OXkfa2rYee<Y]ngi"JX8Qq9j6)aZ5j&"'$Z-Y%%JYfEDP"3CY9(EqIOi!,2ERD['2T'(o.%Eh.81ZuUV@2B#1,9#Y?O^R?)qT(4C%]>bHB6l'.+b?`:^ej-/WJ"7NuLeHlQJA=KfmUV@],PL?0_]&b]4<n)4FEHLbMVW+G/B^F#$r_%+U+8kj0(dcj7)f^<N:;`]j>J%`%U-";65,NlU`"*"d46Z1>#mQna,'Ct:5(ATk(El'8*^PV^n5BG=n+,-\A/l_@KL-?LAl-&GSi65)f]YBfGa'?m8U`!tE$EG,,dHBD%GEJ[$i_h83LE8L*6.0"[)Z];lCX`/sLL7c%KU3dTih@8cmW3hEP4MthAC28^>8MNh7dr)k(a5OrnsMl'IjFW/Q:PianG,2<Ja?0[%mk#J]4eAd3p_3-0$TT!6h]pj&9/sil]HA5DSH7%]'*e;+.GY1g#(?`/^jdCk=GS%.Atm(N_*cRtKePt&;A][ul&lb.&-\TuGQH2r%`'Y4ubHc@V3P(f1Y'lL(O+K)'at%?(E?3sZ'79<]Qa2AUQdR$<gc8*k1NWq-E&J^FI`6,f>8)a_4F[6^[YkUu-J4J#E-4W9c<sqn%NmM-HN'^Z.ZLpU(+Pqj68JlIdQdYWi6pBJ"G`AcU8I2n3jeC6Q[;Ij#)g8.tTc;Rki6Naq)CCc-iYZ"J)B670]GSdTVAGsK71Jh7%eJgorhC3tE=i&TSeO0`^q)/=b[3RV#X]eHKL)XQ[1#SGXDdoeV@\jnUNj1tj)0@$s\(=#.JFeW!?B;s&Uk"t%@Nl9.-nCZkWLQLf%UL%TkX;7X%WHG80g9;fle[J$b'r/EW!sZ&CBMp`L5XOOKMUWoiUhi1d'!7Zp"$@;0TOB7&3!NeiMBlq>l>7/C'"/^TQRsP!__"X8%#0%Q.(930]i?B_q5Zj/D)Pfo)m@46&Ad!d;M05hD'IrZb#/4h@C62c/R&:D"3)ppmC7&,$+s;Ss+u9=07>tuG,$6jf#&&ZI9J0;i%UMs(K1GDjF;PWli`C+RQ`G$7>!,]=)1^rET/<]iE!P-&KWQ@h!9VU+5,e^4G'L][]UhU^Q";e7S23Ssdm7=od6;4[cUGOlLVDeA3%FDYEf?tug4N$LTEehkgD+QX_7Z[2Ko`'@MDjAON%$6Aq'")#"g2+ZaO-YgOO:>5uu$Ds,h#t^kda\="^M,K@3FK9"O&-HVU;eqXS%.=BYB%'8!Ze0p<9S>ct43.5#0G#G3.!V:P5(/7@U5Y':mKUDD67nLj'1MMYiT1Rqa(887,rIZk[3g=VU#`)(0C6Vo4R]-b23.2`J%CRAA-U*YMS,WGm?7?qVLU0PB[$DNY`0XXl."\<ab4eZlHQ\c]Xeu^96__+^A#0n,6Q`;H*Tqghr5[%$])Pni`c(lL$Ba)t$<S)c>%7pd#MCON&#;/53-VDe?]oSo.Hgrin8K^#,;_7n$/l+%#/.>U:H`[F-_H6s*[Y;<*rm4Wo&(da'"1*2LV?RI!$FmDnNiGte@Ftqu7%:t?c":e=.q)*r'c`f_P=+A&u\hC48t=G,ZqeO0`\q)/=`[3RV#03_29`%=I3#/V9(f-s9^j!"fS`)r1t*[OBYc_M]k@gu<DPnPTW%eE[O-eY:PA]l5u1'"^,+A%<<qe"gEG.(<TGO<[HDRa;2UUh`+cP,t*D60.o:_N*DT?mq-SM@j$c+_rTa8_.X@`eDafL0L1J%?)#q%X]*]1`'k9,7T`Ta*2Fu`Dk2Ou#\t8aW1$5M,%"s?X&c##Bh\:YD4&;!g;$e+e1rl^8Q7O7BnS>ub#+%(eP$<Z+KT!\V/dW2MgCkD%Z!*>0V/bJc[,DduBiHSBOu=3aH)S.q*t$6#9i`hh-;!N#P$$7.)T#io;D]l7So4ngBGIttD5V:V!AS:lND^-c1F9;a'=C;4KB,?6%"Y!t-R2Hhl>#^+g[HbG(&;@@jWHDsI06'i*K18u#*cd?G[[JV$>F_]N_AX]OW<c&RU<(Qo=:q;HV8uZ]U`g(T"k!cY4C9;-D[)3,%^-C[,[;\!%&j&K!CIF80eZ]/o0Q+[G0\-4O<Ako=G0&!F(kSuZ"7qphq]^#.LpZQm!%:3rL.UurSk,;peD%>N82!OD;QEh3[GaRl%]BI9-@^[ol-<?"<+mAIEaC)7i$`e7a-p'VrXJ\Qs/Olh8V'aUjNO"0#Q-+pt2X5Dhc>$4&P[(\dW=:r+=]XrJERlhK<-6N@L/HQb%2&]2R4\VXB*HMo.U#0l3%F?LRQs-GW80Oa7B:pg-U^!euX,5PLMpo)B"W9"3_U1asXZVKhZmeP0UDfq!<mIH@aqSC%\-5CK,E4hN%A_Icm=/6&b7>lHF0T/l;JZjfbFXdGjW$jDW&6?`J7O`qS'5;td=Ms2djZEkdoeln^[3e%//R(ouL0L1F%?*/</6(&Y6:DKSJZp=e%4\Cm<S4<Z<_AXcPWTI'VW4*WMb9a,RHI62n2U(.pXXudV-LE\q!=@M@VD;]_1.Y7P;Uh]n;@m[F117t8UM#ae*VDI1s3YU[K/>3$%U,MAt<,LQp?tu[0KHrUIcns1>*9AS;Z"bTh0p's?[8o;O_FM;c^fmj4O&FWORG..g;mq7bJuQ.-3g/]?@adk`P#S2%eZ+H?`'@MD%jAON%$6Ae'")5:o2+ZaO-YgOO:>OY'A&*cJ7T5JWlmQo'jr[<]C65/o23EVAo8eVtUQ*+dKjdL/&'F`Y>U"3M>.9s!%D+TB)`VW#%>cOMCKoVlc")12fC6YGs23Wc.U_QS,<O%%1O1lkrf(pjnUZBSJ9PsRDWS>3l_rOuI+XqLI[2DLcRae)Xh5Z;g6mJgAC8q%:OQbnd%66iUM'0/Uc>><V%?&ZA&%EJMUbDd\kA_iKuAse)_8a8U)D"U17,#(<,8/Q7:7+/T?hPMkiH:_k5?FH@PM-GqG%>6T0Y#Ec1`^Ndo%M6WjH4\F/(Sk29``YtWg.OS-8W7Mn8X$u8MC>j31,^(oR2GhsI\PPRX)AbtW-H;2cNDY:8ogB^m0\.AW:,S0N7D7!^=KY4)d`[pi%-#nhV[C-*MR'bWc,UBHQRa.-(a<3r48.hql83sThaFKE;7aE<=46gD2!i/nn#&-d+1i8W!C"g@(_:14trCBmEQ"bn//]pqJ?I_^V%@N_a\@\n)dKo:8HJ[&CB*i3i7o<dHl-YWZm"]O_doHR5\7&CRIUo6aSE`Ec%Lk2dbnV*ug'IrBb#/YCPC66Gg:Xb&$S>);I`rHFH%N@#`]fhjT'bs.X.eK@;\C*F+LjrY%q7N7!;$cA"='U8:2\2iUm[;7]t'"9hlCP4Q9Y#A2Y_F;k>J[(q;2+l8rRRoj\`X8LXWqa7q%7c+OkAUSd$;0(W1VBg>)Rarm&OBe`[+,,Us1';#TML(L4<]-"o.#\m3X]+h<M2T(_1rehGOFu&geO3!arYtEWL97hKP*@bC#j@=G%O#*kHlj"Br$[RM\61/EI#HV3i3bDJS=CgXZOdI1';;W*O1-cHa>r6g#1`I[fh2l8S1G#5GCVm<K'(qR,H:q5$gjm3\.#7r$d_B6T%+"gDIgWOTLjd6]Y]U/FFa3=.Z:1t=`mpbr9Ar\fX@\)NWa=Qg&0q0*Cn1&)5Cj;FrOW/YZqO<8Z3huIp&_Z"r<iKMAfONH1-Y/5Y%LV"GnD#*k4@^kF$RcEMtlgY0QX>:<4@ha[2LMm#o_SEsIbdV)eG*dT/+g20#CVi=T_jYQ6p42\")DM/6MdC>Dp\PObMlE1d*6a27%cQgV/4NkdW4;T5#gk(OZSCm-b9IuC)^kOQB#ldt"-c]Y$-f/T-_m%p\lc1njrsc$Ln_AC!o6KUg9.s4r;R(F7fkiV7QIg3Lh;knO%pZ8QHj5o\JYLbJ5bRWk&EL:\(`]n(R*D$J"Rk073$J_M_R2.HADW.WQ9TVFWiW"f2@"W=R2d$hq,3QKoZ"NlWW^r.]\'=G:1b19:%Do-1Yo)2ZEJGp;TWH"[#^H%pA[13:#p3u\DLj(U1a%PRJ1=iF5WVBt[-/Ppq0jZC]+#%HI@6Q489CAi@50:HA##)2+"9*UO_"1!(%hp^b6+8YqLO2AU_Pd1kiNe[rUP0=*]V2Jn64VPb*&!O`l?Tsei_VrASk$lt[JS0U[G5Op,W-B=klE<2dX$pODQPs^k_u`#*3,4s8%EZ*-dJ6c&#&+f2RDa%SK)]lf'>9U[d/lKU8:oAbj=@,oF];998F9fgX(#(?be/0k5>n>O0^;tEOodD@A7\<q:YgB*tM+,Q!mHj5+%MCfIM,]2:Up`X?a`:>NHmk[tO1g5pE=R*S5b_kU\6NZ>hZlca]$onshm/\CJPpuqCF$a2_*%q"W6[7F-h\FBF`@-MFbEtjfjSR40%"q3"Y0Q0A*KFQ%"o%*8n&708%<GfqS.#!YL.>_DY!^="<Tfc_oP=/Un"6O(('"'M%.>uC/*>B)p0p8=9KXXMZ>UM3q;-0F3SB6<.%qtP46LA@u958I]T`bSfsmh68[A;.50(aW4cAkM&1X"e:NTIr`Vd<R-l:lA<0]e0pP,a?0():R)GP3NOOZtO`t!Zsb-80IAg'Ob-i%lHG&)BX(Y\=!secJ.O3O8n2ZYWfCfKU!K]lM@lQl2>.Vq#W7&&0Ro<*P9A)IJ.]HX;2VUuhM.-_m8.qB6`uscE/YM=A^P]M"-B+L%g1<fM<6`WB_J6##.mdK6&/_6NMO%,*+;MJ+B`fQ>#cQ#Y!<V!_`"8X`C=VK.4A1u8$UPiViesOo\MT%Y(&Zq@@>[9>]oDg8;7jc2%8h)+Qn_PY\fT@6+?3Ct#e5B!_UD"c9K_,R<LF:)>UG,cfNSk$@`HrUZ&Y.u;gS4sE<:-%3GTrK3Ek3<clsnF6:;3#b/&dO&()@(m%KKgY%m%NJQ_ZsI*Ul(H]YY1HMB@f6q-Ke6a9nu2h*m4g%7&$juE(Z06Uf1Z$gt;.Q\3pp:*TM[Rh0+'f;=%m/;Q!&eAG#1$.Rrs:%;utN7o/tkkP^5:8>%KV%5-t?UU-0b#$AX0W7.$R4`p<@s!F'qQk_LRfSuC1e-<d'G4>[:$T2G28l6(s;UR^$T6uK8aGs#1:B;Z_p%or/W*W79jASdL.]T\(Xq!$X$'Pm-F_iegE+8Ls^MNZE*8_7X,)Z:`fYT#8`)+N+`k7stC:<Fid/H$.o2Y^fgIjIaE3oLp23R/3+]%0K7VHI4"rf%Ap?;Rma8!PiZ7@RL+%[=/h:g5jXCSb335/4WeM\0"+R_W6phOq)e^=U3':lII\tm]M\o5rg7K5Hk^_@5Y/uF$\8D6%&MO##3M%%6%df9UJdGcHUIC0R!_#Y&f[1(6/A@_#QPo9>ES,r.&YJ]?1E?<,SE&R/OY@(Qf+k#GLj@HsS'CgIqt&VVN62DNf-,F2%%N"XKjOVEPrh:%;U$W$G#!0CNKDI\eL<@KFfQ>&tX],,t"5d?_MQ(rdj:qB//B]mo=L96I:SD2,B&5To`_6lo<iMQ\^kWKi&=%dF%rZl<m0@o4=N.3M$Ed1MN?lbs?2Y!=mj<1OKNg[XQbiId!/o4M47*mRLHp2K/7D(PNG[j/,]qskK6):<L@+]VFit\G.d?g8)Gpr_a%\WJJ9iLg/YG_E^7UFio:,^uMCTMQQr]u5;;9Z"j=@`sda<*2G79roVW6JdNdfi0rkD5$p>`CnUA`b&&Y/?0kRV/LVc+AA&EOc;jS%ceC@\L^<=<0\9]#=I;#]->D=^13.Ue+M.&=p>BeLi:?#>(0//jmR;(,(kU??Q*4e^&-cFUP"Wl@mj\o(&pLo/g&17NQRj0mYqD1L%rh<9>9+t_rG@.,)p$=i&W]XLupE[%Tnqsj/qhE:*"PD\\BRPke9AC1lGKS1>Yb6:ZC<0a=aC<TG6_/M,+<T-lE(+JdK\2=23LM:n%O"cTXA.c=Pb9O<:H.OR"pp>rm\400n70t;m4lNo(=RZPs&FoBi>F;lOe4#0b1#?f8b?uB_2h\^WAd?b53S\4;/W6P;J"*rm90:/.%OX,&*J=1`%E<8R\?t`#L%A"'AKDgJ&"sUiRLr;p1e45922KgJm#Tk9.aVf5lp.8/HbS\rc'n?uo31sg`0lVbY'WEbMnbUm+THUdO%iR1thb@EfRGh:2rapqh(Coe1u0Y"ru?9$LB7l_"j%7KhB,"hSA6:aMA:[Si5:urY4OVu+R@ke$7_hSt,VucudYRh=bSWHLo!2J\-%9(L$FdF:7=quOaYe>c?nnL`-NJ.@9ie#as6]#l$t2UA8Kl0tog]<5s0l;<rXj>(8j`:$9'm^Of;?,c?e8>I]7PG/5$lDuSk:fB/h%+iN3*0UHk>%W0#*cL^#r7i4&O%cn]PW+lP*MQ2G?BacX-9cbOAp.</>g1P3)cC4).Nh=B->mrjA(OITOjqojkY87[NRm%++?7a:9%/som0j%V22UmBY4?W?m<H2U":$KnhRdBUZHm+Q(38GlsMRJ].qfY_m0O^9-_/KG@\L]-;=C->j0a9&R^1,^-A6Je9kL5NA02B"">%'ChP'L*,b8Etn*_fAf@8KhhhJ-2dei+KA_!V=_;`MJcQrpBe]Epg</-7,]SJODPTmU.,[u6p,Zo0OUWS.mf=<,/E>(Nn"\r4%&dQ%*pT!>!!IX,+G@5&U$apC`!jhB+Z#$>(\6"leDe:jQ5=RMeKq(,LH)qt07Qa4G]ORg9"R%p!I1.`J;CoF`p7jT.s3/3bRLqjiSCX[%qD"=0jNI0RhMT;DGTRfP5l\)&12PPe]p.9i,3&smA_n9MZnJtt<%'B%HcN0Oc<D[r\[\hD$cV,NalULRqie(MMu1BQ_oZ7%,:>^)%r-UVP]XWU/N*P4H4M]Z(7NT;Br',kM,BA%6\GCNRnG`U_gFZY~>%AI9_PrivateDataEnd