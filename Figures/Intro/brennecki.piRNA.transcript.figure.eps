%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: brennecki.piRNA.transcript.figure.pdf
%%Creator: Adobe Acrobat 10.1.9
%%For: royc
%%CreationDate: 2014-04-5, 8:48 PM
%%BoundingBox: 0 0 792 612
%%HiResBoundingBox: 0 0 792 612
%%CropBox: 0 0 792 612
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 968 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2013-08-29T19:39:53Z"
   xmp:CreatorTool="PowerPoint"
   xmp:ModifyDate="2013-08-29T19:39:53Z"
   pdf:Keywords=""
   pdf:Producer="Mac OS X 10.8.4 Quartz PDFContext">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Chris Roy</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">18-2011_chalk_talk_v2.pptx</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -612 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 612 li
792 612 li
792 0 li
cp
clp
36 36.0001 mo
756 36.0001 li
756 576 li
36 576 li
cp
false sop
0 0 0 0 cmyk
ef
gsave
-21.333 140.667 mo
814 140.667 li
814 275.467 li
-21.333 275.467 li
cp
clp
gsave
72.4958 275.467 mo
720.171 275.467 li
720.171 140.667 li
72.4958 140.667 li
cp
clp
202.82 226.093 mo
203.603 226.093 li
203.603 224.507 li
202.82 224.507 li
cp
/1 
[/DeviceCMYK] /CSA add_res
.875 .247 1 .133 cmyk
f
203.603 226.093 mo
204.386 226.093 li
204.386 222.918 li
203.603 222.918 li
cp
f
204.387 226.093 mo
205.17 226.093 li
205.17 222.918 li
204.387 222.918 li
cp
f
205.954 226.093 mo
206.737 226.093 li
206.737 219.739 li
205.954 219.739 li
cp
f
206.737 226.093 mo
207.52 226.093 li
207.52 219.739 li
206.737 219.739 li
cp
f
207.52 226.093 mo
208.304 226.093 li
208.304 215.768 li
207.52 215.768 li
cp
f
208.304 226.093 mo
209.087 226.093 li
209.087 214.975 li
208.304 214.975 li
cp
f
209.087 226.093 mo
209.871 226.093 li
209.871 214.975 li
209.087 214.975 li
cp
f
209.871 226.093 mo
210.654 226.093 li
210.654 220.535 li
209.871 220.535 li
cp
f
210.654 226.093 mo
211.438 226.093 li
211.438 220.535 li
210.654 220.535 li
cp
f
211.438 226.093 mo
212.221 226.093 li
212.221 207.825 li
211.438 207.825 li
cp
f
212.221 226.093 mo
213.005 226.093 li
213.005 211.797 li
212.221 211.797 li
cp
f
213.005 226.093 mo
213.788 226.093 li
213.788 220.535 li
213.005 220.535 li
cp
f
213.788 226.093 mo
214.572 226.093 li
214.572 222.122 li
213.788 222.122 li
cp
f
214.572 226.093 mo
215.355 226.093 li
215.355 222.122 li
214.572 222.122 li
cp
f
215.355 226.093 mo
216.139 226.093 li
216.139 221.33 li
215.355 221.33 li
cp
f
216.139 226.093 mo
216.922 226.093 li
216.922 221.33 li
216.139 221.33 li
cp
f
216.922 226.093 mo
217.706 226.093 li
217.706 207.033 li
216.922 207.033 li
cp
f
217.706 226.093 mo
218.489 226.093 li
218.489 212.593 li
217.706 212.593 li
cp
f
218.489 226.093 mo
219.273 226.093 li
219.273 222.122 li
218.489 222.122 li
cp
f
219.273 226.093 mo
220.056 226.093 li
220.056 222.122 li
219.273 222.122 li
cp
f
220.056 226.093 mo
220.84 226.093 li
220.84 223.711 li
220.056 223.711 li
cp
f
220.84 226.093 mo
221.623 226.093 li
221.623 212.593 li
220.84 212.593 li
cp
f
221.623 226.093 mo
222.406 226.093 li
222.406 214.975 li
221.623 214.975 li
cp
f
222.406 226.093 mo
223.19 226.093 li
223.19 216.564 li
222.406 216.564 li
cp
f
223.19 226.093 mo
223.973 226.093 li
223.973 218.947 li
223.19 218.947 li
cp
f
223.973 226.093 mo
224.757 226.093 li
224.757 197.501 li
223.973 197.501 li
cp
f
224.757 226.093 mo
225.54 226.093 li
225.54 208.621 li
224.757 208.621 li
cp
f
225.54 226.093 mo
226.324 226.093 li
226.324 222.918 li
225.54 222.918 li
cp
f
226.324 226.093 mo
227.107 226.093 li
227.107 221.33 li
226.324 221.33 li
cp
f
227.107 226.093 mo
227.891 226.093 li
227.891 207.033 li
227.107 207.033 li
cp
f
227.891 226.093 mo
228.674 226.093 li
228.674 207.033 li
227.891 207.033 li
cp
f
228.674 226.093 mo
229.458 226.093 li
229.458 212.593 li
228.674 212.593 li
cp
f
229.458 226.093 mo
230.241 226.093 li
230.241 212.593 li
229.458 212.593 li
cp
f
230.241 226.093 mo
231.025 226.093 li
231.025 218.151 li
230.241 218.151 li
cp
f
231.025 226.093 mo
231.808 226.093 li
231.808 221.33 li
231.025 221.33 li
cp
f
231.808 226.093 mo
232.592 226.093 li
232.592 221.33 li
231.808 221.33 li
cp
f
232.592 226.093 mo
233.375 226.093 li
233.375 219.739 li
232.592 219.739 li
cp
f
233.375 226.093 mo
234.159 226.093 li
234.159 224.507 li
233.375 224.507 li
cp
f
234.159 226.093 mo
234.942 226.093 li
234.942 222.918 li
234.159 222.918 li
cp
f
234.942 226.093 mo
235.726 226.093 li
235.726 220.535 li
234.942 220.535 li
cp
f
235.726 226.093 mo
236.509 226.093 li
236.509 221.33 li
235.726 221.33 li
cp
f
236.509 226.093 mo
237.293 226.093 li
237.293 221.33 li
236.509 221.33 li
cp
f
237.293 226.093 mo
238.076 226.093 li
238.076 221.33 li
237.293 221.33 li
cp
f
238.076 226.093 mo
238.86 226.093 li
238.86 222.918 li
238.076 222.918 li
cp
f
238.86 226.093 mo
239.643 226.093 li
239.643 224.507 li
238.86 224.507 li
cp
f
239.643 226.093 mo
240.427 226.093 li
240.427 224.507 li
239.643 224.507 li
cp
f
240.426 226.093 mo
241.21 226.093 li
241.21 224.507 li
240.426 224.507 li
cp
f
241.21 226.093 mo
241.993 226.093 li
241.993 224.507 li
241.21 224.507 li
cp
f
241.993 226.093 mo
242.777 226.093 li
242.777 219.739 li
241.993 219.739 li
cp
f
242.777 226.093 mo
243.56 226.093 li
243.56 218.947 li
242.777 218.947 li
cp
f
244.344 226.093 mo
245.127 226.093 li
245.127 224.507 li
244.344 224.507 li
cp
f
245.127 226.093 mo
245.911 226.093 li
245.911 212.593 li
245.127 212.593 li
cp
f
246.694 226.093 mo
247.478 226.093 li
247.478 212.593 li
246.694 212.593 li
cp
f
247.478 226.093 mo
248.261 226.093 li
248.261 212.593 li
247.478 212.593 li
cp
f
248.261 226.093 mo
249.045 226.093 li
249.045 221.33 li
248.261 221.33 li
cp
f
249.045 226.093 mo
249.828 226.093 li
249.828 222.918 li
249.045 222.918 li
cp
f
249.828 226.093 mo
250.612 226.093 li
250.612 222.918 li
249.828 222.918 li
cp
f
251.395 226.093 mo
252.179 226.093 li
252.179 222.918 li
251.395 222.918 li
cp
f
252.179 226.093 mo
252.962 226.093 li
252.962 221.33 li
252.179 221.33 li
cp
f
252.962 226.093 mo
253.746 226.093 li
253.746 211.004 li
252.962 211.004 li
cp
f
253.746 226.093 mo
254.529 226.093 li
254.529 212.593 li
253.746 212.593 li
cp
f
254.529 226.093 mo
255.313 226.093 li
255.313 222.918 li
254.529 222.918 li
cp
f
255.313 226.093 mo
256.096 226.093 li
256.096 223.711 li
255.313 223.711 li
cp
f
256.096 226.093 mo
256.88 226.093 li
256.88 223.711 li
256.096 223.711 li
cp
f
256.88 226.093 mo
257.663 226.093 li
257.663 223.711 li
256.88 223.711 li
cp
f
257.663 226.093 mo
258.447 226.093 li
258.447 223.711 li
257.663 223.711 li
cp
f
258.447 226.093 mo
259.23 226.093 li
259.23 222.918 li
258.447 222.918 li
cp
f
259.23 226.093 mo
260.013 226.093 li
260.013 222.918 li
259.23 222.918 li
cp
f
260.013 226.093 mo
260.797 226.093 li
260.797 222.122 li
260.013 222.122 li
cp
f
260.797 226.093 mo
261.58 226.093 li
261.58 221.33 li
260.797 221.33 li
cp
f
261.58 226.093 mo
262.364 226.093 li
262.364 215.768 li
261.58 215.768 li
cp
f
262.364 226.093 mo
263.147 226.093 li
263.147 215.768 li
262.364 215.768 li
cp
f
263.147 226.093 mo
263.931 226.093 li
263.931 224.507 li
263.147 224.507 li
cp
f
263.931 226.093 mo
264.714 226.093 li
264.714 192.736 li
263.931 192.736 li
cp
f
264.714 226.093 mo
265.498 226.093 li
265.498 192.736 li
264.714 192.736 li
cp
f
265.498 226.093 mo
266.281 226.093 li
266.281 219.739 li
265.498 219.739 li
cp
f
266.281 226.093 mo
267.065 226.093 li
267.065 224.507 li
266.281 224.507 li
cp
f
267.848 226.093 mo
268.632 226.093 li
268.632 222.918 li
267.848 222.918 li
cp
f
268.632 226.093 mo
269.415 226.093 li
269.415 222.918 li
268.632 222.918 li
cp
f
269.415 226.093 mo
270.199 226.093 li
270.199 224.507 li
269.415 224.507 li
cp
f
270.199 226.093 mo
270.982 226.093 li
270.982 224.507 li
270.199 224.507 li
cp
f
270.982 226.093 mo
271.766 226.093 li
271.766 216.564 li
270.982 216.564 li
cp
f
271.766 226.093 mo
272.549 226.093 li
272.549 214.975 li
271.766 214.975 li
cp
f
272.549 226.093 mo
273.333 226.093 li
273.333 214.975 li
272.549 214.975 li
cp
f
273.333 226.093 mo
274.116 226.093 li
274.116 220.535 li
273.333 220.535 li
cp
f
274.116 226.093 mo
274.9 226.093 li
274.9 214.179 li
274.116 214.179 li
cp
f
274.9 226.093 mo
275.683 226.093 li
275.683 215.768 li
274.9 215.768 li
cp
f
275.683 226.093 mo
276.466 226.093 li
276.466 206.237 li
275.683 206.237 li
cp
f
276.467 226.093 mo
277.25 226.093 li
277.25 206.237 li
276.467 206.237 li
cp
f
277.25 226.093 mo
278.033 226.093 li
278.033 218.947 li
277.25 218.947 li
cp
f
278.034 226.093 mo
278.817 226.093 li
278.817 218.947 li
278.034 218.947 li
cp
f
278.817 226.093 mo
279.6 226.093 li
279.6 222.918 li
278.817 222.918 li
cp
f
279.6 226.093 mo
280.384 226.093 li
280.384 219.739 li
279.6 219.739 li
cp
f
280.384 226.093 mo
281.167 226.093 li
281.167 223.711 li
280.384 223.711 li
cp
f
281.167 226.093 mo
281.951 226.093 li
281.951 179.231 li
281.167 179.231 li
cp
f
281.951 226.093 mo
282.734 226.093 li
282.734 180.822 li
281.951 180.822 li
cp
f
282.734 226.093 mo
283.518 226.093 li
283.518 218.947 li
282.734 218.947 li
cp
f
283.518 226.093 mo
284.301 226.093 li
284.301 218.947 li
283.518 218.947 li
cp
f
284.301 226.093 mo
285.085 226.093 li
285.085 224.507 li
284.301 224.507 li
cp
f
285.085 226.093 mo
285.868 226.093 li
285.868 224.507 li
285.085 224.507 li
cp
f
285.868 226.093 mo
286.652 226.093 li
286.652 206.237 li
285.868 206.237 li
cp
f
286.652 226.093 mo
287.435 226.093 li
287.435 207.825 li
286.652 207.825 li
cp
f
287.435 226.093 mo
288.219 226.093 li
288.219 221.33 li
287.435 221.33 li
cp
f
288.219 226.093 mo
289.002 226.093 li
289.002 216.564 li
288.219 216.564 li
cp
f
289.002 226.093 mo
289.786 226.093 li
289.786 216.564 li
289.002 216.564 li
cp
f
289.786 226.093 mo
290.569 226.093 li
290.569 208.621 li
289.786 208.621 li
cp
f
290.569 226.093 mo
291.353 226.093 li
291.353 219.739 li
290.569 219.739 li
cp
f
291.353 226.093 mo
292.136 226.093 li
292.136 217.358 li
291.353 217.358 li
cp
f
292.136 226.093 mo
292.92 226.093 li
292.92 223.711 li
292.136 223.711 li
cp
f
292.92 226.093 mo
293.703 226.093 li
293.703 221.33 li
292.92 221.33 li
cp
f
293.703 226.093 mo
294.487 226.093 li
294.487 221.33 li
293.703 221.33 li
cp
f
294.487 226.093 mo
295.27 226.093 li
295.27 222.918 li
294.487 222.918 li
cp
f
295.27 226.093 mo
296.053 226.093 li
296.053 216.564 li
295.27 216.564 li
cp
f
296.053 226.093 mo
296.837 226.093 li
296.837 216.564 li
296.053 216.564 li
cp
f
296.837 226.093 mo
297.62 226.093 li
297.62 223.711 li
296.837 223.711 li
cp
f
297.621 226.093 mo
298.404 226.093 li
298.404 223.711 li
297.621 223.711 li
cp
f
298.404 226.093 mo
299.187 226.093 li
299.187 221.33 li
298.404 221.33 li
cp
f
299.187 226.093 mo
299.971 226.093 li
299.971 223.711 li
299.187 223.711 li
cp
f
299.971 226.093 mo
300.754 226.093 li
300.754 203.854 li
299.971 203.854 li
cp
f
300.754 226.093 mo
301.538 226.093 li
301.538 199.882 li
300.754 199.882 li
cp
f
301.538 226.093 mo
302.321 226.093 li
302.321 221.33 li
301.538 221.33 li
cp
f
302.321 226.093 mo
303.105 226.093 li
303.105 222.918 li
302.321 222.918 li
cp
f
303.105 226.093 mo
303.888 226.093 li
303.888 222.122 li
303.105 222.122 li
cp
f
303.888 226.093 mo
304.672 226.093 li
304.672 221.33 li
303.888 221.33 li
cp
f
304.672 226.093 mo
305.455 226.093 li
305.455 221.33 li
304.672 221.33 li
cp
f
305.455 226.093 mo
306.239 226.093 li
306.239 222.918 li
305.455 222.918 li
cp
f
306.239 226.093 mo
307.022 226.093 li
307.022 210.208 li
306.239 210.208 li
cp
f
307.022 226.093 mo
307.806 226.093 li
307.806 210.208 li
307.022 210.208 li
cp
f
307.806 226.093 mo
308.589 226.093 li
308.589 214.975 li
307.806 214.975 li
cp
f
308.589 226.093 mo
309.373 226.093 li
309.373 223.711 li
308.589 223.711 li
cp
f
309.373 226.093 mo
310.156 226.093 li
310.156 219.739 li
309.373 219.739 li
cp
f
310.156 226.093 mo
310.94 226.093 li
310.94 154.611 li
310.156 154.611 li
cp
f
310.94 226.093 mo
311.723 226.093 li
311.723 154.611 li
310.94 154.611 li
cp
f
311.723 226.093 mo
312.507 226.093 li
312.507 222.918 li
311.723 222.918 li
cp
f
312.507 226.093 mo
313.29 226.093 li
313.29 222.918 li
312.507 222.918 li
cp
f
313.29 226.093 mo
314.073 226.093 li
314.073 222.122 li
313.29 222.122 li
cp
f
314.073 226.093 mo
314.857 226.093 li
314.857 218.947 li
314.073 218.947 li
cp
f
315.64 226.093 mo
316.424 226.093 li
316.424 218.947 li
315.64 218.947 li
cp
f
316.424 226.093 mo
317.207 226.093 li
317.207 218.947 li
316.424 218.947 li
cp
f
317.207 226.093 mo
317.991 226.093 li
317.991 213.387 li
317.207 213.387 li
cp
f
317.991 226.093 mo
318.774 226.093 li
318.774 213.387 li
317.991 213.387 li
cp
f
318.774 226.093 mo
319.558 226.093 li
319.558 222.918 li
318.774 222.918 li
cp
f
319.558 226.093 mo
320.341 226.093 li
320.341 224.507 li
319.558 224.507 li
cp
f
320.341 226.093 mo
321.125 226.093 li
321.125 222.918 li
320.341 222.918 li
cp
f
321.125 226.093 mo
321.908 226.093 li
321.908 213.387 li
321.125 213.387 li
cp
f
321.908 226.093 mo
322.692 226.093 li
322.692 216.564 li
321.908 216.564 li
cp
f
322.692 226.093 mo
323.475 226.093 li
323.475 223.711 li
322.692 223.711 li
cp
f
323.475 226.093 mo
324.259 226.093 li
324.259 224.507 li
323.475 224.507 li
cp
f
324.259 226.093 mo
325.042 226.093 li
325.042 223.711 li
324.259 223.711 li
cp
f
325.042 226.093 mo
325.826 226.093 li
325.826 221.33 li
325.042 221.33 li
cp
f
325.826 226.093 mo
326.609 226.093 li
326.609 222.918 li
325.826 222.918 li
cp
f
326.609 226.093 mo
327.393 226.093 li
327.393 222.918 li
326.609 222.918 li
cp
f
327.393 226.093 mo
328.176 226.093 li
328.176 219.739 li
327.393 219.739 li
cp
f
328.176 226.093 mo
328.96 226.093 li
328.96 219.739 li
328.176 219.739 li
cp
f
328.96 226.093 mo
329.743 226.093 li
329.743 218.947 li
328.96 218.947 li
cp
f
329.743 226.093 mo
330.527 226.093 li
330.527 220.535 li
329.743 220.535 li
cp
f
330.527 226.093 mo
331.31 226.093 li
331.31 223.711 li
330.527 223.711 li
cp
f
331.31 226.093 mo
332.093 226.093 li
332.093 218.151 li
331.31 218.151 li
cp
f
332.094 226.093 mo
332.877 226.093 li
332.877 218.151 li
332.094 218.151 li
cp
f
332.877 226.093 mo
333.66 226.093 li
333.66 212.593 li
332.877 212.593 li
cp
f
333.66 226.093 mo
334.444 226.093 li
334.444 212.593 li
333.66 212.593 li
cp
f
334.444 226.093 mo
335.227 226.093 li
335.227 224.507 li
334.444 224.507 li
cp
f
335.227 226.093 mo
336.011 226.093 li
336.011 211.797 li
335.227 211.797 li
cp
f
336.011 226.093 mo
336.794 226.093 li
336.794 193.53 li
336.011 193.53 li
cp
f
336.794 226.093 mo
337.578 226.093 li
337.578 210.208 li
336.794 210.208 li
cp
f
337.578 226.093 mo
338.361 226.093 li
338.361 214.975 li
337.578 214.975 li
cp
f
338.361 226.093 mo
339.145 226.093 li
339.145 148.256 li
338.361 148.256 li
cp
f
339.145 226.093 mo
339.928 226.093 li
339.928 148.256 li
339.145 148.256 li
cp
f
339.928 226.093 mo
340.712 226.093 li
340.712 219.739 li
339.928 219.739 li
cp
f
340.712 226.093 mo
341.495 226.093 li
341.495 219.739 li
340.712 219.739 li
cp
f
341.495 226.093 mo
342.279 226.093 li
342.279 224.507 li
341.495 224.507 li
cp
f
343.062 226.093 mo
343.846 226.093 li
343.846 211.004 li
343.062 211.004 li
cp
f
343.846 226.093 mo
344.629 226.093 li
344.629 211.004 li
343.846 211.004 li
cp
f
344.629 226.093 mo
345.413 226.093 li
345.413 219.739 li
344.629 219.739 li
cp
f
345.413 226.093 mo
346.196 226.093 li
346.196 222.918 li
345.413 222.918 li
cp
f
346.196 226.093 mo
346.98 226.093 li
346.98 218.151 li
346.196 218.151 li
cp
f
346.98 226.093 mo
347.763 226.093 li
347.763 210.208 li
346.98 210.208 li
cp
f
347.763 226.093 mo
348.547 226.093 li
348.547 207.033 li
347.763 207.033 li
cp
f
348.547 226.093 mo
349.33 226.093 li
349.33 222.918 li
348.547 222.918 li
cp
f
349.33 226.093 mo
350.113 226.093 li
350.113 222.122 li
349.33 222.122 li
cp
f
350.113 226.093 mo
350.897 226.093 li
350.897 222.918 li
350.113 222.918 li
cp
f
350.897 226.093 mo
351.68 226.093 li
351.68 202.265 li
350.897 202.265 li
cp
f
351.681 226.093 mo
352.464 226.093 li
352.464 222.122 li
351.681 222.122 li
cp
f
352.464 226.093 mo
353.247 226.093 li
353.247 222.122 li
352.464 222.122 li
cp
f
353.247 226.093 mo
354.031 226.093 li
354.031 222.122 li
353.247 222.122 li
cp
f
354.031 226.093 mo
354.814 226.093 li
354.814 224.507 li
354.031 224.507 li
cp
f
354.814 226.093 mo
355.598 226.093 li
355.598 218.947 li
354.814 218.947 li
cp
f
355.598 226.093 mo
356.381 226.093 li
356.381 214.179 li
355.598 214.179 li
cp
f
356.381 226.093 mo
357.165 226.093 li
357.165 213.387 li
356.381 213.387 li
cp
f
357.165 226.093 mo
357.948 226.093 li
357.948 224.507 li
357.165 224.507 li
cp
f
357.948 226.093 mo
358.732 226.093 li
358.732 223.711 li
357.948 223.711 li
cp
f
358.732 226.093 mo
359.515 226.093 li
359.515 207.033 li
358.732 207.033 li
cp
f
359.515 226.093 mo
360.299 226.093 li
360.299 223.711 li
359.515 223.711 li
cp
f
360.299 226.093 mo
361.082 226.093 li
361.082 223.711 li
360.299 223.711 li
cp
f
361.082 226.093 mo
361.866 226.093 li
361.866 224.507 li
361.082 224.507 li
cp
f
362.649 226.093 mo
363.433 226.093 li
363.433 224.507 li
362.649 224.507 li
cp
f
363.433 226.093 mo
364.216 226.093 li
364.216 217.358 li
363.433 217.358 li
cp
f
365 226.093 mo
365.783 226.093 li
365.783 198.294 li
365 198.294 li
cp
f
365.783 226.093 mo
366.567 226.093 li
366.567 213.387 li
365.783 213.387 li
cp
f
366.567 226.093 mo
367.35 226.093 li
367.35 223.711 li
366.567 223.711 li
cp
f
367.35 226.093 mo
368.133 226.093 li
368.133 218.151 li
367.35 218.151 li
cp
f
368.134 226.093 mo
368.917 226.093 li
368.917 218.151 li
368.134 218.151 li
cp
f
368.917 226.093 mo
369.7 226.093 li
369.7 212.593 li
368.917 212.593 li
cp
f
369.701 226.093 mo
370.484 226.093 li
370.484 222.918 li
369.701 222.918 li
cp
f
370.484 226.093 mo
371.267 226.093 li
371.267 218.151 li
370.484 218.151 li
cp
f
371.267 226.093 mo
372.051 226.093 li
372.051 221.33 li
371.267 221.33 li
cp
f
372.051 226.093 mo
372.834 226.093 li
372.834 224.507 li
372.051 224.507 li
cp
f
372.834 226.093 mo
373.618 226.093 li
373.618 189.559 li
372.834 189.559 li
cp
f
373.618 226.093 mo
374.401 226.093 li
374.401 223.711 li
373.618 223.711 li
cp
f
374.401 226.093 mo
375.185 226.093 li
375.185 219.739 li
374.401 219.739 li
cp
f
375.185 226.093 mo
375.968 226.093 li
375.968 219.739 li
375.185 219.739 li
cp
f
375.968 226.093 mo
376.752 226.093 li
376.752 208.621 li
375.968 208.621 li
cp
f
376.752 226.093 mo
377.535 226.093 li
377.535 208.621 li
376.752 208.621 li
cp
f
377.535 226.093 mo
378.319 226.093 li
378.319 214.975 li
377.535 214.975 li
cp
f
378.319 226.093 mo
379.102 226.093 li
379.102 214.179 li
378.319 214.179 li
cp
f
379.102 226.093 mo
379.886 226.093 li
379.886 214.179 li
379.102 214.179 li
cp
f
379.886 226.093 mo
380.669 226.093 li
380.669 218.947 li
379.886 218.947 li
cp
f
380.669 226.093 mo
381.453 226.093 li
381.453 218.947 li
380.669 218.947 li
cp
f
381.453 226.093 mo
382.236 226.093 li
382.236 221.33 li
381.453 221.33 li
cp
f
382.236 226.093 mo
383.02 226.093 li
383.02 222.122 li
382.236 222.122 li
cp
f
383.02 226.093 mo
383.803 226.093 li
383.803 218.947 li
383.02 218.947 li
cp
f
383.803 226.093 mo
384.587 226.093 li
384.587 221.33 li
383.803 221.33 li
cp
f
384.586 226.093 mo
385.37 226.093 li
385.37 210.208 li
384.586 210.208 li
cp
f
385.37 226.093 mo
386.153 226.093 li
386.153 211.797 li
385.37 211.797 li
cp
f
386.154 226.093 mo
386.937 226.093 li
386.937 222.918 li
386.154 222.918 li
cp
f
386.937 226.093 mo
387.72 226.093 li
387.72 207.825 li
386.937 207.825 li
cp
f
387.72 226.093 mo
388.504 226.093 li
388.504 212.593 li
387.72 212.593 li
cp
f
388.504 226.093 mo
389.287 226.093 li
389.287 223.711 li
388.504 223.711 li
cp
f
389.287 226.093 mo
390.071 226.093 li
390.071 222.122 li
389.287 222.122 li
cp
f
390.071 226.093 mo
390.854 226.093 li
390.854 224.507 li
390.071 224.507 li
cp
f
390.854 226.093 mo
391.638 226.093 li
391.638 222.918 li
390.854 222.918 li
cp
f
391.638 226.093 mo
392.421 226.093 li
392.421 222.918 li
391.638 222.918 li
cp
f
392.421 226.093 mo
393.205 226.093 li
393.205 222.122 li
392.421 222.122 li
cp
f
393.205 226.093 mo
393.988 226.093 li
393.988 222.122 li
393.205 222.122 li
cp
f
393.988 226.093 mo
394.772 226.093 li
394.772 219.739 li
393.988 219.739 li
cp
f
394.772 226.093 mo
395.555 226.093 li
395.555 214.179 li
394.772 214.179 li
cp
f
395.555 226.093 mo
396.339 226.093 li
396.339 210.208 li
395.555 210.208 li
cp
f
396.339 226.093 mo
397.122 226.093 li
397.122 210.208 li
396.339 210.208 li
cp
f
397.122 226.093 mo
397.906 226.093 li
397.906 215.768 li
397.122 215.768 li
cp
f
397.906 226.093 mo
398.689 226.093 li
398.689 216.564 li
397.906 216.564 li
cp
f
398.689 226.093 mo
399.473 226.093 li
399.473 215.768 li
398.689 215.768 li
cp
f
399.473 226.093 mo
400.256 226.093 li
400.256 224.507 li
399.473 224.507 li
cp
f
400.256 226.093 mo
401.04 226.093 li
401.04 223.711 li
400.256 223.711 li
cp
f
401.04 226.093 mo
401.823 226.093 li
401.823 218.947 li
401.04 218.947 li
cp
f
402.607 226.093 mo
403.39 226.093 li
403.39 220.535 li
402.607 220.535 li
cp
f
403.39 226.093 mo
404.173 226.093 li
404.173 221.33 li
403.39 221.33 li
cp
f
404.173 226.093 mo
404.957 226.093 li
404.957 224.507 li
404.173 224.507 li
cp
f
404.957 226.093 mo
405.74 226.093 li
405.74 209.415 li
404.957 209.415 li
cp
f
405.741 226.093 mo
406.524 226.093 li
406.524 201.473 li
405.741 201.473 li
cp
f
406.524 226.093 mo
407.307 226.093 li
407.307 221.33 li
406.524 221.33 li
cp
f
407.307 226.093 mo
408.091 226.093 li
408.091 221.33 li
407.307 221.33 li
cp
f
408.091 226.093 mo
408.874 226.093 li
408.874 218.947 li
408.091 218.947 li
cp
f
408.874 226.093 mo
409.658 226.093 li
409.658 209.415 li
408.874 209.415 li
cp
f
409.658 226.093 mo
410.441 226.093 li
410.441 222.122 li
409.658 222.122 li
cp
f
410.441 226.093 mo
411.225 226.093 li
411.225 214.975 li
410.441 214.975 li
cp
f
411.225 226.093 mo
412.008 226.093 li
412.008 214.975 li
411.225 214.975 li
cp
f
412.008 226.093 mo
412.792 226.093 li
412.792 222.122 li
412.008 222.122 li
cp
f
412.792 226.093 mo
413.575 226.093 li
413.575 224.507 li
412.792 224.507 li
cp
f
413.575 226.093 mo
414.359 226.093 li
414.359 203.854 li
413.575 203.854 li
cp
f
414.359 226.093 mo
415.142 226.093 li
415.142 207.825 li
414.359 207.825 li
cp
f
415.142 226.093 mo
415.926 226.093 li
415.926 222.122 li
415.142 222.122 li
cp
f
415.926 226.093 mo
416.709 226.093 li
416.709 209.415 li
415.926 209.415 li
cp
f
416.709 226.093 mo
417.493 226.093 li
417.493 221.33 li
416.709 221.33 li
cp
f
417.493 226.093 mo
418.276 226.093 li
418.276 224.507 li
417.493 224.507 li
cp
f
418.276 226.093 mo
419.06 226.093 li
419.06 224.507 li
418.276 224.507 li
cp
f
419.06 226.093 mo
419.843 226.093 li
419.843 224.507 li
419.06 224.507 li
cp
f
419.843 226.093 mo
420.625 226.093 li
420.625 224.507 li
419.843 224.507 li
cp
f
421.41 226.093 mo
422.192 226.093 li
422.192 214.179 li
421.41 214.179 li
cp
f
422.192 226.093 mo
422.979 226.093 li
422.979 197.501 li
422.192 197.501 li
cp
f
422.979 226.093 mo
423.761 226.093 li
423.761 218.947 li
422.979 218.947 li
cp
f
423.76 226.093 mo
424.542 226.093 li
424.542 205.444 li
423.76 205.444 li
cp
f
424.542 226.093 mo
425.327 226.093 li
425.327 207.825 li
424.542 207.825 li
cp
f
425.328 226.093 mo
426.109 226.093 li
426.109 220.535 li
425.328 220.535 li
cp
f
426.109 226.093 mo
426.896 226.093 li
426.896 220.535 li
426.109 220.535 li
cp
f
426.896 226.093 mo
427.678 226.093 li
427.678 204.65 li
426.896 204.65 li
cp
f
427.678 226.093 mo
428.46 226.093 li
428.46 204.65 li
427.678 204.65 li
cp
f
428.46 226.093 mo
429.245 226.093 li
429.245 222.918 li
428.46 222.918 li
cp
f
429.245 226.093 mo
430.027 226.093 li
430.027 218.947 li
429.245 218.947 li
cp
f
430.027 226.093 mo
430.814 226.093 li
430.814 215.768 li
430.027 215.768 li
cp
f
430.814 226.093 mo
431.595 226.093 li
431.595 196.707 li
430.814 196.707 li
cp
f
431.595 226.093 mo
432.377 226.093 li
432.377 196.707 li
431.595 196.707 li
cp
f
432.377 226.093 mo
433.162 226.093 li
433.162 223.711 li
432.377 223.711 li
cp
f
433.162 226.093 mo
433.944 226.093 li
433.944 223.711 li
433.162 223.711 li
cp
f
433.944 226.093 mo
434.731 226.093 li
434.731 223.711 li
433.944 223.711 li
cp
f
435.513 226.093 mo
436.294 226.093 li
436.294 220.535 li
435.513 220.535 li
cp
f
436.294 226.093 mo
437.08 226.093 li
437.08 220.535 li
436.294 220.535 li
cp
f
437.08 226.093 mo
437.861 226.093 li
437.861 214.179 li
437.08 214.179 li
cp
f
437.861 226.093 mo
438.648 226.093 li
438.648 214.179 li
437.861 214.179 li
cp
f
438.648 226.093 mo
439.43 226.093 li
439.43 219.739 li
438.648 219.739 li
cp
f
439.43 226.093 mo
440.212 226.093 li
440.212 222.122 li
439.43 222.122 li
cp
f
440.212 226.093 mo
440.997 226.093 li
440.997 159.374 li
440.212 159.374 li
cp
f
440.997 226.093 mo
441.779 226.093 li
441.779 222.918 li
440.997 222.918 li
cp
f
441.779 226.093 mo
442.566 226.093 li
442.566 204.65 li
441.779 204.65 li
cp
f
442.566 226.093 mo
443.347 226.093 li
443.347 203.854 li
442.566 203.854 li
cp
f
443.347 226.093 mo
444.129 226.093 li
444.129 214.975 li
443.347 214.975 li
cp
f
444.129 226.093 mo
444.914 226.093 li
444.914 222.122 li
444.129 222.122 li
cp
f
444.914 226.093 mo
445.696 226.093 li
445.696 212.593 li
444.914 212.593 li
cp
f
445.696 226.093 mo
446.483 226.093 li
446.483 214.179 li
445.696 214.179 li
cp
f
446.483 226.093 mo
447.265 226.093 li
447.265 220.535 li
446.483 220.535 li
cp
f
447.265 226.093 mo
448.047 226.093 li
448.047 220.535 li
447.265 220.535 li
cp
f
448.047 226.093 mo
448.832 226.093 li
448.832 223.711 li
448.047 223.711 li
cp
f
448.832 226.093 mo
449.614 226.093 li
449.614 222.122 li
448.832 222.122 li
cp
f
449.613 226.093 mo
450.4 226.093 li
450.4 222.918 li
449.613 222.918 li
cp
f
450.401 226.093 mo
451.182 226.093 li
451.182 214.179 li
450.401 214.179 li
cp
f
451.182 226.093 mo
451.964 226.093 li
451.964 219.739 li
451.182 219.739 li
cp
f
451.964 226.093 mo
452.749 226.093 li
452.749 222.918 li
451.964 222.918 li
cp
f
452.749 226.093 mo
453.531 226.093 li
453.531 222.918 li
452.749 222.918 li
cp
f
455.1 226.093 mo
455.881 226.093 li
455.881 223.711 li
455.1 223.711 li
cp
f
456.667 226.093 mo
457.448 226.093 li
457.448 222.918 li
456.667 222.918 li
cp
f
457.448 226.093 mo
458.235 226.093 li
458.235 194.323 li
457.448 194.323 li
cp
f
459.017 226.093 mo
459.799 226.093 li
459.799 223.711 li
459.017 223.711 li
cp
f
459.799 226.093 mo
460.584 226.093 li
460.584 222.122 li
459.799 222.122 li
cp
f
460.584 226.093 mo
461.366 226.093 li
461.366 221.33 li
460.584 221.33 li
cp
f
461.366 226.093 mo
462.153 226.093 li
462.153 218.947 li
461.366 218.947 li
cp
f
462.153 226.093 mo
462.934 226.093 li
462.934 222.918 li
462.153 222.918 li
cp
f
462.934 226.093 mo
463.716 226.093 li
463.716 221.33 li
462.934 221.33 li
cp
f
463.716 226.093 mo
464.501 226.093 li
464.501 224.507 li
463.716 224.507 li
cp
f
464.501 226.093 mo
465.283 226.093 li
465.283 224.507 li
464.501 224.507 li
cp
f
465.283 226.093 mo
466.07 226.093 li
466.07 222.918 li
465.283 222.918 li
cp
f
480.953 226.093 mo
481.74 226.093 li
481.74 224.507 li
480.953 224.507 li
cp
f
481.74 226.093 mo
482.521 226.093 li
482.521 224.507 li
481.74 224.507 li
cp
f
488.787 226.093 mo
489.574 226.093 li
489.574 223.711 li
488.787 223.711 li
cp
f
489.574 226.093 mo
490.356 226.093 li
490.356 223.711 li
489.574 223.711 li
cp
f
490.356 226.093 mo
491.138 226.093 li
491.138 223.711 li
490.356 223.711 li
cp
f
491.138 226.093 mo
491.923 226.093 li
491.923 223.711 li
491.138 223.711 li
cp
f
502.89 226.093 mo
503.675 226.093 li
503.675 224.507 li
502.89 224.507 li
cp
f
506.026 226.093 mo
506.807 226.093 li
506.807 222.122 li
506.026 222.122 li
cp
f
506.807 226.093 mo
507.593 226.093 li
507.593 222.122 li
506.807 222.122 li
cp
f
508.374 226.093 mo
509.161 226.093 li
509.161 212.593 li
508.374 212.593 li
cp
f
509.161 226.093 mo
509.943 226.093 li
509.943 212.593 li
509.161 212.593 li
cp
f
509.943 226.093 mo
510.725 226.093 li
510.725 201.473 li
509.943 201.473 li
cp
f
510.725 226.093 mo
511.51 226.093 li
511.51 215.768 li
510.725 215.768 li
cp
f
511.51 226.093 mo
512.292 226.093 li
512.292 222.122 li
511.51 222.122 li
cp
f
512.292 226.093 mo
513.079 226.093 li
513.079 217.358 li
512.292 217.358 li
cp
f
513.079 226.093 mo
513.861 226.093 li
513.861 217.358 li
513.079 217.358 li
cp
f
513.86 226.093 mo
514.642 226.093 li
514.642 222.918 li
513.86 222.918 li
cp
f
514.642 226.093 mo
515.427 226.093 li
515.427 216.564 li
514.642 216.564 li
cp
f
515.427 226.093 mo
516.209 226.093 li
516.209 180.822 li
515.427 180.822 li
cp
f
516.209 226.093 mo
516.996 226.093 li
516.996 180.027 li
516.209 180.027 li
cp
f
516.996 226.093 mo
517.778 226.093 li
517.778 219.739 li
516.996 219.739 li
cp
f
517.778 226.093 mo
518.56 226.093 li
518.56 219.739 li
517.778 219.739 li
cp
f
518.56 226.093 mo
519.345 226.093 li
519.345 222.122 li
518.56 222.122 li
cp
f
519.345 226.093 mo
520.127 226.093 li
520.127 222.122 li
519.345 222.122 li
cp
f
520.127 226.093 mo
520.914 226.093 li
520.914 222.122 li
520.127 222.122 li
cp
f
520.914 226.093 mo
521.695 226.093 li
521.695 224.507 li
520.914 224.507 li
cp
f
521.695 226.093 mo
522.477 226.093 li
522.477 219.739 li
521.695 219.739 li
cp
f
522.477 226.093 mo
523.262 226.093 li
523.262 217.358 li
522.477 217.358 li
cp
f
523.262 226.093 mo
524.044 226.093 li
524.044 195.119 li
523.262 195.119 li
cp
f
524.044 226.093 mo
524.831 226.093 li
524.831 195.119 li
524.044 195.119 li
cp
f
524.831 226.093 mo
525.613 226.093 li
525.613 211.004 li
524.831 211.004 li
cp
f
525.613 226.093 mo
526.394 226.093 li
526.394 221.33 li
525.613 221.33 li
cp
f
526.394 226.093 mo
527.18 226.093 li
527.18 222.918 li
526.394 222.918 li
cp
f
527.18 226.093 mo
527.961 226.093 li
527.961 211.004 li
527.18 211.004 li
cp
f
527.961 226.093 mo
528.748 226.093 li
528.748 220.535 li
527.961 220.535 li
cp
f
528.748 226.093 mo
529.53 226.093 li
529.53 217.358 li
528.748 217.358 li
cp
f
529.53 226.093 mo
530.312 226.093 li
530.312 210.208 li
529.53 210.208 li
cp
f
530.312 226.093 mo
531.097 226.093 li
531.097 210.208 li
530.312 210.208 li
cp
f
531.097 226.093 mo
531.879 226.093 li
531.879 213.387 li
531.097 213.387 li
cp
f
531.879 226.093 mo
532.666 226.093 li
532.666 213.387 li
531.879 213.387 li
cp
f
532.666 226.093 mo
533.447 226.093 li
533.447 213.387 li
532.666 213.387 li
cp
f
533.447 226.093 mo
534.229 226.093 li
534.229 214.975 li
533.447 214.975 li
cp
f
534.229 226.093 mo
535.014 226.093 li
535.014 216.564 li
534.229 216.564 li
cp
f
535.014 226.093 mo
535.796 226.093 li
535.796 216.564 li
535.014 216.564 li
cp
f
535.796 226.093 mo
536.583 226.093 li
536.583 194.323 li
535.796 194.323 li
cp
f
536.583 226.093 mo
537.365 226.093 li
537.365 222.918 li
536.583 222.918 li
cp
f
538.147 226.093 mo
538.932 226.093 li
538.932 218.947 li
538.147 218.947 li
cp
f
538.932 226.093 mo
539.714 226.093 li
539.714 218.947 li
538.932 218.947 li
cp
f
539.714 226.093 mo
540.501 226.093 li
540.501 222.918 li
539.714 222.918 li
cp
f
540.5 226.093 mo
541.282 226.093 li
541.282 223.711 li
540.5 223.711 li
cp
f
541.282 226.093 mo
542.064 226.093 li
542.064 146.668 li
541.282 146.668 li
cp
f
542.064 226.093 mo
542.849 226.093 li
542.849 146.668 li
542.064 146.668 li
cp
f
542.849 226.093 mo
543.631 226.093 li
543.631 223.711 li
542.849 223.711 li
cp
f
543.631 226.093 mo
544.418 226.093 li
544.418 218.947 li
543.631 218.947 li
cp
f
544.418 226.093 mo
545.2 226.093 li
545.2 200.678 li
544.418 200.678 li
cp
f
545.2 226.093 mo
545.981 226.093 li
545.981 211.004 li
545.2 211.004 li
cp
f
545.981 226.093 mo
546.767 226.093 li
546.767 211.004 li
545.981 211.004 li
cp
f
546.767 226.093 mo
547.548 226.093 li
547.548 190.351 li
546.767 190.351 li
cp
f
547.548 226.093 mo
548.335 226.093 li
548.335 220.535 li
547.548 220.535 li
cp
f
548.335 226.093 mo
549.117 226.093 li
549.117 212.593 li
548.335 212.593 li
cp
f
549.117 226.093 mo
549.899 226.093 li
549.899 212.593 li
549.117 212.593 li
cp
f
549.899 226.093 mo
550.684 226.093 li
550.684 224.507 li
549.899 224.507 li
cp
f
550.684 226.093 mo
551.466 226.093 li
551.466 218.151 li
550.684 218.151 li
cp
f
551.466 226.093 mo
552.253 226.093 li
552.253 214.179 li
551.466 214.179 li
cp
f
552.253 226.093 mo
553.034 226.093 li
553.034 215.768 li
552.253 215.768 li
cp
f
553.034 226.093 mo
553.816 226.093 li
553.816 215.768 li
553.034 215.768 li
cp
f
553.816 226.093 mo
554.601 226.093 li
554.601 220.535 li
553.816 220.535 li
cp
f
555.383 226.093 mo
556.17 226.093 li
556.17 222.122 li
555.383 222.122 li
cp
f
556.17 226.093 mo
556.952 226.093 li
556.952 217.358 li
556.17 217.358 li
cp
f
556.952 226.093 mo
557.734 226.093 li
557.734 217.358 li
556.952 217.358 li
cp
f
557.734 226.093 mo
558.519 226.093 li
558.519 219.739 li
557.734 219.739 li
cp
f
558.519 226.093 mo
559.301 226.093 li
559.301 218.947 li
558.519 218.947 li
cp
f
559.3 226.093 mo
560.087 226.093 li
560.087 218.151 li
559.3 218.151 li
cp
f
560.088 226.093 mo
560.869 226.093 li
560.869 218.151 li
560.088 218.151 li
cp
f
560.869 226.093 mo
561.651 226.093 li
561.651 223.711 li
560.869 223.711 li
cp
f
561.651 226.093 mo
562.436 226.093 li
562.436 201.473 li
561.651 201.473 li
cp
f
563.218 226.093 mo
564.005 226.093 li
564.005 153.816 li
563.218 153.816 li
cp
f
564.005 226.093 mo
564.787 226.093 li
564.787 153.816 li
564.005 153.816 li
cp
f
564.787 226.093 mo
565.568 226.093 li
565.568 221.33 li
564.787 221.33 li
cp
f
565.568 226.093 mo
566.354 226.093 li
566.354 222.918 li
565.568 222.918 li
cp
f
566.354 226.093 mo
567.135 226.093 li
567.135 224.507 li
566.354 224.507 li
cp
f
567.135 226.093 mo
567.922 226.093 li
567.922 224.507 li
567.135 224.507 li
cp
f
567.922 226.093 mo
568.704 226.093 li
568.704 224.507 li
567.922 224.507 li
cp
f
569.486 226.093 mo
570.271 226.093 li
570.271 223.711 li
569.486 223.711 li
cp
f
572.621 226.093 mo
573.403 226.093 li
573.403 222.918 li
572.621 222.918 li
cp
f
573.403 226.093 mo
574.188 226.093 li
574.188 222.918 li
573.403 222.918 li
cp
f
574.188 226.093 mo
574.97 226.093 li
574.97 224.507 li
574.188 224.507 li
cp
f
574.97 226.093 mo
575.757 226.093 li
575.757 221.33 li
574.97 221.33 li
cp
f
575.757 226.093 mo
576.539 226.093 li
576.539 224.507 li
575.757 224.507 li
cp
f
576.539 226.093 mo
577.321 226.093 li
577.321 224.507 li
576.539 224.507 li
cp
f
577.321 226.093 mo
578.106 226.093 li
578.106 222.122 li
577.321 222.122 li
cp
f
578.106 226.093 mo
578.887 226.093 li
578.887 222.122 li
578.106 222.122 li
cp
f
578.888 226.093 mo
579.674 226.093 li
579.674 223.711 li
578.888 223.711 li
cp
f
579.674 226.093 mo
580.456 226.093 li
580.456 224.507 li
579.674 224.507 li
cp
f
582.805 226.093 mo
583.592 226.093 li
583.592 224.507 li
582.805 224.507 li
cp
f
583.592 226.093 mo
584.374 226.093 li
584.374 224.507 li
583.592 224.507 li
cp
f
584.374 226.093 mo
585.155 226.093 li
585.155 224.507 li
584.374 224.507 li
cp
f
585.155 226.093 mo
585.94 226.093 li
585.94 220.535 li
585.155 220.535 li
cp
f
585.94 226.093 mo
586.722 226.093 li
586.722 220.535 li
585.94 220.535 li
cp
f
586.722 226.093 mo
587.509 226.093 li
587.509 222.122 li
586.722 222.122 li
cp
f
587.509 226.093 mo
588.291 226.093 li
588.291 220.535 li
587.509 220.535 li
cp
f
588.291 226.093 mo
589.073 226.093 li
589.073 208.621 li
588.291 208.621 li
cp
f
589.073 226.093 mo
589.858 226.093 li
589.858 222.918 li
589.073 222.918 li
cp
f
589.858 226.093 mo
590.64 226.093 li
590.64 222.918 li
589.858 222.918 li
cp
f
590.64 226.093 mo
591.427 226.093 li
591.427 223.711 li
590.64 223.711 li
cp
f
591.427 226.093 mo
592.208 226.093 li
592.208 223.711 li
591.427 223.711 li
cp
f
592.208 226.093 mo
592.99 226.093 li
592.99 223.711 li
592.208 223.711 li
cp
f
592.99 226.093 mo
593.775 226.093 li
593.775 224.507 li
592.99 224.507 li
cp
f
593.775 226.093 mo
594.557 226.093 li
594.557 224.507 li
593.775 224.507 li
cp
f
594.557 226.093 mo
595.344 226.093 li
595.344 223.711 li
594.557 223.711 li
cp
f
595.344 226.093 mo
596.126 226.093 li
596.126 223.711 li
595.344 223.711 li
cp
f
596.126 226.093 mo
596.907 226.093 li
596.907 224.507 li
596.126 224.507 li
cp
f
596.907 226.093 mo
597.693 226.093 li
597.693 223.711 li
596.907 223.711 li
cp
f
597.693 226.093 mo
598.474 226.093 li
598.474 218.947 li
597.693 218.947 li
cp
f
598.474 226.093 mo
599.261 226.093 li
599.261 218.947 li
598.474 218.947 li
cp
f
599.261 226.093 mo
600.043 226.093 li
600.043 223.711 li
599.261 223.711 li
cp
f
600.825 226.093 mo
601.61 226.093 li
601.61 222.918 li
600.825 222.918 li
cp
f
601.61 226.093 mo
602.392 226.093 li
602.392 222.122 li
601.61 222.122 li
cp
f
602.392 226.093 mo
603.179 226.093 li
603.179 223.711 li
602.392 223.711 li
cp
f
603.179 226.093 mo
603.961 226.093 li
603.961 222.122 li
603.179 222.122 li
cp
f
603.961 226.093 mo
604.742 226.093 li
604.742 216.564 li
603.961 216.564 li
cp
f
604.742 226.093 mo
605.528 226.093 li
605.528 219.739 li
604.742 219.739 li
cp
f
605.528 226.093 mo
606.309 226.093 li
606.309 215.768 li
605.528 215.768 li
cp
f
606.309 226.093 mo
607.096 226.093 li
607.096 215.768 li
606.309 215.768 li
cp
f
607.096 226.093 mo
607.878 226.093 li
607.878 222.918 li
607.096 222.918 li
cp
f
607.878 226.093 mo
608.66 226.093 li
608.66 222.918 li
607.878 222.918 li
cp
f
611.795 226.093 mo
612.577 226.093 li
612.577 223.711 li
611.795 223.711 li
cp
f
613.362 226.093 mo
614.144 226.093 li
614.144 222.918 li
613.362 222.918 li
cp
f
614.144 226.093 mo
614.931 226.093 li
614.931 222.918 li
614.144 222.918 li
cp
f
614.931 226.093 mo
615.713 226.093 li
615.713 221.33 li
614.931 221.33 li
cp
f
615.713 226.093 mo
616.494 226.093 li
616.494 221.33 li
615.713 221.33 li
cp
f
616.494 226.093 mo
617.28 226.093 li
617.28 223.711 li
616.494 223.711 li
cp
f
617.28 226.093 mo
618.061 226.093 li
618.061 223.711 li
617.28 223.711 li
cp
f
618.061 226.093 mo
618.848 226.093 li
618.848 223.711 li
618.061 223.711 li
cp
f
618.848 226.093 mo
619.63 226.093 li
619.63 222.918 li
618.848 222.918 li
cp
f
619.63 226.093 mo
620.412 226.093 li
620.412 224.507 li
619.63 224.507 li
cp
f
620.412 226.093 mo
621.197 226.093 li
621.197 224.507 li
620.412 224.507 li
cp
f
625.896 226.093 mo
626.683 226.093 li
626.683 224.507 li
625.896 224.507 li
cp
f
626.683 226.093 mo
627.465 226.093 li
627.465 224.507 li
626.683 224.507 li
cp
f
115.732 258.043 mo
634.534 258.043 li
0 0 0 1 cmyk
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
gsave
[1.74106 0 0 -1.76505 115.732 258.043 ]ct
@
grestore newpath
143.589 258.043 mo
143.589 239.51 li
164.046 239.51 li
gsave
[1.74106 0 0 -1.76505 143.589 258.043 ]ct
@
grestore newpath
170.193 239.51 mo
161.531 243.096 li
163.587 239.51 li
161.531 235.923 li
cp
f
202.82 395.803 mo
203.603 395.803 li
203.603 394.215 li
202.82 394.215 li
cp
.875 .247 1 .133 cmyk
f
203.603 395.803 mo
204.386 395.803 li
204.386 392.628 li
203.603 392.628 li
cp
f
204.387 395.803 mo
205.17 395.803 li
205.17 392.628 li
204.387 392.628 li
cp
f
205.954 395.803 mo
206.737 395.803 li
206.737 389.449 li
205.954 389.449 li
cp
f
206.737 395.803 mo
207.52 395.803 li
207.52 389.449 li
206.737 389.449 li
cp
f
207.52 395.803 mo
208.304 395.803 li
208.304 385.478 li
207.52 385.478 li
cp
f
208.304 395.803 mo
209.087 395.803 li
209.087 384.685 li
208.304 384.685 li
cp
f
209.087 395.803 mo
209.871 395.803 li
209.871 384.685 li
209.087 384.685 li
cp
f
209.871 395.803 mo
210.654 395.803 li
210.654 390.243 li
209.871 390.243 li
cp
f
210.654 395.803 mo
211.438 395.803 li
211.438 390.243 li
210.654 390.243 li
cp
f
211.438 395.803 mo
212.221 395.803 li
212.221 377.535 li
211.438 377.535 li
cp
f
212.221 395.803 mo
213.005 395.803 li
213.005 381.506 li
212.221 381.506 li
cp
f
213.005 395.803 mo
213.788 395.803 li
213.788 390.243 li
213.005 390.243 li
cp
f
213.788 395.803 mo
214.572 395.803 li
214.572 391.832 li
213.788 391.832 li
cp
f
214.572 395.803 mo
215.355 395.803 li
215.355 391.832 li
214.572 391.832 li
cp
f
215.355 395.803 mo
216.139 395.803 li
216.139 391.037 li
215.355 391.037 li
cp
f
216.139 395.803 mo
216.922 395.803 li
216.922 391.037 li
216.139 391.037 li
cp
f
216.922 395.803 mo
217.706 395.803 li
217.706 376.742 li
216.922 376.742 li
cp
f
217.706 395.803 mo
218.489 395.803 li
218.489 382.3 li
217.706 382.3 li
cp
f
218.489 395.803 mo
219.273 395.803 li
219.273 391.832 li
218.489 391.832 li
cp
f
219.273 395.803 mo
220.056 395.803 li
220.056 391.832 li
219.273 391.832 li
cp
f
220.056 395.803 mo
220.84 395.803 li
220.84 393.42 li
220.056 393.42 li
cp
f
220.84 395.803 mo
221.623 395.803 li
221.623 382.3 li
220.84 382.3 li
cp
f
221.623 395.803 mo
222.406 395.803 li
222.406 384.685 li
221.623 384.685 li
cp
f
222.406 395.803 mo
223.19 395.803 li
223.19 386.272 li
222.406 386.272 li
cp
f
223.19 395.803 mo
223.973 395.803 li
223.973 388.656 li
223.19 388.656 li
cp
f
223.973 395.803 mo
224.757 395.803 li
224.757 367.209 li
223.973 367.209 li
cp
f
224.757 395.803 mo
225.54 395.803 li
225.54 378.329 li
224.757 378.329 li
cp
f
225.54 395.803 mo
226.324 395.803 li
226.324 392.628 li
225.54 392.628 li
cp
f
226.324 395.803 mo
227.107 395.803 li
227.107 391.037 li
226.324 391.037 li
cp
f
227.107 395.803 mo
227.891 395.803 li
227.891 376.742 li
227.107 376.742 li
cp
0 0 0 1 cmyk
f
227.891 395.803 mo
228.674 395.803 li
228.674 376.742 li
227.891 376.742 li
cp
f
228.674 395.803 mo
229.458 395.803 li
229.458 382.3 li
228.674 382.3 li
cp
.875 .247 1 .133 cmyk
f
229.458 395.803 mo
230.241 395.803 li
230.241 382.3 li
229.458 382.3 li
cp
f
230.241 395.803 mo
231.025 395.803 li
231.025 387.86 li
230.241 387.86 li
cp
f
231.025 395.803 mo
231.808 395.803 li
231.808 391.037 li
231.025 391.037 li
cp
f
231.808 395.803 mo
232.592 395.803 li
232.592 391.037 li
231.808 391.037 li
cp
f
232.592 395.803 mo
233.375 395.803 li
233.375 389.449 li
232.592 389.449 li
cp
f
233.375 395.803 mo
234.159 395.803 li
234.159 394.215 li
233.375 394.215 li
cp
f
234.159 395.803 mo
234.942 395.803 li
234.942 392.628 li
234.159 392.628 li
cp
f
234.942 395.803 mo
235.726 395.803 li
235.726 390.243 li
234.942 390.243 li
cp
f
235.726 395.803 mo
236.509 395.803 li
236.509 391.037 li
235.726 391.037 li
cp
f
236.509 395.803 mo
237.293 395.803 li
237.293 391.037 li
236.509 391.037 li
cp
f
237.293 395.803 mo
238.076 395.803 li
238.076 391.037 li
237.293 391.037 li
cp
f
238.076 395.803 mo
238.86 395.803 li
238.86 392.628 li
238.076 392.628 li
cp
f
238.86 395.803 mo
239.643 395.803 li
239.643 394.215 li
238.86 394.215 li
cp
f
239.643 395.803 mo
240.427 395.803 li
240.427 394.215 li
239.643 394.215 li
cp
f
240.426 395.803 mo
241.21 395.803 li
241.21 394.215 li
240.426 394.215 li
cp
f
241.21 395.803 mo
241.993 395.803 li
241.993 394.215 li
241.21 394.215 li
cp
f
241.993 395.803 mo
242.777 395.803 li
242.777 389.449 li
241.993 389.449 li
cp
f
242.777 395.803 mo
243.56 395.803 li
243.56 388.656 li
242.777 388.656 li
cp
f
244.344 395.803 mo
245.127 395.803 li
245.127 394.215 li
244.344 394.215 li
cp
f
245.127 395.803 mo
245.911 395.803 li
245.911 382.3 li
245.127 382.3 li
cp
f
246.694 395.803 mo
247.478 395.803 li
247.478 382.3 li
246.694 382.3 li
cp
f
247.478 395.803 mo
248.261 395.803 li
248.261 382.3 li
247.478 382.3 li
cp
f
248.261 395.803 mo
249.045 395.803 li
249.045 391.037 li
248.261 391.037 li
cp
f
249.045 395.803 mo
249.828 395.803 li
249.828 392.628 li
249.045 392.628 li
cp
f
249.828 395.803 mo
250.612 395.803 li
250.612 392.628 li
249.828 392.628 li
cp
f
251.395 395.803 mo
252.179 395.803 li
252.179 392.628 li
251.395 392.628 li
cp
f
252.179 395.803 mo
252.962 395.803 li
252.962 391.037 li
252.179 391.037 li
cp
f
252.962 395.803 mo
253.746 395.803 li
253.746 380.714 li
252.962 380.714 li
cp
f
253.746 395.803 mo
254.529 395.803 li
254.529 382.3 li
253.746 382.3 li
cp
f
254.529 395.803 mo
255.313 395.803 li
255.313 392.628 li
254.529 392.628 li
cp
f
255.313 395.803 mo
256.096 395.803 li
256.096 393.42 li
255.313 393.42 li
cp
f
256.096 395.803 mo
256.88 395.803 li
256.88 393.42 li
256.096 393.42 li
cp
f
256.88 395.803 mo
257.663 395.803 li
257.663 393.42 li
256.88 393.42 li
cp
f
257.663 395.803 mo
258.447 395.803 li
258.447 393.42 li
257.663 393.42 li
cp
f
258.447 395.803 mo
259.23 395.803 li
259.23 392.628 li
258.447 392.628 li
cp
f
259.23 395.803 mo
260.013 395.803 li
260.013 392.628 li
259.23 392.628 li
cp
f
260.013 395.803 mo
260.797 395.803 li
260.797 391.832 li
260.013 391.832 li
cp
f
260.797 395.803 mo
261.58 395.803 li
261.58 391.037 li
260.797 391.037 li
cp
f
261.58 395.803 mo
262.364 395.803 li
262.364 385.478 li
261.58 385.478 li
cp
f
262.364 395.803 mo
263.147 395.803 li
263.147 385.478 li
262.364 385.478 li
cp
f
263.147 395.803 mo
263.931 395.803 li
263.931 394.215 li
263.147 394.215 li
cp
f
263.931 395.803 mo
264.714 395.803 li
264.714 362.444 li
263.931 362.444 li
cp
0 0 0 1 cmyk
f
264.714 395.803 mo
265.498 395.803 li
265.498 362.444 li
264.714 362.444 li
cp
f
265.498 395.803 mo
266.281 395.803 li
266.281 389.449 li
265.498 389.449 li
cp
.875 .247 1 .133 cmyk
f
266.281 395.803 mo
267.065 395.803 li
267.065 394.215 li
266.281 394.215 li
cp
f
267.848 395.803 mo
268.632 395.803 li
268.632 392.628 li
267.848 392.628 li
cp
f
268.632 395.803 mo
269.415 395.803 li
269.415 392.628 li
268.632 392.628 li
cp
f
269.415 395.803 mo
270.199 395.803 li
270.199 394.215 li
269.415 394.215 li
cp
f
270.199 395.803 mo
270.982 395.803 li
270.982 394.215 li
270.199 394.215 li
cp
f
270.982 395.803 mo
271.766 395.803 li
271.766 386.272 li
270.982 386.272 li
cp
f
271.766 395.803 mo
272.549 395.803 li
272.549 384.685 li
271.766 384.685 li
cp
f
272.549 395.803 mo
273.333 395.803 li
273.333 384.685 li
272.549 384.685 li
cp
f
273.333 395.803 mo
274.116 395.803 li
274.116 390.243 li
273.333 390.243 li
cp
f
274.116 395.803 mo
274.9 395.803 li
274.9 383.889 li
274.116 383.889 li
cp
f
274.9 395.803 mo
275.683 395.803 li
275.683 385.478 li
274.9 385.478 li
cp
f
275.683 395.803 mo
276.466 395.803 li
276.466 375.946 li
275.683 375.946 li
cp
f
276.467 395.803 mo
277.25 395.803 li
277.25 375.946 li
276.467 375.946 li
cp
f
277.25 395.803 mo
278.033 395.803 li
278.033 388.656 li
277.25 388.656 li
cp
f
278.034 395.803 mo
278.817 395.803 li
278.817 388.656 li
278.034 388.656 li
cp
f
278.817 395.803 mo
279.6 395.803 li
279.6 392.628 li
278.817 392.628 li
cp
f
279.6 395.803 mo
280.384 395.803 li
280.384 389.449 li
279.6 389.449 li
cp
f
280.384 395.803 mo
281.167 395.803 li
281.167 393.42 li
280.384 393.42 li
cp
f
281.167 395.803 mo
281.951 395.803 li
281.951 348.943 li
281.167 348.943 li
cp
f
281.951 395.803 mo
282.734 395.803 li
282.734 350.53 li
281.951 350.53 li
cp
f
282.734 395.803 mo
283.518 395.803 li
283.518 388.656 li
282.734 388.656 li
cp
f
283.518 395.803 mo
284.301 395.803 li
284.301 388.656 li
283.518 388.656 li
cp
f
284.301 395.803 mo
285.085 395.803 li
285.085 394.215 li
284.301 394.215 li
cp
f
285.085 395.803 mo
285.868 395.803 li
285.868 394.215 li
285.085 394.215 li
cp
f
285.868 395.803 mo
286.652 395.803 li
286.652 375.946 li
285.868 375.946 li
cp
f
286.652 395.803 mo
287.435 395.803 li
287.435 377.535 li
286.652 377.535 li
cp
f
287.435 395.803 mo
288.219 395.803 li
288.219 391.037 li
287.435 391.037 li
cp
f
288.219 395.803 mo
289.002 395.803 li
289.002 386.272 li
288.219 386.272 li
cp
f
289.002 395.803 mo
289.786 395.803 li
289.786 386.272 li
289.002 386.272 li
cp
f
289.786 395.803 mo
290.569 395.803 li
290.569 378.329 li
289.786 378.329 li
cp
f
290.569 395.803 mo
291.353 395.803 li
291.353 389.449 li
290.569 389.449 li
cp
f
291.353 395.803 mo
292.136 395.803 li
292.136 387.066 li
291.353 387.066 li
cp
f
292.136 395.803 mo
292.92 395.803 li
292.92 393.42 li
292.136 393.42 li
cp
f
292.92 395.803 mo
293.703 395.803 li
293.703 391.037 li
292.92 391.037 li
cp
f
293.703 395.803 mo
294.487 395.803 li
294.487 391.037 li
293.703 391.037 li
cp
f
294.487 395.803 mo
295.27 395.803 li
295.27 392.628 li
294.487 392.628 li
cp
f
295.27 395.803 mo
296.053 395.803 li
296.053 386.272 li
295.27 386.272 li
cp
f
296.053 395.803 mo
296.837 395.803 li
296.837 386.272 li
296.053 386.272 li
cp
f
296.837 395.803 mo
297.62 395.803 li
297.62 393.42 li
296.837 393.42 li
cp
f
297.621 395.803 mo
298.404 395.803 li
298.404 393.42 li
297.621 393.42 li
cp
f
298.404 395.803 mo
299.187 395.803 li
299.187 391.037 li
298.404 391.037 li
cp
f
299.187 395.803 mo
299.971 395.803 li
299.971 393.42 li
299.187 393.42 li
cp
f
299.971 395.803 mo
300.754 395.803 li
300.754 373.563 li
299.971 373.563 li
cp
f
300.754 395.803 mo
301.538 395.803 li
301.538 369.592 li
300.754 369.592 li
cp
f
301.538 395.803 mo
302.321 395.803 li
302.321 391.037 li
301.538 391.037 li
cp
f
302.321 395.803 mo
303.105 395.803 li
303.105 392.628 li
302.321 392.628 li
cp
f
303.105 395.803 mo
303.888 395.803 li
303.888 391.832 li
303.105 391.832 li
cp
f
303.888 395.803 mo
304.672 395.803 li
304.672 391.037 li
303.888 391.037 li
cp
f
304.672 395.803 mo
305.455 395.803 li
305.455 391.037 li
304.672 391.037 li
cp
f
305.455 395.803 mo
306.239 395.803 li
306.239 392.628 li
305.455 392.628 li
cp
f
306.239 395.803 mo
307.022 395.803 li
307.022 379.918 li
306.239 379.918 li
cp
f
307.022 395.803 mo
307.806 395.803 li
307.806 379.918 li
307.022 379.918 li
cp
f
307.806 395.803 mo
308.589 395.803 li
308.589 384.685 li
307.806 384.685 li
cp
f
308.589 395.803 mo
309.373 395.803 li
309.373 393.42 li
308.589 393.42 li
cp
f
309.373 395.803 mo
310.156 395.803 li
310.156 389.449 li
309.373 389.449 li
cp
f
310.156 395.803 mo
310.94 395.803 li
310.94 324.319 li
310.156 324.319 li
cp
0 0 0 1 cmyk
f
310.94 395.803 mo
311.723 395.803 li
311.723 324.319 li
310.94 324.319 li
cp
f
311.723 395.803 mo
312.507 395.803 li
312.507 392.628 li
311.723 392.628 li
cp
.875 .247 1 .133 cmyk
f
312.507 395.803 mo
313.29 395.803 li
313.29 392.628 li
312.507 392.628 li
cp
f
313.29 395.803 mo
314.073 395.803 li
314.073 391.832 li
313.29 391.832 li
cp
f
314.073 395.803 mo
314.857 395.803 li
314.857 388.656 li
314.073 388.656 li
cp
f
315.64 395.803 mo
316.424 395.803 li
316.424 388.656 li
315.64 388.656 li
cp
f
316.424 395.803 mo
317.207 395.803 li
317.207 388.656 li
316.424 388.656 li
cp
f
317.207 395.803 mo
317.991 395.803 li
317.991 383.095 li
317.207 383.095 li
cp
f
317.991 395.803 mo
318.774 395.803 li
318.774 383.095 li
317.991 383.095 li
cp
f
318.774 395.803 mo
319.558 395.803 li
319.558 392.628 li
318.774 392.628 li
cp
f
319.558 395.803 mo
320.341 395.803 li
320.341 394.215 li
319.558 394.215 li
cp
f
320.341 395.803 mo
321.125 395.803 li
321.125 392.628 li
320.341 392.628 li
cp
f
321.125 395.803 mo
321.908 395.803 li
321.908 383.095 li
321.125 383.095 li
cp
f
321.908 395.803 mo
322.692 395.803 li
322.692 386.272 li
321.908 386.272 li
cp
f
322.692 395.803 mo
323.475 395.803 li
323.475 393.42 li
322.692 393.42 li
cp
f
323.475 395.803 mo
324.259 395.803 li
324.259 394.215 li
323.475 394.215 li
cp
f
324.259 395.803 mo
325.042 395.803 li
325.042 393.42 li
324.259 393.42 li
cp
f
325.042 395.803 mo
325.826 395.803 li
325.826 391.037 li
325.042 391.037 li
cp
f
325.826 395.803 mo
326.609 395.803 li
326.609 392.628 li
325.826 392.628 li
cp
f
326.609 395.803 mo
327.393 395.803 li
327.393 392.628 li
326.609 392.628 li
cp
f
327.393 395.803 mo
328.176 395.803 li
328.176 389.449 li
327.393 389.449 li
cp
f
328.176 395.803 mo
328.96 395.803 li
328.96 389.449 li
328.176 389.449 li
cp
f
328.96 395.803 mo
329.743 395.803 li
329.743 388.656 li
328.96 388.656 li
cp
f
329.743 395.803 mo
330.527 395.803 li
330.527 390.243 li
329.743 390.243 li
cp
f
330.527 395.803 mo
331.31 395.803 li
331.31 393.42 li
330.527 393.42 li
cp
f
331.31 395.803 mo
332.093 395.803 li
332.093 387.86 li
331.31 387.86 li
cp
f
332.094 395.803 mo
332.877 395.803 li
332.877 387.86 li
332.094 387.86 li
cp
f
332.877 395.803 mo
333.66 395.803 li
333.66 382.3 li
332.877 382.3 li
cp
f
333.66 395.803 mo
334.444 395.803 li
334.444 382.3 li
333.66 382.3 li
cp
f
334.444 395.803 mo
335.227 395.803 li
335.227 394.215 li
334.444 394.215 li
cp
f
335.227 395.803 mo
336.011 395.803 li
336.011 381.506 li
335.227 381.506 li
cp
f
336.011 395.803 mo
336.794 395.803 li
336.794 363.238 li
336.011 363.238 li
cp
f
336.794 395.803 mo
337.578 395.803 li
337.578 379.918 li
336.794 379.918 li
cp
f
337.578 395.803 mo
338.361 395.803 li
338.361 384.685 li
337.578 384.685 li
cp
f
338.361 395.803 mo
339.145 395.803 li
339.145 317.964 li
338.361 317.964 li
cp
f
339.145 395.803 mo
339.928 395.803 li
339.928 317.964 li
339.145 317.964 li
cp
f
339.928 395.803 mo
340.712 395.803 li
340.712 389.449 li
339.928 389.449 li
cp
f
340.712 395.803 mo
341.495 395.803 li
341.495 389.449 li
340.712 389.449 li
cp
f
341.495 395.803 mo
342.279 395.803 li
342.279 394.215 li
341.495 394.215 li
cp
f
343.062 395.803 mo
343.846 395.803 li
343.846 380.714 li
343.062 380.714 li
cp
f
343.846 395.803 mo
344.629 395.803 li
344.629 380.714 li
343.846 380.714 li
cp
f
344.629 395.803 mo
345.413 395.803 li
345.413 389.449 li
344.629 389.449 li
cp
f
345.413 395.803 mo
346.196 395.803 li
346.196 392.628 li
345.413 392.628 li
cp
f
346.196 395.803 mo
346.98 395.803 li
346.98 387.86 li
346.196 387.86 li
cp
f
346.98 395.803 mo
347.763 395.803 li
347.763 379.918 li
346.98 379.918 li
cp
f
347.763 395.803 mo
348.547 395.803 li
348.547 376.742 li
347.763 376.742 li
cp
f
348.547 395.803 mo
349.33 395.803 li
349.33 392.628 li
348.547 392.628 li
cp
f
349.33 395.803 mo
350.113 395.803 li
350.113 391.832 li
349.33 391.832 li
cp
f
350.113 395.803 mo
350.897 395.803 li
350.897 392.628 li
350.113 392.628 li
cp
f
350.897 395.803 mo
351.68 395.803 li
351.68 371.975 li
350.897 371.975 li
cp
f
351.681 395.803 mo
352.464 395.803 li
352.464 391.832 li
351.681 391.832 li
cp
f
352.464 395.803 mo
353.247 395.803 li
353.247 391.832 li
352.464 391.832 li
cp
f
353.247 395.803 mo
354.031 395.803 li
354.031 391.832 li
353.247 391.832 li
cp
f
354.031 395.803 mo
354.814 395.803 li
354.814 394.215 li
354.031 394.215 li
cp
f
354.814 395.803 mo
355.598 395.803 li
355.598 388.656 li
354.814 388.656 li
cp
f
355.598 395.803 mo
356.381 395.803 li
356.381 383.889 li
355.598 383.889 li
cp
f
356.381 395.803 mo
357.165 395.803 li
357.165 383.095 li
356.381 383.095 li
cp
f
357.165 395.803 mo
357.948 395.803 li
357.948 394.215 li
357.165 394.215 li
cp
f
357.948 395.803 mo
358.732 395.803 li
358.732 393.42 li
357.948 393.42 li
cp
f
358.732 395.803 mo
359.515 395.803 li
359.515 376.742 li
358.732 376.742 li
cp
f
359.515 395.803 mo
360.299 395.803 li
360.299 393.42 li
359.515 393.42 li
cp
f
360.299 395.803 mo
361.082 395.803 li
361.082 393.42 li
360.299 393.42 li
cp
f
361.082 395.803 mo
361.866 395.803 li
361.866 394.215 li
361.082 394.215 li
cp
f
362.649 395.803 mo
363.433 395.803 li
363.433 394.215 li
362.649 394.215 li
cp
f
363.433 395.803 mo
364.216 395.803 li
364.216 387.066 li
363.433 387.066 li
cp
f
365 395.803 mo
365.783 395.803 li
365.783 368.004 li
365 368.004 li
cp
f
365.783 395.803 mo
366.567 395.803 li
366.567 383.095 li
365.783 383.095 li
cp
f
366.567 395.803 mo
367.35 395.803 li
367.35 393.42 li
366.567 393.42 li
cp
f
367.35 395.803 mo
368.133 395.803 li
368.133 387.86 li
367.35 387.86 li
cp
f
368.134 395.803 mo
368.917 395.803 li
368.917 387.86 li
368.134 387.86 li
cp
f
368.917 395.803 mo
369.7 395.803 li
369.7 382.3 li
368.917 382.3 li
cp
f
369.701 395.803 mo
370.484 395.803 li
370.484 392.628 li
369.701 392.628 li
cp
f
370.484 395.803 mo
371.267 395.803 li
371.267 387.86 li
370.484 387.86 li
cp
f
371.267 395.803 mo
372.051 395.803 li
372.051 391.037 li
371.267 391.037 li
cp
f
372.051 395.803 mo
372.834 395.803 li
372.834 394.215 li
372.051 394.215 li
cp
f
372.834 395.803 mo
373.618 395.803 li
373.618 359.267 li
372.834 359.267 li
cp
f
373.618 395.803 mo
374.401 395.803 li
374.401 393.42 li
373.618 393.42 li
cp
f
374.401 395.803 mo
375.185 395.803 li
375.185 389.449 li
374.401 389.449 li
cp
f
375.185 395.803 mo
375.968 395.803 li
375.968 389.449 li
375.185 389.449 li
cp
f
375.968 395.803 mo
376.752 395.803 li
376.752 378.329 li
375.968 378.329 li
cp
f
376.752 395.803 mo
377.535 395.803 li
377.535 378.329 li
376.752 378.329 li
cp
f
377.535 395.803 mo
378.319 395.803 li
378.319 384.685 li
377.535 384.685 li
cp
f
378.319 395.803 mo
379.102 395.803 li
379.102 383.889 li
378.319 383.889 li
cp
f
379.102 395.803 mo
379.886 395.803 li
379.886 383.889 li
379.102 383.889 li
cp
f
379.886 395.803 mo
380.669 395.803 li
380.669 388.656 li
379.886 388.656 li
cp
f
380.669 395.803 mo
381.453 395.803 li
381.453 388.656 li
380.669 388.656 li
cp
f
381.453 395.803 mo
382.236 395.803 li
382.236 391.037 li
381.453 391.037 li
cp
f
382.236 395.803 mo
383.02 395.803 li
383.02 391.832 li
382.236 391.832 li
cp
f
383.02 395.803 mo
383.803 395.803 li
383.803 388.656 li
383.02 388.656 li
cp
f
383.803 395.803 mo
384.587 395.803 li
384.587 391.037 li
383.803 391.037 li
cp
f
384.586 395.803 mo
385.37 395.803 li
385.37 379.918 li
384.586 379.918 li
cp
f
385.37 395.803 mo
386.153 395.803 li
386.153 381.506 li
385.37 381.506 li
cp
f
386.154 395.803 mo
386.937 395.803 li
386.937 392.628 li
386.154 392.628 li
cp
f
386.937 395.803 mo
387.72 395.803 li
387.72 377.535 li
386.937 377.535 li
cp
f
387.72 395.803 mo
388.504 395.803 li
388.504 382.3 li
387.72 382.3 li
cp
f
388.504 395.803 mo
389.287 395.803 li
389.287 393.42 li
388.504 393.42 li
cp
f
389.287 395.803 mo
390.071 395.803 li
390.071 391.832 li
389.287 391.832 li
cp
f
390.071 395.803 mo
390.854 395.803 li
390.854 394.215 li
390.071 394.215 li
cp
f
390.854 395.803 mo
391.638 395.803 li
391.638 392.628 li
390.854 392.628 li
cp
f
391.638 395.803 mo
392.421 395.803 li
392.421 392.628 li
391.638 392.628 li
cp
f
392.421 395.803 mo
393.205 395.803 li
393.205 391.832 li
392.421 391.832 li
cp
f
393.205 395.803 mo
393.988 395.803 li
393.988 391.832 li
393.205 391.832 li
cp
f
393.988 395.803 mo
394.772 395.803 li
394.772 389.449 li
393.988 389.449 li
cp
f
394.772 395.803 mo
395.555 395.803 li
395.555 383.889 li
394.772 383.889 li
cp
f
395.555 395.803 mo
396.339 395.803 li
396.339 379.918 li
395.555 379.918 li
cp
f
396.339 395.803 mo
397.122 395.803 li
397.122 379.918 li
396.339 379.918 li
cp
f
397.122 395.803 mo
397.906 395.803 li
397.906 385.478 li
397.122 385.478 li
cp
f
397.906 395.803 mo
398.689 395.803 li
398.689 386.272 li
397.906 386.272 li
cp
f
398.689 395.803 mo
399.473 395.803 li
399.473 385.478 li
398.689 385.478 li
cp
f
399.473 395.803 mo
400.256 395.803 li
400.256 394.215 li
399.473 394.215 li
cp
f
400.256 395.803 mo
401.04 395.803 li
401.04 393.42 li
400.256 393.42 li
cp
f
401.04 395.803 mo
401.823 395.803 li
401.823 388.656 li
401.04 388.656 li
cp
f
402.607 395.803 mo
403.39 395.803 li
403.39 390.243 li
402.607 390.243 li
cp
f
403.39 395.803 mo
404.173 395.803 li
404.173 391.037 li
403.39 391.037 li
cp
f
404.173 395.803 mo
404.957 395.803 li
404.957 394.215 li
404.173 394.215 li
cp
f
404.957 395.803 mo
405.74 395.803 li
405.74 379.123 li
404.957 379.123 li
cp
f
405.741 395.803 mo
406.524 395.803 li
406.524 371.181 li
405.741 371.181 li
cp
f
406.524 395.803 mo
407.307 395.803 li
407.307 391.037 li
406.524 391.037 li
cp
f
407.307 395.803 mo
408.091 395.803 li
408.091 391.037 li
407.307 391.037 li
cp
f
408.091 395.803 mo
408.874 395.803 li
408.874 388.656 li
408.091 388.656 li
cp
f
408.874 395.803 mo
409.658 395.803 li
409.658 379.123 li
408.874 379.123 li
cp
f
409.658 395.803 mo
410.441 395.803 li
410.441 391.832 li
409.658 391.832 li
cp
f
410.441 395.803 mo
411.225 395.803 li
411.225 384.685 li
410.441 384.685 li
cp
f
411.225 395.803 mo
412.008 395.803 li
412.008 384.685 li
411.225 384.685 li
cp
f
412.008 395.803 mo
412.792 395.803 li
412.792 391.832 li
412.008 391.832 li
cp
f
412.792 395.803 mo
413.575 395.803 li
413.575 394.215 li
412.792 394.215 li
cp
f
413.575 395.803 mo
414.359 395.803 li
414.359 373.563 li
413.575 373.563 li
cp
f
414.359 395.803 mo
415.142 395.803 li
415.142 377.535 li
414.359 377.535 li
cp
f
415.142 395.803 mo
415.926 395.803 li
415.926 391.832 li
415.142 391.832 li
cp
f
415.926 395.803 mo
416.709 395.803 li
416.709 379.123 li
415.926 379.123 li
cp
f
416.709 395.803 mo
417.493 395.803 li
417.493 391.037 li
416.709 391.037 li
cp
f
417.493 395.803 mo
418.276 395.803 li
418.276 394.215 li
417.493 394.215 li
cp
f
418.276 395.803 mo
419.06 395.803 li
419.06 394.215 li
418.276 394.215 li
cp
f
419.06 395.803 mo
419.843 395.803 li
419.843 394.215 li
419.06 394.215 li
cp
f
419.843 395.803 mo
420.625 395.803 li
420.625 394.215 li
419.843 394.215 li
cp
f
421.41 395.803 mo
422.192 395.803 li
422.192 383.889 li
421.41 383.889 li
cp
f
422.192 395.803 mo
422.979 395.803 li
422.979 367.209 li
422.192 367.209 li
cp
f
422.979 395.803 mo
423.761 395.803 li
423.761 388.656 li
422.979 388.656 li
cp
f
423.76 395.803 mo
424.542 395.803 li
424.542 375.152 li
423.76 375.152 li
cp
f
424.542 395.803 mo
425.327 395.803 li
425.327 377.535 li
424.542 377.535 li
cp
f
425.328 395.803 mo
426.109 395.803 li
426.109 390.243 li
425.328 390.243 li
cp
f
426.109 395.803 mo
426.896 395.803 li
426.896 390.243 li
426.109 390.243 li
cp
f
426.896 395.803 mo
427.678 395.803 li
427.678 374.358 li
426.896 374.358 li
cp
f
427.678 395.803 mo
428.46 395.803 li
428.46 374.358 li
427.678 374.358 li
cp
f
428.46 395.803 mo
429.245 395.803 li
429.245 392.628 li
428.46 392.628 li
cp
f
429.245 395.803 mo
430.027 395.803 li
430.027 388.656 li
429.245 388.656 li
cp
f
430.027 395.803 mo
430.814 395.803 li
430.814 385.478 li
430.027 385.478 li
cp
f
430.814 395.803 mo
431.595 395.803 li
431.595 366.415 li
430.814 366.415 li
cp
0 0 0 1 cmyk
f
431.595 395.803 mo
432.377 395.803 li
432.377 366.415 li
431.595 366.415 li
cp
f
432.377 395.803 mo
433.162 395.803 li
433.162 393.42 li
432.377 393.42 li
cp
.875 .247 1 .133 cmyk
f
433.162 395.803 mo
433.944 395.803 li
433.944 393.42 li
433.162 393.42 li
cp
f
433.944 395.803 mo
434.731 395.803 li
434.731 393.42 li
433.944 393.42 li
cp
f
435.513 395.803 mo
436.294 395.803 li
436.294 390.243 li
435.513 390.243 li
cp
f
436.294 395.803 mo
437.08 395.803 li
437.08 390.243 li
436.294 390.243 li
cp
f
437.08 395.803 mo
437.861 395.803 li
437.861 383.889 li
437.08 383.889 li
cp
f
437.861 395.803 mo
438.648 395.803 li
438.648 383.889 li
437.861 383.889 li
cp
f
438.648 395.803 mo
439.43 395.803 li
439.43 389.449 li
438.648 389.449 li
cp
f
439.43 395.803 mo
440.212 395.803 li
440.212 391.832 li
439.43 391.832 li
cp
f
440.212 395.803 mo
440.997 395.803 li
440.997 329.086 li
440.212 329.086 li
cp
f
440.997 395.803 mo
441.779 395.803 li
441.779 392.628 li
440.997 392.628 li
cp
f
441.779 395.803 mo
442.566 395.803 li
442.566 374.358 li
441.779 374.358 li
cp
f
442.566 395.803 mo
443.347 395.803 li
443.347 373.563 li
442.566 373.563 li
cp
f
443.347 395.803 mo
444.129 395.803 li
444.129 384.685 li
443.347 384.685 li
cp
f
444.129 395.803 mo
444.914 395.803 li
444.914 391.832 li
444.129 391.832 li
cp
f
444.914 395.803 mo
445.696 395.803 li
445.696 382.3 li
444.914 382.3 li
cp
f
445.696 395.803 mo
446.483 395.803 li
446.483 383.889 li
445.696 383.889 li
cp
f
446.483 395.803 mo
447.265 395.803 li
447.265 390.243 li
446.483 390.243 li
cp
f
447.265 395.803 mo
448.047 395.803 li
448.047 390.243 li
447.265 390.243 li
cp
f
448.047 395.803 mo
448.832 395.803 li
448.832 393.42 li
448.047 393.42 li
cp
f
448.832 395.803 mo
449.614 395.803 li
449.614 391.832 li
448.832 391.832 li
cp
f
449.613 395.803 mo
450.4 395.803 li
450.4 392.628 li
449.613 392.628 li
cp
f
450.401 395.803 mo
451.182 395.803 li
451.182 383.889 li
450.401 383.889 li
cp
f
451.182 395.803 mo
451.964 395.803 li
451.964 389.449 li
451.182 389.449 li
cp
f
451.964 395.803 mo
452.749 395.803 li
452.749 392.628 li
451.964 392.628 li
cp
f
452.749 395.803 mo
453.531 395.803 li
453.531 392.628 li
452.749 392.628 li
cp
f
455.1 395.803 mo
455.881 395.803 li
455.881 393.42 li
455.1 393.42 li
cp
f
456.667 395.803 mo
457.448 395.803 li
457.448 392.628 li
456.667 392.628 li
cp
f
457.448 395.803 mo
458.235 395.803 li
458.235 364.032 li
457.448 364.032 li
cp
f
459.017 395.803 mo
459.799 395.803 li
459.799 393.42 li
459.017 393.42 li
cp
f
459.799 395.803 mo
460.584 395.803 li
460.584 391.832 li
459.799 391.832 li
cp
f
460.584 395.803 mo
461.366 395.803 li
461.366 391.037 li
460.584 391.037 li
cp
f
461.366 395.803 mo
462.153 395.803 li
462.153 388.656 li
461.366 388.656 li
cp
f
462.153 395.803 mo
462.934 395.803 li
462.934 392.628 li
462.153 392.628 li
cp
f
462.934 395.803 mo
463.716 395.803 li
463.716 391.037 li
462.934 391.037 li
cp
f
463.716 395.803 mo
464.501 395.803 li
464.501 394.215 li
463.716 394.215 li
cp
f
464.501 395.803 mo
465.283 395.803 li
465.283 394.215 li
464.501 394.215 li
cp
f
465.283 395.803 mo
466.07 395.803 li
466.07 392.628 li
465.283 392.628 li
cp
f
480.953 395.803 mo
481.74 395.803 li
481.74 394.215 li
480.953 394.215 li
cp
f
481.74 395.803 mo
482.521 395.803 li
482.521 394.215 li
481.74 394.215 li
cp
f
488.787 395.803 mo
489.574 395.803 li
489.574 393.42 li
488.787 393.42 li
cp
f
489.574 395.803 mo
490.356 395.803 li
490.356 393.42 li
489.574 393.42 li
cp
f
490.356 395.803 mo
491.138 395.803 li
491.138 393.42 li
490.356 393.42 li
cp
f
491.138 395.803 mo
491.923 395.803 li
491.923 393.42 li
491.138 393.42 li
cp
f
502.89 395.803 mo
503.675 395.803 li
503.675 394.215 li
502.89 394.215 li
cp
f
506.026 395.803 mo
506.807 395.803 li
506.807 391.832 li
506.026 391.832 li
cp
f
506.807 395.803 mo
507.593 395.803 li
507.593 391.832 li
506.807 391.832 li
cp
f
508.374 395.803 mo
509.161 395.803 li
509.161 382.3 li
508.374 382.3 li
cp
f
509.161 395.803 mo
509.943 395.803 li
509.943 382.3 li
509.161 382.3 li
cp
f
509.943 395.803 mo
510.725 395.803 li
510.725 371.181 li
509.943 371.181 li
cp
f
510.725 395.803 mo
511.51 395.803 li
511.51 385.478 li
510.725 385.478 li
cp
f
511.51 395.803 mo
512.292 395.803 li
512.292 391.832 li
511.51 391.832 li
cp
f
512.292 395.803 mo
513.079 395.803 li
513.079 387.066 li
512.292 387.066 li
cp
f
513.079 395.803 mo
513.861 395.803 li
513.861 387.066 li
513.079 387.066 li
cp
f
513.86 395.803 mo
514.642 395.803 li
514.642 392.628 li
513.86 392.628 li
cp
f
514.642 395.803 mo
515.427 395.803 li
515.427 386.272 li
514.642 386.272 li
cp
f
515.427 395.803 mo
516.209 395.803 li
516.209 350.53 li
515.427 350.53 li
cp
f
516.209 395.803 mo
516.996 395.803 li
516.996 349.735 li
516.209 349.735 li
cp
f
516.996 395.803 mo
517.778 395.803 li
517.778 389.449 li
516.996 389.449 li
cp
f
517.778 395.803 mo
518.56 395.803 li
518.56 389.449 li
517.778 389.449 li
cp
f
518.56 395.803 mo
519.345 395.803 li
519.345 391.832 li
518.56 391.832 li
cp
f
519.345 395.803 mo
520.127 395.803 li
520.127 391.832 li
519.345 391.832 li
cp
f
520.127 395.803 mo
520.914 395.803 li
520.914 391.832 li
520.127 391.832 li
cp
f
520.914 395.803 mo
521.695 395.803 li
521.695 394.215 li
520.914 394.215 li
cp
f
521.695 395.803 mo
522.477 395.803 li
522.477 389.449 li
521.695 389.449 li
cp
f
522.477 395.803 mo
523.262 395.803 li
523.262 387.066 li
522.477 387.066 li
cp
f
523.262 395.803 mo
524.044 395.803 li
524.044 364.828 li
523.262 364.828 li
cp
0 0 0 1 cmyk
f
524.044 395.803 mo
524.831 395.803 li
524.831 364.828 li
524.044 364.828 li
cp
f
524.831 395.803 mo
525.613 395.803 li
525.613 380.714 li
524.831 380.714 li
cp
.875 .247 1 .133 cmyk
f
525.613 395.803 mo
526.394 395.803 li
526.394 391.037 li
525.613 391.037 li
cp
f
526.394 395.803 mo
527.18 395.803 li
527.18 392.628 li
526.394 392.628 li
cp
f
527.18 395.803 mo
527.961 395.803 li
527.961 380.714 li
527.18 380.714 li
cp
f
527.961 395.803 mo
528.748 395.803 li
528.748 390.243 li
527.961 390.243 li
cp
f
528.748 395.803 mo
529.53 395.803 li
529.53 387.066 li
528.748 387.066 li
cp
f
529.53 395.803 mo
530.312 395.803 li
530.312 379.918 li
529.53 379.918 li
cp
f
530.312 395.803 mo
531.097 395.803 li
531.097 379.918 li
530.312 379.918 li
cp
f
531.097 395.803 mo
531.879 395.803 li
531.879 383.095 li
531.097 383.095 li
cp
f
531.879 395.803 mo
532.666 395.803 li
532.666 383.095 li
531.879 383.095 li
cp
f
532.666 395.803 mo
533.447 395.803 li
533.447 383.095 li
532.666 383.095 li
cp
f
533.447 395.803 mo
534.229 395.803 li
534.229 384.685 li
533.447 384.685 li
cp
f
534.229 395.803 mo
535.014 395.803 li
535.014 386.272 li
534.229 386.272 li
cp
f
535.014 395.803 mo
535.796 395.803 li
535.796 386.272 li
535.014 386.272 li
cp
f
535.796 395.803 mo
536.583 395.803 li
536.583 364.032 li
535.796 364.032 li
cp
f
536.583 395.803 mo
537.365 395.803 li
537.365 392.628 li
536.583 392.628 li
cp
f
538.147 395.803 mo
538.932 395.803 li
538.932 388.656 li
538.147 388.656 li
cp
f
538.932 395.803 mo
539.714 395.803 li
539.714 388.656 li
538.932 388.656 li
cp
f
539.714 395.803 mo
540.501 395.803 li
540.501 392.628 li
539.714 392.628 li
cp
f
540.5 395.803 mo
541.282 395.803 li
541.282 393.42 li
540.5 393.42 li
cp
f
541.282 395.803 mo
542.064 395.803 li
542.064 316.376 li
541.282 316.376 li
cp
f
542.064 395.803 mo
542.849 395.803 li
542.849 316.376 li
542.064 316.376 li
cp
f
542.849 395.803 mo
543.631 395.803 li
543.631 393.42 li
542.849 393.42 li
cp
f
543.631 395.803 mo
544.418 395.803 li
544.418 388.656 li
543.631 388.656 li
cp
f
544.418 395.803 mo
545.2 395.803 li
545.2 370.386 li
544.418 370.386 li
cp
f
545.2 395.803 mo
545.981 395.803 li
545.981 380.714 li
545.2 380.714 li
cp
f
545.981 395.803 mo
546.767 395.803 li
546.767 380.714 li
545.981 380.714 li
cp
f
546.767 395.803 mo
547.548 395.803 li
547.548 360.061 li
546.767 360.061 li
cp
f
547.548 395.803 mo
548.335 395.803 li
548.335 390.243 li
547.548 390.243 li
cp
f
548.335 395.803 mo
549.117 395.803 li
549.117 382.3 li
548.335 382.3 li
cp
f
549.117 395.803 mo
549.899 395.803 li
549.899 382.3 li
549.117 382.3 li
cp
f
549.899 395.803 mo
550.684 395.803 li
550.684 394.215 li
549.899 394.215 li
cp
f
550.684 395.803 mo
551.466 395.803 li
551.466 387.86 li
550.684 387.86 li
cp
f
551.466 395.803 mo
552.253 395.803 li
552.253 383.889 li
551.466 383.889 li
cp
f
552.253 395.803 mo
553.034 395.803 li
553.034 385.478 li
552.253 385.478 li
cp
f
553.034 395.803 mo
553.816 395.803 li
553.816 385.478 li
553.034 385.478 li
cp
f
553.816 395.803 mo
554.601 395.803 li
554.601 390.243 li
553.816 390.243 li
cp
f
555.383 395.803 mo
556.17 395.803 li
556.17 391.832 li
555.383 391.832 li
cp
f
556.17 395.803 mo
556.952 395.803 li
556.952 387.066 li
556.17 387.066 li
cp
f
556.952 395.803 mo
557.734 395.803 li
557.734 387.066 li
556.952 387.066 li
cp
f
557.734 395.803 mo
558.519 395.803 li
558.519 389.449 li
557.734 389.449 li
cp
f
558.519 395.803 mo
559.301 395.803 li
559.301 388.656 li
558.519 388.656 li
cp
f
559.3 395.803 mo
560.087 395.803 li
560.087 387.86 li
559.3 387.86 li
cp
f
560.088 395.803 mo
560.869 395.803 li
560.869 387.86 li
560.088 387.86 li
cp
f
560.869 395.803 mo
561.651 395.803 li
561.651 393.42 li
560.869 393.42 li
cp
f
561.651 395.803 mo
562.436 395.803 li
562.436 371.181 li
561.651 371.181 li
cp
f
563.218 395.803 mo
564.005 395.803 li
564.005 323.524 li
563.218 323.524 li
cp
0 0 0 1 cmyk
f
564.005 395.803 mo
564.787 395.803 li
564.787 323.524 li
564.005 323.524 li
cp
f
564.787 395.803 mo
565.568 395.803 li
565.568 391.037 li
564.787 391.037 li
cp
.875 .247 1 .133 cmyk
f
565.568 395.803 mo
566.354 395.803 li
566.354 392.628 li
565.568 392.628 li
cp
f
566.354 395.803 mo
567.135 395.803 li
567.135 394.215 li
566.354 394.215 li
cp
f
567.135 395.803 mo
567.922 395.803 li
567.922 394.215 li
567.135 394.215 li
cp
f
567.922 395.803 mo
568.704 395.803 li
568.704 394.215 li
567.922 394.215 li
cp
f
569.486 395.803 mo
570.271 395.803 li
570.271 393.42 li
569.486 393.42 li
cp
f
572.621 395.803 mo
573.403 395.803 li
573.403 392.628 li
572.621 392.628 li
cp
f
573.403 395.803 mo
574.188 395.803 li
574.188 392.628 li
573.403 392.628 li
cp
f
574.188 395.803 mo
574.97 395.803 li
574.97 394.215 li
574.188 394.215 li
cp
f
574.97 395.803 mo
575.757 395.803 li
575.757 391.037 li
574.97 391.037 li
cp
f
575.757 395.803 mo
576.539 395.803 li
576.539 394.215 li
575.757 394.215 li
cp
f
576.539 395.803 mo
577.321 395.803 li
577.321 394.215 li
576.539 394.215 li
cp
f
577.321 395.803 mo
578.106 395.803 li
578.106 391.832 li
577.321 391.832 li
cp
f
578.106 395.803 mo
578.887 395.803 li
578.887 391.832 li
578.106 391.832 li
cp
f
578.888 395.803 mo
579.674 395.803 li
579.674 393.42 li
578.888 393.42 li
cp
f
579.674 395.803 mo
580.456 395.803 li
580.456 394.215 li
579.674 394.215 li
cp
f
582.805 395.803 mo
583.592 395.803 li
583.592 394.215 li
582.805 394.215 li
cp
f
583.592 395.803 mo
584.374 395.803 li
584.374 394.215 li
583.592 394.215 li
cp
f
584.374 395.803 mo
585.155 395.803 li
585.155 394.215 li
584.374 394.215 li
cp
f
585.155 395.803 mo
585.94 395.803 li
585.94 390.243 li
585.155 390.243 li
cp
f
585.94 395.803 mo
586.722 395.803 li
586.722 390.243 li
585.94 390.243 li
cp
f
586.722 395.803 mo
587.509 395.803 li
587.509 391.832 li
586.722 391.832 li
cp
f
587.509 395.803 mo
588.291 395.803 li
588.291 390.243 li
587.509 390.243 li
cp
f
588.291 395.803 mo
589.073 395.803 li
589.073 378.329 li
588.291 378.329 li
cp
f
589.073 395.803 mo
589.858 395.803 li
589.858 392.628 li
589.073 392.628 li
cp
f
589.858 395.803 mo
590.64 395.803 li
590.64 392.628 li
589.858 392.628 li
cp
f
590.64 395.803 mo
591.427 395.803 li
591.427 393.42 li
590.64 393.42 li
cp
f
591.427 395.803 mo
592.208 395.803 li
592.208 393.42 li
591.427 393.42 li
cp
f
592.208 395.803 mo
592.99 395.803 li
592.99 393.42 li
592.208 393.42 li
cp
f
592.99 395.803 mo
593.775 395.803 li
593.775 394.215 li
592.99 394.215 li
cp
f
593.775 395.803 mo
594.557 395.803 li
594.557 394.215 li
593.775 394.215 li
cp
f
594.557 395.803 mo
595.344 395.803 li
595.344 393.42 li
594.557 393.42 li
cp
f
595.344 395.803 mo
596.126 395.803 li
596.126 393.42 li
595.344 393.42 li
cp
f
596.126 395.803 mo
596.907 395.803 li
596.907 394.215 li
596.126 394.215 li
cp
f
596.907 395.803 mo
597.693 395.803 li
597.693 393.42 li
596.907 393.42 li
cp
f
597.693 395.803 mo
598.474 395.803 li
598.474 388.656 li
597.693 388.656 li
cp
f
598.474 395.803 mo
599.261 395.803 li
599.261 388.656 li
598.474 388.656 li
cp
f
599.261 395.803 mo
600.043 395.803 li
600.043 393.42 li
599.261 393.42 li
cp
f
600.825 395.803 mo
601.61 395.803 li
601.61 392.628 li
600.825 392.628 li
cp
f
601.61 395.803 mo
602.392 395.803 li
602.392 391.832 li
601.61 391.832 li
cp
f
602.392 395.803 mo
603.179 395.803 li
603.179 393.42 li
602.392 393.42 li
cp
f
603.179 395.803 mo
603.961 395.803 li
603.961 391.832 li
603.179 391.832 li
cp
f
603.961 395.803 mo
604.742 395.803 li
604.742 386.272 li
603.961 386.272 li
cp
f
604.742 395.803 mo
605.528 395.803 li
605.528 389.449 li
604.742 389.449 li
cp
f
605.528 395.803 mo
606.309 395.803 li
606.309 385.478 li
605.528 385.478 li
cp
f
606.309 395.803 mo
607.096 395.803 li
607.096 385.478 li
606.309 385.478 li
cp
f
607.096 395.803 mo
607.878 395.803 li
607.878 392.628 li
607.096 392.628 li
cp
f
607.878 395.803 mo
608.66 395.803 li
608.66 392.628 li
607.878 392.628 li
cp
f
611.795 395.803 mo
612.577 395.803 li
612.577 393.42 li
611.795 393.42 li
cp
f
613.362 395.803 mo
614.144 395.803 li
614.144 392.628 li
613.362 392.628 li
cp
f
614.144 395.803 mo
614.931 395.803 li
614.931 392.628 li
614.144 392.628 li
cp
f
614.931 395.803 mo
615.713 395.803 li
615.713 391.037 li
614.931 391.037 li
cp
f
615.713 395.803 mo
616.494 395.803 li
616.494 391.037 li
615.713 391.037 li
cp
f
616.494 395.803 mo
617.28 395.803 li
617.28 393.42 li
616.494 393.42 li
cp
f
617.28 395.803 mo
618.061 395.803 li
618.061 393.42 li
617.28 393.42 li
cp
f
618.061 395.803 mo
618.848 395.803 li
618.848 393.42 li
618.061 393.42 li
cp
f
618.848 395.803 mo
619.63 395.803 li
619.63 392.628 li
618.848 392.628 li
cp
f
619.63 395.803 mo
620.412 395.803 li
620.412 394.215 li
619.63 394.215 li
cp
f
620.412 395.803 mo
621.197 395.803 li
621.197 394.215 li
620.412 394.215 li
cp
f
625.896 395.803 mo
626.683 395.803 li
626.683 394.215 li
625.896 394.215 li
cp
f
626.683 395.803 mo
627.465 395.803 li
627.465 394.215 li
626.683 394.215 li
cp
f
115.732 427.751 mo
634.534 427.751 li
0 0 0 1 cmyk
gsave
[1.74106 0 0 -1.76505 115.732 427.751 ]ct
@
grestore newpath
143.589 427.751 mo
143.589 409.218 li
164.046 409.218 li
gsave
[1.74106 0 0 -1.76505 143.589 427.751 ]ct
@
grestore newpath
170.193 409.218 mo
161.531 412.805 li
163.587 409.218 li
161.531 405.632 li
cp
f
202.82 550.159 mo
203.603 550.159 li
203.603 548.57 li
202.82 548.57 li
cp
.875 .247 1 .133 cmyk
f
203.603 550.159 mo
204.386 550.159 li
204.386 546.983 li
203.603 546.983 li
cp
f
204.387 550.159 mo
205.17 550.159 li
205.17 546.983 li
204.387 546.983 li
cp
f
205.954 550.159 mo
206.737 550.159 li
206.737 543.804 li
205.954 543.804 li
cp
f
206.737 550.159 mo
207.52 550.159 li
207.52 543.804 li
206.737 543.804 li
cp
f
207.52 550.159 mo
208.304 550.159 li
208.304 539.833 li
207.52 539.833 li
cp
f
208.304 550.159 mo
209.087 550.159 li
209.087 539.04 li
208.304 539.04 li
cp
f
209.087 550.159 mo
209.871 550.159 li
209.871 539.04 li
209.087 539.04 li
cp
f
209.871 550.159 mo
210.654 550.159 li
210.654 544.599 li
209.871 544.599 li
cp
f
210.654 550.159 mo
211.438 550.159 li
211.438 544.599 li
210.654 544.599 li
cp
f
211.438 550.159 mo
212.221 550.159 li
212.221 531.89 li
211.438 531.89 li
cp
f
212.221 550.159 mo
213.005 550.159 li
213.005 535.862 li
212.221 535.862 li
cp
f
213.005 550.159 mo
213.788 550.159 li
213.788 544.599 li
213.005 544.599 li
cp
f
213.788 550.159 mo
214.572 550.159 li
214.572 546.187 li
213.788 546.187 li
cp
f
214.572 550.159 mo
215.355 550.159 li
215.355 546.187 li
214.572 546.187 li
cp
f
215.355 550.159 mo
216.139 550.159 li
216.139 545.393 li
215.355 545.393 li
cp
f
216.139 550.159 mo
216.922 550.159 li
216.922 545.393 li
216.139 545.393 li
cp
f
216.922 550.159 mo
217.706 550.159 li
217.706 531.098 li
216.922 531.098 li
cp
f
217.706 550.159 mo
218.489 550.159 li
218.489 536.656 li
217.706 536.656 li
cp
f
218.489 550.159 mo
219.273 550.159 li
219.273 546.187 li
218.489 546.187 li
cp
f
219.273 550.159 mo
220.056 550.159 li
220.056 546.187 li
219.273 546.187 li
cp
f
220.056 550.159 mo
220.84 550.159 li
220.84 547.776 li
220.056 547.776 li
cp
f
220.84 550.159 mo
221.623 550.159 li
221.623 536.656 li
220.84 536.656 li
cp
f
221.623 550.159 mo
222.406 550.159 li
222.406 539.04 li
221.623 539.04 li
cp
f
222.406 550.159 mo
223.19 550.159 li
223.19 540.627 li
222.406 540.627 li
cp
f
223.19 550.159 mo
223.973 550.159 li
223.973 543.012 li
223.19 543.012 li
cp
f
223.973 550.159 mo
224.757 550.159 li
224.757 521.565 li
223.973 521.565 li
cp
f
224.757 550.159 mo
225.54 550.159 li
225.54 532.685 li
224.757 532.685 li
cp
f
225.54 550.159 mo
226.324 550.159 li
226.324 546.983 li
225.54 546.983 li
cp
f
226.324 550.159 mo
227.107 550.159 li
227.107 545.393 li
226.324 545.393 li
cp
f
227.107 550.159 mo
227.891 550.159 li
227.891 531.098 li
227.107 531.098 li
cp
0 0 0 1 cmyk
f
227.891 550.159 mo
228.674 550.159 li
228.674 531.098 li
227.891 531.098 li
cp
f
228.674 550.159 mo
229.458 550.159 li
229.458 536.656 li
228.674 536.656 li
cp
.875 .247 1 .133 cmyk
f
229.458 550.159 mo
230.241 550.159 li
230.241 536.656 li
229.458 536.656 li
cp
f
230.241 550.159 mo
231.025 550.159 li
231.025 542.216 li
230.241 542.216 li
cp
f
231.025 550.159 mo
231.808 550.159 li
231.808 545.393 li
231.025 545.393 li
cp
f
231.808 550.159 mo
232.592 550.159 li
232.592 545.393 li
231.808 545.393 li
cp
f
232.592 550.159 mo
233.375 550.159 li
233.375 543.804 li
232.592 543.804 li
cp
f
233.375 550.159 mo
234.159 550.159 li
234.159 548.57 li
233.375 548.57 li
cp
f
234.159 550.159 mo
234.942 550.159 li
234.942 546.983 li
234.159 546.983 li
cp
f
234.942 550.159 mo
235.726 550.159 li
235.726 544.599 li
234.942 544.599 li
cp
f
235.726 550.159 mo
236.509 550.159 li
236.509 545.393 li
235.726 545.393 li
cp
f
236.509 550.159 mo
237.293 550.159 li
237.293 545.393 li
236.509 545.393 li
cp
f
237.293 550.159 mo
238.076 550.159 li
238.076 545.393 li
237.293 545.393 li
cp
f
238.076 550.159 mo
238.86 550.159 li
238.86 546.983 li
238.076 546.983 li
cp
f
238.86 550.159 mo
239.643 550.159 li
239.643 548.57 li
238.86 548.57 li
cp
f
239.643 550.159 mo
240.427 550.159 li
240.427 548.57 li
239.643 548.57 li
cp
f
240.426 550.159 mo
241.21 550.159 li
241.21 548.57 li
240.426 548.57 li
cp
f
241.21 550.159 mo
241.993 550.159 li
241.993 548.57 li
241.21 548.57 li
cp
f
241.993 550.159 mo
242.777 550.159 li
242.777 543.804 li
241.993 543.804 li
cp
f
242.777 550.159 mo
243.56 550.159 li
243.56 543.012 li
242.777 543.012 li
cp
f
244.344 550.159 mo
245.127 550.159 li
245.127 548.57 li
244.344 548.57 li
cp
f
245.127 550.159 mo
245.911 550.159 li
245.911 536.656 li
245.127 536.656 li
cp
f
246.694 550.159 mo
247.478 550.159 li
247.478 536.656 li
246.694 536.656 li
cp
f
247.478 550.159 mo
248.261 550.159 li
248.261 536.656 li
247.478 536.656 li
cp
f
248.261 550.159 mo
249.045 550.159 li
249.045 545.393 li
248.261 545.393 li
cp
f
249.045 550.159 mo
249.828 550.159 li
249.828 546.983 li
249.045 546.983 li
cp
f
249.828 550.159 mo
250.612 550.159 li
250.612 546.983 li
249.828 546.983 li
cp
f
251.395 550.159 mo
252.179 550.159 li
252.179 546.983 li
251.395 546.983 li
cp
f
252.179 550.159 mo
252.962 550.159 li
252.962 545.393 li
252.179 545.393 li
cp
f
252.962 550.159 mo
253.746 550.159 li
253.746 535.069 li
252.962 535.069 li
cp
f
253.746 550.159 mo
254.529 550.159 li
254.529 536.656 li
253.746 536.656 li
cp
f
254.529 550.159 mo
255.313 550.159 li
255.313 546.983 li
254.529 546.983 li
cp
f
255.313 550.159 mo
256.096 550.159 li
256.096 547.776 li
255.313 547.776 li
cp
f
256.096 550.159 mo
256.88 550.159 li
256.88 547.776 li
256.096 547.776 li
cp
f
256.88 550.159 mo
257.663 550.159 li
257.663 547.776 li
256.88 547.776 li
cp
f
257.663 550.159 mo
258.447 550.159 li
258.447 547.776 li
257.663 547.776 li
cp
f
258.447 550.159 mo
259.23 550.159 li
259.23 546.983 li
258.447 546.983 li
cp
f
259.23 550.159 mo
260.013 550.159 li
260.013 546.983 li
259.23 546.983 li
cp
f
260.013 550.159 mo
260.797 550.159 li
260.797 546.187 li
260.013 546.187 li
cp
f
260.797 550.159 mo
261.58 550.159 li
261.58 545.393 li
260.797 545.393 li
cp
f
261.58 550.159 mo
262.364 550.159 li
262.364 539.833 li
261.58 539.833 li
cp
f
262.364 550.159 mo
263.147 550.159 li
263.147 539.833 li
262.364 539.833 li
cp
f
263.147 550.159 mo
263.931 550.159 li
263.931 548.57 li
263.147 548.57 li
cp
f
263.931 550.159 mo
264.714 550.159 li
264.714 516.799 li
263.931 516.799 li
cp
0 0 0 1 cmyk
f
264.714 550.159 mo
265.498 550.159 li
265.498 516.799 li
264.714 516.799 li
cp
f
265.498 550.159 mo
266.281 550.159 li
266.281 543.804 li
265.498 543.804 li
cp
.875 .247 1 .133 cmyk
f
266.281 550.159 mo
267.065 550.159 li
267.065 548.57 li
266.281 548.57 li
cp
f
267.848 550.159 mo
268.632 550.159 li
268.632 546.983 li
267.848 546.983 li
cp
f
268.632 550.159 mo
269.415 550.159 li
269.415 546.983 li
268.632 546.983 li
cp
f
269.415 550.159 mo
270.199 550.159 li
270.199 548.57 li
269.415 548.57 li
cp
f
270.199 550.159 mo
270.982 550.159 li
270.982 548.57 li
270.199 548.57 li
cp
f
270.982 550.159 mo
271.766 550.159 li
271.766 540.627 li
270.982 540.627 li
cp
f
271.766 550.159 mo
272.549 550.159 li
272.549 539.04 li
271.766 539.04 li
cp
f
272.549 550.159 mo
273.333 550.159 li
273.333 539.04 li
272.549 539.04 li
cp
f
273.333 550.159 mo
274.116 550.159 li
274.116 544.599 li
273.333 544.599 li
cp
f
274.116 550.159 mo
274.9 550.159 li
274.9 538.244 li
274.116 538.244 li
cp
f
274.9 550.159 mo
275.683 550.159 li
275.683 539.833 li
274.9 539.833 li
cp
f
275.683 550.159 mo
276.466 550.159 li
276.466 530.302 li
275.683 530.302 li
cp
f
276.467 550.159 mo
277.25 550.159 li
277.25 530.302 li
276.467 530.302 li
cp
f
277.25 550.159 mo
278.033 550.159 li
278.033 543.012 li
277.25 543.012 li
cp
f
278.034 550.159 mo
278.817 550.159 li
278.817 543.012 li
278.034 543.012 li
cp
f
278.817 550.159 mo
279.6 550.159 li
279.6 546.983 li
278.817 546.983 li
cp
f
279.6 550.159 mo
280.384 550.159 li
280.384 543.804 li
279.6 543.804 li
cp
f
280.384 550.159 mo
281.167 550.159 li
281.167 547.776 li
280.384 547.776 li
cp
f
281.167 550.159 mo
281.951 550.159 li
281.951 503.298 li
281.167 503.298 li
cp
f
281.951 550.159 mo
282.734 550.159 li
282.734 504.885 li
281.951 504.885 li
cp
f
282.734 550.159 mo
283.518 550.159 li
283.518 543.012 li
282.734 543.012 li
cp
f
283.518 550.159 mo
284.301 550.159 li
284.301 543.012 li
283.518 543.012 li
cp
f
284.301 550.159 mo
285.085 550.159 li
285.085 548.57 li
284.301 548.57 li
cp
f
285.085 550.159 mo
285.868 550.159 li
285.868 548.57 li
285.085 548.57 li
cp
f
285.868 550.159 mo
286.652 550.159 li
286.652 530.302 li
285.868 530.302 li
cp
f
286.652 550.159 mo
287.435 550.159 li
287.435 531.89 li
286.652 531.89 li
cp
f
287.435 550.159 mo
288.219 550.159 li
288.219 545.393 li
287.435 545.393 li
cp
f
288.219 550.159 mo
289.002 550.159 li
289.002 540.627 li
288.219 540.627 li
cp
f
289.002 550.159 mo
289.786 550.159 li
289.786 540.627 li
289.002 540.627 li
cp
f
289.786 550.159 mo
290.569 550.159 li
290.569 532.685 li
289.786 532.685 li
cp
f
290.569 550.159 mo
291.353 550.159 li
291.353 543.804 li
290.569 543.804 li
cp
f
291.353 550.159 mo
292.136 550.159 li
292.136 541.422 li
291.353 541.422 li
cp
f
292.136 550.159 mo
292.92 550.159 li
292.92 547.776 li
292.136 547.776 li
cp
f
292.92 550.159 mo
293.703 550.159 li
293.703 545.393 li
292.92 545.393 li
cp
f
293.703 550.159 mo
294.487 550.159 li
294.487 545.393 li
293.703 545.393 li
cp
f
294.487 550.159 mo
295.27 550.159 li
295.27 546.983 li
294.487 546.983 li
cp
f
295.27 550.159 mo
296.053 550.159 li
296.053 540.627 li
295.27 540.627 li
cp
f
296.053 550.159 mo
296.837 550.159 li
296.837 540.627 li
296.053 540.627 li
cp
f
296.837 550.159 mo
297.62 550.159 li
297.62 547.776 li
296.837 547.776 li
cp
f
297.621 550.159 mo
298.404 550.159 li
298.404 547.776 li
297.621 547.776 li
cp
f
298.404 550.159 mo
299.187 550.159 li
299.187 545.393 li
298.404 545.393 li
cp
f
299.187 550.159 mo
299.971 550.159 li
299.971 547.776 li
299.187 547.776 li
cp
f
299.971 550.159 mo
300.754 550.159 li
300.754 527.919 li
299.971 527.919 li
cp
f
300.754 550.159 mo
301.538 550.159 li
301.538 523.948 li
300.754 523.948 li
cp
f
301.538 550.159 mo
302.321 550.159 li
302.321 545.393 li
301.538 545.393 li
cp
f
302.321 550.159 mo
303.105 550.159 li
303.105 546.983 li
302.321 546.983 li
cp
f
303.105 550.159 mo
303.888 550.159 li
303.888 546.187 li
303.105 546.187 li
cp
f
303.888 550.159 mo
304.672 550.159 li
304.672 545.393 li
303.888 545.393 li
cp
f
304.672 550.159 mo
305.455 550.159 li
305.455 545.393 li
304.672 545.393 li
cp
f
305.455 550.159 mo
306.239 550.159 li
306.239 546.983 li
305.455 546.983 li
cp
f
306.239 550.159 mo
307.022 550.159 li
307.022 534.273 li
306.239 534.273 li
cp
f
307.022 550.159 mo
307.806 550.159 li
307.806 534.273 li
307.022 534.273 li
cp
f
307.806 550.159 mo
308.589 550.159 li
308.589 539.04 li
307.806 539.04 li
cp
f
308.589 550.159 mo
309.373 550.159 li
309.373 547.776 li
308.589 547.776 li
cp
f
309.373 550.159 mo
310.156 550.159 li
310.156 543.804 li
309.373 543.804 li
cp
f
310.156 550.159 mo
310.94 550.159 li
310.94 478.674 li
310.156 478.674 li
cp
0 0 0 1 cmyk
f
310.94 550.159 mo
311.723 550.159 li
311.723 478.674 li
310.94 478.674 li
cp
f
311.723 550.159 mo
312.507 550.159 li
312.507 546.983 li
311.723 546.983 li
cp
.875 .247 1 .133 cmyk
f
312.507 550.159 mo
313.29 550.159 li
313.29 546.983 li
312.507 546.983 li
cp
f
313.29 550.159 mo
314.073 550.159 li
314.073 546.187 li
313.29 546.187 li
cp
f
314.073 550.159 mo
314.857 550.159 li
314.857 543.012 li
314.073 543.012 li
cp
f
315.64 550.159 mo
316.424 550.159 li
316.424 543.012 li
315.64 543.012 li
cp
f
316.424 550.159 mo
317.207 550.159 li
317.207 543.012 li
316.424 543.012 li
cp
f
317.207 550.159 mo
317.991 550.159 li
317.991 537.45 li
317.207 537.45 li
cp
f
317.991 550.159 mo
318.774 550.159 li
318.774 537.45 li
317.991 537.45 li
cp
f
318.774 550.159 mo
319.558 550.159 li
319.558 546.983 li
318.774 546.983 li
cp
f
319.558 550.159 mo
320.341 550.159 li
320.341 548.57 li
319.558 548.57 li
cp
f
320.341 550.159 mo
321.125 550.159 li
321.125 546.983 li
320.341 546.983 li
cp
f
321.125 550.159 mo
321.908 550.159 li
321.908 537.45 li
321.125 537.45 li
cp
f
321.908 550.159 mo
322.692 550.159 li
322.692 540.627 li
321.908 540.627 li
cp
f
322.692 550.159 mo
323.475 550.159 li
323.475 547.776 li
322.692 547.776 li
cp
f
323.475 550.159 mo
324.259 550.159 li
324.259 548.57 li
323.475 548.57 li
cp
f
324.259 550.159 mo
325.042 550.159 li
325.042 547.776 li
324.259 547.776 li
cp
f
325.042 550.159 mo
325.826 550.159 li
325.826 545.393 li
325.042 545.393 li
cp
f
325.826 550.159 mo
326.609 550.159 li
326.609 546.983 li
325.826 546.983 li
cp
f
326.609 550.159 mo
327.393 550.159 li
327.393 546.983 li
326.609 546.983 li
cp
f
327.393 550.159 mo
328.176 550.159 li
328.176 543.804 li
327.393 543.804 li
cp
f
328.176 550.159 mo
328.96 550.159 li
328.96 543.804 li
328.176 543.804 li
cp
f
328.96 550.159 mo
329.743 550.159 li
329.743 543.012 li
328.96 543.012 li
cp
f
329.743 550.159 mo
330.527 550.159 li
330.527 544.599 li
329.743 544.599 li
cp
f
330.527 550.159 mo
331.31 550.159 li
331.31 547.776 li
330.527 547.776 li
cp
f
331.31 550.159 mo
332.093 550.159 li
332.093 542.216 li
331.31 542.216 li
cp
f
332.094 550.159 mo
332.877 550.159 li
332.877 542.216 li
332.094 542.216 li
cp
f
332.877 550.159 mo
333.66 550.159 li
333.66 536.656 li
332.877 536.656 li
cp
f
333.66 550.159 mo
334.444 550.159 li
334.444 536.656 li
333.66 536.656 li
cp
f
334.444 550.159 mo
335.227 550.159 li
335.227 548.57 li
334.444 548.57 li
cp
f
335.227 550.159 mo
336.011 550.159 li
336.011 535.862 li
335.227 535.862 li
cp
f
336.011 550.159 mo
336.794 550.159 li
336.794 517.593 li
336.011 517.593 li
cp
f
336.794 550.159 mo
337.578 550.159 li
337.578 534.273 li
336.794 534.273 li
cp
f
337.578 550.159 mo
338.361 550.159 li
338.361 539.04 li
337.578 539.04 li
cp
f
338.361 550.159 mo
339.145 550.159 li
339.145 472.32 li
338.361 472.32 li
cp
f
339.145 550.159 mo
339.928 550.159 li
339.928 472.32 li
339.145 472.32 li
cp
f
339.928 550.159 mo
340.712 550.159 li
340.712 543.804 li
339.928 543.804 li
cp
f
340.712 550.159 mo
341.495 550.159 li
341.495 543.804 li
340.712 543.804 li
cp
f
341.495 550.159 mo
342.279 550.159 li
342.279 548.57 li
341.495 548.57 li
cp
f
343.062 550.159 mo
343.846 550.159 li
343.846 535.069 li
343.062 535.069 li
cp
f
343.846 550.159 mo
344.629 550.159 li
344.629 535.069 li
343.846 535.069 li
cp
f
344.629 550.159 mo
345.413 550.159 li
345.413 543.804 li
344.629 543.804 li
cp
f
345.413 550.159 mo
346.196 550.159 li
346.196 546.983 li
345.413 546.983 li
cp
f
346.196 550.159 mo
346.98 550.159 li
346.98 542.216 li
346.196 542.216 li
cp
f
346.98 550.159 mo
347.763 550.159 li
347.763 534.273 li
346.98 534.273 li
cp
f
347.763 550.159 mo
348.547 550.159 li
348.547 531.098 li
347.763 531.098 li
cp
f
348.547 550.159 mo
349.33 550.159 li
349.33 546.983 li
348.547 546.983 li
cp
f
349.33 550.159 mo
350.113 550.159 li
350.113 546.187 li
349.33 546.187 li
cp
f
350.113 550.159 mo
350.897 550.159 li
350.897 546.983 li
350.113 546.983 li
cp
f
350.897 550.159 mo
351.68 550.159 li
351.68 526.33 li
350.897 526.33 li
cp
f
351.681 550.159 mo
352.464 550.159 li
352.464 546.187 li
351.681 546.187 li
cp
f
352.464 550.159 mo
353.247 550.159 li
353.247 546.187 li
352.464 546.187 li
cp
f
353.247 550.159 mo
354.031 550.159 li
354.031 546.187 li
353.247 546.187 li
cp
f
354.031 550.159 mo
354.814 550.159 li
354.814 548.57 li
354.031 548.57 li
cp
f
354.814 550.159 mo
355.598 550.159 li
355.598 543.012 li
354.814 543.012 li
cp
f
355.598 550.159 mo
356.381 550.159 li
356.381 538.244 li
355.598 538.244 li
cp
f
356.381 550.159 mo
357.165 550.159 li
357.165 537.45 li
356.381 537.45 li
cp
f
357.165 550.159 mo
357.948 550.159 li
357.948 548.57 li
357.165 548.57 li
cp
f
357.948 550.159 mo
358.732 550.159 li
358.732 547.776 li
357.948 547.776 li
cp
f
358.732 550.159 mo
359.515 550.159 li
359.515 531.098 li
358.732 531.098 li
cp
f
359.515 550.159 mo
360.299 550.159 li
360.299 547.776 li
359.515 547.776 li
cp
f
360.299 550.159 mo
361.082 550.159 li
361.082 547.776 li
360.299 547.776 li
cp
f
361.082 550.159 mo
361.866 550.159 li
361.866 548.57 li
361.082 548.57 li
cp
f
362.649 550.159 mo
363.433 550.159 li
363.433 548.57 li
362.649 548.57 li
cp
f
363.433 550.159 mo
364.216 550.159 li
364.216 541.422 li
363.433 541.422 li
cp
f
365 550.159 mo
365.783 550.159 li
365.783 522.359 li
365 522.359 li
cp
f
365.783 550.159 mo
366.567 550.159 li
366.567 537.45 li
365.783 537.45 li
cp
f
366.567 550.159 mo
367.35 550.159 li
367.35 547.776 li
366.567 547.776 li
cp
f
367.35 550.159 mo
368.133 550.159 li
368.133 542.216 li
367.35 542.216 li
cp
f
368.134 550.159 mo
368.917 550.159 li
368.917 542.216 li
368.134 542.216 li
cp
f
368.917 550.159 mo
369.7 550.159 li
369.7 536.656 li
368.917 536.656 li
cp
f
369.701 550.159 mo
370.484 550.159 li
370.484 546.983 li
369.701 546.983 li
cp
f
370.484 550.159 mo
371.267 550.159 li
371.267 542.216 li
370.484 542.216 li
cp
f
371.267 550.159 mo
372.051 550.159 li
372.051 545.393 li
371.267 545.393 li
cp
f
372.051 550.159 mo
372.834 550.159 li
372.834 548.57 li
372.051 548.57 li
cp
f
372.834 550.159 mo
373.618 550.159 li
373.618 513.622 li
372.834 513.622 li
cp
f
373.618 550.159 mo
374.401 550.159 li
374.401 547.776 li
373.618 547.776 li
cp
f
374.401 550.159 mo
375.185 550.159 li
375.185 543.804 li
374.401 543.804 li
cp
f
375.185 550.159 mo
375.968 550.159 li
375.968 543.804 li
375.185 543.804 li
cp
f
375.968 550.159 mo
376.752 550.159 li
376.752 532.685 li
375.968 532.685 li
cp
f
376.752 550.159 mo
377.535 550.159 li
377.535 532.685 li
376.752 532.685 li
cp
f
377.535 550.159 mo
378.319 550.159 li
378.319 539.04 li
377.535 539.04 li
cp
f
378.319 550.159 mo
379.102 550.159 li
379.102 538.244 li
378.319 538.244 li
cp
f
379.102 550.159 mo
379.886 550.159 li
379.886 538.244 li
379.102 538.244 li
cp
f
379.886 550.159 mo
380.669 550.159 li
380.669 543.012 li
379.886 543.012 li
cp
f
380.669 550.159 mo
381.453 550.159 li
381.453 543.012 li
380.669 543.012 li
cp
f
381.453 550.159 mo
382.236 550.159 li
382.236 545.393 li
381.453 545.393 li
cp
f
382.236 550.159 mo
383.02 550.159 li
383.02 546.187 li
382.236 546.187 li
cp
f
383.02 550.159 mo
383.803 550.159 li
383.803 543.012 li
383.02 543.012 li
cp
f
383.803 550.159 mo
384.587 550.159 li
384.587 545.393 li
383.803 545.393 li
cp
f
384.586 550.159 mo
385.37 550.159 li
385.37 534.273 li
384.586 534.273 li
cp
f
385.37 550.159 mo
386.153 550.159 li
386.153 535.862 li
385.37 535.862 li
cp
f
386.154 550.159 mo
386.937 550.159 li
386.937 546.983 li
386.154 546.983 li
cp
f
386.937 550.159 mo
387.72 550.159 li
387.72 531.89 li
386.937 531.89 li
cp
f
387.72 550.159 mo
388.504 550.159 li
388.504 536.656 li
387.72 536.656 li
cp
f
388.504 550.159 mo
389.287 550.159 li
389.287 547.776 li
388.504 547.776 li
cp
f
389.287 550.159 mo
390.071 550.159 li
390.071 546.187 li
389.287 546.187 li
cp
f
390.071 550.159 mo
390.854 550.159 li
390.854 548.57 li
390.071 548.57 li
cp
f
390.854 550.159 mo
391.638 550.159 li
391.638 546.983 li
390.854 546.983 li
cp
f
391.638 550.159 mo
392.421 550.159 li
392.421 546.983 li
391.638 546.983 li
cp
f
392.421 550.159 mo
393.205 550.159 li
393.205 546.187 li
392.421 546.187 li
cp
f
393.205 550.159 mo
393.988 550.159 li
393.988 546.187 li
393.205 546.187 li
cp
f
393.988 550.159 mo
394.772 550.159 li
394.772 543.804 li
393.988 543.804 li
cp
f
394.772 550.159 mo
395.555 550.159 li
395.555 538.244 li
394.772 538.244 li
cp
f
395.555 550.159 mo
396.339 550.159 li
396.339 534.273 li
395.555 534.273 li
cp
f
396.339 550.159 mo
397.122 550.159 li
397.122 534.273 li
396.339 534.273 li
cp
f
397.122 550.159 mo
397.906 550.159 li
397.906 539.833 li
397.122 539.833 li
cp
f
397.906 550.159 mo
398.689 550.159 li
398.689 540.627 li
397.906 540.627 li
cp
f
398.689 550.159 mo
399.473 550.159 li
399.473 539.833 li
398.689 539.833 li
cp
f
399.473 550.159 mo
400.256 550.159 li
400.256 548.57 li
399.473 548.57 li
cp
f
400.256 550.159 mo
401.04 550.159 li
401.04 547.776 li
400.256 547.776 li
cp
f
401.04 550.159 mo
401.823 550.159 li
401.823 543.012 li
401.04 543.012 li
cp
f
402.607 550.159 mo
403.39 550.159 li
403.39 544.599 li
402.607 544.599 li
cp
f
403.39 550.159 mo
404.173 550.159 li
404.173 545.393 li
403.39 545.393 li
cp
f
404.173 550.159 mo
404.957 550.159 li
404.957 548.57 li
404.173 548.57 li
cp
f
404.957 550.159 mo
405.74 550.159 li
405.74 533.479 li
404.957 533.479 li
cp
f
405.741 550.159 mo
406.524 550.159 li
406.524 525.536 li
405.741 525.536 li
cp
f
406.524 550.159 mo
407.307 550.159 li
407.307 545.393 li
406.524 545.393 li
cp
f
407.307 550.159 mo
408.091 550.159 li
408.091 545.393 li
407.307 545.393 li
cp
f
408.091 550.159 mo
408.874 550.159 li
408.874 543.012 li
408.091 543.012 li
cp
f
408.874 550.159 mo
409.658 550.159 li
409.658 533.479 li
408.874 533.479 li
cp
f
409.658 550.159 mo
410.441 550.159 li
410.441 546.187 li
409.658 546.187 li
cp
f
410.441 550.159 mo
411.225 550.159 li
411.225 539.04 li
410.441 539.04 li
cp
f
411.225 550.159 mo
412.008 550.159 li
412.008 539.04 li
411.225 539.04 li
cp
f
412.008 550.159 mo
412.792 550.159 li
412.792 546.187 li
412.008 546.187 li
cp
f
412.792 550.159 mo
413.575 550.159 li
413.575 548.57 li
412.792 548.57 li
cp
f
413.575 550.159 mo
414.359 550.159 li
414.359 527.919 li
413.575 527.919 li
cp
f
414.359 550.159 mo
415.142 550.159 li
415.142 531.89 li
414.359 531.89 li
cp
f
415.142 550.159 mo
415.926 550.159 li
415.926 546.187 li
415.142 546.187 li
cp
f
415.926 550.159 mo
416.709 550.159 li
416.709 533.479 li
415.926 533.479 li
cp
f
416.709 550.159 mo
417.493 550.159 li
417.493 545.393 li
416.709 545.393 li
cp
f
417.493 550.159 mo
418.276 550.159 li
418.276 548.57 li
417.493 548.57 li
cp
f
418.276 550.159 mo
419.06 550.159 li
419.06 548.57 li
418.276 548.57 li
cp
f
419.06 550.159 mo
419.843 550.159 li
419.843 548.57 li
419.06 548.57 li
cp
f
419.843 550.159 mo
420.625 550.159 li
420.625 548.57 li
419.843 548.57 li
cp
f
421.41 550.159 mo
422.192 550.159 li
422.192 538.244 li
421.41 538.244 li
cp
f
422.192 550.159 mo
422.979 550.159 li
422.979 521.565 li
422.192 521.565 li
cp
f
422.979 550.159 mo
423.761 550.159 li
423.761 543.012 li
422.979 543.012 li
cp
f
423.76 550.159 mo
424.542 550.159 li
424.542 529.507 li
423.76 529.507 li
cp
f
424.542 550.159 mo
425.327 550.159 li
425.327 531.89 li
424.542 531.89 li
cp
f
425.328 550.159 mo
426.109 550.159 li
426.109 544.599 li
425.328 544.599 li
cp
f
426.109 550.159 mo
426.896 550.159 li
426.896 544.599 li
426.109 544.599 li
cp
f
426.896 550.159 mo
427.678 550.159 li
427.678 528.713 li
426.896 528.713 li
cp
f
427.678 550.159 mo
428.46 550.159 li
428.46 528.713 li
427.678 528.713 li
cp
f
428.46 550.159 mo
429.245 550.159 li
429.245 546.983 li
428.46 546.983 li
cp
f
429.245 550.159 mo
430.027 550.159 li
430.027 543.012 li
429.245 543.012 li
cp
f
430.027 550.159 mo
430.814 550.159 li
430.814 539.833 li
430.027 539.833 li
cp
f
430.814 550.159 mo
431.595 550.159 li
431.595 520.77 li
430.814 520.77 li
cp
0 0 0 1 cmyk
f
431.595 550.159 mo
432.377 550.159 li
432.377 520.77 li
431.595 520.77 li
cp
f
432.377 550.159 mo
433.162 550.159 li
433.162 547.776 li
432.377 547.776 li
cp
.875 .247 1 .133 cmyk
f
433.162 550.159 mo
433.944 550.159 li
433.944 547.776 li
433.162 547.776 li
cp
f
433.944 550.159 mo
434.731 550.159 li
434.731 547.776 li
433.944 547.776 li
cp
f
435.513 550.159 mo
436.294 550.159 li
436.294 544.599 li
435.513 544.599 li
cp
f
436.294 550.159 mo
437.08 550.159 li
437.08 544.599 li
436.294 544.599 li
cp
f
437.08 550.159 mo
437.861 550.159 li
437.861 538.244 li
437.08 538.244 li
cp
f
437.861 550.159 mo
438.648 550.159 li
438.648 538.244 li
437.861 538.244 li
cp
f
438.648 550.159 mo
439.43 550.159 li
439.43 543.804 li
438.648 543.804 li
cp
f
439.43 550.159 mo
440.212 550.159 li
440.212 546.187 li
439.43 546.187 li
cp
f
440.212 550.159 mo
440.997 550.159 li
440.997 483.441 li
440.212 483.441 li
cp
f
440.997 550.159 mo
441.779 550.159 li
441.779 546.983 li
440.997 546.983 li
cp
f
441.779 550.159 mo
442.566 550.159 li
442.566 528.713 li
441.779 528.713 li
cp
f
442.566 550.159 mo
443.347 550.159 li
443.347 527.919 li
442.566 527.919 li
cp
f
443.347 550.159 mo
444.129 550.159 li
444.129 539.04 li
443.347 539.04 li
cp
f
444.129 550.159 mo
444.914 550.159 li
444.914 546.187 li
444.129 546.187 li
cp
f
444.914 550.159 mo
445.696 550.159 li
445.696 536.656 li
444.914 536.656 li
cp
f
445.696 550.159 mo
446.483 550.159 li
446.483 538.244 li
445.696 538.244 li
cp
f
446.483 550.159 mo
447.265 550.159 li
447.265 544.599 li
446.483 544.599 li
cp
f
447.265 550.159 mo
448.047 550.159 li
448.047 544.599 li
447.265 544.599 li
cp
f
448.047 550.159 mo
448.832 550.159 li
448.832 547.776 li
448.047 547.776 li
cp
f
448.832 550.159 mo
449.614 550.159 li
449.614 546.187 li
448.832 546.187 li
cp
f
449.613 550.159 mo
450.4 550.159 li
450.4 546.983 li
449.613 546.983 li
cp
f
450.401 550.159 mo
451.182 550.159 li
451.182 538.244 li
450.401 538.244 li
cp
f
451.182 550.159 mo
451.964 550.159 li
451.964 543.804 li
451.182 543.804 li
cp
f
451.964 550.159 mo
452.749 550.159 li
452.749 546.983 li
451.964 546.983 li
cp
f
452.749 550.159 mo
453.531 550.159 li
453.531 546.983 li
452.749 546.983 li
cp
f
455.1 550.159 mo
455.881 550.159 li
455.881 547.776 li
455.1 547.776 li
cp
f
456.667 550.159 mo
457.448 550.159 li
457.448 546.983 li
456.667 546.983 li
cp
f
457.448 550.159 mo
458.235 550.159 li
458.235 518.388 li
457.448 518.388 li
cp
f
459.017 550.159 mo
459.799 550.159 li
459.799 547.776 li
459.017 547.776 li
cp
f
459.799 550.159 mo
460.584 550.159 li
460.584 546.187 li
459.799 546.187 li
cp
f
460.584 550.159 mo
461.366 550.159 li
461.366 545.393 li
460.584 545.393 li
cp
f
461.366 550.159 mo
462.153 550.159 li
462.153 543.012 li
461.366 543.012 li
cp
f
462.153 550.159 mo
462.934 550.159 li
462.934 546.983 li
462.153 546.983 li
cp
f
462.934 550.159 mo
463.716 550.159 li
463.716 545.393 li
462.934 545.393 li
cp
f
463.716 550.159 mo
464.501 550.159 li
464.501 548.57 li
463.716 548.57 li
cp
f
464.501 550.159 mo
465.283 550.159 li
465.283 548.57 li
464.501 548.57 li
cp
f
465.283 550.159 mo
466.07 550.159 li
466.07 546.983 li
465.283 546.983 li
cp
f
480.953 550.159 mo
481.74 550.159 li
481.74 548.57 li
480.953 548.57 li
cp
f
481.74 550.159 mo
482.521 550.159 li
482.521 548.57 li
481.74 548.57 li
cp
f
488.787 550.159 mo
489.574 550.159 li
489.574 547.776 li
488.787 547.776 li
cp
f
489.574 550.159 mo
490.356 550.159 li
490.356 547.776 li
489.574 547.776 li
cp
f
490.356 550.159 mo
491.138 550.159 li
491.138 547.776 li
490.356 547.776 li
cp
f
491.138 550.159 mo
491.923 550.159 li
491.923 547.776 li
491.138 547.776 li
cp
f
502.89 550.159 mo
503.675 550.159 li
503.675 548.57 li
502.89 548.57 li
cp
f
506.026 550.159 mo
506.807 550.159 li
506.807 546.187 li
506.026 546.187 li
cp
f
506.807 550.159 mo
507.593 550.159 li
507.593 546.187 li
506.807 546.187 li
cp
f
508.374 550.159 mo
509.161 550.159 li
509.161 536.656 li
508.374 536.656 li
cp
f
509.161 550.159 mo
509.943 550.159 li
509.943 536.656 li
509.161 536.656 li
cp
f
509.943 550.159 mo
510.725 550.159 li
510.725 525.536 li
509.943 525.536 li
cp
f
510.725 550.159 mo
511.51 550.159 li
511.51 539.833 li
510.725 539.833 li
cp
f
511.51 550.159 mo
512.292 550.159 li
512.292 546.187 li
511.51 546.187 li
cp
f
512.292 550.159 mo
513.079 550.159 li
513.079 541.422 li
512.292 541.422 li
cp
f
513.079 550.159 mo
513.861 550.159 li
513.861 541.422 li
513.079 541.422 li
cp
f
513.86 550.159 mo
514.642 550.159 li
514.642 546.983 li
513.86 546.983 li
cp
f
514.642 550.159 mo
515.427 550.159 li
515.427 540.627 li
514.642 540.627 li
cp
f
515.427 550.159 mo
516.209 550.159 li
516.209 504.885 li
515.427 504.885 li
cp
f
516.209 550.159 mo
516.996 550.159 li
516.996 504.091 li
516.209 504.091 li
cp
f
516.996 550.159 mo
517.778 550.159 li
517.778 543.804 li
516.996 543.804 li
cp
f
517.778 550.159 mo
518.56 550.159 li
518.56 543.804 li
517.778 543.804 li
cp
f
518.56 550.159 mo
519.345 550.159 li
519.345 546.187 li
518.56 546.187 li
cp
f
519.345 550.159 mo
520.127 550.159 li
520.127 546.187 li
519.345 546.187 li
cp
f
520.127 550.159 mo
520.914 550.159 li
520.914 546.187 li
520.127 546.187 li
cp
f
520.914 550.159 mo
521.695 550.159 li
521.695 548.57 li
520.914 548.57 li
cp
f
521.695 550.159 mo
522.477 550.159 li
522.477 543.804 li
521.695 543.804 li
cp
f
522.477 550.159 mo
523.262 550.159 li
523.262 541.422 li
522.477 541.422 li
cp
f
523.262 550.159 mo
524.044 550.159 li
524.044 519.184 li
523.262 519.184 li
cp
0 0 0 1 cmyk
f
524.044 550.159 mo
524.831 550.159 li
524.831 519.184 li
524.044 519.184 li
cp
f
524.831 550.159 mo
525.613 550.159 li
525.613 535.069 li
524.831 535.069 li
cp
.875 .247 1 .133 cmyk
f
525.613 550.159 mo
526.394 550.159 li
526.394 545.393 li
525.613 545.393 li
cp
f
526.394 550.159 mo
527.18 550.159 li
527.18 546.983 li
526.394 546.983 li
cp
f
527.18 550.159 mo
527.961 550.159 li
527.961 535.069 li
527.18 535.069 li
cp
f
527.961 550.159 mo
528.748 550.159 li
528.748 544.599 li
527.961 544.599 li
cp
f
528.748 550.159 mo
529.53 550.159 li
529.53 541.422 li
528.748 541.422 li
cp
f
529.53 550.159 mo
530.312 550.159 li
530.312 534.273 li
529.53 534.273 li
cp
f
530.312 550.159 mo
531.097 550.159 li
531.097 534.273 li
530.312 534.273 li
cp
f
531.097 550.159 mo
531.879 550.159 li
531.879 537.45 li
531.097 537.45 li
cp
f
531.879 550.159 mo
532.666 550.159 li
532.666 537.45 li
531.879 537.45 li
cp
f
532.666 550.159 mo
533.447 550.159 li
533.447 537.45 li
532.666 537.45 li
cp
f
533.447 550.159 mo
534.229 550.159 li
534.229 539.04 li
533.447 539.04 li
cp
f
534.229 550.159 mo
535.014 550.159 li
535.014 540.627 li
534.229 540.627 li
cp
f
535.014 550.159 mo
535.796 550.159 li
535.796 540.627 li
535.014 540.627 li
cp
f
535.796 550.159 mo
536.583 550.159 li
536.583 518.388 li
535.796 518.388 li
cp
f
536.583 550.159 mo
537.365 550.159 li
537.365 546.983 li
536.583 546.983 li
cp
f
538.147 550.159 mo
538.932 550.159 li
538.932 543.012 li
538.147 543.012 li
cp
f
538.932 550.159 mo
539.714 550.159 li
539.714 543.012 li
538.932 543.012 li
cp
f
539.714 550.159 mo
540.501 550.159 li
540.501 546.983 li
539.714 546.983 li
cp
f
540.5 550.159 mo
541.282 550.159 li
541.282 547.776 li
540.5 547.776 li
cp
f
541.282 550.159 mo
542.064 550.159 li
542.064 470.731 li
541.282 470.731 li
cp
f
542.064 550.159 mo
542.849 550.159 li
542.849 470.731 li
542.064 470.731 li
cp
f
542.849 550.159 mo
543.631 550.159 li
543.631 547.776 li
542.849 547.776 li
cp
f
543.631 550.159 mo
544.418 550.159 li
544.418 543.012 li
543.631 543.012 li
cp
f
544.418 550.159 mo
545.2 550.159 li
545.2 524.742 li
544.418 524.742 li
cp
f
545.2 550.159 mo
545.981 550.159 li
545.981 535.069 li
545.2 535.069 li
cp
f
545.981 550.159 mo
546.767 550.159 li
546.767 535.069 li
545.981 535.069 li
cp
f
546.767 550.159 mo
547.548 550.159 li
547.548 514.416 li
546.767 514.416 li
cp
f
547.548 550.159 mo
548.335 550.159 li
548.335 544.599 li
547.548 544.599 li
cp
f
548.335 550.159 mo
549.117 550.159 li
549.117 536.656 li
548.335 536.656 li
cp
f
549.117 550.159 mo
549.899 550.159 li
549.899 536.656 li
549.117 536.656 li
cp
f
549.899 550.159 mo
550.684 550.159 li
550.684 548.57 li
549.899 548.57 li
cp
f
550.684 550.159 mo
551.466 550.159 li
551.466 542.216 li
550.684 542.216 li
cp
f
551.466 550.159 mo
552.253 550.159 li
552.253 538.244 li
551.466 538.244 li
cp
f
552.253 550.159 mo
553.034 550.159 li
553.034 539.833 li
552.253 539.833 li
cp
f
553.034 550.159 mo
553.816 550.159 li
553.816 539.833 li
553.034 539.833 li
cp
f
553.816 550.159 mo
554.601 550.159 li
554.601 544.599 li
553.816 544.599 li
cp
f
555.383 550.159 mo
556.17 550.159 li
556.17 546.187 li
555.383 546.187 li
cp
f
556.17 550.159 mo
556.952 550.159 li
556.952 541.422 li
556.17 541.422 li
cp
f
556.952 550.159 mo
557.734 550.159 li
557.734 541.422 li
556.952 541.422 li
cp
f
557.734 550.159 mo
558.519 550.159 li
558.519 543.804 li
557.734 543.804 li
cp
f
558.519 550.159 mo
559.301 550.159 li
559.301 543.012 li
558.519 543.012 li
cp
f
559.3 550.159 mo
560.087 550.159 li
560.087 542.216 li
559.3 542.216 li
cp
f
560.088 550.159 mo
560.869 550.159 li
560.869 542.216 li
560.088 542.216 li
cp
f
560.869 550.159 mo
561.651 550.159 li
561.651 547.776 li
560.869 547.776 li
cp
f
561.651 550.159 mo
562.436 550.159 li
562.436 525.536 li
561.651 525.536 li
cp
f
563.218 550.159 mo
564.005 550.159 li
564.005 477.88 li
563.218 477.88 li
cp
0 0 0 1 cmyk
f
564.005 550.159 mo
564.787 550.159 li
564.787 477.88 li
564.005 477.88 li
cp
f
564.787 550.159 mo
565.568 550.159 li
565.568 545.393 li
564.787 545.393 li
cp
.875 .247 1 .133 cmyk
f
565.568 550.159 mo
566.354 550.159 li
566.354 546.983 li
565.568 546.983 li
cp
f
566.354 550.159 mo
567.135 550.159 li
567.135 548.57 li
566.354 548.57 li
cp
f
567.135 550.159 mo
567.922 550.159 li
567.922 548.57 li
567.135 548.57 li
cp
f
567.922 550.159 mo
568.704 550.159 li
568.704 548.57 li
567.922 548.57 li
cp
f
569.486 550.159 mo
570.271 550.159 li
570.271 547.776 li
569.486 547.776 li
cp
f
572.621 550.159 mo
573.403 550.159 li
573.403 546.983 li
572.621 546.983 li
cp
f
573.403 550.159 mo
574.188 550.159 li
574.188 546.983 li
573.403 546.983 li
cp
f
574.188 550.159 mo
574.97 550.159 li
574.97 548.57 li
574.188 548.57 li
cp
f
574.97 550.159 mo
575.757 550.159 li
575.757 545.393 li
574.97 545.393 li
cp
f
575.757 550.159 mo
576.539 550.159 li
576.539 548.57 li
575.757 548.57 li
cp
f
576.539 550.159 mo
577.321 550.159 li
577.321 548.57 li
576.539 548.57 li
cp
f
577.321 550.159 mo
578.106 550.159 li
578.106 546.187 li
577.321 546.187 li
cp
f
578.106 550.159 mo
578.887 550.159 li
578.887 546.187 li
578.106 546.187 li
cp
f
578.888 550.159 mo
579.674 550.159 li
579.674 547.776 li
578.888 547.776 li
cp
f
579.674 550.159 mo
580.456 550.159 li
580.456 548.57 li
579.674 548.57 li
cp
f
582.805 550.159 mo
583.592 550.159 li
583.592 548.57 li
582.805 548.57 li
cp
f
583.592 550.159 mo
584.374 550.159 li
584.374 548.57 li
583.592 548.57 li
cp
f
584.374 550.159 mo
585.155 550.159 li
585.155 548.57 li
584.374 548.57 li
cp
f
585.155 550.159 mo
585.94 550.159 li
585.94 544.599 li
585.155 544.599 li
cp
f
585.94 550.159 mo
586.722 550.159 li
586.722 544.599 li
585.94 544.599 li
cp
f
586.722 550.159 mo
587.509 550.159 li
587.509 546.187 li
586.722 546.187 li
cp
f
587.509 550.159 mo
588.291 550.159 li
588.291 544.599 li
587.509 544.599 li
cp
f
588.291 550.159 mo
589.073 550.159 li
589.073 532.685 li
588.291 532.685 li
cp
f
589.073 550.159 mo
589.858 550.159 li
589.858 546.983 li
589.073 546.983 li
cp
f
589.858 550.159 mo
590.64 550.159 li
590.64 546.983 li
589.858 546.983 li
cp
f
590.64 550.159 mo
591.427 550.159 li
591.427 547.776 li
590.64 547.776 li
cp
f
591.427 550.159 mo
592.208 550.159 li
592.208 547.776 li
591.427 547.776 li
cp
f
592.208 550.159 mo
592.99 550.159 li
592.99 547.776 li
592.208 547.776 li
cp
f
592.99 550.159 mo
593.775 550.159 li
593.775 548.57 li
592.99 548.57 li
cp
f
593.775 550.159 mo
594.557 550.159 li
594.557 548.57 li
593.775 548.57 li
cp
f
594.557 550.159 mo
595.344 550.159 li
595.344 547.776 li
594.557 547.776 li
cp
f
595.344 550.159 mo
596.126 550.159 li
596.126 547.776 li
595.344 547.776 li
cp
f
596.126 550.159 mo
596.907 550.159 li
596.907 548.57 li
596.126 548.57 li
cp
f
596.907 550.159 mo
597.693 550.159 li
597.693 547.776 li
596.907 547.776 li
cp
f
597.693 550.159 mo
598.474 550.159 li
598.474 543.012 li
597.693 543.012 li
cp
f
598.474 550.159 mo
599.261 550.159 li
599.261 543.012 li
598.474 543.012 li
cp
f
599.261 550.159 mo
600.043 550.159 li
600.043 547.776 li
599.261 547.776 li
cp
f
600.825 550.159 mo
601.61 550.159 li
601.61 546.983 li
600.825 546.983 li
cp
f
601.61 550.159 mo
602.392 550.159 li
602.392 546.187 li
601.61 546.187 li
cp
f
602.392 550.159 mo
603.179 550.159 li
603.179 547.776 li
602.392 547.776 li
cp
f
603.179 550.159 mo
603.961 550.159 li
603.961 546.187 li
603.179 546.187 li
cp
f
603.961 550.159 mo
604.742 550.159 li
604.742 540.627 li
603.961 540.627 li
cp
f
604.742 550.159 mo
605.528 550.159 li
605.528 543.804 li
604.742 543.804 li
cp
f
605.528 550.159 mo
606.309 550.159 li
606.309 539.833 li
605.528 539.833 li
cp
f
606.309 550.159 mo
607.096 550.159 li
607.096 539.833 li
606.309 539.833 li
cp
f
607.096 550.159 mo
607.878 550.159 li
607.878 546.983 li
607.096 546.983 li
cp
f
607.878 550.159 mo
608.66 550.159 li
608.66 546.983 li
607.878 546.983 li
cp
f
611.795 550.159 mo
612.577 550.159 li
612.577 547.776 li
611.795 547.776 li
cp
f
613.362 550.159 mo
614.144 550.159 li
614.144 546.983 li
613.362 546.983 li
cp
f
614.144 550.159 mo
614.931 550.159 li
614.931 546.983 li
614.144 546.983 li
cp
f
614.931 550.159 mo
615.713 550.159 li
615.713 545.393 li
614.931 545.393 li
cp
f
615.713 550.159 mo
616.494 550.159 li
616.494 545.393 li
615.713 545.393 li
cp
f
616.494 550.159 mo
617.28 550.159 li
617.28 547.776 li
616.494 547.776 li
cp
f
617.28 550.159 mo
618.061 550.159 li
618.061 547.776 li
617.28 547.776 li
cp
f
618.061 550.159 mo
618.848 550.159 li
618.848 547.776 li
618.061 547.776 li
cp
f
618.848 550.159 mo
619.63 550.159 li
619.63 546.983 li
618.848 546.983 li
cp
f
619.63 550.159 mo
620.412 550.159 li
620.412 548.57 li
619.63 548.57 li
cp
f
620.412 550.159 mo
621.197 550.159 li
621.197 548.57 li
620.412 548.57 li
cp
f
625.896 550.159 mo
626.683 550.159 li
626.683 548.57 li
625.896 548.57 li
cp
f
626.683 550.159 mo
627.465 550.159 li
627.465 548.57 li
626.683 548.57 li
cp
f
115.732 582.107 mo
634.534 582.107 li
0 0 0 1 cmyk
gsave
[1.74106 0 0 -1.76505 115.732 582.107 ]ct
@
grestore newpath
143.589 582.107 mo
143.589 563.574 li
164.046 563.574 li
gsave
[1.74106 0 0 -1.76505 143.589 582.107 ]ct
@
grestore newpath
170.193 563.574 mo
161.531 567.161 li
163.587 563.574 li
161.531 559.987 li
cp
f
406.916 248.776 mo
406.916 239.509 li
cp
f
406.916 233.278 mo
410.454 242.06 li
406.916 239.975 li
403.378 242.06 li
cp
f
406.916 248.776 mo
406.916 239.51 li
gsave
[1.74106 0 0 -1.76505 406.916 248.776 ]ct
@
grestore newpath
406.916 233.278 mo
410.454 242.06 li
406.916 239.975 li
403.378 242.06 li
cp
f
406.916 418.485 mo
406.916 409.218 li
cp
f
406.916 402.987 mo
410.454 411.768 li
406.916 409.684 li
403.378 411.768 li
cp
f
406.916 418.485 mo
406.916 409.218 li
gsave
[1.74106 0 0 -1.76505 406.916 418.485 ]ct
@
grestore newpath
406.916 402.987 mo
410.454 411.768 li
406.916 409.684 li
403.378 411.768 li
cp
f
406.916 572.841 mo
406.916 563.574 li
cp
f
406.916 557.343 mo
410.454 566.124 li
406.916 564.039 li
403.378 566.124 li
cp
f
406.916 572.841 mo
406.916 563.574 li
gsave
[1.74106 0 0 -1.76505 406.916 572.841 ]ct
@
grestore newpath
406.916 557.343 mo
410.454 566.124 li
406.916 564.039 li
403.378 566.124 li
cp
f
141.412 559.866 mo
152.294 571.161 li
f
141.412 559.866 mo
152.294 571.161 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 141.412 559.866 ]ct
@
grestore newpath
152.729 559.866 mo
141.848 571.161 li
0 0 0 1 cmyk
f
152.729 559.866 mo
141.848 571.161 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 152.729 559.866 ]ct
@
grestore newpath
259.839 520.684 mo
270.721 531.978 li
0 0 0 1 cmyk
f
259.839 520.684 mo
270.721 531.978 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 259.839 520.684 ]ct
@
grestore newpath
271.156 520.684 mo
260.275 531.978 li
0 0 0 1 cmyk
f
271.156 520.684 mo
260.275 531.978 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 271.156 520.684 ]ct
@
grestore newpath
255.922 576.458 mo
266.804 587.753 li
0 0 0 1 cmyk
f
255.922 576.459 mo
266.804 587.753 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 255.922 576.459 ]ct
@
grestore newpath
267.239 576.458 mo
256.357 587.753 li
0 0 0 1 cmyk
f
267.239 576.459 mo
256.357 587.753 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 267.239 576.459 ]ct
@
grestore newpath
425.155 520.684 mo
436.036 531.978 li
0 0 0 1 cmyk
f
425.155 520.684 mo
436.036 531.978 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 425.155 520.684 ]ct
@
grestore newpath
436.471 520.684 mo
425.59 531.978 li
0 0 0 1 cmyk
f
436.471 520.684 mo
425.59 531.978 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 436.471 520.684 ]ct
@
grestore newpath
517.995 521.478 mo
528.877 532.773 li
0 0 0 1 cmyk
f
517.995 521.478 mo
528.877 532.773 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 517.995 521.478 ]ct
@
grestore newpath
529.312 521.478 mo
518.431 532.773 li
0 0 0 1 cmyk
f
529.312 521.478 mo
518.431 532.773 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 529.312 521.478 ]ct
@
grestore newpath
559.128 503.299 mo
570.01 514.593 li
0 0 0 1 cmyk
f
559.128 503.299 mo
570.01 514.593 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 559.128 503.299 ]ct
@
grestore newpath
570.445 503.299 mo
559.563 514.593 li
0 0 0 1 cmyk
f
570.445 503.299 mo
559.563 514.593 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 570.445 503.299 ]ct
@
grestore newpath
221.26 533.42 mo
232.141 544.714 li
0 0 0 1 cmyk
f
221.26 533.42 mo
232.141 544.714 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 221.26 533.42 ]ct
@
grestore newpath
232.577 533.42 mo
221.695 544.714 li
0 0 0 1 cmyk
f
232.577 533.42 mo
221.695 544.714 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 232.577 533.42 ]ct
@
grestore newpath
305.672 511.152 mo
316.554 522.446 li
0 0 0 1 cmyk
f
305.672 511.152 mo
316.554 522.446 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 305.672 511.152 ]ct
@
grestore newpath
316.989 511.152 mo
306.108 522.446 li
0 0 0 1 cmyk
f
316.989 511.152 mo
306.108 522.446 li
0 1 1 0 cmyk
gsave
[1.74106 0 0 -1.76505 316.989 511.152 ]ct
@
grestore newpath
grestore
grestore
gsave
36 576 mo
756 576 li
756 36 li
36 36 li
cp
clp
0 0 0 1 cmyk
%ADOBeginSubsetFont: LWYAAA+HelveticaNeue Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.074
 256 array 0 1 255 {1 index exch /.notdef put} for  /LWYAAA+HelveticaNeue
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000000046670
676d00000000000000c000000428676c7966000000000000063800001494
6865616400000000000004e8000000366868656100000000000005200000
0024686d74780000000000000544000000686c6f636100000000000005ac
000000366d61787000000000000005e4000000206e616d65000000000000
06040000002870726570000000000000062c0000000c6764697200000000
000000000000000000140014b800002c4bb800095058b101018e59b801ff
85b844001db9000900035f5e2db800012c2020456944b001602db800022c
b800012a212db800032c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800042c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800052c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800062c2020456944b001602020457d691844b001602db800072c
b800062a2db800082c4b20b003265358b0801bb040598a8a20b003265358
b0022621b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920
b80003265358b0032545b8014050582321b8014023211bb0032545232123
21591b2159442db800092c4b535845441b2121592db8000a2c4bb8000950
58b101018e59b801ff85b800441db9000900035f5e2db8000b2c20204569
44b001602db8000c2cb8000b2a212db8000d2c2046b00325465258235920
8a208a49648a204620686164b004254620686164525823658a592f20b000
53586920b000545821b040591b6920b000545821b0406559593a2db8000e
2c2046b00425465258238a592046206a6164b0042546206a61645258238a
592ffd2db8000f2c4b20b0032650585158b080441bb04044591b21212045
b0c05058b0c0441b2159592db800102c2020456944b001602020457d6918
44b001602db800112cb800102a2db800122c4b20b003265358b0801bb040
598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b80100
8a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003265358
b0032545b8018050582321b8018023211bb003254523212321591b215944
2db800132c4b535845441b2121592db800142c4bb800095058b101018e59
b801ff85b800441db9000900035f5e2db800152c2020456944b001602db8
00162cb800152a212db800172c2046b003254652582359208a208a49648a
204620686164b004254620686164525823658a592f20b00053586920b000
545821b040591b6920b000545821b0406559593a2db800182c2046b00425
465258238a592046206a6164b0042546206a61645258238a592ffd2db800
192c4b20b0032650585158b080441bb04044591b21212045b0c05058b0c0
441b2159592db8001a2c2020456944b001602020457d691844b001602db8
001b2cb8001a2a2db8001c2c4b20b003265358b0401bb000598a8a20b003
2653582321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a2359
20b0032653582321b801008a8a1b8a235920b0032653582321b801408a8a
1b8a235920b80003265358b0032545b8018050582321b8018023211bb003
254523212321591b2159442db8001d2c4b535845441b2121592d00010000
000100001aea3c975f0f3cf5011103e800000000b643600000000000cb98
044efc49fe1f05a604350000000900020000000000000001000003b8ff2b
001c05dcfc49fe8005a600010000000000000000000000000000001a01f4
003301160000022c002a022c00180263004e0288004e0219002402510043
0219002402510024021900240128000c023e002400de0045020700450355
0040022c0040023e002402510043014d003d01f4001f013b0009022c0040
01f4000e01f400000206000c00000032003200de01660198020002be0356
03c8046604ce051a05cc05f6062806c2070a07aa084208700914096609b6
09d609e80a4a000000010000001a0096000900210002000200000000001e
000002000428000100010000000100120001000000000006001400005252
58424e552b48656c7665746963614e6575650000b800142bb8000a2bb800
002b00>
[5269 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> LWYAAA+HelveticaNeue AddT42Char 
1 100 2 <0002002afff5020202c50017003300cbb800342fb800352fb8003410b800
18d0b800182fb80000dc411b000600000016000000260000003600000046
0000005600000066000000760000008600000096000000a6000000b60000
00c60000000d5d410500d5000000e5000000025db8003510b80026dcb800
0edc410500da000e00ea000e00025d411b0009000e0019000e0029000e00
39000e0049000e0059000e0069000e0079000e0089000e0099000e00a900
0e00b9000e00c9000e000d5d00ba0013001f00032bb8001310ba002d0007
00032bb8002d10303113343e0433321e0415140e0223222e0227141e0433
323e0435342e0423220e0484010911213224243221110901051b3c36363c
1b055a04101e344f37384e341e100404101e344f37374f341e1004015d1a
3f3f3c2d1c1c2d3c3f3f1a2863573c3c57632727545047361f1f36475054
2727545048362020364850540000>LWYAAA+HelveticaNeue AddT42Char 
1 444 3 <00010018000001ee02c5002b0091b8002d2fba0001000000032bb8000110
b8002d10b80022dcb8000bdc410500da000b00ea000b00025d411b000900
0b0019000b0029000b0039000b0049000b0059000b0069000b0079000b00
89000b0099000b00a9000b00b9000b00c9000b000d5db8002210b80016d0
b800162fb8000110b80018d0b800182f00ba0018001500032bba00270006
00032bb800271030311333263e0233321e0215140e02070e03072135213e
03373e0335342e0223220e022c55010f2235251c322516172d442d254436
230501cffe940627374221213e301d233c512e38583b1c01ca203f321f12
222f1d2538302f1c163242593f4b21332c2714152e39482f324c331b2643
5c00>LWYAAA+HelveticaNeue AddT42Char 
1 716 4 <0001004e0000023e02ca000b0033ba0009000000032bb8000910b80004d0
00ba0004000100032bba0000000900032bb8000010ba0008000500032bb8
00081030311311213521352135213521354e01f0fe6f0173fe8d018e02ca
fd3650f750e350000000>LWYAAA+HelveticaNeue AddT42Char 
1 1024 6 <00020024fff5020a02110030004200c3ba003c002400032bb8003c10ba00
07001a00032bb8000710411b0006003c0016003c0026003c0036003c0046
003c0056003c0066003c0076003c0086003c0096003c00a6003c00b6003c
00c6003c000d5d410500d5003c00e5003c00025dba00110024003c111239
b800112fb80012dcb8001a10b8002cd0b8002c2fb8001a10b80031d0b800
312fb8000710b80044dc00ba0037002900032bb8003710ba000c00150003
2bb8000c10b8003710b80003d0b8000c10b80012dcb8002910b8002fd030
312535062322263511342e0223220e0207333e0133321e0215140e02070e
0315141e0233323637141633320315140e0223222e0235343e04020a0f0b
1407223845232b4e3c240255034836142921151c303f23213f311e1b2f3e
23365d232721277412263c2a13251b111d2e3a39340242051c1e010a2d38
1f0a1229423039290612221c18190d0707061223382c2737230f252a2a25
0116571229231708121d1520251409070b000000>LWYAAA+HelveticaNeue AddT42Char 
1 1404 7 <00020043fff5022d02ca0018002c00adb8002e2fba0018000000032bb800
1810b80002d0b8001810b80004d0b800042fb8002e10b8000edcb8001810
b80016d0b800162fb8000e10b80019dc410500da001900ea001900025d41
1b0009001900190019002900190039001900490019005900190069001900
790019008900190099001900a9001900b9001900c90019000d5db8001810
b80023d0b800232f00b800002fba001e000900032bb8001e10ba00130028
00032bb8001310303113113335331e0333323e0235342e02232206072311
01140e0223222e0235343e0233321e024355020e292e2f133b593b1d1e3b
593c365a1502013b10243b2c2c3e271211263c2b293d271302cafd364517
1f12082a49623737624b2c272b010bfe3d26483822213647262446372220
36450000>LWYAAA+HelveticaNeue AddT42Char 
1 1708 8 <00010024fff501fa021100230079ba001c000b00032bb8001c10411b0006
001c0016001c0026001c0036001c0046001c0056001c0066001c0076001c
0086001c0096001c00a6001c00b6001c00c6001c000d5d410500d5001c00
e5001c00025d00ba0017001000032bb8001710ba0006002100032bb80006
10b80000dcb8001010b80014dc303101332e0323220e0215141e02333236
37230e0123222e0235343e02333216019f5805263b4d2c3d5c3d1e1f3d5b
3b63730e5708473f283a241110253e2e3640015f2e432c152b4b653a3a61
462668603c42203544242749382236000000>LWYAAA+HelveticaNeue AddT42Char 
1 1936 9 <00020024fff5020e02ca0013002c00bbb8002d2fba0015001600032bb800
1510b8002d10b80022d0b800222fb80000dc411b00060000001600000026
000000360000004600000056000000660000007600000086000000960000
00a6000000b6000000c60000000d5d410500d5000000e5000000025db800
1610b8000ad0b8000a2fb8001610b80018d0b800182fb8001610b8002ad0
b8002a2fba002b00220015111239b8001610b8002cd000b800152fba000f
002700032bb8000f10ba001d000500032bb8001d10303137343e0233321e
0215140e0223222e0205112311232e0323220e0215141e02333236373315
7e10243c2b2c3e271211263c2b293d2713019055020e292e2e143b593b1d
1e3b593c365a1502fe264838222136472624463722203645da02cafef617
1f13082b49623737624a2c262b460000>LWYAAA+HelveticaNeue AddT42Char 
1 2252 10 <00020024fff502030211000a0026005bba0014001f00032bb8001410ba00
15000000032bb8001510b8001410b80001d0b8000010b8000cd0b8000c2f
00ba000f002400032bb8000f10ba001a000600032bb8001a10ba00010014
00032bb8000110b8002410b8000cdc303101213e0333321e0217230e0123
222e023721362e0223220e02151e0333323601a7fed70216263521203527
1754540b45362a3e28120101830215375b4535594124021f3e5b3e587401
341e352817172736ae33321c2f3d222f6858392848623b3b64482858>LWYAAA+HelveticaNeue AddT42Char 
1 2460 11 <0001000c0000012902d20017004fba0003000000032bb8000310b80006d0
b8000010b8000ddcb8000010b80014d000b800012fba0011000a00032bb8
001110ba0015000000032bb8001510b8000010b80003d0b8001510b80005
d030311311331133352335343633321617352e012322061d012315635564
64221f0b1a0b0c1f0c46495701bafe4601ba4b48221803044a0404413f4d
4b00>LWYAAA+HelveticaNeue AddT42Char 
1 2612 12 <00020024ff2f01fe02110028003c00bdba002e000c00032bb8002e10ba00
01000200032bb8000110b8000210b80038d0b800382fba00040002003811
1239b8000210b80015d0411b0006002e0016002e0026002e0036002e0046
002e0056002e0066002e0076002e0086002e0096002e00a6002e00b6002e
00c6002e000d5d410500d5002e00e5002e00025dba0021000c002e111239
b800212fb80020dcb8000110b8003edc00ba001b002600032bb8001b10ba
0007003300032bb8000710ba0029001100032bb800291030312511231523
2e0123220e0215141e02333236373315140e0223222e0227231e03333236
27222e0235343e0233321e0215140e0201fe5001175231435c38181d3a56
3a3259160211263a2a152e271b015502283d4b247c74ee2a38220e11253a
292838231011243b2c01d94a2b2b334f612e355f472a2d30222b48331d09
1420172a3a24107e98233946232544341f203542222448392300>LWYAAA+HelveticaNeue AddT42Char 
1 2968 13 <000200450000009a02ca00030007002fba0001000200032bb8000110b800
0210b80004d0b8000110b80006d000b800052fba0001000000032bb80001
1030311335231d011133119a5555026268685dfdfb020500>LWYAAA+HelveticaNeue AddT42Char 
1 3052 14 <000100450000020702ca000b0033ba000b000000032bb8000b10b80002d0
00b800012fb800052fb800002fba000800010000111239ba000a00010000
1112393031131133353713330337230711455550b16cdccd72ec02cafd36
c44afef20149bce201a7>LWYAAA+HelveticaNeue AddT42Char 
1 3152 15 <00010040000003150211002a00b7ba0003000000032bb8000310b8000ddc
4103005f000d00015d4103008f000d00015d41030020000d00015d410300
b0000d00015db80010dcb80018dc4103008f001800015d4103005f001800
015d41030020001800015d410300b0001800015db8001bdcba0023000d00
10111239b8000310b80028d0b800282fba002900000003111239b8001b10
b8002cdc00b800012fb8000e2fb800192fba0026000800032bb8002610b8
000810b80013d0b8002610b80020d0303113113311343e0233321e021511
3311343633321e0215113311342e02232206072e01232207233540550f21
35251d25160955483f1f27160855192d3f2733551a104e306d3a020205fd
fb01420f2d2a1e111f2a19fead01423c48121f2a18fead017b283924112e
2a3028584c000000>LWYAAA+HelveticaNeue AddT42Char 
1 3460 16 <00010040000001ec021100170045ba0003000000032bb8000310ba000e00
0b00032bb8000e10b8000310b80015d0b800152fba001600000003111239
00b800012fb8000c2fba0013000800032bb8001310303113113311343e02
33321615113311342e022322072335405513263927313855112a44337335
020205fdfb0124233b2c183830fea201542a45321c5e5200>LWYAAA+HelveticaNeue AddT42Char 
1 3604 17 <00020024fff5021a02110013002700cbb800282fb800292fb8002810b800
14d0b800142fb80000dc411b000600000016000000260000003600000046
0000005600000066000000760000008600000096000000a6000000b60000
00c60000000d5d410500d5000000e5000000025db8002910b8001edcb800
0adc410500da000a00ea000a00025d411b0009000a0019000a0029000a00
39000a0049000a0059000a0069000a0079000a0089000a0099000a00a900
0a00b9000a00c9000a000d5d00ba000f001900032bb8000f10ba00230005
00032bb8002310303113343e0233321e0215140e0223222e0227141e0233
323e0235342e0223220e027e192c3b21213b2c19192c3b21213b2c195a20
405e3d3e5d402020405d3e3d5e402001022f49321a1a32492f2f49311a1a
31492f39624929294962393963492a2a49630000>LWYAAA+HelveticaNeue AddT42Char 
1 3924 18 <00020043ff3b022d02110018002c00adb8002e2fba0018000000032bb800
1810b80002d0b8001810b80004d0b800042fb8002e10b8000edcb8001810
b80016d0b800162fb8000e10b80019dc410500da001900ea001900025d41
1b0009001900190019002900190039001900490019005900190069001900
790019008900190099001900a9001900b9001900c90019000d5db8001810
b80023d0b800232f00b800012fba0013002800032bb8001310ba001e0009
00032bb8001e10303113113311331e0333323e0235342e02232206072335
05140e0223222e0235343e0233321e024355020e292e2f133b593b1d1e3b
593c365a1502013b10243b2c2c3e271211263c2b293d27130205fd36010a
171f12082a49623737624b2c272b46fe2648382221364726244637222036
45000000>LWYAAA+HelveticaNeue AddT42Char 
1 4228 19 <0001003d0000014d0213000e0027ba0003000100032bb8000310b8000dd0
b8000d2f00b800012fba0009000800032bb8000910303113113335343e02
333526060723353d55142c4833455a1f020205fdfbe6324d361c5a023c3f
6d00>LWYAAA+HelveticaNeue AddT42Char 
1 4320 20 <0001001ffff501d60211003a00abba0000000100032bba0020001f00032b
b8002010ba0031001f0020111239b800312f410500da003100ea00310002
5d411b000900310019003100290031003900310049003100590031006900
3100790031008900310099003100a9003100b9003100c90031000d5db800
0bdcb8000010b8002adcb80015dcb8000b10b8003cdc00ba003600060003
2bb8003610ba0025001a00032bb8002510b8000610b80000dcb8002510b8
001fdc303137231e0333323e0235342e02272e0335343e0233321e021733
2e0323220e0215141e0415140e0223222e02745502243c4e2b274f3f271d
2f3d201e3c301f142027131529221602550322394a2c22453723324b584b
3218252c141a312718a3304329120f263e2f2532211407070d131d161419
0f06091421192f3f250f1123382732381f11152221181f10060a1727>LWYAAA+HelveticaNeue AddT42Char 
1 4648 21 <000100090000011d02a00017005bba0001000200032bb8000110b8000210
b80006d0b8000310b80007d0b8000210b80017dcb8000dd0b8000110b800
14d000b800012fba000f000c00032bb8000f10ba0004000500032bb80004
10b80000d0b8000510b80015d030311335231523153311141e023b013523
222e0235113335b65558580e1d2f21412714190e056702059b9b4bfeb724
2c18094b030a120f01414b000000>LWYAAA+HelveticaNeue AddT42Char 
1 4812 22 <00010040fff501ec020500180051ba000c000d00032bb8000c10ba000100
0200032bb8000110b8000210b80016d0b800162fba001700020001111239
b8000210b80018d0b800182f00b800012fb8000c2fba0008001300032bb8
000810303121112311140e0223222635112311141e0233323637331501ec
5513263927313855112a443339541b020205fedc233b2c183830015efeac
2a45321b2d3052000000>LWYAAA+HelveticaNeue AddT42Char 
1 4972 23 <0001000e000001e602050007001900b800012fb800052fb800002fba0004
00000001111239303121132303230323130129bd598d02915fc00205fe51
01affdfb>LWYAAA+HelveticaNeue AddT42Char 
1 5036 24 <0001000000ee01f4013e0003000b00ba0000000100032b30311115213501
f4013e505000>LWYAAA+HelveticaNeue AddT42Char 
1 5072 25 <0002000c000001c202d20003001b006bba0007000400032bb8000710ba00
03000000032bb8000310b8000710b8000ad0b8000410b80011dcb8000410
b80018d0b8000310b8001ddc00b800012fb800052fba0015000e00032bb8
001510ba0019000400032bb8001910b8000410b80007d0b8001910b80009
d03031011133110111331133352335343633321617352e012322061d0123
15016d55fea1556464221f0b1a0b0c1f0c46495702cafd3602cafef0fe46
01ba4b48221803044a0404413f4d4b00>LWYAAA+HelveticaNeue AddT42Char 
1 0 0 <00020033000101cc02c8000300070037b800142bb800082fb800092fb800
04dcb80000dcb8000810b80006d0b800062fb80002dc00ba000300050017
2bba0004000000172b303101211121131121110199fecd013333fe67029a
fd950299fd3902c70000>LWYAAA+HelveticaNeue AddT42Char 
LWYAAA+HelveticaNeue /CharStrings get begin
/space 1 def
/zero 2 def
/two 3 def
/E 4 def
/a 6 def
/b 7 def
/c 8 def
/d 9 def
/e 10 def
/f 11 def
/g 12 def
/i 13 def
/k 14 def
/m 15 def
/n 16 def
/o 17 def
/p 18 def
/r 19 def
/s 20 def
/t 21 def
/u 22 def
/v 23 def
/endash 24 def
/fl 25 def
end
LWYAAA+HelveticaNeue /Encoding get
dup 32 /space put
dup 48 /zero put
dup 50 /two put
dup 69 /E put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 208 /endash put
dup 223 /fl put
pop
end
%ADOEndSubsetFont
/FUUEHM+HelveticaNeue /LWYAAA+HelveticaNeue findfont ct_VMDictPut/FUUEHM+HelveticaNeue*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /.notdef /two 18{/.notdef}rp /E 27{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i /.notdef /k /.notdef /m /n /o /p /.notdef /r /s /t /u /v 89{/.notdef}rp /endash 14{/.notdef}rp /fl 32{/.notdef}rp]FUUEHM+HelveticaNeue nfFUUEHM+HelveticaNeue*1 [29 0 0 -29 0 0 ]msf105.364 88.2812 mo(Evi)sh144.021 88.2812 mo(dence of contiguous precursor transcripts)[17.1971 15.5731 16.124 15.5731 15.5731 8.062 16.6461 8.58415 8.06198 15.5731 16.6461 16.124 9.13507 6.43799 16.6461 16.124 16.6461 16.124 14.5 8.06201 17.1971 9.1348 15.5731 15.5731 16.124 9.65677 14.5 16.6462 9.6568 8.06195 9.13507 9.6568 15.5731 16.124 14.5 15.5731 9.6568 6.43799 17.1971 9.13507 0 ]xsh%ADOBeginSubsetFont: JIWAAA+HelveticaNeue Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.074
 256 array 0 1 255 {1 index exch /.notdef put} for  /JIWAAA+HelveticaNeue
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000000046670
676d00000000000000c000000428676c796600000000000005a800000064
6865616400000000000004e8000000366868656100000000000005200000
0024686d74780000000000000544000000086c6f6361000000000000054c
000000066d6178700000000000000554000000206e616d65000000000000
05740000002870726570000000000000059c0000000c6764697200000000
000000000000000000140014b800002c4bb800095058b101018e59b801ff
85b844001db9000900035f5e2db800012c2020456944b001602db800022c
b800012a212db800032c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800042c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800052c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800062c2020456944b001602020457d691844b001602db800072c
b800062a2db800082c4b20b003265358b0801bb040598a8a20b003265358
b0022621b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920
b80003265358b0032545b8014050582321b8014023211bb0032545232123
21591b2159442db800092c4b535845441b2121592db8000a2c4bb8000950
58b101018e59b801ff85b800441db9000900035f5e2db8000b2c20204569
44b001602db8000c2cb8000b2a212db8000d2c2046b00325465258235920
8a208a49648a204620686164b004254620686164525823658a592f20b000
53586920b000545821b040591b6920b000545821b0406559593a2db8000e
2c2046b00425465258238a592046206a6164b0042546206a61645258238a
592ffd2db8000f2c4b20b0032650585158b080441bb04044591b21212045
b0c05058b0c0441b2159592db800102c2020456944b001602020457d6918
44b001602db800112cb800102a2db800122c4b20b003265358b0801bb040
598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b80100
8a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003265358
b0032545b8018050582321b8018023211bb003254523212321591b215944
2db800132c4b535845441b2121592db800142c4bb800095058b101018e59
b801ff85b800441db9000900035f5e2db800152c2020456944b001602db8
00162cb800152a212db800172c2046b003254652582359208a208a49648a
204620686164b004254620686164525823658a592f20b00053586920b000
545821b040591b6920b000545821b0406559593a2db800182c2046b00425
465258238a592046206a6164b0042546206a61645258238a592ffd2db800
192c4b20b0032650585158b080441bb04044591b21212045b0c05058b0c0
441b2159592db8001a2c2020456944b001602020457d691844b001602db8
001b2cb8001a2a2db8001c2c4b20b003265358b0401bb000598a8a20b003
2653582321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a2359
20b0032653582321b801008a8a1b8a235920b0032653582321b801408a8a
1b8a235920b80003265358b0032545b8018050582321b8018023211bb003
254523212321591b2159442db8001d2c4b535845441b2121592d00010000
000100001aea3c975f0f3cf5011103e800000000b643600000000000cb98
044efc49fe1f05a604350000000900020000000000000001000003b8ff2b
001c05dcfc49fe8005a600010000000000000000000000000000000201f4
003301160000000000320032000000010000000200960009002100020002
00000000001e000002000428000100010000000100120001000000000006
001400004445524f56472b48656c7665746963614e6575650000b800142b
b8000a2bb800002b00>
[101 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> JIWAAA+HelveticaNeue AddT42Char 
1 0 0 <00020033000101cc02c8000300070037b800142bb800082fb800092fb800
04dcb80000dcb8000810b80006d0b800062fb80002dc00ba000300050017
2bba0004000000172b303101211121131121110199fecd013333fe67029a
fd950299fd3902c70000>JIWAAA+HelveticaNeue AddT42Char 
JIWAAA+HelveticaNeue /CharStrings get begin
/controlCR 1 def
end
JIWAAA+HelveticaNeue /Encoding get
dup 33 /controlCR put
pop
end
%ADOEndSubsetFont
/FUUEHN+HelveticaNeue /JIWAAA+HelveticaNeue findfont ct_VMDictPut/FUUEHN+HelveticaNeue*1 [33{/.notdef}rp /controlCR 222{/.notdef}rp]FUUEHN+HelveticaNeue nfFUUEHN+HelveticaNeue*1 [29 0 0 -29 0 0 ]msf687.046 88.2812 mo(!)sh%ADOBeginSubsetFont: DLGQMX+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /DLGQMX+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000051c6670
676d00000000000005d80000091a676c796600000000000034d40000343c
686561640000000000000ef400000036686865610000000000000f2c0000
0024686d74780000000000000f50000000cc6c6f6361000000000000101c
000000686d6178700000000000001084000000206e616d65000000000000
10a4000000207072657000000000000010c4000024106764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e4047645f
5e5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f
3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b0042651582320b00d4423
5921212d2c20204518684420b001602045b04676688a4560442d2c01b10b
0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b028
2370b10228453ab10200080d2d2c2045b00325456164b050515845441b21
21592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0
008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a0345
8a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c
4b525845441b2121592d2c01b005251023208af500b0016023edec2d2c01
b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b0
01600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b
2d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621b
b200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f
2b59b002602d2c0c6423648bb84000626023212d2c452345602345602345
6023766818b08062202d2cb00426b00426b00425b0042545234520b00326
6062636820b0032661658a2344442d2c2045b0005458b040442045b04061
441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370
b01423421b2121592d2c4b515820b0032545695358441b2121591b212159
2d2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a6044
2d2c45234560442d2c4b235158b90033ffe0b134201bb333003400594444
2d2cb0164358b00326458a586466b01f601b64b020606620581b21b04059
b001615923586559b02923442310b029e01b2121212121592d2cb0164358
b004254564b020606620581b21b04059b0016123586559b0292344b00425
b00725082058021b0359b0052510b004252046b0042523423cb0072510b0
06252046b00425b0016023423c2058011b0059b0052510b00425b029e0b0
072510b00625b029e0b00425b00725082058021b0359b00425b003254348
b00625b00325b0016043481b2159212121212121212d2cb0164358b00425
4564b020606620581b21b04059b0016123581b6559b0292344b00525b008
25082058021b0359b0042510b005252046b0042523423cb00425b0072508
b0072510b006252046b00425b0016023423c2058011b0059b0042510b005
25b029e0b02920456544b0072510b00625b029e0b00525b0082508205802
1b0359b00525b003254348b00425b0072508b00625b00325b0016043481b
2159212121212121212d2c02b00425202046b004252342b0052508b00325
4548212121212d2c02b0032520b0042508b0022543482121212d2c452320
451820b00050205823652359236820b040505821b04059235865598a6044
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d
2cb002435458b0462b1b21212121592d2cb002435458b0472b1b21212159
2d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b212121
592d2c208a08234b538a4b515a5823381b2121592d2c0020b200400325b0
062649618b3812342d2c014623466023466123201020468a61b8ff80628a
b140408a704560683a2d2c208a2349648a2353583c1b21592d2c4b52587d
1b7a592d2cb012004b014b54422d2cb1020042b123018851b1400188535a
58b910000020885458b202010243604259b12401885158b9200000408854
58b2020202436042b12401885458b2022002436042004b014b5258b20208
02436042591bb940000080885458b202040243604259b94000008063b801
00885458b202080243604259b94000010063b80200885458b20210024360
4259b94000020063b80400885458b202400243604259595959592d2c4518
68234b51582320452064b04050587c59688a6059442d2cb00016b00225b0
022501b001233e00b002233eb10102060cb00a236542b00b234201b00123
3f00b002233fb10102060cb006236542b0072342b00116012d2c20b82000
628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff54
5821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547b0
04254760b0062547b0806361b00225b0005558b00325b00725496359b008
2558001b0159b00425b0062549b009255cb009255a58b0092b59b0072546
b0806361b0032520b0005558631b2159612320b0005558b080631b21b080
59b0592bb006255c586959b00425202010b00048233ab0062658001b0159
b0052658b003252f598a12233221212d2cb00625b00a2587b00625b00925
4ab0005358b00625b00a251bb00925b0072559b00225b00225070cb00525
6323b00625636020b94000040063535821b00426b00426b00a1bb9400004
0063655158b0042665b0042665b00a1bb00426b00426b000b00325b00325
0b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b000
5558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ffff
545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587b0
0a2510b00b25c15920b00051b800522378b00161b00225b00725b0072507
b00a25b00d254961b08062b00525b005250bb00a252338b00625b0062587
b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0
032554b8ffa723792121212121212121212121212d2c23b0005458b94000
00001bb900004000598ab0005458b9400000001bb90000400059b05b2b2d
2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0
005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db004
26b00426080db05b2b2d2c204569442d00000001000000059eb88df7cb11
5f0f3cf50019080000000000bbeb7ccc00000000c787a88bfbfafd8b09ec
07b600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec000100000000000000000000000000000033040e000001cf000004a1
0023045a00ac04ec00ac028d0007052a00ac045800ac03ad004703d5005c
0362005a0434006003fb005d0271002503c400350434009901d6008503a3
009901d6009906640099043400990438005a0434009902ca009903210051
02ae0021047500210475002104340094039d002203770029039f002201d6
000003b5008501ff002a02240048022400bb0205009702730045026d0085
026d007a040e006b040e0052040e0048040e00ae040e0072040e0067040e
006b040e0063040e0052040e0052000000a100a1012f01e5025202b70352
03fd04cf057e060a06a1074207c508b2093609af0a490a8c0b6d0bfe0c8c
0d230d9c0e620ede0eea0f600ff010a71137119c11c01237126812be1306
1328134b139413e4149215b8166b172217c218b618be195d19651a1e0001
000000330120001000c3000700020010002f006500001190018200040001
0000000100120001000000000006000e00005155534a4e502b43616c6962
7269b2090320b80284b40918014a20b80283b40918014a20b80282b40918
014a20b80281b40918014a20b80280b40918014a20b8027fb40918014a20
b8027eb40918014a20b8027db40918014a20b8027cb40918014a20b8027b
b40918014a20b8027ab40918014a20b80279b40918014a20b80278b40918
014a20b80277b40918014a20b80276b40918014a20b80275b40918014a20
b80274b40918014a20b80273b40918014a20b80271b40918014a20b80270
b40918014a20b8026fb40918014a20b8026eb40918014a20b8026db40918
014a20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20
b80269b40918014a20b80268b40918014a20b80267b40918014a20b80266
b40918014a20b80265b40918014a20b80264b40918014a20b80263b40918
014a20b80262b40918014a20b80261b40918014a20b80260b40918014a20
b8025fb40918014a20b8025eb40918014a20b8025db40918014a20b8025c
b40918014a20b8025bb40918014a20b8025ab40918014a20b80259b40918
014a20b80258b40918014a20b80257b40918014a20b80256b40918014a20
b80255b40918014a20b80254b40918014a20b80253b40918014a20b80252
b40918014a20b80251b40918014a20b80250b40918014a20b8024fb40918
014a20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20
b8024bb40918014a20b8024ab40918014a20b80249b40918014a20b80248
b40918014a20b80247b40918014a20b80246b40918014a20b80245b40918
014a20b80244b40918014a20b80243b40918014a20b80242b40918014a20
b80241b40918014a20b80240b40918014a20b8023fb40918014a20b8023e
b40918014a20b8023db40918014a20b8023cb40918014a20b8023bb40918
014a20b8023ab40918014a20b80239b40918014a20b80238b40918014a20
b80237b40918014a20b80236b40918014a20b80235b40918014a20b80234
b40918014a20b80233b40918014a20b80232b40918014a20b80231b40918
014a20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20
b8022db40918014a20b8022cb40918014a20b8022bb40918014a20b8022a
b40918014a20b80229b40918014a20b80228b40918014a20b80227b40918
014a20b80226b40918014a20b80225b40918014a20b80224b40918014a20
b80223b40918014a20b80222b40918014a20b80221b40918014a20b80220
b40918014a20b8021fb40918014a20b8021eb40918014a20b8021db40918
014a20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20
b80219b40918014a20b80218b40918014a20b80217b40918014a20b80216
b40918014a20b80215b40918014a20b80214b40918014a20b80213b40918
014a20b80212b40918014a20b80211b40918014a20b80210b40918014a20
b8020fb40918014a20b8020eb40918014a20b8020db40918014a20b8020c
b40918014a20b8020bb40918014a20b8020ab40918014a20b80209b40918
014a20b80208b40918014a20b80207b40918014a20b80206b40918014a20
b80205b40918014a20b80204b40918014a20b80203b40918014a20b80202
b40918014a20b80201b40918014a20b80200b40918014a20b801ffb40918
014a20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20
b801fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8
b40918014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918
014a20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20
b801f1b40918014a20b801f0b40918014a20b801efb40918014a20b801ee
b40918014a20b801edb40918014a20b801ecb40918014a20b801ebb40918
014a20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20
b801e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4
b40918014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918
014a20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20
b801ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801da
b40918014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918
014a20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20
b801d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0
b40918014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918
014a20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20
b801c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6
b40918014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918
014a20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20
b801bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bc
b40918014a20b801bbb40918014a20b801bab40918014a20b801b9b40918
014a20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20
b801b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2
b40918014a20b801b1b40918014a20b801b0b40918014a20b801afb40918
014a20b801aeb40918014a20b801adb40918014a20b801acb40918014a20
b801abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8
b40918014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918
014a20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20
b801a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019e
b40918014a20b8019db40918014a20b8019cb40918014a20b8019bb40918
014a20b8019ab40918014a20b80199b40918014a20b80198b40918014a20
b80197b40918014a20b80196b40918014a20b80195b40918014a20b80194
b40918014a20b80193b40918014a20b80192b40918014a20b80191b40918
014a20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20
b8018db40918014a20b8018cb40918014a20b8018bb40918014a20b8018a
b40918014a20b80189b40918014a20b80188b40918014a20b80187b40918
014a20b80186b40918014a20b80185b40918014a20b80184b40918014a20
b80183b40918014a20b80182b40918014a20b80181b40918014a20b80180
b40918014a20b8017fb40918014a20b8017eb40918014a20b8017db40918
014a20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20
b80179b40918014a20b80178b40918014a20b80177b40918014a20b80176
b40918014a20b80175b40918014a20b80174b40918014a20b80173b40918
014a20b80172b40918014a20b80171b40918014a20b80170b40918014a20
b8016fb40918014a20b8016eb40918014a20b8016db40918014a20b8016c
b40918014a20b8016bb40918014a20b8016ab40918014a20b80169b40918
014a20b80168b40918014a20b80167b40918014a20b80166b40918014a20
b80165b40918014a20b80164b40918014a20b80163b40918014a20b80162
b40918014a20b80161b40918014a20b80160b40918014a20b8015fb40918
014a20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20
b8015bb40918014a20b8015ab40918014a20b80159b40918014a20b80158
b40918014a20b80157b40918014a20b80156b40918014a20b80155b40918
014a20b80154b40918014a20b80153b40918014a20b80152b40918014a20
b80150b40918014a20b8014fb40918014a20b8014eb40918014a20b8014c
b40918014a20b8014bb40918014a20b8014ab40918014a20b80149b40918
014a20b80148b40918014a20b80147b40918014a20b80146b40918014a20
b80145b40918014a20b80144b40918014a20b80143b30918014ab80284b2
1e3e1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e
1fb8027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8
027bb21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277
b21d431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d
431fb80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421f
b8026eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb802
6ab21c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b2
1c441fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c45
1fb80261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8
025db21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259
b21c451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c
451fb80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451f
b80250b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb802
4cb21c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b2
1b4a1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c
1fb80243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8
023fb21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023b
b21b4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b
4c1fb80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1f
b80232b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb802
2eb21b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab2
1b4c1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b49
1fb80225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb8
0221b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021d
b21b4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a
4e1fb80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1f
b80214b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb802
10b21a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb2
1a4e1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f
1fb80207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb8
0203b219501fb80202b219511fb80201b219511fb80200b219511fb801ff
b219511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219
511fb801fab219501fb801f9b219511fb801f8b219511fb801f7b219511f
b801f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801
f2b218541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb2
18541fb801edb218541fb801ecb218531fb801ebb218531fb801eab21854
1fb801e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb8
01e5b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1
b218541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218
541fb801dcb218541fb801dbb218541fb801dab218531fb801d9b218541f
b801d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801
d4b217571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b2
17561fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb21757
1fb801cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb8
01c7b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3
b217561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217
561fb801beb217561fb801bdb217571fb801bcb217571fb801bbb217571f
b801bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801
b6b217571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2
165b1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b
1fb801adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb8
01a9b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5
b2165b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b216
5b1fb801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1f
b8019cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb801
98b2163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2
163e1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b
1fb8018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8
018bb2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187
b2165b1fb80186b215611fb80185b215621fb80184b215621fb80183b215
661fb80182b215661fb80181b215551fb80180b215451fb8017fb215361f
b8017eb215361fb8017db215611fb8017cb215621fb8017bb215621fb801
7ab215641fb80179b215661fb80178b215661fb80177b215661fb80176b2
15661fb80175b215661fb80174b215661fb80173b215451fb80172b21562
1fb80171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8
016db215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169
b215621fb80168b215621fb80167b215611fb80166b215641fb80165b215
641fb80164b215661fb80163b215661fb80162b215661fb80161b215661f
b80160b215661fb8015fb215661fb8015eb215551fb8015db215451fb801
5cb215451fb8015bb215361fb8015ab215611fb80159b215621fb80158b2
15621fb80157b215631fb80156b215641fb80155b215661fb80154b21566
1fb80153b215661fb80152b215661fb80151b214401fb80150b214551fb8
014fb214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014b
b214401fb8014ab214411fb80149b214401fb80148b214401fb80147b214
411fb80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801f
b80142b212461fb80141b212461fb80140b212461fb8013fb212461fb801
3eb212441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2
115b1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a
1fb80135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb8
0131b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012d
b211591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b211
5b1fb80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561f
b80124b211561fb80123b211571fb80122b211581fb80121b211591fb801
20b2115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2
115b1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e
1fb80117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb8
0113b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010f
b2105f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb210
5e1fb8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1f
b80106b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb801
02b2105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f
641ffc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641f
f50f641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f
641fed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641f
e60e671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e
681fde0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1f
d70d311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d
2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1f
c80d6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d
311f40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c
741fb90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741f
b20c741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b
7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1f
a30b7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b
791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f
940b7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0a
a51f8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d55
7eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a
557955775578ab7755ba028600660285403c5576ab755504751475747503
f47501ab750144750130750102007510752075030c7455725573ab725500
7250728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc040
7c720d104671556f5570ab6f556e666d556a03251f6938675568ab675566
38645565ab645563386255613860555f385d555eab5d555c385a555bab5a
55593858555703251f5638545555ab54555338515552ab51554f384e554e
03251f4d384b554cab4b554a38485549ab4855473846554503381f001c10
1c201c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb0
1bc01b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf1802
4018292c460f17cf17df17ef1704134017292e460016101620160315b8ff
c0b3164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326
460f15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f
0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d
020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f
0b4f0b02400b3f4346400b2d30460003012001010001100120010308b8ff
c0b301151f46b80100b316010501b80190b154532b2b4bb80800524bb008
505bb00188b02553b00188b040515ab00688b000555a5b58b101018e59b1
01024354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d59
4bb0805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b74
5e732b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e73
2b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f737373
73742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff0284006402830064
028200640281006402800064027f0064027e0064027d0064027c0064027b
0064027a0064027900640278006402770064027600640275006402740064
027300640271006402700064026f0064026e0064026d0064026c0064026b
0064026a0064026900640268006402670064026600640265006402640064
02630064026200640261006402600064025f0064025e0064025d0064025c
0064025b0064025a00640259006402580064025700640256006402550064
0254006402530064025200640251006402500064024f0064024e0064024d
0064024c0064024b0064024a006402490064024800640247006402460064
024500640244006402430064024200640241006402400064023f0064023e
0064023d0064023c0064023b0064023a0064023900640238006402370064
02360064023500640234006402330064023200640231006402300064022f
0064022e0064022d0064022c0064022b0064022a00640229006402280064
022700640226006402250064022400640223006402220064022100640220
0064021f0064021e0064021d0064021c0064021b0064021a006402190064
021800640217006402160064021500640214006402130064021200640211
006402100064020f0064020e0064020d0064020c0064020b0064020a0064
0209006402080064020700640206006402050064020441ff006402030064
02020064020100640200006401ff006401fe006401fd006401fc006401fb
006401fa006401f9006401f8006401f7006401f6006401f5006401f40064
01f3006401f2006401f1006401f0006401ef006401ee006401ed006401ec
006401eb006401ea006401e9006401e8006401e7006401e6006401e50064
01e4006401e3006401e2006401e1006401e0006401df006401de006401dd
006401dc006401db006401da006401d9006401d8006401d7006401d60064
01d5006401d4006401d3006401d2006401d1006401d0006401cf006401ce
006401cd006401cc006401cb006401ca006401c9006401c8006401c70064
01c6006401c5006401c4006401c3006401c2006401c1006401c0006401bf
006401be006401bd006401bc006401bb006401ba006401b9006401b80064
01b7006401b6006401b5006401b4006401b3006401b2006401b1006401b0
006401af006401ae006401ad006401ac006401ab006401aa006401a90064
01a8006401a7006401a6006401a5006401a4006401a3006401a2006401a1
006401a00064019f0064019e0064019d0064019c0064019b0064019a0064
019900640198006401970064019600640195006401940064019300640192
00640191006401900064018f0064018e0064018d0064018c0064018b0064
018a00640189006401880064018700640186006401850064418001840064
01830064018200640181006401800064017f0064017e0064017d0064017c
0064017b0064017a00640179006401780064017700640176006401750064
0174006401730064017200640171006401700064016f0064016e0064016d
0064016c0064016b0064016a006401690064016800640167006401660064
016500640164006401630064016200640161006401600064015f0064015e
0064015d0064015c0064015b0064015a0064015900640158006401570064
015600640155006401540064015300640152006401500064014f0064014e
0064014c0064014b0064014a006401490064014800640147006401460064
0145006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[13373 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 322 2 <00020023fffa047e051400220026009db90024ffe8b40c10014c23b8ffe8
b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8fff0401a0b
10014c25100b10014c0d100b10014c0c100b10014c40280125b8fff0402c
0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02af23bf23
cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d1117391112
3939113310ed3211333130012b5d2b2b2b2b2b2b002b2b25161606062322
2e02270321030e03232226263637013e0333321e02170723032104750801
10251f1f251309046ffde66a030a13231c1d250f010801b2040d19271e20
2a1a0e047b01df01c23d161b0e0403070c09013bfec9090d0904050e1b16
04b20b0e080303080f0b8dfd7b00>DLGQMX+Calibri AddT42Char 
1 3092 11 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>DLGQMX+Calibri AddT42Char 
1 2462 9 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>DLGQMX+Calibri AddT42Char 
1 6424 22 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>DLGQMX+Calibri AddT42Char 
1 7364 25 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>DLGQMX+Calibri AddT42Char 
1 3394 12 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>DLGQMX+Calibri AddT42Char 

1 0 1 <> DLGQMX+Calibri AddT42Char 
1 3716 13 <00010025fffa02860578003c0064b2161000b8ffe0b40b014d001bb8fff0
b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b30b014d1b
b801f9b2302a25b8ffd040121011014c250aed36471a26ed3048204c1048
003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c4313001140e022322
2e0223220e02151533321e02151406232311140e0223222e023511232226
35343e02333335343e0233321e0402860405080607151e291b2534200ec9
080b0905120fc908132018182013087f101004080c087f23486d4a234224
0c0803050f13170e05090b091833513a6207111a132420fceb080b080404
080b0803152024131a11075d5e8756290d0f0c131b00>DLGQMX+Calibri AddT42Char 
1 6726 23 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>DLGQMX+Calibri AddT42Char 
1 6140 21 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>DLGQMX+Calibri AddT42Char 
1 5400 19 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>DLGQMX+Calibri AddT42Char 
1 9596 36 <000200bbfff7018d039500130027001bb10014b8027bb70a1e23194c050f
48003fcd3fcd012f33e132313001140e0223222e0235343e0233321e0211
140e0223222e0235343e0233321e02018d0919281f20281809091828201f
2819090919281f20281809091828201f2819090320202c1b0b0b1b2c2022
2d1b0b0b1b2dfd28212c1b0b0b1b2c21212d1a0c0c1a2d00>DLGQMX+Calibri AddT42Char 
1 606 3 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>DLGQMX+Calibri AddT42Char 
1 5850 20 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>DLGQMX+Calibri AddT42Char 
1 2812 10 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>DLGQMX+Calibri AddT42Char 
1 4958 17 <00010099fffa037c057100340095400c3f3601293101314012014d31b8ff
d0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0b30b014d
31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8fff6b30c01
4d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c014d0016
220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f10f12b2b
2b2b32e02b2b2b2b2b31305d5d25140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>DLGQMX+Calibri AddT42Char 
1 1188 5 <00010007ffee01e4051400280058b90000ffe8b310014d00b8fff0b30f01
4d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b014d00ba021100
1dffc0b711014d1d0e235209bb013200130018012eb10556003ffdd4ed3f
012f2f2be12b2b2b2b2b313001140e0223222e0635343e0233321e023332
3e023511343e0233321e021501e41c446f521c372e220b07050203080b08
0819232e1f22302010081421191822130901464d805a31090f110c0c1119
12161d11070f120f112e5141039e070c080404080c07>DLGQMX+Calibri AddT42Char 
1 9326 34 <0001002afede017300e0001b000ab20b171c0010d4cd313025140e020707
0e0323222e02371335343e0233321e020173060e171189050d1319131117
0a0104850b18241a1924170b8f1f342e2d19ce070a080303070c08011380
1b20100606102000>DLGQMX+Calibri AddT42Char 
1 8160 29 <00010022fffa037b03bc002c00e3b90023fff840170b0c014c1f080b0c01
4c251f011e080b0c014c251e0116b8fff0b30b014d15b8fff0b30b014d14
b8ffe8b30b014d13b8ffe8b30b014d12b8ffe8b30b014d11b8fff040370b
014d37110126110127100128050122280b014d3d220124220121280b014d
3f210124210120280b014d3d2001242001270f0176210121b8ffd0400911
1548212013014d21b8ffe8400910014d21200f014d21b8ffe8b30c014d21
b8fff0400c0b014d212849210b1a490b4c003f3f12393f012f2b2b2b2b2b
002b5d31305d5d5d2b5d5d2b5d5d2b015d5d5d5d2b2b2b2b2b2b5d2b5d2b
2b01140e0207010e0323222e0227012e0235343e0233321e021713173713
3e0333321e02037b01020302fecd040d1a281e1e28190e04fece04050108
131f171d23130904fe0403fb020a13211b171e1107039f04090a0c07fca9
0b0e080304080e0a03570c120903080c070203080c09fd1a0c0c02e6090c
080302080b00>DLGQMX+Calibri AddT42Char 
1 4716 16 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>DLGQMX+Calibri AddT42Char 
1 2042 8 <00010047ffed03630521004900e7b90041ffe8b40f10014c41b8fff0b30d
014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d41b8022c
402b32401314014c324011014d243224320c1b180f10014c1b100d014d1b
1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d00b8ffc0
b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb0127003700
0a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c3711371116
3cb8010cb5411b05295316b80129b10556003fed3f123939ed1139392f2f
2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b2be12b2b
2b2b2b313001140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0603634377a15d41
6f573b170b04080c080e3350714a385d43243252696e6852333b6991542b
574d3c1306040203060b070b2f445d3a3650341a32536a6e6a5333016b5b
8e633216202218251f161d12072228231e375033374e3b31333e54714f51
7f562d0f191f130b111813121c13091c231d1d304225364e3c32333d5371
>DLGQMX+Calibri AddT42Char 
1 5266 18 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>DLGQMX+Calibri AddT42Char 
1 9740 37 <00010097fff7016e00e0000b0017b10006b8ffc0b60c014d0609034c003f
cd012f2bc13130251406232226353436333216016e2f3e3c2e2f3e3c2e6d
472f2e45472f2e00>DLGQMX+Calibri AddT42Char 
1 970 4 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c100>DLGQMX+Calibri AddT42Char 
1 6968 24 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>DLGQMX+Calibri AddT42Char 
1 1700 7 <000200acfffa040b050e003600440091401e102e1137080b014d37100f01
4d37100c0d014c371810014d37180b014d37b80233b7294010014d293f11
b8fff0b310014d11b8fff0b30f014d11b8fff0b30d014d11b8fff6b30c01
4d11b8ffe8b30b014d11b80211b21c2e10b80108b67040014040173db801
0bb5215117550555003f3f3fed12392f5ded39012fe12b2b2b2b2b32d42b
e12b2b2b2b2b123939313025140e0223222e0227032e03232311140e0223
222e023511343633213216171e0315140e02071e03171316160134262726
2623231133323e02040b0614241e1a21140b0477152d3e543b7309132119
192114082917011331411a4b734e2723425c3920342d2814740e08fefd44
50193f3391a84463421f1a080c08040409100c013134573f23fdd9080c07
0505070c0804ae271f05030d38566f4341674f3a140e2b3c4e31fee3241d
03854c69170706fe4c213b50>DLGQMX+Calibri AddT42Char 
1 1390 6 <000100acfffa047e0511003d0085b3270f0f14b8ffe8b310014d14b8ffe8
b30f014d14b8ffe8b30d014d14b8fff0b30c014d14b8ffe8b30b014d14b8
0211401e1e0a2e2e321810014d32180f014d32180d014d32100c014d3218
0b014d32b802114010001e38520a2e0f270419225119550654003f3f3f12
17393f012fd4e12b2b2b2b2b32113310e12b2b2b2b2b322f33313025140e
022323222e0227012626272316161511140e0223222e0235113436333332
1e0217011e03173326263511343e0233321e0215047e0d151a0d371a2723
2315fe6820411c02020208131f18181f12082c1a521d271f1d11013a1d36
32311801020108131f191620120847141c12080b1d322702e0397d3b4896
4afcf3070d070505070d0704aa28220a17291ffdc83463605d2f4fab4f02
be070c090404090c0700>DLGQMX+Calibri AddT42Char 
1 9808 38 <0001004501b4022e023d000f000eb400070bed04002fed012fcd31300114
06232122263534363321321e02022e1211fe5e1212121201a2080d090501
f9271e1f26261e06111a>DLGQMX+Calibri AddT42Char 
1 3978 14 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>DLGQMX+Calibri AddT42Char 
1 7636 27 <00010021ffef03dc04ad0041003db22f4110b801f8b42b1e1e2b0fb801f9
400c03352b4148102bed3b354814b80104b3254d094c003f3fed3fcded32
3f012f32dde112392f10e1322f31300132161511140e0223222e02351121
11141633323e0233321e0215140e0423222e02351123222635343e023333
35343e0233321e02151503a81e160813201719201308fe2f374717241c14
0805090504081020292e174664401d7e0f1205080d087d07132018192012
0803b71b1afc97080b080404080b080315fe0a5d5f090a09050e18121d21
110e0906254b734e020e2024131a1107d6070c090404090c07d6>DLGQMX+Calibri AddT42Char 
1 9016 32 <0002000003b70151052f000b000c0014b900000271b40609030c48003fde
cd012fe131300114062322263534363332160101512c3b3a2b2c3b3a2bfe
af04cd3a2a29393a2a29feb1>DLGQMX+Calibri AddT42Char 
1 7612 26 <ffff0021ffef03ef052f0226001b000000070020029e0000>DLGQMX+Calibri AddT42Char 
1 7872 28 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>DLGQMX+Calibri AddT42Char 
1 8814 31 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>DLGQMX+Calibri AddT42Char 
1 4452 15 <00010099fffa03a0057100320079b43f34012a13b8ffe8b30b014d13b8ff
f0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f840171e0b
0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a00400c01
4d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239012f2f2b
e12b2b2b2b10e12b2b2b2b3931305d25140e0223222e023511342e022322
060711140e0223222e023511343e0233321e021511363633321e021503a0
0812201819201208182e49303e7c44081220191820130707132018192012
084790495a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08
0404080b080538080c080404080c08fde54b493d66896100>DLGQMX+Calibri AddT42Char 
1 11844 45 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>DLGQMX+Calibri AddT42Char 
1 11120 43 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>DLGQMX+Calibri AddT42Char 
1 12668 48 <00010063fffa03af050e001f00d7b90011ffe8400a1121014c111010014d
11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8fff8400a
0b014d74110126110110b8ffe8400a1121014c101010014d10b8ffe8b30f
014d10b8fff0b30d014d10b8ffe8400b0b0c014c75100126100106b8fff0
b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ffd8b40b01
4d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d15b8ffe0
b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2bcd2b2b31
305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b01140e0207010e03232226
2636370121222635343e023321321e0203af03050906fe2e050f17241a22
2611020601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c
0f0903060d130d044a2824131c130906121c>DLGQMX+Calibri AddT42Char 
1 9424 35 <00020048fedf018d03950013002f0021b12414bb024f00260000027bb50a
1f2b30050f002fcd10d4cd012fe1d4e1c6313001140e0223222e0235343e
0233321e0211140e0207070e0323222e02371335343e0233321e02018d09
19281f20281809091828201f281909060d171188050d12191211170a0104
830c1724191824170b0320202c1b0b0b1b2c20222d1b0b0b1b2dfd4d1f34
2e2d19cc080a070403080b090111801b201006061020>DLGQMX+Calibri AddT42Char 
1 11478 44 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>DLGQMX+Calibri AddT42Char 
1 10532 42 <00030052ffed03ba05210027003700470182b90036fff0b40f11014c36b8
fff0b40c0d014c35b8fff0b40f11014c35b8fff0b40c0d014c34b8fff0b4
0f11014c34b8fff0b40c0d014c33b8fff0b311014d33b8fff0b30f014d49
b8ffc0b60f024d60490130b8fff0b40c0d014c30b8fff0b40f10014c30b8
fff0b40c0d014c30b8ffe0b30b014d30b8021940191428100c0d014c2810
0f10014c28100c0d014c28200b014d28b80218401a1e0f231e1e180f014d
14180f014d141e141e0a38100c0d014c38b8ffd040151d014d38100f1001
4c38100c0d014c38200b014d38ba02430000ffd4b30f024d00b8ffe0b30f
014d00b8ffc0b314014d00b8ffc0b310014d00b8ffc0b30d014d00b8ffc0
b40b014d0042b8fff0400a0c0d014c42301d014d42b8fff0b40f10014c42
b8fff0b40c0d014c42b8ffe0b30b014d42b8024340110a400b014d0a353d
052dfd195945fd055f003fed3fed123939012f2be12b2b2b2b2bd42b2b2b
2b2b2be12b2b2b2b2b1239392f2f2b2b12393910e12b2b2b2b10e12b2b2b
2b31305d2b002b2b2b2b2b2b2b2b01140e0223222e0235343e02372e0335
343e0233321e0215140e02071e0303342e0223220615141e021736361334
2e02270e0315141633323603ba3c71a66b649e6e3a284b6e453c5c402131
639966628f5d2c21405d3c476f4b27d81d3853356c6f1b39573c656c2a22
4567443f5f3d1f85848083014c54835a2e2a52784d3d66564b221f45515c
36447758332f516e3f335e544920234a555f025f2a443019625527433c39
1f347efda22e4b413d211f3e42492c616a6b>DLGQMX+Calibri AddT42Char 
1 12986 49 <ffff0052ffed03ba05210206002a0000>DLGQMX+Calibri AddT42Char 
1 9878 39 <00010085fea701f3058b00230022401503100b014d03100f014d03100c0d
014c03151f0b85003f2f012f332b2b2b3130010602151412171616060623
222e02272e0335343e02373e0333321e0201ef5f5d5f5b05010e1d19121a
130c033652381c1f3952330109101c16171c10020562c9fe59d6d7fe5acb
0c110b050206080566d1d8dd7171dcd9d26704060603060a1000>DLGQMX+Calibri AddT42Char 
1 10184 41 <0002006bffed03bd0520003400480099b9004affc040170f024d604a012b
753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a35016a35
014b35013a35012b350135b80243b670000120000100b8ffe0b30f014d00
b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff30300526b80100
b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b5d5de15d
5d5d5d5d12392f10e15d5d5d5d5d3231305d2b01140e0223222e0435343e
0433321e0615140e0223222e0223220e02073e0333321e0207342e022322
0e0207141e0233323e0203bd346ca671517c5c3d2510122e4f77a66e254c
402c0e07040201070b090b26364d335d865529031a414d563169905926ae
17365a42254a453f1a213f5e3f405e3e1d01a3559f7949284a6c8aa45e53
aa9e8b673c090f120b0d0f130e121a10080e110e4c80a95c0f1e180f3965
89603a5f42240d171f1281ae692d30516500>DLGQMX+Calibri AddT42Char 
1 12652 47 <ffff006bffed03bd0520020600290000>DLGQMX+Calibri AddT42Char 
1 10024 40 <0001007afea701e7058b00210033b90012fff0b30b014d12b8fff0b30f01
4d12b8fff0b50c0d014c1200b8ffc0b60b014d001a0a85003f2f012f2b32
2b2b2b313001140e02070e03232226263637361235340227263e0233321e
0217161201e71c385136030c131a121a1d0d01055c5e5e5e0402101c1715
1c1108026775021971ddd8d16605080602050b110cca01a7d7d601a7c909
100a0603060604cdfe4f>DLGQMX+Calibri AddT42Char 
1 13002 50 <00020052ffed03a605210030004200bd4013292e012a0501290401290301
2a2601260a0144b8ffc040200f024d60440131080d014d31100c0d014c1d
7a3101393149316931032b310131b8022c4009000e0e200070000200b8ff
e0b30f024d00b8ffe0b40f014d003bb8fff8b30d014d3bb8fff040120c0d
014c753b01363b463b663b03243b013bb8022b400e2f25012540f2202007
36f42a5318b80108b10756003fed3fed12392fed012f5de15d5d5d2b2bc4
2b2b5d392f10e15d5d5d322b2b31305d2b005d5d015d5d5d5d01140e0423
222e0435343e0233321e0233323e0237060623222e0235343e0233321e04
07342e0223220e0215141e0233323603a61430517ba9702b51412c140903
060b080b283d5233618b582c023594606c935927326aa472517d5c402711
af2242603f415c3b1c19385a424b8c02ba54ac9f8b683b0b1012121f1a16
1a0e050f120f4b7ea65c1f303b668c53569b7646294d6d8aa14680af6c30
2f4f64353b6244252d00>DLGQMX+Calibri AddT42Char 
1 12164 46 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>DLGQMX+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>DLGQMX+Calibri AddT42Char 
DLGQMX+Calibri /CharStrings get begin
/g2 2 def
/g11 11 def
/g9 9 def
/g22 22 def
/g25 25 def
/g12 12 def
/g1 1 def
/g13 13 def
/g23 23 def
/g21 21 def
/g19 19 def
/g36 36 def
/g3 3 def
/g20 20 def
/g10 10 def
/g17 17 def
/g5 5 def
/g34 34 def
/g29 29 def
/g16 16 def
/g8 8 def
/g18 18 def
/g37 37 def
/g4 4 def
/g24 24 def
/g7 7 def
/g6 6 def
/g38 38 def
/g14 14 def
/g26 26 def
/g28 28 def
/g31 31 def
/g15 15 def
/g45 45 def
/g43 43 def
/g48 48 def
/g35 35 def
/g44 44 def
/g49 49 def
/g39 39 def
/g47 47 def
/g40 40 def
/g50 50 def
/g46 46 def
end
DLGQMX+Calibri /Encoding get
dup 33 /g2 put
dup 34 /g11 put
dup 35 /g9 put
dup 36 /g22 put
dup 37 /g25 put
dup 38 /g12 put
dup 39 /g1 put
dup 40 /g13 put
dup 41 /g23 put
dup 42 /g21 put
dup 43 /g19 put
dup 44 /g36 put
dup 45 /g3 put
dup 46 /g20 put
dup 47 /g10 put
dup 48 /g17 put
dup 49 /g5 put
dup 50 /g34 put
dup 51 /g29 put
dup 52 /g16 put
dup 53 /g8 put
dup 54 /g18 put
dup 55 /g37 put
dup 56 /g4 put
dup 57 /g24 put
dup 58 /g7 put
dup 59 /g6 put
dup 60 /g38 put
dup 61 /g14 put
dup 62 /g26 put
dup 63 /g28 put
dup 64 /g31 put
dup 65 /g15 put
dup 66 /g45 put
dup 67 /g43 put
dup 68 /g48 put
dup 69 /g35 put
dup 70 /g44 put
dup 71 /g49 put
dup 72 /g39 put
dup 73 /g47 put
dup 74 /g40 put
dup 75 /g50 put
dup 76 /g46 put
pop
end
%ADOEndSubsetFont
/FUUEHO+Calibri /DLGQMX+Calibri findfont ct_VMDictPut/FUUEHO+Calibri*1 [33{/.notdef}rp /g2 /g11 /g9 /g22 /g25 /g12 /g1 /g13 /g23 /g21 /g19 /g36 /g3 /g20 /g10 /g17 /g5 /g34 /g29 /g16 /g8 /g18 /g37 /g4 /g24 /g7 /g6 /g38 /g14 /g26 /g28 /g31 /g15 /g45 /g43 /g48 /g35 /g44 /g49 /g39 /g47 /g40 /g50 /g46 179{/.notdef}rp]FUUEHO+Calibri nfFUUEHO+Calibri*1 [12 0 0 -12 0 0 ]msf309.22 546.933 mo(!"#$%&"'\(\)*+,')[6.94312 6.30475 5.74805 6.30472 4.02008 5.97122 6.30472 2.71317 3.66232 4.1832 6.32748 9.58557 3.21127 0 ]xsh383.212 546.933 mo(-\)&..&/0&)[6.52686 4.1868 5.97482 6.31073 6.3107 5.97482 5.07486 5.45883 0 ]xsh434.974 546.933 mo('12'!\)#34.'!!2'5%#\)0'!2'&%'#67'849/\)&%&'9+#66':;!<=&.&\)#>.='6*/4'#9')[2.7132 3.82559 2.99399 2.7132 6.94312 4.1832 5.74805 5.42035 2.75406 6.30472 2.71317 6.94315 6.94315 2.99399 2.7132 5.51398 4.02008 5.74802 4.18323 5.4552 2.7132 6.94312 2.99402 2.7132 5.97119 4.02008 2.7132 5.74805 2.75403 3.02875 2.7132 7.38251 2.75403 4.69324 5.07489 4.18317 5.97125 4.02008 5.97119 2.7132 4.69324 9.58557 5.74805 2.75403 2.75409 2.71313 6.51599 7.74597 6.94312 3.67438 5.64838 5.97119 6.30475 5.97119 4.18317 5.74805 6.6853 6.30469 5.64832 2.7132 2.75403 6.32751 5.07489 2.75403 2.71313 5.74805 4.6933 0 ]xsh340.351 560.933 mo(+#9%&\)'\)&=?6#%*\)9'*\('%\)#.9$*9*.'#/>34%@'4.'8\)*9*$A46#7')[9.58557 5.74805 4.69327 4.02008 5.97122 4.1832 2.71317 4.1832 5.97119 5.64832 6.30475 2.75403 5.74805 4.02008 6.32751 4.1832 4.69327 2.7132 6.32751 3.66229 2.7132 4.02008 4.18317 5.74805 6.30475 4.69327 6.30472 6.32751 4.6933 6.32751 6.30472 2.71317 5.74805 5.07486 6.68527 5.42035 2.75403 4.02008 5.43127 2.71313 2.75403 6.30475 2.7132 7.38245 4.18317 6.32751 4.6933 6.32745 6.30475 6.30475 2.75403 2.75409 5.74805 3.02875 0 ]xsh%ADOBeginSubsetFont: UPEAAA+Calibri-Italic Initial
ct_T42Dict begin
-0.723 -0.273 1.258 1.012
 256 array 0 1 255 {1 index exch /.notdef put} for  /UPEAAA+Calibri-Italic
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000005146670
676d00000000000005d000000913676c796600000000000020a80000040e
686561640000000000000ee400000036686865610000000000000f1c0000
0024686d74780000000000000f40000000106c6f63610000000000000f50
0000000a6d6178700000000000000f5c000000206e616d65000000000000
0f7c00000028707265700000000000000fa4000011026764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea7000000000000000000000000004a004c0054005500560057
0059004f004e004f00500051004d005d005f006100630064006500660067
00680069006a006b006c006d006e006d0066006f00700071007200730074
007500760071007400700071007200740075007600780079007a007d0078
0079007a007b007c007d0079007c007a007c007d007e007f00800081007e
007f008000810082007f008000810082007e007f00800081008200830085
008300840085008600870088008900860088008900830084008500860087
008800890083008400850086008700880089008a008b008c008d008e008f
008a008b008c008d008f008a008b008c008d008e008f008a008b008c008d
008e008f0090009500900091009200930094009500980099009a009b009c
00900091009300960097009b009c009f00a2009400960090009100920093
009400950096009700980099009a009b009c009d009e009f00a000a100a2
00a300a600a7009000910092009300940095009600980099009f00bc00bd
00c100c600be00bf00bf00c100c200b900be00c200df00e000e400e700e8
00e9012b0136014700f200f400cf00640066006a006c006d0070006c006d
0069006c0067007300740075007600770078007a007b007c007d007e0081
008400850086008700880089008a0076007a007b007c007e007f00800082
00830084008700880089008a007700850087007900820084008500860087
0088008a0079007a007c007d007e0081008300840086008700880089008b
008c008d008e008f00900091009200940095008b008c008d008e008f0093
009400950093008b008c008d008e00900091009200930094008c008d008e
008f009000910092009300940095009700980099009a009b009c00960097
00980099009a009b009c009a009c009600980099009a009b009c00960097
009b009c009d009e009f00a000a100a2009d009e009f00a000a100a200a1
009d009e009f00a000a100a2009d009e009f00a000a100a200a300a500a3
00a400a500a600a700a300a500a300a400a500a600a700a300a400a500a6
00a700a800a900a800a900aa00ab00ac00a800ab00ac00a800a900aa00ab
00ac00a800a900aa00ab00ac00ad00ae00af00b000b100b300b500b600b7
00b800af00b000b100b300b400b700ad00ae00af00b000b100b200b300b4
00b500b600b700b800ad00ae00af00b000b100b200b300b400b500b600b7
00ba00bb00bc00bd00bf00c000c100c200c300c400ba00bb00bf00c300b9
00ba00bb00bc00bf00c100c200c300ba00bc00bf00c200c700c900cb00cc
00cd00c500c600c700c600c700cb00ce00cf00d100d200db00dc00de00df
00e000e400d600e800e90123012b00d000d1042600d8050e010503c000c2
024e0078042600d702990092000005e4000e40465f5e5d5c5b5a59585554
535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736
352f2e2d2c2826252423221f181411100f0d0b0a09080706050403020100
2c4523466020b02660b004262348482d2c452346236120b02661b0042623
48482d2c45234660b0206120b04660b004262348482d2c4523462361b020
6020b02661b02061b004262348482d2c45234660b0406120b06660b00426
2348482d2c4523462361b0406020b02661b04061b004262348482d2c0110
203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed
51582320b04d44235920b0042651582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab102
00080d2d2c2045b00325456164b050515845441b2121592d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb02923
44b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b212159
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d
2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c6423648b
b84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c64
23648bb84000626023212d2c4523456023456023456023766818b0806220
2d2cb00426b00426b00425b0042545234520b003266062636820b0032661
658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45b1
302f4523456160b0016069442d2c4b5158b02f2370b01423421b2121592d
2c4b515820b0032545695358441b2121591b2121592d2c45b01443b00060
63b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d2c
4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b00326
458a586466b01f601b64b020606620581b21b04059b001615923586559b0
2923442310b029e01b2121212121592d2cb0164358b004254564b0206066
20581b21b04059b0016123586559b0292344b00425b00725082058021b03
59b0052510b004252046b0042523423cb0072510b006252046b00425b001
6023423c2058011b0059b0052510b00425b029e0b0072510b00625b029e0
b00425b00725082058021b0359b00425b003254348b00625b00325b00160
43481b2159212121212121212d2cb0164358b004254564b020606620581b
21b04059b0016123581b6559b0292344b00525b00825082058021b0359b0
042510b005252046b0042523423cb00425b0072508b0072510b006252046
b00425b0016023423c2058011b0059b0042510b00525b029e0b029204565
44b0072510b00625b029e0b00525b00825082058021b0359b00525b00325
4348b00425b0072508b00625b00325b0016043481b215921212121212121
2d2c02b00425202046b004252342b0052508b003254548212121212d2c02
b0032520b0042508b0022543482121212d2c452320451820b00050205823
652359236820b040505821b04059235865598a60442d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2cb000214b5458381b2121592d2cb002435458b0462b
1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b048
2b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b53
8a4b515a5823381b2121592d2c0020b200400325b0062649618b3812342d
2c014623466023466123201020468a61b8ff80628ab140408a704560683a
2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b
014b54422d2cb1020042b123018851b1400188535a58b910000020885458
b202010243604259b12401885158b920000040885458b2020202436042b1
2401885458b2022002436042004b014b5258b2020802436042591bb94000
0080885458b202040243604259b94000008063b80100885458b202080243
604259b94000010063b80200885458b202100243604259b94000020063b8
0400885458b202400243604259595959592d2c451868234b515823204520
64b04050587c59688a6059442d2cb00016b00225b0022501b001233e00b0
02233eb10102060cb00a236542b00b234201b001233f00b002233fb10102
060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb007
2558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b006
255cb006255a58b0092b5920b005254ab0042547b004254760b0062547b0
806361b00225b0005558b00325b00725496359b0082558001b0159b00425
b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520b0
005558631b2159612320b0005558b080631b21b08059b0592bb006255c58
6959b00425202010b00048233ab0062658001b0159b0052658b003252f59
8a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625b0
0a251bb00925b0072559b00225b00225070cb005256323b00625636020b9
4000040063535821b00426b00426b00a1bb94000040063655158b0042665
b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb00725
b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b0052587
b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b005
25b0052507b00825b00b254923b00625b0062587b00a2510b00b25c15920
b00051b800522378b00161b00225b00725b0072507b00a25b00d254961b0
8062b00525b005250bb00a252338b00625b0062587b00825b008250bb00a
2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa7237921
21212121212121212121212d2c23b0005458b9400000001bb90000400059
8ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b94000
00001bb900004000590db05b2b2d2c8a8a080d8ab0005458b9400000001b
b90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b2b
2d000001000000059eb8b11d76ea5f0f3cf50019080000000000bbeb7ccc
00000000c787a88bfa34fdcb0a14081c0002000900020000000000000001
0000079efdda00000aa0fa34fa0b0a140800019a00000000000000000000
00000004040e0000042e007303d2004d01d6003f000000a8012801bf0207
00000001000000040120001000e1000700020010002f0060000009ed014e
00040001000000010012000100000000000600150000584841434b562b43
616c696272692d4974616c696300b10903b8027ab21e3e1fb80279b21e3e
1fb80278b21e0b1fb80277b21e0b1fb80276b21e3a1fb80275b21e3a1fb8
0274b21e3e1fb80273b21e3b1fb80272b21e3c1fb80271b21e3c1fb80270
b21e3c1fb8026fb21e3d1fb8026eb21e3d1fb8026db21e3e1fb8026cb21e
3e1fb8026bb21d411fb8026ab21d411fb80269b21d421fb80268b21d431f
b80267b21d431fb80266b21d431fb80265b21d431fb80264b21d431fb802
63b21d411fb80262b21d421fb80261b21d421fb80260b21d431fb8025fb2
1d431fb8025eb21c451fb8025db21c451fb8025cb21c451fb8025bb21c45
1fb8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c451fb8
0256b21c451fb80255b21c451fb80254b21c451fb80252b21c451fb80251
b21c451fb80250b21c451fb8024fb21c451fb8024eb21c441fb8024db21c
451fb8024cb21c451fb8024bb21c451fb8024ab21c451fb80249b21c451f
b80248b21c451fb80247b21c451fb80246b21c451fb80245b21c451fb802
44b21b491fb80243b21b4a1fb80242b21b4a1fb80241b21b4a1fb80240b2
1b4b1fb8023fb21b4b1fb8023eb21b4c1fb8023db21b4c1fb8023cb21b4c
1fb8023bb21b4c1fb8023ab21b4c1fb80253b21b4c1fb80239b21b491fb8
0238b21b491fb80237b21b4a1fb80236b21b4a1fb80235b21b4a1fb80234
b21b4b1fb80233b21b4b1fb80232b21b4c1fb80231b21b4c1fb80230b21b
4c1fb8022fb21b4c1fb8022eb21b4c1fb8022db21b491fb8022cb21b4a1f
b8022bb21b4b1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb802
27b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223b2
1b4b1fb80222b21b4c1fb80221b21b4c1fb80220b21b4c1fb8021fb21b4c
1fb8021eb21b4c1fb8021db21a4e1fb8021cb21a4e1fb8021bb21a4f1fb8
021ab21a4f1fb80219b21a4f1fb80218b21a4e1fb80217b21a4e1fb80216
b21a4f1fb80215b21a4f1fb80214b21a4f1fb80213b21a4e1fb80212b21a
4e1fb80211b21a4f1fb80210b21a4e1fb8020fb21a4e1fb8020eb21a4f1f
b8020db21a4f1fb8020cb21a4f1fb8020bb21a4f1fb8020ab21a4f1fb802
09b219501fb80208b219511fb80207b219511fb80206b219511fb80205b2
19511fb80204b219501fb80203b219511fb80202b219511fb80201b21951
1fb80200b219511fb801ffb219511fb801feb219511fb801fdb219501fb8
01fcb219511fb801fbb219511fb801fab219511fb801f9b219511fb801f8
b219511fb801f7b219511fb801f6b218531fb801f5b218531fb801f4b218
541fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b218531f
b801efb218531fb801eeb218541fb801edb218541fb801ecb218541fb801
ebb218541fb801eab218531fb801e9b218531fb801e8b218531fb801e7b2
18541fb801e6b218541fb801e5b218541fb801e4b218541fb801e3b21853
1fb801e2b218531fb801e1b218541fb801e0b218541fb801dfb218541fb8
01deb218541fb801ddb217561fb801dcb217561fb801dbb217571fb801da
b217571fb801d9b217561fb801d8b217561fb801d7b217571fb801d6b217
571fb801d5b217571fb801d4b217571fb801d3b217561fb801d2b217571f
b801d1b217561fb801d0b217561fb801cfb217571fb801ceb217571fb801
cdb217571fb801ccb217571fb801cbb217571fb801cab217561fb801c9b2
17561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b21757
1fb801c4b2163e1fb801c3b2163f1fb801c2b2163f1fb801c1b2165b1fb8
01c0b2165b1fb801bfb2165b1fb801beb2165b1fb801bdb2165b1fb801bc
b2165b1fb801bbb2165b1fb801bab2163f1fb801b9b2163f1fb801b8b216
5b1fb801b7b2165b1fb801b6b2165b1fb801b5b2165b1fb801b4b2165b1f
b801b3b2165b1fb801b2b2165b1fb801b1b2163f1fb801b0b2163e1fb801
afb2163f1fb801aeb2163f1fb801adb2165b1fb801acb2165b1fb801abb2
165b1fb801aab2165b1fb801a9b2165b1fb801a8b2163e1fb801a7b2163f
1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1fb8
01a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2165b1fb8019e
b215621fb8019db215621fb8019cb215631fb8019bb215641fb8019ab215
651fb80199b215661fb80198b215661fb80197b215661fb80196b215661f
b80195b215661fb80194b215661fb80193b215661fb80192b215611fb801
91b215621fb80190b215631fb8018fb215641fb8018eb215641fb8018db2
15651fb8018cb215661fb8018bb215661fb8018ab215631fb80189b21564
1fb80188b215551fb80187b215611fb80186b215621fb80185b215621fb8
0184b215631fb80183b215651fb80182b215661fb80181b215661fb80180
b215661fb8017fb215661fb8017eb215661fb8017db215661fb8017cb215
661fb8017bb215661fb8017ab215451fb80179b215611fb80178b215621f
b80177b215621fb80176b215631fb80175b215641fb80174b215641fb801
73b215651fb80172b215661fb80171b215661fb80170b215661fb8016fb2
15661fb8016eb215661fb8016db215661fb8016cb215661fb8016bb21555
1fb8016ab215451fb80169b215451fb80168b215361fb80167b215361fb8
0166b214821fb80165b214561fb80164b2147f1fb80163b214551fb80162
b214561fb80161b214401fb80160b214551fb8015fb214561fb8015eb214
7e1fb8015db214831fb8015cb214851fb8015bb2133d1fb8015ab2131e1f
b80159b2131e1fb80158b2130a1fb80157b2130a1fb80156b2130b1fb801
55b2133a1fb80154b2133a1fb80153b2133a1fb80152b2133b1fb80151b2
133c1fb80150b2133c1fb8014fb212451fb8014eb212461fb8014db21246
1fb8014cb212451fb8014bb212451fb8014ab212461fb80149b212461fb8
0148b212461fb80147b212441fb80146b212451fb80145b212461fb80144
b212461fb80143b211471fb80142b211571fb80141b211581fb80140b211
591fb8013fb2115a1fb8013eb2115a1fb8013db2115b1fb8013cb2115b1f
b8013bb2115b1fb8013ab2115b1fb80139b2112b1fb80138b2112c1fb801
37b211391fb80136b211391fb80135b211461fb80134b211471fb80133b2
11471fb80132b211551fb80131b211551fb80130b211561fb8012fb21156
1fb8012eb211571fb8012db211571fb8012cb211581fb8012bb211591fb8
012ab211591fb80129b2115a1fb80128b2115a1fb80127b2115b1fb80126
b2115b1fb80125b2115b1fb80124b2115b1fb80123b211591fb80122b211
5a1fb80121b211391fb80120b211471fb8011fb211561fb8011eb211561f
b8011db211591fb8011cb211591fb8011bb2115b1fb8011ab2115b1fb801
19b2115b1fb80118b211561fb80117b211561fb80116b211571fb80115b2
11571fb80114b211581fb80113b2115a1fb80112b2115a1fb80111b2115b
1fb80110b2115b1fb8010fb2115b1fb8010eb2115b1fb8010db2115a1fb8
010cb2115b1fb8010bb2105d1fb8010ab2105e1fb80109b2105f1fb80108
b2105f1fb80107b2105f1fb80106b2105f1fb80105b2105d1fb80104b210
5e1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff105f
1fff105d1ffe105f1ffd105f1ffc105f1ffb105f1ffa105d1ff9105e1ff8
105f1ff7105f1ff6105f1ff5105f1ff40f621ff30f621ff20f631ff10f64
1ff00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641fe9
0f641fe80f641fe70f641fe60f621fe50f621fe40f641fe30f621fe20f62
1fe10f631fe00f641fdf0f641fde0f641fdd0f641fdc0f641fdb0f641fda
0e671fd90e681fd80e681fd70e681fd60e681fd50e671fd40e681fd30e68
1fd20e681fd10e671fd00e681fcf0e681fce0e681fcd0e681fcc0e681fcb
0e681fca0e681fc90e681fc80d6b1fc70d6c1fc60d2a1fc50d6c1fc40d2c
1fc30d6b1fc20d6c1fc10d6d1f40ffc00d6a1fbf0d691fbe0d681fbd0d6b
1fbc0d311fbb0d311fba0d311fb90c711fb80c721fb70c731fb60c741fb5
0c741fb40c741fb30c731fb20c741fb10d311fb00d311faf0d311fae0d31
1fad0d311fac0d311fab0d311faa0d311fa90b7e1fa80b7a1fa70b791fa6
0b7a1fa50b7c1fa40b7d1fa30b7e1fa20b7e1fa10b7e1fa00b7e1f9f0b7e
1f9e0b7e1f9d0b7e1f9c0b7e1f9b0b7e1f9a0b2d1f990b2d1f980aa71f97
0aa51f960aa71f950aa71f940aa71f930aa71f920a681f910a821f900a9b
1f8f0a9d1f8e0a9f1f8d0aa71f8c0aa71f8503251f8403381f8301381f82
55805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d
4012060a7c557a557bab7a557955775578ab7755ba028900660288403c55
76ab755504751475747503f47501ab750144750130750102007510752075
030c7455725573ab7255007250728072b072043bb072e072020072010ab8
ffc0b3721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a03
251f6938675568ab67556638645565ab645563386255613860555f385d55
5eab5d555c385a555bab5a55593858555703251f5638545555ab54555338
515552ab51554f384e554e03251f4d384b554cab4b554a38485549ab4855
473846554503381f001c101c201c0310b8ffc0404e1c1b1e46001b014230
1b401be01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f19016f
197f198f19030f18cf18024018292c460f17cf17df17ef1704134017292e
460016101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316
313546b8ffc0404d162326460f15010f151f1502451f15010011e011f011
0315bf10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff
0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc04027
0c5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d30460003012001
010001100120010308b8ffc0b301151f46b80100b316010501b80190b154
532b2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b0
00555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d00
421d4bb01d5358b0a01d594bb0805358b0401d594bb0ff5358b0001db116
0042592b5e7375732b2b745e732b2b5e73742b73742b7374745e7301755e
73742b2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73002b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73
755e732b2b5e735f73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e000000>
[1039 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 336 1 <00010073fff00479051e00380069ba027d027e00582bb10102435558b31d
1d0010b80255b62d041a041a1509b8012ab2345315b8012cb3402856282b
183f1a4ded3fed1139392f2f012fedc4392f31301bb5041a041a1509b801
2ab2345315b8012cb3402856282b183f1a4ded3fed1139392f2f31305901
14060623222e0223220e0415141e0233323e0233321615140e0823222e02
35343e0433321e0204790e170d0e2640654c548a6f54371c284c6e464e71
5136110b0a0304050809154361794466a4733f284e759bc274497f5a2804
8a153e24252b253f6b8c999c46507d562c232b2310100513161a17131427
23193d77b1735fc9bea87f4921322700>UPEAAA+Calibri-Italic AddT42Char 
1 592 2 <0002004dffed039d03ca002e003c0087ba027f028000582bb10102435558
b62a323706040009b8020e400923110c1e031414232fb8020d4015002306
be37372a1e11110c32d12a4a0cdf401e4d282b183f1a4ded3fed11392f11
12392fed012fd4ed12392f173910ed11173931301b401306be37372a1e11
110c32d12a4a0cdf401e4d282b183f1a4ded3fed11392f1112392fed3130
5901140e022323060615141633323e0233321615140e02070e0323222e02
35343e0433321e0207342623220e020733323e02039d4088d4946a070563
6f40664b3009090904080d080c3d5464325986592c193656779c6254754b
22a9504a41644d371166698d552302e5456e4e2a213e1b646a1316130d0c
0a1c1d1a090c17130c28537c5441959286663e2a425137333f2d4c65381a
2d3c>UPEAAA+Calibri-Italic AddT42Char 
1 894 3 <0001003ffffa01f1057100150047ba027f028000582bb101024355584010
15000b400a000a150b04051046054c282b183f3f121739012f1acd333231
301b400b000a150b04051046054c282b183f3f121739313059370e032322
2e0237013e0333321e0207e6020a142118191f110502010a020915211918
1f11040119080b080404080b080538080c080404080c0800>UPEAAA+Calibri-Italic AddT42Char 
1 0 0 <00050000fe7303da050e00030007003b00550056004fb52d162d16083c41
0a01ed00490007016400020020018c000800010164401204022537060351
1b0d117051015144070254003fdddedd5ddeddcd3fdddecd012fddedd6ed
10fdd6ed1239392f2f3130011121110111211101140e020707060623222e
02373736363333323e0235342e0223220e0223222635343e02373e033332
1e0201140e0207060623222e0235343e0237363633321e020103dafc5b03
4ffd06027b1f456e4e24021f1b0e140c050120051f17083d4f2e130f2135
2828402f1f070a060205080608293a4422445e3a1afeb503070b070a2016
161a0e0504070c0809201913190e04fe46050efaf2050efb43046cfb9403
313467523605980a0802040606bc1b17253b4621192b20130f13100c0e05
131612060713120b263d4afd8b08171a17070a0a070c100a091818160809
0a060c10fd38>UPEAAA+Calibri-Italic AddT42Char 
UPEAAA+Calibri-Italic /CharStrings get begin
/g1 1 def
/g2 2 def
/g3 3 def
end
UPEAAA+Calibri-Italic /Encoding get
dup 33 /g1 put
dup 34 /g2 put
dup 35 /g3 put
pop
end
%ADOEndSubsetFont
/FUUEHP+Calibri-Italic /UPEAAA+Calibri-Italic findfont ct_VMDictPut/FUUEHP+Calibri-Italic*1 [33{/.notdef}rp /g1 /g2 /g3 220{/.notdef}rp]FUUEHP+Calibri-Italic nfFUUEHP+Calibri-Italic*1 [12 0 0 -12 0 0 ]msf608.277 560.933 mo(!"##)[6.27008 5.72992 2.75409 0 ]xshFUUEHO+Calibri*1 [12 0 0 -12 0 0 ]msf625.784 560.933 mo(7'BCCDEFBGHIJ,FCGK<FFCL7')[3.02881 2.7168 6.07684 6.07684 6.07684 6.07684 3.20886 6.07684 6.07684 6.07684 3.64075 6.07684 3.64069 3.20886 6.07684 6.07684 6.0769 6.07684 3.67676 6.07684 6.07684 6.07684 6.07684 3.02881 0 ]xshFUUEHO+Calibri*1 [18 0 0 -18 0 0 ]msf745.172 580.933 mo(')shFUUEHM+HelveticaNeue*1 [18 0 0 -18 0 0 ]msf348.342 284.926 mo(\337amenco \320 200 kb)[9.3241 9.66605 15.3539 9.66605 10.008 9.66605 10.3321 5.004 9 5.004 10.008 10.008 10.008 5.004 9.34195 0 ]xshFUUEHN+HelveticaNeue*1 [18 0 0 -18 0 0 ]msf496.41 284.926 mo(!)sh180.8 232.065 mo
646.4 232.065 li
646.4 251.92 li
180.8 251.92 li
cp
0 0 0 .233768 cmyk
ef
.75 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
180.8 232.065 mo
646.4 232.065 li
646.4 251.92 li
180.8 251.92 li
cp
0 0 0 1 cmyk
@
grestore
gsave
73.6 313.741 mo
721.6 313.741 li
721.6 440.879 li
73.6 440.879 li
cp
clp
gsave
73.6 440.879 mo
721.6 440.879 li
721.6 313.741 li
73.6 313.741 li
cp
clp
203.989 82.9885 mo
204.773 82.9885 li
204.773 81.4215 li
203.989 81.4215 li
cp
.875 .247 1 .133 cmyk
f
204.773 82.9885 mo
205.557 82.9885 li
205.557 79.8527 li
204.773 79.8527 li
cp
f
205.557 82.9885 mo
206.341 82.9885 li
206.341 79.8527 li
205.557 79.8527 li
cp
f
207.125 82.9885 mo
207.908 82.9885 li
207.908 76.7134 li
207.125 76.7134 li
cp
f
207.908 82.9885 mo
208.692 82.9885 li
208.692 76.7134 li
207.908 76.7134 li
cp
f
208.692 82.9885 mo
209.476 82.9885 li
209.476 72.7915 li
208.692 72.7915 li
cp
f
209.476 82.9885 mo
210.26 82.9885 li
210.26 72.0089 li
209.476 72.0089 li
cp
f
210.26 82.9885 mo
211.044 82.9885 li
211.044 72.0089 li
210.26 72.0089 li
cp
f
211.044 82.9885 mo
211.828 82.9885 li
211.828 77.4996 li
211.044 77.4996 li
cp
f
211.828 82.9885 mo
212.612 82.9885 li
212.612 77.4996 li
211.828 77.4996 li
cp
f
212.612 82.9885 mo
213.396 82.9885 li
213.396 64.9476 li
212.612 64.9476 li
cp
f
213.396 82.9885 mo
214.179 82.9885 li
214.179 68.8696 li
213.396 68.8696 li
cp
f
214.179 82.9885 mo
214.963 82.9885 li
214.963 77.4996 li
214.179 77.4996 li
cp
f
214.963 82.9885 mo
215.747 82.9885 li
215.747 79.0666 li
214.963 79.0666 li
cp
f
215.747 82.9885 mo
216.531 82.9885 li
216.531 79.0666 li
215.747 79.0666 li
cp
f
216.531 82.9885 mo
217.315 82.9885 li
217.315 78.2839 li
216.531 78.2839 li
cp
f
217.315 82.9885 mo
218.099 82.9885 li
218.099 78.2839 li
217.315 78.2839 li
cp
f
218.099 82.9885 mo
218.883 82.9885 li
218.883 64.165 li
218.099 64.165 li
cp
f
218.883 82.9885 mo
219.667 82.9885 li
219.667 69.6557 li
218.883 69.6557 li
cp
f
219.667 82.9885 mo
220.45 82.9885 li
220.45 79.0666 li
219.667 79.0666 li
cp
f
220.45 82.9885 mo
221.234 82.9885 li
221.234 79.0666 li
220.45 79.0666 li
cp
f
221.234 82.9885 mo
222.018 82.9885 li
222.018 80.6354 li
221.234 80.6354 li
cp
f
222.018 82.9885 mo
222.802 82.9885 li
222.802 69.6557 li
222.018 69.6557 li
cp
f
222.802 82.9885 mo
223.586 82.9885 li
223.586 72.0089 li
222.802 72.0089 li
cp
f
223.586 82.9885 mo
224.37 82.9885 li
224.37 73.5776 li
223.586 73.5776 li
cp
f
224.37 82.9885 mo
225.154 82.9885 li
225.154 75.9308 li
224.37 75.9308 li
cp
f
225.154 82.9885 mo
225.937 82.9885 li
225.937 54.7524 li
225.154 54.7524 li
cp
f
225.938 82.9885 mo
226.721 82.9885 li
226.721 65.7338 li
225.938 65.7338 li
cp
f
226.721 82.9885 mo
227.505 82.9885 li
227.505 79.8527 li
226.721 79.8527 li
cp
f
227.505 82.9885 mo
228.289 82.9885 li
228.289 78.2839 li
227.505 78.2839 li
cp
f
228.289 82.9885 mo
229.073 82.9885 li
229.073 64.165 li
228.289 64.165 li
cp
f
229.073 82.9885 mo
229.857 82.9885 li
229.857 64.165 li
229.073 64.165 li
cp
f
229.857 82.9885 mo
230.641 82.9885 li
230.641 69.6557 li
229.857 69.6557 li
cp
f
230.641 82.9885 mo
231.425 82.9885 li
231.425 69.6557 li
230.641 69.6557 li
cp
f
231.425 82.9885 mo
232.208 82.9885 li
232.208 75.1447 li
231.425 75.1447 li
cp
f
232.208 82.9885 mo
232.992 82.9885 li
232.992 78.2839 li
232.208 78.2839 li
cp
f
232.992 82.9885 mo
233.776 82.9885 li
233.776 78.2839 li
232.992 78.2839 li
cp
f
233.776 82.9885 mo
234.56 82.9885 li
234.56 76.7134 li
233.776 76.7134 li
cp
f
234.56 82.9885 mo
235.344 82.9885 li
235.344 81.4215 li
234.56 81.4215 li
cp
f
235.344 82.9885 mo
236.128 82.9885 li
236.128 79.8527 li
235.344 79.8527 li
cp
f
236.128 82.9885 mo
236.912 82.9885 li
236.912 77.4996 li
236.128 77.4996 li
cp
f
236.912 82.9885 mo
237.696 82.9885 li
237.696 78.2839 li
236.912 78.2839 li
cp
f
237.696 82.9885 mo
238.479 82.9885 li
238.479 78.2839 li
237.696 78.2839 li
cp
f
238.479 82.9885 mo
239.263 82.9885 li
239.263 78.2839 li
238.479 78.2839 li
cp
f
239.263 82.9885 mo
240.047 82.9885 li
240.047 79.8527 li
239.263 79.8527 li
cp
f
240.047 82.9885 mo
240.831 82.9885 li
240.831 81.4215 li
240.047 81.4215 li
cp
f
240.831 82.9885 mo
241.615 82.9885 li
241.615 81.4215 li
240.831 81.4215 li
cp
f
241.615 82.9885 mo
242.399 82.9885 li
242.399 81.4215 li
241.615 81.4215 li
cp
f
242.399 82.9885 mo
243.183 82.9885 li
243.183 81.4215 li
242.399 81.4215 li
cp
f
243.183 82.9885 mo
243.966 82.9885 li
243.966 76.7134 li
243.183 76.7134 li
cp
f
243.967 82.9885 mo
244.75 82.9885 li
244.75 75.9308 li
243.967 75.9308 li
cp
f
245.534 82.9885 mo
246.318 82.9885 li
246.318 81.4215 li
245.534 81.4215 li
cp
f
246.318 82.9885 mo
247.102 82.9885 li
247.102 69.6557 li
246.318 69.6557 li
cp
f
247.886 82.9885 mo
248.67 82.9885 li
248.67 69.6557 li
247.886 69.6557 li
cp
f
248.67 82.9885 mo
249.454 82.9885 li
249.454 69.6557 li
248.67 69.6557 li
cp
f
249.454 82.9885 mo
250.237 82.9885 li
250.237 78.2839 li
249.454 78.2839 li
cp
f
250.238 82.9885 mo
251.021 82.9885 li
251.021 79.8527 li
250.238 79.8527 li
cp
f
251.021 82.9885 mo
251.805 82.9885 li
251.805 79.8527 li
251.021 79.8527 li
cp
f
252.589 82.9885 mo
253.373 82.9885 li
253.373 79.8527 li
252.589 79.8527 li
cp
f
253.373 82.9885 mo
254.157 82.9885 li
254.157 78.2839 li
253.373 78.2839 li
cp
f
254.157 82.9885 mo
254.941 82.9885 li
254.941 68.0869 li
254.157 68.0869 li
cp
f
254.941 82.9885 mo
255.725 82.9885 li
255.725 69.6557 li
254.941 69.6557 li
cp
f
255.725 82.9885 mo
256.508 82.9885 li
256.508 79.8527 li
255.725 79.8527 li
cp
f
256.509 82.9885 mo
257.292 82.9885 li
257.292 80.6354 li
256.509 80.6354 li
cp
f
257.292 82.9885 mo
258.076 82.9885 li
258.076 80.6354 li
257.292 80.6354 li
cp
f
258.076 82.9885 mo
258.86 82.9885 li
258.86 80.6354 li
258.076 80.6354 li
cp
f
258.86 82.9885 mo
259.644 82.9885 li
259.644 80.6354 li
258.86 80.6354 li
cp
f
259.644 82.9885 mo
260.428 82.9885 li
260.428 79.8527 li
259.644 79.8527 li
cp
f
260.428 82.9885 mo
261.212 82.9885 li
261.212 79.8527 li
260.428 79.8527 li
cp
f
261.212 82.9885 mo
261.996 82.9885 li
261.996 79.0666 li
261.212 79.0666 li
cp
f
261.996 82.9885 mo
262.779 82.9885 li
262.779 78.2839 li
261.996 78.2839 li
cp
f
262.779 82.9885 mo
263.563 82.9885 li
263.563 72.7915 li
262.779 72.7915 li
cp
f
263.563 82.9885 mo
264.347 82.9885 li
264.347 72.7915 li
263.563 72.7915 li
cp
f
264.347 82.9885 mo
265.131 82.9885 li
265.131 81.4215 li
264.347 81.4215 li
cp
f
265.131 82.9885 mo
265.915 82.9885 li
265.915 50.0461 li
265.131 50.0461 li
cp
f
265.915 82.9885 mo
266.699 82.9885 li
266.699 50.0461 li
265.915 50.0461 li
cp
f
266.699 82.9885 mo
267.483 82.9885 li
267.483 76.7134 li
266.699 76.7134 li
cp
f
267.483 82.9885 mo
268.267 82.9885 li
268.267 81.4215 li
267.483 81.4215 li
cp
f
269.05 82.9885 mo
269.834 82.9885 li
269.834 79.8527 li
269.05 79.8527 li
cp
f
269.834 82.9885 mo
270.618 82.9885 li
270.618 79.8527 li
269.834 79.8527 li
cp
f
270.618 82.9885 mo
271.402 82.9885 li
271.402 81.4215 li
270.618 81.4215 li
cp
f
271.402 82.9885 mo
272.186 82.9885 li
272.186 81.4215 li
271.402 81.4215 li
cp
f
272.186 82.9885 mo
272.97 82.9885 li
272.97 73.5776 li
272.186 73.5776 li
cp
f
272.97 82.9885 mo
273.754 82.9885 li
273.754 72.0089 li
272.97 72.0089 li
cp
f
273.754 82.9885 mo
274.537 82.9885 li
274.537 72.0089 li
273.754 72.0089 li
cp
f
274.538 82.9885 mo
275.321 82.9885 li
275.321 77.4996 li
274.538 77.4996 li
cp
f
275.321 82.9885 mo
276.105 82.9885 li
276.105 71.2227 li
275.321 71.2227 li
cp
f
276.105 82.9885 mo
276.889 82.9885 li
276.889 72.7915 li
276.105 72.7915 li
cp
f
276.889 82.9885 mo
277.673 82.9885 li
277.673 63.3789 li
276.889 63.3789 li
cp
f
277.673 82.9885 mo
278.457 82.9885 li
278.457 63.3789 li
277.673 63.3789 li
cp
f
278.457 82.9885 mo
279.241 82.9885 li
279.241 75.9308 li
278.457 75.9308 li
cp
f
279.241 82.9885 mo
280.025 82.9885 li
280.025 75.9308 li
279.241 75.9308 li
cp
f
280.025 82.9885 mo
280.808 82.9885 li
280.808 79.8527 li
280.025 79.8527 li
cp
f
280.808 82.9885 mo
281.592 82.9885 li
281.592 76.7134 li
280.808 76.7134 li
cp
f
281.592 82.9885 mo
282.376 82.9885 li
282.376 80.6354 li
281.592 80.6354 li
cp
f
282.376 82.9885 mo
283.16 82.9885 li
283.16 36.7098 li
282.376 36.7098 li
cp
f
283.16 82.9885 mo
283.944 82.9885 li
283.944 38.2803 li
283.16 38.2803 li
cp
f
283.944 82.9885 mo
284.728 82.9885 li
284.728 75.9308 li
283.944 75.9308 li
cp
f
284.728 82.9885 mo
285.512 82.9885 li
285.512 75.9308 li
284.728 75.9308 li
cp
f
285.512 82.9885 mo
286.296 82.9885 li
286.296 81.4215 li
285.512 81.4215 li
cp
f
286.296 82.9885 mo
287.079 82.9885 li
287.079 81.4215 li
286.296 81.4215 li
cp
f
287.079 82.9885 mo
287.863 82.9885 li
287.863 63.3789 li
287.079 63.3789 li
cp
f
287.863 82.9885 mo
288.647 82.9885 li
288.647 64.9476 li
287.863 64.9476 li
cp
f
288.647 82.9885 mo
289.431 82.9885 li
289.431 78.2839 li
288.647 78.2839 li
cp
f
289.431 82.9885 mo
290.215 82.9885 li
290.215 73.5776 li
289.431 73.5776 li
cp
f
290.215 82.9885 mo
290.999 82.9885 li
290.999 73.5776 li
290.215 73.5776 li
cp
f
290.999 82.9885 mo
291.783 82.9885 li
291.783 65.7338 li
290.999 65.7338 li
cp
f
291.783 82.9885 mo
292.567 82.9885 li
292.567 76.7134 li
291.783 76.7134 li
cp
f
292.566 82.9885 mo
293.35 82.9885 li
293.35 74.362 li
292.566 74.362 li
cp
f
293.35 82.9885 mo
294.134 82.9885 li
294.134 80.6354 li
293.35 80.6354 li
cp
f
294.134 82.9885 mo
294.918 82.9885 li
294.918 78.2839 li
294.134 78.2839 li
cp
f
294.918 82.9885 mo
295.702 82.9885 li
295.702 78.2839 li
294.918 78.2839 li
cp
f
295.702 82.9885 mo
296.486 82.9885 li
296.486 79.8527 li
295.702 79.8527 li
cp
f
296.486 82.9885 mo
297.27 82.9885 li
297.27 73.5776 li
296.486 73.5776 li
cp
f
297.27 82.9885 mo
298.054 82.9885 li
298.054 73.5776 li
297.27 73.5776 li
cp
f
298.054 82.9885 mo
298.837 82.9885 li
298.837 80.6354 li
298.054 80.6354 li
cp
f
298.837 82.9885 mo
299.621 82.9885 li
299.621 80.6354 li
298.837 80.6354 li
cp
f
299.621 82.9885 mo
300.405 82.9885 li
300.405 78.2839 li
299.621 78.2839 li
cp
f
300.405 82.9885 mo
301.189 82.9885 li
301.189 80.6354 li
300.405 80.6354 li
cp
f
301.189 82.9885 mo
301.973 82.9885 li
301.973 61.0258 li
301.189 61.0258 li
cp
f
301.973 82.9885 mo
302.757 82.9885 li
302.757 57.1038 li
301.973 57.1038 li
cp
f
302.757 82.9885 mo
303.541 82.9885 li
303.541 78.2839 li
302.757 78.2839 li
cp
f
303.541 82.9885 mo
304.325 82.9885 li
304.325 79.8527 li
303.541 79.8527 li
cp
f
304.325 82.9885 mo
305.108 82.9885 li
305.108 79.0666 li
304.325 79.0666 li
cp
f
305.108 82.9885 mo
305.892 82.9885 li
305.892 78.2839 li
305.108 78.2839 li
cp
f
305.892 82.9885 mo
306.676 82.9885 li
306.676 78.2839 li
305.892 78.2839 li
cp
f
306.676 82.9885 mo
307.46 82.9885 li
307.46 79.8527 li
306.676 79.8527 li
cp
f
307.46 82.9885 mo
308.244 82.9885 li
308.244 67.3008 li
307.46 67.3008 li
cp
f
308.244 82.9885 mo
309.028 82.9885 li
309.028 67.3008 li
308.244 67.3008 li
cp
f
309.028 82.9885 mo
309.812 82.9885 li
309.812 72.0089 li
309.028 72.0089 li
cp
f
309.812 82.9885 mo
310.596 82.9885 li
310.596 80.6354 li
309.812 80.6354 li
cp
f
310.596 82.9885 mo
311.379 82.9885 li
311.379 76.7134 li
310.596 76.7134 li
cp
f
311.379 82.9885 mo
312.163 82.9885 li
312.163 12.3955 li
311.379 12.3955 li
cp
f
312.163 82.9885 mo
312.947 82.9885 li
312.947 12.3955 li
312.163 12.3955 li
cp
f
312.947 82.9885 mo
313.731 82.9885 li
313.731 79.8527 li
312.947 79.8527 li
cp
f
313.731 82.9885 mo
314.515 82.9885 li
314.515 79.8527 li
313.731 79.8527 li
cp
f
314.515 82.9885 mo
315.299 82.9885 li
315.299 79.0666 li
314.515 79.0666 li
cp
f
315.299 82.9885 mo
316.083 82.9885 li
316.083 75.9308 li
315.299 75.9308 li
cp
f
316.866 82.9885 mo
317.65 82.9885 li
317.65 75.9308 li
316.866 75.9308 li
cp
f
317.65 82.9885 mo
318.434 82.9885 li
318.434 75.9308 li
317.65 75.9308 li
cp
f
318.434 82.9885 mo
319.218 82.9885 li
319.218 70.4401 li
318.434 70.4401 li
cp
f
319.218 82.9885 mo
320.002 82.9885 li
320.002 70.4401 li
319.218 70.4401 li
cp
f
320.002 82.9885 mo
320.786 82.9885 li
320.786 79.8527 li
320.002 79.8527 li
cp
f
320.786 82.9885 mo
321.57 82.9885 li
321.57 81.4215 li
320.786 81.4215 li
cp
f
321.57 82.9885 mo
322.354 82.9885 li
322.354 79.8527 li
321.57 79.8527 li
cp
f
322.354 82.9885 mo
323.137 82.9885 li
323.137 70.4401 li
322.354 70.4401 li
cp
f
323.138 82.9885 mo
323.921 82.9885 li
323.921 73.5776 li
323.138 73.5776 li
cp
f
323.921 82.9885 mo
324.705 82.9885 li
324.705 80.6354 li
323.921 80.6354 li
cp
f
324.705 82.9885 mo
325.489 82.9885 li
325.489 81.4215 li
324.705 81.4215 li
cp
f
325.489 82.9885 mo
326.273 82.9885 li
326.273 80.6354 li
325.489 80.6354 li
cp
f
326.273 82.9885 mo
327.057 82.9885 li
327.057 78.2839 li
326.273 78.2839 li
cp
f
327.057 82.9885 mo
327.841 82.9885 li
327.841 79.8527 li
327.057 79.8527 li
cp
f
327.841 82.9885 mo
328.625 82.9885 li
328.625 79.8527 li
327.841 79.8527 li
cp
f
328.625 82.9885 mo
329.408 82.9885 li
329.408 76.7134 li
328.625 76.7134 li
cp
f
329.409 82.9885 mo
330.192 82.9885 li
330.192 76.7134 li
329.409 76.7134 li
cp
f
330.192 82.9885 mo
330.976 82.9885 li
330.976 75.9308 li
330.192 75.9308 li
cp
f
330.976 82.9885 mo
331.76 82.9885 li
331.76 77.4996 li
330.976 77.4996 li
cp
f
331.76 82.9885 mo
332.544 82.9885 li
332.544 80.6354 li
331.76 80.6354 li
cp
f
332.544 82.9885 mo
333.328 82.9885 li
333.328 75.1447 li
332.544 75.1447 li
cp
f
333.328 82.9885 mo
334.112 82.9885 li
334.112 75.1447 li
333.328 75.1447 li
cp
f
334.112 82.9885 mo
334.896 82.9885 li
334.896 69.6557 li
334.112 69.6557 li
cp
f
334.896 82.9885 mo
335.679 82.9885 li
335.679 69.6557 li
334.896 69.6557 li
cp
f
335.679 82.9885 mo
336.463 82.9885 li
336.463 81.4215 li
335.679 81.4215 li
cp
f
336.463 82.9885 mo
337.247 82.9885 li
337.247 68.8696 li
336.463 68.8696 li
cp
f
337.247 82.9885 mo
338.031 82.9885 li
338.031 50.8304 li
337.247 50.8304 li
cp
f
338.031 82.9885 mo
338.815 82.9885 li
338.815 67.3008 li
338.031 67.3008 li
cp
f
338.815 82.9885 mo
339.599 82.9885 li
339.599 72.0089 li
338.815 72.0089 li
cp
f
339.599 82.9885 mo
340.383 82.9885 li
340.383 6.12048 li
339.599 6.12048 li
cp
f
340.383 82.9885 mo
341.166 82.9885 li
341.166 6.12048 li
340.383 6.12048 li
cp
f
341.167 82.9885 mo
341.95 82.9885 li
341.95 76.7134 li
341.167 76.7134 li
cp
f
341.95 82.9885 mo
342.734 82.9885 li
342.734 76.7134 li
341.95 76.7134 li
cp
f
342.734 82.9885 mo
343.518 82.9885 li
343.518 81.4215 li
342.734 81.4215 li
cp
f
344.302 82.9885 mo
345.086 82.9885 li
345.086 68.0869 li
344.302 68.0869 li
cp
f
345.086 82.9885 mo
345.87 82.9885 li
345.87 68.0869 li
345.086 68.0869 li
cp
f
345.87 82.9885 mo
346.654 82.9885 li
346.654 76.7134 li
345.87 76.7134 li
cp
f
346.654 82.9885 mo
347.437 82.9885 li
347.437 79.8527 li
346.654 79.8527 li
cp
f
347.438 82.9885 mo
348.221 82.9885 li
348.221 75.1447 li
347.438 75.1447 li
cp
f
348.221 82.9885 mo
349.005 82.9885 li
349.005 67.3008 li
348.221 67.3008 li
cp
f
349.005 82.9885 mo
349.789 82.9885 li
349.789 64.165 li
349.005 64.165 li
cp
f
349.789 82.9885 mo
350.573 82.9885 li
350.573 79.8527 li
349.789 79.8527 li
cp
f
350.573 82.9885 mo
351.357 82.9885 li
351.357 79.0666 li
350.573 79.0666 li
cp
f
351.357 82.9885 mo
352.141 82.9885 li
352.141 79.8527 li
351.357 79.8527 li
cp
f
352.141 82.9885 mo
352.925 82.9885 li
352.925 59.457 li
352.141 59.457 li
cp
f
352.925 82.9885 mo
353.708 82.9885 li
353.708 79.0666 li
352.925 79.0666 li
cp
f
353.708 82.9885 mo
354.492 82.9885 li
354.492 79.0666 li
353.708 79.0666 li
cp
f
354.492 82.9885 mo
355.276 82.9885 li
355.276 79.0666 li
354.492 79.0666 li
cp
f
355.276 82.9885 mo
356.06 82.9885 li
356.06 81.4215 li
355.276 81.4215 li
cp
f
356.06 82.9885 mo
356.844 82.9885 li
356.844 75.9308 li
356.06 75.9308 li
cp
f
356.844 82.9885 mo
357.628 82.9885 li
357.628 71.2227 li
356.844 71.2227 li
cp
f
357.628 82.9885 mo
358.412 82.9885 li
358.412 70.4401 li
357.628 70.4401 li
cp
f
358.412 82.9885 mo
359.196 82.9885 li
359.196 81.4215 li
358.412 81.4215 li
cp
f
359.196 82.9885 mo
359.979 82.9885 li
359.979 80.6354 li
359.196 80.6354 li
cp
f
359.979 82.9885 mo
360.763 82.9885 li
360.763 64.165 li
359.979 64.165 li
cp
f
360.763 82.9885 mo
361.547 82.9885 li
361.547 80.6354 li
360.763 80.6354 li
cp
f
361.547 82.9885 mo
362.331 82.9885 li
362.331 80.6354 li
361.547 80.6354 li
cp
f
362.331 82.9885 mo
363.115 82.9885 li
363.115 81.4215 li
362.331 81.4215 li
cp
f
363.899 82.9885 mo
364.683 82.9885 li
364.683 81.4215 li
363.899 81.4215 li
cp
f
364.683 82.9885 mo
365.467 82.9885 li
365.467 74.362 li
364.683 74.362 li
cp
f
366.25 82.9885 mo
367.034 82.9885 li
367.034 55.535 li
366.25 55.535 li
cp
f
367.034 82.9885 mo
367.818 82.9885 li
367.818 70.4401 li
367.034 70.4401 li
cp
f
367.818 82.9885 mo
368.602 82.9885 li
368.602 80.6354 li
367.818 80.6354 li
cp
f
368.602 82.9885 mo
369.386 82.9885 li
369.386 75.1447 li
368.602 75.1447 li
cp
f
369.386 82.9885 mo
370.17 82.9885 li
370.17 75.1447 li
369.386 75.1447 li
cp
f
370.17 82.9885 mo
370.954 82.9885 li
370.954 69.6557 li
370.17 69.6557 li
cp
f
370.954 82.9885 mo
371.737 82.9885 li
371.737 79.8527 li
370.954 79.8527 li
cp
f
371.737 82.9885 mo
372.521 82.9885 li
372.521 75.1447 li
371.737 75.1447 li
cp
f
372.521 82.9885 mo
373.305 82.9885 li
373.305 78.2839 li
372.521 78.2839 li
cp
f
373.305 82.9885 mo
374.089 82.9885 li
374.089 81.4215 li
373.305 81.4215 li
cp
f
374.089 82.9885 mo
374.873 82.9885 li
374.873 46.9085 li
374.089 46.9085 li
cp
f
374.873 82.9885 mo
375.657 82.9885 li
375.657 80.6354 li
374.873 80.6354 li
cp
f
375.657 82.9885 mo
376.441 82.9885 li
376.441 76.7134 li
375.657 76.7134 li
cp
f
376.441 82.9885 mo
377.225 82.9885 li
377.225 76.7134 li
376.441 76.7134 li
cp
f
377.225 82.9885 mo
378.008 82.9885 li
378.008 65.7338 li
377.225 65.7338 li
cp
f
378.009 82.9885 mo
378.792 82.9885 li
378.792 65.7338 li
378.009 65.7338 li
cp
f
378.792 82.9885 mo
379.576 82.9885 li
379.576 72.0089 li
378.792 72.0089 li
cp
f
379.576 82.9885 mo
380.36 82.9885 li
380.36 71.2227 li
379.576 71.2227 li
cp
f
380.36 82.9885 mo
381.144 82.9885 li
381.144 71.2227 li
380.36 71.2227 li
cp
f
381.144 82.9885 mo
381.928 82.9885 li
381.928 75.9308 li
381.144 75.9308 li
cp
f
381.928 82.9885 mo
382.712 82.9885 li
382.712 75.9308 li
381.928 75.9308 li
cp
f
382.712 82.9885 mo
383.496 82.9885 li
383.496 78.2839 li
382.712 78.2839 li
cp
f
383.496 82.9885 mo
384.279 82.9885 li
384.279 79.0666 li
383.496 79.0666 li
cp
f
384.279 82.9885 mo
385.063 82.9885 li
385.063 75.9308 li
384.279 75.9308 li
cp
f
385.063 82.9885 mo
385.847 82.9885 li
385.847 78.2839 li
385.063 78.2839 li
cp
f
385.847 82.9885 mo
386.631 82.9885 li
386.631 67.3008 li
385.847 67.3008 li
cp
f
386.631 82.9885 mo
387.415 82.9885 li
387.415 68.8696 li
386.631 68.8696 li
cp
f
387.415 82.9885 mo
388.199 82.9885 li
388.199 79.8527 li
387.415 79.8527 li
cp
f
388.199 82.9885 mo
388.983 82.9885 li
388.983 64.9476 li
388.199 64.9476 li
cp
f
388.983 82.9885 mo
389.767 82.9885 li
389.767 69.6557 li
388.983 69.6557 li
cp
f
389.767 82.9885 mo
390.55 82.9885 li
390.55 80.6354 li
389.767 80.6354 li
cp
f
390.55 82.9885 mo
391.334 82.9885 li
391.334 79.0666 li
390.55 79.0666 li
cp
f
391.334 82.9885 mo
392.118 82.9885 li
392.118 81.4215 li
391.334 81.4215 li
cp
f
392.118 82.9885 mo
392.902 82.9885 li
392.902 79.8527 li
392.118 79.8527 li
cp
f
392.902 82.9885 mo
393.686 82.9885 li
393.686 79.8527 li
392.902 79.8527 li
cp
f
393.686 82.9885 mo
394.47 82.9885 li
394.47 79.0666 li
393.686 79.0666 li
cp
f
394.47 82.9885 mo
395.254 82.9885 li
395.254 79.0666 li
394.47 79.0666 li
cp
f
395.254 82.9885 mo
396.037 82.9885 li
396.037 76.7134 li
395.254 76.7134 li
cp
f
396.038 82.9885 mo
396.821 82.9885 li
396.821 71.2227 li
396.038 71.2227 li
cp
f
396.821 82.9885 mo
397.605 82.9885 li
397.605 67.3008 li
396.821 67.3008 li
cp
f
397.605 82.9885 mo
398.389 82.9885 li
398.389 67.3008 li
397.605 67.3008 li
cp
f
398.389 82.9885 mo
399.173 82.9885 li
399.173 72.7915 li
398.389 72.7915 li
cp
f
399.173 82.9885 mo
399.957 82.9885 li
399.957 73.5776 li
399.173 73.5776 li
cp
f
399.957 82.9885 mo
400.741 82.9885 li
400.741 72.7915 li
399.957 72.7915 li
cp
f
400.741 82.9885 mo
401.525 82.9885 li
401.525 81.4215 li
400.741 81.4215 li
cp
f
401.525 82.9885 mo
402.308 82.9885 li
402.308 80.6354 li
401.525 80.6354 li
cp
f
402.309 82.9885 mo
403.092 82.9885 li
403.092 75.9308 li
402.309 75.9308 li
cp
f
403.876 82.9885 mo
404.66 82.9885 li
404.66 77.4996 li
403.876 77.4996 li
cp
f
404.66 82.9885 mo
405.444 82.9885 li
405.444 78.2839 li
404.66 78.2839 li
cp
f
405.444 82.9885 mo
406.228 82.9885 li
406.228 81.4215 li
405.444 81.4215 li
cp
f
406.228 82.9885 mo
407.012 82.9885 li
407.012 66.5182 li
406.228 66.5182 li
cp
f
407.012 82.9885 mo
407.796 82.9885 li
407.796 58.6743 li
407.012 58.6743 li
cp
f
407.796 82.9885 mo
408.579 82.9885 li
408.579 78.2839 li
407.796 78.2839 li
cp
f
408.579 82.9885 mo
409.363 82.9885 li
409.363 78.2839 li
408.579 78.2839 li
cp
f
409.363 82.9885 mo
410.147 82.9885 li
410.147 75.9308 li
409.363 75.9308 li
cp
f
410.147 82.9885 mo
410.931 82.9885 li
410.931 66.5182 li
410.147 66.5182 li
cp
f
410.931 82.9885 mo
411.715 82.9885 li
411.715 79.0666 li
410.931 79.0666 li
cp
f
411.715 82.9885 mo
412.499 82.9885 li
412.499 72.0089 li
411.715 72.0089 li
cp
f
412.499 82.9885 mo
413.283 82.9885 li
413.283 72.0089 li
412.499 72.0089 li
cp
f
413.283 82.9885 mo
414.067 82.9885 li
414.067 79.0666 li
413.283 79.0666 li
cp
f
414.066 82.9885 mo
414.85 82.9885 li
414.85 81.4215 li
414.066 81.4215 li
cp
f
414.85 82.9885 mo
415.634 82.9885 li
415.634 61.0258 li
414.85 61.0258 li
cp
f
415.634 82.9885 mo
416.418 82.9885 li
416.418 64.9476 li
415.634 64.9476 li
cp
f
416.418 82.9885 mo
417.202 82.9885 li
417.202 79.0666 li
416.418 79.0666 li
cp
f
417.202 82.9885 mo
417.986 82.9885 li
417.986 66.5182 li
417.202 66.5182 li
cp
f
417.986 82.9885 mo
418.77 82.9885 li
418.77 78.2839 li
417.986 78.2839 li
cp
f
418.77 82.9885 mo
419.554 82.9885 li
419.554 81.4215 li
418.77 81.4215 li
cp
f
419.554 82.9885 mo
420.337 82.9885 li
420.337 81.4215 li
419.554 81.4215 li
cp
f
420.337 82.9885 mo
421.121 82.9885 li
421.121 81.4215 li
420.337 81.4215 li
cp
f
421.121 82.9885 mo
421.904 82.9885 li
421.904 81.4215 li
421.121 81.4215 li
cp
f
422.689 82.9885 mo
423.471 82.9885 li
423.471 71.2227 li
422.689 71.2227 li
cp
f
423.471 82.9885 mo
424.259 82.9885 li
424.259 54.7524 li
423.471 54.7524 li
cp
f
424.259 82.9885 mo
425.041 82.9885 li
425.041 75.9308 li
424.259 75.9308 li
cp
f
425.041 82.9885 mo
425.823 82.9885 li
425.823 62.5963 li
425.041 62.5963 li
cp
f
425.823 82.9885 mo
426.608 82.9885 li
426.608 64.9476 li
425.823 64.9476 li
cp
f
426.608 82.9885 mo
427.391 82.9885 li
427.391 77.4996 li
426.608 77.4996 li
cp
f
427.391 82.9885 mo
428.178 82.9885 li
428.178 77.4996 li
427.391 77.4996 li
cp
f
428.178 82.9885 mo
428.96 82.9885 li
428.96 61.8118 li
428.178 61.8118 li
cp
f
428.96 82.9885 mo
429.742 82.9885 li
429.742 61.8118 li
428.96 61.8118 li
cp
f
429.742 82.9885 mo
430.528 82.9885 li
430.528 79.8527 li
429.742 79.8527 li
cp
f
430.528 82.9885 mo
431.31 82.9885 li
431.31 75.9308 li
430.528 75.9308 li
cp
f
431.31 82.9885 mo
432.097 82.9885 li
432.097 72.7915 li
431.31 72.7915 li
cp
f
432.097 82.9885 mo
432.879 82.9885 li
432.879 53.968 li
432.097 53.968 li
cp
f
432.879 82.9885 mo
433.662 82.9885 li
433.662 53.968 li
432.879 53.968 li
cp
f
433.662 82.9885 mo
434.447 82.9885 li
434.447 80.6354 li
433.662 80.6354 li
cp
f
434.447 82.9885 mo
435.229 82.9885 li
435.229 80.6354 li
434.447 80.6354 li
cp
f
435.229 82.9885 mo
436.017 82.9885 li
436.017 80.6354 li
435.229 80.6354 li
cp
f
436.799 82.9885 mo
437.581 82.9885 li
437.581 77.4996 li
436.799 77.4996 li
cp
f
437.581 82.9885 mo
438.367 82.9885 li
438.367 77.4996 li
437.581 77.4996 li
cp
f
438.366 82.9885 mo
439.149 82.9885 li
439.149 71.2227 li
438.366 71.2227 li
cp
f
439.149 82.9885 mo
439.936 82.9885 li
439.936 71.2227 li
439.149 71.2227 li
cp
f
439.936 82.9885 mo
440.718 82.9885 li
440.718 76.7134 li
439.936 76.7134 li
cp
f
440.718 82.9885 mo
441.5 82.9885 li
441.5 79.0666 li
440.718 79.0666 li
cp
f
441.5 82.9885 mo
442.286 82.9885 li
442.286 17.1001 li
441.5 17.1001 li
cp
f
442.286 82.9885 mo
443.068 82.9885 li
443.068 79.8527 li
442.286 79.8527 li
cp
f
443.068 82.9885 mo
443.855 82.9885 li
443.855 61.8118 li
443.068 61.8118 li
cp
f
443.855 82.9885 mo
444.638 82.9885 li
444.638 61.0258 li
443.855 61.0258 li
cp
f
444.638 82.9885 mo
445.42 82.9885 li
445.42 72.0089 li
444.638 72.0089 li
cp
f
445.42 82.9885 mo
446.205 82.9885 li
446.205 79.0666 li
445.42 79.0666 li
cp
f
446.205 82.9885 mo
446.987 82.9885 li
446.987 69.6557 li
446.205 69.6557 li
cp
f
446.987 82.9885 mo
447.775 82.9885 li
447.775 71.2227 li
446.987 71.2227 li
cp
f
447.775 82.9885 mo
448.557 82.9885 li
448.557 77.4996 li
447.775 77.4996 li
cp
f
448.557 82.9885 mo
449.339 82.9885 li
449.339 77.4996 li
448.557 77.4996 li
cp
f
449.339 82.9885 mo
450.125 82.9885 li
450.125 80.6354 li
449.339 80.6354 li
cp
f
450.125 82.9885 mo
450.907 82.9885 li
450.907 79.0666 li
450.125 79.0666 li
cp
f
450.907 82.9885 mo
451.694 82.9885 li
451.694 79.8527 li
450.907 79.8527 li
cp
f
451.694 82.9885 mo
452.476 82.9885 li
452.476 71.2227 li
451.694 71.2227 li
cp
f
452.476 82.9885 mo
453.258 82.9885 li
453.258 76.7134 li
452.476 76.7134 li
cp
f
453.258 82.9885 mo
454.044 82.9885 li
454.044 79.8527 li
453.258 79.8527 li
cp
f
454.044 82.9885 mo
454.826 82.9885 li
454.826 79.8527 li
454.044 79.8527 li
cp
f
456.396 82.9885 mo
457.178 82.9885 li
457.178 80.6354 li
456.396 80.6354 li
cp
f
457.963 82.9885 mo
458.745 82.9885 li
458.745 79.8527 li
457.963 79.8527 li
cp
f
458.745 82.9885 mo
459.533 82.9885 li
459.533 51.6131 li
458.745 51.6131 li
cp
f
460.315 82.9885 mo
461.097 82.9885 li
461.097 80.6354 li
460.315 80.6354 li
cp
f
461.097 82.9885 mo
461.883 82.9885 li
461.883 79.0666 li
461.097 79.0666 li
cp
f
461.883 82.9885 mo
462.665 82.9885 li
462.665 78.2839 li
461.883 78.2839 li
cp
f
462.665 82.9885 mo
463.452 82.9885 li
463.452 75.9308 li
462.665 75.9308 li
cp
f
463.452 82.9885 mo
464.234 82.9885 li
464.234 79.8527 li
463.452 79.8527 li
cp
f
464.234 82.9885 mo
465.016 82.9885 li
465.016 78.2839 li
464.234 78.2839 li
cp
f
465.016 82.9885 mo
465.802 82.9885 li
465.802 81.4215 li
465.016 81.4215 li
cp
f
465.802 82.9885 mo
466.584 82.9885 li
466.584 81.4215 li
465.802 81.4215 li
cp
f
466.584 82.9885 mo
467.371 82.9885 li
467.371 79.8527 li
466.584 79.8527 li
cp
f
482.262 82.9885 mo
483.049 82.9885 li
483.049 81.4215 li
482.262 81.4215 li
cp
f
483.049 82.9885 mo
483.831 82.9885 li
483.831 81.4215 li
483.049 81.4215 li
cp
f
490.1 82.9885 mo
490.888 82.9885 li
490.888 80.6354 li
490.1 80.6354 li
cp
f
490.888 82.9885 mo
491.67 82.9885 li
491.67 80.6354 li
490.888 80.6354 li
cp
f
491.67 82.9885 mo
492.452 82.9885 li
492.452 80.6354 li
491.67 80.6354 li
cp
f
492.452 82.9885 mo
493.238 82.9885 li
493.238 80.6354 li
492.452 80.6354 li
cp
f
504.21 82.9885 mo
504.996 82.9885 li
504.996 81.4215 li
504.21 81.4215 li
cp
f
507.347 82.9885 mo
508.129 82.9885 li
508.129 79.0666 li
507.347 79.0666 li
cp
f
508.129 82.9885 mo
508.915 82.9885 li
508.915 79.0666 li
508.129 79.0666 li
cp
f
509.697 82.9885 mo
510.484 82.9885 li
510.484 69.6557 li
509.697 69.6557 li
cp
f
510.484 82.9885 mo
511.267 82.9885 li
511.267 69.6557 li
510.484 69.6557 li
cp
f
511.267 82.9885 mo
512.049 82.9885 li
512.049 58.6743 li
511.267 58.6743 li
cp
f
512.049 82.9885 mo
512.834 82.9885 li
512.834 72.7915 li
512.049 72.7915 li
cp
f
512.834 82.9885 mo
513.616 82.9885 li
513.616 79.0666 li
512.834 79.0666 li
cp
f
513.616 82.9885 mo
514.404 82.9885 li
514.404 74.362 li
513.616 74.362 li
cp
f
514.404 82.9885 mo
515.186 82.9885 li
515.186 74.362 li
514.404 74.362 li
cp
f
515.186 82.9885 mo
515.968 82.9885 li
515.968 79.8527 li
515.186 79.8527 li
cp
f
515.968 82.9885 mo
516.754 82.9885 li
516.754 73.5776 li
515.968 73.5776 li
cp
f
516.754 82.9885 mo
517.536 82.9885 li
517.536 38.2803 li
516.754 38.2803 li
cp
f
517.536 82.9885 mo
518.323 82.9885 li
518.323 37.4959 li
517.536 37.4959 li
cp
f
518.323 82.9885 mo
519.105 82.9885 li
519.105 76.7134 li
518.323 76.7134 li
cp
f
519.105 82.9885 mo
519.887 82.9885 li
519.887 76.7134 li
519.105 76.7134 li
cp
f
519.887 82.9885 mo
520.673 82.9885 li
520.673 79.0666 li
519.887 79.0666 li
cp
f
520.673 82.9885 mo
521.455 82.9885 li
521.455 79.0666 li
520.673 79.0666 li
cp
f
521.455 82.9885 mo
522.242 82.9885 li
522.242 79.0666 li
521.455 79.0666 li
cp
f
522.242 82.9885 mo
523.025 82.9885 li
523.025 81.4215 li
522.242 81.4215 li
cp
f
523.025 82.9885 mo
523.807 82.9885 li
523.807 76.7134 li
523.025 76.7134 li
cp
f
523.807 82.9885 mo
524.592 82.9885 li
524.592 74.362 li
523.807 74.362 li
cp
f
524.592 82.9885 mo
525.374 82.9885 li
525.374 52.3992 li
524.592 52.3992 li
cp
f
525.375 82.9885 mo
526.162 82.9885 li
526.162 52.3992 li
525.375 52.3992 li
cp
f
526.162 82.9885 mo
526.944 82.9885 li
526.944 68.0869 li
526.162 68.0869 li
cp
f
526.944 82.9885 mo
527.726 82.9885 li
527.726 78.2839 li
526.944 78.2839 li
cp
f
527.726 82.9885 mo
528.512 82.9885 li
528.512 79.8527 li
527.726 79.8527 li
cp
f
528.512 82.9885 mo
529.294 82.9885 li
529.294 68.0869 li
528.512 68.0869 li
cp
f
529.294 82.9885 mo
530.081 82.9885 li
530.081 77.4996 li
529.294 77.4996 li
cp
f
530.081 82.9885 mo
530.863 82.9885 li
530.863 74.362 li
530.081 74.362 li
cp
f
530.863 82.9885 mo
531.645 82.9885 li
531.645 67.3008 li
530.863 67.3008 li
cp
f
531.645 82.9885 mo
532.431 82.9885 li
532.431 67.3008 li
531.645 67.3008 li
cp
f
532.431 82.9885 mo
533.213 82.9885 li
533.213 70.4401 li
532.431 70.4401 li
cp
f
533.213 82.9885 mo
534.001 82.9885 li
534.001 70.4401 li
533.213 70.4401 li
cp
f
534 82.9885 mo
534.783 82.9885 li
534.783 70.4401 li
534 70.4401 li
cp
f
534.783 82.9885 mo
535.565 82.9885 li
535.565 72.0089 li
534.783 72.0089 li
cp
f
535.565 82.9885 mo
536.35 82.9885 li
536.35 73.5776 li
535.565 73.5776 li
cp
f
536.35 82.9885 mo
537.133 82.9885 li
537.133 73.5776 li
536.35 73.5776 li
cp
f
537.133 82.9885 mo
537.92 82.9885 li
537.92 51.6131 li
537.133 51.6131 li
cp
f
537.92 82.9885 mo
538.702 82.9885 li
538.702 79.8527 li
537.92 79.8527 li
cp
f
539.484 82.9885 mo
540.27 82.9885 li
540.27 75.9308 li
539.484 75.9308 li
cp
f
540.27 82.9885 mo
541.052 82.9885 li
541.052 75.9308 li
540.27 75.9308 li
cp
f
541.052 82.9885 mo
541.839 82.9885 li
541.839 79.8527 li
541.052 79.8527 li
cp
f
541.839 82.9885 mo
542.621 82.9885 li
542.621 80.6354 li
541.839 80.6354 li
cp
f
542.621 82.9885 mo
543.404 82.9885 li
543.404 4.5517 li
542.621 4.5517 li
cp
f
543.404 82.9885 mo
544.189 82.9885 li
544.189 4.5517 li
543.404 4.5517 li
cp
f
544.189 82.9885 mo
544.971 82.9885 li
544.971 80.6354 li
544.189 80.6354 li
cp
f
544.971 82.9885 mo
545.759 82.9885 li
545.759 75.9308 li
544.971 75.9308 li
cp
f
545.759 82.9885 mo
546.541 82.9885 li
546.541 57.8899 li
545.759 57.8899 li
cp
f
546.541 82.9885 mo
547.323 82.9885 li
547.323 68.0869 li
546.541 68.0869 li
cp
f
547.323 82.9885 mo
548.108 82.9885 li
548.108 68.0869 li
547.323 68.0869 li
cp
f
548.109 82.9885 mo
548.891 82.9885 li
548.891 47.6912 li
548.109 47.6912 li
cp
f
548.891 82.9885 mo
549.678 82.9885 li
549.678 77.4996 li
548.891 77.4996 li
cp
f
549.678 82.9885 mo
550.46 82.9885 li
550.46 69.6557 li
549.678 69.6557 li
cp
f
550.46 82.9885 mo
551.242 82.9885 li
551.242 69.6557 li
550.46 69.6557 li
cp
f
551.242 82.9885 mo
552.028 82.9885 li
552.028 81.4215 li
551.242 81.4215 li
cp
f
552.028 82.9885 mo
552.81 82.9885 li
552.81 75.1447 li
552.028 75.1447 li
cp
f
552.81 82.9885 mo
553.597 82.9885 li
553.597 71.2227 li
552.81 71.2227 li
cp
f
553.597 82.9885 mo
554.379 82.9885 li
554.379 72.7915 li
553.597 72.7915 li
cp
f
554.38 82.9885 mo
555.162 82.9885 li
555.162 72.7915 li
554.38 72.7915 li
cp
f
555.162 82.9885 mo
555.947 82.9885 li
555.947 77.4996 li
555.162 77.4996 li
cp
f
556.729 82.9885 mo
557.517 82.9885 li
557.517 79.0666 li
556.729 79.0666 li
cp
f
557.517 82.9885 mo
558.299 82.9885 li
558.299 74.362 li
557.517 74.362 li
cp
f
558.299 82.9885 mo
559.081 82.9885 li
559.081 74.362 li
558.299 74.362 li
cp
f
559.081 82.9885 mo
559.866 82.9885 li
559.866 76.7134 li
559.081 76.7134 li
cp
f
559.867 82.9885 mo
560.649 82.9885 li
560.649 75.9308 li
559.867 75.9308 li
cp
f
560.649 82.9885 mo
561.436 82.9885 li
561.436 75.1447 li
560.649 75.1447 li
cp
f
561.436 82.9885 mo
562.218 82.9885 li
562.218 75.1447 li
561.436 75.1447 li
cp
f
562.218 82.9885 mo
563 82.9885 li
563 80.6354 li
562.218 80.6354 li
cp
f
563 82.9885 mo
563.786 82.9885 li
563.786 58.6743 li
563 58.6743 li
cp
f
564.568 82.9885 mo
565.355 82.9885 li
565.355 11.6111 li
564.568 11.6111 li
cp
f
565.355 82.9885 mo
566.138 82.9885 li
566.138 11.6111 li
565.355 11.6111 li
cp
f
566.138 82.9885 mo
566.92 82.9885 li
566.92 78.2839 li
566.138 78.2839 li
cp
f
566.92 82.9885 mo
567.705 82.9885 li
567.705 79.8527 li
566.92 79.8527 li
cp
f
567.705 82.9885 mo
568.487 82.9885 li
568.487 81.4215 li
567.705 81.4215 li
cp
f
568.487 82.9885 mo
569.275 82.9885 li
569.275 81.4215 li
568.487 81.4215 li
cp
f
569.275 82.9885 mo
570.057 82.9885 li
570.057 81.4215 li
569.275 81.4215 li
cp
f
570.839 82.9885 mo
571.625 82.9885 li
571.625 80.6354 li
570.839 80.6354 li
cp
f
573.976 82.9885 mo
574.758 82.9885 li
574.758 79.8527 li
573.976 79.8527 li
cp
f
574.758 82.9885 mo
575.544 82.9885 li
575.544 79.8527 li
574.758 79.8527 li
cp
f
575.544 82.9885 mo
576.326 82.9885 li
576.326 81.4215 li
575.544 81.4215 li
cp
f
576.326 82.9885 mo
577.113 82.9885 li
577.113 78.2839 li
576.326 78.2839 li
cp
f
577.114 82.9885 mo
577.896 82.9885 li
577.896 81.4215 li
577.114 81.4215 li
cp
f
577.896 82.9885 mo
578.678 82.9885 li
578.678 81.4215 li
577.896 81.4215 li
cp
f
578.678 82.9885 mo
579.463 82.9885 li
579.463 79.0666 li
578.678 79.0666 li
cp
f
579.463 82.9885 mo
580.245 82.9885 li
580.245 79.0666 li
579.463 79.0666 li
cp
f
580.245 82.9885 mo
581.033 82.9885 li
581.033 80.6354 li
580.245 80.6354 li
cp
f
581.033 82.9885 mo
581.815 82.9885 li
581.815 81.4215 li
581.033 81.4215 li
cp
f
584.165 82.9885 mo
584.952 82.9885 li
584.952 81.4215 li
584.165 81.4215 li
cp
f
584.952 82.9885 mo
585.734 82.9885 li
585.734 81.4215 li
584.952 81.4215 li
cp
f
585.734 82.9885 mo
586.516 82.9885 li
586.516 81.4215 li
585.734 81.4215 li
cp
f
586.516 82.9885 mo
587.302 82.9885 li
587.302 77.4996 li
586.516 77.4996 li
cp
f
587.302 82.9885 mo
588.084 82.9885 li
588.084 77.4996 li
587.302 77.4996 li
cp
f
588.084 82.9885 mo
588.872 82.9885 li
588.872 79.0666 li
588.084 79.0666 li
cp
f
588.872 82.9885 mo
589.654 82.9885 li
589.654 77.4996 li
588.872 77.4996 li
cp
f
589.654 82.9885 mo
590.436 82.9885 li
590.436 65.7338 li
589.654 65.7338 li
cp
f
590.436 82.9885 mo
591.221 82.9885 li
591.221 79.8527 li
590.436 79.8527 li
cp
f
591.221 82.9885 mo
592.003 82.9885 li
592.003 79.8527 li
591.221 79.8527 li
cp
f
592.003 82.9885 mo
592.791 82.9885 li
592.791 80.6354 li
592.003 80.6354 li
cp
f
592.791 82.9885 mo
593.573 82.9885 li
593.573 80.6354 li
592.791 80.6354 li
cp
f
593.573 82.9885 mo
594.355 82.9885 li
594.355 80.6354 li
593.573 80.6354 li
cp
f
594.355 82.9885 mo
595.141 82.9885 li
595.141 81.4215 li
594.355 81.4215 li
cp
f
595.141 82.9885 mo
595.923 82.9885 li
595.923 81.4215 li
595.141 81.4215 li
cp
f
595.923 82.9885 mo
596.71 82.9885 li
596.71 80.6354 li
595.923 80.6354 li
cp
f
596.71 82.9885 mo
597.492 82.9885 li
597.492 80.6354 li
596.71 80.6354 li
cp
f
597.492 82.9885 mo
598.274 82.9885 li
598.274 81.4215 li
597.492 81.4215 li
cp
f
598.274 82.9885 mo
599.06 82.9885 li
599.06 80.6354 li
598.274 80.6354 li
cp
f
599.06 82.9885 mo
599.842 82.9885 li
599.842 75.9308 li
599.06 75.9308 li
cp
f
599.842 82.9885 mo
600.63 82.9885 li
600.63 75.9308 li
599.842 75.9308 li
cp
f
600.63 82.9885 mo
601.412 82.9885 li
601.412 80.6354 li
600.63 80.6354 li
cp
f
602.194 82.9885 mo
602.979 82.9885 li
602.979 79.8527 li
602.194 79.8527 li
cp
f
602.979 82.9885 mo
603.761 82.9885 li
603.761 79.0666 li
602.979 79.0666 li
cp
f
603.762 82.9885 mo
604.549 82.9885 li
604.549 80.6354 li
603.762 80.6354 li
cp
f
604.549 82.9885 mo
605.331 82.9885 li
605.331 79.0666 li
604.549 79.0666 li
cp
f
605.331 82.9885 mo
606.113 82.9885 li
606.113 73.5776 li
605.331 73.5776 li
cp
f
606.113 82.9885 mo
606.899 82.9885 li
606.899 76.7134 li
606.113 76.7134 li
cp
f
606.899 82.9885 mo
607.681 82.9885 li
607.681 72.7915 li
606.899 72.7915 li
cp
f
607.681 82.9885 mo
608.468 82.9885 li
608.468 72.7915 li
607.681 72.7915 li
cp
f
608.468 82.9885 mo
609.25 82.9885 li
609.25 79.8527 li
608.468 79.8527 li
cp
f
609.25 82.9885 mo
610.033 82.9885 li
610.033 79.8527 li
609.25 79.8527 li
cp
f
613.17 82.9885 mo
613.952 82.9885 li
613.952 80.6354 li
613.17 80.6354 li
cp
f
614.737 82.9885 mo
615.52 82.9885 li
615.52 79.8527 li
614.737 79.8527 li
cp
f
615.52 82.9885 mo
616.307 82.9885 li
616.307 79.8527 li
615.52 79.8527 li
cp
f
616.307 82.9885 mo
617.089 82.9885 li
617.089 78.2839 li
616.307 78.2839 li
cp
f
617.089 82.9885 mo
617.871 82.9885 li
617.871 78.2839 li
617.089 78.2839 li
cp
f
617.871 82.9885 mo
618.657 82.9885 li
618.657 80.6354 li
617.871 80.6354 li
cp
f
618.657 82.9885 mo
619.439 82.9885 li
619.439 80.6354 li
618.657 80.6354 li
cp
f
619.439 82.9885 mo
620.226 82.9885 li
620.226 80.6354 li
619.439 80.6354 li
cp
f
620.226 82.9885 mo
621.008 82.9885 li
621.008 79.8527 li
620.226 79.8527 li
cp
f
621.008 82.9885 mo
621.791 82.9885 li
621.791 81.4215 li
621.008 81.4215 li
cp
f
621.791 82.9885 mo
622.576 82.9885 li
622.576 81.4215 li
621.791 81.4215 li
cp
f
627.278 82.9885 mo
628.065 82.9885 li
628.065 81.4215 li
627.278 81.4215 li
cp
f
628.065 82.9885 mo
628.847 82.9885 li
628.847 81.4215 li
628.065 81.4215 li
cp
f
116.857 114.54 mo
635.919 114.54 li
0 0 0 1 cmyk
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
gsave
[1.74194 0 0 -1.74308 116.857 114.54 ]ct
@
grestore newpath
144.729 114.54 mo
144.729 96.2376 li
165.196 96.2376 li
gsave
[1.74194 0 0 -1.74308 144.729 114.54 ]ct
@
grestore newpath
171.346 96.2377 mo
162.68 99.7796 li
164.737 96.2377 li
162.68 92.6957 li
cp
f
203.989 250.586 mo
204.773 250.586 li
204.773 249.017 li
203.989 249.017 li
cp
.875 .247 1 .133 cmyk
f
204.773 250.586 mo
205.557 250.586 li
205.557 247.45 li
204.773 247.45 li
cp
f
205.557 250.586 mo
206.341 250.586 li
206.341 247.45 li
205.557 247.45 li
cp
f
207.125 250.586 mo
207.908 250.586 li
207.908 244.311 li
207.125 244.311 li
cp
f
207.908 250.586 mo
208.692 250.586 li
208.692 244.311 li
207.908 244.311 li
cp
f
208.692 250.586 mo
209.476 250.586 li
209.476 240.389 li
208.692 240.389 li
cp
f
209.476 250.586 mo
210.26 250.586 li
210.26 239.606 li
209.476 239.606 li
cp
f
210.26 250.586 mo
211.044 250.586 li
211.044 239.606 li
210.26 239.606 li
cp
f
211.044 250.586 mo
211.828 250.586 li
211.828 245.095 li
211.044 245.095 li
cp
f
211.828 250.586 mo
212.612 250.586 li
212.612 245.095 li
211.828 245.095 li
cp
f
212.612 250.586 mo
213.396 250.586 li
213.396 232.545 li
212.612 232.545 li
cp
f
213.396 250.586 mo
214.179 250.586 li
214.179 236.467 li
213.396 236.467 li
cp
f
214.179 250.586 mo
214.963 250.586 li
214.963 245.095 li
214.179 245.095 li
cp
f
214.963 250.586 mo
215.747 250.586 li
215.747 246.664 li
214.963 246.664 li
cp
f
215.747 250.586 mo
216.531 250.586 li
216.531 246.664 li
215.747 246.664 li
cp
f
216.531 250.586 mo
217.315 250.586 li
217.315 245.879 li
216.531 245.879 li
cp
f
217.315 250.586 mo
218.099 250.586 li
218.099 245.879 li
217.315 245.879 li
cp
f
218.099 250.586 mo
218.883 250.586 li
218.883 231.762 li
218.099 231.762 li
cp
f
218.883 250.586 mo
219.667 250.586 li
219.667 237.251 li
218.883 237.251 li
cp
f
219.667 250.586 mo
220.45 250.586 li
220.45 246.664 li
219.667 246.664 li
cp
f
220.45 250.586 mo
221.234 250.586 li
221.234 246.664 li
220.45 246.664 li
cp
f
221.234 250.586 mo
222.018 250.586 li
222.018 248.232 li
221.234 248.232 li
cp
f
222.018 250.586 mo
222.802 250.586 li
222.802 237.251 li
222.018 237.251 li
cp
f
222.802 250.586 mo
223.586 250.586 li
223.586 239.606 li
222.802 239.606 li
cp
f
223.586 250.586 mo
224.37 250.586 li
224.37 241.173 li
223.586 241.173 li
cp
f
224.37 250.586 mo
225.154 250.586 li
225.154 243.528 li
224.37 243.528 li
cp
f
225.154 250.586 mo
225.937 250.586 li
225.937 222.348 li
225.154 222.348 li
cp
f
225.938 250.586 mo
226.721 250.586 li
226.721 233.329 li
225.938 233.329 li
cp
f
226.721 250.586 mo
227.505 250.586 li
227.505 247.45 li
226.721 247.45 li
cp
f
227.505 250.586 mo
228.289 250.586 li
228.289 245.879 li
227.505 245.879 li
cp
f
228.289 250.586 mo
229.073 250.586 li
229.073 231.762 li
228.289 231.762 li
cp
0 0 0 1 cmyk
f
229.073 250.586 mo
229.857 250.586 li
229.857 231.762 li
229.073 231.762 li
cp
f
229.857 250.586 mo
230.641 250.586 li
230.641 237.251 li
229.857 237.251 li
cp
.875 .247 1 .133 cmyk
f
230.641 250.586 mo
231.425 250.586 li
231.425 237.251 li
230.641 237.251 li
cp
f
231.425 250.586 mo
232.208 250.586 li
232.208 242.742 li
231.425 242.742 li
cp
f
232.208 250.586 mo
232.992 250.586 li
232.992 245.879 li
232.208 245.879 li
cp
f
232.992 250.586 mo
233.776 250.586 li
233.776 245.879 li
232.992 245.879 li
cp
f
233.776 250.586 mo
234.56 250.586 li
234.56 244.311 li
233.776 244.311 li
cp
f
234.56 250.586 mo
235.344 250.586 li
235.344 249.017 li
234.56 249.017 li
cp
f
235.344 250.586 mo
236.128 250.586 li
236.128 247.45 li
235.344 247.45 li
cp
f
236.128 250.586 mo
236.912 250.586 li
236.912 245.095 li
236.128 245.095 li
cp
f
236.912 250.586 mo
237.696 250.586 li
237.696 245.879 li
236.912 245.879 li
cp
f
237.696 250.586 mo
238.479 250.586 li
238.479 245.879 li
237.696 245.879 li
cp
f
238.479 250.586 mo
239.263 250.586 li
239.263 245.879 li
238.479 245.879 li
cp
f
239.263 250.586 mo
240.047 250.586 li
240.047 247.45 li
239.263 247.45 li
cp
f
240.047 250.586 mo
240.831 250.586 li
240.831 249.017 li
240.047 249.017 li
cp
f
240.831 250.586 mo
241.615 250.586 li
241.615 249.017 li
240.831 249.017 li
cp
f
241.615 250.586 mo
242.399 250.586 li
242.399 249.017 li
241.615 249.017 li
cp
f
242.399 250.586 mo
243.183 250.586 li
243.183 249.017 li
242.399 249.017 li
cp
f
243.183 250.586 mo
243.966 250.586 li
243.966 244.311 li
243.183 244.311 li
cp
f
243.967 250.586 mo
244.75 250.586 li
244.75 243.528 li
243.967 243.528 li
cp
f
245.534 250.586 mo
246.318 250.586 li
246.318 249.017 li
245.534 249.017 li
cp
f
246.318 250.586 mo
247.102 250.586 li
247.102 237.251 li
246.318 237.251 li
cp
f
247.886 250.586 mo
248.67 250.586 li
248.67 237.251 li
247.886 237.251 li
cp
f
248.67 250.586 mo
249.454 250.586 li
249.454 237.251 li
248.67 237.251 li
cp
f
249.454 250.586 mo
250.237 250.586 li
250.237 245.879 li
249.454 245.879 li
cp
f
250.238 250.586 mo
251.021 250.586 li
251.021 247.45 li
250.238 247.45 li
cp
f
251.021 250.586 mo
251.805 250.586 li
251.805 247.45 li
251.021 247.45 li
cp
f
252.589 250.586 mo
253.373 250.586 li
253.373 247.45 li
252.589 247.45 li
cp
f
253.373 250.586 mo
254.157 250.586 li
254.157 245.879 li
253.373 245.879 li
cp
f
254.157 250.586 mo
254.941 250.586 li
254.941 235.684 li
254.157 235.684 li
cp
f
254.941 250.586 mo
255.725 250.586 li
255.725 237.251 li
254.941 237.251 li
cp
f
255.725 250.586 mo
256.508 250.586 li
256.508 247.45 li
255.725 247.45 li
cp
f
256.509 250.586 mo
257.292 250.586 li
257.292 248.232 li
256.509 248.232 li
cp
f
257.292 250.586 mo
258.076 250.586 li
258.076 248.232 li
257.292 248.232 li
cp
f
258.076 250.586 mo
258.86 250.586 li
258.86 248.232 li
258.076 248.232 li
cp
f
258.86 250.586 mo
259.644 250.586 li
259.644 248.232 li
258.86 248.232 li
cp
f
259.644 250.586 mo
260.428 250.586 li
260.428 247.45 li
259.644 247.45 li
cp
f
260.428 250.586 mo
261.212 250.586 li
261.212 247.45 li
260.428 247.45 li
cp
f
261.212 250.586 mo
261.996 250.586 li
261.996 246.664 li
261.212 246.664 li
cp
f
261.996 250.586 mo
262.779 250.586 li
262.779 245.879 li
261.996 245.879 li
cp
f
262.779 250.586 mo
263.563 250.586 li
263.563 240.389 li
262.779 240.389 li
cp
f
263.563 250.586 mo
264.347 250.586 li
264.347 240.389 li
263.563 240.389 li
cp
f
264.347 250.586 mo
265.131 250.586 li
265.131 249.017 li
264.347 249.017 li
cp
f
265.131 250.586 mo
265.915 250.586 li
265.915 217.641 li
265.131 217.641 li
cp
0 0 0 1 cmyk
f
265.915 250.586 mo
266.699 250.586 li
266.699 217.641 li
265.915 217.641 li
cp
f
266.699 250.586 mo
267.483 250.586 li
267.483 244.311 li
266.699 244.311 li
cp
.875 .247 1 .133 cmyk
f
267.483 250.586 mo
268.267 250.586 li
268.267 249.017 li
267.483 249.017 li
cp
f
269.05 250.586 mo
269.834 250.586 li
269.834 247.45 li
269.05 247.45 li
cp
f
269.834 250.586 mo
270.618 250.586 li
270.618 247.45 li
269.834 247.45 li
cp
f
270.618 250.586 mo
271.402 250.586 li
271.402 249.017 li
270.618 249.017 li
cp
f
271.402 250.586 mo
272.186 250.586 li
272.186 249.017 li
271.402 249.017 li
cp
f
272.186 250.586 mo
272.97 250.586 li
272.97 241.173 li
272.186 241.173 li
cp
f
272.97 250.586 mo
273.754 250.586 li
273.754 239.606 li
272.97 239.606 li
cp
f
273.754 250.586 mo
274.537 250.586 li
274.537 239.606 li
273.754 239.606 li
cp
f
274.538 250.586 mo
275.321 250.586 li
275.321 245.095 li
274.538 245.095 li
cp
f
275.321 250.586 mo
276.105 250.586 li
276.105 238.82 li
275.321 238.82 li
cp
f
276.105 250.586 mo
276.889 250.586 li
276.889 240.389 li
276.105 240.389 li
cp
f
276.889 250.586 mo
277.673 250.586 li
277.673 230.976 li
276.889 230.976 li
cp
f
277.673 250.586 mo
278.457 250.586 li
278.457 230.976 li
277.673 230.976 li
cp
f
278.457 250.586 mo
279.241 250.586 li
279.241 243.528 li
278.457 243.528 li
cp
f
279.241 250.586 mo
280.025 250.586 li
280.025 243.528 li
279.241 243.528 li
cp
f
280.025 250.586 mo
280.808 250.586 li
280.808 247.45 li
280.025 247.45 li
cp
f
280.808 250.586 mo
281.592 250.586 li
281.592 244.311 li
280.808 244.311 li
cp
f
281.592 250.586 mo
282.376 250.586 li
282.376 248.232 li
281.592 248.232 li
cp
f
282.376 250.586 mo
283.16 250.586 li
283.16 204.309 li
282.376 204.309 li
cp
f
283.16 250.586 mo
283.944 250.586 li
283.944 205.876 li
283.16 205.876 li
cp
f
283.944 250.586 mo
284.728 250.586 li
284.728 243.528 li
283.944 243.528 li
cp
f
284.728 250.586 mo
285.512 250.586 li
285.512 243.528 li
284.728 243.528 li
cp
f
285.512 250.586 mo
286.296 250.586 li
286.296 249.017 li
285.512 249.017 li
cp
f
286.296 250.586 mo
287.079 250.586 li
287.079 249.017 li
286.296 249.017 li
cp
f
287.079 250.586 mo
287.863 250.586 li
287.863 230.976 li
287.079 230.976 li
cp
f
287.863 250.586 mo
288.647 250.586 li
288.647 232.545 li
287.863 232.545 li
cp
f
288.647 250.586 mo
289.431 250.586 li
289.431 245.879 li
288.647 245.879 li
cp
f
289.431 250.586 mo
290.215 250.586 li
290.215 241.173 li
289.431 241.173 li
cp
f
290.215 250.586 mo
290.999 250.586 li
290.999 241.173 li
290.215 241.173 li
cp
f
290.999 250.586 mo
291.783 250.586 li
291.783 233.329 li
290.999 233.329 li
cp
f
291.783 250.586 mo
292.567 250.586 li
292.567 244.311 li
291.783 244.311 li
cp
f
292.566 250.586 mo
293.35 250.586 li
293.35 241.957 li
292.566 241.957 li
cp
f
293.35 250.586 mo
294.134 250.586 li
294.134 248.232 li
293.35 248.232 li
cp
f
294.134 250.586 mo
294.918 250.586 li
294.918 245.879 li
294.134 245.879 li
cp
f
294.918 250.586 mo
295.702 250.586 li
295.702 245.879 li
294.918 245.879 li
cp
f
295.702 250.586 mo
296.486 250.586 li
296.486 247.45 li
295.702 247.45 li
cp
f
296.486 250.586 mo
297.27 250.586 li
297.27 241.173 li
296.486 241.173 li
cp
f
297.27 250.586 mo
298.054 250.586 li
298.054 241.173 li
297.27 241.173 li
cp
f
298.054 250.586 mo
298.837 250.586 li
298.837 248.232 li
298.054 248.232 li
cp
f
298.837 250.586 mo
299.621 250.586 li
299.621 248.232 li
298.837 248.232 li
cp
f
299.621 250.586 mo
300.405 250.586 li
300.405 245.879 li
299.621 245.879 li
cp
f
300.405 250.586 mo
301.189 250.586 li
301.189 248.232 li
300.405 248.232 li
cp
f
301.189 250.586 mo
301.973 250.586 li
301.973 228.623 li
301.189 228.623 li
cp
f
301.973 250.586 mo
302.757 250.586 li
302.757 224.701 li
301.973 224.701 li
cp
f
302.757 250.586 mo
303.541 250.586 li
303.541 245.879 li
302.757 245.879 li
cp
f
303.541 250.586 mo
304.325 250.586 li
304.325 247.45 li
303.541 247.45 li
cp
f
304.325 250.586 mo
305.108 250.586 li
305.108 246.664 li
304.325 246.664 li
cp
f
305.108 250.586 mo
305.892 250.586 li
305.892 245.879 li
305.108 245.879 li
cp
f
305.892 250.586 mo
306.676 250.586 li
306.676 245.879 li
305.892 245.879 li
cp
f
306.676 250.586 mo
307.46 250.586 li
307.46 247.45 li
306.676 247.45 li
cp
f
307.46 250.586 mo
308.244 250.586 li
308.244 234.898 li
307.46 234.898 li
cp
f
308.244 250.586 mo
309.028 250.586 li
309.028 234.898 li
308.244 234.898 li
cp
f
309.028 250.586 mo
309.812 250.586 li
309.812 239.606 li
309.028 239.606 li
cp
f
309.812 250.586 mo
310.596 250.586 li
310.596 248.232 li
309.812 248.232 li
cp
f
310.596 250.586 mo
311.379 250.586 li
311.379 244.311 li
310.596 244.311 li
cp
f
311.379 250.586 mo
312.163 250.586 li
312.163 179.991 li
311.379 179.991 li
cp
0 0 0 1 cmyk
f
312.163 250.586 mo
312.947 250.586 li
312.947 179.991 li
312.163 179.991 li
cp
f
312.947 250.586 mo
313.731 250.586 li
313.731 247.45 li
312.947 247.45 li
cp
.875 .247 1 .133 cmyk
f
313.731 250.586 mo
314.515 250.586 li
314.515 247.45 li
313.731 247.45 li
cp
f
314.515 250.586 mo
315.299 250.586 li
315.299 246.664 li
314.515 246.664 li
cp
f
315.299 250.586 mo
316.083 250.586 li
316.083 243.528 li
315.299 243.528 li
cp
f
316.866 250.586 mo
317.65 250.586 li
317.65 243.528 li
316.866 243.528 li
cp
f
317.65 250.586 mo
318.434 250.586 li
318.434 243.528 li
317.65 243.528 li
cp
f
318.434 250.586 mo
319.218 250.586 li
319.218 238.035 li
318.434 238.035 li
cp
f
319.218 250.586 mo
320.002 250.586 li
320.002 238.035 li
319.218 238.035 li
cp
f
320.002 250.586 mo
320.786 250.586 li
320.786 247.45 li
320.002 247.45 li
cp
f
320.786 250.586 mo
321.57 250.586 li
321.57 249.017 li
320.786 249.017 li
cp
f
321.57 250.586 mo
322.354 250.586 li
322.354 247.45 li
321.57 247.45 li
cp
f
322.354 250.586 mo
323.137 250.586 li
323.137 238.035 li
322.354 238.035 li
cp
f
323.138 250.586 mo
323.921 250.586 li
323.921 241.173 li
323.138 241.173 li
cp
f
323.921 250.586 mo
324.705 250.586 li
324.705 248.232 li
323.921 248.232 li
cp
f
324.705 250.586 mo
325.489 250.586 li
325.489 249.017 li
324.705 249.017 li
cp
f
325.489 250.586 mo
326.273 250.586 li
326.273 248.232 li
325.489 248.232 li
cp
f
326.273 250.586 mo
327.057 250.586 li
327.057 245.879 li
326.273 245.879 li
cp
f
327.057 250.586 mo
327.841 250.586 li
327.841 247.45 li
327.057 247.45 li
cp
f
327.841 250.586 mo
328.625 250.586 li
328.625 247.45 li
327.841 247.45 li
cp
f
328.625 250.586 mo
329.408 250.586 li
329.408 244.311 li
328.625 244.311 li
cp
f
329.409 250.586 mo
330.192 250.586 li
330.192 244.311 li
329.409 244.311 li
cp
f
330.192 250.586 mo
330.976 250.586 li
330.976 243.528 li
330.192 243.528 li
cp
f
330.976 250.586 mo
331.76 250.586 li
331.76 245.095 li
330.976 245.095 li
cp
f
331.76 250.586 mo
332.544 250.586 li
332.544 248.232 li
331.76 248.232 li
cp
f
332.544 250.586 mo
333.328 250.586 li
333.328 242.742 li
332.544 242.742 li
cp
f
333.328 250.586 mo
334.112 250.586 li
334.112 242.742 li
333.328 242.742 li
cp
f
334.112 250.586 mo
334.896 250.586 li
334.896 237.251 li
334.112 237.251 li
cp
f
334.896 250.586 mo
335.679 250.586 li
335.679 237.251 li
334.896 237.251 li
cp
f
335.679 250.586 mo
336.463 250.586 li
336.463 249.017 li
335.679 249.017 li
cp
f
336.463 250.586 mo
337.247 250.586 li
337.247 236.467 li
336.463 236.467 li
cp
f
337.247 250.586 mo
338.031 250.586 li
338.031 218.426 li
337.247 218.426 li
cp
f
338.031 250.586 mo
338.815 250.586 li
338.815 234.898 li
338.031 234.898 li
cp
f
338.815 250.586 mo
339.599 250.586 li
339.599 239.606 li
338.815 239.606 li
cp
f
339.599 250.586 mo
340.383 250.586 li
340.383 173.716 li
339.599 173.716 li
cp
f
340.383 250.586 mo
341.166 250.586 li
341.166 173.716 li
340.383 173.716 li
cp
f
341.167 250.586 mo
341.95 250.586 li
341.95 244.311 li
341.167 244.311 li
cp
f
341.95 250.586 mo
342.734 250.586 li
342.734 244.311 li
341.95 244.311 li
cp
f
342.734 250.586 mo
343.518 250.586 li
343.518 249.017 li
342.734 249.017 li
cp
f
344.302 250.586 mo
345.086 250.586 li
345.086 235.684 li
344.302 235.684 li
cp
f
345.086 250.586 mo
345.87 250.586 li
345.87 235.684 li
345.086 235.684 li
cp
f
345.87 250.586 mo
346.654 250.586 li
346.654 244.311 li
345.87 244.311 li
cp
f
346.654 250.586 mo
347.437 250.586 li
347.437 247.45 li
346.654 247.45 li
cp
f
347.438 250.586 mo
348.221 250.586 li
348.221 242.742 li
347.438 242.742 li
cp
f
348.221 250.586 mo
349.005 250.586 li
349.005 234.898 li
348.221 234.898 li
cp
f
349.005 250.586 mo
349.789 250.586 li
349.789 231.762 li
349.005 231.762 li
cp
f
349.789 250.586 mo
350.573 250.586 li
350.573 247.45 li
349.789 247.45 li
cp
f
350.573 250.586 mo
351.357 250.586 li
351.357 246.664 li
350.573 246.664 li
cp
f
351.357 250.586 mo
352.141 250.586 li
352.141 247.45 li
351.357 247.45 li
cp
f
352.141 250.586 mo
352.925 250.586 li
352.925 227.054 li
352.141 227.054 li
cp
f
352.925 250.586 mo
353.708 250.586 li
353.708 246.664 li
352.925 246.664 li
cp
f
353.708 250.586 mo
354.492 250.586 li
354.492 246.664 li
353.708 246.664 li
cp
f
354.492 250.586 mo
355.276 250.586 li
355.276 246.664 li
354.492 246.664 li
cp
f
355.276 250.586 mo
356.06 250.586 li
356.06 249.017 li
355.276 249.017 li
cp
f
356.06 250.586 mo
356.844 250.586 li
356.844 243.528 li
356.06 243.528 li
cp
f
356.844 250.586 mo
357.628 250.586 li
357.628 238.82 li
356.844 238.82 li
cp
f
357.628 250.586 mo
358.412 250.586 li
358.412 238.035 li
357.628 238.035 li
cp
f
358.412 250.586 mo
359.196 250.586 li
359.196 249.017 li
358.412 249.017 li
cp
f
359.196 250.586 mo
359.979 250.586 li
359.979 248.232 li
359.196 248.232 li
cp
f
359.979 250.586 mo
360.763 250.586 li
360.763 231.762 li
359.979 231.762 li
cp
f
360.763 250.586 mo
361.547 250.586 li
361.547 248.232 li
360.763 248.232 li
cp
f
361.547 250.586 mo
362.331 250.586 li
362.331 248.232 li
361.547 248.232 li
cp
f
362.331 250.586 mo
363.115 250.586 li
363.115 249.017 li
362.331 249.017 li
cp
f
363.899 250.586 mo
364.683 250.586 li
364.683 249.017 li
363.899 249.017 li
cp
f
364.683 250.586 mo
365.467 250.586 li
365.467 241.957 li
364.683 241.957 li
cp
f
366.25 250.586 mo
367.034 250.586 li
367.034 223.132 li
366.25 223.132 li
cp
f
367.034 250.586 mo
367.818 250.586 li
367.818 238.035 li
367.034 238.035 li
cp
f
367.818 250.586 mo
368.602 250.586 li
368.602 248.232 li
367.818 248.232 li
cp
f
368.602 250.586 mo
369.386 250.586 li
369.386 242.742 li
368.602 242.742 li
cp
f
369.386 250.586 mo
370.17 250.586 li
370.17 242.742 li
369.386 242.742 li
cp
f
370.17 250.586 mo
370.954 250.586 li
370.954 237.251 li
370.17 237.251 li
cp
f
370.954 250.586 mo
371.737 250.586 li
371.737 247.45 li
370.954 247.45 li
cp
f
371.737 250.586 mo
372.521 250.586 li
372.521 242.742 li
371.737 242.742 li
cp
f
372.521 250.586 mo
373.305 250.586 li
373.305 245.879 li
372.521 245.879 li
cp
f
373.305 250.586 mo
374.089 250.586 li
374.089 249.017 li
373.305 249.017 li
cp
f
374.089 250.586 mo
374.873 250.586 li
374.873 214.504 li
374.089 214.504 li
cp
f
374.873 250.586 mo
375.657 250.586 li
375.657 248.232 li
374.873 248.232 li
cp
f
375.657 250.586 mo
376.441 250.586 li
376.441 244.311 li
375.657 244.311 li
cp
f
376.441 250.586 mo
377.225 250.586 li
377.225 244.311 li
376.441 244.311 li
cp
f
377.225 250.586 mo
378.008 250.586 li
378.008 233.329 li
377.225 233.329 li
cp
f
378.009 250.586 mo
378.792 250.586 li
378.792 233.329 li
378.009 233.329 li
cp
f
378.792 250.586 mo
379.576 250.586 li
379.576 239.606 li
378.792 239.606 li
cp
f
379.576 250.586 mo
380.36 250.586 li
380.36 238.82 li
379.576 238.82 li
cp
f
380.36 250.586 mo
381.144 250.586 li
381.144 238.82 li
380.36 238.82 li
cp
f
381.144 250.586 mo
381.928 250.586 li
381.928 243.528 li
381.144 243.528 li
cp
f
381.928 250.586 mo
382.712 250.586 li
382.712 243.528 li
381.928 243.528 li
cp
f
382.712 250.586 mo
383.496 250.586 li
383.496 245.879 li
382.712 245.879 li
cp
f
383.496 250.586 mo
384.279 250.586 li
384.279 246.664 li
383.496 246.664 li
cp
f
384.279 250.586 mo
385.063 250.586 li
385.063 243.528 li
384.279 243.528 li
cp
f
385.063 250.586 mo
385.847 250.586 li
385.847 245.879 li
385.063 245.879 li
cp
f
385.847 250.586 mo
386.631 250.586 li
386.631 234.898 li
385.847 234.898 li
cp
f
386.631 250.586 mo
387.415 250.586 li
387.415 236.467 li
386.631 236.467 li
cp
f
387.415 250.586 mo
388.199 250.586 li
388.199 247.45 li
387.415 247.45 li
cp
f
388.199 250.586 mo
388.983 250.586 li
388.983 232.545 li
388.199 232.545 li
cp
f
388.983 250.586 mo
389.767 250.586 li
389.767 237.251 li
388.983 237.251 li
cp
f
389.767 250.586 mo
390.55 250.586 li
390.55 248.232 li
389.767 248.232 li
cp
f
390.55 250.586 mo
391.334 250.586 li
391.334 246.664 li
390.55 246.664 li
cp
f
391.334 250.586 mo
392.118 250.586 li
392.118 249.017 li
391.334 249.017 li
cp
f
392.118 250.586 mo
392.902 250.586 li
392.902 247.45 li
392.118 247.45 li
cp
f
392.902 250.586 mo
393.686 250.586 li
393.686 247.45 li
392.902 247.45 li
cp
f
393.686 250.586 mo
394.47 250.586 li
394.47 246.664 li
393.686 246.664 li
cp
f
394.47 250.586 mo
395.254 250.586 li
395.254 246.664 li
394.47 246.664 li
cp
f
395.254 250.586 mo
396.037 250.586 li
396.037 244.311 li
395.254 244.311 li
cp
f
396.038 250.586 mo
396.821 250.586 li
396.821 238.82 li
396.038 238.82 li
cp
f
396.821 250.586 mo
397.605 250.586 li
397.605 234.898 li
396.821 234.898 li
cp
f
397.605 250.586 mo
398.389 250.586 li
398.389 234.898 li
397.605 234.898 li
cp
f
398.389 250.586 mo
399.173 250.586 li
399.173 240.389 li
398.389 240.389 li
cp
f
399.173 250.586 mo
399.957 250.586 li
399.957 241.173 li
399.173 241.173 li
cp
f
399.957 250.586 mo
400.741 250.586 li
400.741 240.389 li
399.957 240.389 li
cp
f
400.741 250.586 mo
401.525 250.586 li
401.525 249.017 li
400.741 249.017 li
cp
f
401.525 250.586 mo
402.308 250.586 li
402.308 248.232 li
401.525 248.232 li
cp
f
402.309 250.586 mo
403.092 250.586 li
403.092 243.528 li
402.309 243.528 li
cp
f
403.876 250.586 mo
404.66 250.586 li
404.66 245.095 li
403.876 245.095 li
cp
f
404.66 250.586 mo
405.444 250.586 li
405.444 245.879 li
404.66 245.879 li
cp
f
405.444 250.586 mo
406.228 250.586 li
406.228 249.017 li
405.444 249.017 li
cp
f
406.228 250.586 mo
407.012 250.586 li
407.012 234.113 li
406.228 234.113 li
cp
f
407.012 250.586 mo
407.796 250.586 li
407.796 226.27 li
407.012 226.27 li
cp
f
407.796 250.586 mo
408.579 250.586 li
408.579 245.879 li
407.796 245.879 li
cp
f
408.579 250.586 mo
409.363 250.586 li
409.363 245.879 li
408.579 245.879 li
cp
f
409.363 250.586 mo
410.147 250.586 li
410.147 243.528 li
409.363 243.528 li
cp
f
410.147 250.586 mo
410.931 250.586 li
410.931 234.113 li
410.147 234.113 li
cp
f
410.931 250.586 mo
411.715 250.586 li
411.715 246.664 li
410.931 246.664 li
cp
f
411.715 250.586 mo
412.499 250.586 li
412.499 239.606 li
411.715 239.606 li
cp
f
412.499 250.586 mo
413.283 250.586 li
413.283 239.606 li
412.499 239.606 li
cp
f
413.283 250.586 mo
414.067 250.586 li
414.067 246.664 li
413.283 246.664 li
cp
f
414.066 250.586 mo
414.85 250.586 li
414.85 249.017 li
414.066 249.017 li
cp
f
414.85 250.586 mo
415.634 250.586 li
415.634 228.623 li
414.85 228.623 li
cp
f
415.634 250.586 mo
416.418 250.586 li
416.418 232.545 li
415.634 232.545 li
cp
f
416.418 250.586 mo
417.202 250.586 li
417.202 246.664 li
416.418 246.664 li
cp
f
417.202 250.586 mo
417.986 250.586 li
417.986 234.113 li
417.202 234.113 li
cp
f
417.986 250.586 mo
418.77 250.586 li
418.77 245.879 li
417.986 245.879 li
cp
f
418.77 250.586 mo
419.554 250.586 li
419.554 249.017 li
418.77 249.017 li
cp
f
419.554 250.586 mo
420.337 250.586 li
420.337 249.017 li
419.554 249.017 li
cp
f
420.337 250.586 mo
421.121 250.586 li
421.121 249.017 li
420.337 249.017 li
cp
f
421.121 250.586 mo
421.904 250.586 li
421.904 249.017 li
421.121 249.017 li
cp
f
422.689 250.586 mo
423.471 250.586 li
423.471 238.82 li
422.689 238.82 li
cp
f
423.471 250.586 mo
424.259 250.586 li
424.259 222.348 li
423.471 222.348 li
cp
f
424.259 250.586 mo
425.041 250.586 li
425.041 243.528 li
424.259 243.528 li
cp
f
425.041 250.586 mo
425.823 250.586 li
425.823 230.192 li
425.041 230.192 li
cp
f
425.823 250.586 mo
426.608 250.586 li
426.608 232.545 li
425.823 232.545 li
cp
f
426.608 250.586 mo
427.391 250.586 li
427.391 245.095 li
426.608 245.095 li
cp
f
427.391 250.586 mo
428.178 250.586 li
428.178 245.095 li
427.391 245.095 li
cp
f
428.178 250.586 mo
428.96 250.586 li
428.96 229.407 li
428.178 229.407 li
cp
f
428.96 250.586 mo
429.742 250.586 li
429.742 229.407 li
428.96 229.407 li
cp
f
429.742 250.586 mo
430.528 250.586 li
430.528 247.45 li
429.742 247.45 li
cp
f
430.528 250.586 mo
431.31 250.586 li
431.31 243.528 li
430.528 243.528 li
cp
f
431.31 250.586 mo
432.097 250.586 li
432.097 240.389 li
431.31 240.389 li
cp
f
432.097 250.586 mo
432.879 250.586 li
432.879 221.563 li
432.097 221.563 li
cp
0 0 0 1 cmyk
f
432.879 250.586 mo
433.662 250.586 li
433.662 221.563 li
432.879 221.563 li
cp
f
433.662 250.586 mo
434.447 250.586 li
434.447 248.232 li
433.662 248.232 li
cp
.875 .247 1 .133 cmyk
f
434.447 250.586 mo
435.229 250.586 li
435.229 248.232 li
434.447 248.232 li
cp
f
435.229 250.586 mo
436.017 250.586 li
436.017 248.232 li
435.229 248.232 li
cp
f
436.799 250.586 mo
437.581 250.586 li
437.581 245.095 li
436.799 245.095 li
cp
f
437.581 250.586 mo
438.367 250.586 li
438.367 245.095 li
437.581 245.095 li
cp
f
438.366 250.586 mo
439.149 250.586 li
439.149 238.82 li
438.366 238.82 li
cp
f
439.149 250.586 mo
439.936 250.586 li
439.936 238.82 li
439.149 238.82 li
cp
f
439.936 250.586 mo
440.718 250.586 li
440.718 244.311 li
439.936 244.311 li
cp
f
440.718 250.586 mo
441.5 250.586 li
441.5 246.664 li
440.718 246.664 li
cp
f
441.5 250.586 mo
442.286 250.586 li
442.286 184.699 li
441.5 184.699 li
cp
f
442.286 250.586 mo
443.068 250.586 li
443.068 247.45 li
442.286 247.45 li
cp
f
443.068 250.586 mo
443.855 250.586 li
443.855 229.407 li
443.068 229.407 li
cp
f
443.855 250.586 mo
444.638 250.586 li
444.638 228.623 li
443.855 228.623 li
cp
f
444.638 250.586 mo
445.42 250.586 li
445.42 239.606 li
444.638 239.606 li
cp
f
445.42 250.586 mo
446.205 250.586 li
446.205 246.664 li
445.42 246.664 li
cp
f
446.205 250.586 mo
446.987 250.586 li
446.987 237.251 li
446.205 237.251 li
cp
f
446.987 250.586 mo
447.775 250.586 li
447.775 238.82 li
446.987 238.82 li
cp
f
447.775 250.586 mo
448.557 250.586 li
448.557 245.095 li
447.775 245.095 li
cp
f
448.557 250.586 mo
449.339 250.586 li
449.339 245.095 li
448.557 245.095 li
cp
f
449.339 250.586 mo
450.125 250.586 li
450.125 248.232 li
449.339 248.232 li
cp
f
450.125 250.586 mo
450.907 250.586 li
450.907 246.664 li
450.125 246.664 li
cp
f
450.907 250.586 mo
451.694 250.586 li
451.694 247.45 li
450.907 247.45 li
cp
f
451.694 250.586 mo
452.476 250.586 li
452.476 238.82 li
451.694 238.82 li
cp
f
452.476 250.586 mo
453.258 250.586 li
453.258 244.311 li
452.476 244.311 li
cp
f
453.258 250.586 mo
454.044 250.586 li
454.044 247.45 li
453.258 247.45 li
cp
f
454.044 250.586 mo
454.826 250.586 li
454.826 247.45 li
454.044 247.45 li
cp
f
456.396 250.586 mo
457.178 250.586 li
457.178 248.232 li
456.396 248.232 li
cp
f
457.963 250.586 mo
458.745 250.586 li
458.745 247.45 li
457.963 247.45 li
cp
f
458.745 250.586 mo
459.533 250.586 li
459.533 219.21 li
458.745 219.21 li
cp
f
460.315 250.586 mo
461.097 250.586 li
461.097 248.232 li
460.315 248.232 li
cp
f
461.097 250.586 mo
461.883 250.586 li
461.883 246.664 li
461.097 246.664 li
cp
f
461.883 250.586 mo
462.665 250.586 li
462.665 245.879 li
461.883 245.879 li
cp
f
462.665 250.586 mo
463.452 250.586 li
463.452 243.528 li
462.665 243.528 li
cp
f
463.452 250.586 mo
464.234 250.586 li
464.234 247.45 li
463.452 247.45 li
cp
f
464.234 250.586 mo
465.016 250.586 li
465.016 245.879 li
464.234 245.879 li
cp
f
465.016 250.586 mo
465.802 250.586 li
465.802 249.017 li
465.016 249.017 li
cp
f
465.802 250.586 mo
466.584 250.586 li
466.584 249.017 li
465.802 249.017 li
cp
f
466.584 250.586 mo
467.371 250.586 li
467.371 247.45 li
466.584 247.45 li
cp
f
482.262 250.586 mo
483.049 250.586 li
483.049 249.017 li
482.262 249.017 li
cp
f
483.049 250.586 mo
483.831 250.586 li
483.831 249.017 li
483.049 249.017 li
cp
f
490.1 250.586 mo
490.888 250.586 li
490.888 248.232 li
490.1 248.232 li
cp
f
490.888 250.586 mo
491.67 250.586 li
491.67 248.232 li
490.888 248.232 li
cp
f
491.67 250.586 mo
492.452 250.586 li
492.452 248.232 li
491.67 248.232 li
cp
f
492.452 250.586 mo
493.238 250.586 li
493.238 248.232 li
492.452 248.232 li
cp
f
504.21 250.586 mo
504.996 250.586 li
504.996 249.017 li
504.21 249.017 li
cp
f
507.347 250.586 mo
508.129 250.586 li
508.129 246.664 li
507.347 246.664 li
cp
f
508.129 250.586 mo
508.915 250.586 li
508.915 246.664 li
508.129 246.664 li
cp
f
509.697 250.586 mo
510.484 250.586 li
510.484 237.251 li
509.697 237.251 li
cp
f
510.484 250.586 mo
511.267 250.586 li
511.267 237.251 li
510.484 237.251 li
cp
f
511.267 250.586 mo
512.049 250.586 li
512.049 226.27 li
511.267 226.27 li
cp
f
512.049 250.586 mo
512.834 250.586 li
512.834 240.389 li
512.049 240.389 li
cp
f
512.834 250.586 mo
513.616 250.586 li
513.616 246.664 li
512.834 246.664 li
cp
f
513.616 250.586 mo
514.404 250.586 li
514.404 241.957 li
513.616 241.957 li
cp
f
514.404 250.586 mo
515.186 250.586 li
515.186 241.957 li
514.404 241.957 li
cp
f
515.186 250.586 mo
515.968 250.586 li
515.968 247.45 li
515.186 247.45 li
cp
f
515.968 250.586 mo
516.754 250.586 li
516.754 241.173 li
515.968 241.173 li
cp
f
516.754 250.586 mo
517.536 250.586 li
517.536 205.876 li
516.754 205.876 li
cp
f
517.536 250.586 mo
518.323 250.586 li
518.323 205.091 li
517.536 205.091 li
cp
f
518.323 250.586 mo
519.105 250.586 li
519.105 244.311 li
518.323 244.311 li
cp
f
519.105 250.586 mo
519.887 250.586 li
519.887 244.311 li
519.105 244.311 li
cp
f
519.887 250.586 mo
520.673 250.586 li
520.673 246.664 li
519.887 246.664 li
cp
f
520.673 250.586 mo
521.455 250.586 li
521.455 246.664 li
520.673 246.664 li
cp
f
521.455 250.586 mo
522.242 250.586 li
522.242 246.664 li
521.455 246.664 li
cp
f
522.242 250.586 mo
523.025 250.586 li
523.025 249.017 li
522.242 249.017 li
cp
f
523.025 250.586 mo
523.807 250.586 li
523.807 244.311 li
523.025 244.311 li
cp
f
523.807 250.586 mo
524.592 250.586 li
524.592 241.957 li
523.807 241.957 li
cp
f
524.592 250.586 mo
525.374 250.586 li
525.374 219.996 li
524.592 219.996 li
cp
0 0 0 1 cmyk
f
525.375 250.586 mo
526.162 250.586 li
526.162 219.996 li
525.375 219.996 li
cp
f
526.162 250.586 mo
526.944 250.586 li
526.944 235.684 li
526.162 235.684 li
cp
.875 .247 1 .133 cmyk
f
526.944 250.586 mo
527.726 250.586 li
527.726 245.879 li
526.944 245.879 li
cp
f
527.726 250.586 mo
528.512 250.586 li
528.512 247.45 li
527.726 247.45 li
cp
f
528.512 250.586 mo
529.294 250.586 li
529.294 235.684 li
528.512 235.684 li
cp
f
529.294 250.586 mo
530.081 250.586 li
530.081 245.095 li
529.294 245.095 li
cp
f
530.081 250.586 mo
530.863 250.586 li
530.863 241.957 li
530.081 241.957 li
cp
f
530.863 250.586 mo
531.645 250.586 li
531.645 234.898 li
530.863 234.898 li
cp
f
531.645 250.586 mo
532.431 250.586 li
532.431 234.898 li
531.645 234.898 li
cp
f
532.431 250.586 mo
533.213 250.586 li
533.213 238.035 li
532.431 238.035 li
cp
f
533.213 250.586 mo
534.001 250.586 li
534.001 238.035 li
533.213 238.035 li
cp
f
534 250.586 mo
534.783 250.586 li
534.783 238.035 li
534 238.035 li
cp
f
534.783 250.586 mo
535.565 250.586 li
535.565 239.606 li
534.783 239.606 li
cp
f
535.565 250.586 mo
536.35 250.586 li
536.35 241.173 li
535.565 241.173 li
cp
f
536.35 250.586 mo
537.133 250.586 li
537.133 241.173 li
536.35 241.173 li
cp
f
537.133 250.586 mo
537.92 250.586 li
537.92 219.21 li
537.133 219.21 li
cp
f
537.92 250.586 mo
538.702 250.586 li
538.702 247.45 li
537.92 247.45 li
cp
f
539.484 250.586 mo
540.27 250.586 li
540.27 243.528 li
539.484 243.528 li
cp
f
540.27 250.586 mo
541.052 250.586 li
541.052 243.528 li
540.27 243.528 li
cp
f
541.052 250.586 mo
541.839 250.586 li
541.839 247.45 li
541.052 247.45 li
cp
f
541.839 250.586 mo
542.621 250.586 li
542.621 248.232 li
541.839 248.232 li
cp
f
542.621 250.586 mo
543.404 250.586 li
543.404 172.147 li
542.621 172.147 li
cp
f
543.404 250.586 mo
544.189 250.586 li
544.189 172.147 li
543.404 172.147 li
cp
f
544.189 250.586 mo
544.971 250.586 li
544.971 248.232 li
544.189 248.232 li
cp
f
544.971 250.586 mo
545.759 250.586 li
545.759 243.528 li
544.971 243.528 li
cp
f
545.759 250.586 mo
546.541 250.586 li
546.541 225.485 li
545.759 225.485 li
cp
f
546.541 250.586 mo
547.323 250.586 li
547.323 235.684 li
546.541 235.684 li
cp
f
547.323 250.586 mo
548.108 250.586 li
548.108 235.684 li
547.323 235.684 li
cp
f
548.109 250.586 mo
548.891 250.586 li
548.891 215.288 li
548.109 215.288 li
cp
f
548.891 250.586 mo
549.678 250.586 li
549.678 245.095 li
548.891 245.095 li
cp
f
549.678 250.586 mo
550.46 250.586 li
550.46 237.251 li
549.678 237.251 li
cp
f
550.46 250.586 mo
551.242 250.586 li
551.242 237.251 li
550.46 237.251 li
cp
f
551.242 250.586 mo
552.028 250.586 li
552.028 249.017 li
551.242 249.017 li
cp
f
552.028 250.586 mo
552.81 250.586 li
552.81 242.742 li
552.028 242.742 li
cp
f
552.81 250.586 mo
553.597 250.586 li
553.597 238.82 li
552.81 238.82 li
cp
f
553.597 250.586 mo
554.379 250.586 li
554.379 240.389 li
553.597 240.389 li
cp
f
554.38 250.586 mo
555.162 250.586 li
555.162 240.389 li
554.38 240.389 li
cp
f
555.162 250.586 mo
555.947 250.586 li
555.947 245.095 li
555.162 245.095 li
cp
f
556.729 250.586 mo
557.517 250.586 li
557.517 246.664 li
556.729 246.664 li
cp
f
557.517 250.586 mo
558.299 250.586 li
558.299 241.957 li
557.517 241.957 li
cp
f
558.299 250.586 mo
559.081 250.586 li
559.081 241.957 li
558.299 241.957 li
cp
f
559.081 250.586 mo
559.866 250.586 li
559.866 244.311 li
559.081 244.311 li
cp
f
559.867 250.586 mo
560.649 250.586 li
560.649 243.528 li
559.867 243.528 li
cp
f
560.649 250.586 mo
561.436 250.586 li
561.436 242.742 li
560.649 242.742 li
cp
f
561.436 250.586 mo
562.218 250.586 li
562.218 242.742 li
561.436 242.742 li
cp
f
562.218 250.586 mo
563 250.586 li
563 248.232 li
562.218 248.232 li
cp
f
563 250.586 mo
563.786 250.586 li
563.786 226.27 li
563 226.27 li
cp
f
564.568 250.586 mo
565.355 250.586 li
565.355 179.206 li
564.568 179.206 li
cp
0 0 0 1 cmyk
f
565.355 250.586 mo
566.138 250.586 li
566.138 179.206 li
565.355 179.206 li
cp
f
566.138 250.586 mo
566.92 250.586 li
566.92 245.879 li
566.138 245.879 li
cp
.875 .247 1 .133 cmyk
f
566.92 250.586 mo
567.705 250.586 li
567.705 247.45 li
566.92 247.45 li
cp
f
567.705 250.586 mo
568.487 250.586 li
568.487 249.017 li
567.705 249.017 li
cp
f
568.487 250.586 mo
569.275 250.586 li
569.275 249.017 li
568.487 249.017 li
cp
f
569.275 250.586 mo
570.057 250.586 li
570.057 249.017 li
569.275 249.017 li
cp
f
570.839 250.586 mo
571.625 250.586 li
571.625 248.232 li
570.839 248.232 li
cp
f
573.976 250.586 mo
574.758 250.586 li
574.758 247.45 li
573.976 247.45 li
cp
f
574.758 250.586 mo
575.544 250.586 li
575.544 247.45 li
574.758 247.45 li
cp
f
575.544 250.586 mo
576.326 250.586 li
576.326 249.017 li
575.544 249.017 li
cp
f
576.326 250.586 mo
577.113 250.586 li
577.113 245.879 li
576.326 245.879 li
cp
f
577.114 250.586 mo
577.896 250.586 li
577.896 249.017 li
577.114 249.017 li
cp
f
577.896 250.586 mo
578.678 250.586 li
578.678 249.017 li
577.896 249.017 li
cp
f
578.678 250.586 mo
579.463 250.586 li
579.463 246.664 li
578.678 246.664 li
cp
f
579.463 250.586 mo
580.245 250.586 li
580.245 246.664 li
579.463 246.664 li
cp
f
580.245 250.586 mo
581.033 250.586 li
581.033 248.232 li
580.245 248.232 li
cp
f
581.033 250.586 mo
581.815 250.586 li
581.815 249.017 li
581.033 249.017 li
cp
f
584.165 250.586 mo
584.952 250.586 li
584.952 249.017 li
584.165 249.017 li
cp
f
584.952 250.586 mo
585.734 250.586 li
585.734 249.017 li
584.952 249.017 li
cp
f
585.734 250.586 mo
586.516 250.586 li
586.516 249.017 li
585.734 249.017 li
cp
f
586.516 250.586 mo
587.302 250.586 li
587.302 245.095 li
586.516 245.095 li
cp
f
587.302 250.586 mo
588.084 250.586 li
588.084 245.095 li
587.302 245.095 li
cp
f
588.084 250.586 mo
588.872 250.586 li
588.872 246.664 li
588.084 246.664 li
cp
f
588.872 250.586 mo
589.654 250.586 li
589.654 245.095 li
588.872 245.095 li
cp
f
589.654 250.586 mo
590.436 250.586 li
590.436 233.329 li
589.654 233.329 li
cp
f
590.436 250.586 mo
591.221 250.586 li
591.221 247.45 li
590.436 247.45 li
cp
f
591.221 250.586 mo
592.003 250.586 li
592.003 247.45 li
591.221 247.45 li
cp
f
592.003 250.586 mo
592.791 250.586 li
592.791 248.232 li
592.003 248.232 li
cp
f
592.791 250.586 mo
593.573 250.586 li
593.573 248.232 li
592.791 248.232 li
cp
f
593.573 250.586 mo
594.355 250.586 li
594.355 248.232 li
593.573 248.232 li
cp
f
594.355 250.586 mo
595.141 250.586 li
595.141 249.017 li
594.355 249.017 li
cp
f
595.141 250.586 mo
595.923 250.586 li
595.923 249.017 li
595.141 249.017 li
cp
f
595.923 250.586 mo
596.71 250.586 li
596.71 248.232 li
595.923 248.232 li
cp
f
596.71 250.586 mo
597.492 250.586 li
597.492 248.232 li
596.71 248.232 li
cp
f
597.492 250.586 mo
598.274 250.586 li
598.274 249.017 li
597.492 249.017 li
cp
f
598.274 250.586 mo
599.06 250.586 li
599.06 248.232 li
598.274 248.232 li
cp
f
599.06 250.586 mo
599.842 250.586 li
599.842 243.528 li
599.06 243.528 li
cp
f
599.842 250.586 mo
600.63 250.586 li
600.63 243.528 li
599.842 243.528 li
cp
f
600.63 250.586 mo
601.412 250.586 li
601.412 248.232 li
600.63 248.232 li
cp
f
602.194 250.586 mo
602.979 250.586 li
602.979 247.45 li
602.194 247.45 li
cp
f
602.979 250.586 mo
603.761 250.586 li
603.761 246.664 li
602.979 246.664 li
cp
f
603.762 250.586 mo
604.549 250.586 li
604.549 248.232 li
603.762 248.232 li
cp
f
604.549 250.586 mo
605.331 250.586 li
605.331 246.664 li
604.549 246.664 li
cp
f
605.331 250.586 mo
606.113 250.586 li
606.113 241.173 li
605.331 241.173 li
cp
f
606.113 250.586 mo
606.899 250.586 li
606.899 244.311 li
606.113 244.311 li
cp
f
606.899 250.586 mo
607.681 250.586 li
607.681 240.389 li
606.899 240.389 li
cp
f
607.681 250.586 mo
608.468 250.586 li
608.468 240.389 li
607.681 240.389 li
cp
f
608.468 250.586 mo
609.25 250.586 li
609.25 247.45 li
608.468 247.45 li
cp
f
609.25 250.586 mo
610.033 250.586 li
610.033 247.45 li
609.25 247.45 li
cp
f
613.17 250.586 mo
613.952 250.586 li
613.952 248.232 li
613.17 248.232 li
cp
f
614.737 250.586 mo
615.52 250.586 li
615.52 247.45 li
614.737 247.45 li
cp
f
615.52 250.586 mo
616.307 250.586 li
616.307 247.45 li
615.52 247.45 li
cp
f
616.307 250.586 mo
617.089 250.586 li
617.089 245.879 li
616.307 245.879 li
cp
f
617.089 250.586 mo
617.871 250.586 li
617.871 245.879 li
617.089 245.879 li
cp
f
617.871 250.586 mo
618.657 250.586 li
618.657 248.232 li
617.871 248.232 li
cp
f
618.657 250.586 mo
619.439 250.586 li
619.439 248.232 li
618.657 248.232 li
cp
f
619.439 250.586 mo
620.226 250.586 li
620.226 248.232 li
619.439 248.232 li
cp
f
620.226 250.586 mo
621.008 250.586 li
621.008 247.45 li
620.226 247.45 li
cp
f
621.008 250.586 mo
621.791 250.586 li
621.791 249.017 li
621.008 249.017 li
cp
f
621.791 250.586 mo
622.576 250.586 li
622.576 249.017 li
621.791 249.017 li
cp
f
627.278 250.586 mo
628.065 250.586 li
628.065 249.017 li
627.278 249.017 li
cp
f
628.065 250.586 mo
628.847 250.586 li
628.847 249.017 li
628.065 249.017 li
cp
f
116.857 282.136 mo
635.919 282.136 li
0 0 0 1 cmyk
gsave
[1.74194 0 0 -1.74308 116.857 282.136 ]ct
@
grestore newpath
144.729 282.136 mo
144.729 263.834 li
165.196 263.834 li
gsave
[1.74194 0 0 -1.74308 144.729 282.136 ]ct
@
grestore newpath
171.346 263.834 mo
162.68 267.376 li
164.737 263.834 li
162.68 260.292 li
cp
f
203.989 403.02 mo
204.773 403.02 li
204.773 401.451 li
203.989 401.451 li
cp
.875 .247 1 .133 cmyk
f
204.773 403.02 mo
205.557 403.02 li
205.557 399.884 li
204.773 399.884 li
cp
f
205.557 403.02 mo
206.341 403.02 li
206.341 399.884 li
205.557 399.884 li
cp
f
207.125 403.02 mo
207.908 403.02 li
207.908 396.745 li
207.125 396.745 li
cp
f
207.908 403.02 mo
208.692 403.02 li
208.692 396.745 li
207.908 396.745 li
cp
f
208.692 403.02 mo
209.476 403.02 li
209.476 392.823 li
208.692 392.823 li
cp
f
209.476 403.02 mo
210.26 403.02 li
210.26 392.04 li
209.476 392.04 li
cp
f
210.26 403.02 mo
211.044 403.02 li
211.044 392.04 li
210.26 392.04 li
cp
f
211.044 403.02 mo
211.828 403.02 li
211.828 397.529 li
211.044 397.529 li
cp
f
211.828 403.02 mo
212.612 403.02 li
212.612 397.529 li
211.828 397.529 li
cp
f
212.612 403.02 mo
213.396 403.02 li
213.396 384.979 li
212.612 384.979 li
cp
f
213.396 403.02 mo
214.179 403.02 li
214.179 388.901 li
213.396 388.901 li
cp
f
214.179 403.02 mo
214.963 403.02 li
214.963 397.529 li
214.179 397.529 li
cp
f
214.963 403.02 mo
215.747 403.02 li
215.747 399.098 li
214.963 399.098 li
cp
f
215.747 403.02 mo
216.531 403.02 li
216.531 399.098 li
215.747 399.098 li
cp
f
216.531 403.02 mo
217.315 403.02 li
217.315 398.313 li
216.531 398.313 li
cp
f
217.315 403.02 mo
218.099 403.02 li
218.099 398.313 li
217.315 398.313 li
cp
f
218.099 403.02 mo
218.883 403.02 li
218.883 384.196 li
218.099 384.196 li
cp
f
218.883 403.02 mo
219.667 403.02 li
219.667 389.685 li
218.883 389.685 li
cp
f
219.667 403.02 mo
220.45 403.02 li
220.45 399.098 li
219.667 399.098 li
cp
f
220.45 403.02 mo
221.234 403.02 li
221.234 399.098 li
220.45 399.098 li
cp
f
221.234 403.02 mo
222.018 403.02 li
222.018 400.667 li
221.234 400.667 li
cp
f
222.018 403.02 mo
222.802 403.02 li
222.802 389.685 li
222.018 389.685 li
cp
f
222.802 403.02 mo
223.586 403.02 li
223.586 392.04 li
222.802 392.04 li
cp
f
223.586 403.02 mo
224.37 403.02 li
224.37 393.607 li
223.586 393.607 li
cp
f
224.37 403.02 mo
225.154 403.02 li
225.154 395.962 li
224.37 395.962 li
cp
f
225.154 403.02 mo
225.937 403.02 li
225.937 374.782 li
225.154 374.782 li
cp
f
225.938 403.02 mo
226.721 403.02 li
226.721 385.763 li
225.938 385.763 li
cp
f
226.721 403.02 mo
227.505 403.02 li
227.505 399.884 li
226.721 399.884 li
cp
f
227.505 403.02 mo
228.289 403.02 li
228.289 398.313 li
227.505 398.313 li
cp
f
228.289 403.02 mo
229.073 403.02 li
229.073 384.196 li
228.289 384.196 li
cp
0 0 0 1 cmyk
f
229.073 403.02 mo
229.857 403.02 li
229.857 384.196 li
229.073 384.196 li
cp
f
229.857 403.02 mo
230.641 403.02 li
230.641 389.685 li
229.857 389.685 li
cp
.875 .247 1 .133 cmyk
f
230.641 403.02 mo
231.425 403.02 li
231.425 389.685 li
230.641 389.685 li
cp
f
231.425 403.02 mo
232.208 403.02 li
232.208 395.176 li
231.425 395.176 li
cp
f
232.208 403.02 mo
232.992 403.02 li
232.992 398.313 li
232.208 398.313 li
cp
f
232.992 403.02 mo
233.776 403.02 li
233.776 398.313 li
232.992 398.313 li
cp
f
233.776 403.02 mo
234.56 403.02 li
234.56 396.745 li
233.776 396.745 li
cp
f
234.56 403.02 mo
235.344 403.02 li
235.344 401.451 li
234.56 401.451 li
cp
f
235.344 403.02 mo
236.128 403.02 li
236.128 399.884 li
235.344 399.884 li
cp
f
236.128 403.02 mo
236.912 403.02 li
236.912 397.529 li
236.128 397.529 li
cp
f
236.912 403.02 mo
237.696 403.02 li
237.696 398.313 li
236.912 398.313 li
cp
f
237.696 403.02 mo
238.479 403.02 li
238.479 398.313 li
237.696 398.313 li
cp
f
238.479 403.02 mo
239.263 403.02 li
239.263 398.313 li
238.479 398.313 li
cp
f
239.263 403.02 mo
240.047 403.02 li
240.047 399.884 li
239.263 399.884 li
cp
f
240.047 403.02 mo
240.831 403.02 li
240.831 401.451 li
240.047 401.451 li
cp
f
240.831 403.02 mo
241.615 403.02 li
241.615 401.451 li
240.831 401.451 li
cp
f
241.615 403.02 mo
242.399 403.02 li
242.399 401.451 li
241.615 401.451 li
cp
f
242.399 403.02 mo
243.183 403.02 li
243.183 401.451 li
242.399 401.451 li
cp
f
243.183 403.02 mo
243.966 403.02 li
243.966 396.745 li
243.183 396.745 li
cp
f
243.967 403.02 mo
244.75 403.02 li
244.75 395.962 li
243.967 395.962 li
cp
f
245.534 403.02 mo
246.318 403.02 li
246.318 401.451 li
245.534 401.451 li
cp
f
246.318 403.02 mo
247.102 403.02 li
247.102 389.685 li
246.318 389.685 li
cp
f
247.886 403.02 mo
248.67 403.02 li
248.67 389.685 li
247.886 389.685 li
cp
f
248.67 403.02 mo
249.454 403.02 li
249.454 389.685 li
248.67 389.685 li
cp
f
249.454 403.02 mo
250.237 403.02 li
250.237 398.313 li
249.454 398.313 li
cp
f
250.238 403.02 mo
251.021 403.02 li
251.021 399.884 li
250.238 399.884 li
cp
f
251.021 403.02 mo
251.805 403.02 li
251.805 399.884 li
251.021 399.884 li
cp
f
252.589 403.02 mo
253.373 403.02 li
253.373 399.884 li
252.589 399.884 li
cp
f
253.373 403.02 mo
254.157 403.02 li
254.157 398.313 li
253.373 398.313 li
cp
f
254.157 403.02 mo
254.941 403.02 li
254.941 388.118 li
254.157 388.118 li
cp
f
254.941 403.02 mo
255.725 403.02 li
255.725 389.685 li
254.941 389.685 li
cp
f
255.725 403.02 mo
256.508 403.02 li
256.508 399.884 li
255.725 399.884 li
cp
f
256.509 403.02 mo
257.292 403.02 li
257.292 400.667 li
256.509 400.667 li
cp
f
257.292 403.02 mo
258.076 403.02 li
258.076 400.667 li
257.292 400.667 li
cp
f
258.076 403.02 mo
258.86 403.02 li
258.86 400.667 li
258.076 400.667 li
cp
f
258.86 403.02 mo
259.644 403.02 li
259.644 400.667 li
258.86 400.667 li
cp
f
259.644 403.02 mo
260.428 403.02 li
260.428 399.884 li
259.644 399.884 li
cp
f
260.428 403.02 mo
261.212 403.02 li
261.212 399.884 li
260.428 399.884 li
cp
f
261.212 403.02 mo
261.996 403.02 li
261.996 399.098 li
261.212 399.098 li
cp
f
261.996 403.02 mo
262.779 403.02 li
262.779 398.313 li
261.996 398.313 li
cp
f
262.779 403.02 mo
263.563 403.02 li
263.563 392.823 li
262.779 392.823 li
cp
f
263.563 403.02 mo
264.347 403.02 li
264.347 392.823 li
263.563 392.823 li
cp
f
264.347 403.02 mo
265.131 403.02 li
265.131 401.451 li
264.347 401.451 li
cp
f
265.131 403.02 mo
265.915 403.02 li
265.915 370.075 li
265.131 370.075 li
cp
0 0 0 1 cmyk
f
265.915 403.02 mo
266.699 403.02 li
266.699 370.075 li
265.915 370.075 li
cp
f
266.699 403.02 mo
267.483 403.02 li
267.483 396.745 li
266.699 396.745 li
cp
.875 .247 1 .133 cmyk
f
267.483 403.02 mo
268.267 403.02 li
268.267 401.451 li
267.483 401.451 li
cp
f
269.05 403.02 mo
269.834 403.02 li
269.834 399.884 li
269.05 399.884 li
cp
f
269.834 403.02 mo
270.618 403.02 li
270.618 399.884 li
269.834 399.884 li
cp
f
270.618 403.02 mo
271.402 403.02 li
271.402 401.451 li
270.618 401.451 li
cp
f
271.402 403.02 mo
272.186 403.02 li
272.186 401.451 li
271.402 401.451 li
cp
f
272.186 403.02 mo
272.97 403.02 li
272.97 393.607 li
272.186 393.607 li
cp
f
272.97 403.02 mo
273.754 403.02 li
273.754 392.04 li
272.97 392.04 li
cp
f
273.754 403.02 mo
274.537 403.02 li
274.537 392.04 li
273.754 392.04 li
cp
f
274.538 403.02 mo
275.321 403.02 li
275.321 397.529 li
274.538 397.529 li
cp
f
275.321 403.02 mo
276.105 403.02 li
276.105 391.254 li
275.321 391.254 li
cp
f
276.105 403.02 mo
276.889 403.02 li
276.889 392.823 li
276.105 392.823 li
cp
f
276.889 403.02 mo
277.673 403.02 li
277.673 383.41 li
276.889 383.41 li
cp
f
277.673 403.02 mo
278.457 403.02 li
278.457 383.41 li
277.673 383.41 li
cp
f
278.457 403.02 mo
279.241 403.02 li
279.241 395.962 li
278.457 395.962 li
cp
f
279.241 403.02 mo
280.025 403.02 li
280.025 395.962 li
279.241 395.962 li
cp
f
280.025 403.02 mo
280.808 403.02 li
280.808 399.884 li
280.025 399.884 li
cp
f
280.808 403.02 mo
281.592 403.02 li
281.592 396.745 li
280.808 396.745 li
cp
f
281.592 403.02 mo
282.376 403.02 li
282.376 400.667 li
281.592 400.667 li
cp
f
282.376 403.02 mo
283.16 403.02 li
283.16 356.743 li
282.376 356.743 li
cp
f
283.16 403.02 mo
283.944 403.02 li
283.944 358.31 li
283.16 358.31 li
cp
f
283.944 403.02 mo
284.728 403.02 li
284.728 395.962 li
283.944 395.962 li
cp
f
284.728 403.02 mo
285.512 403.02 li
285.512 395.962 li
284.728 395.962 li
cp
f
285.512 403.02 mo
286.296 403.02 li
286.296 401.451 li
285.512 401.451 li
cp
f
286.296 403.02 mo
287.079 403.02 li
287.079 401.451 li
286.296 401.451 li
cp
f
287.079 403.02 mo
287.863 403.02 li
287.863 383.41 li
287.079 383.41 li
cp
f
287.863 403.02 mo
288.647 403.02 li
288.647 384.979 li
287.863 384.979 li
cp
f
288.647 403.02 mo
289.431 403.02 li
289.431 398.313 li
288.647 398.313 li
cp
f
289.431 403.02 mo
290.215 403.02 li
290.215 393.607 li
289.431 393.607 li
cp
f
290.215 403.02 mo
290.999 403.02 li
290.999 393.607 li
290.215 393.607 li
cp
f
290.999 403.02 mo
291.783 403.02 li
291.783 385.763 li
290.999 385.763 li
cp
f
291.783 403.02 mo
292.567 403.02 li
292.567 396.745 li
291.783 396.745 li
cp
f
292.566 403.02 mo
293.35 403.02 li
293.35 394.391 li
292.566 394.391 li
cp
f
293.35 403.02 mo
294.134 403.02 li
294.134 400.667 li
293.35 400.667 li
cp
f
294.134 403.02 mo
294.918 403.02 li
294.918 398.313 li
294.134 398.313 li
cp
f
294.918 403.02 mo
295.702 403.02 li
295.702 398.313 li
294.918 398.313 li
cp
f
295.702 403.02 mo
296.486 403.02 li
296.486 399.884 li
295.702 399.884 li
cp
f
296.486 403.02 mo
297.27 403.02 li
297.27 393.607 li
296.486 393.607 li
cp
f
297.27 403.02 mo
298.054 403.02 li
298.054 393.607 li
297.27 393.607 li
cp
f
298.054 403.02 mo
298.837 403.02 li
298.837 400.667 li
298.054 400.667 li
cp
f
298.837 403.02 mo
299.621 403.02 li
299.621 400.667 li
298.837 400.667 li
cp
f
299.621 403.02 mo
300.405 403.02 li
300.405 398.313 li
299.621 398.313 li
cp
f
300.405 403.02 mo
301.189 403.02 li
301.189 400.667 li
300.405 400.667 li
cp
f
301.189 403.02 mo
301.973 403.02 li
301.973 381.057 li
301.189 381.057 li
cp
f
301.973 403.02 mo
302.757 403.02 li
302.757 377.135 li
301.973 377.135 li
cp
f
302.757 403.02 mo
303.541 403.02 li
303.541 398.313 li
302.757 398.313 li
cp
f
303.541 403.02 mo
304.325 403.02 li
304.325 399.884 li
303.541 399.884 li
cp
f
304.325 403.02 mo
305.108 403.02 li
305.108 399.098 li
304.325 399.098 li
cp
f
305.108 403.02 mo
305.892 403.02 li
305.892 398.313 li
305.108 398.313 li
cp
f
305.892 403.02 mo
306.676 403.02 li
306.676 398.313 li
305.892 398.313 li
cp
f
306.676 403.02 mo
307.46 403.02 li
307.46 399.884 li
306.676 399.884 li
cp
f
307.46 403.02 mo
308.244 403.02 li
308.244 387.332 li
307.46 387.332 li
cp
f
308.244 403.02 mo
309.028 403.02 li
309.028 387.332 li
308.244 387.332 li
cp
f
309.028 403.02 mo
309.812 403.02 li
309.812 392.04 li
309.028 392.04 li
cp
f
309.812 403.02 mo
310.596 403.02 li
310.596 400.667 li
309.812 400.667 li
cp
f
310.596 403.02 mo
311.379 403.02 li
311.379 396.745 li
310.596 396.745 li
cp
f
311.379 403.02 mo
312.163 403.02 li
312.163 332.425 li
311.379 332.425 li
cp
0 0 0 1 cmyk
f
312.163 403.02 mo
312.947 403.02 li
312.947 332.425 li
312.163 332.425 li
cp
f
312.947 403.02 mo
313.731 403.02 li
313.731 399.884 li
312.947 399.884 li
cp
.875 .247 1 .133 cmyk
f
313.731 403.02 mo
314.515 403.02 li
314.515 399.884 li
313.731 399.884 li
cp
f
314.515 403.02 mo
315.299 403.02 li
315.299 399.098 li
314.515 399.098 li
cp
f
315.299 403.02 mo
316.083 403.02 li
316.083 395.962 li
315.299 395.962 li
cp
f
316.866 403.02 mo
317.65 403.02 li
317.65 395.962 li
316.866 395.962 li
cp
f
317.65 403.02 mo
318.434 403.02 li
318.434 395.962 li
317.65 395.962 li
cp
f
318.434 403.02 mo
319.218 403.02 li
319.218 390.47 li
318.434 390.47 li
cp
f
319.218 403.02 mo
320.002 403.02 li
320.002 390.47 li
319.218 390.47 li
cp
f
320.002 403.02 mo
320.786 403.02 li
320.786 399.884 li
320.002 399.884 li
cp
f
320.786 403.02 mo
321.57 403.02 li
321.57 401.451 li
320.786 401.451 li
cp
f
321.57 403.02 mo
322.354 403.02 li
322.354 399.884 li
321.57 399.884 li
cp
f
322.354 403.02 mo
323.137 403.02 li
323.137 390.47 li
322.354 390.47 li
cp
f
323.138 403.02 mo
323.921 403.02 li
323.921 393.607 li
323.138 393.607 li
cp
f
323.921 403.02 mo
324.705 403.02 li
324.705 400.667 li
323.921 400.667 li
cp
f
324.705 403.02 mo
325.489 403.02 li
325.489 401.451 li
324.705 401.451 li
cp
f
325.489 403.02 mo
326.273 403.02 li
326.273 400.667 li
325.489 400.667 li
cp
f
326.273 403.02 mo
327.057 403.02 li
327.057 398.313 li
326.273 398.313 li
cp
f
327.057 403.02 mo
327.841 403.02 li
327.841 399.884 li
327.057 399.884 li
cp
f
327.841 403.02 mo
328.625 403.02 li
328.625 399.884 li
327.841 399.884 li
cp
f
328.625 403.02 mo
329.408 403.02 li
329.408 396.745 li
328.625 396.745 li
cp
f
329.409 403.02 mo
330.192 403.02 li
330.192 396.745 li
329.409 396.745 li
cp
f
330.192 403.02 mo
330.976 403.02 li
330.976 395.962 li
330.192 395.962 li
cp
f
330.976 403.02 mo
331.76 403.02 li
331.76 397.529 li
330.976 397.529 li
cp
f
331.76 403.02 mo
332.544 403.02 li
332.544 400.667 li
331.76 400.667 li
cp
f
332.544 403.02 mo
333.328 403.02 li
333.328 395.176 li
332.544 395.176 li
cp
f
333.328 403.02 mo
334.112 403.02 li
334.112 395.176 li
333.328 395.176 li
cp
f
334.112 403.02 mo
334.896 403.02 li
334.896 389.685 li
334.112 389.685 li
cp
f
334.896 403.02 mo
335.679 403.02 li
335.679 389.685 li
334.896 389.685 li
cp
f
335.679 403.02 mo
336.463 403.02 li
336.463 401.451 li
335.679 401.451 li
cp
f
336.463 403.02 mo
337.247 403.02 li
337.247 388.901 li
336.463 388.901 li
cp
f
337.247 403.02 mo
338.031 403.02 li
338.031 370.86 li
337.247 370.86 li
cp
f
338.031 403.02 mo
338.815 403.02 li
338.815 387.332 li
338.031 387.332 li
cp
f
338.815 403.02 mo
339.599 403.02 li
339.599 392.04 li
338.815 392.04 li
cp
f
339.599 403.02 mo
340.383 403.02 li
340.383 326.15 li
339.599 326.15 li
cp
f
340.383 403.02 mo
341.166 403.02 li
341.166 326.15 li
340.383 326.15 li
cp
f
341.167 403.02 mo
341.95 403.02 li
341.95 396.745 li
341.167 396.745 li
cp
f
341.95 403.02 mo
342.734 403.02 li
342.734 396.745 li
341.95 396.745 li
cp
f
342.734 403.02 mo
343.518 403.02 li
343.518 401.451 li
342.734 401.451 li
cp
f
344.302 403.02 mo
345.086 403.02 li
345.086 388.118 li
344.302 388.118 li
cp
f
345.086 403.02 mo
345.87 403.02 li
345.87 388.118 li
345.086 388.118 li
cp
f
345.87 403.02 mo
346.654 403.02 li
346.654 396.745 li
345.87 396.745 li
cp
f
346.654 403.02 mo
347.437 403.02 li
347.437 399.884 li
346.654 399.884 li
cp
f
347.438 403.02 mo
348.221 403.02 li
348.221 395.176 li
347.438 395.176 li
cp
f
348.221 403.02 mo
349.005 403.02 li
349.005 387.332 li
348.221 387.332 li
cp
f
349.005 403.02 mo
349.789 403.02 li
349.789 384.196 li
349.005 384.196 li
cp
f
349.789 403.02 mo
350.573 403.02 li
350.573 399.884 li
349.789 399.884 li
cp
f
350.573 403.02 mo
351.357 403.02 li
351.357 399.098 li
350.573 399.098 li
cp
f
351.357 403.02 mo
352.141 403.02 li
352.141 399.884 li
351.357 399.884 li
cp
f
352.141 403.02 mo
352.925 403.02 li
352.925 379.488 li
352.141 379.488 li
cp
f
352.925 403.02 mo
353.708 403.02 li
353.708 399.098 li
352.925 399.098 li
cp
f
353.708 403.02 mo
354.492 403.02 li
354.492 399.098 li
353.708 399.098 li
cp
f
354.492 403.02 mo
355.276 403.02 li
355.276 399.098 li
354.492 399.098 li
cp
f
355.276 403.02 mo
356.06 403.02 li
356.06 401.451 li
355.276 401.451 li
cp
f
356.06 403.02 mo
356.844 403.02 li
356.844 395.962 li
356.06 395.962 li
cp
f
356.844 403.02 mo
357.628 403.02 li
357.628 391.254 li
356.844 391.254 li
cp
f
357.628 403.02 mo
358.412 403.02 li
358.412 390.47 li
357.628 390.47 li
cp
f
358.412 403.02 mo
359.196 403.02 li
359.196 401.451 li
358.412 401.451 li
cp
f
359.196 403.02 mo
359.979 403.02 li
359.979 400.667 li
359.196 400.667 li
cp
f
359.979 403.02 mo
360.763 403.02 li
360.763 384.196 li
359.979 384.196 li
cp
f
360.763 403.02 mo
361.547 403.02 li
361.547 400.667 li
360.763 400.667 li
cp
f
361.547 403.02 mo
362.331 403.02 li
362.331 400.667 li
361.547 400.667 li
cp
f
362.331 403.02 mo
363.115 403.02 li
363.115 401.451 li
362.331 401.451 li
cp
f
363.899 403.02 mo
364.683 403.02 li
364.683 401.451 li
363.899 401.451 li
cp
f
364.683 403.02 mo
365.467 403.02 li
365.467 394.391 li
364.683 394.391 li
cp
f
366.25 403.02 mo
367.034 403.02 li
367.034 375.566 li
366.25 375.566 li
cp
f
367.034 403.02 mo
367.818 403.02 li
367.818 390.47 li
367.034 390.47 li
cp
f
367.818 403.02 mo
368.602 403.02 li
368.602 400.667 li
367.818 400.667 li
cp
f
368.602 403.02 mo
369.386 403.02 li
369.386 395.176 li
368.602 395.176 li
cp
f
369.386 403.02 mo
370.17 403.02 li
370.17 395.176 li
369.386 395.176 li
cp
f
370.17 403.02 mo
370.954 403.02 li
370.954 389.685 li
370.17 389.685 li
cp
f
370.954 403.02 mo
371.737 403.02 li
371.737 399.884 li
370.954 399.884 li
cp
f
371.737 403.02 mo
372.521 403.02 li
372.521 395.176 li
371.737 395.176 li
cp
f
372.521 403.02 mo
373.305 403.02 li
373.305 398.313 li
372.521 398.313 li
cp
f
373.305 403.02 mo
374.089 403.02 li
374.089 401.451 li
373.305 401.451 li
cp
f
374.089 403.02 mo
374.873 403.02 li
374.873 366.938 li
374.089 366.938 li
cp
f
374.873 403.02 mo
375.657 403.02 li
375.657 400.667 li
374.873 400.667 li
cp
f
375.657 403.02 mo
376.441 403.02 li
376.441 396.745 li
375.657 396.745 li
cp
f
376.441 403.02 mo
377.225 403.02 li
377.225 396.745 li
376.441 396.745 li
cp
f
377.225 403.02 mo
378.008 403.02 li
378.008 385.763 li
377.225 385.763 li
cp
f
378.009 403.02 mo
378.792 403.02 li
378.792 385.763 li
378.009 385.763 li
cp
f
378.792 403.02 mo
379.576 403.02 li
379.576 392.04 li
378.792 392.04 li
cp
f
379.576 403.02 mo
380.36 403.02 li
380.36 391.254 li
379.576 391.254 li
cp
f
380.36 403.02 mo
381.144 403.02 li
381.144 391.254 li
380.36 391.254 li
cp
f
381.144 403.02 mo
381.928 403.02 li
381.928 395.962 li
381.144 395.962 li
cp
f
381.928 403.02 mo
382.712 403.02 li
382.712 395.962 li
381.928 395.962 li
cp
f
382.712 403.02 mo
383.496 403.02 li
383.496 398.313 li
382.712 398.313 li
cp
f
383.496 403.02 mo
384.279 403.02 li
384.279 399.098 li
383.496 399.098 li
cp
f
384.279 403.02 mo
385.063 403.02 li
385.063 395.962 li
384.279 395.962 li
cp
f
385.063 403.02 mo
385.847 403.02 li
385.847 398.313 li
385.063 398.313 li
cp
f
385.847 403.02 mo
386.631 403.02 li
386.631 387.332 li
385.847 387.332 li
cp
f
386.631 403.02 mo
387.415 403.02 li
387.415 388.901 li
386.631 388.901 li
cp
f
387.415 403.02 mo
388.199 403.02 li
388.199 399.884 li
387.415 399.884 li
cp
f
388.199 403.02 mo
388.983 403.02 li
388.983 384.979 li
388.199 384.979 li
cp
f
388.983 403.02 mo
389.767 403.02 li
389.767 389.685 li
388.983 389.685 li
cp
f
389.767 403.02 mo
390.55 403.02 li
390.55 400.667 li
389.767 400.667 li
cp
f
390.55 403.02 mo
391.334 403.02 li
391.334 399.098 li
390.55 399.098 li
cp
f
391.334 403.02 mo
392.118 403.02 li
392.118 401.451 li
391.334 401.451 li
cp
f
392.118 403.02 mo
392.902 403.02 li
392.902 399.884 li
392.118 399.884 li
cp
f
392.902 403.02 mo
393.686 403.02 li
393.686 399.884 li
392.902 399.884 li
cp
f
393.686 403.02 mo
394.47 403.02 li
394.47 399.098 li
393.686 399.098 li
cp
f
394.47 403.02 mo
395.254 403.02 li
395.254 399.098 li
394.47 399.098 li
cp
f
395.254 403.02 mo
396.037 403.02 li
396.037 396.745 li
395.254 396.745 li
cp
f
396.038 403.02 mo
396.821 403.02 li
396.821 391.254 li
396.038 391.254 li
cp
f
396.821 403.02 mo
397.605 403.02 li
397.605 387.332 li
396.821 387.332 li
cp
f
397.605 403.02 mo
398.389 403.02 li
398.389 387.332 li
397.605 387.332 li
cp
f
398.389 403.02 mo
399.173 403.02 li
399.173 392.823 li
398.389 392.823 li
cp
f
399.173 403.02 mo
399.957 403.02 li
399.957 393.607 li
399.173 393.607 li
cp
f
399.957 403.02 mo
400.741 403.02 li
400.741 392.823 li
399.957 392.823 li
cp
f
400.741 403.02 mo
401.525 403.02 li
401.525 401.451 li
400.741 401.451 li
cp
f
401.525 403.02 mo
402.308 403.02 li
402.308 400.667 li
401.525 400.667 li
cp
f
402.309 403.02 mo
403.092 403.02 li
403.092 395.962 li
402.309 395.962 li
cp
f
403.876 403.02 mo
404.66 403.02 li
404.66 397.529 li
403.876 397.529 li
cp
f
404.66 403.02 mo
405.444 403.02 li
405.444 398.313 li
404.66 398.313 li
cp
f
405.444 403.02 mo
406.228 403.02 li
406.228 401.451 li
405.444 401.451 li
cp
f
406.228 403.02 mo
407.012 403.02 li
407.012 386.548 li
406.228 386.548 li
cp
f
407.012 403.02 mo
407.796 403.02 li
407.796 378.704 li
407.012 378.704 li
cp
f
407.796 403.02 mo
408.579 403.02 li
408.579 398.313 li
407.796 398.313 li
cp
f
408.579 403.02 mo
409.363 403.02 li
409.363 398.313 li
408.579 398.313 li
cp
f
409.363 403.02 mo
410.147 403.02 li
410.147 395.962 li
409.363 395.962 li
cp
f
410.147 403.02 mo
410.931 403.02 li
410.931 386.548 li
410.147 386.548 li
cp
f
410.931 403.02 mo
411.715 403.02 li
411.715 399.098 li
410.931 399.098 li
cp
f
411.715 403.02 mo
412.499 403.02 li
412.499 392.04 li
411.715 392.04 li
cp
f
412.499 403.02 mo
413.283 403.02 li
413.283 392.04 li
412.499 392.04 li
cp
f
413.283 403.02 mo
414.067 403.02 li
414.067 399.098 li
413.283 399.098 li
cp
f
414.066 403.02 mo
414.85 403.02 li
414.85 401.451 li
414.066 401.451 li
cp
f
414.85 403.02 mo
415.634 403.02 li
415.634 381.057 li
414.85 381.057 li
cp
f
415.634 403.02 mo
416.418 403.02 li
416.418 384.979 li
415.634 384.979 li
cp
f
416.418 403.02 mo
417.202 403.02 li
417.202 399.098 li
416.418 399.098 li
cp
f
417.202 403.02 mo
417.986 403.02 li
417.986 386.548 li
417.202 386.548 li
cp
f
417.986 403.02 mo
418.77 403.02 li
418.77 398.313 li
417.986 398.313 li
cp
f
418.77 403.02 mo
419.554 403.02 li
419.554 401.451 li
418.77 401.451 li
cp
f
419.554 403.02 mo
420.337 403.02 li
420.337 401.451 li
419.554 401.451 li
cp
f
420.337 403.02 mo
421.121 403.02 li
421.121 401.451 li
420.337 401.451 li
cp
f
421.121 403.02 mo
421.904 403.02 li
421.904 401.451 li
421.121 401.451 li
cp
f
422.689 403.02 mo
423.471 403.02 li
423.471 391.254 li
422.689 391.254 li
cp
f
423.471 403.02 mo
424.259 403.02 li
424.259 374.782 li
423.471 374.782 li
cp
f
424.259 403.02 mo
425.041 403.02 li
425.041 395.962 li
424.259 395.962 li
cp
f
425.041 403.02 mo
425.823 403.02 li
425.823 382.626 li
425.041 382.626 li
cp
f
425.823 403.02 mo
426.608 403.02 li
426.608 384.979 li
425.823 384.979 li
cp
f
426.608 403.02 mo
427.391 403.02 li
427.391 397.529 li
426.608 397.529 li
cp
f
427.391 403.02 mo
428.178 403.02 li
428.178 397.529 li
427.391 397.529 li
cp
f
428.178 403.02 mo
428.96 403.02 li
428.96 381.841 li
428.178 381.841 li
cp
f
428.96 403.02 mo
429.742 403.02 li
429.742 381.841 li
428.96 381.841 li
cp
f
429.742 403.02 mo
430.528 403.02 li
430.528 399.884 li
429.742 399.884 li
cp
f
430.528 403.02 mo
431.31 403.02 li
431.31 395.962 li
430.528 395.962 li
cp
f
431.31 403.02 mo
432.097 403.02 li
432.097 392.823 li
431.31 392.823 li
cp
f
432.097 403.02 mo
432.879 403.02 li
432.879 373.997 li
432.097 373.997 li
cp
0 0 0 1 cmyk
f
432.879 403.02 mo
433.662 403.02 li
433.662 373.997 li
432.879 373.997 li
cp
f
433.662 403.02 mo
434.447 403.02 li
434.447 400.667 li
433.662 400.667 li
cp
.875 .247 1 .133 cmyk
f
434.447 403.02 mo
435.229 403.02 li
435.229 400.667 li
434.447 400.667 li
cp
f
435.229 403.02 mo
436.017 403.02 li
436.017 400.667 li
435.229 400.667 li
cp
f
436.799 403.02 mo
437.581 403.02 li
437.581 397.529 li
436.799 397.529 li
cp
f
437.581 403.02 mo
438.367 403.02 li
438.367 397.529 li
437.581 397.529 li
cp
f
438.366 403.02 mo
439.149 403.02 li
439.149 391.254 li
438.366 391.254 li
cp
f
439.149 403.02 mo
439.936 403.02 li
439.936 391.254 li
439.149 391.254 li
cp
f
439.936 403.02 mo
440.718 403.02 li
440.718 396.745 li
439.936 396.745 li
cp
f
440.718 403.02 mo
441.5 403.02 li
441.5 399.098 li
440.718 399.098 li
cp
f
441.5 403.02 mo
442.286 403.02 li
442.286 337.133 li
441.5 337.133 li
cp
f
442.286 403.02 mo
443.068 403.02 li
443.068 399.884 li
442.286 399.884 li
cp
f
443.068 403.02 mo
443.855 403.02 li
443.855 381.841 li
443.068 381.841 li
cp
f
443.855 403.02 mo
444.638 403.02 li
444.638 381.057 li
443.855 381.057 li
cp
f
444.638 403.02 mo
445.42 403.02 li
445.42 392.04 li
444.638 392.04 li
cp
f
445.42 403.02 mo
446.205 403.02 li
446.205 399.098 li
445.42 399.098 li
cp
f
446.205 403.02 mo
446.987 403.02 li
446.987 389.685 li
446.205 389.685 li
cp
f
446.987 403.02 mo
447.775 403.02 li
447.775 391.254 li
446.987 391.254 li
cp
f
447.775 403.02 mo
448.557 403.02 li
448.557 397.529 li
447.775 397.529 li
cp
f
448.557 403.02 mo
449.339 403.02 li
449.339 397.529 li
448.557 397.529 li
cp
f
449.339 403.02 mo
450.125 403.02 li
450.125 400.667 li
449.339 400.667 li
cp
f
450.125 403.02 mo
450.907 403.02 li
450.907 399.098 li
450.125 399.098 li
cp
f
450.907 403.02 mo
451.694 403.02 li
451.694 399.884 li
450.907 399.884 li
cp
f
451.694 403.02 mo
452.476 403.02 li
452.476 391.254 li
451.694 391.254 li
cp
f
452.476 403.02 mo
453.258 403.02 li
453.258 396.745 li
452.476 396.745 li
cp
f
453.258 403.02 mo
454.044 403.02 li
454.044 399.884 li
453.258 399.884 li
cp
f
454.044 403.02 mo
454.826 403.02 li
454.826 399.884 li
454.044 399.884 li
cp
f
456.396 403.02 mo
457.178 403.02 li
457.178 400.667 li
456.396 400.667 li
cp
f
457.963 403.02 mo
458.745 403.02 li
458.745 399.884 li
457.963 399.884 li
cp
f
458.745 403.02 mo
459.533 403.02 li
459.533 371.644 li
458.745 371.644 li
cp
f
460.315 403.02 mo
461.097 403.02 li
461.097 400.667 li
460.315 400.667 li
cp
f
461.097 403.02 mo
461.883 403.02 li
461.883 399.098 li
461.097 399.098 li
cp
f
461.883 403.02 mo
462.665 403.02 li
462.665 398.313 li
461.883 398.313 li
cp
f
462.665 403.02 mo
463.452 403.02 li
463.452 395.962 li
462.665 395.962 li
cp
f
463.452 403.02 mo
464.234 403.02 li
464.234 399.884 li
463.452 399.884 li
cp
f
464.234 403.02 mo
465.016 403.02 li
465.016 398.313 li
464.234 398.313 li
cp
f
465.016 403.02 mo
465.802 403.02 li
465.802 401.451 li
465.016 401.451 li
cp
f
465.802 403.02 mo
466.584 403.02 li
466.584 401.451 li
465.802 401.451 li
cp
f
466.584 403.02 mo
467.371 403.02 li
467.371 399.884 li
466.584 399.884 li
cp
f
482.262 403.02 mo
483.049 403.02 li
483.049 401.451 li
482.262 401.451 li
cp
f
483.049 403.02 mo
483.831 403.02 li
483.831 401.451 li
483.049 401.451 li
cp
f
490.1 403.02 mo
490.888 403.02 li
490.888 400.667 li
490.1 400.667 li
cp
f
490.888 403.02 mo
491.67 403.02 li
491.67 400.667 li
490.888 400.667 li
cp
f
491.67 403.02 mo
492.452 403.02 li
492.452 400.667 li
491.67 400.667 li
cp
f
492.452 403.02 mo
493.238 403.02 li
493.238 400.667 li
492.452 400.667 li
cp
f
504.21 403.02 mo
504.996 403.02 li
504.996 401.451 li
504.21 401.451 li
cp
f
507.347 403.02 mo
508.129 403.02 li
508.129 399.098 li
507.347 399.098 li
cp
f
508.129 403.02 mo
508.915 403.02 li
508.915 399.098 li
508.129 399.098 li
cp
f
509.697 403.02 mo
510.484 403.02 li
510.484 389.685 li
509.697 389.685 li
cp
f
510.484 403.02 mo
511.267 403.02 li
511.267 389.685 li
510.484 389.685 li
cp
f
511.267 403.02 mo
512.049 403.02 li
512.049 378.704 li
511.267 378.704 li
cp
f
512.049 403.02 mo
512.834 403.02 li
512.834 392.823 li
512.049 392.823 li
cp
f
512.834 403.02 mo
513.616 403.02 li
513.616 399.098 li
512.834 399.098 li
cp
f
513.616 403.02 mo
514.404 403.02 li
514.404 394.391 li
513.616 394.391 li
cp
f
514.404 403.02 mo
515.186 403.02 li
515.186 394.391 li
514.404 394.391 li
cp
f
515.186 403.02 mo
515.968 403.02 li
515.968 399.884 li
515.186 399.884 li
cp
f
515.968 403.02 mo
516.754 403.02 li
516.754 393.607 li
515.968 393.607 li
cp
f
516.754 403.02 mo
517.536 403.02 li
517.536 358.31 li
516.754 358.31 li
cp
f
517.536 403.02 mo
518.323 403.02 li
518.323 357.525 li
517.536 357.525 li
cp
f
518.323 403.02 mo
519.105 403.02 li
519.105 396.745 li
518.323 396.745 li
cp
f
519.105 403.02 mo
519.887 403.02 li
519.887 396.745 li
519.105 396.745 li
cp
f
519.887 403.02 mo
520.673 403.02 li
520.673 399.098 li
519.887 399.098 li
cp
f
520.673 403.02 mo
521.455 403.02 li
521.455 399.098 li
520.673 399.098 li
cp
f
521.455 403.02 mo
522.242 403.02 li
522.242 399.098 li
521.455 399.098 li
cp
f
522.242 403.02 mo
523.025 403.02 li
523.025 401.451 li
522.242 401.451 li
cp
f
523.025 403.02 mo
523.807 403.02 li
523.807 396.745 li
523.025 396.745 li
cp
f
523.807 403.02 mo
524.592 403.02 li
524.592 394.391 li
523.807 394.391 li
cp
f
524.592 403.02 mo
525.374 403.02 li
525.374 372.43 li
524.592 372.43 li
cp
0 0 0 1 cmyk
f
525.375 403.02 mo
526.162 403.02 li
526.162 372.43 li
525.375 372.43 li
cp
f
526.162 403.02 mo
526.944 403.02 li
526.944 388.118 li
526.162 388.118 li
cp
.875 .247 1 .133 cmyk
f
526.944 403.02 mo
527.726 403.02 li
527.726 398.313 li
526.944 398.313 li
cp
f
527.726 403.02 mo
528.512 403.02 li
528.512 399.884 li
527.726 399.884 li
cp
f
528.512 403.02 mo
529.294 403.02 li
529.294 388.118 li
528.512 388.118 li
cp
f
529.294 403.02 mo
530.081 403.02 li
530.081 397.529 li
529.294 397.529 li
cp
f
530.081 403.02 mo
530.863 403.02 li
530.863 394.391 li
530.081 394.391 li
cp
f
530.863 403.02 mo
531.645 403.02 li
531.645 387.332 li
530.863 387.332 li
cp
f
531.645 403.02 mo
532.431 403.02 li
532.431 387.332 li
531.645 387.332 li
cp
f
532.431 403.02 mo
533.213 403.02 li
533.213 390.47 li
532.431 390.47 li
cp
f
533.213 403.02 mo
534.001 403.02 li
534.001 390.47 li
533.213 390.47 li
cp
f
534 403.02 mo
534.783 403.02 li
534.783 390.47 li
534 390.47 li
cp
f
534.783 403.02 mo
535.565 403.02 li
535.565 392.04 li
534.783 392.04 li
cp
f
535.565 403.02 mo
536.35 403.02 li
536.35 393.607 li
535.565 393.607 li
cp
f
536.35 403.02 mo
537.133 403.02 li
537.133 393.607 li
536.35 393.607 li
cp
f
537.133 403.02 mo
537.92 403.02 li
537.92 371.644 li
537.133 371.644 li
cp
f
537.92 403.02 mo
538.702 403.02 li
538.702 399.884 li
537.92 399.884 li
cp
f
539.484 403.02 mo
540.27 403.02 li
540.27 395.962 li
539.484 395.962 li
cp
f
540.27 403.02 mo
541.052 403.02 li
541.052 395.962 li
540.27 395.962 li
cp
f
541.052 403.02 mo
541.839 403.02 li
541.839 399.884 li
541.052 399.884 li
cp
f
541.839 403.02 mo
542.621 403.02 li
542.621 400.667 li
541.839 400.667 li
cp
f
542.621 403.02 mo
543.404 403.02 li
543.404 324.581 li
542.621 324.581 li
cp
f
543.404 403.02 mo
544.189 403.02 li
544.189 324.581 li
543.404 324.581 li
cp
f
544.189 403.02 mo
544.971 403.02 li
544.971 400.667 li
544.189 400.667 li
cp
f
544.971 403.02 mo
545.759 403.02 li
545.759 395.962 li
544.971 395.962 li
cp
f
545.759 403.02 mo
546.541 403.02 li
546.541 377.919 li
545.759 377.919 li
cp
f
546.541 403.02 mo
547.323 403.02 li
547.323 388.118 li
546.541 388.118 li
cp
f
547.323 403.02 mo
548.108 403.02 li
548.108 388.118 li
547.323 388.118 li
cp
f
548.109 403.02 mo
548.891 403.02 li
548.891 367.722 li
548.109 367.722 li
cp
f
548.891 403.02 mo
549.678 403.02 li
549.678 397.529 li
548.891 397.529 li
cp
f
549.678 403.02 mo
550.46 403.02 li
550.46 389.685 li
549.678 389.685 li
cp
f
550.46 403.02 mo
551.242 403.02 li
551.242 389.685 li
550.46 389.685 li
cp
f
551.242 403.02 mo
552.028 403.02 li
552.028 401.451 li
551.242 401.451 li
cp
f
552.028 403.02 mo
552.81 403.02 li
552.81 395.176 li
552.028 395.176 li
cp
f
552.81 403.02 mo
553.597 403.02 li
553.597 391.254 li
552.81 391.254 li
cp
f
553.597 403.02 mo
554.379 403.02 li
554.379 392.823 li
553.597 392.823 li
cp
f
554.38 403.02 mo
555.162 403.02 li
555.162 392.823 li
554.38 392.823 li
cp
f
555.162 403.02 mo
555.947 403.02 li
555.947 397.529 li
555.162 397.529 li
cp
f
556.729 403.02 mo
557.517 403.02 li
557.517 399.098 li
556.729 399.098 li
cp
f
557.517 403.02 mo
558.299 403.02 li
558.299 394.391 li
557.517 394.391 li
cp
f
558.299 403.02 mo
559.081 403.02 li
559.081 394.391 li
558.299 394.391 li
cp
f
559.081 403.02 mo
559.866 403.02 li
559.866 396.745 li
559.081 396.745 li
cp
f
559.867 403.02 mo
560.649 403.02 li
560.649 395.962 li
559.867 395.962 li
cp
f
560.649 403.02 mo
561.436 403.02 li
561.436 395.176 li
560.649 395.176 li
cp
f
561.436 403.02 mo
562.218 403.02 li
562.218 395.176 li
561.436 395.176 li
cp
f
562.218 403.02 mo
563 403.02 li
563 400.667 li
562.218 400.667 li
cp
f
563 403.02 mo
563.786 403.02 li
563.786 378.704 li
563 378.704 li
cp
f
564.568 403.02 mo
565.355 403.02 li
565.355 331.641 li
564.568 331.641 li
cp
0 0 0 1 cmyk
f
565.355 403.02 mo
566.138 403.02 li
566.138 331.641 li
565.355 331.641 li
cp
f
566.138 403.02 mo
566.92 403.02 li
566.92 398.313 li
566.138 398.313 li
cp
.875 .247 1 .133 cmyk
f
566.92 403.02 mo
567.705 403.02 li
567.705 399.884 li
566.92 399.884 li
cp
f
567.705 403.02 mo
568.487 403.02 li
568.487 401.451 li
567.705 401.451 li
cp
f
568.487 403.02 mo
569.275 403.02 li
569.275 401.451 li
568.487 401.451 li
cp
f
569.275 403.02 mo
570.057 403.02 li
570.057 401.451 li
569.275 401.451 li
cp
f
570.839 403.02 mo
571.625 403.02 li
571.625 400.667 li
570.839 400.667 li
cp
f
573.976 403.02 mo
574.758 403.02 li
574.758 399.884 li
573.976 399.884 li
cp
f
574.758 403.02 mo
575.544 403.02 li
575.544 399.884 li
574.758 399.884 li
cp
f
575.544 403.02 mo
576.326 403.02 li
576.326 401.451 li
575.544 401.451 li
cp
f
576.326 403.02 mo
577.113 403.02 li
577.113 398.313 li
576.326 398.313 li
cp
f
577.114 403.02 mo
577.896 403.02 li
577.896 401.451 li
577.114 401.451 li
cp
f
577.896 403.02 mo
578.678 403.02 li
578.678 401.451 li
577.896 401.451 li
cp
f
578.678 403.02 mo
579.463 403.02 li
579.463 399.098 li
578.678 399.098 li
cp
f
579.463 403.02 mo
580.245 403.02 li
580.245 399.098 li
579.463 399.098 li
cp
f
580.245 403.02 mo
581.033 403.02 li
581.033 400.667 li
580.245 400.667 li
cp
f
581.033 403.02 mo
581.815 403.02 li
581.815 401.451 li
581.033 401.451 li
cp
f
584.165 403.02 mo
584.952 403.02 li
584.952 401.451 li
584.165 401.451 li
cp
f
584.952 403.02 mo
585.734 403.02 li
585.734 401.451 li
584.952 401.451 li
cp
f
585.734 403.02 mo
586.516 403.02 li
586.516 401.451 li
585.734 401.451 li
cp
f
586.516 403.02 mo
587.302 403.02 li
587.302 397.529 li
586.516 397.529 li
cp
f
587.302 403.02 mo
588.084 403.02 li
588.084 397.529 li
587.302 397.529 li
cp
f
588.084 403.02 mo
588.872 403.02 li
588.872 399.098 li
588.084 399.098 li
cp
f
588.872 403.02 mo
589.654 403.02 li
589.654 397.529 li
588.872 397.529 li
cp
f
589.654 403.02 mo
590.436 403.02 li
590.436 385.763 li
589.654 385.763 li
cp
f
590.436 403.02 mo
591.221 403.02 li
591.221 399.884 li
590.436 399.884 li
cp
f
591.221 403.02 mo
592.003 403.02 li
592.003 399.884 li
591.221 399.884 li
cp
f
592.003 403.02 mo
592.791 403.02 li
592.791 400.667 li
592.003 400.667 li
cp
f
592.791 403.02 mo
593.573 403.02 li
593.573 400.667 li
592.791 400.667 li
cp
f
593.573 403.02 mo
594.355 403.02 li
594.355 400.667 li
593.573 400.667 li
cp
f
594.355 403.02 mo
595.141 403.02 li
595.141 401.451 li
594.355 401.451 li
cp
f
595.141 403.02 mo
595.923 403.02 li
595.923 401.451 li
595.141 401.451 li
cp
f
595.923 403.02 mo
596.71 403.02 li
596.71 400.667 li
595.923 400.667 li
cp
f
596.71 403.02 mo
597.492 403.02 li
597.492 400.667 li
596.71 400.667 li
cp
f
597.492 403.02 mo
598.274 403.02 li
598.274 401.451 li
597.492 401.451 li
cp
f
598.274 403.02 mo
599.06 403.02 li
599.06 400.667 li
598.274 400.667 li
cp
f
599.06 403.02 mo
599.842 403.02 li
599.842 395.962 li
599.06 395.962 li
cp
f
599.842 403.02 mo
600.63 403.02 li
600.63 395.962 li
599.842 395.962 li
cp
f
600.63 403.02 mo
601.412 403.02 li
601.412 400.667 li
600.63 400.667 li
cp
f
602.194 403.02 mo
602.979 403.02 li
602.979 399.884 li
602.194 399.884 li
cp
f
602.979 403.02 mo
603.761 403.02 li
603.761 399.098 li
602.979 399.098 li
cp
f
603.762 403.02 mo
604.549 403.02 li
604.549 400.667 li
603.762 400.667 li
cp
f
604.549 403.02 mo
605.331 403.02 li
605.331 399.098 li
604.549 399.098 li
cp
f
605.331 403.02 mo
606.113 403.02 li
606.113 393.607 li
605.331 393.607 li
cp
f
606.113 403.02 mo
606.899 403.02 li
606.899 396.745 li
606.113 396.745 li
cp
f
606.899 403.02 mo
607.681 403.02 li
607.681 392.823 li
606.899 392.823 li
cp
f
607.681 403.02 mo
608.468 403.02 li
608.468 392.823 li
607.681 392.823 li
cp
f
608.468 403.02 mo
609.25 403.02 li
609.25 399.884 li
608.468 399.884 li
cp
f
609.25 403.02 mo
610.033 403.02 li
610.033 399.884 li
609.25 399.884 li
cp
f
613.17 403.02 mo
613.952 403.02 li
613.952 400.667 li
613.17 400.667 li
cp
f
614.737 403.02 mo
615.52 403.02 li
615.52 399.884 li
614.737 399.884 li
cp
f
615.52 403.02 mo
616.307 403.02 li
616.307 399.884 li
615.52 399.884 li
cp
f
616.307 403.02 mo
617.089 403.02 li
617.089 398.313 li
616.307 398.313 li
cp
f
617.089 403.02 mo
617.871 403.02 li
617.871 398.313 li
617.089 398.313 li
cp
f
617.871 403.02 mo
618.657 403.02 li
618.657 400.667 li
617.871 400.667 li
cp
f
618.657 403.02 mo
619.439 403.02 li
619.439 400.667 li
618.657 400.667 li
cp
f
619.439 403.02 mo
620.226 403.02 li
620.226 400.667 li
619.439 400.667 li
cp
f
620.226 403.02 mo
621.008 403.02 li
621.008 399.884 li
620.226 399.884 li
cp
f
621.008 403.02 mo
621.791 403.02 li
621.791 401.451 li
621.008 401.451 li
cp
f
621.791 403.02 mo
622.576 403.02 li
622.576 401.451 li
621.791 401.451 li
cp
f
627.278 403.02 mo
628.065 403.02 li
628.065 401.451 li
627.278 401.451 li
cp
f
628.065 403.02 mo
628.847 403.02 li
628.847 401.451 li
628.065 401.451 li
cp
f
116.857 434.57 mo
635.919 434.57 li
0 0 0 1 cmyk
gsave
[1.74194 0 0 -1.74308 116.857 434.57 ]ct
@
grestore newpath
144.729 434.57 mo
144.729 416.268 li
gsave
[1.74194 0 0 -1.74308 144.729 434.57 ]ct
@
grestore newpath
408.188 105.388 mo
408.188 96.2372 li
cp
f
408.188 90.0841 mo
411.727 98.7559 li
408.188 96.6974 li
404.648 98.7559 li
cp
f
408.188 105.389 mo
408.188 96.2377 li
gsave
[1.74194 0 0 -1.74308 408.188 105.389 ]ct
@
grestore newpath
408.188 90.0841 mo
411.727 98.7559 li
408.188 96.6974 li
404.648 98.7559 li
cp
f
408.188 272.985 mo
408.188 263.834 li
cp
f
408.188 257.68 mo
411.727 266.352 li
408.188 264.293 li
404.648 266.352 li
cp
f
408.188 272.985 mo
408.188 263.834 li
gsave
[1.74194 0 0 -1.74308 408.188 272.985 ]ct
@
grestore newpath
408.188 257.68 mo
411.727 266.352 li
408.188 264.293 li
404.648 266.352 li
cp
f
261.038 373.912 mo
271.925 385.066 li
f
261.038 373.912 mo
271.925 385.066 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 261.038 373.912 ]ct
@
grestore newpath
272.36 373.912 mo
261.473 385.066 li
0 0 0 1 cmyk
f
272.36 373.912 mo
261.473 385.066 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 272.36 373.912 ]ct
@
grestore newpath
273.972 415.267 mo
284.859 426.421 li
0 0 0 1 cmyk
f
273.972 415.267 mo
284.859 426.421 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 273.972 415.267 ]ct
@
grestore newpath
285.294 415.267 mo
274.407 426.421 li
0 0 0 1 cmyk
f
285.294 415.267 mo
274.407 426.421 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 285.294 415.267 ]ct
@
grestore newpath
426.435 373.912 mo
437.323 385.066 li
0 0 0 1 cmyk
f
426.435 373.912 mo
437.323 385.066 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 426.435 373.912 ]ct
@
grestore newpath
437.758 373.912 mo
426.871 385.066 li
0 0 0 1 cmyk
f
437.758 373.912 mo
426.871 385.066 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 437.758 373.912 ]ct
@
grestore newpath
519.323 374.696 mo
530.21 385.85 li
0 0 0 1 cmyk
f
519.323 374.696 mo
530.21 385.85 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 519.323 374.696 ]ct
@
grestore newpath
530.645 374.696 mo
519.758 385.85 li
0 0 0 1 cmyk
f
530.645 374.696 mo
519.758 385.85 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 530.645 374.696 ]ct
@
grestore newpath
560.476 356.743 mo
571.363 367.897 li
0 0 0 1 cmyk
f
560.476 356.743 mo
571.363 367.897 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 560.476 356.743 ]ct
@
grestore newpath
571.799 356.743 mo
560.911 367.897 li
0 0 0 1 cmyk
f
571.799 356.743 mo
560.911 367.897 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 571.799 356.743 ]ct
@
grestore newpath
222.438 386.489 mo
233.326 397.643 li
0 0 0 1 cmyk
f
222.438 386.489 mo
233.326 397.643 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 222.438 386.489 ]ct
@
grestore newpath
233.761 386.489 mo
222.874 397.643 li
0 0 0 1 cmyk
f
233.761 386.489 mo
222.874 397.643 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 233.761 386.489 ]ct
@
grestore newpath
306.893 364.498 mo
317.78 375.652 li
0 0 0 1 cmyk
f
306.893 364.498 mo
317.78 375.652 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 306.893 364.498 ]ct
@
grestore newpath
318.216 364.498 mo
307.329 375.652 li
0 0 0 1 cmyk
f
318.216 364.498 mo
307.329 375.652 li
0 1 1 0 cmyk
gsave
[1.74194 0 0 -1.74308 318.216 364.498 ]ct
@
grestore newpath
144.729 416.268 mo
137.818 409.353 li
151.639 409.353 li
144.729 416.268 li
0 0 0 1 cmyk
gsave
[1.74194 0 0 -1.74308 144.729 416.268 ]ct
@
grestore newpath
grestore
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: LWYAAA+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FUUEHM+HelveticaNeue gcheck setglobal} if
1 816 5 <0002004e0000026202ca000800130089b800152fba0001000900032bb800
0110b8001510b80010dcb80005dc410500da000500ea000500025d411b00
090005001900050029000500390005004900050059000500690005007900
05008900050099000500a9000500b9000500c90005000d5db8000110b800
0bd000b8000a2fba0009000100032bb8000910ba0000000c00032bb80000
1030311311333216151406270111331133163635342623adba514b4b51fe
e75fda6c6f6f6c0174010643404044010156fd360124017064646f00>FUUEHM+HelveticaNeue AddT42Char 
FUUEHM+HelveticaNeue /CharStrings get begin
/P 5 def
end
FUUEHM+HelveticaNeue /Encoding get
dup 80 /P put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FUUEHM+HelveticaNeue*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /.notdef /two 18{/.notdef}rp /E 10{/.notdef}rp /P 16{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i /.notdef /k /.notdef /m /n /o /p /.notdef /r /s /t /u /v 89{/.notdef}rp /endash 14{/.notdef}rp /fl 32{/.notdef}rp]FUUEHM+HelveticaNeue nfFUUEHM+HelveticaNeue*1 [12 0 0 -12 0 0 ]msf351.914 247.664 mo(Precursor transcript)[7.77594 3.77991 6.44403 6.44403 6.672 3.99591 6 6.88806 3.99591 3.336 3.78003 3.99591 6.44403 6.672 6 6.44403 3.99591 2.664 7.11606 0 ]xshFUUEHN+HelveticaNeue*1 [12 0 0 -12 0 0 ]msf458.138 247.664 mo(!)sh%ADOBeginSubsetFont: DLGQMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FUUEHO+Calibri gcheck setglobal} if
1 8526 30 <00010029fffa034b03bc002f0086b90031ffc040110b014d2f080b014d2e
100b014d3b2e0118b8fff0b60b014d34180117b8fff8b30b014d16b8fff0
b60b014d34160109b8fff0402a0b014d00080b014d3c0001382301360b01
0b2010014d0b200c014d0b0b31302949230b111d49114c054c003f3f3f12
39393f111201392f2b2b3130005d5d015d2b2b5d2b2b5d2b5d2b2b2b2516
14060623222e022703030e0323222626363701012626363633321e021713
133e033332161606070103430813271f1e23150b04d8d7040b15221c1d25
1101090118fef708011327201d23140a04cdd0040a111f1b1d25120209fe
f92c0e130c0503070b070165fe9b070b0703050c130e01b701a70e130d04
03060a07feb1014f060a0703040b140ffe5e>FUUEHO+Calibri AddT42Char 
1 9088 33 <00020085fff60357055e003400480026400e24241f0914b305053009443a
4d1fb80101b13046003fed3fddce11392fed1112392f313001140e020707
140623222e023503263e023333323e0235342e0223220e0223222e023534
3e0433321e0201140e0223222e0235343e0233321e020357325a7e4d0723
27151e1208060109121c1216415c391a204061423a5740290a070b080406
14395161346b9a6430fec40918291e20281909091928201e29180903df58
88603605f10f0f03070c080115171d130729445c32395f4526191e180611
1d161819131f1a123d688cfc3b212b1b0b0b1b2b21212d190b0b192d>FUUEHO+Calibri AddT42Char 
FUUEHO+Calibri /CharStrings get begin
/g30 30 def
/g33 33 def
end
FUUEHO+Calibri /Encoding get
dup 77 /g30 put
dup 78 /g33 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FUUEHO+Calibri*1 [33{/.notdef}rp /g2 /g11 /g9 /g22 /g25 /g12 /g1 /g13 /g23 /g21 /g19 /g36 /g3 /g20 /g10 /g17 /g5 /g34 /g29 /g16 /g8 /g18 /g37 /g4 /g24 /g7 /g6 /g38 /g14 /g26 /g28 /g31 /g15 /g45 /g43 /g48 /g35 /g44 /g49 /g39 /g47 /g40 /g50 /g46 /g30 /g33 177{/.notdef}rp]FUUEHO+Calibri nfFUUEHO+Calibri*1 [18 0 0 -18 0 0 ]msf158.356 473.081 mo(8*'$\)&/?\)9*\)'%\)#.9/\)4$%9'&M49%'#9'#'/*.>=?*?9'$4&/&'*\(':;!N')[11.0737 9.49127 4.06976 9.45708 6.27478 8.95683 7.61227 9.45709 6.27478 7.03992 9.49127 6.27478 4.06976 6.03012 6.27478 8.62207 9.45709 7.03992 7.61227 6.27478 4.13107 9.45709 6.03012 7.03992 4.06976 8.95682 7.79578 4.13107 7.03992 6.03012 4.06976 8.62207 7.03995 4.06976 8.62207 4.06976 7.61224 9.4913 9.45706 10.0279 8.47247 9.45709 9.49127 9.45709 7.03992 4.06973 9.45712 4.13104 8.95682 7.61224 8.95685 4.06976 9.49121 5.49347 4.06976 9.77399 11.619 10.4147 8.34119 0 ]xsh2 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
200.906 292.487 mo
628.8 292.487 li
@
200.906 275.467 mo
200.906 313.741 li
@
630 273.873 mo
630 312.146 li
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
/FUUEHM+HelveticaNeue*1 uf/FUUEHM+HelveticaNeue uf/LWYAAA+HelveticaNeue uf/FUUEHP+Calibri-Italic*1 uf/FUUEHP+Calibri-Italic uf/UPEAAA+Calibri-Italic uf/FUUEHO+Calibri*1 uf/FUUEHO+Calibri uf/DLGQMX+Calibri uf/FUUEHN+HelveticaNeue*1 uf/FUUEHN+HelveticaNeue uf/JIWAAA+HelveticaNeue ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
