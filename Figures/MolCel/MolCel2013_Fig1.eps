%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: MolCel2013_Fig1.pdf
%%Creator: Adobe Acrobat 10.1.9
%%For: royc
%%CreationDate: 2014-04-5, 9:15 PM
%%BoundingBox: 0 0 319 443
%%HiResBoundingBox: 0 0 318.4060 443
%%CropBox: 0 0 318.4060 443
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 53278 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:MetadataDate="2014-03-28T06:06:18-04:00"
   xmp:ModifyDate="2014-03-28T06:06:18-04:00"
   xmp:CreateDate="2014-03-28T06:06:18-04:00"
   xmp:CreatorTool="Adobe Illustrator CS5.1"
   xmpMM:InstanceID="uuid:40af8a17-104e-de4d-856b-d195053cc4bc"
   xmpMM:DocumentID="xmp.did:F77F1174072068118C14A856FF5F266D"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 9.90">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">MolCel2013_Fig1</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="152"
      xmpGImg:height="256"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACYAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYqpXXr/V&#xA;Zvq9BccG9Encc6HjWvvirzHRNI8+zaBb6NqB1RLr69byNrclwIpfq/BRc+osd1PvVHVFB4bq3HsS&#xA;qO8ieWPN41JNQ8w6lqQbT5ZTHBJPxhumnj4SCWBZrlGjhbeEgr1rx2GKpXq8v59PqeoW9pa2z6fb&#xA;3Bk0q55pGZlinDRLKEdSFkjmUP8A8Ym2+KmKony/P+b8fmqBbi2ml8u3NyzzzXxthOkXpUbmkLsq&#xA;AFV9MRnqW5DFUTep+ZN75X1WG5WeO9a9h+omD045P0d6isSfq89tIZioIlVJ4/8AJbxVV7Tyv5ys&#xA;/JiImrahL5jvrrSpbx57hJzbKlzbi8ENeMfD0lkZ0FVbcCo2wKxO+1r80UuU0CSS6i1TU4HlRYVi&#xA;ajtbTs7eqXLRKk0UQThRRyIPUYVeseWf05+iQutnnfx3F3H6tEUyQR3UiW0pWP4A0lusbmlNz0HT&#xA;AqaYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqx/RPO+jaz5i1jQbT1PrmilBO7qBHJyLK3pMCeXpuhR&#xA;6gUOKsgxV2KuxV2KuxV2KpHrGp+YrXWbOCx0/wCt6fcems8ygfuWM6LI7sZF+FYC5ACE8qYqkn+J&#xA;PzJe1BPlhIbmSd14i4SQRQJBzDHdfUZ5fgFOI/iVQ+v+cvPthO2pWPl83nl8JAFtnSSPUPUnDAsV&#xA;VpBwjIXkOHIV9icVTO38x+d5tVW3Plj0bD6ykL3kl0tfQbnynVAtTw4D4TQnlgVPtCuNSudItZ9T&#xA;gFtqDpW5gUUCuDQ0HJ9u4+I4qjsVdirsVdirsVdirsVYd5b/ACt8v+XtZh1iwnu/r6pdR3ckkxdb&#xA;n63KJnaVCOClZF5D0wvvXFWY4q7FXYqwLzDqP5hprrHSNLTUNMVArAzvbMJPrXpkfDIvSE+pUr94&#xA;pQqpJqP5kP8AVCfL3pCa5EdwDeyExQrOFZzSb9qE1BFaEdD0xVRn1z8yEmvY4vKjytBJS2UahKEl&#xA;hMjKH9YuF5cV+xSvxV2puqsh1b80Pr1nJP5aK6dI3G9Vb1zLEKIeYAmbnuGSgFd+XahVRl5q3ng6&#xA;s0Gn+X5n00ShfrU11LG/D0uf2TKK1b4ajYe+Kqllf+f5dReK58vGC1ikkUSDUHYTIAODK/P4NzXd&#xA;DXptSuKofTNS/Mq5ubVb3y59RgkqZ3+vPKVoj7ECZacmVWrvSvHc74qlqX/51rbweroNrLczR8nM&#xA;d3MkcciSBmRg9wzUeL4VIr8fXbFUfqGpfmZb6tP9U8ufW9OYwi3X6+6OoZT6hZzJuQw7L7bU5Oqi&#xA;W1Pzw+lzz2uhPJe+hA8NvLdTw0kkH7yoZ/i4mvwcgduu4OKpPDqP50K5W58vwMOcv7yG7l48YJIz&#xA;9lrktSeESCI9eRHIKBuq9B8tXeoXWj20uoJ6d2Y4/WQgrxkMatInxEn4JCyfRvvgVNMVdirsVdir&#xA;sVdirD/zK/MGXyTYWV6NIm1ZL64FnGlu4RluJKeirVB2kow5eNBTfZVN2j1mcLJcaRp7SlRy5XLu&#xA;R7cja9sVW/U9R/6s2m/8j2/7JcVd9T1H/qzab/yPb/slxV31PUf+rNpv/I9v+yXFXfU9R/6s2m/8&#xA;j2/7JcVULvTNXm9H0tL06L05Vkelw/xKtarta98Kq/1PUf8Aqzab/wAj2/7JcCu+p6j/ANWbTf8A&#xA;ke3/AGS4q76nqP8A1ZtN/wCR7f8AZLirvqeo/wDVm03/AJHt/wBkuKu+p6j/ANWbTf8Ake3/AGS4&#xA;qx7zN+Ymq+Wdd0PRJ/L31g69J9W0+WzueUaSqQCsvOGPgqqwaorsDttirPMVdirsVdirHfNr+YhZ&#xA;3R8vwpdasgsxa280kkcNJbnhO7+nJEfgh5N17d+hVYvHq/5pnjI3lcUEqwtB+kHUlWWpn5eo4VV/&#xA;l3Pb3wqsurr8wby2tWufKCTj1Gm+rtqDM0U9s/OBgxk40YgMHHSnQ8tlUXNqv5hRtFKvl1pIXtbW&#xA;WSJL5yyzPLS5XmZVHwRkUXj135HpirWh6t+Yd7c28epeXf0fbtLALi5W/eaiOKygKJQQV8d/Cm+K&#xA;p5f+fPLOh+XhqOoahHIlrFGbtYnWaZa8VdjGG5txrVqAnrtgVEaD5h8v+ale+0bUVv8AT1jj4yW0&#xA;rqFdi/IOFKsGoF+FtxiqQXl1+Y1vqOoxwaIt3ZI5/RkgvZI2kQiQASVl+Egop6bhgNjWhVT1HXPP&#xA;dvMtta+Wpbq5W0juGUXsyxvIZljeMTFvTQ8eRCkk03PShVbTUPzJMTlvLoEsR2X6/JSRRX7J9X4S&#xA;23XpirJPLS6lfaRFc6zZS6bqDNIstmt3LKFCuVU81ehqorgVNrCR5bG3kkPKR4kZ22FSVBJ22xVi&#xA;/mi783RahD+gtPGpRmYpdxvO8AVAkBAVxKipVXkapRqkBdq1wqgP0j+YXp2jr5c5NOievGdQkUxv&#xA;xUtyb1D8JLGmxpSm9cVU5ZfOF3DYXk/lUNfW+oKYbd9QZ2hge3lR50lLAB1DhWoP2inbliqFXXPz&#xA;QJt2/wAKFYpYg0pOoOXjkC/EOIm+IVBYbjag64qjrbUvPknmRLKXQjDpRaF5bs3kzUglBDFGV+LO&#xA;jjdadDXw5Ks3093ksLZ3PJ3iRmY9yVBJwKr4qkPmTQl1cPbzrcfV2ETc7V40blGZPhbmRt+8BxVi&#xA;M35VSPyVNU1fg0iSkyyQSOSpjDqzeooKMkVONOu5rSmG1SPzhZaB5HTT59T1LWbfTbo6jAaol0Zb&#xA;i9idUQNFIvAokjemvA1CKKjj8SrIP+VYWUjJPbi/sEnuGvb2zh+qxxSPL6jMpjWQgcTKAtS3ELTv&#xA;XFW4Pyrs7W+sbq2uNUCWNzbXa28ssMsbvbO7Dlyk5HkJSta7bfLFWaTaJYanoUWl6varcWrRxC4t&#xA;JaMjGPi3FwDxYcl3G4OBW/qMdoHgs7Ux2jwLDHHaiOIR8S5PFSUC/wB5tTFWEyflYgRUttR1mGMO&#xA;7NG01vIhWRo2ZACwpT0Rx8MNqxnzppeg+VbC1ttV1TWbfUtUZYrO9REnjlljVUa3EUUtR6teXFno&#xA;z1ap3GKss1H8txf6lHqDalr1vICrNDHdwhKqxYUHNuNK02xVOPKflhPLZvTbi+uVvWiYxTvAY4zE&#xA;nD90iuAvLq2Ksls4WhtIIWILRRqjEdKqoBpgVIPMfl+XVwIWkvbZIb2K9jnsZIo2f04gnpsXavEm&#xA;vbsMVYyn5TwBIEfUtddISpKG6h4uEhiio45bj9wDhVI9ctvK/lHzZoUdzda1Bf3kyfo61iCPHdkO&#xA;itAGhdfiZxFz5mhWnzVVP0/KbRxGPhv4Z2+q/WJbZraD1TawCAcwGNeYXkak7k774qivLn5fyaFq&#xA;VncxXeo3dtYqqwW1y8LEt6MkMkjuJVDNL6iljx/YX3qqzexieKyt4nFHjjRWHXcKAcCq2KsZ86+Y&#xA;NV0ewludPs5r2SERkwwAFqSepUt8Epp+7Cii9W32xVIo/wAwdWe7eA6DraIkrwmdoYuBaNqchSI/&#xA;CQRQ+NR2rhVCanrja8jWGr+WtZlOncdUhUxQGNrizkV41RjGnI1NCKeIod8VVr78zL2xKrd6Tq0T&#xA;mMSn91Hw4j1SwD+jxJVYgx6dfbFWz+ZF/Dc2sV3pep28N7cLbW9w6xBGdn4D7UK1Dirx/wAy+G9F&#xA;XoNlK81nBK/25I0dqeLKCcCsT84ectT0XXbSxg0q8vrSa1kuJprEI0ishosaxvG4keT9kcl+nsVQ&#xA;8PnbVJHuf9w+smK3geZXSGE+qyMwEaBo1qSq779dhXriqSah5lj8xW9rPd+Wtbmk0maPUrSOe3iQ&#xA;ieIgI0R9I8uIkPhvQU7hVNbj8wbtVv8A6npuq336OuZbaZ4YoSjCKYwepG/pEOoZfjputG2NKFVZ&#xA;D5/1uSC5k/QWshoTIY4zFGDIiMoqtYRuQxNPkN9yFWT2fnLy7PqVrow1CCTXLiL1msIW9SRAq8na&#xA;RU5eko6Vem+3XAqU+bPNWs6RqEaWun3l/bMziT6miuy8I42CKDHJV29QncgUHzIKoBPP2sPZQ3K6&#xA;HrPK4HKOExRBwvNU5ODD8IqWr7U8dlUt8weYPrTWWpXflzV7rUtFu0bTk9GMhZrizkJcMsTVRSeB&#xA;+HY8W6igVV4PzO1O4tTPa6Jq9y0c7WtxHEkLNFMkRlZZAIfh+yV/1uIP2tlUZb+fNYmMX+4TWIke&#xA;4ht5DLFEpj9ZUYuw9E/AoZqn2HSuyrOrKV5rOCV/tyRo7U8WUE4FVsVQjyCC9kldXKSRRqpRHk3R&#xA;nLV4BqfbHXFWKeZdF8w6nqpu9L1+70iEJGqpHbTyglS/IGMhU7g8up6dhhVj+syzeWtS0+91vzvL&#xA;aWfpTxRJexXESM/EsX3rHK6cwAr703H2aYqi7fy152lleaTzleT2E45RQtp8sLhGcOtWQIykL7Dw&#xA;O22Ksw8ufW9O0S0stUvLjU7+BCs9+1tKhlPIkEqFPQEDAqR65a2mnW9mthbJBq13aTWs/oxqr8bi&#xA;IIryMB1N2IVBO+5p3wqyCKwstMeeGxtxZxSwRrG1tAWAdeY5ERruQCvXrgVh0nlnz2iKlv5uuZE5&#xA;vzE1lOGEbtGVAddyUEbUr1qR3wqkfmSbXNCs4m1Lz0dP1O4WsMN1FcRQSBFVZUSQozM3JjIOKcvi&#xA;4gBaUVZNeaH5zn1Nbu3813UNoTGxs/0e9BwlDkA8QfiQcTyHzxVMfJ2m6zozX36W1m61iO5ZHtY5&#xA;LacfV6Fi6qzB2YMWHU9sCus/yy8lJqVrrh0a3h1dIfTuZERVWXmgDiaMfu5Dyo3IitR1xVOrGOy0&#xA;2S6ghtTbxNKHRIIH4GsSAkemvHquKu1W4e50y8t7SSa2u5oJI7e4EE/7uR0IR9k/ZY1xV5K1ndeX&#xA;UuNF138wLm2utYSAWxmS8e6jVJFHGzaWvqM7qVOxb4vcYVeh+UtOvtGWeO9v7vUI3VfTaZbyZ+fq&#xA;zSMxMwcj4JY46BuiV70wKyH9IQfyTf8AIib/AJoxVdp6MlhbI4KusSBlPUEKARiqviqQ+afMh0Kz&#xA;uL115Q26w1RYzIzNPIY1/bQKARvirG7f84fLU8UsqXjenbtHHO/1OUhHlYKq/DKa9SfhrsDSu1TS&#xA;pZ501vyT5mNno+t3B42d/BeWzGzlCtJbuCw/vCeBVijggGh23xVM7L839CvGu1jnZWsYmmug1qRx&#xA;UTpboKifiebSggg0A6kYqmmnef8ATNQ1Y6XbXdbkd2tJQlTIY1WvqdWpy9h9qh2xVJPO3nXQtN1P&#xA;Rkn1BIdRlFrdaxaqpdE0+GVZvXlC1aMRyH4DXoWqGHRVNPMn5m6RouowQSuWsrmyN9b38MaXMLqn&#xA;MsAyTI32VqKLQ+OKoNfzg8tNepZi+/eysRG31STgwBT4g3q0oVkDDuR77Y0qS+ZvMfknzS9s2qSu&#xA;3+Gb9r5T9UYUlsopJmRgZa8WWP7JG5p70VTP/ld3k8NMDqJCwKJJH+ozkcCYhyFJCT/fg/QfpVXR&#xA;/nN5eaV0ad4kjYJLLJaMFVqOzVAmLURImYmlO3UgY0rPNKvVv9Ls75dluoI51BUrtIgb7LfEOvQ4&#xA;FcZLuWWZYGSNYWCHmhcsSivUUdKfapirA/8AlcmiIFW5aa2uGmmtltpLTk5lgZFZQ0VxJGf7wH7X&#xA;TDSpJr/nL8vtfk0PzRd3TS/oC5a7sWFlICS/OE81aTkFV41kFabqvuMVZND+amiSy3cX1pkks4I7&#xA;qYNaSU9OWSOJKMJSpPOZR19+m+Ksg0PXH1q3muLKZCkEphkWSB4zyCLIP92NsySKQffAqb28wnt4&#xA;pgKCVFcA9uQriqpirEfN580HVLZNFu7G2t2Rf0it7QmSMepxWMMCPtbNhVKb+b8xJbL0ba80OG62&#xA;5Tq/wORKh58WWQhvS5D7/wDJoodfS/mE+lTBNX0mLUHWNYHQoRHL9aiJcFxTi0JlG9SDxoCcUoTV&#xA;Lf8AMm40+4ttM1bSbB40H1GSaRJpJByUrHcuIVWiLyX4Y969yORVddN+a0PrG11jSJIm4BQGjE4Q&#xA;MWk4VRY/Ubkd2NOnviqZt+UX5fa1ZRXupaTHJf3sMbX15FJLHJLyjAdTKjq/BhtQEbbdMCpfc+Xd&#xA;S8raidN8mxWVjof1a3MlnPIC/OSeYTNEZy+3p0LV2rTY7glVSxj/ADF9adtQ1bRmirL9Xjg4VAPL&#xA;0wC6fCBRCNz03OKFtkPzAa8V77UNCt4pgzXLwceck5sWhTmGVuSrPxP2q8QRWm2KVK+tfzEm0+K0&#xA;sNW0yzkUSNLeSyxTTktGUjSogSOiuFkrwr9kVNDVQtnt/wAzJNIVLjU9DubyW3EN5COBiJLqJFT1&#xA;I/iR4g1Q37RXsMUvQPLn1r/D2l/Wypu/qkH1gpTj6npLz407csCpN5on81RLOvl65sLW7aYO36R5&#xA;BXT04lHChHg9T7YVY+p/NCOwCfpTQZr5JlpNJ+1E6L6hBUCjc6/s7/diqtNJ54W5eKS60O6010mj&#xA;eKQr6k/+jt6Y40RKNKSWUt3PQYqg4JvzSl/e/XNEtYWijpbSmMz7qodJGiDxcloePE8eVOq4qm9j&#xA;def4taQ3WqaPLo5uAZEjJEwg4PVVoBvy48e/T3xVmWnoyWFsjgq6xIGU9QQoBGBVfFXYq7FUFrNr&#xA;dXNiI7UI06TW8yrKxRD6M6SkFlVyKhP5cVUmufMSqW+o2hoK0F3KT/1DYqkHlf8AMJPNEl1HoqWV&#xA;21nx+scbqccA9QgetqOLNxb4G+IU3AxVkHr+Y/8Alhs/+kuX/smxV3r+Y/8Alhs/+kuX/smxV3r+&#xA;Y/8Alhs/+kuX/smxVA6lLrLTaeLq1t4ofrkVXiuHkau9PhaCMf8ADYqn+KuxV2Kqd0k720yW8giu&#xA;GRhDKRyCuR8LFe9D2xVgn5b6p+YnmLSbvUvMTw6TOLya1gsYIKgLbMYpHLSEtvKrgewGKssXSr1r&#xA;u1nur8zrayNKkYiRAWaN4tyN+khxVM8VdirsVdirsVSbzVr50LSrvU2jaW3sLWe9uUjRXkMVuFZ+&#xA;CvJAtQpJ3btirD7n87fK9sjtNdSJ6UaSyr9RlJVZUR0rSU/a9VQKd/bfDSou7/Nry/atSS8JHCWQ&#xA;stnKQFgJ5/7t3PFS3EfF2pyNMaVKfLPmLyd5ev8AVbPSGf63qkw1m9iW0Y0a+hjlQAiUKBSRQFrs&#xA;WxVH3H5zeWoIRO127QseMci2UlGYqzBRWUGvwd/bGlTCw/MjTtQa3js5+ct0sjQhrWRVLRQeuysx&#xA;l+H4QR07eFKtKzXAqC1azubqGH6syLNBMky+oCVPDseO/fFWIecn/Ntb/Sf8KrYuxeT9ILc1FmIa&#xA;LQyE0m58vs+l2ry7Yqn8nm/R7CN4dXvYItRtREt7BDzekkoT+7WnNlHqqSQNgRXFWDa7dR6/PrM9&#xA;t52l0myMkKWwgFxDJbfukDK9fS4n1Y3LimwPxUwqoaHHHLqs8tt+Yj3cFvFcyC1ZXASOe3BkMjlx&#xA;X0vhmi6FV8RviqIu7XV7fTZ7uL8wylmyytAnpLK0fGz+NUNWmkMcj+rT9lT0+EYq6zLu07p57la2&#xA;KNcQ+tFNCF9RxECJXZeQaSVaCvRl47FSVDJdD/MDybFplrY/pxb+5tUWzlmCytJLPAqpJUUZufJh&#xA;yBNQTvgSy2CaKeGOeFg8Uqh43HQqwqD92Kr8VdirsVQd3LBFewNO6pEYplLOQFJLR7b7bgHFWN+b&#xA;31a4ktE0G7tY4GEn6QJlhjdqcBEBI6TcRTnX4G8KdwVSG+tPzBu9UW4fVNJj0+3VfRtYZI1lM6se&#xA;VwsskMojd+bE0U7bUqa4oVJJ/wAx455JbfUtFlt1LRiKIxrMVUUjJZgEDKxrToFA2LVqpUZJPzTa&#xA;yf1LzQDcrMTGYiCxjIfr6gC7Hh70rXFDPb+80xrG5WOeEyPE4UK6FixTiKUPXoMCUzxV2KuxVL5P&#xA;L2hSXs19LYQS3c/EyzSIHY8QoH2q02RenWg8MVQ7+TvKzxeidLtxFyR2RUChmiBCcwtOdAx+1XFV&#xA;GDyb5c03TpodI0ezjlMTpGrRijsYvSAlehdgyAIxJJ44qxn8rdSg84eXp7vUvLdvp1ra3VzaWdtM&#xA;scjUqVnFAiqAtfR8W4EnrirLz5V8tmGWH9G26xzJ6cgWNVqvP1QARQiknxCnQ08BiqjB5I8oW6kW&#xA;+kWsJIIMkcSpJuak+otH5E78q1rv1xVOYYooYkhiUJFGoSNBsAqigA+QxVdirsVdirsVUL2/sbC2&#xA;a5vrmK0tkIDTzusaAsaCrMQNyaYqgX80eVjFEz6vZejdBhA5uIuMgVhG3A8qNR2CmnfbFWIflbok&#xA;+iHV7nUtf/SsN/dEaFJJdCdf0cjBYWU8iGd3k4u3ViFqemKs7h1PTZmRYbuGVpP7tUkVi2xPw0O+&#xA;yn7sVROKuxV2KofUWZNPuWUlWWJyrDYghTQg4qwvzdc+frDW449A0tL/AElrdXMkt3IkhuFS5Lwq&#xA;GnQksVgK7dOf0FUKdf8AP3CdU8ryNKPTlt+OoVrDI6ghk9YfGqlv2qGmKos6h55S6EP6BLxcVH1h&#xA;r941MhhViP7xyAJOVTxNAKb9cVS99U8/Q2cosfLCRytJzgRL9jE/qvC0kvISx1LNNI3Tc/I8lUzj&#xA;1Pzisc8k2hPIyITHaxX7CUuJ0TjUyEEek7sDQV4duQoqlU+v/mVbaIdQuPK8n1kOUawhu555F5MV&#xA;jI9OQlxsORA25V2CnFXoVgnpyXaBnZVmHHm7OQDFGaAuWNKnAqLxV2KuxVbNIY4nkClyiluCirGg&#xA;rQDxOKvKPMf5g6vqukNZP5L1C8t5PRklkgllWNlLx8GieOItKhZhyFPs1rtWhVL7OTSzp9yb3yXq&#xA;0UGlepJbW5kneRp2vEjuYhQLzU/uZ+dWDfGQfhriqvcaFoWpGOC48qakbSHS44E09ndFIe9Ro1JV&#xA;Awb9+zN8fwqGHHauKoJIdJ0fzEdY0b8v7+V7FGu0vBPOCZQ8sMirAykMwi5N16/CO1VXpXlXzZqG&#xA;s6jqNneaRLpf1MgwNM1TNEXZFl40UqrlDxruaHwwKyXFXYqpXkLTWk8KkBpY2RSelWUgVxVjnmjy&#xA;nceYHtpZH+qT2qyJFLFKr0ErRuWCzW8ih1aBOLgcl3A64qxNvyM05b2wube5njXTZfWtIGufUReM&#xA;YijT4oK8Io0UIoPaprXCqv5k/KbSdQl1DXNWmmW9lAub28guGX+4tI7eqwiCRCvCF24cWqXYbigC&#xA;qWaV5P8ALXnTQ7eysdXa/ttEEltBNBdBgqyXVtcgSt6LpPyewVwJOXwvVhy4tiqbWn5M6baurRTX&#xA;ChQvwi7NDwhMH++D/utiPvPVmq2qK078rhZazb6ob26umtZFmggubsyIjKGACVg5KtGpQHG1ZvZx&#xA;3CtcPOqK0sgdVRi44iNF3JVN6qcConFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWH6l+aGg6dcXcNx&#xA;b3VLOZ7eSVFidDIjRrQcZCf93A7gUAJNMNKgvMH5y+VtGW5M9veXCWtxJaXDwxxlUeJ2jdnLSLxQ&#xA;MlCxxpUn/LvzX+Xnl3SbvS9IiuoLRWu9SkM0PEiR757drYgHaWKiLxbolC1N6Kp7F+cnkiS4aBZr&#xA;jmsvoMfQkoJPUWMrWnb1Fb5Hx2xpWVaFrVhrekWmrWDM1neRiWEupRqHxU7g4FR2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxVhev2P5n3GtzPouoW1ppaMghSVUZnU+gW3KSEU4zdv2hSvYqo3Vh+a7W1taW&#xA;mpWyTfVQ13qMyRMRcO0xZY1SNVb0v3QUlFVlDVHI7KoPTdD/ADit7+0e61XTp7UPBPqFIwkkvEGO&#xA;5g+GICkg+NX7HalMVVbbT/zYWBWC6RCsjNLNAI6TB3iZnLOoaIsbg1FAduNSfiqqv1DTPzPv1ntb&#xA;mDQn06V2V7eRJJRLGYpKmQSKU+KX0zSnzxVXudP/ADRWxtxaSaQt16U/1mP03ESygk27R7E15BWN&#xA;dq126HFVCG1/ORL0Ez6SNP8AgK26BwybgsgbgAVXoNq098VantvziDz+ld2TIkqCP4VHqIWQyMgI&#xA;JQceQQM1a9TirNdKF+NMsxqJU6gII/rhSnH1uA9TjTanKuBWB+QPzauPNHmGTSLnS0sg0NxPbTJN&#xA;I5YWs4gZWWWGBSTyDfumcD9qmKvRsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirG/L&#xA;/wCXnlXQL83+nW8oueMiRNNcT3CwrO/qSrAkzukQkcAtwArirIYp4JuYikWT0mMcnBg3FxuVanQi&#xA;vTFVxdQwUkBmqVWu5p1pirzvUfy1833Ot3eqWnnS9t4rgu0Fl+8eGPnceqFUeqAFVFRRxAOx34sV&#xA;xVWl8nedUksrOz87SQG1t4YhFJBHLLKlvI4Mr8mqzNG6K7ftMN+tMKtp5R/MK4ltjL5v9G0iPGW2&#xA;t4ebOqkq9Z2ZX5dv8n3OKofWPKnny3jmvY/OSxSmqwQzr9XgYtIW4PJWQryRioKpVeq9BirO9MmR&#xA;rSGE3SXVxFFGJ5UYHkStOdB/OQSMCovFXYqxjzboF9r0kcGm6ybCa1jkSeJGkqrT8DHNSGWFw6CN&#xA;lTkeJDtUHFUNdeU/NDMAPNU8VvwEar6YDhg3wnmGBJYUBrv9+FUJZ+SfPCJN9a83yzzPz9KdYuHD&#xA;oUHph+Jow+LxG2Kq115T8xi+upX82zQRX1xI1nb8eIjV29RIU+P4ioFK+HbFVGHyj5+P1j1vOZkk&#xA;4xwwcLVEEfFmkdnAf4nZWQewX/KOKqMvlPz5Fpdk1z5y+rPbK36QYxgxPyH+/WZHHxV3r0O1KDFU&#xA;PL5S86Xz/wChed/QZVk9COEetyTj6fNquPao3AO9a4qmcPkzzml68z+bJjA0rSrAIq068F5F91rx&#xA;qPanc4qzbArsVeP+dvLsaeZbj9GeV1kcrM82pPqBthKb5JGmYRF0BYPReRDCm2wWmFUgXQ7SwRIz&#xA;5Kn+tXVwZITBrHL0kgVBVpS0scfPnLRWK8l7cmICqeflh5N0mPzLFO/kuTQX0VZn07UDrJ1BWMnw&#xA;FPSVzsyzORyFB8ycCpz+aunWV9cxpP5aOuMLcH149QSyeMxy+osVGdD8TBWr023wqw7/AAzo97de&#xA;rc+Qp4FNwkxRtbiVElEjEzoIZGHx86yDlvxG2wbFUbaeV9COgPet5IuBcWkoSHRW1aFiWnnaV5PV&#xA;9X0+IeNWAZvkNsVQk3lnTpq2g8lTW1u96qSTW+tRFZIIoiA0nqM7LGzTSALGKg8m5AtuqmHlXQtK&#xA;0rztbX1h5Jls7wusJ1U6wk8QVi0Lv6BlYn91IWoVrXpvuVXtOBXmP5i6HD/iG2u7Hy2t/fyvHeSa&#xA;k981moeEpCEZQ8fPhEOQoTQ9viJwqwtfL9tY2d19Z8lzSyXqw2cf1fV+TmSpmMwZHkENJI4qPxUB&#xA;q12VSVUx8peTNJuvNtvHc+RZrCGO6GpprH6c+s8blR6of6vG4PxPGoYUp4igGKs2/Neys9Q023sb&#xA;vy6vmKBxKxhN2loYmPGPkC5Un4JHIK1I47CuBXnM3lXSrjTwJvy9kjJjit57CHXIQjBY4uMgZXWr&#xA;QhDGpqDTkKHlhVObHyf5cutP1eabyfPB9WZ7iPTjq0cjXjGJYWYMsrKilGI3cD+briqVaho0J+vR&#xA;2fkGe3WeBomuYtbthP8AHKlRDG7zwUenJuQGyDkNlxV1v5b0XSdZttQsPy+nNzpsyR6dcrrkfALE&#xA;YnjlkR5vs8+Q+ydl37UVe+4FUNQu1s7C5vGHJbaJ5ipIWoRS1OR2HTrirHfJ3mZfNGgpryQfVkv7&#xA;RXSHlzoFlnQfEQla8a9MVTe813RI7p9Mk1C2TUnQlLFpoxOarXaInkevhkxjlV0aRalqs9+mtaZF&#xA;aSWqesJRKlwzB3jDRtIIQvVworkErdXvmsNG8wXyirWkU04HiY7VW/hk8ceKQHeUF4p+WP5+zSHT&#xA;fK+tWq+mYYbC21BGPPmoMYebmaHl8A+dSa5uNZ2dsZxPnTXGfR7lP/x2Yf8Anl/ybuc0jaxHzJ+d&#xA;fkfyxrb6HqUlwb2Jq3Bhi5pF6h5ryJK1+Bw3wg/fmbh0GTJHiFUxMwE71i68t615Uubi4uYp9AvH&#xA;hM10s3pRGEyRhm9ZWQoB3PIEZiSiYmjzZJj5Y8taF5a0WDR9Ct/qulwc2ghEkkoHqOZGPOVnc1Zi&#xA;dzkVYt+WF9qt4uonUWnc2+o6hb2klzMZ3e3ia3WN+XFKB92oNt9ttgVZjo+oW9/p0VzbkmIl4wW2&#xA;JMTmNv8AhkOBWn/6V3/GT/mRJiqpH/x0p/8AjDD/AMSlxVVt/wDeeL/UX9WKpbefbsf9RP8Ak/b4&#xA;qmS/70P/AKi/rbFULqqhrHUAQSDasKA0P2X6HbFUF5V8l+WvKlpLaaBZ/U7edxJKhlmmLOBxryme&#xA;Rug8cVTPUbRL3T7mzkrwuYnhehKmkilT8QqR164qxLyb5S/RXl+HSNXtbSa40+1CIYybhArTTuvF&#xA;5o42BoRXb6TikSI5J1P5P8o8JJf0JYeqAWDi1hDVA68uPXJcZ708cu9Tu9JMGtadJpVlYRcBIbiR&#xA;4+LiMtGr+kYwKPxJAr45FBkTzYl5w8ranrfnuyljTnpVmwfUQWojKEVgjL0blxpvmFmhKWWNch+t&#xA;22j1OPHp8gP1y5fJl8/kryaIZCNB06oU0pawA9PHhmw45d7quOXe5tI0mHUEtYrK3jtZDEXgSJFj&#xA;YhLgglQKHpkEcRvmvHk/ylMWkm0SwkkZm5O9tCzGjEDcrkhMjkU8cu9L9e0ryZpGh3lzeabY22mQ&#xA;SxNdVt4/TEReMPVVQ7UO4pvgJvmpkT1Tbyx5l0LzLosGsaFcfWtLn5rBMI5IgfTcxsOEqo4oykbj&#xA;AxeYaB5ptvIHlLU9Y8zJLaMb3UGs7e4Vop7qRhBxSNWjQnm6tR6GqjmxqWoVUf8AnGf8w4/MOhap&#xA;pFwWW+0+7mu40clv9GvJWlHxkD7EjMD9GBXrj/8ASu/1/wDmRJirHvPf5g+XfI9tdarrMpAaGNbS&#xA;2QVknlDSkRp2r7nYYqo/l9+a/k3zlpaTabeCG6iQfWrG4ISaI14/FvxINNiCcVTfVL6zt4oLmaZU&#xA;htYhJcuTXgqTQMxalegGFXlejf8AOS/lvUfzMbSeTReW7iNbSzvnXZ7wTMFkIoGWKRXC/F0IqaCu&#xA;BXrWpalp0llfBbmBw9swUeopDVV9up64qkBbQ/JWiC48p6LNqUGsXBuALGSS4jeaZQFlaRml4o54&#xA;iq7YqyTUfMWlaff2unXE3G/vlkazg4t8fooZH+MDgtFX9o4qxzQPMFt5q8v/AOJJIUgge1aWOKJo&#xA;Lr4I5Z0P714t6+n9nt864QLNKt8mavonmnypaa1BIkclwhSe39O2PC4VKyRCsQ5U6j2y/UYDjmY/&#xA;ikA2E7kW707VLSGxs/rcdyGFzLWCH0kV4wX+FFZ6ByeOY6Va4sIrqW9kkoDE3Bf3cLVAiVty6Oer&#xA;Yq3NoVqsTnl0Un+6tvD/AIxYqoPp8Ud8LQFfTlMRY+lBXZJz2jp+z3H68KrEt9CBuke8hR7Lm12r&#xA;LaKYkHxcpKxjiOJBqclwHbbmhbLHpdtZDVY7mE2iSwSC6K2vo+kzx1k9QIopxavIN75EgjYpT22u&#xA;ba6t47m2lSe3mUPDNEwdHVhUMrLUEHxGBWOWF5aeZ2BnjhpayXMLIqGbi8TRAg/W7aJlb4twq09z&#xA;2KoyHytpLQoTDHVlBI+r2vWn/GHAq6y0mzsZrOa3jRXmPBysMCGhiZtjHGh6r44qrX2m2uoXzR3K&#xA;IywxRsnKKGQ1dnB3kR/5e2Koa38saPJbxSCKIh0VgRb2lDUV2pDiqgdIs7QwrDHGouogktILZdmm&#xA;hUj4YxXZjsdsKqdvomkS6ze2Igi42kNvIW+r2teczS1H9z2WNcVX6j5c0uC0vJVghYw27SKr29oF&#xA;JCsaMfR6bYqw3zfbeYNQ0XyksnlsaVJb6tAk2lQTxzJBbK4Wo9CMo6FP2BTbviqaef8ATNen846F&#xA;dW7NJo6Wmox3VnHK6NJK1s/D93HR3qNhwNR4d8VQXlQ3Fr+WX1G40y6s7+40qZU0/wCr3LSK8klz&#xA;xEnIO0ZcuD+8YdfDDCYjIE97KMDLlXzAeF6X+Wf5sadfWl1Hol4gs50uUAK8VaNg3KnL2zo56/Ty&#xA;BF8x3H9TQMMvwQ+nbifT9W1zShc6decovVkgaWGSJIZIyjq7tVdjxp3FabZzZbiKQXnDzfpmkWur&#xA;acbpotcvopRpMKRyO0k7W6JEFZVKAmSg+IjIDPjjOImerkYdFlyxMoCxHnuP0vGNYf8A5yM1aCG3&#xA;1Gxu2s4ggnhjSKNZlR1krLxIqaoP8yc30MmjjuDv7j+pw+Cfl8w9j8v+adZ1GaW913QLnQnt5Ykj&#xA;tiWu5JEMdxR1WGPl1NCAppmnzRhH6ZcQ9xbYwJNbfMfe8T/M7yL598w+etZ1fRtGvZNMvmjWNypi&#xA;9RYo40PKOQo1OcdQGGbnRa3DHFESO48j3+5ryYJcR5fMfrZd5M1PUvK35bTaJ5y8r3x02xcz3M8k&#xA;cFxbGASiZo5EkkWngBQip3pmDrpY5zM4y+FH9SYxIG/3h7VpEmmSaXaSaV6P6NeFGs/q3D0fRKgp&#xA;6fp/Bx49OO2YCWC/lPeaddpqt9ZCWOCbUtRMizSRSKJFaAO0bRxQ/Bt0PKlPtHCrKfI2rrrHk/SN&#xA;SV/VFxbRt6hPIsQOJJPckjfAqPf/AKV3/GTv/wAYJMVQHmS9jsdL169kcRx2umNMzt0AjWdqn7sV&#xA;U/y9vIr3yH5cuomLpNplo1SamvoJUHruDscVRV59ux/1U6/8Z7fFUh8saok/5medrD1AXs00o+mO&#xA;oElu7VP+fh44qyXVqmw1AAkH6q9CKmnwv0A3xVgfm7RbmGy8tJ5i8yJc6nbaqklneSWjxLNMzARR&#xA;GK1PFaV48j943qVejXdpb3drNa3C84J0aKValSUdSrCqkEbHqDgVIrTSbfQrf9FaLbtFYW1qiJFT&#xA;1uKF5Ts8s6OTUnrX54qjZp9Y9GTlEQvE1pElaU/5icVQVylzc61pyXTXsDqXeM2qrHCQhV2Fwwkm&#xA;qjcQtPfCqC1zytYah5gTWXgkmuNNJMfwoyB/TQg0MsZJXZht1ymeCMpCR5hysWsyY8cscfplzTqa&#xA;fWPRk5RELxNaRJWlP+YnLXFUHlvDfBnRhdAxekojj4kcJ/8Ai89uXcduuFVS2vdUf1UjjJMUjJJW&#xA;JBRj8f8Ay0/5WJCpd5incaNenVNNk1LT+SG60+K1jnecVSkSxGdw/LYUpirJLS3t7a1igtoVt7eJ&#xA;FSK3jUIqKBQKqrsAPAYFeep5e8tav5fm0jyffXmn6dcvex38lkA0jNJ6QuEL6hyZeXJd0HyIwqs8&#xA;n/lzq3lbRV0rRvMGsJp4IkhimTTZvS5VLCP1FbirE1I+7virItF03Wra/gl1DVr6+t5Nra2uYbGO&#xA;ONhG24a2VZfs1+0WwKl/5j+Q4POUf6OlvtQs4vSAuRYNCnqRuzUSQyndSV3FMVYhY/kKtrpkdjae&#xA;ZfMsFmqcIoorm2RVjbmWQKrAcWMrEjCqfeXfIt1oNzc3D69reoXF/Bxga/kt51hc3McnKFOXBW9S&#xA;StCOP3UxVKLX8kZLfzPdeYofMfmBNauwDeXSSWUZlU7cXCcRx+AbAbdsVRUn5ZazDbcLjzf5nuLa&#xA;1/0iSGSe0f1AG5lJGqHdDxpwZqU26HFW/Nsl/b2Hk+31Wwv62+q28BdryGZ2VQgWe7kETiSrtuop&#xA;uK+GKvSNcMg0XUDGzrILabg0b+k4b0zQrJRuDeDUNPDArD/y91lpPIK6vfXU14FsZJ5rqZxLK6JP&#xA;cmpYBASFWnTJRjZACs6uN4JP9VunyyKpRrJ8wjV9L/RKWjQ1f9IG7aVWFvzj5+j6asPU/l5bYqip&#xA;J4oINVnmbhDEWeR/BVt0JP3YQLNKjbjeCT/Vbp8sCoCf/jsw/wDPL/k3c4qg/Kju0muBiSE1SdVr&#xA;2HCM0+85dm/h/qoDfm2AzeX9QhEl3CZXiQTaeQLteTxjlASGo47bZSlPFXioWpNBSp3OKsC/LC2e&#xA;2fVIPTjW3XUdQa1aKWKZWiLW/H4opZqMKbq9GHhhVnEMkaQQB2Cl1VUDEAk06DxwKhhJG408owYL&#xA;KVahBoywSAg07jFVaP8A46U//GGH/iUuKrreeD6vb/vF/eqqxfEPiPDnRfE8QT8sVSy5ubd7m1gS&#xA;RWmhjiMsYILKHng48h2rQ4qmy/70P/qJ+tsVQmpv/oOoMg5kWz0AI3IDin37Yqt0efUNQ0+G41fS&#xA;xpt6DyNm0sdyY2A6iRBx616Yqjbq2guraW1uEEkE6NFNGejI44sDTxBxVimoaD5Ys7G40QmWzsJb&#xA;UokUMs45CaSZ5uRBbkXaQ1L16nHfmDRZRlXS0TLJ5ZNs0YvLsgLRf9Kv6mg2q3Op+k4V4z+AERZW&#xA;ei3er215bNLcPZJKVeWW4fg0vFNhKx+0vL/OmBBNoHzZa2Vza6jZXFxLDJd8VCJJMiNA6xpJyERp&#xA;uquu+Rlxc4mi2YpxB9QsKtw/lh4WX67eVCkAC7vxXbvSQVyYYcZ/ADZfSWmaWOeZrNWh9aUzXBdT&#xA;xnA4szeoN2H2cFI4t0Lp9l5StRcML69MlzPLPM31q+WrO22yOq7IFXpXbxw2a3NspZL5ABbc6V5T&#xA;1Gxm0gyXN1b3kqLJBLdXrh0d1MlWkk+ff5Yk2xMmYoqoioooqgAD2GBDwXzN5O/Mvy55PisdD1WG&#xA;x1a61S9vbu9hmdIxb3HCNY/UaJOLcmUABfChrhVh3mPy5+eGu20lxqmrRxuskNxbSRTSQQ28VuJ5&#xA;aclReBX1wQTuQoqfhGKsw/I3yj+YGm+cLjVPMt39cgu4ZXRlkd1WR39RzwKoqVM1aDx8MVZX+eFn&#xA;5+msLVvKV+umn1IjeXLv6alUZ+CFuLjeR12PXpirx+88k/nneeW4YrrVUFrYTwXVtd/WJIzE0du0&#xA;HNpuAYMYnUbn9Zqqyv8ALbyX+ZkVt5nuNXuBcnVLJ1sXikdwty0qk1JUNVabdSKYqkOkaL/zkRNq&#xA;qTJ5iF0CoS4VZjMrwmscg4mJlJpXfqD4GmKoHyj5D/OvStVjt7bUhPBFcQy6hZx3Mju8cDcHhaq9&#xA;OLcWUmgqK0xV9T6Rc6hdaXa3Go2f6OvpYle5sfUWf0ZCKtH6qUV+J2qMCqmoTvb2FzOis7wxPIqI&#xA;pdiVUkBVG7HwGKsS/Lm/8x6h5WS98xlv0xPAxuFaMQlQLi4WMcOEX+61Xcrv1xVl926paTO54qsb&#xA;FmPYAEk4hUg82+WZPME9nbLrGo6MIlklE+lTLbzMVeL4XZkkBT/Jp+GKpunTUe559f8AnhHiqIum&#xA;C2szMaKEYknagAPjiqCn/wCOzD/zy/5N3OKo6D7B/wBd/wDiZxVjXmnVlj8t63dLqA0tbKeNBqfo&#xA;/WPRKGEtJ6NPj4sT8PfJGNUqaeWPrp0eOS71Mau8ryyx3ogFtWJ5GaJDGu37tCEr3pU75FUPr3lu&#xA;TWr61F3NBLocYP13SZ7VJhcEVZayO3wcJVjcUXqvviqQ6l+WHlOG1v0N/PpGjX5gW40+B7a3sx6Y&#xA;MaqFaL/dhk+KrHlsOm2Kp3p/lyKxu7BvL81pp2g2vqiXTLW1TjMZAVb96rgJxdUPwp+yQa12VTbV&#xA;NJ0zVrKSw1O1ivbKUqZLadBJGxRg61Vqg0ZQRiqX/oHyfpGhyaabKysNFmYLLbFI4YHZuKLyB4qW&#xA;bio8emKorQdO0LT9Kgt9Bgt7fSyDJbx2aosBEh5Fk9P4fiJrUYqoab5P8q6ZfNf6dpFpaXzghrmG&#xA;FEkIYlmHICu5YnFVulaZ5R/SlzqelQWR1Nw63d3biMzETOHdXdPio7x8qHuMVTnFUFrZmGjX5g9U&#xA;Ti2mMRgFZefA8fTABq9fs++KsW/LW21K18mWkOqNK18tiGn+sJJFIpea4cIyShXXgpC7+HhhVOPM&#xA;WtWL+U9ZurG6huTDYXUqmKRXH7uJj+yT3y3HjPGAR1CCUddXlrBrlhBK5We7iuEgT4iGKem7dNh8&#xA;IJ3ylK4MqrqTMaKHJJJpQCCPviqX+aNd02Dyzq80d1BJJFZXDogkU8isTEDY98uxYyZgV1QSjJiD&#xA;rMJG4PpUP/PO5ylKsuo6fCWjmuoo5Fd+SPIqsKsT0JyQgT0ViX131dE8ytb6tDprLqh9DU3EckcA&#xA;H1cmUq5VGClq/EaZbmjVf1UBlOh2mqWtj6ep6iNUuGkkdboQpbj0nYmNOCFh8CUXl365QlMCKimK&#xA;sYP5a+Tv0aNN+pN9UCLH6frTfZWc3P8AP19Vi1euKp3pGkafo+mwabp0Xo2VsvCCLkz8VqTTk5Zj&#xA;17nFUVJGskbxtUK4KkqSDQimxG4xVjc35b+T5dMbTGs3WyeA2rQpPMoMDOzslA9KMZGqeu/yxVPN&#xA;L0y00vT4LC0UrbwLxQMxdtzUksxJJJNcVQU3lPQZtSn1KW3LXtxJBNJL6kiktaikI+Fh8K/y9DU1&#xA;G+Kr9F8s6Nos13Lp0Jhe+ZXuau7hnQEcviJ3Nase5xVNMVdirAvzCg1JvrN4ljbQWVpCWutYvIYb&#xA;tRBDDLIyrCGE1DI4Hw0NR4GuK2QhPMth+jPINzfXsVha3tqvr3WrrpkJt/R9XkVFqs8soHpEJtIW&#xA;77dlPEUd+XWqWmpiG/0qzhudKurVg3mC2hjsopJoZf7tbUn6wqsJCAXH7G/VSVSSmvnPyte6zaod&#xA;KksbO/5/v7m9slvBJCEYel9qJ1+IqeQbamKgoXUPJF3P5djtLY6VBrYK+vqB01DA68jzUQepyXku&#xA;20tR44rxFNLDyxaRaMtpd29jLevGguriK0jjikmQGkno/FsrMSoLfTitlKfK3ki/sldPMLaRqi8R&#xA;6RttMW1cPWrs7NLMrVJ6KqgfgFeIr9D8irC14uvxaXqlvOI/QjTTooijKGEpckur8/hoAq0p3NSV&#xA;bLLgAoAAoBsAOlMUOxV2KuxV2KuxV2KuxV2KuxV//9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="uuid:9efa0710-a85b-c642-b0bb-d20be206c660"
    stRef:documentID="xmp.did:08801174072068118C14F3235FA19F7F"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="default"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/pdf to &lt;unknown&gt;"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:D27F11740720681191099C3B601C4548"
       stEvt:when="2008-04-17T14:19:15+05:30"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/pdf to &lt;unknown&gt;"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/pdf to &lt;unknown&gt;"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F97F1174072068118D4ED246B3ADB1C6"
       stEvt:when="2008-05-15T16:23:06-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FA7F1174072068118D4ED246B3ADB1C6"
       stEvt:when="2008-05-15T17:10:45-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:EF7F117407206811A46CA4519D24356B"
       stEvt:when="2008-05-15T22:53:33-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F07F117407206811A46CA4519D24356B"
       stEvt:when="2008-05-15T23:07:07-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F77F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T10:35:43-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/pdf to &lt;unknown&gt;"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F97F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T10:40:59-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to &lt;unknown&gt;"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FA7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:26:55-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FB7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:29:01-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FC7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:29:20-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FD7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:30:54-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FE7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:31:22-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:B233668C16206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T12:23:46-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:B333668C16206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T13:27:54-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:B433668C16206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T13:46:13-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F77F11740720681197C1BF14D1759E83"
       stEvt:when="2008-05-16T15:47:57-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F87F11740720681197C1BF14D1759E83"
       stEvt:when="2008-05-16T15:51:06-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F97F11740720681197C1BF14D1759E83"
       stEvt:when="2008-05-16T15:52:22-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FA7F117407206811B628E3BF27C8C41B"
       stEvt:when="2008-05-22T13:28:01-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FF7F117407206811B628E3BF27C8C41B"
       stEvt:when="2008-05-22T16:23:53-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:07C3BD25102DDD1181B594070CEB88D9"
       stEvt:when="2008-05-28T16:45:26-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F87F1174072068119098B097FDA39BEF"
       stEvt:when="2008-06-02T13:25:25-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F77F117407206811BB1DBF8F242B6F84"
       stEvt:when="2008-06-09T14:58:36-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F97F117407206811ACAFB8DA80854E76"
       stEvt:when="2008-06-11T14:31:27-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:0180117407206811834383CD3A8D2303"
       stEvt:when="2008-06-11T22:37:35-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F77F117407206811818C85DF6A1A75C3"
       stEvt:when="2008-06-27T14:40:42-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:01801174072068118F62C262592E568B"
      stEvt:when="2012-01-04T09:22:07-05:00"
      stEvt:softwareAgent="Adobe Illustrator CS4"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:02801174072068118F62C262592E568B"
      stEvt:when="2012-01-04T09:22:18-05:00"
      stEvt:softwareAgent="Adobe Illustrator CS4"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:06801174072068118C14F3235FA19F7F"
      stEvt:when="2014-03-26T20:33:25-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:07801174072068118C14F3235FA19F7F"
      stEvt:when="2014-03-26T20:33:35-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:08801174072068118C14F3235FA19F7F"
      stEvt:when="2014-03-26T20:35:31-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:F77F1174072068118C14A856FF5F266D"
      stEvt:when="2014-03-28T06:06:14-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="4.422309"
    stDim:h="6.152778"
    stDim:unit="Inches"/>
   <xmpTPg:Fonts>
    <rdf:Bag>
     <rdf:li
      stFnt:fontName="HelveticaNeueLTStd-LtCn"
      stFnt:fontFamily="Helvetica Neue LT Std"
      stFnt:fontFace="47 Light Condensed"
      stFnt:fontType="Open Type"
      stFnt:versionString="Version 2.100;PS 005.000;hotconv 1.0.67;makeotf.lib2.5.33168"
      stFnt:composite="False"
      stFnt:fontFileName="HelveticaNeueLTStd-LtCn.otf"/>
     <rdf:li
      stFnt:fontName="HelveticaNeue-Italic"
      stFnt:fontFamily="Helvetica Neue"
      stFnt:fontFace="Italic"
      stFnt:fontType="TrueType"
      stFnt:versionString="8.0d6e1"
      stFnt:composite="False"
      stFnt:fontFileName="HelveticaNeue.dfont"/>
     <rdf:li
      stFnt:fontName="HelveticaNeue"
      stFnt:fontFamily="Helvetica Neue"
      stFnt:fontFace="Regular"
      stFnt:fontType="TrueType"
      stFnt:versionString="8.0d6e1"
      stFnt:composite="False"
      stFnt:fontFileName="HelveticaNeue.dfont"/>
     <rdf:li
      stFnt:fontName="Helvetica-Bold"
      stFnt:fontFamily="Helvetica"
      stFnt:fontFace="Bold"
      stFnt:fontType="TrueType"
      stFnt:versionString="8.0d3e1"
      stFnt:composite="False"
      stFnt:fontFileName="Helvetica.dfont"/>
     <rdf:li
      stFnt:fontName="Palatino-Roman"
      stFnt:fontFamily="Palatino"
      stFnt:fontFace="Regular"
      stFnt:fontType="TrueType"
      stFnt:versionString="7.0d4e6"
      stFnt:composite="False"
      stFnt:fontFileName="Palatino.ttc"/>
    </rdf:Bag>
   </xmpTPg:Fonts>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="100.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Red"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Yellow"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Green"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Cyan"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Blue"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Magenta"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=15 M=100 Y=90 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="14.999998"
         xmpG:magenta="100.000000"
         xmpG:yellow="90.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=0 M=90 Y=85 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="90.000000"
         xmpG:yellow="85.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=80 Y=95 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="80.000000"
         xmpG:yellow="95.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=50 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=35 Y=85 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="35.000004"
         xmpG:yellow="85.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=5 M=0 Y=90 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="5.000001"
         xmpG:magenta="0.000000"
         xmpG:yellow="90.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=20 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="19.999998"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=10 Y=100 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="100.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=90 M=30 Y=95 K=30"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="90.000000"
         xmpG:magenta="30.000002"
         xmpG:yellow="95.000000"
         xmpG:black="30.000002"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=75 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="75.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=80 M=10 Y=45 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="80.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="45.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=70 M=15 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="70.000000"
         xmpG:magenta="14.999998"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=50 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=95 Y=5 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="95.000000"
         xmpG:yellow="5.000001"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=100 Y=25 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="25.000000"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=75 M=100 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=100 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=35 M=100 Y=35 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="35.000004"
         xmpG:magenta="100.000000"
         xmpG:yellow="35.000004"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=10 M=100 Y=50 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="10.000002"
         xmpG:magenta="100.000000"
         xmpG:yellow="50.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=95 Y=20 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="95.000000"
         xmpG:yellow="19.999998"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=25 M=25 Y=40 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="25.000000"
         xmpG:magenta="25.000000"
         xmpG:yellow="39.999996"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=40 M=45 Y=50 K=5"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999996"
         xmpG:magenta="45.000000"
         xmpG:yellow="50.000000"
         xmpG:black="5.000001"/>
        <rdf:li
         xmpG:swatchName="C=50 M=50 Y=60 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="60.000004"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=55 M=60 Y=65 K=40"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="55.000000"
         xmpG:magenta="60.000004"
         xmpG:yellow="65.000000"
         xmpG:black="39.999996"/>
        <rdf:li
         xmpG:swatchName="C=25 M=40 Y=65 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="25.000000"
         xmpG:magenta="39.999996"
         xmpG:yellow="65.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=30 M=50 Y=75 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="30.000002"
         xmpG:magenta="50.000000"
         xmpG:yellow="75.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=35 M=60 Y=80 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="35.000004"
         xmpG:magenta="60.000004"
         xmpG:yellow="80.000000"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=40 M=65 Y=90 K=35"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999996"
         xmpG:magenta="65.000000"
         xmpG:yellow="90.000000"
         xmpG:black="35.000004"/>
        <rdf:li
         xmpG:swatchName="C=40 M=70 Y=100 K=50"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999996"
         xmpG:magenta="70.000000"
         xmpG:yellow="100.000000"
         xmpG:black="50.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=70 Y=80 K=70"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="70.000000"
         xmpG:yellow="80.000000"
         xmpG:black="70.000000"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Grays"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=100"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="100.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=90"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="89.999405"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=80"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="79.998795"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=70"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="69.999702"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=60"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="59.999104"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=50"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="50.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=40"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="39.999401"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=30"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="29.998802"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=20"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="19.999701"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="9.999103"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=5"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="4.998803"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Brights"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="C=0 M=100 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=75 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="75.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=10 Y=95 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="95.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=10 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=90 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="90.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=60 M=90 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="60.000004"
         xmpG:magenta="90.000000"
         xmpG:yellow="0.003099"
         xmpG:black="0.003099"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -443 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 443 li
318.406 443 li
318.406 0 li
cp
clp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: KVXQMX+Palatino-Roman Initial
ct_T42Dict begin
-0.465 -0.48 1.703 1.172
 256 array 0 1 255 {1 index exch /.notdef put} for  /KVXQMX+Palatino-Roman
Type42DictBegin
[<00010000000b000b000b000b63767420dec1ba6b000000bc000005986670
676d603e945f00000654000006fd676c7966d0914b3600004dd400000f5c
68656164d8141f1500000d540000003668686561fa0e820f00000d8c0000
0024686d7478c39d441000000db000001b706c6f6361006578b800002920
00001b746d6178700f36088900004494000000206e616d6529b6616e0000
44b40000036270726570feed8aee00004818000005bb6764697200000000
000000000000000005d10000058c001a0580000503a600220000ffe30000
ffe80000ffe3fdcefffc058d0043fe5c00000362000005ab000002340000
058d00000000000003510000000000000000000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000000000000000
00000000000000000000000000000000000000000000ffffffffffff00bc
000000bc0000000000000000000000000000000000000000000000000004
00050040000700050039000700c100c30072013200be0005008e00320043
001400680030005500c30223009e0011003a00a5005700d5000600880010
005b008100f80053009900ac00bd04010044008e00ef0042004a006c011f
0068008000a900d0004a00a400adff94007600b400c00031011a01290017
00afff6f0001002d008b00c30446ffcc0030ffec001200450051009100a1
00a901570000001d002a0031003100420052009500d600d600ef015a01d5
0282032bffb7000b001d0029000300330035003c003e0047006d00e00194
0391ffc0ffd5000500080041005b0063007f00a2ff4effb1004400260044
004a0073008f00a200ab00b000cc010b0159017b018501b7027c02d80375
03a404bd0516ffac00200037003b00450053005a0061006c0076008f0095
00b500bc00d500ec02d600fb001d003b003d005700650066007a008700a1
00a400ab00c600e100f0013201560166018102130233024a0264028a02bb
0313032e03a903c605e9ff4affaa00000008000a0026002800550055006b
00c700d100da013d014a019801e30247038005a6ff2dffe6ffea000a0017
0020002500470049004e00580076008f00950099009900a500b600bb00d0
00e600fe01040117011d011e018f019301b201e201ec01f90202023502f7
035e0387038f03a603bc03d403d6043a045e04fb052c0584058e059a05c6
fef0ff21ff7f0021005a005a0068006e0085008a008c008c009c00a600b4
00cf00d900df00e800ec00fa01000106010c0115012a013901690201042c
0497052a05ca06bf0800fdcdfee2ff1500030005000a000c001d00220024
002e0046004a00510057005c005c005e006a006c00770079007d007f0081
0086008b008f009500b100b300bb00be00bf00c500c600cb00d100d800da
00db00df00e200ea00eb00fe0104010a010a012d013401360139013b0144
014b014f0153016101670168017d01a901b601b701ba01bd01d201de01df
01f102240233025e02680275027502ae02dd032d034503510367038e040a
041304a204f0050005b506190620066206cd0737077d07c4fca7fe6efec8
fee9ff00ff6effe90009000900230027002a002b004e005c00660068006a
007800800080008500890092009a009c00b400b600b800bf00c500d100dc
00ef00f801080116011701380138014b0157016301670168018801920193
019b019e01ae01b301c201cf01df01e801f401f501f9020b02270227023f
0247026e0278028e02a402c102d002f502f70305030d030f031e033a033d
03590388039503df045a0543060106420708070c074b076300bb00c800ba
00000000000000000000000000000149010e0379005b00dc00e3039400b6
0249020f04e0014c001a0104035e00ae0221022900c501d6027c02c7057e
017d0039015c034602480432039e01fe0071007001c8014001920115017e
016c004502a500f303fd013302a8015001650235012403d3022903af00e8
001a031f007501420237feae01ec008f044602f202dd01c40046003000c5
01860083055000c100af00cc004b0047001a005300b2002800c300520095
00eb0267009500470168007300720083003f002302e10276005b01d90280
023600e6019c010500f201c700510490feac0099031c004c00a3006100e1
03a80410008000a2005a0457049304c7025701ac016c00510092030801bd
00d900390092001a008300bc064a021201810359015700820030002a002a
403231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19181716
1514131211100f0e0d0c0b0a090807060504030201002c4523466020b026
60b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061
b004262348482d2c45234660b0406120b06660b004262348482d2c452346
2361b0406020b02661b04061b004262348482d2c0110203c003c2d2c2045
2320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d4423
5920b0042651582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b0054358b94000fff50a1bb94000fff10a592d
2c00b0054358b9001640000b1bb9001040000b592d2c2045b00043617d68
18b0004360442d2c45b04a234445b04923442d2c2045b00325456164b050
515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b00043
60442d2c01b00743b006430a2d2c2069b04061b0008b20b12cc08a8cb810
0062602b0c642364615c58b00361592d2c45b0112bb0472344b0477ae418
2d2cb801a65458b00943b801005458b9004aff80b14980444459592d2c8a
03458a8a87b0112bb0472344b0477ae4182d2cb002254661658a46b04060
8b482d2cb0022546608a46b040618c482d2c01182f2d2c20b0032545b049
234445b04a23444565234520b00325606a20b009234223688a6a606120b0
1a8ab000527921b21a4a40b9ffe0004a45208a54582321b03f1b23596144
1cb114008a5279b34940204945208a54582321b03f1b235961442d2cb005
4358b91ef138060b1bb9187e3b210b592d2cb0054358b9333326660b1bb9
2d412d410b592d2cb0054358b93d1e12fd0b1bb93b21187e0b592d2cb005
4358b93d1eed040b1bb93b21e7830b592d2cb0054358b93333d99b0b1bb9
2d41d2c00b592d2cb0054358b91ef1c7fb0b1bb9187ec4e00b592d2c4b52
5845441b2121592d2c0120b003252349b04060b0206320b000525823b002
253823b002256538008a63381b212121212159012d2c4569b00943608a10
3a2d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b0064365b00743
0b2d2c3eb02a2a2d2c352d2c76b04b23701020b04b4520b0005058b00161
593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb8
2000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621b
b200802f2b59b002602d2c0c6423648bb84000626023212d2cb400010000
0015b00826b00826b00826b008260f10161345683ab001162d2cb4000100
000015b00826b00826b00826b008260f1016134568653ab001162db80032
2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db800
332c2020456944b001602db800342cb800332a212db800352c2046b00325
4652582359208a208a49648a204620686164b00425462068616452582365
8a592f20b00053586920b000545821b040591b6920b000545821b0406559
593a2db800362c2046b00425465258238a592046206a6164b0042546206a
61645258238a592ffd2db800372c4b20b0032650585158b080441bb04044
591b21212045b0c05058b0c0441b2159592db800382c2020456944b00160
2020457d691844b001602db800392cb800382a2db8003a2c4b20b0032653
58b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b0032653
582321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a235920
b0032653582321b801408a8a1b8a235920b80003265358b0032545b80180
50582321b8018023211bb003254523212321591b2159442db8003b2c4b53
5845441b2121592db8003c2c4bb800095058b101018e59b801ff85b80044
1db9000900035f5e2db8003d2c2020456944b001602db8003e2cb8003d2a
212db8003f2c2046b003254652582359208a208a49648a204620686164b0
04254620686164525823658a592f20b00053586920b000545821b040591b
6920b000545821b0406559593a2db800402c2046b00425465258238a5920
46206a6164b0042546206a61645258238a592ffd2db800412c4b20b00326
50585158b080441bb04044591b21212045b0c05058b0c0441b2159592db8
00422c2020456944b001602020457d691844b001602db800432cb800422a
2db800442c4b20b003265358b0401bb000598a8a20b0032653582321b080
8a8a1b8a235920b0032653582321b800c08a8a1b8a235920b00326535823
21b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800
03265358b0032545b8018050582321b8018023211bb00325452321232159
1b2159442db800452c4b535845441b2121592d0000000001000000010000
b34153305f0f3cf50111080000000000a426b48000000000c9de200efc44
fc250da70963000000090001000100000000000100000695fdc800000ddd
fc44fd760da70001000000000000000000000000000006dc060001000000
000002000000020000000239008d02f8006804d9006f0400003906b80069
0639005c01aa007b02aa007902aa0079031d005604d900680200fff202aa
002d0200008804d901150400003e0400007d04000022040000220400000c
0400001d040000460400005e0400004004000034020000880200001504d9
002804d9004c04d90020038d005905fa002f0639002304e3001b05ac0047
0631001a04e300320473002c061b004006a8003102b2002f02aaffe805cf
003304e300250791002606a60031064a003104d50036064a00300558002d
0433003804e7002b0639001e05c70015080000170556001f055600170556
002402aa00a704d900e902aa005504d9006a0400000002aa00a404000052
046dffea038d005004e3005403d5003302aa00310473004704a800070254
002d01dfffbe047300210254002d0710002a04a8001c045e004404cf0024
047b004f0329002f0364004a029c002e04d3001a0485001e06ac001d0421
0024047300100400002402aa007704d9023302aa006804d9006806390023
0639002305ac004704e3003206a60031064a00310639001e040000520400
005204000052040000520400005204000052038d005003d5003303d50033
03d5003303d50033024c0029024cffe9024c0014024c001a04a8001c045e
0044045e0044045e0044045e0044045e004404d3001a04d3001a04d3001a
04d3001a04000045033300660400007f0400fff60400003804d9010c0506
004e0473002b05fa001605fa001607d5005202aa00a402aa001a0464002d
078d000006aa004905b400220464002c0464002c0464002c0400ffe5049c
003003f4001c05b4006c0696005c0464000c0231ff4202aa003002aa0014
0625004c0610002d04730028038d00670239009a04d900690464000a0400
00120464001b04e500220400006604000061080000df0200000006390023
06390023064a003107fc0048069e00350400ffff08000000040000730400
00390239002d0239002d0464000e03f4003b04730010055600170156fe29
05f4ffb202a6006202a6008104d7002a04dd002b04000046020000880239
002d04000039092700690639002304e300320639002304e3003204e30032
02b2002f02b2001402b2001a02b20022064a0031064a003106520000064a
00310639001e0639001e0639001e024c002902aa001402aafff702aa0011
02aa00300200009302aa007402aa0096030a002f0281008a02aa001404e3
00070254ffe9043300420364004a055600240400002404d902330631001a
045e004c055600170473001004d5004704cf002904d9004a04d900b00266
003b0266ffff026600010600001d0600002e060000180400000e061b0040
0473004702b2002f043300380364004a05ac0047038d005005ac0047038d
005004e30051063900230400005206390023040000520639002304000052
05ac0047038d005005ac0047038d00500631001a04e3005404e3003203d5
003304e3003203d5003304e3003203d5003304e3003203d5003304e30032
03d50033061b004004730047061b004004730047061b0040047300470473
004706a8003104a8000706a8003104a8000702b20010024cffd402b20011
024c000c02b2002f0254002d055c002f0433002d02aaffe801dfffab05cf
00330473002104e300250254002d04e300250254002d04e3002503a6002d
04e300250254002d06a6003104a8001c06a6003104a8001c06a6003104a8
001c04a8001c064a0031045e0044064a0031045e0044064a0031045e0044
0558002d0329002f0558002d0329002f0558002d0329002f043300420364
004a043300420364004a04e7002b029c002e04e7002b029c002e04e7002b
029c00190639001e04d3001a0639001e04d3001a0639001e04d3001a0639
001e04d3001a0639001e04d3001a0639001e04d3001a0800001706ac001d
055600170473001005560024040000240556002404000024043300420364
004a04e7002b029c002e04d9002c0000fce80000fce80000fc900000fc74
0000fc8d0000fcac0000fd640000fc960000fcf00000fc440000fc900000
fd2d0000fcf90000fd1b0000fc7b062500530631001a061b004004730047
04e300250254002d05cf00330473002106a6003104a8001c0558002d0329
002f02aa002d0473002102aa003106a6003104a8001c038d005003d50033
0710002a0329002f029c002e0485001e06ac001d0239002d0239002d0333
01240333012402aa001102aa00a402aa00a402aa001102aa00a402aa00a4
0000fc440000fcac0000fd110000fd110000fce80000fce80000fd330000
fd640000fc960000fcf00000fc900000fc900000fcac0000fcac0000fc74
0000fc8d0000fd330000fd330000fd3300000000000000000000000002aa
002d02000088062500530639002303f4001d03f4002f05b4006c05b40092
0464000a0464ff8c0231ff420231ffe004640012046400340464002f0464
002b0000000008df006607a6006605cf003302b2002f0564002f0816002f
0879002f05c70015087900150b2b00150ddd00150808002f0556001f0808
001f0aba001f04e3002505ac00470631001a079100260254002d04a8002d
06fc002d06d9002d0485001e06d9001e092d001e0b81001e0675002d0421
00240675002408c900240254002d038d005004e300540710002a02b2002f
024c00030239008d0b87001a0a31001a08e30054078d002506c200250433
002d09500031088500310687001c063900230400005202b20014024cffe7
064a0031045e00440639001e04d3001a0639001e04d3001a0639001e04d3
001a0639001e04d3001a0639001e04d3001a063900230400005206390023
04000052078d00000610002d061b00400473004705cf003304730021064a
0031045e0044064a0031045e00440b87001a0a31001a08e30054061b0040
06a6003104a8001c0639002304000052078d00000610002d06aa00490473
00280639002304000052063900230400005204e3003203d5003304e30032
03d5003302b2ffc7024cff9702b2002f024c0000064a0031045e0044064a
0031045e00440558002d032900090558002d0329002f0639001e04d3001a
0639001e04d3001a06a8003104a80007063900230400005204e3003203d5
0033064a0031045e0044064a0031045e0044064a0031045e0044064a0031
045e004405560017047300100400003902b2002f063900230400005204e3
001b046dffea04e3001b046dffea04e3001b046dffea05ac0047038d0050
0631001a04e300540631001a04e300540631001a04e300540631001a04e3
00540631001a04e3005404e3003203d5003304e3003203d5003304e30032
03d5003304e3003203d5003304e3003203d500330473002c02aa0031061b
00400473004706a8003104a8000706a8003104a8000706a8003104a80007
06a8003104a8000706a8003104a8000702b2fff80254ffcf02b2001a024c
ffed05cf00330473002105cf00330473002105cf00330473002104e30025
0254002d04e300250254ffe704e300250254ffe704e300250254ffea0791
00260710002a079100260710002a079100260710002a06a6003104a8001c
06a6003104a8001c06a6003104a8001c06a6003104a8001c064a0031045e
0044064a0031045e0044064a0031045e0044064a0031045e004404d50036
04cf002404d5003604cf00240558002d0329002f0558002d0329002f0558
002d0329002f0558002d0329002f043300420364004a043300420364004a
043300420364004a043300420364004a043300420364004a04e7002b029c
002e04e7002b029c002e04e7002b029c001904e7002b029c001c0639001e
04d3001a0639001e04d3001a0639001e04d3001a0639001e04d3001a0639
001e04d3001a05c700150485001e05c700150485001e0800001706ac001d
0800001706ac001d0800001706ac001d0800001706ac001d0800001706ac
001d0556001f042100240556001f04210024055600170473001005560024
040000240556002404000024055600240400002404a80007029c002206ac
001d0473001002aa003104e3003203d5003304e3003203d50033078d0000
0610002d079100260710002a0000fce80000fce80000fd110000fc960200
001502aa001a0200008806390023040000520400005202b20010024cffe0
024c00290639001e04d3001a042100240558002d0329002f01dfffbe0400
00520631001a04e3005403d50033043300380364004a0000fe5f0000fe78
00007fff00007fff00007fff04d9023309b2023301dfff4e063900230400
0052063900230400005206390023040000520639ff9e0400fe9806390023
040000520639002304000052063900230400005206390023040000520639
002304000052063900230400005206390023040000520639002304000052
04e3003203d5003304e3003203d5003304e3003203d5003304e3003203d5
003304e3fee703d5fe6a04e3003203d5003304e3003203d5003304e30032
03d5003302b2002f024c002902b2002f0254002d064a0031045e0044064a
0031045e0044064a0031045e0044064affad045efeb7064a0031045e0044
064a0031045e0044064a0031045e00440639001e04d3001a0639001e04d3
001a05560017047300100556001704730010055600170473001005560017
047300100200fff50200008b0200001802390090038d005c080003890800
03c5040001c5040001c4040001c402aafdb102aafdb002aafdc502aafdb3
02aafdbd02aafd6b0449003f0000000006000000061b004002b2003305cf
003304e3002504e3002506a600310558002a062a002704e7002704970081
0635003304e3005404730047047300220254002c02b9002c04a8000c0329
0036029c002e048b0041086700400b07002e08f9003c0810005007c20050
0630005005350031075c0031076600310535003107bc00310726003109b1
00310753003109de003107060031099100310495003102aa003104bc0031
04c30031051b0031072d00310733003104e9003106f800310725003106ec
00310809004a0614004a04f9002e061b002e02f5000f02aa004702b0fff3
023d002702f700310275002701bb002502bd003102f5000f018a0022015b
ffee02c5000f018a0022046d001f02f5000f02aa002202fc001e02d20022
020c00280230003401b6002302f5000502be000503eb0005028a000f02bc
000f0255000603d0002e042f0022027500270400003e02e6fff004000022
0400002503d9fff90400002004000046038d004004000040040000340400
002804000082040000290400001304000007040000110400003e04000047
040000400400003a028f002d028f000e028f001b028f0032028f0041028f
002f028f0027028f002d028f0054028f001c028f001e028f000e028f001b
028f0032028f0041028f002f028f0027028f001f028f001f028f001f01c2
005001c20025028f001f028f001f028f001f01c2005001c2002501230046
0133fffc028f003c028f005204100054067400540674001c067400540674
001c0674001e0674000e067400540674001b067400540674001e0674001b
06740041040000be040000be040000be040000be040000be040000be0400
00be040000be040000be040000be040000be040000be040000be040000be
040000be040000be0400000004e5ffe90625000b0473002e0400001e0400
001e0400001e0400001e0400001e0400001e0400001e0400ffec04000039
040000bf0437fff2058e0038058e00450400ffdf0400001805280033062e
005d08ee00290400008903cd008d038d005a0239008c0400000003660051
0593002906ac001601c00089035500a203d5006304d5009202d6008302d6
008304d500b202d600700800000004d901a2040000000800000004000000
0800000002ab000002000000015500000400000002000000019a000000ab
0000000000000000ff8602aa00dd02aa007402aa007402aa000802aaffee
02aafff802aa000002aa002602aa00850000ff7b02aa007e02aa00e502aa
ffc402aa001102aa007802aa007502aa007402aa001002aa001d02aafffa
02aa000c02aa003c02aa00940000ff8702aa008702aa00e802aaffc702aa
002402aa0082063900230639002304e8003304e3001c0441002904410029
0441000a05f2ffee04e3004904e3004904e3004904e3004907dc001c07dc
001c07dc001c04db008204db008206ac003306ac003306ac003306ac0033
05cf003305cf003305cf003305cf0033072a000005d5ffe40791002606a8
003306a80033064a00300681003304d5003305ac004705ac004704e70027
05640018056400180560003305600033056000330560003305f800300556
001f0556001f068100330612000e0626000e0612000e08a4004e08a4004e
0643000006fb003304e8003305920030063e005e08bd00330558ffef0618
000007b00033067d004c064a003005c700150424003302b2003302b2fff8
02aaffe8043300400593003005ff00330721000006da0000068100330842
000008f000330400005204000052047a004403c6003d0334004f0334004f
0334004f046a000003d5003303d5003303d5003303d500330696002e0696
002e0696002e0449003f0449003f0449003f038b005d038b005d050e004f
050e004f050e004f050e004f0431004f0431004f046b004f046b004f04ef
00000497000005df005604ab002f04ab002f047a00440516004f04cf0041
038d0050038d005003c600260435fff30435fff304b8001e04b8001e0435
fff30435fff3061a004403eb001203eb00120516004f0449000004490000
044900000732004f0732004f049c000005cd004f03d1004f0430006003e7
005b0681004f044d000004ba0037043000440364004a0254002b0254ffc4
01dfffc0060800000630002f056f0043056f00370516004f049200120492
001205ec0053047a0044047a00440485001e0324004f08e000f902f5005d
02f5005d0627002304db001c048b00330583003804d80049055600240696
00330658003002a9003305c6003306080023078f002606a60030058b0056
065800300681003304cc0033057c005d04e1002705de000605f80030054f
001f06f60025062700230627002306270023062700230627000906270023
062700230627002306270023082f0023082f0023082f0023082f0009082f
0023082f0023082f0023082f002306270023062700230627002306270023
082f00230565001005e10017060700170680000106b9000106b9000106cd
0001058c000105f000010729000b07ac001707d700170894000108bc0017
08d0001708e6001708ec000108ec000109ed00170a1800170ad500010afd
00170b1100170b2700170b2d00010b2d00010770000107de000108e90033
0345000b02a9003303b6001703e10017049e000104c6001704da001704f0
001704f6000104f6000102a9003302a90029037a000103e8000106f30042
06f3001706f3001708440001086c001707a2000107ce00170720001706c6
000105c3000106ad004205de000606ce0017081c000107ba001707880001
05de000605de000606d0000106b300010711004106ff001606ff00160850
00000878001607ae000007da001607c7000007c70000096f0016096f0016
0ac000000ae800160a1e00000a4a00160a3700000a370000072c001606d2
0000090b0046051e004404ab009204c1ffee042c004403da008e03fe0052
04b4fff80501008d026700c00490001904c100000481fffd044b007c0462
0044045e004403db004004d6004403df00410486001b05a90044049d0038
0587000a05f20035044f00400509001c05aa004406090044051e0044051e
0044051e0044051e0044051e0044051e0044051e0044051e0044051e0044
051e0044051e0044051e0044051e0044051e0044051e0044051e0044051e
0044051e0044051e0044051e0044051e0044051e0044051e0044051e0044
051e0044051e004403da008e03da008e03da008e03da008e03da008e03da
008e03da008e03da008e03da008e04b4fff804b4fff804b4fff804b4fff8
04b4fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4
fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4fff8
04b4fff804b4fff804b4fff804b4fff804b4fff8026700c0026700130267
00c002670085026700c0026700b5026700580267000d0267005702670034
026700080267002a026700240267ffd30267ffd30267ffd3026700330267
fffe0267ffe4046200440462004404620044046200440462004404620044
046200440462004404620044045e0044045e00440486001b0486001b0486
001b0486001b0486001b0486001b0486001b0486001b0486001b0486001b
0486001b0486001b0486001b0486001b0486001b0486001b0486001b0486
001b0486001b05f2003505f2003505f2003505f2003505f2003505f20035
05f2003505f2003505f2003505f2003505f2003505f2003505f2003505f2
003505f2003505f2003505f2003505f2003505f2003505f2003505f20035
05f2003505f2003505f20035055e004305720067071c0025050800460200
0014020000140200004b02aa012202aa011302aafff402aa000b02aa010a
02aa00f702aa010a02aa00fa02aa011002aa008502aa007802aa005502aa
00b002aa001c02aa002902aa005c02aa004502aafff402aafff402aafff4
02aa006402aa002506660030049c0044069e001e052000100400008b0000
ff930000ff560000ff6a0000fea40000ff77048a001903c6003d041b0043
049c004f03c6003c035b00440431002d04ab002f028400620284000b0431
004f03c6005305df005605080044049d005603c60054049d00560431004c
035b005103c60026049d00370464000b05df001903c6fff703c6fff803c6
0014048a0019048a0019048a0019048a0019048a0019048a0019048a0019
048a0019048a0019048a001905df000a05df000a041b0043041b0043041b
0043041b0043041b0043049c004f049c004f049c004f03c6003c03c6003c
03c6003c03c6003c03c6003c03c6003c03c6003c03c6003c03c6003c0431
002d0431002d0431002d0431002d0431002d04ab002f04ab002f02840062
0284fff30284fff20284000b0284ffe40284002302840062028400120284
00620284fff20431004f0431004f03c6005303c6005303c6005303c60053
03c6005303c600530508004405080044050800440508004405080044049d
0056049d0056049d0056049d0056049d0056049d0056049d0056049d0056
049d0056049d0056064a00470431004c0431004c0431004c0431004c035b
0051035b0051035b0051035b0051035b005103c6002603c6002604e20026
03c6002603c60026049d0037049d0037049d0037049d0037049d0037049d
0037049d0037049d0037049d0037049d003705df001905df001905df0019
05df001903c6fff803c6fff803c6fff803c6fff803c6001403c6001403c6
001403c6005404a40062026a0030018600660463002e02aa008706660030
06660030049c004406660030049c004406660030049c004406660030049c
0044069e001e05200010069e001e05200010069e001e05200010069e001e
05200010069e001e05200010058a003d069b0046052d00bb056b00820000
000000000084000000840000008400000084000000840000008400000084
000000840000008400000084000000840000008400000084000000840000
0084000000e0000000e0000001200000012000000120000001f4000001f4
000001f4000001f4000001f4000001f4000001f4000001f4000001f40000
01f4000001f4000001f4000001f4000001f4000001f4000001f4000001f4
000001f4000001f4000001f4000001f40000036400000364000003640000
036400000364000003640000046000000460000004600000046000000460
000004600000046000000460000004600000046000000460000004600000
046000000460000004600000046000000460000004600000046000000460
00000460000005d4000005d4000005d4000005d4000006f4000006f40000
09480000094800000a3c00000a3c00000a3c00000b1c00000b1c00000b1c
00000b1c00000b1c00000b1c00000c5000000c5000000d6c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c
00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c00000f5c0000
0f5c00000f5c0001000006dc00b4001000c2000700020010001300460000
07e806fd000400010000000c00960001000000000000006c000000010000
000000030015006c00010000000000040015008100010000000000060015
00960001000000000007003100ab000300010409000000d800dc00030001
04090001002a01b40003000104090002000e01de0003000104090003002a
01ec0003000104090004002a02160003000104090006002a024000030001
040900070062026a436f7079726967687420a920313939312d39392c2032
303036204170706c6520436f6d70757465722c20496e632e20436f707972
6967687420a920313939312d3932205479706520536f6c7574696f6e732c
20496e632e20416c6c207269676874732072657365727665642e5a5a4a48
41432b50616c6174696e6f2d526f6d616e5a5a4a4841432b50616c617469
6e6f2d526f6d616e5a5a4a4841432b50616c6174696e6f2d526f6d616e50
616c6174696e6f206973206120726567697374657265642074726164656d
61726b206f66204c696e6f747970652041470043006f0070007900720069
006700680074002000a900200031003900390031002d00390039002c0020
00320030003000360020004100700070006c006500200043006f006d0070
0075007400650072002c00200049006e0063002e00200043006f00700079
00720069006700680074002000a900200031003900390031002d00390032
0020005400790070006500200053006f006c007500740069006f006e0073
002c00200049006e0063002e00200041006c006c00200072006900670068
00740073002000720065007300650072007600650064002e005a005a004a
004800410043002b00500061006c006100740069006e006f002d0052006f
006d0061006e0052006500670075006c00610072005a005a004a00480041
0043002b00500061006c006100740069006e006f002d0052006f006d0061
006e005a005a004a004800410043002b00500061006c006100740069006e
006f002d0052006f006d0061006e005a005a004a004800410043002b0050
0061006c006100740069006e006f002d0052006f006d0061006e00500061
006c006100740069006e006f002000690073002000610020007200650067
0069007300740065007200650064002000740072006100640065006d0061
0072006b0020006f00660020004c0069006e006f00740079007000650020
004100470000b8003c2bb800322bb802bab26e231fb802c0b273321fb802
bfb26e241fbd02b502b30014001f02b402b3b2141fdfb802b3b401040213
1fb802a4b7d21f1fc360311f00ba01bc0001028eb27c181f410902900285
0018001f028f02840018001f028ab2cb181fb80288b2a6181fb802864039
761a1f2fa63fa64fa65fa66fa67fa68fa69fa6afa6bfa60a3f76af76bf76
c0f1041f7c2f7c3f7c03ff7c012f7c3f7c4f7c5f7c5fcba0cb0610411c02
850001000f0284001f0284004f02850050028500cf028400050000028500
4f0284006f0284008f02850090028500a002850006009d0155b2071fb1b8
0184b2031f67b801afb2081fc1bc0123000d001f0142017bb6051f95d707
1fd7bc01b2004f001f010b0108b20d1fd7bc01b2004f001f013501b2b40d
1f110840411d0233021200d9000d020100d9000d01e500d9000d01a900d9
000d019e00d9000d017000d9000d016700d9000d015d00d9000d015b00d9
000d0139400bd90dc4d90d8cd90d78d90db8012f400b5d0def5d0dc65d0d
795d0d4113020c00a2000d01bd00a2000d01a500a2000d018600a2000d01
6800a2000d013000a2000d011c401aa20de9a20dc8a20d70a20d69a20de3
5a0de15a0d635a0d575a0db8012cb20f0009410901f700600801001f01f3
0089019a001f01f2b2d2891fbc01ee0084019a001f01a2b286721fb8019f
b286cd1f4115019d00860801001f019c0086019a001f019b00600401001f
019a00600801001f0197007a0401001f0193b284891fbc018d0084012500
1f018cb284e41fb8018ab277cd1fbc018400640125001f0161b2d2891fb8
015fb284ab1fb8015eb284cd1fbc015a0068019a001f0138b2862d1f4111
0134008902ab001f012d006802ab001f012b00640156001f012a00640201
001f011bb286cd1fb80118400977bb1ffe86791ffcd2b80401b21ffbd2b8
0125b21ff884b80156b61ff677241ff568b80401b21ff464b80156b21fec
89b80201400b1feb84621fea84891fe777b80801b21fe464b80401400f1f
d1d2e41fd084891fcf849e1fc577b8019a40171fbd86811fbc779e1fb864
931fb764811faa84621fa864b80801b21fa1d2b80401b21f9e68b80201b2
1f92d2b80201b61f8b84cd1f8764b80125b21f7f64b80801400b1f7e8643
1f7d84931f7584b80801b21f7477b8019ab21f6f68b80401b41fd260191f
b80191b260181fb8028b401760291f6857281f86603c1f7a6e2f1f6d64e4
1f5e84931fb802874010a92d1fa977281f9f77af77bf7703896eb8010040
271f6e603b1fd06001606e1e1f306e406e506e03606e706e806e906e0455
180918099f029f030290be02130007009001ed00070090013d40430790e6
0790da07909007908f07908207906a07906207905f07905c072408220820
081e081c081a08180816081408120810080e080c080a0808080608040802
08000814b8ffe04032000001001416000001001606100000010006040000
01000410000001001002000001000200000001000002010802004a003041
0b023300400233005002330003008002330090023300020173744bb0c063
004b6220b0fb5323b80105515ab005234218b9000101ff858d16763f183f
123e113946443e113946443e113946443e113946443e11394660443e1139
46443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b2b2b2b73014b5079bc001f01980007001f0194b6071fe8
071f8d072b2b2b2b4b5379bc00900198000700900194b60790e807908d07
2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d5974752b742b2b
742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b00456953424b5058b1080042592b
2b2b2b2b2b2b2b2b2b73747573747573732b2b2b2b2b2b752b2b2b742b2b
2b2b2b0000>
[3933 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 3 <> KVXQMX+Palatino-Roman AddT42Char 
1 132 15 <0001fff2fecf018e0105000c0024bb000c029f000802a2b30805ad09b802
a1b4000c0b000d10d4d83910f4f439003ff43130033e0137363f01363717
020f010e4c4012090f6c164a1a7cb255fee87e8b4422721b071a1cfedfd2
2700>KVXQMX+Palatino-Roman AddT42Char 
1 224 17 <00010088fff6017700e5000b0011b700ad060a03ad090c10d6fd003fed31
30253216151406232226353436010032454631324646e546323146463132
46000000>KVXQMX+Palatino-Roman AddT42Char 
1 288 20 <0001007d000003540593002800534014a604a62802111757145812160825
004703070212b802a3b70d5808b30bd20217b802a340101b584f1e5f1e6f
1eaf1ebf1e051e49291076d45d18e4e4c4fde4e4e4003fd476dc18c03f3c
e4fd3c3130005d132f0137363736371702151114171e0217152623220535
3e02373612351134273427262322070699120a0a6b7eba351a1005031b35
93fd4030fedd982f1705080c010704070925aa047305520a1f364f1b0afe
3644fe8dde7243230f063d08083d090b16141f01274c018af13d1b070410
4c00>KVXQMX+Palatino-Roman AddT42Char 
1 500 41 <0001002c00000434058f0047009d40276a236a247a237a248c238c24fb23
fb24080b230b2402247f207f22562300210121210b180c7f0bb802894037
0947491373182d60395d015d3f5644564176480b0b1a11181aa92d582b48
2b3200135811a909580358060057010234573a573758353908003f3ce4ed
ed3fedc4e4e4fde4111239762f18e4fdc41112392f0110f4e4e4e4e4fd3c
e41076d418f4ed1112392f5d3ce4eded313000715d133516333224333216
1706072326272e012322070607060715163332373e013f01330717232726
272627262322071514171e02171526232207353e0137363736131134272e
022c986a4b01844449793119073f0910349965656c0602010470567f4c1d
110a083f07073f070b05081e39c9474b04021734767f7e71d976340a0c03
010303031733054d400608030455da794112110c362f1bcade030d051749
3ee4f5406d080e070d04ca88815f2411024008084002110f144d15010701
cf88825f23110000>KVXQMX+Palatino-Roman AddT42Char 
1 868 47 <000100250000049e058d00300066b2277f2ab80289400b282832091b5620
561e6000b8025c4029115d07560c562f097f098f09030976311657105713
5815110201200024205822a9282a582f582e0008003fc4e4e4c4fde4c411
12393f3ce4eded0110f45de4e4e4e4fde4e41112392fe4ed313033353637
3637363736351134272e02273516333237150e0107060706031114171633
2037363f013306070607062325227f3e110a040903040303173377f43a40
df77330a0c030103047270011a710d0a284316152918346cfdb060341d11
090e1c5c891a021a88825f2311024008084002110f144d14fef8fd606942
07241e27a695c90802030800>KVXQMX+Palatino-Roman AddT42Char 
1 1120 68 <00020052ffef03cf03c20033004100ac4031060b0c404940692c7625792c
7637763884258a2c9b2ce425e426e4270e09251925021c562a1d416e180e
56201030100210b802854015434000217f018f019f010301013b7a202330
230223b8028e402a4200402a411d34212a1d2a0920052e152e252e352e45
2e05f42e012e830907175a1c1a58180a3e84200b003fed3fe43ced3fed5d
71111239392f1acd10c9101acc0110f65dfd392f5d1ac91a10fc5de4c4fd
3c3ce4313000715d13273635342736373633321617161507111417161716
1f011526232207370e0123222635343e0137362437362e012322060f0106
050e010706070615141633323637d93501017f513e4d729c261a0408060d
0a2041523e3c6405cc4c3a79872f42223a010580013072523b590a121b01
be82b82617111a524943834102ad0e17282a19531d1556503861b7fed630
150f07060206390707b09a27816b457243101b3e0f5f6a44200b243cbf16
361d1122323d4a534d4d0000>KVXQMX+Palatino-Roman AddT42Char 
1 1492 72 <00020033ffe8039103c800240032008340579a2ed409d50eeb08e60de60e
06451f501f631ff93104061e01181d252b25871c1d1d2130306412070040
242101100109211a212a213a214a21052183060b00a42d7a18564f166f16
af160316cb34251d7a200a010a7c3310f65dfdc410fe5de4ede4003fed71
3dd438181ac81a393fed1112392f3cfdc4111239313001715d005d250706
070e0123222e01353436373e01373633321e0115140706070623211e0233
323637011617163332373635342623220603742045202f794384d6773f28
1d7a3c4f5c70b5540448396c6cfebf025fa75a3d7959fd8f1c4e9538852a
01806b718a9b482b0e151d6edb9373b92c2053182166b06f1c280e04088f
b1542734018803030505180d9e94a2000000>KVXQMX+Palatino-Roman AddT42Char 
1 1780 74 <00030047fdca045c03c9003a0047005e01414099662566266c286c297b28
7b29733d73538b288b29853d961c962093539357ab25cb25db25ec25f654
14065401092f09301a2f1a302b202b21292f29303b203b216035603d6b44
6046605360547d437d44ab0cac0dab2dbd0db325bd2dcc0dcc2ddd0ddd2d
1c485b5e4f4c25035527154a0d12162e3f0b010300252a324f52273b4c2e
120d0c051039594200011a0b642f3f013f3f4a3603e700b80187b6456436
07165615b8015f400d5d204a304a024a0b55641e0f60b801a0b306597a1a
b80131b30603f301b80136b2427a06b80221401432527a22f33210aa2af3
3b7a003220320232495fba012e012400182b4e10f44d5dedf4ed10f4ed10
fdedf4e410f4ed10e6003fed3f5d3cfde43fedf4ed1112392f5ded011112
391112391217391139123911123900111239111239123939111239121739
10e63130015d00715d01170607231615140e010706270607061514161716
3337321e011514060423222e013534363736372e0135343736372e023534
3e01333216173605141e0133323635342623220601220706070607060706
15141633323e01352e022726045408270cba174f9856385f41110b1d1e2d
73d871753887fef6a58ac25d1b207a35532f1e31695a613668f669447b37
bcfd333567425684845d61760125952613184f050a0c15a38f6aaf590321
2f29180375133b163b344c9167120c02341a12151825070c043b794c67d5
7b56904f2c4d2c382a1b30181458294b1943734566a1652c2c01de478644
6f7b7e957bfcf004031138060a1f3839699155934a4042260c03>KVXQMX+Palatino-Roman AddT42Char 
1 2376 76 <0002002d000002260580000b002f005e401060067006800690060406fe00
040c5a0db8018740170f071c5a225a1f58211d0a09fe035610561d6b0f31
0131b80285400b126e0c6b216b28562c562ab90284003010f4e4e4e4e4fd
e45de4e4f4ed003f3ce4eded3ff4ed3fed5d313001321615140623222635
34360335363717061d01121716171e01171617152623220735373e013736
3734133534272e0101212f41422e2f4242c5c28416080501010a05101006
69985b50b65f1517060b03060a061f0580422f2e42422e2f42fdb739163e
10d571b6fefc153217090d0401023907073901010d0a14330d0112b0951c
0f0f0000>KVXQMX+Palatino-Roman AddT42Char 
1 2620 79 <0001002d0000022405d2002e004fb30f300130b8028540142b6b1bb32356
216e07560c56126b006b60090109b80284b32f125a13b8012c400b16002a
5a015a2d582b000a003f3ce4eded3ff4ed0110f45de4ede4e4fde4e4e4e4
5d31303335373e0137363736131134272627262726233536373633321615
140f01060f0111121716171e0117161715262322335e1617060b02010606
0407050b0f7be2580d07070802010501020501010b041010076888676239
01010d0a14330d0112019fa7b2780e0a04073b1c2a060908070d21b37e9c
fdf9fefc153217090d0401023908>KVXQMX+Palatino-Roman AddT42Char 
1 2844 85 <0001002f0000030003c3003c008540230b280b290b2aa41fa420a421d628
d629fb28fb290a2b282b29022838161d3823115a12b80187402c17562c7a
2307385a015a3b5839000a402921285626263e0a3832561a561d306e116b
006b08560d565f0a010ab90284003d10f45de4e4e4e4fd3ce4e4cc111239
2ff41ac81a003f3ce4eded3fedf4f4ed111239111239313000715d333536
373e01373637123d0134272e02073536373633321615140706073e01373e
0133321f010607232e012322061d0114171e02171617152623222f710911
11050a020603020d2172ca5d140707080105012d4c111e4e2a2a29060f02
2d173d2e4d6c0501080d0f1e84b07c80390202030d0c1731010b0c77505c
3b160b01391c2d0a0a0a07093d8034660f1a1f120e8565302c7f7f6742af
3e220f0509093907>KVXQMX+Palatino-Roman AddT42Char 
1 3152 87 <0001002efff2028c04fb003100834021ea29012e272e282e293d273d283d
294d274d284d29092820400121000805030707b80254402803124700582f
f60a581003061f1c8420250b112020332e08b30a1756166e000556032a56
5f2e012eb90284003210f45de43ce4ccfde43ce41112392fc4003fc8fdc0
3f3ce4fde476c41810f411123939101ac81a0138313001715d1335363734
27363717060316333237363717072623220703061e02173236371706070e
0123222e0227363736351123222e643b066841180b0d5010095e341a0715
3f35355e06030a1c2d362933270c2f2c26422b353f342205010301293203
102a261eee4224291453fee501020103075d0101fe69953a2b1a07070e27
25280e09182b424744511013019f>KVXQMX+Palatino-Roman AddT42Char 
1 3436 88 <0001001affea049f03c4006200d840481708170914371438143927112712
2713243724382439c409c40ac437c4380f0c380c390c3a2208263a2064bb
37ed1008111811071438380707090709383d3509074e05224a5a234bb801
874044274e07005a035805010a35840e0b09170738313f0f4b014b6b0558
073d5642563f6e016b52b35c560f5a01205a6f5aaf5ae05aff5a055a642b
b3316e1a561456236b0017b90284006310f45dece4e4fde410d45d71e4e4
ecfde4e43ce4e45d111239111239003fed3f3ce4ed3fc4f4c4fdc4111239
391139390709101ac901111239383130015d005d25152623220736370607
06070e01232226272e013534363d01342726272627262322273536373633
32161514070607061d01141e013332363736373e0137363d013427262726
2726232227353637363332161514070607061d0117161716171e01171604
9f83434a4c06033c5313122b563c516d271d1f0503020704090f263720d7
611009070901040306215f46305f261c1d160e020503020704090f263720
d7611009070901030406020301010a051010063939070751653053130918
152c2d21694a233e1eab1a6942140a060a01391835090a0a080c205ba739
c37a633b211f17271d1f1e5857541a6942140a060a01391835090a0a080c
205fa339898b79153217090d04010000>KVXQMX+Palatino-Roman AddT42Char 
1 0 0 <0002010000000500050000030007005bb10504b80128b2000607bb012800
02000101d0400b0303000a0947474a020605b80128b60303027b000704b8
0128b401004908d5b901dd00182b4e10f43c4df53c10fd3c10f53c4e1045
6544e6003f3c4d10fd3cf53c10f53c3130211121112521112101000400fc
2003c0fc400500fb002004c0>KVXQMX+Palatino-Roman AddT42Char 
KVXQMX+Palatino-Roman /CharStrings get begin
/space 3 def
/comma 15 def
/period 17 def
/one 20 def
/F 41 def
/L 47 def
/a 68 def
/e 72 def
/g 74 def
/i 76 def
/l 79 def
/r 85 def
/t 87 def
/u 88 def
end
KVXQMX+Palatino-Roman /Encoding get
dup 32 /space put
dup 44 /comma put
dup 46 /period put
dup 49 /one put
dup 70 /F put
dup 76 /L put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 114 /r put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/ZDWBPH+Palatino-Roman /KVXQMX+Palatino-Roman findfont ct_VMDictPut/ZDWBPH+Palatino-Roman*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /.notdef /period 2{/.notdef}rp /one 20{/.notdef}rp /F 5{/.notdef}rp /L 20{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 5{/.notdef}rp /r /.notdef /t /u 138{/.notdef}rp]ZDWBPH+Palatino-Roman nfZDWBPH+Palatino-Roman*1 [7.4696 0 0 -7.4696 0 0 ]msf133.276 8.89261 mo(Li et al., Figure 1)[4.63857 2.17366 1.8674 3.69748 2.43512 1.8674 3.93648 2.1886 1.73294 1.8674 1.8674 4.10081 2.15872 4.43694 4.70583 3.07004 3.57796 1.8674 0 ]xsh%ADOBeginSubsetFont: SBVPMX+Helvetica-Bold Initial
ct_T42Dict begin
-1.016 -0.48 1.434 1.156
 256 array 0 1 255 {1 index exch /.notdef put} for  /SBVPMX+Helvetica-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f321186289e000000cc000000606376
74206741296a0000012c000003886670676db24d5cc5000004b400000b97
676c7966209ba2e300005fa40000026868656164d03e6d8b0000104c0000
0036686865619a0f85080000108400000024686d7478c2fdbc55000010a8
000022486c6f63610014566c000032f00000224c6d61787011060c900000
553c000000206e616d65ea5eadef0000555c0000067470726570b552e591
00005bd0000003d367646972000000000000000000000000000303d402bc
00050000059905330000011e05990533000003d000660200000000000000
000000000000e00002ff5000785b00000000000000007079727300200009
feff0600fea4003d07ae01db2000019f4f010000044205c2000000200000
05c0001105c2002d0597001d0442001d0000ffda0000ffdb0000ffdafe53
ffef05d0000afffdffed03340000012200000122dffb011400af000700b7
007e000400d200aa0109002300ed013200d9011d012a00d800fe00db00e2
001a008b00a0001a004500e801f6000900e90128013200360082009e009f
ff700070003f003f00e801050015003800e9ff7bffc8fff90042008a00c4
01070113011dffb9002f00870087009a009c010c0262ffb10018004c0077
0080008200c900daffb2ffea001a003600e50111012f043bffdd00020005
001a0039008900aa00b701210123012a015bffe5000200180023005c00aa
ff4dff76ffb2ffef001a002f004e007b008a00e1011f0126012b019a01de
03edff80ff8e0007001c004e005500630063006d00810098009c00ad011f
01260162041c051500390044004b0063008e00cc00e800f2010001290142
017802d503ea03f0043b049affc400050055005c0060009f0103011d0124
01550164017001ad01b401c301f602370261033903d5047004a100020055
008800a100bd00c700d300dd00eb00ed00fa00fd0104012b013e014f017b
019d01ad01e20233025d027d028c02da02ef033103de0407048b058505bb
ff04ffd5fffa0007001e002a003b004700510058006500650066006e0075
007f00840107009700b100c300cc00df00df010a0110012f013101470154
015b016b0179009101a401ba01dc01e401e601e901f60213021f0223022f
0276027d0282028902ad02b202b902ed03110374037d03c003de03f60415
045d04c004c004df052d0574061c064b0751fe94fedfff2dff90ff9affea
0016001600240029002d003e0104006d006d008400870089008e009c00a4
00ab00ae00b200b2fffb013900c400d100df00e100ef00f70121011c011c
012101320138015001510154016c016d017f019801a401aa01b601ba01bb
01bb00d701d701fb01fb01fe00190209022d025b026102790279029a0098
02d302da02ef030c03210328032d034b0353fff103ad03b103f20425045a
0471047b048a0498049f051c053d0557055a0570059505b605cb05d605ef
05f4061d068706a406b406d307080734079807fe012201320120012500b4
00be0082009603700132012400430184011d015600cc010500ed00c500fb
00f900c000a7011d00fe035500880026ffa100b8ff8800dd00bd00b5037c
003c00910293024aff3f03a803090132fff700820030002a002a002a002a
002a002a402a292827262524232221201f1e1d1c1b1a1918171615141312
11100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b090
51582320b00d44235921212d2c20204518684420b001602045b04676688a
4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b00043617d
6818b0004360442d2c45b01a234445b01923442d2c2045b00325456164b0
50515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b000
4360442d2c20b0032552582359212d2c69b04061b0008b0c6423648bb840
0062600c642364615c58b0036159b002602d2c45b0112bb0172344b0177a
e5182d2c45b0112bb01723442d2c45b0112bb017458cb0172344b0177ae5
182d2cb002254661658a46b040608b482d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b0005058b21a
401a4523604459b0005258b219401945236044592d2cb9187e3b210b2d2c
b92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b
2d2cb9187ec4e00b2d2c4b525845441b2121592d2c0120b003252349b040
60b0206320b000525823b002253823b002256538008a63381b2121212121
59012d2c456920b00943b0022660b00325b005254961b0805358b2194019
4523616844b21a401a4523606a44b209191a45652345604259b00943608a
103a2d2c01b005251023208af500b0016023edec2d2c01b005251023208a
f500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c00
3c2d2c20b001610110203c003c2d2c764520b00325452361681823686044
2d2c7645b00325452361682318456860442d2c7645b00325456168234523
61442db8002a2c4bb800095058b101018e59b801ff85b800441db9000900
035f5e2db8002b2c2020456944b001602db8002c2cb8002b2a212db8002d
2c2046b003254652582359208a208a49648a204620686164b00425462068
6164525823658a592f20b00053586920b000545821b040591b6920b00054
5821b0406559593a2db8002e2c2046b00425465258238a592046206a6164
b0042546206a61645258238a592ffd2db8002f2c4b20b0032650585158b0
80441bb04044591b21212045b0c05058b0c0441b2159592db800302c2020
456944b001602020457d691844b001602db800312cb800302a2db800322c
4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a23
5920b0032653582321b801008a8a1b8a235920b0032653582321b801408a
8a1b8a235920b80003265358b0032545b8018050582321b8018023211bb0
03254523212321591b2159442db800332c4b535845441b2121592db80034
2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db800
352c2020456944b001602db800362cb800352a212db800372c2046b00325
4652582359208a208a49648a204620686164b00425462068616452582365
8a592f20b00053586920b000545821b040591b6920b000545821b0406559
593a2db800382c2046b00425465258238a592046206a6164b0042546206a
61645258238a592ffd2db800392c4b20b0032650585158b080441bb04044
591b21212045b0c05058b0c0441b2159592db8003a2c2020456944b00160
2020457d691844b001602db8003b2cb8003a2a2db8003c2c4b20b0032653
58b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653
582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920
b80003265358b0032545b8018050582321b8018023211bb0032545232123
21591b2159442db8003d2c4b535845441b2121592db8003e2c4bb8000950
58b101018e59b801ff85b800441db9000900035f5e2db8003f2c20204569
44b001602db800402cb8003f2a212db800412c2046b00325465258235920
8a208a49648a204620686164b004254620686164525823658a592f20b000
53586920b000545821b040591b6920b000545821b0406559593a2db80042
2c2046b00425465258238a592046206a6164b0042546206a61645258238a
592ffd2db800432c4b20b0032650585158b080441bb04044591b21212045
b0c05058b0c0441b2159592db800442c2020456944b001602020457d6918
44b001602db800452cb800442a2db800462c4b20b003265358b0801bb040
598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b80100
8a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003265358
b0032545b8018050582321b8018023211bb003254523212321591b215944
2db800472c4b535845441b2121592db800482c4bb800095058b101018e59
b801ff85b800441db9000900035f5e2db800492c2020456944b001602db8
004a2cb800492a212db8004b2c2046b003254652582359208a208a49648a
204620686164b004254620686164525823658a592f20b00053586920b000
545821b040591b6920b000545821b0406559593a2db8004c2c2046b00425
465258238a592046206a6164b0042546206a61645258238a592ffd2db800
4d2c4b20b0032650585158b080441bb04044591b21212045b0c05058b0c0
441b2159592db8004e2c2020456944b001602020457d691844b001602db8
004f2cb8004e2a2db800502c4b20b003265358b0801bb040598a8a20b003
2653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a2359
20b0032653582321b801408a8a1b8a235920b80003265358b0032545b801
8050582321b8018023211bb003254523212321591b2159442db800512c4b
535845441b2121592db800522c4bb800095058b101018e59b801ff85b800
441db9000900035f5e2db800532c2020456944b001602db800542cb80053
2a212db800552c2046b003254652582359208a208a49648a204620686164
b004254620686164525823658a592f20b00053586920b000545821b04059
1b6920b000545821b0406559593a2db800562c2046b00425465258238a59
2046206a6164b0042546206a61645258238a592ffd2db800572c4b20b003
2650585158b080441bb04044591b21212045b0c05058b0c0441b2159592d
b800582c2020456944b001602020457d691844b001602db800592cb80058
2a2db8005a2c4b20b003265358b0401bb000598a8a20b0032653582321b0
808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003265358
2321b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8
0003265358b0032545b8018050582321b8018023211bb003254523212321
591b2159442db8005b2c4b535845441b2121592db8005c2c4bb800095058
b101018e59b801ff85b800441db9000900035f5e2db8005d2c2020456944
b001602db8005e2cb8005d2a212db8005f2c2046b003254652582359208a
208a49648a204620686164b004254620686164525823658a592f20b00053
586920b000545821b040591b6920b000545821b0406559593a2db800602c
2046b00425465258238a592046206a6164b0042546206a61645258238a59
2ffd2db800612c4b20b0032650585158b080441bb04044591b21212045b0
c05058b0c0441b2159592db800622c2020456944b001602020457d691844
b001602db800632cb800622a2db800642c4b20b003265358b0401bb00059
8a8a20b0032653582321b0808a8a1b8a235920b0032653582321b800c08a
8a1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321
b801408a8a1b8a235920b80003265358b0032545b8018050582321b80180
23211bb003254523212321591b2159442db800652c4b535845441b212159
2d0000010000000100000d3fac585f0f3cf50011080000000000a2272e80
00000000cb97f49ff7dcfc270b7e09460001000900010001000000000001
00000629fe2900000c01f7dcfcdb0b7e0001000000000000000000000000
0000089205c7009a00000000023900000239000002aa00e103cb00a70473
000004730038071d002f05c7006f01e7006302aa005902aa0015031d002f
04ac00490239007602aa002f023900800239ff90047300400473008e0473
00400473003604730036047300360473004004730034047300360473003d
02aa00e802aa00e804ac001704ac004904ac001704e3007b07cd00c705c7
003405c700a105c7005c05c7009c055600a504e3009c0639005505c7009a
023900840473002d05c700a104e3009c06aa009705c70097063900650556
00a30639006505c700a30556005504e3002105c7009c0556002f078d001e
055600210556002304e3003402aa00800239ff9002aa002f04ac008b0473
000002aaffce0473003b04e3007b0473004704e3003f0473002f02aa0015
04e3004204e300870239008902390009047300820239008b071d008004e3
008704e3004204e3007d04e3003c031d00820473004202aa001504e3007d
0473001a0639000e0473001a0473001504000021031d0000023d006a031d
002d04ac000405c7003405c7003405c7005c055600a505c7009706390065
05c7009c0473003b0473003b0473003b0473003b0473003b0473003b0473
00470473002f0473002f0473002f0473002f023900760239ffce0239ffb6
0239ffd504e3008704e3004204e3004204e3004204e3004204e3004204e3
007d04e3007d04e3007d04e3007d047300470333005e0473004504730042
0473004102cd00910473ffc304e3008905e5001a05e5001a080000cb02aa
007602aaffd504640049080000120639004705b400190464004904640047
046400490473ffea049cffcb03f4002405b4fff706960007046400290231
007602f6002802ec000e06250031071d003804e3002a04e3006d02aa00e1
04ac00490464ffd50473001e0464004904e5fffa047300af047300000800
00bd0239000005c7003405c70034063900650800004b078d003f0473fffb
080000f10400008b0400009702390089023900840464004903f400210473
0015055600230156fea305f4004402aa00aa02aa00aa04e3001c04e3001c
047300470239007102390092040000920800000405c70034055600a505c7
0034055600a5055600a5023900760239ffb60239ffd50239ffce06390065
06390065065200690639006505c7009c05c7009c05c7009c0239008902aa
ffb602aaffa802aaffbd02aaffc902aa009a02aa004202aa001202aaffd3
02aa004202aaffb604e3fff10239ffe8055600550473004204e300340400
0021023d006a05c7001204e3006d05560023047300150556008004e30080
04ac004904ac005502aa005002aa001a02aa001206ac002f06ac005a06ac
004e047300000639005504e3004202390084055600550473004205c7005c
0473004705c7005c0473004704e3003f05c700340473003b05c700340473
003b05c700340473003b05c7005c0473004705c7005c0473004705c7009c
0600003f055600a50473002f055600a50473002f055600a50473002f0556
00a50473002f055600a50473002f0639005504e300420639005504e30042
0639005504e3004204e3004205c7009a04e3008705c7000f04e3fff1035c
fffc037100010366000a035c000c0239000b0239000306ac008404720089
0473002d027bffc905c7008e0473005804e3009c0271008b04e3009c0239
002704e3009c0356008b04e3009c0329008b05c7009704e3008705c70075
04e3005c05c7009704e3008704e300870639006504e300420639006504e3
00420639006504e3004205c700a3031d008205c70092031d006905c700a3
031d00360556005504730042055600550473004204e3002102aa001504e3
002103b8001504e3002102aaffe305c7009c04e3007d05c7009c04e3007d
05c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c04e3
007d078d001e0639000e055600230473001504e300340400002104e30034
04000021055600550473004204e3002102aa0015047300360000fc910000
fc900000fc250000fc180000fc2c0000fc360000fd0d0000fc450000fcb5
0000fbd80000fc250000fd010000fc9d0000fcb50000fbfb05c700120639
005504e3004204e3009c0239008b05c700a10473008205c7009704e30087
05c700a3031d0080020e000802aa00e702aa002f023900090473008202aa
0015047300300473002e047300460473003a0000fcfb0000fc2c0000fc36
0239ffcc0239ffc905c7009704e300870000fc2b05c7002905c700a805c7
00a804a000a805c70019055600a80800001904e3003d05c7008f05c7008f
05c700b205ec004e06aa008f05c7008f0639005a05c7008f055600a805c7
005a04e500190556003106ac003d0556001b05c7008f0556005a078d008f
078d008f06aa002f078d00a8055600a805c7005a0800008f05cb00460473
003904e3004604e3008f038d00870531001f0473003506ac00100400002d
04e3008704e3008704e3008f0556004605c7008704e3008704e5004604e3
008704e3007f04730046040000290473001d06a800460473001f04e30087
0473003f06ac008706aa00870556002906aa008704a000850473004606aa
008704e30056055600a80473003504a000a8038d0087023900830239008f
0473002f05c7005a047300460239ffcf0239ffcf080000140750004607e9
008f070e0087023900040556004e0664001704e3002905c700b204e3008f
047300440617001004e30029055600310473001d05c7008f04e3008504e3
00a8038d00870000fd010000fd010000fd010000fd010000fbd80000fd43
0000fc9e0000fc360000fc910000fc900000fc2c0000fd0d0000fc450000
fcb50000fd430000fc250000fc250000fc360000fc360000fc180000fc54
0000fc2c0000fc180000fc2c0000fc2c0000fc2c0000fd0d0000fc2c0000
fd010000fc360000fc240000fc9e0000000002aa001504e30086071d0080
031d0081071d0080031d0082031d0081040a0046040a004702390089030b
ffd802aa001502aa0015047300190639000d0473001404e3007b04e3007b
04e3007b0473008104bc003b04bc003b05c7005b05c70012049e00480556
00a4055600560473004304c3003d0758009c0671007d0633005b023d00a5
043b00a502aa00e10494001b04730047011d004502aa00af02aa00af0b62
0004056500bd02a500bd040000970239008502aa002f0473000004e200af
04e200af06e400af06e400af02aa002f02a500bd02aa002f080000f10554
01d000000000000000000000000000000000000000000000000000000000
000000000239000002390000023900000239000002390000023900000239
000002390000023900000000000000000000000000000000000000000000
023900000239000002aafff6043b00a504e3007b02aa002f02aafff60473
00050473000005c7003404e3009c0473002e07920065065c00420000fd22
0000fd220000fd220000fd220000fc900000fc8d0000fd470000fc790000
fc990000fc940000fc860000fc9a0000fc080000fcf10000fcf70000fc80
0000fc820000fc540000fbfb0000fc810000fc810000fc810000fc820000
fc820000fc3602aa00af04e200af02aa00af02aa00af0464001304640019
04510011046e002405b4007705b400830231ff5e0231ff6e0464ff520464
ffd5046400110464001a08fa005e0816005e05c700a10239008404720084
06ab0084078f00840556002f078f002f09c8002f0c01002f078f00840556
0021078f002109c8002104e3009c05c7005c05c7009c06aa009702390089
0472008906ab008906ac00890473001a06ac001a08e5001a0b1e001a06ac
00890473001a06ac001a08e5001a0239008b0473004704e3003f071d0080
09d70048090f0058087b003f0876006d06af006d042c008b09440063073f
00680667005d05c700340473003b0239ffb60239ffb60639006504e30042
05c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c04e3
007d05c7009c04e3007d05c700340473003b05c700340473003b08000012
071d00380639005504e3004205c700a1047300820639006504e300420639
006504e300420239ffb60a0c006d0939006808ab003f0639005505c70097
04e3008705c700340473003b08000012071d00380639004704e3002a05c7
00340473003605c700340473003b055600a50473002f055600a50473002f
0239ff1d0239ff190239ffc60239ffcc0639006504e300420639006504e3
004205c700a3031dffaa05c700a3031d005e05c7009c04e3005c05c7009c
04e3007d05c7009a04e3008705c700340473003b055600a50473002f0639
006504e300420639006504e300420639006504e300420639006504e30042
0556002304730015040000970239008405c700340473003b05c700a104e3
007b05c700a104e3007b05c700a104e3007b05c7005c0473004705c7009c
04e3003f05c7009c04e3003f05c7009c04e3003f05c7009c04e3003f05c7
009c04e3003f055600a50473002f055600a50473002f055600a50473002f
055600a50473002f055600a50473002f04e3009c02aa00150639005504e3
004205c7009a04e3008705c7009a04e3008705c7009a04e3008705c70082
04e3006605c7009a04e300870239ffa80239ffa00239ffd90239ffe905c7
00a10473008205c700a10473008205c700a10473008204e3009c0239008b
04e3009c0239ffbd04e3009c0239ffbd04e3009c0239ffae06aa0097071d
008006aa0097071d008006aa0097071d008005c7009704e3008705c70097
04e3008705c7009704e3008705c7009704e300870639006504e300420639
006504e300420639006504e300420639006504e30042055600a304e3007d
055600a304e3007d05c700a3031d008205c700a3031d008205c700a3031d
005105c700a3031d00010556005504730042055600550473004205560055
047300420556005504730042055600550473004204e3002102aa001504e3
002102aa001504e3002102aaffe304e3002102aa001505c7009c04e3007d
05c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c04e3
007d0556002f0473001a0556002f0473001a078d001e0639000e078d001e
0639000e078d001e0639000e078d001e0639000e078d001e0639000e0556
00210473001a055600210473001a055600230473001504e3003404000021
04e300340400002104e300340400002104e3008702aafffc0639000e0473
001502aa001505c700340473003b05c700340473003b05d3003404ec003b
05d7ffe804a8ff8505c70034048d003b05c700340473003b05c700340473
003b05c700340473003b05c700340473003b05c700340473003b05c70034
0473003b05c700340473003b055600a50473002f055600a50473002f0556
00a50473002f057500a5047d002f0556002b04a2ffb4055600a50473002f
055600a50473002f055600a50473002f0239008402390089023900840239
00890639006504e300420639006504e300420639006504e3004206390065
04e3ffc00639006504e300420639006504e300420639006504e300420792
0065065c004207920065065c004207920065065c004207920065065c0042
07920065065c004205c7009c04e3007d05c7009c04e3007d0758009c0671
007d0758009c0671007d0758009c0671007d0758009c0671007d0758009c
0671007d0556002304730015055600230473001505560023047300150556
002304730015055600a50473002f055600a50473002f056d008605df008e
048600370486008708d9002006dd000c056d002904860027056d00290486
0027056d00860486003708d9002006dd000c054f003d040a002b05df008e
0486008705df008e048600870655005a0486005005df005b04120050056d
00170412001e056d00170412001e056d00170412001e05ac0059047a004c
074800a80600008d08000012071d003806aa0097071d008005c700a3031d
00600222ffbc05c7003705c700a204e300a205c7001b055600a204e3003d
05c700a206390068025e009305c700a20558002d071a00ae063900ba04e3
00520639006805c700a2055600a204e3002f04e500290556002705c70042
0556002d06ac007b06390044025e00040556002704e5004804d500770473
002504e3006204730077038d005204e1009a04e100810239008d0473008d
0473003104e1009a047300310400005604e5006004e3009a0473004e04e5
00600400004604e1009a05c700580473001405c7006d05c7003b0239ffe9
04e1009a023900710222ffb20000fd4802c601a401c7006a01c7006a0000
fc910000fc9001c7006a03290014032900140340006a036a006a02220006
0222008c0376006a01c7ff9e036e006a01c7ff9e08000073062500310639
fffe0239008902390084055400e1078d007b078d00e10473002f0473002f
05c700340473003b0473003b055600a50473002f055600a50473002f0556
00a50473002f0239ffbb0239ffb7023900890639006504e3004206390065
04e300420639006504e30042055600550473004205c7009c04e3007d0473
001a0758009c0671007d0602003f04e3ffff05c7000d04e30087071d0080
043f009c0460007f0400006004d9006e0356fff8048b00350602005d0473
00350655004b048600370639006502aaffef07ac001b07ac001b09b60087
0000f9290000f9d30000f9d30000f9650000f9dd0602005d047300350655
004b048600370222008c032900140464003104e300340400002104e30042
05300087052b003f04e3007704e3003f04e3004204e30087054500870271
008b078d003f03c60081031d008104e3003c04e3fffe04e3fffe0800003f
064c001504db001506b00015057f008b0555008b01a4006f01a4006f0239
008402aa010d02aafff602aa00af02aa000702aa010d02aafff602aa00af
02aa000701a4006f01a4006f02aaffef02aafff60272004402720044011d
0005018f0041018f004101e30041031d0007023a000b0272003e0272003e
0256000c0256000c025600130256001302aa002f02560025025600250256
0025023900210239000d011c00450256002b023900120256001302560013
0256000c0256000c02aa007b0272003e0000fc870000fc690000fc690000
fd260000fd260000fc2c0000fc2c0000fb4f0000fc690000fc2c0000fc87
0000fc810000fc810000000002390000000000000000000000000000031d
002f031d002f08dc00af07ac001b02aa00e809c6007b07ac001b071d0104
0702000602aa008002aa0080000000000000000000000000000000000000
00000000000006c5001b023a0020023a001b0239001b02390020023a001a
0239001b0239001e0256002501550018025600250155002e0155000a0272
0044023a0020023a0047023a00200239001b023a001b0239001b02390020
023a001a0239001b0239001e0256002501550018025600250155002e0155
000a06f900340639005504e3009c04e3009c0556002307d6fff70600002a
078e001104e300820800004e06ac002f05c7005c05c7006f04e5fffa0696
000707d6002507d600310556009b04e300730556009b04e3007304e30013
06390065052b009a02ad002f036dfff605c7004203060017030bffd804e3
007b04e3007b023900090239000904e3004204e5004804e5004804e50048
04e5004804e5004804e5004804e5004804e500480629006a063b006a086e
009b081d006e078d006a07f0006a078e0070078e00480473007704730077
04730077047300770473007704730077071d006a071d00b208cc009008c4
009a0896009108c0009504e1009a04e1009a04e1009a04e1009a04e1009a
04e1009a04e1009a04e1009a078e006a078e006a093d006a0935006a0907
006a0931006a078eff9e078eff9e0239008d0239008d0239ffbd0239ffc1
0239ffd10239ffc10239ffd30239ffd30425006a0425006a05d4006a05cc
006a059e006a05c8006a0425ff9e0425ff9e04e5006004e5006004e50060
04e5006004e5006004e500600800006a0800006a09af006a09a7006a0979
006a09a3006a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a
04e1009a04e1009a071d006a08c4006a08c0006a0792ff9e05c7003b05c7
003b05c7003b05c7003b05c7003b05c7003b05c7003b05c7003b07ec006a
07ec006a099b006a0993006a0965006a098f006a07ecff9e07ecff9e04e5
004804e50048047300770473007704e1009a04e1009a0239005102390056
04e5006004e5006004e1009a04e1009a05c7003b05c7003b04e5004804e5
004804e5004804e5004804e5004804e5004804e5004804e500480899006a
0878006a0a73006a0a7c006a0a15006a0a77006a09c7006609c7006604e1
009204e1009204e1009204e1009204e1009204e1009204e1009204e10092
09c7006a09c7006a0b76006a0b6e006a0b40006a0b6a006a09c7ff9e09c7
ff9e05c7003b05c7003b05c7003b05c7003b05c7003b05c7003b05c7003b
05c7003b0a25006a0a25006a0bd4006a0bcc006a0b9e006a0bc8006a0a25
ff9e0a25ff9e04e5004804e5004804e5004804e5004804e5004804e50048
04e5004805c7003705c7003706cd000606cd008c07d8003704e1009204e1
009204e1009204e1009a04e10092076300060784008c07e2000607ca008c
080700a20239ffbf0239ffaa0239ffb60239ffb60239ffcf0239ffc9025e
ffd2025effc2043b002d0453008c04e1009a04e1009a04e1009a04e1009a
04e3009a04e3009a04e1009a04e1009a055600270556002707a500580797
008c071d006a05c7003b05c7003b05c7003b05c7003b05c7003b07f60045
082b0059086500060899008c0852003104e500480473007704e1009a0239
008d04e5006004e1009a05c7003b06cd008c0784008c07ca008c0453008c
07d4005e0775006c0842006c0239ffb604e1009a067d003d04f700db04f7
007b03220013031e002b0464003104e5004804e5004804e5004804e50048
04e5004804e5004804e5004804e5004804e5004804e5004804e5004804e5
004804e5004804e5004804e5004804e500480239ffb60239ffb60239ffb5
0239ffb60239ffb60239ffb60239ffb60239ffb60239ffb60239ffbe0239
ffbe0239ffb50239ffbe0239ffbc0239ffbe0239ffbe0239ffbe0239ffbe
04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1
009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a
04e1009a04e1009a04e1009a06cd000606cd008c0629006a086e006a078d
006a063b006a085c006a07f0006a06cd000606cd008c0629006a086e006a
078d006a063b006a085c006a07f0006a047000060453008c0453008c0425
006a05d4006a059e006a0425006a05cc006a05c8006a047000060453008c
0453008c0425006a05d4006a059e006a0425006a05cc006a05c8006a07a5
00060797008c0797008c071d006a08c4006a08c0006a071d006a08c4006a
08c0006a07a500060797008c0797008c071d006a08c4006a08c0006a071d
006a08c4006a08c0006a05c700a305c7005c063900650239003b05aa008f
055600a305c7004a0000fcfb04b5004a04e3003f0639005a04e5004607b0
004107b4004205e5001a06ac004506ac004506ac004306ac0043063900b4
05560029082200a205e1005b06ac007b05c7006d05c700340473001a080a
00a20642005b0547001503d0001f0636003005ba002905c700a30473003b
02aaffcc04ac009a0425009a063d009a0524008705c700a10473008204e3
00340400002108d9ffef06ddfff7054f0062040a0033056d00a00412006a
05df00a20486007c05df005f0412002c04f8002204120028056dfff80412
ffe105ac00a0047a006205ac00a0047a0062055600230556002304d900ac
037c007505ac00a004d7006206e300a00552006a077600a205d9007c0556
0023055600230731001305d100230767002505f800250767002505f80025
075b00360543001b05df00a20486007c0473003b054f00a6054f00a606ac
007b04f0005b088a003e06a6003305c7003904e1001d05eb002f04e3001a
04730047054f0062040a003305f10022049c001402390089056dfff80412
ffe10556002f05c7003405c7005c0473004704e3fff104e3002102390059
031e002b04e30021055600a304e3007b04e3007b055600a50473002f0473
002d0239fff305c7009c01a9001a01a9001a02aa000c02aa000c02aa0007
02aaffe102aa00e802aa002402aa0024067d0057067d003d067d00ad02aa
00e8067d003d067d005c067d011002aa00e802aa00e8063900680412002c
0412002c055600a504e3008005c7005c06aa0097063000970548001605c7
005c05c7005c05c7005c04730047047300470473004704e3003f061b003a
06a80039062e003b0384002b062200240549003b04e5004f02aa00bf02aa
00bf02aa00bf02aa00bf025d003d025e003d03cc000903cc000903c30000
03c3000003c3000004c2001303fe0027043c005c04440078044400780307
0055034f0012070f003e0662004405fe00350000f7dc0698004a05450049
01ec004e01f4004e01b3002a01b2000c01d3002b01d3001a033c001f0343
001f03420013033f0013033f001302ff004e0224000a0224000b07ec003d
0982004e0933004b093300020149004e0485002505d2000705d1000d04d1
0014047a00200224000a0224000b044b0041044b004104290041038c0008
049e00440000fb230000fc720000fb870000fc180000fc180000fa110000
fcaf0000fe390000fc470000fc100000f9d30000fc5e04cc003c04cc0038
0468003c046800380821001b04a60021044400220533003b069a0037057f
003a071d006a08c4006a08c0006a05c7003705c70037025effd3025effd2
0556002705560027045f001605e5001a05e5001a05e5001a0800ffeb0800
ffeb080003b40800038c080003b40800038c0800ffe90800ffe9080003b4
0800038c0800ffe90800ffe908000000045f0016011d0045023a001e023a
001802720021023a000d023a001805c7005c0639005505c7005c045e0023
063c002f04e3002105c7003405320053062500320508003205c70058071d
008006420033067800390832003604b5004a04b5004a0347004203430047
0346004103430047034600570344004f034600570344004f03a100570394
0057039400570394005703a1005703a0000d039400000394000003940000
03a0000d03e9005703dd005703dd005703dd005703ea00570397000303fc
003803fc00290412001505a8003106de002e039b00730000fbf40000fbf4
0000fbe00000fbe00000fbe00000fbe00000fb9e0000fb9e0000fcf104cc
0038046800380aac0065095600420444007804440078044400780329002a
0329002a035d002a050d0028037800570378002d032900210329002102de
003202de00320378002f019400610329005c050d005b037800600378002f
032900320378002f0378002f0378005901e4000f037800590383003a050d
005b03290012036e00540329001a0378004604f40052066f003604f50052
04e3004204e300410501003b04fe003d0530003b078e00420329000e0194
00610236005c0378005903290012036e00540329001a0378006d0329000e
040a00460604001202390089043c005c0898002907240037052c00210558
001d0320000e052b002303730017031c000f031f00100239009204000092
0239008504000097023900920400009202390085040000970519001b0702
00090310007e05d500a208c00022047300400351002e0493006004730036
04730036047300360473004004730034046000360473003d03cc000903cc
000903cc0009046d001603a2003a044d003804b2003a0797003a0454003a
0459003a05a0003a079e003a04d2003a042c003a090a003a0459003a047e
006b06e2003a044f003a0490003f0672003a043c006b0616003a06dc003a
0630003a0467003a0678003a043d003a0485003a042d006b0497003a046e
003a0442003a04aa003a043f006b0657003a03c0003a0568003a04c3003a
0469003a0409003a0463003a06fc003a041c00bc00000000000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000001840000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
026800000268000002680000026800000268000002680000026800000268
000002680000026800000268000002680000026800000268000002680000
02680000026800000268000100000892007a0009006c0008000200100010
0066000007e80b970004000100000033026a000100000000000000500000
000100000000000100090050000100000000000200040059000100000000
00030023005d0001000000000004000e008000010000000000050007008e
0001000000000006000e00950001000000000007003200a3000100000000
0012000e00d50001000000000100000900e30001000000000101001000ec
0001000000000102000e00fc00010000000001030014010a000100000000
01040012011e0001000000000105000901300001000000010004000e0139
0001000000010007002f01470001000000020004000e0176000100000002
0007003c01840001000000030004001301c00001000000030007003001d3
0001000000040004000d02030001000000040007003a0210000100000005
0004000d024a00010000000500070036025700010000000600040011028d
00010000000600070030029e0001000000070007003c02ce000100000008
00040013030a00010000000900040011031d00010000000d00040010032e
00010004000c0004000e033e00010004001f00040010034c00010005000a
0004000d035c00030001040400020004036900030001040600020006036d
00030001040700020008037300030001040900020008037b00030001040b
00020016038300030001040c0002000803990003000104100002001203a1
0003000104110002000803b30003000104120002000603bb000300010413
0002000603c10003000104140002000603c70003000104160002000e03cd
0003000104190002000c03db00030001041d0002000603e7000300010804
0002000403ed000300010c010002000803f1000300010c0a0002000e03f9
a920313939302d32303036204170706c6520436f6d707574657220496e63
2e20a92031393831204c696e6f7479706520414720a920313939302d3931
205479706520536f6c7574696f6e7320496e632e48656c76657469636142
6f6c6448656c76657469636120426f6c643b20382e30643365313b203230
31322d30332d323748656c76657469636120426f6c64382e306433653148
656c7665746963612d426f6c6448656c7665746963612069732061207265
67697374657265642074726164656d61726b206f66204c696e6f74797065
20414748656c76657469636120426f6c644c6967617475726573436f6d6d
6f6e204c69676174757265734e756d6265722053706163696e6750726f70
6f7274696f6e616c204e756d626572734d6f6e6f737061636564204e756d
626572734e6f204368616e676548656c766574696361204772617348656c
7665746963612065737420756e65206d617271756520648e706f738e6520
6465204c696e6f7479706520414748656c76657469636120466574744865
6c766574696361206973742065696e2065696e676574726167656e657320
576172656e7a65696368656e20646572204c696e6f747970652041474865
6c7665746963612067726173736574746f48656c766574696361208f2075
6e206d61726368696f207265676973747261746f206469204c696e6f7479
706520414748656c7665746963612076657448656c766574696361206973
2065656e20676572656769737472656572642068616e64656c736d65726b
2076616e204c696e6f7479706520414748656c7665746963612046657448
656c766574696361208a7220657474207265676973747265726174207661
72756d8a726b6520669a72204c696e6f7479706520414748656c76657469
6361204e65677269746148656c76657469636120657320756e61206d6172
63612072656769737472616461206465204c696e6f747970652041474865
6c7665746963612065722065742072656769737472657265742076617265
6dbe726b652074696c68bf72656e6465204c696e6f747970652041474865
6c7665746963612043617272656761646f48656c7665746963612048616c
7666657448656c766574696361206c696861766148656c76657469636120
c3d3e8cf48656c76657469636120c8d1ccd3cae748656c76657469636120
f2e1e47c979ad400460065006400460065007400740042006f006c006400
500075006f006c0069006c00690068006100760061004700720061007300
470072006100730073006500740074006f30dc30fc30eb30c9bcfcb4dccc
b4005600650074004600650074004e00650067007200690074006f041604
380440043d044b04390046006500747c974f5306390631064a0636004e00
6500670072006900740061000000b8005c2bb800522bb800482bb8003e2b
b800342bb8002a2bb10840ba019000145df44009011f04000b1fd819eebe
012e000d00e6012e000d00b0012e400c0d000963833c1f63838348294109
014b00370401001f014500240401001f0144b224ab1fb8013eb224231fb8
013db224231fb80102b2371d1fb80100400937241ffd37621ffc37b80801
401b1ff824931ff724931ff6243f1ff524311fd1371d1fd037471fcd41b8
0801b21fcb2ab80201b21fca24b80401400f1fc824811fb537291fb4373b
1fb227b80401b21fb141b80401b61fa437811fa384b80401b21fa22ab804
01b21fa124b8019ab21fa024b8019ab61f9f243f1f9683b80401b21f9527
b80401b21f8227b80401b21f7084b80801b21f6fb3b80801b21f6eb3b802
abb61f6d24261f6224b80101400b1f5d246c1f5c24391f5441b80125b21f
4d27b80401b61f4c27cd1f4b41b80401b21f4024b8019ab21f3683b80401
b21f3524b80201b21f3224b8019ab61f2c24bb1f2884b80801b21f2241b8
040140131f20244c1f1d24261f2ca0961f2c245e1f412ab801a8b748282a
2448279636b801f4b21f4d27b801f4b21f9527b801f4b21f6e27b801f4b2
1f6327bd01a700470029015a00250199b348296fb3b80190b21f83b3b801
9ab348283725b803e840121fb327482784274827362748272527482755b8
0154402c0797076407550733072b072907260721071e071b071408120810
080e080c080a080808060804080208000814b8ffe0402b00000100140610
000001000604000001000410000001001002000001000200000001000002
010802004a00b806008516763f183f123e113946443e113946443e113946
443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b18
2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff
1d592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b4b5279b35279eb5645652345
6023456560234560b08b766818b080622020b1eb794565234520b0032660
62636820b003266165b079236544b0eb234420b152564565234520b00326
6062636820b003266165b056236544b0522344b10056455458b156406544
b25240524523614459b35045484e456523456023456560234560b0897668
18b080622020b148454565234520b003266062636820b003266165b04523
6544b048234420b1504e4565234520b003266062636820b003266165b04e
236544b0502344b1004e455458b14e406544b250405045236144592b2b45
6953420000>
[617 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 388 37 <000300a10000056105c20009001400290059402ca904a707a71203771687
16021c0a2a010127002a28020b2a27081c100536184f10371f1a2b000b25
27192a2bbc011e00210052012a00182b2b4ef44dfd3c4e10f64dedf4ed12
39003fed3ffd12392ffd393130015d005d01112132363534272623011121
323736353427262700171615140706071e0115140706070e012321112101
c7016a617950456bfebc016a6136625f35600146714444264a7173422a3f
47c171fd6402cc04c2febb495d672117fdc7fe771a3088732b1801033599
5e8387522e2629b27f8368452f362805c200>SBVPMX+Helvetica-Bold AddT42Char 
1 0 0 <0002009a0000053d05c200030007003e402105061d02010004071d03000a
05041d0303021a0906071d0100190809aa216c3c182b2b4ef43c4dfd3c4e
10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111271121119a04a3b8
fccd05c2fa3eb80452fbae000000>SBVPMX+Helvetica-Bold AddT42Char 
SBVPMX+Helvetica-Bold /CharStrings get begin
/B 37 def
end
SBVPMX+Helvetica-Bold /Encoding get
dup 66 /B put
pop
end
%ADOEndSubsetFont
/ZDWBPI+Helvetica-Bold /SBVPMX+Helvetica-Bold findfont ct_VMDictPut/ZDWBPI+Helvetica-Bold*1 [66{/.notdef}rp /B 189{/.notdef}rp]ZDWBPI+Helvetica-Bold nfZDWBPI+Helvetica-Bold*1 [14.9392 0 0 -14.9392 0 0 ]msf24.8301 250.79 mo(B)sh%ADOBeginSubsetFont: KUDAAA+HelveticaNeue Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.074
 256 array 0 1 255 {1 index exch /.notdef put} for  /KUDAAA+HelveticaNeue
Type42DictBegin
[<00010000000c000c000c000c4f532f32c8d7d058000000cc000000606376
7420001400140000012c000000046670676dfdfac9ac0000013000000428
676c796694cb736c0000545c000029fc68656164e3efa789000005580000
003668686561e20bc5040000059000000024686d7478237b760f000005b4
000021606c6f63610154e9d000002714000021646d6178700a8304e20000
4878000000206e616d65cd399ba20000489800000bb87072657028001e81
000054500000000c67646972000000000000000000000000000201bf0190
0005000000cc00cc0000011e00cc00cc0000011e003200fa000002000503
000000020004800000670000000000000000000000004c494e4f00000008
fb0203b8ff29003703b800d50000000000000000020502ca000000200002
00140014b800002c4bb800095058b101018e59b801ff85b844001db90009
00035f5e2db800012c2020456944b001602db800022cb800012a212db800
032c2046b003254652582359208a208a49648a204620686164b004254620
686164525823658a592f20b00053586920b000545821b040591b6920b000
545821b0406559593a2db800042c2046b00425465258238a592046206a61
64b0042546206a61645258238a592ffd2db800052c4b20b0032650585158
b080441bb04044591b21212045b0c05058b0c0441b2159592db800062c20
20456944b001602020457d691844b001602db800072cb800062a2db80008
2c4b20b003265358b0801bb040598a8a20b003265358b0022621b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b80003265358b003
2545b8014050582321b8014023211bb003254523212321591b2159442db8
00092c4b535845441b2121592db8000a2c4bb800095058b101018e59b801
ff85b800441db9000900035f5e2db8000b2c2020456944b001602db8000c
2cb8000b2a212db8000d2c2046b003254652582359208a208a49648a2046
20686164b004254620686164525823658a592f20b00053586920b0005458
21b040591b6920b000545821b0406559593a2db8000e2c2046b004254652
58238a592046206a6164b0042546206a61645258238a592ffd2db8000f2c
4b20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b
2159592db800102c2020456944b001602020457d691844b001602db80011
2cb800102a2db800122c4b20b003265358b0801bb040598a8a20b0032653
582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0
032653582321b801408a8a1b8a235920b80003265358b0032545b8018050
582321b8018023211bb003254523212321591b2159442db800132c4b5358
45441b2121592db800142c4bb800095058b101018e59b801ff85b800441d
b9000900035f5e2db800152c2020456944b001602db800162cb800152a21
2db800172c2046b003254652582359208a208a49648a204620686164b004
254620686164525823658a592f20b00053586920b000545821b040591b69
20b000545821b0406559593a2db800182c2046b00425465258238a592046
206a6164b0042546206a61645258238a592ffd2db800192c4b20b0032650
585158b080441bb04044591b21212045b0c05058b0c0441b2159592db800
1a2c2020456944b001602020457d691844b001602db8001b2cb8001a2a2d
b8001c2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a
8a1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db8001d2c4b535845441b2121592d0001000000010000209eea1b
5f0f3cf5011103e800000000b643600000000000cb98044efc49fe1f05a6
04350000000900020001000000000001000003b8ff2b001c05dcfc49fe80
05a600010000000000000000000000000000085801f40033000000000116
000001160000000000000116000001160000000000000103004a01aa006d
022c0022022c001903e8005c02760021011600690103002f0103fff70160
001802580030011600530185003201160053014dffef022c002a022c0057
022c0018022c001d022c001c022c0023022c0026022c0032022c0028022c
002201160053011600530258002e025800300258002e022c00360320002a
0288fffa02ad004e02d2002b02c0004e0263004e023e004e02f7002b02d2
004e0103005202070016029b004e022c004e0367005002d2004d02f80026
0288004e02f8002602ad004e02880025023e000202d2004a02630000039e
000c02630000028800020263001601030048014dffef0103000002580032
01f4000000deffea02190024025100430219002402510024021900240128
000c023e0024022c004000de004500defff30207004500de004503550040
022c0040023e00240251004302510024014d003d01f4001f013b0009022c
004001f4000e02f600110206000901f4000801e00016014d003000de004d
014d0018025800450288fffa0288fffa02d2002b0263004e02d2004d02f8
002602d2004a021900240219002402190024021900240219002402190024
021900240219002402190024021900240219002400de003200deffea00de
ffda00deffe5022c0040023e0024023e0024023e0024023e0024023e0024
022c0040022c0040022c0040022c0040022c002a01900038022c002e022c
002f022c002301f4004802580030022c0040032000180320001803de0040
00de003200deffe502580030039efffa02f8002502e8001a025800300258
003002580030022c0000022c0040021600230240000002ee004e026e001e
01570000017a00190180001902e4003203660024023e0022022c00440103
004a0258003002180000022c0003025800240288fff901cf003201cf0041
03e8006f011600000288fffa0288fffa02f8002604320026037b002401f4
000003e8008201aa004201aa004201160054011600530258003002580056
01f400080288000200a7ff5b022c000d01030032010300390206000c0206
000c022c002a0116004b0116005301aa0042047c00480288fffa0263004e
0288fffa0263004e0263004e010300450103ffed0103fff80103fffd02f8
002602f800260316003302f8002602d2004a02d2004a02d2004a00de0045
00deffda00deffc700deffc600deffd400de004200deffff00de000500de
ffd100de004c00deffda02e40032022c0019022c000000de000003420031
03420024014d0042025800470288004e00de004d02c00008034200240258
0030023e002402510043014d000e014d0004028800250288000202630016
01f4001f01f4000801e000160000ff0f0000ff570000feff0000feec0000
feeb0000fef90000ff670000ff0a0000ff240000fef60000feff0000ff2a
0000ff710000fea50000000000deffe000deffd802e70026032300260282
00240263001601e00016022300200263004e0263004e02ee000202260054
02ce002602880025010300520103fff7020700160451fff60464004e02ee
0001029b004e02da004e0263000102c8004e0288fffa02a3004e02ad004e
0226005402d900090263004e03f3fffd028e002502da004e02da004e029b
004e02bffff60367005002d2004e02f8002602c8004e0288004e02d2002b
023e0002026300010335001e0263000002d0004e0292002f041b004e0430
004e030a00020368004e028d004e02ce002603fc004e029f000002190024
023d0032021c004001a80042024d000302190024030f000001fa001e0236
004002360040020e00400233000002b0004002300040023e002402260040
025100430219002401cf000401f40008032000280206000902340040020b
002e03290040033f00400269000302c40040021600450219002103060040
0218000302190024021900240236ffeb01a800420219002401f4001f00de
004500deffe500defff3036f0000036c00400236ffeb020e004002360040
01f400080226004002da00000245fffc03a7003f02d9003202f80026023e
0024029b00000212000e02da000a023500000226005401a8004202630016
01d700140402fffd031d0000028e002501fa001e02ac004e021c0040029e
004e02270040031800020266000302e3004e0246004003f7004e03010040
02d2002b021900240288000201f400080288000201f4000802750000020e
000902a3002f0221002e0292002f020b002e0299004e022c004001030052
03f3fffd030f00000288fffa021900240288fffa02190024039efffa0366
00240263004e0219002402e700260223002003f3fffd030f0000028e0025
01fa001e02da004e0236004002da004e0236004002f80026023e002402f8
0026023e00240263000101f400080263000101f400080263000101f40008
0292002f020b002e036d004e02c40040040b00520288fffa0219002402d2
002b021900240263004e0219002402d2004d022c00400288002501f4001f
0263001601e000160263001601e000160288fff90288fff90288fff9039e
fff902d2002b02d2002b02d2002b02c0004e02c000080263004e0263004e
0263004e0263004e02f7002b02f7002b02f7002b02f7002b02d2004e02d2
004e0103ffe60103ffd90103ffd8010300520103002802070016029b004e
022c004e022c004e022c004e022c004e02d2004d02d2004d02f8002602f8
002602f8002602f8002502ad004e02ad004e02ad004e0288002502880025
02880025023e0002023e0002023e0002023e000202d2004a02d2004a02d2
004a02d2004a02d2004a02d2004a039e000c039e000c039e000c039e000c
028800020288000202190024021900240219002403660024021900240219
002402190024025100240256002402190024021900240219002402190024
023e0024023e0024023e0024023e0024022c00400231ffef00deffd400de
ffc600deffc600de001100defff200deffd9020700450202004000de0041
012e004500de003801560045022c0040022c004002970012023e0024023e
0024023e0024023e0022014d003d014d002d014d003001f4001f01f4001f
01f4001f013b0009013b0009013b0009013b0009022c0040022c0040022c
0040022c0040022c0040022c004002f6001102f6001102f6001102f60011
01f4000801f400080302005201b600450241000c031f000c031f000c00de
ffe900de003200deffd900deffd900de005000deffc600deffe400deffc5
00deffc500deffd300defffe00deffd000de004201160051011600530185
00320116004b00a7ff5a0342002e034200380342001b0342002b03420031
0342004c0288fffc022c004301f4004802f8002c022c004002d2004d0206
000c0206000c0185003203e80064022c003601720022017200190172001f
017200230172002b01720021017200220190002900fa00230190002900be
002600be00070172002a017200220172003b0172001f0172001d01720019
0172001f017200230172002b01720021017200220190002900fa00230190
002900be002600be0007034200230320001800de003000de001801160053
00f1005800f10058014cfffb028f00000116005302f2000b0361000b018a
000b0361000b034a000b0364000b00edffd00288fff902ad004e0228004e
0263004e0263001602d2004e02f8002601030052029b004e0265fff90367
005002d2004d023a002502f8002602cb004e0288004e0262002a023e0002
02880002030900260263ffff033b00470103fff702880002024b002401e5
001f022d004000ed0045020f003c024b00240234004301d1000e022a0024
01e5001f01b10026022d00400216002400ed0045020200400206000c01e4
000e01a90026023e0024023a003c020100240235002401c40003020f003c
02cc002001c1fff60296004002cf002400edffe5020f003c023e0024020f
003c02cf002400de004000de0053022c0000022c001e0000feb500d0ffee
0116000e022c002301f4001c022c00280000fea60000fe3e0000fe4f0000
fe6c0000feb50000feb50000feb50000feb50000fe430000fed10000fe9e
0000fe4f0000fe870000fe870000fe4d0000febc0000fe6c0000fe840000
fed10000fe580000fe580000fe4f0000fe4f0000fe3f0000fe4d0000fe3e
0000fe3f0000fe4d0000fe3e0000fe3e0000feb00000fe3e0000feb50000
fe4f0000fe510000fe9e000000000116000d022c004003410040014d0042
03410040014d0043014d0042020900280209002900fb00420193ffff0116
000b0116000b01f4000502d2000801f4000a022c004c022c004d022c004c
01f4003e024b001c024b001c02d2002b02d2001002370024029b0055029b
002f01f40020023e001c035e005302ba003e02f300280104005901af0059
0116005f0238001501f4001d00960028014d005e014d005f05620007029b
0074014300740219fffb020b005e020b005f02a2005e02a2005f014d002a
01430074014d002a01620050008b00000000000000000000000000000000
000000000000000000000000000001f4000003e800000116000003410000
014d00000116000000a70000022c00000069000001160000000000000000
00000000000000000000002c0000000f0000014dfffc01ae0059014d002a
014d00030219003802190038029b000f02630055022c00230379002702a4
001d0000feb70000feb70000feb70000feb70000fe6e0000fe730000fed3
0000fe700000fe810000fe7a0000fe760000fe7f0000fe3a0000feaa0000
fead0000fe710000fe720000fe4d0000fe530000fe6a0000fe6a0000fe6a
0000fe6b0000fe6b0000fe4f00a7002f0136002f0462003603f30036029b
004c01160062022c00620341006203b10062029b001903b1001904c70019
05dc001903b10062029b001503b1001504c70015022c004c02d2002c02d2
00510341004a00de004001bc0040029b004002d2004001f4000502d20005
03b00005048f000502d2004001f4000502d2000503b0000500de004301f4
001d022c001b0341004004d300390446002703d6001b03d5003402c30037
0173002b045900370363003402c00029029b000f022c0028011600030116
0000030a0027022c001d02d20053022c003e02d20053022c003e02d20053
022c003e02d20053022c003e02d20053022c003e029b000f022c0028029b
000f022c002803e8000803790024030a0030022c001e029b004c01f4003e
030a0027022c001d030a0027022c001d00deffe004c900290463003603e6
001b030a003002d2004c022c0040029b000f022c0028029b000f022c0028
029b0055022c0023029b0055022c00230116ffba00deff9d0116fffc00de
ffd6030a0027022c001d030a0027022c001d02d20058014dffeb02d20058
014d002702d20053022c003e02d20053022c003e02d2004f022c0040029b
000f022c0028029b0055022c0023030a0027022c001d030a0027022c001d
030a0027022c001d030a0027022c001d029b001501f4000a014d0026029b
000f022c0028029b004a022c003a029b004a022c003a029b004a022c003a
02d2002c01f4001d02d20051022c001b02d20051022c001b02d20051022c
001b02d20051022c001b02d20051022c001b029b0055022c0023029b0055
022c0023029b0055022c0023029b0055022c0023029b0055022c00230263
00550116000e030a0030022c001e02d2004f022c004002d2004f022c0040
02d2004f022c004002d2001c022c000d02d2004f022c00400116fff600de
ffd0011600130116000b029b004c01f4003e029b004c01f4003e029b004c
01f4003e022c004c00de0043022c004c00deffd0022c004c00deffdb022c
004c00deffe10341004a034100400341004a034100400341004a03410040
02d2004c022c004002d2004c022c004002d2004c022c004002d2004c022c
0040030a0027022c001d030a0027022c001d030a0027022c001d030a0027
022c001d029b0055022c003a029b0055022c003a02d20058014d004302d2
0058014d004002d20058014d002402d20058014d000c029b002f01f40020
029b002f01f40020029b002f01f40020029b002f01f40020029b002f01f4
0020026300100116000b026300100116000b026300100116fff102630010
0116fff402d20053022c003e02d20053022c003e02d20053022c003e02d2
0053022c003e02d20053022c003e029b001901f40005029b001901f40005
03b0001202d2000903b0001202d20009029b001501f40005029b001501f4
0005029b001501f4000a0263001701f400190263001701f4001902630017
01f40019022c00400116000802d2000901f4000a0116000e029b000f022c
0028029b000f022c0028029b000f022c0028029b000f022cffe6029b000f
022c0028029b000f022c0028029b000f022c0028029b000f022c0028029b
000f022c0028029b000f022c0028029b000f022c0028029b000f022c0028
029b0055022c0023029b0055022c0023029b0055022c0023029b0055022c
0023029b0044022cfff8029b0055022c0023029b0055022c0023029b0055
022c0023011600550116004b0116006100de0040030a0027022c001d030a
0027022c001d030a0027022c001d030a0027022cffec030a0027022c001d
030a0027022c001d030a0027022c001d0379002702a4001d0379002702a4
001d0379002702a4001d0379002702a4001d0379002702a4001d02d20053
022c003e02d20053022c003e035e005302ba003e035e005302ba003e035e
005302ba003e035e005302ba003e035e005302ba003e029b001501f4000a
029b001501f4000a029b001501f4000a02de002f01fd0011010bffe3010b
00050000fe950116005600b2004200b200420000fe870000fe8700b20042
015d000d0152000d0179004201800042010b0016010b00170186004201a7
00360190004201a700360300002e030afff8022c00740342004c03420074
022cffeb02d2fff9022c00400341004001ec004c0223004b01c8002c0217
002d030a0027014d000f03cc001203cc00120000fca50000fd170000fd17
0000fd150000fd1502ef002f022c00270318002602350025022c0012022c
001d025b0040025f001b022c00380250001b025d001e022c003f025d003f
010b004103b0002301b90042014d0041025b001d024e00180286001803a3
001b02a0000b0210000b02d6000e02530043024e004300d0004300d00043
00de005300bf003b014d005e014d001c00bf003b014d0004014d005e014d
001c00d0004300d00043014d000f014dfffc0116002001160020006ffff7
00a7002200a7002100dd00210169000400fa000501160026011600270124
0007012400070124001201240012014d002a012400160124001601240016
00fa001000fa0003006f00210124001c0116000401240012012400120124
000701240007014d003b011600270000fe700000fe5b0000fe5b0000febf
0000febf0000fe300000fe300000fddc0000fe5b0000fe300000fe700000
fe6b0000fe6b000000000116000000000000000000000000000001850026
018500260358005e03cc00120116006f0458004c03cc001203790066036c
000d0116003e0116003e0000000000000000000000000000000000000000
00000000032a001c030a0030022c004c022c004c029b001502ee00170395
000803cd002b0342002c02d2002c029b002b026400370337000e029b0055
022c003a029b0055022c003a02630001030a00270254004f011a001101aa
000802d20027015500110193ffff022c004c022c004c00de001500de0015
022c001e0263002c0263002c0263002c0263002c0263002c0263002c0263
002c0263002c02cf002c02c8002c03a0004203a5004203a5004203b00042
03ce003603b90036022c003a022c003a022c003a022c003a022c003a022c
003a034d0042034d004204210042042b004204140042041b00420263001d
0263001d0263001d0263001d0263001d0263001d0263001d0263001d0384
0042038400420458004204620042044c0042045200420479003604790036
0116005601160056011600200116001c0116001e0116001e011600110116
001101c8004201c80042029b004202a60042028f00420296004202bd0036
02bd003602630036026300360263003602630036026300360263003603bc
004203bc0042048f0042049a004204830042048a00420263005a0263005a
0263005a0263005a0263005a0263005a0263005a0263005a034d0042042b
0042041b00420442003602f6003402f6003402f6003402f6003402f60034
02f6003402f6003402f6003403b2004203b200420486004204900042047a
00420480004204a7003604a700360263002c0263002c022c003a022c003a
0263001d0263001d011600560116005602630036026300360263005a0263
005a02f6003402f600340263002c0263002c0263002c0263002c0263002c
0263002c0263002c0263002c03f0002c03ee002c04ac004204ce004204a3
004204b1004204cc003604ca00360263001d0263001d0263001d0263001d
0263001d0263001d0263001d0263001d049a0042049a0042056e00420578
00420561004205680042058f0036058f003602f6003402f6003402f60034
02f6003402f6003402f6003402f6003402f6003404c8004204c80042059c
004205a60042058f00420596004205bd003605bd00360263002c0263002c
0263002c0263002c0263002c0263002c0263002c029b000d029b000d0320
0016031d001703be000d0263001d0263001d0263001d0263001d0263001d
03420016034000170355001603490017040000560116ffe80116ffe80116
ffe70116ffed0116ffee0116ffe30116fff10116fff701980016019a0017
0263005a0263005a0263005a0263005a02630053026300530263005a0263
005a029b0014029b00140344001603740017034d004202f6003402f60034
02f6003402f6003402f600340397001603ae001703b2001603be00170423
002e0248001202660088026d004f0171000d0155001102d2002c030a0027
00de0010029b005502d2004f0000fea102990033022c001b03a3002c0386
00220342001e0342001e0342001c03f9006602df00430340003e02d20046
029b000f01f4000503b6006602d60043025e001b015d001202db000b02b3
001b02d20058022c002801860000025e004f01ea004f0312004f02590040
029b004c01f4003e0263001701f40019026d001501fd001c025e005c01b4
0047038e001c02b90013038e001c02b9001303a3002302c8001b02de0054
02350047022c002802980054029800540412002102de0013029b0019024d
000501f4001d0298003801f9002302e70013024000120116005c02a60016
01fd0012029b0019029b000f02d2002c01f4001d022cfff40263001000de
001e0155001102630010029b0055022c004c022c004c029b0055022c0023
021e001100deffed02d2005300d0001000d00010014d0019014d0019014d
001c014dfff50116006f014d001d014d001d02af002c0248001202480039
0116006f0248001202ae0025024800390116006f0116006f030a003701fd
001f01fd001f029b0055022c003e02d2002c0341004a02dd004a02bd0022
02d2002c02d2002c02d2002c01f4001d01f4001d01f4001d022c001b02d4
0017034f0016030d00170186000d0304000c0266001802360022014d005d
014d005d014d005d014d005d0134001d0134001d019c0000019c0000019c
0000019c0000019c00000236000901f0000f02220029020e0040020e0040
0176002d019e00090339001c0318001e028500170000fc49035c00110266
001000ea002500ef002500aa001200aa000500c8001500c700090175000b
0179000b012c00090124000901240009015c002500e6000300e6000303dd
001c04a20025047d0024047d0001009a0025021e001102b4000202b40006
0251000a0214000c00e6000300e6000301f3001e01f3001e01f6001c01ad
00050226001d0000fdc90000fe6a0000fe100000fe3f0000fe3f0000fd42
0000fe790000ff4f0000fe510000fe340000fd170000fe5a0225001a0225
001101f4001901f4001203a5000b0219000d01e9000e027e001903170018
0256001901f6000a02e1000a02e1000a02e1000a03e8fff603e8fff603e8
01cf03e801bb03e801cf03e801bb03e8fff503e8fff503e801cf03e801bb
03e8fff503e8fff503e80000006f002001160014011600120116000f00fa
00030116001202d2002c030a003002d2002c022b00110299001402630010
029b000f025a001402d00026025e002602d2002c0341004002d70018031f
001b03fe001a029900330299003301c3001f01b5001d01c3001f01b5001d
01c3002901b6001d01c3002901b6001d016d002901690029016900290169
0029016d0029016d0004016900000169000001690000016d000401a70029
01a7002901a7002901a7002901a7002901380000018e002201ce001301d6
000502760018033a001401bd003e0000fe330000fe330000fe2c0000fe2c
0000fe2c0000fe2c0000fe0c0000fe0c0000feaa0225001101f4001204fe
00270420001d020e0040020e0040020e0040018b001c018b001c01a10014
02770019018b0029018b0014018b0019018b00190172001c0172001c018b
0015009e002e0163002c024f002e018b002e018b001501630014018b0013
018b0015018b002900c50008018b002c01af001b024f002e0163000401b2
003e018b000601b20024025f00260306001502510019022c001c022c001d
0264001b0262001c026e001c03a1001e018b0005009e002e00ec002f018b
002c0163000401b2003e018b000601b2003b018b00050209002802d10008
00de004002220029037000160351001a025c000d026e000d016300060266
000d018e0006016400050165000600de0053014d0026028f003c0256000e
017f004602aa004a04460011022c001f01670019022c001f022c0018022c
0019022c0020022c0026020b0015022c0020022c002401db000401db0004
01db0004018e001b02ac0023030e0023023f001b029f000e031100050209
00080282001c03f3002c0296001403ad001701e5001b025f001b045f0014
03e6ffec02a70027028100100307002b03c6001b0229001d0379fffe0369
002b0377001b0296001002f7fff10323002b023f000a0323002b03e70018
02c5001402610018029400080357002b02be001104e7002b0363001003ef
0000045b002b022d0024034e001c047700200267001502b1001b02250000
02b7001002ce001c0209001c03e200020261002f02e40007033200100332
00100311000502310025037f002602f90010028b001b028b001b02e1002b
02c7000a039a0005025d001c02e5002b0375000a030b0014030d001b02b0
00200349002b036b002b049b00140323002b039700230265002b0265002b
04e3002702d2ffff0359000602c50014035a002b0293001c0315001c02ce
001c02b3000c02ea001b0400002b0288fffa02d2004a029b000f015e0049
0208001b01d00034023e0037024a002703b50024020000340220002a02d9
002503be00210251002501e4001d0496002401f1002a0200002603620024
0204001f021b0027033e002401ee00260307002f03480023030d00210200
00250320002201d4001e0212001e01df00280234002101fd002401ff0022
023e001c01f1002b0315001601db002e02a0002a023d00180222002a01e9
001e02240029034d00240216007800000000000000640000006400000064
000000640000006400000064000000640000006400000064000000640000
006400000064000000640000006400000064000000f80000019000000190
0000019000000190000001b4000001b4000001b40000030c000003580000
046800000634000006c0000006c0000008400000089800000ab400000c28
00000c2800000c2800000c2800000c6400000c6400000c6400000c640000
0cc400000e4c00000f2800000ff80000105c0000105c0000117c000011f4
00001228000012280000128c000012cc00001360000013e0000013e00000
14b0000014b0000015d0000016f800001744000017440000174400001744
000017440000174400001744000017440000174400001744000017440000
174400001744000018c0000019f000001ad400001c1000001ce000001d78
00001edc00001f8000001fd4000020500000205000002084000021b80000
224800002388000024b8000025e400002640000027880000282c000028cc
0000290c0000290c00002964000029d8000029d8000029d8000029d80000
29d8000029d8000029d8000029d8000029d8000029d8000029d8000029d8
000029d8000029d8000029d8000029d8000029d8000029d8000029d80000
29d8000029d8000029d8000029d8000029d8000029d8000029d8000029d8
000029d8000029d8000029d8000029d8000029d8000029d8000029d80000
29d8000029d8000029d8000029d8000029d8000029d8000029d8000029d8
000029d8000029d8000029d8000029d8000029d8000029d8000029d80000
29d8000029d8000029d8000029d8000029d8000029d8000029d8000029d8
000029d8000029d8000029d8000029d8000029d8000029d8000029d80000
29d8000029d8000029d8000029d8000029d8000029d8000029d8000029d8
000029d8000029d8000029d8000029d8000029d8000029d8000029d80000
29d8000029d8000029d8000029d8000029d8000029d8000029d8000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000029fc000029fc000029fc000029fc0000
29fc000029fc000029fc000029fc000029fc000029fc000029fc000029fc
000029fc000029fc000029fc000100000858009600090021000200020000
0000001e000002000428000100010000002301aa00010000000000000212
00000001000000000001000e021200010000000000020007022000010000
00000003002302270001000000000004000e024a00010000000000050007
02580001000000000006000d025f000100000000000700e4026c00010000
0000000900160350000100000000000a01330366000100000000000b0018
0499000100000000000c002504b10001000000000100000d04d600010000
00000101001404e30001000000000102000904f700010000000001030010
050000010000000001040012051000030001040400020006052200030001
04060002000e05280003000104070002000c053600030001040900000424
05420003000104090002000e096600030001040b00020010097400030001
040c0002000c09840003000104100002001009900003000104110002000a
09a00003000104120002000609aa0003000104130002001009b000030001
04140002000c09c00003000104160002000c09cc0003000104190002000e
09d800030001041d0002000c09e60003000108040002000609f200030001
0c010002000809f8000300010c0a0002000c0a00436f7079726967687420
28632920313938312c20313938322c20313938332c203139383920616e64
20313939332c204c696e6f74797065204c69627261727920476d6248206f
722069747320616666696c6961746564204c696e6f747970652d48656c6c
20636f6d70616e6965732e20416c6c207269676874732072657365727665
642e0a0a546865206469676974616c6c7920656e636f646564206d616368
696e65207265616461626c6520736f66747761726520666f722070726f64
7563696e672074686520547970656661636573206c6963656e7365642074
6f20796f75206973206e6f77207468652070726f7065727479206f662048
656964656c62657267657220447275636b6d61736368696e656e20414720
616e6420697473206c6963656e736f72732c20616e64206d6179206e6f74
20626520726570726f64756365642c20757365642c20646973706c617965
642c206d6f6469666965642c20646973636c6f736564206f72207472616e
7366657272656420776974686f7574207468652065787072657373207772
697474656e20617070726f76616c206f662048656964656c626572676572
20447275636b6d61736368696e656e2041472e0a0a436f70797269676874
2028632920313938382c20313939302c20313939332041646f6265205379
7374656d7320496e636f72706f72617465642e20416c6c20526967687473
2052657365727665642e48656c766574696361204e657565526567756c61
7248656c766574696361204e6575653b20382e30643665313b2032303132
2d30332d323748656c766574696361204e657565382e306436653148656c
7665746963614e6575652248656c766574696361204e6575652220697320
612074726164656d61726b206f662048656964656c626572676572204472
75636b6d61736368696e656e2041472c207768696368206d617920626520
7265676973746572656420696e206365727461696e206a75726973646963
74696f6e732c206578636c757369766c79206c6963656e73656420746872
6f756768204c696e6f74797065204c69627261727920476d62482c206120
77686f6c6c79206f776e65642073756273696469617279206f6620486569
64656c62657267657220447275636b6d61736368696e656e2041472e4c69
6e6f747970652044657369676e2053747564696f48656c76657469636120
284c6174696e20666f72205377697373292068617320746865206f626a65
637469766520616e642066756e6374696f6e616c207374796c6520776869
636820776173206173736f63696174656420776974682053776973732074
79706f67726170687920696e2074686520313935307320616e6420313936
30732e204974206973207065726665637420666f7220696e7465726e6174
696f6e616c20636f72726573706f6e64656e63653a206e6f206f726e616d
656e742c206e6f20656d6f74696f6e2c206a75737420636c656172207072
6573656e746174696f6e206f6620696e666f726d6174696f6e2e2048656c
766574696361206973207374696c6c206f6e65206f662074686520626573
742073656c6c696e672073616e732d736572696620666f6e74732e687474
703a2f2f7777772e4c696e6f747970652e636f6d2f687474703a2f2f7777
772e6c696e6f747970652e636f6d2f666f6e7464657369676e657273536d
617274205377617368657341726368616963204c6f6e6720732053776173
684c6967617475726573436f6d6d6f6e204c69676174757265734f707469
6f6e616c204c69676174757265736a196e969ad4004f007200640069006e
00e60072004e006f0072006d0061006c0043006f00700079007200690067
00680074002000280063002900200031003900380031002c002000310039
00380032002c00200031003900380033002c002000310039003800390020
0061006e006400200031003900390033002c0020004c0069006e006f0074
0079007000650020004c00690062007200610072007900200047006d0062
00480020006f0072002000690074007300200061006600660069006c0069
00610074006500640020004c0069006e006f0074007900700065002d0048
0065006c006c00200063006f006d00700061006e006900650073002e0020
0041006c006c002000720069006700680074007300200072006500730065
0072007600650064002e000a000a00540068006500200064006900670069
00740061006c006c007900200065006e0063006f0064006500640020006d
0061006300680069006e00650020007200650061006400610062006c0065
00200073006f00660074007700610072006500200066006f007200200070
0072006f0064007500630069006e00670020007400680065002000540079
00700065006600610063006500730020006c006900630065006e00730065
006400200074006f00200079006f00750020006900730020006e006f0077
0020007400680065002000700072006f007000650072007400790020006f
0066002000480065006900640065006c0062006500720067006500720020
0044007200750063006b006d00610073006300680069006e0065006e0020
0041004700200061006e006400200069007400730020006c006900630065
006e0073006f00720073002c00200061006e00640020006d006100790020
006e006f007400200062006500200072006500700072006f006400750063
00650064002c00200075007300650064002c00200064006900730070006c
0061007900650064002c0020006d006f006400690066006900650064002c
00200064006900730063006c006f0073006500640020006f007200200074
00720061006e007300660065007200720065006400200077006900740068
006f00750074002000740068006500200065007800700072006500730073
0020007700720069007400740065006e00200061007000700072006f0076
0061006c0020006f0066002000480065006900640065006c006200650072
00670065007200200044007200750063006b006d00610073006300680069
006e0065006e002000410047002e000a000a0043006f0070007900720069
006700680074002000280063002900200031003900380038002c00200031
003900390030002c00200031003900390033002000410064006f00620065
002000530079007300740065006d007300200049006e0063006f00720070
006f00720061007400650064002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00520065
00670075006c00610072004e006f0072006d00610061006c0069004e006f
0072006d0061006c005200650067006f006c00610072006530ec30ae30e5
30e930fcc77cbc18ccb40052006500670075006c006900650072004e006f
0072006d0061006c004e006f0072006d0061006c041e0431044b0447043d
044b0439004e006f0072006d0061006c5e3889c44f5306390627062f064a
004e006f0072006d0061006c0000b800142bb8000a2bb800002b00>
[10749 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> KUDAAA+HelveticaNeue AddT42Char 
1 400 20 <0001003200ee0153013e0003000b00ba0000000100032b30311315213532
0121013e5050>KUDAAA+HelveticaNeue AddT42Char 
1 436 23 <0002002afff5020202c50017003300cbb800342fb800352fb8003410b800
18d0b800182fb80000dc411b000600000016000000260000003600000046
0000005600000066000000760000008600000096000000a6000000b60000
00c60000000d5d410500d5000000e5000000025db8003510b80026dcb800
0edc410500da000e00ea000e00025d411b0009000e0019000e0029000e00
39000e0049000e0059000e0069000e0079000e0089000e0099000e00a900
0e00b9000e00c9000e000d5d00ba0013001f00032bb8001310ba002d0007
00032bb8002d10303113343e0433321e0415140e0223222e0227141e0433
323e0435342e0423220e0484010911213224243221110901051b3c36363c
1b055a04101e344f37384e341e100404101e344f37374f341e1004015d1a
3f3f3c2d1c1c2d3c3f3f1a2863573c3c57632727545047361f1f36475054
2727545048362020364850540000>KUDAAA+HelveticaNeue AddT42Char 
1 1128 26 <0001001dfff501fe02c5003e0123ba0010001100032bb8001010ba001b00
0800032bb8001b10410500da000800ea000800025d411b00090008001900
080029000800390008004900080059000800690008007900080089000800
99000800a9000800b9000800c90008000d5dba001f0011001b111239ba00
220008001b111239b800222fba002c00110010111239b8002c2fb8002ddc
b8002210b80035dc410500da003500ea003500025d411b00090035001900
350029003500390035004900350059003500690035007900350089003500
99003500a9003500b9003500c90035000d5db8001b10b80040dc00ba000d
001600032bb8000d10ba0027003200032bb8002710ba003a000300032bb8
003a10b8000310b80001d0b800012fba001f0003003a111239b8003a10b8
003dd0303113153633321e0215140e022322262723061e0233323e023534
2627353e0135342e0223220e020733343e0233321615140e022b01222322
da181b20372818192a381f494c025501213e5836325942273f412a38213a
4f2e3551361d02551021332236481625311b120505040195480311233321
20332313574537563b1e1b365135405e0e02134a3031482e17223c54331f
382a1939391c2c1d0f00>KUDAAA+HelveticaNeue AddT42Char 
1 1588 27 <0002001c0000020302c50003000e0051ba0004000000032bb8000410b800
0010b80009d0b8000410b8000bd0b8000410b80010dc00b800052fb8000a
2fba0001000800032bb8000110ba0003000a0005111239b80004d0b80008
10b8000cd030312523133313112301152115333533350153eeec025044fe
bd01375060f1015bfea501d4fe3352a6a64b0000>KUDAAA+HelveticaNeue AddT42Char 
1 2112 30 <00010032000001fd02b9000e001fba000a000900032bb8000a1000b80009
2fba0002000300032bb8000210303101352115210e0307333e0301fdfe35
017438614a2f065f052e495e027049503b8c9dab5a53b0a692000000>KUDAAA+HelveticaNeue AddT42Char 
1 2200 31 <00030028fff5020402c5000f002f00410161ba0030001600032bb8003010
ba0026000800032bb8002610411b00060030001600300026003000360030
00460030005600300066003000760030008600300096003000a6003000b6
003000c60030000d5d410500d5003000e5003000025dba00100016003011
1239b800102fb80000dc410500da000800ea000800025d411b0009000800
190008002900080039000800490008005900080069000800790008008900
080099000800a9000800b9000800c90008000d5dba003a00080026111239
b8003a2f410500da003a00ea003a00025d411b0009003a0019003a002900
3a0039003a0049003a0059003a0069003a0079003a0089003a0099003a00
a9003a00b9003a00c9003a000d5db80020dcba001300160020111239ba00
2300160020111239b80043dc00ba003f001b00032bb8003f10ba002b0005
00032bb8002b10ba000b003500032bb8000b10ba00130035000b111239ba
00230035000b111239303113343e0233321615140623222e02271416170e
0115141e0233323e02353426273e0135342e0223220e0213343e0233321e
0215140e022322269b14212e19344342331a2e22145a362d3c4025415833
31563f253e402d351833523a294b3a22411729371f1e3528171527352042
55020d1b281c0e3736363c0e1c2b20305112155d3f3651361a1c37503442
5b14144f302241331f182e43fe8c1f3224131524311d1e32251549000000
>KUDAAA+HelveticaNeue AddT42Char 
1 3112 36 <0002003000760228018400030007001700ba0000000100032bba00050004
00032bb800051030313715213d0221153001f8fe08ba4444864444000000
>KUDAAA+HelveticaNeue AddT42Char 
1 3172 40 <0002fffa0000029002ca0003000b002500b800042fb800052fb800092fba
0000000700032bb8000010ba00020005000411123930311b013313030133
3721173301c9790277abfeea6150012e4e69fee90127014dfeb301a3fd36
d7d702ca0000>KUDAAA+HelveticaNeue AddT42Char 
1 4476 47 <0001004e0000028402ca000b0047ba000b000000032bb8000b10ba000600
0500032bb8000610b8000b10b80002d0b8000510b80008d000b800002fb8
00072fb800012fb800052fba000a000300032bb8000a1030311311331121
113311231121114e5f01785f5ffe8802cafd360147feb902cafecd013300
>KUDAAA+HelveticaNeue AddT42Char 
1 4596 48 <00010052000000b102ca00030017ba0003000000032bb800031000b80001
2fb800002f303113113311525f02cafd3602ca000000>KUDAAA+HelveticaNeue AddT42Char 
1 4648 50 <0001004e0000029e02ca000b002dba000b000000032bb8000b10b80002d0
00b800012fb800052fb800002fb800082fba000a00010000111239303113
11333537013309012301114e5f77010278fec7012d7bfe9602cafd36fa6f
fe9701aa0120fe9c0164>KUDAAA+HelveticaNeue AddT42Char 
1 4960 53 <0001004d0000028602ca000b004bba0003000000032bb8000310ba000700
0800032bb8000710b8000810b8000ad0b8000a2f00b800012fb800052fb8
00002fb800072fba000400010000111239ba000a00010000111239303113
11331133013311231123014d5a020175685a02fe8802cafd36023dfdc302
cafdbd0243000000>KUDAAA+HelveticaNeue AddT42Char 
1 5296 57 <0002004e0000029002ca0020002b009db8002d2fba0023000000032bb800
2310b80002d0b8002d10b8001ddcba001a0000001d111239b80027dc4105
00da002700ea002700025d411b0009002700190027002900270039002700
490027005900270069002700790027008900270099002700a9002700b900
2700c90027000d5d00b800012fb8000e2fba0000002300032bb8000010ba
0022000300032bb8002210ba001a0003002211123930311311331133321e
02171e0317332e03272e0327353e013534262303233533321615140e024e
5fe8232a1a0c04050202070a6a0f0f080202030b17271f413b73662bc6ec
433c1b2d3c02cafd36013115232f1a1a362f260b122f34361a1a30271c06
021262415764feb7f9443627311d0a000000>KUDAAA+HelveticaNeue AddT42Char 
1 5584 58 <00010025fff0026302db0039008dba001e001f00032bb8001e10ba002900
1400032bb8002910b8001e10b8000bdc410500da001400ea001400025d41
1b0009001400190014002900140039001400490014005900140069001400
790014008900140099001400a9001400b9001400c90014000d5db80032dc
b8002910b8003bdc00ba0019002400032bb8001910ba0006003700032bb8
000610303101332e0323220e0215141e0615140e0223222e023523141e02
33323e0235342e0635343e0233321601eb5a0229475e37315d492c274152
5552412720344120284c39235a2f516b3c31635033274152555241271b2d
3a1e4a5f01f93b55381a19334f363141291913121d2e2527321d0c142a41
2d415f3d1e1733513935462e1b14111a2921232f1c0c45000000>KUDAAA+HelveticaNeue AddT42Char 
1 5880 59 <000100020000023d02ca00070027ba0003000000032bb800031000b80001
2fba0006000700032bb8000610b8000710b80003d0303113113311333521
15f05feefdc5027afd86027a50500000>KUDAAA+HelveticaNeue AddT42Char 
1 5956 72 <00020024fff5020a02110030004200c3ba003c002400032bb8003c10ba00
07001a00032bb8000710411b0006003c0016003c0026003c0036003c0046
003c0056003c0066003c0076003c0086003c0096003c00a6003c00b6003c
00c6003c000d5d410500d5003c00e5003c00025dba00110024003c111239
b800112fb80012dcb8001a10b8002cd0b8002c2fb8001a10b80031d0b800
312fb8000710b80044dc00ba0037002900032bb8003710ba000c00150003
2bb8000c10b8003710b80003d0b8000c10b80012dcb8002910b8002fd030
312535062322263511342e0223220e0207333e0133321e0215140e02070e
0315141e0233323637141633320315140e0223222e0235343e04020a0f0b
1407223845232b4e3c240255034836142921151c303f23213f311e1b2f3e
23365d232721277412263c2a13251b111d2e3a39340242051c1e010a2d38
1f0a1229423039290612221c18190d0707061223382c2737230f252a2a25
0116571229231708121d1520251409070b000000>KUDAAA+HelveticaNeue AddT42Char 
1 6868 75 <00020024fff5020e02ca0013002c00bbb8002d2fba0015001600032bb800
1510b8002d10b80022d0b800222fb80000dc411b00060000001600000026
000000360000004600000056000000660000007600000086000000960000
00a6000000b6000000c60000000d5d410500d5000000e5000000025db800
1610b8000ad0b8000a2fb8001610b80018d0b800182fb8001610b8002ad0
b8002a2fba002b00220015111239b8001610b8002cd000b800152fba000f
002700032bb8000f10ba001d000500032bb8001d10303137343e0233321e
0215140e0223222e0205112311232e0323220e0215141e02333236373315
7e10243c2b2c3e271211263c2b293d2713019055020e292e2e143b593b1d
1e3b593c365a1502fe264838222136472624463722203645da02cafef617
1f13082b49623737624a2c262b460000>KUDAAA+HelveticaNeue AddT42Char 
1 7184 76 <00020024fff502030211000a0026005bba0014001f00032bb8001410ba00
15000000032bb8001510b8001410b80001d0b8000010b8000cd0b8000c2f
00ba000f002400032bb8000f10ba001a000600032bb8001a10ba00010014
00032bb8000110b8002410b8000cdc303101213e0333321e0217230e0123
222e023721362e0223220e02151e0333323601a7fed70216263521203527
1754540b45362a3e28120101830215375b4535594124021f3e5b3e587401
341e352817172736ae33321c2f3d222f6858392848623b3b64482858>KUDAAA+HelveticaNeue AddT42Char 
1 8064 80 <000200450000009a02ca00030007002fba0001000200032bb8000110b800
0210b80004d0b8000110b80006d000b800052fba0001000000032bb80001
1030311335231d011133119a5555026268685dfdfb020500>KUDAAA+HelveticaNeue AddT42Char 
1 8272 83 <000100450000009a02ca00030017ba0003000000032bb800031000b80001
2fb800002f303113113311455502cafd3602ca000000>KUDAAA+HelveticaNeue AddT42Char 
1 8324 84 <00010040000003150211002a00b7ba0003000000032bb8000310b8000ddc
4103005f000d00015d4103008f000d00015d41030020000d00015d410300
b0000d00015db80010dcb80018dc4103008f001800015d4103005f001800
015d41030020001800015d410300b0001800015db8001bdcba0023000d00
10111239b8000310b80028d0b800282fba002900000003111239b8001b10
b8002cdc00b800012fb8000e2fb800192fba0026000800032bb8002610b8
000810b80013d0b8002610b80020d0303113113311343e0233321e021511
3311343633321e0215113311342e02232206072e01232207233540550f21
35251d25160955483f1f27160855192d3f2733551a104e306d3a020205fd
fb01420f2d2a1e111f2a19fead01423c48121f2a18fead017b283924112e
2a3028584c000000>KUDAAA+HelveticaNeue AddT42Char 
1 8632 85 <00010040000001ec021100170045ba0003000000032bb8000310ba000e00
0b00032bb8000e10b8000310b80015d0b800152fba001600000003111239
00b800012fb8000c2fba0013000800032bb8001310303113113311343e02
33321615113311342e022322072335405513263927313855112a44337335
020205fdfb0124233b2c183830fea201542a45321c5e5200>KUDAAA+HelveticaNeue AddT42Char 
1 8776 86 <00020024fff5021a02110013002700cbb800282fb800292fb8002810b800
14d0b800142fb80000dc411b000600000016000000260000003600000046
0000005600000066000000760000008600000096000000a6000000b60000
00c60000000d5d410500d5000000e5000000025db8002910b8001edcb800
0adc410500da000a00ea000a00025d411b0009000a0019000a0029000a00
39000a0049000a0059000a0069000a0079000a0089000a0099000a00a900
0a00b9000a00c9000a000d5d00ba000f001900032bb8000f10ba00230005
00032bb8002310303113343e0233321e0215140e0223222e0227141e0233
323e0235342e0223220e027e192c3b21213b2c19192c3b21213b2c195a20
405e3d3e5d402020405d3e3d5e402001022f49321a1a32492f2f49311a1a
31492f39624929294962393963492a2a49630000>KUDAAA+HelveticaNeue AddT42Char 
1 9096 87 <00020043ff3b022d02110018002c00adb8002e2fba0018000000032bb800
1810b80002d0b8001810b80004d0b800042fb8002e10b8000edcb8001810
b80016d0b800162fb8000e10b80019dc410500da001900ea001900025d41
1b0009001900190019002900190039001900490019005900190069001900
790019008900190099001900a9001900b9001900c90019000d5db8001810
b80023d0b800232f00b800012fba0013002800032bb8001310ba001e0009
00032bb8001e10303113113311331e0333323e0235342e02232206072335
05140e0223222e0235343e0233321e024355020e292e2f133b593b1d1e3b
593c365a1502013b10243b2c2c3e271211263c2b293d27130205fd36010a
171f12082a49623737624b2c272b46fe2648382221364726244637222036
45000000>KUDAAA+HelveticaNeue AddT42Char 
1 9400 88 <00020024ff3b020e02110013002c00a9b8002d2fba0015000a00032bb800
1510b8002d10b80022d0b800222fb80000dc411b00060000001600000026
000000360000004600000056000000660000007600000086000000960000
00a6000000b6000000c60000000d5d410500d5000000e5000000025db800
0a10b80017d0b800172fb8000a10b8002ad0b8002a2fb8000a10b8002cd0
b8002c2f00b800142fba001d000500032bb8001d10ba000f002700032bb8
000f10303137343e0233321e0215140e0223222e0201112315232e032322
0e0215141e023332363733117e10243c2b2c3e271211263c2b293d271301
9055020e292e2e143b593b1d1e3b593c365a1502fe264838222136472624
463722203645fe6102ca45171f13082b49623737624a2c262bfef5000000
>KUDAAA+HelveticaNeue AddT42Char 
1 9700 89 <0001003d0000014d0213000e0027ba0003000100032bb8000310b8000dd0
b8000d2f00b800012fba0009000800032bb8000910303113113335343e02
333526060723353d55142c4833455a1f020205fdfbe6324d361c5a023c3f
6d00>KUDAAA+HelveticaNeue AddT42Char 
1 10712 182 <0001000000ee01f4013e0003000b00ba0000000100032b30311115213501
f4013e505000>KUDAAA+HelveticaNeue AddT42Char 
1 0 0 <00020033000101cc02c8000300070037b800142bb800082fb800092fb800
04dcb80000dcb8000810b80006d0b800062fb80002dc00ba000300050017
2bba0004000000172b303101211121131121110199fecd013333fe67029a
fd950299fd3902c70000>KUDAAA+HelveticaNeue AddT42Char 
KUDAAA+HelveticaNeue /CharStrings get begin
/space 3 def
/hyphen 20 def
/zero 23 def
/three 26 def
/four 27 def
/seven 30 def
/eight 31 def
/equal 36 def
/A 40 def
/H 47 def
/I 48 def
/K 50 def
/N 53 def
/R 57 def
/S 58 def
/T 59 def
/a 72 def
/d 75 def
/e 76 def
/i 80 def
/l 83 def
/m 84 def
/n 85 def
/o 86 def
/p 87 def
/q 88 def
/r 89 def
/endash 182 def
end
KUDAAA+HelveticaNeue /Encoding get
dup 32 /space put
dup 45 /hyphen put
dup 48 /zero put
dup 51 /three put
dup 52 /four put
dup 55 /seven put
dup 56 /eight put
dup 61 /equal put
dup 65 /A put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 78 /N put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 208 /endash put
pop
end
%ADOEndSubsetFont
/ZDWBPJ+HelveticaNeue /KUDAAA+HelveticaNeue findfont ct_VMDictPut/ZDWBPJ+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero 2{/.notdef}rp /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 3{/.notdef}rp /A 6{/.notdef}rp /H /I /.notdef /K 2{/.notdef}rp /N 3{/.notdef}rp /R /S /T 12{/.notdef}rp /a 2{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /q /r 93{/.notdef}rp /endash 47{/.notdef}rp]ZDWBPJ+HelveticaNeue nfZDWBPJ+HelveticaNeue*1 [0 7.4696 7.4696 0 0 0 ]msf297.572 299.647 mo(Trimmed mean)[3.85437 2.63669 1.77032 6.4985 6.49854 4.19794 4.4295 2.07654 6.49854 4.16806 4.16803 0 ]ysh%ADOBeginSubsetFont: JXRAAA+HelveticaNeue-Italic Initial
ct_T42Dict begin
-0.992 -0.48 1.508 1.074
 256 array 0 1 255 {1 index exch /.notdef put} for  /JXRAAA+HelveticaNeue-Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f32d2d7d658000000cc000000606376
742004c300f30000012c0000001c6670676d372f229800000148000002c6
676c79668932758f000053d40000016c68656164e4113ff4000004100000
003668686561ab0fb6040000044800000024686d747829b4d7180000046c
000021606c6f6361000b916c000025cc000021646d6178700a76035e0000
4730000000206e616d656d11d7c50000475000000c0c7072657040d6ec83
0000535c0000007667646972000000000000000000000000000201bc0190
0005000000cc00cc0000011e00cc00cc0000011e003200fa000002000503
000000090004800000670000000000000000000000004c494e4f00010008
fb0203bdff29003803bd00d50000000000000000020502ca000000200002
00140014005000470055005f00000010ff3b000c0205000c02ca0011b800
002c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
00012c2020456944b001602db800022cb800012a212db800032c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db800042c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800052c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800062c2020456944b001
602020457d691844b001602db800072cb800062a2db800082c4b20b00326
5358b0801bb040598a8a20b003265358b0022621b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b80003265358b0032545b8014050
582321b8014023211bb003254523212321591b2159442db800092c4b5358
45441b2121592db8000a2c4bb800095058b101018e59b801ff85b800441d
b9000900035f5e2db8000b2c2020456944b001602db8000c2cb8000b2a21
2db8000d2c2046b003254652582359208a208a49648a204620686164b004
254620686164525823658a592f20b00053586920b000545821b040591b69
20b000545821b0406559593a2db8000e2c2046b00425465258238a592046
206a6164b0042546206a61645258238a592ffd2db8000f2c4b20b0032650
585158b080441bb04044591b21212045b0c05058b0c0441b2159592db800
102c2020456944b001602020457d691844b001602db800112cb800102a2d
b800122c4b20b003265358b0401bb000598a8a20b0032653582321b0808a
8a1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800132c4b535845441b2121592d00000001000000010000859a
d44b5f0f3cf5011903e800000000b643f86800000000cb980451fc1ffe1f
05e704350002000900020001000000000001000003bdff2b001c05dcfc1f
fe6205e703e800d5000000000000000000000000085801f4003200000000
0116000001160000000000000116000001160000000000000103000001aa
0092022c0022022cfff2039e004f027600150116008e010300230103ff8c
0160004b025800300116fff10185001a0116000f014dffef022c0019022c
007c022cfffb022c0000022cfffd022c0007022c001d022c0061022c0016
022c00030116000f0116fff10258002e025800300258002e022c00560320
002a029bffca02ad000702d2002602c0000702630007023e000702f70026
02d20007010300070207fff8029b0007022c00070366000702d2000702f7
00260288000702f7002602ad00070288000a023e003c02d200230263004f
039e00500263ffd5026300420263ffdb0103ffe4014dffef0103ff810258
003201f4000000de004c0207fff70251fffc02190015025100110219000a
01280017023effeb022cfffc00defffc00deff8901e1fffc00defffc0354
fffc022cfffc023e00110251ffd002510011014dfffc01e1fff8013b0021
022c000f01e1002a02f7002901e1ffbf01e1ffc201bcffcc014d001e00de
004d014dffa602580045029bffca029bffca02d200260263000702d20007
02f7002602d200230207fff70207fff70207fff70207fff70207fff70207
fff7021900150219000a0219000a0219000a0219000a00defffc00defffc
00defffc00defffc022cfffc023e0011023e0011023e0011023e0011023e
0011022c000f022c000f022c000f022c000f022c003f0190004d022c001f
022cfffe022c000701f40048025800410219fffc032000180320001803de
004000de008900de003902580030039effb202f7fff502e8001102580030
025800170258001f022c003d022cffc9021600300240002902ee0057026e
002b01570000013700210158002b02f0fff90366fffc023effe3022cffee
0103ffe60258003002180000022cffee025800170288ffb801cf001e01cf
001b03e8002701160000029bffca029bffca02f700260432002a038b0011
01f4ffea03e8006b01aa005901aa00550116006f0116006b025800300258
005601e1ffc20263004200a7ff5b022cfffb0103001e0103001302070017
02070017022cffec011600430116ffe001aaffdd04320030029bffca0263
0007029bffca026300070263000701030007010300070103000701030007
02f7002602f700260316003302f7002602d2002302d2002302d2002300de
fffc00de001e00de001700de003500de003400de008900de005600deffd8
00de000d00deffe600de004102f0fff9022c0019022cffec00defffa0342
000e0342004f014d0061025800470288000700de004d02c000070342004f
02580030023e00110251ffd0014d000c014d000e0288000a026300420263
ffdb01e1fff801e1ffc201bcffcc0000ff6f0000ffac0000ff410000ff3a
0000ff580000ff570000ffac0000ff5c0000ff790000ff300000ff640000
fefb0000ff090000fea30000000000de003d00de005c02e10026032a0026
028b00110263ffdb01bcffcc022b0011026300070263000702ee003d0226
000802ce00260288000a01030007010300070207fff80449ffaa045d0006
02ee003d029b000702da00060263fff602c80006029bffca02a3000602ad
00070226000802d9ff9b0263000703f3ffae028a001202da000602da0006
029b000702bfffaa0366000702d2000602f7002602c800060288000702d2
0026023e003c0263fff6033e00200263ffd502d0000602920047041b0006
042b00060302003c03680006028d000902ce001603f20006029fffb60207
fff7023e001a0212fffc01a8fffe024dff9c0219000a02f8ffa801f4fffe
0236fffc0236fffc01f4fffc0233ffba02b0fffc0230fffc023e00110226
fffc0251ffd00219001501cf001601e1ffc20323001101e1ffbf0234fffc
020800290323fffc0339fffc024f001602c4fffc01fefffc0219fffe0306
fffc020cffc10219000a0219000a0236000601a8fffe0219001401e1fff8
00defffc00defffc00deff890359ffba0356fffc0236000601f4fffc0236
fffc01e1ffc20226fffc02c60014022c000f03a7fff802d9fff102f70026
023e0011029b004f01ff002a02c60032021d000f0226000801a8fffe0263
000901d7fffa03fdffae0302ffa8028a001201f4fffe02a5000701fefffc
029e0006021ffffc0313003c0245001602e30006023afffc03f8000602fe
fffc02d20026021900150263004201e100260263004201e1ffe8026dffd5
01eaffbf029f0047021200290292004702080029029b0006022cfffc0103
000703f3ffae02f8ffa8029bffca0207fff7029bffca0207fff7039effb2
0366fffc026300070219000a02e10026022b001103f3ffae02f8ffa8028a
001201f4fffe02da00060236fffc02da00060236fffc02f70026023e0011
02f70026023e00110263fff601e1ffc20263fff601e1ffc20263fff601e1
ffc202920047020800290372000602c4fffc040b0006029bffca0207fff7
02d2002602190015026300070219000a02d20007022cfffc0288000a01e1
fff80263ffdb01bcffcc0263ffdb01bcffcc0288ffbd0288ffbd0288ffbd
039effbd02d2002902d2002902d2002902c0001202c00012026300120263
0012026300120263001202f7002802f7002802f7002802f7002802d20012
02d20012010300160103001601030016010300160103ffc70207ffec029b
0012022c0012022c0012022c0012022c001202d2001102d2001102f80026
02f8002602f8002602f8ffeb02ad001202ad001202ad00120288000c0288
000e0288000c023e004c023e004c023e004c023e004c02d2003502d20035
02d2003502d2003502d2003502d20027039e0067039e0067039e0067039e
00670288005d0288005d0219fffc0219fffc0219fffc0366fffc02190011
021900110219001102510013025600130219001402190014021900140219
0014023effe8023effe8023effe8023effe8022c00040231000900de0009
00de000900de000900deffb100deff8d00deff8d020700090202000400de
00090120000900deffdb01560009022c0004022c000402970037023e0012
023e0012023e0012023effe6014d0001014d0001014dffd301f4fffd01f4
fffd01f4fffd013b002a013b0013013b0025013b000f022c0020022c0020
022c0020022c0020022c0020022c002002f6004202f6004202f6004202f6
004201f4ffd301f4ffd30302001601b6000902410027031f0027031f0027
00de007000de009b00de004200de006000de008d00de003200de005000de
003600de000e00de005500de007400de003900de00ae0116fff40116009c
018500280116004b00a7ff19034200400342004d0342001a034200380342
0044034200440288ffc0022cffdc01f4003702f80029022c000402d20011
02060027020600270185002803e8005a022c00600172005a017200470172
004b017200390172007b01720045017200510190005b00fa00570190004e
00be005c00be000e017200420172ffe10172001b0172ffc00172ffca0172
ffce0172ffd30172ffc1017200030172ffd30172ffd90190ffe300faffdf
0190ffd500beffe400beff97034200350320001700de006b00deffb10116
fff800f1009900f10095014c003e028fffc40116006d02f2004803610048
018a004803610048034a00480364004800ed00110288ffbd02ad00120228
0012026300120263ffda02d2001202f8002601030016029b00120265ffbd
0367001402d20011023affe902f8002602cb0012028800120262ffee023e
004c0288005d030900280263ffc3033b0059010300160288005d024b0014
01e5fff9022d000400ed0011020f0010024b00140234ffdc01d1003f022a
001001e5fff901b10007022d00040216001d00ed0011020200040206ffd0
01e4003f01a9000c023e0012023affd5020100120235001201c40024020f
001002cc000c01c1ff900296002c02cf000f00ed0011020f0010023e0012
020f001002cf000f00de006700de0079022cffdb022cffd90000fe3600d0
ff8a0116001a022c000e01f4fffa022c00310000ff0b0000fe880000fe92
0000fe9c0000fedd0000fedc0000fedc0000fef00000fea30000ff0d0000
feda0000feaa0000fe410000fe230000fdf10000fe5b0000fe0b0000fe2d
0000fe670000fe120000fdf40000fe040000fdec0000fddd0000fdf10000
fde20000fe300000fe430000fe340000fdca0000fedc0000fe700000fedc
0000fe920000fe9b0000fe34000000000116ffa5022c00190341001c014d
00060341001c014dffe7014d00060209fffb0209ffff00fb00100193ff9a
0116ffec0116fff501f4ffc902d2ffcc01f4ffce022c0078022c0076022c
002b01f4000e024bfffd024b001402d2001902d2001502370017029b0019
029b000401f4fff5023effe0035e003d02ba001702f300140104001d01af
001d011600230238000201f4fffd0096ffaf014d0080014d00be05620013
029b0038014300380219ffd6020b0080020b00be02a2008002a200be014d
001f01430078014d001f01620049008b0000000000000000000000000000
0000000000000000000000000000000001f4000003e80000011600000341
0000014d00000116000000a70000022c0000006900000116000000000000
000000000000000000000000002c0000000f0000014dff8801ae001d014d
001f014d004d0219001a02190039029bffd302630019022c001003790014
02a4fffb0000fef90000ff060000fe600000fe530000fea20000feac0000
feff0000feaa0000feb80000feb50000feb00000feab0000fe660000fed6
0000ff020000fed50000fe9e0000fdd80000fe3c0000fe070000fe1d0000
fdf00000fe080000fdf10000fea500a7004f0136004f0462006203f30062
029b001001160026022c00260341002603b10026029b007503b1007504c7
007505dc007503b10026029bffd903b1ffd904c7ffd9022c001002d20011
02d200150341000e00de000401bc0004029b000402d2000401f4003802d2
003803b00038048f003802d2000401f4ffc902d2ffc903b0ffc900de0007
01f4fffd022cfffa0341000404d3fffd0446ffeb03d6fffa03d5fff802c3
fffb0173ffef0459fffb0363fff802c0ffed029bffd3022cfffb01160026
01160020030a0014022cfffb02d2003d022c001702d2003d022c001702d2
003d022c001702d2003d022c001702d2003d022c0017029bffd3022cfffb
029bffd3022cfffb03e8ffcc0379fff6030a0017022cffd9029b001001f4
0002030a0014022cfffb030a0014022cfffb00deff8504c9ffed0463fffa
03e6fffa030a001702d20010022c0004029bffd3022cfffb029bffd3022c
fffb029b0019022c0001029b0019022c00010116002600defffc01160026
00de0009030a0014022cfffb030a0014022cfffb02d2001c014d000702d2
001c014d000702d2003d022c001702d2003d022c001702d20013022c0004
029bffd3022cfffb029b0019022c0001030a0014022cfffb030a0014022c
fffb030a0014022cfffb030a0014022cfffb029b007101f4ffd1014d004c
029bffd3022cfffb029b000e022cfffe029b000e022cfffe029b000e022c
fffe02d2001101f4fffa02d20015022cfffa02d20015022cfffa02d20015
022cfffa02d20015022cfffa02d20015022cfffa029b0019022c0001029b
0019022c0001029b0019022c0001029b0019022c0001029b0019022c0001
026300190116001a030a0017022cffd902d20013022c000402d20013022c
000402d20013022c000402d2ffb6022cffa702d20013022c00040116ff98
00deff720116002601160020029b001001f40002029b001001f40002029b
001001f40002022c001000deffed022c001000deffe6022c001000deff8a
022c001000deff7e0341000e034100040341000e034100040341000e0341
000402d20010022c000402d20010022c000402d20010022c000402d20010
022c0004030a0014022cfffb030a0014022cfffb030a0014022cfffb030a
0014022cfffb029b0019022cffd1029b0019022cffd102d2001c014d0007
02d2001c014dffe502d2001c014dffe602d2001c014dffbb029b000b01f4
fffa029b000b01f4fffa029b000b01f4fffa029b000b01f4fffa029b000b
01f4fffa0263005a011600210263005a0116fffb0263004d0116ff9e0263
00390116ff8d02d2003d022c001702d2003d022c001202d2003d022c000c
02d2003d022c001702d2003d022c0017029b007501f40038029b007501f4
003803b0006e02d2003c03b0006e02d2003c029bffd901f4ffc9029bffd9
01f4ffc9029b007101f4ffd10263ffdb01f4ffdd0263ffdb01f4ffdd0263
ffdb01f4ffdd022c00040116002102d2003c01f4ffd10116001a029bffd3
022cfffb029bffd3022cfffb029bffd3022cfffb029bffd3022cfffb029b
ffd3022cfffb029bffd3022cfffb029bffd3022cfffb029bffd3022cfffb
029bffd3022cfffb029bffd3022cfffb029bffd3022cfffb029bffd3022c
fffb029b0019022c0001029b0019022c0001029b0019022c0001029b0019
022c0001029b0019022c0001029b0019022c0001029b0019022c0001029b
0019022c000101160026011600200116000400deffe6030a0014022cfffb
030a0014022cfffb030a0014022cfffb030a0014022cfffb030a0014022c
fffb030a0014022cfffb030a0014022cfffb0379001402a4fffb03790014
02a4fffb0379001402a4fffb0379001402a4fffb0379001402a4fffb02d2
003d022c001702d2003d022c0017035e003d02ba0017035e003d02ba0017
035e003d02ba0017035e003d02ba0017035e003d02ba0017029b007101f4
ffd1029b007101f4ffd1029b007101f4ffd102de002601fdfff9010b003b
010b00470000fe300116fff000b2006d00b2006d0000fee70000fec900b2
007d015d0050015200500179006d0180007d010b006c010b00440186006d
01a700820190007d01a7008203000023030affdc022c0038034200780342
0038022cff8302d2ff91022c00040341000401ec00100223002201c80010
02170008030a0014014dffab03ccffd903cc00470000fceb0000fd4d0000
fd700000fd5f0000fcb902ef002b022c00110318001502350007022cffd6
022cfffb025b0004025ffffa022cfffe0250fffa025dffd9022c0004025d
0004010bffe803b0000001b90006014dffe8025bfff9024e004502860045
03a3fffa02a000210210fffe02d6001a02530007024e000700d0008400d0
009100de008d00bf0076014d009f014d007b00bfffd0014dffa8014dfff9
014dffd500d0003100d0003e014dffc8014d002d0116002f0116002f006f
fff000a7003100a7003000dd00300169004b00fa00160116006a01160069
0124002d012400150124001e0124005b014d001b0124fff00124ffda0124
000700fa002a00fa0012006f003001240033011600430124ffde0124ffa2
0124ffb20124ff9a014dffe3011600690000fe0b0000fe060000fdee0000
fe500000fe580000fdd40000fe7a0000fd6f0000fe6a0000fdd40000feb1
0000feaf0000feb800000000011600000000000000000000000000000185
000a0185000a0358008003ccffb7011600290458007803ccffd90379008d
036cfff20116ffd80116ffdb000000000000000000000000000000000000
000000000000032a0000030a0028022c0096022c0010029bffd902ee003a
0395006203cd00420342004402d2001c029b0081026400930337ffb3029b
0019022cfffe029b002f022c001d0263ff99030a001402540013011affd5
01aa003802d2000a015500170193ff9a022c0061022c006c00deffd900de
0033022cffd90263000f0263000f0263000f0263000f0263000f0263000f
0263000f0263000f02cffff002c8fff003a0006d03a5007d03a5006d03b0
007d03ce008203b90082022c0013022c0013022c0013022c0013022c0013
022c0013034d006d034d007d0421006d042b007d0414006d041b007d0263
001e0263001e0263001e0263001e0263001e0263001e0263001e0263001e
0384006d0384007d0458006d0462007d044c006d0452007d047900820479
00820116002a0116002a0116002a0116002a0116002a0116002a0116002a
0116002a01c8006d01c8007d029b006d02a6007d028f006d0296007d02bd
008202bd0082026300190263001902630019026300190263001902630019
03bc006d03bc007d048f006d049a007d0483006d048a007d0263001c0263
001c0263001c0263001c0263001c0263001c0263001c0263001c034d007d
042b007d041b007d0442008202f6001502f6001502f6001502f6001502f6
001502f6001502f6001502f6001503b2006d03b2007d0486006d0490007d
047a006d0480007d04a7008204a700820263000f0263000f022c0013022c
00130263001e0263001e0116002a0116002a02630019026300190263001c
0263001c02f6001502f600150263000f0263000f0263000f0263000f0263
000f0263000f0263000f0263000f03f0fff003eefff004ac006d04ce007d
04a3006d04b1007d04cc008204ca00820263ffe40263ffe40263ffe40263
ffe40263ffe40263ffe40263ffe40263ffe4049a006d049a007d056e006d
0578007d0561006d0568007d058f0082058f008202f6001502f6001502f6
001502f6001502f6001502f6001502f6001502f6001504c8006d04c8007d
059c006d05a6007d058f006d0596007d05bd008205bd00820263000f0263
000f0263000f0263000f0263000f0263000f0263000f029bffd1029bffd1
03200049031d004403beffd10263ffe40263ffe40263ffe40263001e0263
ffe40342006c034000440355006c034900440400001a0116002a01160029
011600250116002a0116002a0116002a0116001f0116001f0198006c019a
00440263001c0263001c0263001c0263001c0263ffed0263ffed0263001c
0263001c029b006e029b006e0344006c03740044034d007d02f6001502f6
001502f6001502f6001502f600150397006c03ae004403b2006c03be0044
0423fff2024800040266002a026d0070017100180155002802d20011030a
001400de0027029b001902d200130000fe5b0299fff7022cfffa03a3000b
0386fffe0342003b0342003b0342004003f9002a02df00070340003a02d2
0020029bffd301f4ffc903b6002a02d60007025e0020015d001702db000f
02b3003202d2ffff022cfffb0186ffc4025e001301ea0013031200130259
0004029b001001f400020263ffdb01f4ffdd026d006301fd0040025e0020
01b4000b038e002e02b90012038e002e02b9001203a3007102c8003f02de
00180235000b022cfffb029800230298fff60412ffe502deffd7029b0075
024d003801f400000298001301f9fff302e7ffd80240ffd50116002002a6
ffda01fdffd6029bffdd029bffd302d2001101f4fffd022c000002630028
00deffef0155002802630046029b0019022c0078022c0050029b0019022c
0001021effe300deff8502d2001700d0001100d0ffd2014d001a014d0038
014d003b014dffb90116005d014dffdf014dffdf02af0020024800040248
0012011600330248001602ae00180248003e0116003301160033030a0022
01fd000301fdfff6029b0019022cffd402d200110341000e02ddffe402bd
ffcb02d2001c02d2001102d2001c01f4000001f4fffd01f40000022c0020
02d4ffff034f0028030d001c0186fff50304003d0266000f0236ffe6014d
007f014d00b1014d0021014d00210134ffe10134ffe1019c004d019cffc4
019c002a019c0008019cffe60236ffe401f000420222ffed020e0004020e
00040176003a019e00040339001d0318fff40285001b0000fc1f035c0001
0266fff300ea004700ef004700aa003400aa005600c8003700c7003b0175
005f0179005f012c0024012400240124005f015c004700e6005900e6002b
03ddffe004a2ffce047dffb2047dffab009affe9021e000202b4000b02b4
005b0251ffcc0214ffd200e6fffb00e6ffcd01f3000101f3fff101f6ffdc
01ad000b0226fffd0000fd7d0000fdf50000fdb80000fe830000fe740000
fcea0000fe150000ff940000fdf80000fddd0000fcca0000feb50225fff0
0225fff601f4ffc501f4ffcd03a5ffea0219fff301e9ffca027effdd0317
ffff0256ffd401f6ffd402e1fffa02e1fffa02e1fffa03e8fffe03e8fffa
03e8015f03e8014b03e8015f03e8014b03e8fffd03e8fff903e801d703e8
01bf03e8fffd03e8fff903e8ff86006f00370116ff970116ff9b0116ff98
00faff7f0116ffa202d20011030a001702d20011022b0023029900300263
0026029bffd3025a001002d0ffea025effea02d2ffe00341000402d70022
031f001203fe001c0299004c0299000e01c3fff501b5ffd501c3005001b5
003001c3004701b6001f01c3ffed01b6ffc4016dffed0169ffed0169ffed
0169ffed016dffed016d004d0169002a0169000a0169ffeb016dffcf01a7
ffed01a7ffed01a7ffed01a7ffed01a7ffed0138002a018e002901ce002b
01d6002b0276001b033a002401bd00020000fe6e0000fe970000fe620000
fe840000fe810000fe680000fe640000fe490000fe300225fff601f4ffcd
04fe00140420fffb020e0004020e0004020e0022018b0034018b005b01a1
003602770030018b0036018b0034018b0039018b00430172003401720046
018b001d009e003b01630039024f003b018b003b018b003501630034018b
0046018b0035018b001700c5004f018b004801af002f024f004d01630060
01b2002d018b005701b20046025ffff3030600070251ffcb022c0015022c
fffb0264fffe02620003026e000103a1000b018bfff6009effaa00ecffab
018bffb70163ffce01b2ff9c018bffc501b2ff99018bff650209001502d1
ffcc00de00040222ffed0370ffda0351fff3025c0047026effec0163fff7
0266ffb1018efff80164fff70165fff800de008d014d0061028f00340256
ffc6017f006c02aa000e04460009022c000901670046022cffe3022cfff4
022c0001022cfffc022c0005020b003d022cfff7022c000201db004f01db
ffc801dbffc8018effdf02ac0038030e0023023fffdf029fffe70311ffca
0209ffd40282ffe403f3000e0296ffdf03adffef01e5ffdf025fffe2045f
fff303e6004402a7000a0281ffd50307001603c6ffe00229002503790006
036900150377ffdf0296002802f7ffef03230015023f003f0323002803e7
fff002c5ffd80261ffdf029400240357001502beffd604e7001303630040
03ef0014045b0028022d0000034e0074047700020267000b02b1ffdf0225
002202b7003402ceffe80209007203e200590261fff202e4003c0332ffe9
0332ffe90311005e0231ffe8037f001302f9ffe7028bffdf028bffdf02e1
001402c70015039a0023025dffe802e5001503750041030bffd8030dffdf
02b0000303490014036b0028049bfff3032300150397003f026500080265
002404e3000f02d2ffec0359ffd202c5ffd8035a00280293ffe50315ffe8
02ceffe802b3004102eafff8040000150288ffbe02d20035029bffd3015e
004f0208002c01f700140250002b027c002e0406001f0246ffd80256fff2
03010076040a0030028d0030023ffffe04c7001a0250002a0262004103a8
00300251001b025affed036e00300229003b033e0017039e003e034b003e
0256fffd0371001a0239fff00266003b023800180276001b0252001f024a
00780280fff002410038034affe80206001602e40041028d00020256ffff
022cfff1025c001c03a8002b022900460000000000000088000000880000
008800000088000000880000008800000088000000880000008800000088
000000880000008800000088000000880000008800000088000000880000
008800000088000000880000008800000088000000880000008800000088
000000880000008800000088000000880000008800000088000000880000
008800000088000000880000008800000088000000880000008800000088
000000880000008800000088000000880000008800000088000000880000
008800000088000000880000008800000088000000880000008800000088
000000880000008800000088000000880000008800000088000000880000
008800000088000000880000008800000088000000880000008800000088
000000880000008800000088000000880000008800000088000000880000
008800000088000000880000008800000088000000880000008800000088
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c0000016c0000016c0000016c0000016c
0000016c0000016c0000016c0000016c0000016c0000016c0000016c0000
016c0000016c0000016c0000016c00010000085800960009000000000002
0000000000140000020002c6000000000000002501c20001000000000000
021200000001000000000001000e02120001000000000002000602200001
000000000003002a02260001000000000004001502500001000000000005
0007026500010000000000060014026c000100000000000700e402800001
00000000000a01330364000100000000000b001f0497000100000000000c
001f04b60001000000000100001804d50001000000000101000c04ed0001
000000000102000904f90001000000000103001005020001000000000104
001505120001000000000105001505270001000000000106000d053c0001
0000000001070014054900030001040400020004055d0003000104060002
000c05610003000104070002000c056d0003000104090000042405790003
000104090002000c099d00030001040b0002001009a900030001040c0002
001009b90003000104100002000e09c90003000104110002000a09d70003
000104120002000809e10003000104130002000e09e90003000104140002
000c09f70003000104160002000e0a03000300010419000200120a110003
0001041d0002000c0a23000300010804000200040a2f000300010c010002
00080a33000300010c0a0002000e0a3b436f707972696768742028632920
313938312c20313938322c20313938332c203139383920616e6420313939
332c204c696e6f74797065204c69627261727920476d6248206f72206974
7320616666696c6961746564204c696e6f747970652d48656c6c20636f6d
70616e6965732e20416c6c207269676874732072657365727665642e0a0a
546865206469676974616c6c7920656e636f646564206d616368696e6520
7265616461626c6520736f66747761726520666f722070726f647563696e
672074686520547970656661636573206c6963656e73656420746f20796f
75206973206e6f77207468652070726f7065727479206f66204865696465
6c62657267657220447275636b6d61736368696e656e20414720616e6420
697473206c6963656e736f72732c20616e64206d6179206e6f7420626520
726570726f64756365642c20757365642c20646973706c617965642c206d
6f6469666965642c20646973636c6f736564206f72207472616e73666572
72656420776974686f757420746865206578707265737320777269747465
6e20617070726f76616c206f662048656964656c62657267657220447275
636b6d61736368696e656e2041472e0a0a436f7079726967687420286329
20313938382c20313939302c20313939332041646f62652053797374656d
7320496e636f72706f72617465642e20416c6c2052696768747320526573
65727665642e48656c766574696361204e6575654974616c696348656c76
6574696361204e657565204974616c69633b20382e30643665313b203230
31322d30332d323748656c766574696361204e657565204974616c696338
2e306436653148656c7665746963614e6575652d4974616c69632248656c
766574696361204e6575652220697320612074726164656d61726b206f66
2048656964656c62657267657220447275636b6d61736368696e656e2041
472c207768696368206d6179206265207265676973746572656420696e20
6365727461696e206a7572697364696374696f6e732c206578636c757369
766c79206c6963656e736564207468726f756768204c696e6f7479706520
4c69627261727920476d62482c20612077686f6c6c79206f776e65642073
756273696469617279206f662048656964656c6265726765722044727563
6b6d61736368696e656e2041472e48656c76657469636120284c6174696e
20666f72205377697373292068617320746865206f626a65637469766520
616e642066756e6374696f6e616c207374796c6520776869636820776173
206173736f6369617465642077697468205377697373207479706f677261
70687920696e2074686520313935307320616e642031393630732e204974
206973207065726665637420666f7220696e7465726e6174696f6e616c20
636f72726573706f6e64656e63653a206e6f206f726e616d656e742c206e
6f20656d6f74696f6e2c206a75737420636c6561722070726573656e7461
74696f6e206f6620696e666f726d6174696f6e2e2048656c766574696361
206973207374696c6c206f6e65206f662074686520626573742073656c6c
696e672073616e732d736572696620666f6e74732e687474703a2f2f7777
772e4c696e6f747970654c6962726172792e636f6d2f687474703a2f2f77
77772e4c696e6f747970654c6962726172792e636f6d2f416c6c20547970
6f67726170686963204665617475726573416c6c2046656174757265734c
6967617475726573436f6d6d6f6e204c6967617475726573556e69636f64
65206465636f6d706f736974696f6e43616e6f6e6963616c20636f6d706f
736974696f6e536d617274205377617368657341726368616963204c6f6e
672073205377617368659c9ad4004b00750072007300690076004b007500
720073006900760043006f00700079007200690067006800740020002800
63002900200031003900380031002c00200031003900380032002c002000
31003900380033002c0020003100390038003900200061006e0064002000
31003900390033002c0020004c0069006e006f0074007900700065002000
4c00690062007200610072007900200047006d006200480020006f007200
2000690074007300200061006600660069006c0069006100740065006400
20004c0069006e006f0074007900700065002d00480065006c006c002000
63006f006d00700061006e006900650073002e00200041006c006c002000
720069006700680074007300200072006500730065007200760065006400
2e000a000a0054006800650020006400690067006900740061006c006c00
7900200065006e0063006f0064006500640020006d006100630068006900
6e00650020007200650061006400610062006c006500200073006f006600
74007700610072006500200066006f0072002000700072006f0064007500
630069006e00670020007400680065002000540079007000650066006100
63006500730020006c006900630065006e00730065006400200074006f00
200079006f00750020006900730020006e006f0077002000740068006500
2000700072006f007000650072007400790020006f006600200048006500
6900640065006c0062006500720067006500720020004400720075006300
6b006d00610073006300680069006e0065006e0020004100470020006100
6e006400200069007400730020006c006900630065006e0073006f007200
73002c00200061006e00640020006d006100790020006e006f0074002000
62006500200072006500700072006f00640075006300650064002c002000
75007300650064002c00200064006900730070006c006100790065006400
2c0020006d006f006400690066006900650064002c002000640069007300
63006c006f0073006500640020006f00720020007400720061006e007300
660065007200720065006400200077006900740068006f00750074002000
740068006500200065007800700072006500730073002000770072006900
7400740065006e00200061007000700072006f00760061006c0020006f00
66002000480065006900640065006c006200650072006700650072002000
44007200750063006b006d00610073006300680069006e0065006e002000
410047002e000a000a0043006f0070007900720069006700680074002000
280063002900200031003900380038002c00200031003900390030002c00
200031003900390033002000410064006f00620065002000530079007300
740065006d007300200049006e0063006f00720070006f00720061007400
650064002e00200041006c006c0020005200690067006800740073002000
520065007300650072007600650064002e004900740061006c0069006300
4b0075007200730069006900760069004900740061006c00690071007500
650043006f0072007300690076006f30a430bf30ea30c330afc774d0e4b9
adccb40043007500720073006900650066004b0075007200730069007600
49007400e1006c00690063006f041a04430440044104380432043d044b04
39004b00750072007300690076659c4f5306450627062606440043007500
72007300690076006100b8000a2b00ba00020001000c2b01ba0003000300
0c2b01bf000400410035002a001e0012000000122bbf0005003a00300025
001b0010000000122b00bf000200450039002c00200013000000122bbf00
03004e0040003200240016000000122b00ba0006000400112bb800012045
7d691844b800002b000000>
[365 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> JXRAAA+HelveticaNeue-Italic AddT42Char 
1 136 85 <0001fffc000001f40211001f007dba0017000c00032bb8001710410500da
000c00ea000c00025d411b0009000c0019000c0029000c0039000c004900
0c0059000c0069000c0079000c0089000c0099000c00a9000c00b9000c00
c9000c000d5db8000c10b80013d0b800132fb8001710b80021dc00b80001
2fb800122fba001a000900032bb8001a103031130333133e01373e013332
1615140e02070333133e01353426232206072337686c543c081a17184523
26340304040142553f0708474936622002100205fdfb011e1f39141a2223
250715171508fed201271e361145402d2d4e>JXRAAA+HelveticaNeue-Italic AddT42Char 
1 0 0 <00020032000001ce02c800030007005bb8000a2bb800082fb800092fb800
04dcb80000dcb8000810b80006d0b800062fb80002dc00b800014558b800
042f1bb90004000c3e59b800014558b800052f1bb9000500063e59b80004
10b80000dcb8000510b900020003f43031012111211311211101affea201
5e1ffe6402a6fd7f02a3fd3802c80000>JXRAAA+HelveticaNeue-Italic AddT42Char 
JXRAAA+HelveticaNeue-Italic /CharStrings get begin
/space 3 def
/n 85 def
end
JXRAAA+HelveticaNeue-Italic /Encoding get
dup 10 /space put
dup 110 /n put
pop
end
%ADOEndSubsetFont
/ZDWBPK+HelveticaNeue-Italic /JXRAAA+HelveticaNeue-Italic findfont ct_VMDictPut/ZDWBPK+HelveticaNeue-Italic*1 [10{/.notdef}rp /space 99{/.notdef}rp /n 145{/.notdef}rp]ZDWBPK+HelveticaNeue-Italic nfZDWBPK+HelveticaNeue-Italic*1 [6.2247 0 0 -6.2247 0 0 ]msf186.148 398.972 mo(n\012)[3.46094 0 ]xshZDWBPJ+HelveticaNeue*1 [6.2247 0 0 -6.2247 0 0 ]msf191.339 398.972 mo(= 8)sh200.446 398.972 mo(4)shZDWBPK+HelveticaNeue-Italic*1 [6.2247 0 0 -6.2247 0 0 ]msf229.727 398.972 mo(n\012)[3.46094 0 ]xshZDWBPJ+HelveticaNeue*1 [6.2247 0 0 -6.2247 0 0 ]msf234.918 398.972 mo(= 3)sh244.012 398.972 mo(0)shZDWBPK+HelveticaNeue-Italic*1 [6.2247 0 0 -6.2247 0 0 ]msf263.701 398.972 mo(n\012)[3.46094 0 ]xshZDWBPJ+HelveticaNeue*1 [6.2247 0 0 -6.2247 0 0 ]msf268.892 398.972 mo(= 7)sh277.813 398.972 mo(0)shZDWBPJ+HelveticaNeue*1 [0 -5.6022 -5.6022 0 0 0 ]msf176.409 305.067 mo(H3K4me3)[-4.19604 -3.23807 -3.73111 -3.21567 -4.91309 -3.18207 0 ]ysh176.409 374.518 mo(RNA pol III)[-3.98874 -4.20166 -3.63019 -1.5574 -3.47339 -3.33893 -1.24371 -1.5574 -1.55182 -1.55182 0 ]ysh35.8551 334.961 mo(\320rRNA)[-3.09241 -1.99435 -3.98874 -4.20166 0 ]ysh42.5777 338.793 mo(RNA-Seq)[-3.98877 -4.20163 -3.74786 -2.35297 -3.77585 -3.18207 0 ]ysh%ADOBeginSubsetFont: JQBAAA+HelveticaNeueLTStd-LtCn Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /JQBAAA+HelveticaNeueLTStd-LtCn def/FontInfo 7 dict dup begin/Notice (Copyright 1990, 2002 Adobe Systems Incorporated. All rights reserved. Copyright 1990, 2002 Linotype GmbH. All rights reserved. Helvetica is a trademark of Linotype Corp. registered in the U.S. Patent and Trademark Office and may be registered in certain other jurisdictions in the name of Linotype Corp. or its licensee Linotype GmbH.) def/Weight (Light) def/ItalicAngle 0 def/FSType 4 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 49 /one putdup 50 /two putdef/FontBBox {-167 -204 1000 927} defendsystemdict begindup /Private15 dict dup begin/|- {def} def/| {put} def/BlueValues [-12 -0 714 726 531 543 696 708] def/OtherBlues [273 280 367 374 -184 -176] def/FamilyBlues [-17 -0 714 731 517 529] def/FamilyOtherBlues [273 280 380 387 -210 -198] def/BlueScale 0.0424999 def/StdHW [50] def/StdVW [60] def/StemSnapH [44 50 54 60 102] def/StemSnapV [50 54 60 64 68] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/zero <1C60D8A8C9B75BE591895EE1B7358F6A8E613D847020697070645E8F7859E4B86911D031F2D35BD8B1A42F9668772807466F2D06334674D918BB90A71A1A9E147FB84BFDEEA6FE40B9ECC10BD771A25706D9E6FE098ED5> |-/one <1C60D8A8C9B75BE54E5BDF822EAAC23E7B68F726C62249A1939CE2B859C1C1D29EF8E7EB0FBE57DF097674EAD98AFED0FAA02E19FD905FEAE602ED8B70791A1E94BD5E6853F44D> |-/two <1C60D8A8C9B75BE5657821C13C062ED7D1ED8B802C396E144D2F79E954158C1ABB2FEBA4A8F0DC36BC360730B5089D1AB0C740B1714D3AB81655D092B456D8F6066FAE6A3B3ADEAB7F235A25C7310647F3C2E443F0A1E832ECDB736A4562DE7213732F235363B0E97A72132A50003BBD84AFE282633D8D81EF7CEC57606E122EF2A5EB8D> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/ZDWBPL+HelveticaNeueLTStd-LtCn /JQBAAA+HelveticaNeueLTStd-LtCn findfont ct_VMDictPut/ZDWBPL+HelveticaNeueLTStd-LtCn*1 [48{/.notdef}rp /zero /one /two 205{/.notdef}rp]ZDWBPL+HelveticaNeueLTStd-LtCn nfZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf76.9893 325.761 mo(10)[1.71799 0 ]xsh76.9893 318.28 mo(20)[1.901 0 ]xsh.5 lw
0 lc
0 lj
10 ml
[1.509 1 ] 0 dsh
true sadj
53.27 342.068 mo
53.27 310.943 li
0 0 0 .5 cmyk
@
68.0386 342.068 mo
68.0386 310.943 li
@
96.8418 342.068 mo
96.8418 310.943 li
@
111.612 342.068 mo
111.612 310.943 li
@
89.999 332.4 mo
89.999 332.376 li
90.359 332.36 li
90.719 332.354 li
91.079 332.387 li
91.439 332.392 li
91.799 332.38 li
92.159 332.376 li
92.52 332.373 li
92.881 332.379 li
93.24 332.361 li
93.601 332.358 li
93.961 332.321 li
94.32 332.356 li
94.68 332.344 li
95.042 332.376 li
95.403 332.36 li
95.762 332.299 li
96.122 332.252 li
96.482 332.221 li
96.842 331.491 li
97.202 325.415 li
97.563 324.418 li
97.923 324.067 li
98.283 324.675 li
98.643 324.383 li
99.003 325.474 li
99.363 325.449 li
99.724 325.457 li
100.085 325.75 li
100.445 326.091 li
100.805 326.155 li
101.165 325.991 li
101.525 326.233 li
101.885 326.988 li
102.246 326.333 li
102.606 326.534 li
102.967 326.308 li
103.327 325.907 li
103.687 326.379 li
104.047 325.767 li
104.407 325.842 li
104.766 325.814 li
105.128 324.864 li
105.488 324.284 li
105.849 325.389 li
106.208 324.309 li
106.567 324.395 li
106.928 324.108 li
107.288 324.858 li
107.65 325.307 li
108.01 325.674 li
108.369 324.348 li
108.729 324.979 li
109.089 324.473 li
109.449 323.036 li
109.81 323.021 li
110.171 322.945 li
110.531 321.736 li
110.891 321.75 li
111.251 321.216 li
111.612 321.68 li
111.972 329.289 li
112.331 329.774 li
112.693 329.651 li
113.053 329.348 li
113.413 329.1 li
113.773 329.199 li
114.133 329.098 li
114.493 329.853 li
114.853 329.006 li
115.214 328.672 li
115.574 328.862 li
115.935 328.548 li
116.295 329.546 li
116.654 329.723 li
117.014 329.868 li
117.374 328.631 li
117.736 328.519 li
118.096 328.611 li
118.456 329.86 li
118.815 329.627 li
118.815 332.4 li
cp
1 1 0 0 cmyk
f
89.999 332.4 mo
89.999 339.206 li
90.359 339.689 li
90.719 339.901 li
91.079 340.206 li
91.439 340.915 li
91.799 340.24 li
92.159 339.662 li
92.52 340.254 li
92.881 339.943 li
93.24 340.497 li
93.601 340.724 li
93.961 339.165 li
94.32 337.138 li
94.68 336.859 li
95.042 336.72 li
95.403 338.644 li
95.762 338.653 li
96.122 335.89 li
96.482 333.318 li
96.842 332.544 li
97.202 332.465 li
97.563 332.452 li
97.923 332.428 li
98.283 332.426 li
98.643 332.437 li
99.003 332.43 li
99.363 332.435 li
99.724 332.421 li
100.085 332.426 li
100.445 332.43 li
100.805 332.43 li
101.165 332.43 li
101.525 332.425 li
101.885 332.416 li
102.246 332.418 li
102.606 332.421 li
102.967 332.421 li
103.327 332.416 li
103.687 332.422 li
104.047 332.432 li
104.407 332.425 li
104.766 332.426 li
105.128 332.421 li
105.488 332.422 li
105.849 332.421 li
106.208 332.422 li
106.567 332.432 li
106.928 332.422 li
107.288 332.425 li
107.65 332.432 li
108.01 332.425 li
108.369 332.428 li
108.729 332.425 li
109.089 332.425 li
109.449 332.425 li
109.81 332.422 li
110.171 332.41 li
110.531 332.428 li
110.891 332.426 li
111.251 332.435 li
111.612 332.426 li
111.972 332.406 li
112.331 332.406 li
112.693 332.406 li
113.053 332.4 li
113.413 332.406 li
113.773 332.401 li
114.133 332.4 li
114.493 332.416 li
114.853 332.426 li
115.214 332.406 li
115.574 332.4 li
115.935 332.421 li
116.295 332.41 li
116.654 332.403 li
117.014 332.406 li
117.374 332.414 li
117.736 332.403 li
118.096 332.421 li
118.456 332.416 li
118.815 332.403 li
118.815 332.4 li
cp
0 1 1 0 cmyk
f
131.078 342.068 mo
131.078 310.943 li
0 0 0 .5 cmyk
@
145.847 342.068 mo
145.847 310.943 li
@
124.234 332.4 mo
124.234 332.361 li
124.595 332.358 li
124.956 332.327 li
125.316 332.33 li
125.675 332.356 li
126.035 332.327 li
126.397 332.328 li
126.757 332.334 li
127.117 332.318 li
127.477 332.314 li
127.837 332.334 li
128.196 332.316 li
128.556 332.288 li
128.919 332.282 li
129.277 332.288 li
129.638 332.283 li
129.998 332.288 li
130.357 332.256 li
130.718 332.145 li
131.078 330.902 li
131.44 322.31 li
131.8 320.427 li
132.16 320.943 li
132.519 319.11 li
132.88 319.577 li
133.239 320.643 li
133.6 321.374 li
133.96 321.362 li
134.32 321.42 li
134.681 321.425 li
135.041 320.346 li
135.401 321.675 li
135.761 320.918 li
136.121 322.504 li
136.482 322.432 li
136.843 322.584 li
137.203 322.755 li
137.563 322.971 li
137.922 323.039 li
138.283 322.44 li
138.642 322.017 li
139.004 321.443 li
139.364 321.343 li
139.724 321.795 li
140.084 322.674 li
140.444 321.565 li
140.803 319.917 li
141.163 321.09 li
141.526 320.756 li
141.886 319.554 li
142.245 320.37 li
142.605 320.264 li
142.965 320.253 li
143.326 321.471 li
143.686 319.754 li
144.047 321.495 li
144.407 321.797 li
144.766 321.87 li
145.127 321.665 li
145.487 322.367 li
145.847 323.943 li
146.207 329.4 li
146.568 329.576 li
146.929 329.313 li
147.289 329.329 li
147.649 329.635 li
148.008 329.642 li
148.368 330.128 li
148.728 330.002 li
149.09 330.25 li
149.45 330.587 li
149.81 330.642 li
150.17 330.771 li
150.53 330.684 li
150.89 330.603 li
151.25 330.929 li
151.612 330.889 li
151.972 330.826 li
152.331 330.837 li
152.691 330.755 li
153.051 330.859 li
153.051 332.4 li
cp
1 1 0 0 cmyk
f
124.234 332.4 mo
124.234 333.069 li
124.595 333.105 li
124.956 333.086 li
125.316 333.086 li
125.675 333.131 li
126.035 333.171 li
126.397 333.262 li
126.757 333.184 li
127.117 333.227 li
127.477 333.177 li
127.837 333.225 li
128.196 333.217 li
128.556 333.49 li
128.919 333.524 li
129.277 333.425 li
129.638 333.437 li
129.998 333.388 li
130.357 333.021 li
130.718 332.641 li
131.078 332.465 li
131.44 332.448 li
131.8 332.449 li
132.16 332.456 li
132.519 332.448 li
132.88 332.446 li
133.239 332.456 li
133.6 332.435 li
133.96 332.446 li
134.32 332.435 li
134.681 332.448 li
135.041 332.454 li
135.401 332.43 li
135.761 332.425 li
136.121 332.437 li
136.482 332.454 li
136.843 332.439 li
137.203 332.444 li
137.563 332.428 li
137.922 332.439 li
138.283 332.435 li
138.642 332.441 li
139.004 332.437 li
139.364 332.456 li
139.724 332.439 li
140.084 332.437 li
140.444 332.458 li
140.803 332.468 li
141.163 332.439 li
141.526 332.441 li
141.886 332.452 li
142.245 332.448 li
142.605 332.47 li
142.965 332.449 li
143.326 332.456 li
143.686 332.448 li
144.047 332.454 li
144.407 332.441 li
144.766 332.446 li
145.127 332.456 li
145.487 332.443 li
145.847 332.432 li
146.207 332.426 li
146.568 332.421 li
146.929 332.426 li
147.289 332.416 li
147.649 332.418 li
148.008 332.422 li
148.368 332.41 li
148.728 332.421 li
149.09 332.421 li
149.45 332.418 li
149.81 332.41 li
150.17 332.414 li
150.53 332.421 li
150.89 332.418 li
151.25 332.422 li
151.612 332.428 li
151.972 332.41 li
152.331 332.406 li
152.691 332.422 li
153.051 332.432 li
153.051 332.4 li
cp
0 1 1 0 cmyk
f
[] 0 dsh
154.203 337.389 mo
153.299 337.389 li
0 0 0 1 cmyk
@
154.203 332.4 mo
153.299 332.4 li
@
154.203 327.413 mo
153.299 327.413 li
@
154.203 322.424 mo
153.299 322.424 li
@
154.203 317.435 mo
153.299 317.435 li
@
154.203 312.447 mo
153.299 312.447 li
@
%ADOBeginSubsetFont: JQBAAA+HelveticaNeueLTStd-LtCn AddGlyphs
%ADOt1write: (1.0.24)systemdict beginZDWBPL+HelveticaNeueLTStd-LtCn dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B75BE54E5BDF8D309D1962C46330B227CB39BD2A0EF255CA0220C62D9CF444272C5B843E0CC0838CF652E2CA782C65F32C10DACB34C6D3AB406025F5F6CA4ED0327571> |-systemdict /gcheck known {setglobal} if end {end} ifendZDWBPL+HelveticaNeueLTStd-LtCn /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/ZDWBPL+HelveticaNeueLTStd-LtCn*1 [48{/.notdef}rp /zero /one /two /.notdef /four 203{/.notdef}rp]ZDWBPL+HelveticaNeueLTStd-LtCn nfZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf154.667 338.472 mo(20)[1.901 0 ]xsh154.667 333.482 mo(0)sh154.667 323.506 mo(40)[1.93834 0 ]xsh76.3955 332.4 mo
75.4915 332.4 li
@
76.3955 324.917 mo
75.4915 324.917 li
@
76.3955 317.435 mo
75.4915 317.435 li
@
ZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf76.9893 333.244 mo(0)sh46.4253 332.4 mo
46.4253 332.389 li
46.7843 332.378 li
47.1463 332.366 li
47.5073 332.366 li
47.8663 332.347 li
48.2263 332.383 li
48.5863 332.376 li
48.9463 332.366 li
49.3063 332.395 li
49.6673 332.361 li
50.0283 332.309 li
50.3883 332.361 li
50.7483 332.331 li
51.1083 332.325 li
51.4683 332.32 li
51.8283 332.325 li
52.1903 332.25 li
52.5503 332.077 li
52.9103 332.008 li
53.2703 331.348 li
53.6293 321.813 li
53.9893 317.302 li
54.3503 313.873 li
54.7113 314.081 li
55.0713 313.373 li
55.4313 313.769 li
55.7913 315.488 li
56.1513 315.675 li
56.5103 317.227 li
56.8713 318.172 li
57.2333 318.285 li
57.5923 319.123 li
57.9533 318.226 li
58.3133 319.439 li
58.6733 319.471 li
59.0323 321.973 li
59.3933 322.441 li
59.7543 322.531 li
60.1143 322.179 li
60.4743 321.802 li
60.8343 322.849 li
61.1943 322.72 li
61.5533 323.17 li
61.9143 323.233 li
62.2763 321.802 li
62.6353 321.818 li
62.9953 321.437 li
63.3563 321.135 li
63.7163 320.653 li
64.0753 321.979 li
64.4353 321.995 li
64.7983 321.538 li
65.1573 321.06 li
65.5173 321.131 li
65.8783 321.7 li
66.2373 321.566 li
66.5963 323.03 li
66.9563 323.659 li
67.3193 324.91 li
67.6783 326.65 li
68.0383 327.874 li
68.3983 331.879 li
68.7583 332.004 li
69.1183 331.912 li
69.4783 331.891 li
69.8413 332.077 li
70.1993 332.212 li
70.5603 332.121 li
70.9213 332.147 li
71.2803 332.158 li
71.6403 332.121 li
72.0003 332.174 li
72.3623 332.154 li
72.7213 332.147 li
73.0813 332.137 li
73.4423 332.25 li
73.8023 332.25 li
74.1613 332.201 li
74.5213 332.174 li
74.8823 332.212 li
75.2423 332.23 li
75.2423 332.4 li
cp
1 1 0 0 cmyk
f
46.4256 332.401 mo
46.4256 332.755 li
46.7836 332.798 li
47.1456 332.685 li
47.5066 332.863 li
47.8666 332.788 li
48.2266 332.749 li
48.5866 332.829 li
48.9466 332.945 li
49.3066 333.003 li
49.6676 333.078 li
50.0286 333.041 li
50.3886 333.056 li
50.7486 333.131 li
51.1086 333.008 li
51.4686 332.933 li
51.8286 332.807 li
52.1896 332.936 li
52.5496 332.805 li
52.9096 332.745 li
53.2696 332.679 li
53.6296 332.631 li
53.9896 332.577 li
54.3496 332.534 li
54.7106 332.507 li
55.0716 332.477 li
55.4316 332.466 li
55.7906 332.493 li
56.1506 332.477 li
56.5106 332.48 li
56.8706 332.48 li
57.2336 332.45 li
57.5926 332.466 li
57.9526 332.466 li
58.3126 332.493 li
58.6726 332.432 li
59.0326 332.45 li
59.3926 332.455 li
59.7536 332.477 li
60.1146 332.48 li
60.4736 332.469 li
60.8336 332.45 li
61.1946 332.461 li
61.5536 332.455 li
61.9146 332.455 li
62.2756 332.461 li
62.6356 332.477 li
62.9956 332.505 li
63.3566 332.48 li
63.7166 332.496 li
64.0756 332.477 li
64.4356 332.488 li
64.7986 332.466 li
65.1576 332.519 li
65.5176 332.48 li
65.8786 332.477 li
66.2376 332.48 li
66.5966 332.496 li
66.9566 332.505 li
67.3196 332.488 li
67.6796 332.488 li
68.0386 332.488 li
68.3986 332.488 li
68.7586 332.477 li
69.1186 332.469 li
69.4786 332.45 li
69.8406 332.466 li
70.1996 332.455 li
70.5596 332.469 li
70.9206 332.477 li
71.2796 332.455 li
71.6406 332.443 li
72.0006 332.455 li
72.3616 332.477 li
72.7216 332.477 li
73.0816 332.513 li
73.4426 332.519 li
73.8016 332.507 li
74.1616 332.488 li
74.5216 332.496 li
74.8826 332.513 li
75.2426 332.552 li
75.2426 332.401 li
cp
0 1 1 0 cmyk
f
76.3955 339.882 mo
75.4915 339.882 li
0 0 0 1 cmyk
@
ZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf76.9893 340.726 mo(10)[1.71799 0 ]xsh123.081 342.067 mo
154.204 342.067 li
154.204 310.943 li
123.081 310.943 li
cp
@
%ADOBeginSubsetFont: KUDAAA+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPJ+HelveticaNeue gcheck setglobal} if
1 3660 42 <0001002bfff002aa02db0025006dba001e000b00032bb8001e10411b0006
001e0016001e0026001e0036001e0046001e0056001e0066001e0076001e
0086001e0096001e00a6001e00b6001e00c6001e000d5d410500d5001e00
e5001e00025d00ba0019001000032bb8001910ba0006002300032bb80006
10303101332e0323220e0215141e0233323637230e0323222e0235343e02
33321602445f08344e6438527f552c29527c53899e0e5f031e35492f405c
3b1c1c3b5b404b6d01f339573a1e3b66894e4e88643996872c4c371f3051
6d3d386851304c000000>ZDWBPJ+HelveticaNeue AddT42Char 
1 4088 44 <0001004e0000023e02ca000b0033ba0009000000032bb8000910b80004d0
00ba0004000100032bba0000000900032bb8000010ba0008000500032bb8
00081030311311213521352135213521354e01f0fe6f0173fe8d018e02ca
fd3650f750e350000000>ZDWBPJ+HelveticaNeue AddT42Char 
1 4188 46 <0001002bfff002b902db002c00a1b8002d2fba0002000000032bb8000210
b8000010b80006d0b8002d10b80025d0b800252fb80010dc411b00060010
001600100026001000360010004600100056001000660010007600100086
00100096001000a6001000b6001000c60010000d5d410500d5001000e500
1000025db8000210b8001bd0b8001b2f00ba000b002a00032bb8000b10ba
0020001500032bb8002010ba0004000500032bb800041030312517331121
1533160e0223222e0235343e0233321e0217332e0323220e0215141e0233
32360264193cfec7e4021e3b56383c5b3e201c3b5d4128473826075f0a37
51673a557f552b2e587e503f7c595901785031553f242f4f6738396d5534
13263b293f593a1b3f6a8d4e4682643b3100>ZDWBPJ+HelveticaNeue AddT42Char 
ZDWBPJ+HelveticaNeue /CharStrings get begin
/C 42 def
/E 44 def
/G 46 def
end
ZDWBPJ+HelveticaNeue /Encoding get
dup 67 /C put
dup 69 /E put
dup 71 /G put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPJ+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero 2{/.notdef}rp /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /.notdef /G /H /I /.notdef /K 2{/.notdef}rp /N 3{/.notdef}rp /R /S /T 12{/.notdef}rp /a 2{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /q /r 93{/.notdef}rp /endash 47{/.notdef}rp]ZDWBPJ+HelveticaNeue nfZDWBPJ+HelveticaNeue*1 [0 -5.6022 -5.6022 0 0 0 ]msf42.5777 368.519 mo(CAGE)[-4.09521 -3.6358 -4.39774 0 ]ysh[1.509 1 ] 0 dsh
53.27 376.305 mo
53.27 345.18 li
0 0 0 .5 cmyk
@
68.0386 376.305 mo
68.0386 345.18 li
@
96.8418 376.305 mo
96.8418 345.18 li
@
111.612 376.305 mo
111.612 345.18 li
@
89.999 368.631 mo
89.999 368.617 li
90.359 368.631 li
90.719 368.631 li
91.079 368.62 li
91.439 368.607 li
91.799 368.631 li
92.159 368.631 li
92.52 368.627 li
92.881 368.613 li
93.24 368.631 li
93.601 368.603 li
93.961 368.627 li
94.32 368.631 li
94.68 368.627 li
95.042 368.617 li
95.403 368.617 li
95.762 368.613 li
96.122 368.487 li
96.482 367.042 li
96.842 361.833 li
97.202 365.808 li
97.563 367.629 li
97.923 368.423 li
98.283 368.401 li
98.643 368.294 li
99.003 368.318 li
99.363 368.416 li
99.724 368.491 li
100.085 368.405 li
100.445 368.484 li
100.805 368.506 li
101.165 368.47 li
101.525 368.478 li
101.885 368.405 li
102.246 368.502 li
102.606 368.453 li
102.967 368.381 li
103.327 368.458 li
103.687 368.464 li
104.047 368.473 li
104.407 368.43 li
104.766 368.473 li
105.128 368.18 li
105.488 368.401 li
105.849 368.47 li
106.208 368.345 li
106.567 368.305 li
106.928 368.456 li
107.288 368.456 li
107.65 368.266 li
108.01 368.212 li
108.369 368.458 li
108.729 368.449 li
109.089 368.337 li
109.449 368.419 li
109.81 368.087 li
110.171 368.292 li
110.531 368.345 li
110.891 368.137 li
111.251 368.266 li
111.612 367.697 li
111.972 368.563 li
112.331 368.591 li
112.693 368.595 li
113.053 368.563 li
113.413 368.595 li
113.773 368.607 li
114.133 368.627 li
114.493 368.613 li
114.853 368.603 li
115.214 368.617 li
115.574 368.577 li
115.935 368.588 li
116.295 368.588 li
116.654 368.566 li
117.014 368.456 li
117.374 368.381 li
117.736 368.607 li
118.096 368.577 li
118.456 368.57 li
118.815 368.613 li
118.815 368.631 li
cp
1 1 0 0 cmyk
f
89.999 368.631 mo
89.999 368.893 li
90.359 368.72 li
90.719 368.757 li
91.079 368.922 li
91.439 368.737 li
91.799 368.737 li
92.159 368.713 li
92.52 368.706 li
92.881 368.745 li
93.24 368.732 li
93.601 368.688 li
93.961 368.781 li
94.32 368.757 li
94.68 368.832 li
95.042 368.77 li
95.403 369.121 li
95.762 374.569 li
96.122 375.101 li
96.482 372.118 li
96.842 369.205 li
97.202 368.642 li
97.563 368.642 li
97.923 368.648 li
98.283 368.638 li
98.643 368.635 li
99.003 368.635 li
99.363 368.635 li
99.724 368.635 li
100.085 368.635 li
100.445 368.635 li
100.805 368.635 li
101.165 368.631 li
101.525 368.635 li
101.885 368.635 li
102.246 368.635 li
102.606 368.631 li
102.967 368.635 li
103.327 368.635 li
103.687 368.68 li
104.047 368.66 li
104.407 368.635 li
104.766 368.635 li
105.128 368.635 li
105.488 368.631 li
105.849 368.635 li
106.208 368.631 li
106.567 368.635 li
106.928 368.635 li
107.288 368.635 li
107.65 368.631 li
108.01 368.635 li
108.369 368.631 li
108.729 368.631 li
109.089 368.638 li
109.449 368.635 li
109.81 368.635 li
110.171 368.635 li
110.531 368.652 li
110.891 368.631 li
111.251 368.638 li
111.612 368.638 li
111.972 368.631 li
112.331 368.631 li
112.693 368.631 li
113.053 368.631 li
113.413 368.631 li
113.773 368.631 li
114.133 368.631 li
114.493 368.631 li
114.853 368.631 li
115.214 368.631 li
115.574 368.638 li
115.935 368.631 li
116.295 368.631 li
116.654 368.631 li
117.014 368.642 li
117.374 368.631 li
117.736 368.638 li
118.096 368.631 li
118.456 368.631 li
118.815 368.631 li
cp
0 1 1 0 cmyk
f
131.078 376.305 mo
131.078 345.18 li
0 0 0 .5 cmyk
@
145.847 376.305 mo
145.847 345.18 li
@
124.234 368.631 mo
124.234 368.631 li
124.595 368.627 li
124.956 368.631 li
125.316 368.631 li
125.675 368.626 li
126.035 368.631 li
126.397 368.627 li
126.757 368.62 li
127.117 368.626 li
127.477 368.631 li
127.837 368.626 li
128.196 368.626 li
128.556 368.62 li
128.919 368.617 li
129.277 368.613 li
129.638 368.595 li
129.998 368.607 li
130.357 368.453 li
130.718 366.87 li
131.078 351.666 li
131.44 346.22 li
131.8 366.967 li
132.16 367.013 li
132.519 367.886 li
132.88 368.127 li
133.239 368.263 li
133.6 368.22 li
133.96 368.212 li
134.32 368.258 li
134.681 368.263 li
135.041 368.36 li
135.401 368.318 li
135.761 368.345 li
136.121 368.367 li
136.482 368.334 li
136.843 368.416 li
137.203 368.33 li
137.563 368.33 li
137.922 368.484 li
138.283 368.466 li
138.642 368.47 li
139.004 368.405 li
139.364 368.419 li
139.724 368.33 li
140.084 368.337 li
140.444 368.251 li
140.803 368.201 li
141.163 368.28 li
141.526 368.087 li
141.886 368.119 li
142.245 368.163 li
142.605 368.044 li
142.965 368.129 li
143.326 367.761 li
143.686 367.604 li
144.047 367.81 li
144.407 367.554 li
144.766 367.042 li
145.127 366.67 li
145.487 367.438 li
145.847 367.758 li
146.207 368.559 li
146.568 368.548 li
146.929 368.58 li
147.289 368.563 li
147.649 368.566 li
148.008 368.577 li
148.368 368.588 li
148.728 368.551 li
149.09 368.58 li
149.45 368.566 li
149.81 368.61 li
150.17 368.591 li
150.53 368.548 li
150.89 368.555 li
151.25 368.544 li
151.612 368.525 li
151.972 368.563 li
152.331 368.566 li
152.691 368.566 li
153.051 368.559 li
153.051 368.631 li
cp
1 1 0 0 cmyk
f
124.234 368.631 mo
124.234 368.66 li
124.595 368.652 li
124.956 368.671 li
125.316 368.663 li
125.675 368.648 li
126.035 368.657 li
126.397 368.713 li
126.757 368.678 li
127.117 368.663 li
127.477 368.671 li
127.837 368.663 li
128.196 368.663 li
128.556 368.697 li
128.919 368.836 li
129.277 369.046 li
129.638 369.205 li
129.998 369.357 li
130.357 371.517 li
130.718 370.531 li
131.078 368.974 li
131.44 368.657 li
131.8 368.647 li
132.16 368.635 li
132.519 368.642 li
132.88 368.635 li
133.239 368.642 li
133.6 368.635 li
133.96 368.635 li
134.32 368.631 li
134.681 368.635 li
135.041 368.631 li
135.401 368.635 li
135.761 368.635 li
136.121 368.635 li
136.482 368.635 li
136.843 368.631 li
137.203 368.638 li
137.563 368.635 li
137.922 368.635 li
138.283 368.635 li
138.642 368.631 li
139.004 368.631 li
139.364 368.635 li
139.724 368.631 li
140.084 368.635 li
140.444 368.638 li
140.803 368.638 li
141.163 368.635 li
141.526 368.638 li
141.886 368.635 li
142.245 368.631 li
142.605 368.635 li
142.965 368.635 li
143.326 368.631 li
143.686 368.631 li
144.047 368.635 li
144.407 368.635 li
144.766 368.642 li
145.127 368.638 li
145.487 368.635 li
145.847 368.635 li
146.207 368.631 li
146.568 368.631 li
146.929 368.631 li
147.289 368.631 li
147.649 368.631 li
148.008 368.635 li
148.368 368.635 li
148.728 368.635 li
149.09 368.631 li
149.45 368.631 li
149.81 368.631 li
150.17 368.638 li
150.53 368.631 li
150.89 368.631 li
151.25 368.631 li
151.612 368.631 li
151.972 368.631 li
152.331 368.631 li
152.691 368.631 li
153.051 368.631 li
cp
0 1 1 0 cmyk
f
[] 0 dsh
154.203 368.631 mo
153.299 368.631 li
0 0 0 1 cmyk
@
154.203 361.627 mo
153.299 361.627 li
@
154.203 354.625 mo
153.299 354.625 li
@
154.203 347.619 mo
153.299 347.619 li
@
%ADOBeginSubsetFont: JQBAAA+HelveticaNeueLTStd-LtCn AddGlyphs
%ADOt1write: (1.0.24)systemdict beginZDWBPL+HelveticaNeueLTStd-LtCn dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B75BE591895EEF30A327B348A2D69E1CDA27FAAD14521AD5CFC2BBF26E9F54DA31008EA5B92EA48076E5AC29DC596690A66DB502C22D63AEA1593FA2FAC5446BC15265C542B2955236512CB9D11000AAEB89BCDC09C91F55FE3A33C88FAC5895BBFE4287D23CE0482332BE37F976B89D582C522EAA608409F573D372098A3E70647B370D06779D43844D3CDE4F70AAB4AF9CF26A54A16849D80939163C52C5D4B1B56825DB7C93D50E5C778695AD9F> |-systemdict /gcheck known {setglobal} if end {end} ifendZDWBPL+HelveticaNeueLTStd-LtCn /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/ZDWBPL+HelveticaNeueLTStd-LtCn*1 [48{/.notdef}rp /zero /one /two /three /four 203{/.notdef}rp]ZDWBPL+HelveticaNeueLTStd-LtCn nfZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf154.667 369.712 mo(0)sh154.667 362.709 mo(1)sh154.667 355.706 mo(2)sh154.667 348.704 mo(3)sh76.3955 368.631 mo
75.4915 368.631 li
@
76.3955 358.125 mo
75.4915 358.125 li
@
76.3955 347.619 mo
75.4915 347.619 li
@
%ADOBeginSubsetFont: JQBAAA+HelveticaNeueLTStd-LtCn AddGlyphs
%ADOt1write: (1.0.24)systemdict beginZDWBPL+HelveticaNeueLTStd-LtCn dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B87A8F0E7D748E8FE1445CEE52290646B42DB7> |-/five <1C60D8A8C9B75BE591895EE0F059BBECB8F509FC670823F231A8B465F1783ACD73CB0B1CBC249338FA2673EC82C34B6A1090B9CB42B52A7406902655050DD30B9A5BE0377F145A470E35CBC9E7E6FB147B2E92235D705B82914895221B7CF54ED8360FD1ACF255182C1832EE52AB41C6C8442EBA479C97021AB52B5B60030AE08441403F6458B426E482C0FAA2A54CA9EA8D7B> |-systemdict /gcheck known {setglobal} if end {end} ifendZDWBPL+HelveticaNeueLTStd-LtCn /Encoding getdup 46 /period putdup 53 /five putpop%ADOEndSubsetFont
/ZDWBPL+HelveticaNeueLTStd-LtCn*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five 202{/.notdef}rp]ZDWBPL+HelveticaNeueLTStd-LtCn nfZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf76.9893 369.474 mo(0)sh76.9893 358.968 mo(0.5)[1.84124 .974808 0 ]xsh76.9893 348.462 mo(1)sh46.4253 368.631 mo
46.4253 368.631 li
46.7843 368.62 li
47.1463 368.631 li
47.5073 368.62 li
47.8663 368.631 li
48.2263 368.62 li
48.5863 368.62 li
48.9463 368.62 li
49.3063 368.631 li
49.6673 368.62 li
50.0283 368.62 li
50.3883 368.62 li
50.7483 368.588 li
51.1083 368.57 li
51.4683 368.577 li
51.8283 368.61 li
52.1903 368.555 li
52.5503 368.493 li
52.9103 368.042 li
53.2703 363.832 li
53.6293 359.664 li
53.9893 367.977 li
54.3503 367.987 li
54.7113 367.398 li
55.0713 368.108 li
55.4313 368.332 li
55.7913 368.394 li
56.1513 368.483 li
56.5103 368.472 li
56.8713 368.427 li
57.2333 368.383 li
57.5923 368.449 li
57.9533 368.516 li
58.3133 368.516 li
58.6733 368.472 li
59.0323 368.526 li
59.3933 368.555 li
59.7543 368.555 li
60.1143 368.533 li
60.4743 368.555 li
60.8343 368.555 li
61.1943 368.57 li
61.5533 368.548 li
61.9143 368.533 li
62.2763 368.57 li
62.6353 368.5 li
62.9953 368.555 li
63.3563 368.548 li
63.7163 368.533 li
64.0753 368.461 li
64.4353 368.461 li
64.7983 368.555 li
65.1573 368.288 li
65.5173 368.371 li
65.8783 368.364 li
66.2373 368.371 li
66.5963 368.257 li
66.9563 368.18 li
67.3193 368.097 li
67.6783 368.053 li
68.0383 368.371 li
68.3983 368.62 li
68.7583 368.61 li
69.1183 368.631 li
69.4783 368.631 li
69.8413 368.631 li
70.1993 368.62 li
70.5603 368.631 li
70.9213 368.631 li
71.2803 368.631 li
71.6403 368.631 li
72.0003 368.631 li
72.3623 368.631 li
72.7213 368.631 li
73.0813 368.631 li
73.4423 368.631 li
73.8023 368.631 li
74.1613 368.631 li
74.5213 368.631 li
74.8823 368.631 li
75.2423 368.631 li
cp
1 1 0 0 cmyk
f
46.4253 368.631 mo
46.4253 368.708 li
46.7843 368.675 li
47.1463 368.663 li
47.5073 368.718 li
47.8663 368.663 li
48.2263 368.686 li
48.5863 368.675 li
48.9463 368.73 li
49.3063 368.708 li
49.6673 368.686 li
50.0283 368.708 li
50.3883 368.696 li
50.7483 368.718 li
51.1083 368.811 li
51.4683 368.845 li
51.8283 369.073 li
52.1903 369.696 li
52.5503 370.524 li
52.9103 369.907 li
53.2703 368.923 li
53.6293 368.718 li
53.9893 368.663 li
54.3503 368.631 li
54.7113 368.663 li
55.0713 368.631 li
55.4313 368.642 li
55.7913 368.631 li
56.1513 368.631 li
56.5103 368.631 li
56.8713 368.631 li
57.2333 368.642 li
57.5923 368.631 li
57.9533 368.631 li
58.3133 368.631 li
58.6733 368.631 li
59.0323 368.642 li
59.3933 368.631 li
59.7543 368.631 li
60.1143 368.631 li
60.4743 368.631 li
60.8343 368.631 li
61.1943 368.631 li
61.5533 368.631 li
61.9143 368.631 li
62.2763 368.631 li
62.6353 368.631 li
62.9953 368.631 li
63.3563 368.631 li
63.7163 368.631 li
64.0753 368.631 li
64.4353 368.642 li
64.7983 368.631 li
65.1573 368.631 li
65.5173 368.631 li
65.8783 368.642 li
66.2373 368.631 li
66.5963 368.631 li
66.9563 368.631 li
67.3193 368.631 li
67.6783 368.631 li
68.0383 368.631 li
68.3983 368.631 li
68.7583 368.631 li
69.1183 368.642 li
69.4783 368.631 li
69.8413 368.631 li
70.1993 368.631 li
70.5603 368.631 li
70.9213 368.631 li
71.2803 368.631 li
71.6403 368.631 li
72.0003 368.631 li
72.3623 368.631 li
72.7213 368.631 li
73.0813 368.631 li
73.4423 368.631 li
73.8023 368.631 li
74.1613 368.631 li
74.5213 368.631 li
74.8823 368.631 li
75.2423 368.631 li
cp
0 1 1 0 cmyk
f
88.845 376.303 mo
119.968 376.303 li
119.968 345.18 li
88.845 345.18 li
cp
0 0 0 1 cmyk
@
123.081 376.303 mo
154.204 376.303 li
154.204 345.18 li
123.081 345.18 li
cp
@
[1.509 1 ] 0 dsh
53.27 410.539 mo
53.27 379.416 li
0 0 0 .5 cmyk
@
68.0386 410.539 mo
68.0386 379.416 li
@
[] 0 dsh
46.4663 416.228 mo
46.4663 409.6 li
0 0 0 1 cmyk
@
[1.509 1 ] 0 dsh
96.8418 410.539 mo
96.8418 379.416 li
0 0 0 .5 cmyk
@
111.612 410.539 mo
111.612 379.416 li
@
131.078 410.539 mo
131.078 379.416 li
@
145.847 410.539 mo
145.847 379.416 li
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: KUDAAA+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPJ+HelveticaNeue gcheck setglobal} if
1 5088 55 <0002004e0000026202ca000800130089b800152fba0001000900032bb800
0110b8001510b80010dcb80005dc410500da000500ea000500025d411b00
090005001900050029000500390005004900050059000500690005007900
05008900050099000500a9000500b9000500c90005000d5db8000110b800
0bd000b8000a2fba0009000100032bb8000910ba0000000c00032bb80000
1030311311333216151406270111331133163635342623adba514b4b51fe
e75fda6c6f6f6c0174010643404044010156fd360124017064646f00>ZDWBPJ+HelveticaNeue AddT42Char 
ZDWBPJ+HelveticaNeue /CharStrings get begin
/P 55 def
end
ZDWBPJ+HelveticaNeue /Encoding get
dup 80 /P put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPJ+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero 2{/.notdef}rp /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /.notdef /G /H /I /.notdef /K 2{/.notdef}rp /N /.notdef /P /.notdef /R /S /T 12{/.notdef}rp /a 2{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /q /r 93{/.notdef}rp /endash 47{/.notdef}rp]ZDWBPJ+HelveticaNeue nfZDWBPJ+HelveticaNeue*1 [0 -5.6022 -5.6022 0 0 0 ]msf42.5777 406.816 mo(PAS-Seq)[-3.46774 -3.73663 -3.83746 -2.35297 -3.77588 -3.18207 0 ]yshZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf76.9893 409.995 mo(0)sh89.999 409.142 mo
89.999 409.142 li
90.359 409.142 li
90.719 409.142 li
91.079 409.142 li
91.439 409.142 li
91.799 409.142 li
92.159 409.142 li
92.52 409.142 li
92.881 409.142 li
93.24 409.142 li
93.601 409.142 li
93.961 409.142 li
94.32 409.142 li
94.68 409.142 li
95.042 409.142 li
95.403 409.142 li
95.762 409.142 li
96.122 409.142 li
96.482 409.142 li
96.842 409.142 li
97.202 409.026 li
97.563 409.102 li
97.923 409.108 li
98.283 409.034 li
98.643 409.098 li
99.003 409.142 li
99.363 409.076 li
99.724 409.12 li
100.085 409.047 li
100.445 409.123 li
100.805 409.083 li
101.165 409.094 li
101.525 409.12 li
101.885 409.104 li
102.246 409.059 li
102.606 409.116 li
102.967 409.116 li
103.327 409.142 li
103.687 409.098 li
104.047 409.104 li
104.407 409.116 li
104.766 409.114 li
105.128 409.055 li
105.488 409.068 li
105.849 408.995 li
106.208 409.094 li
106.567 409.047 li
106.928 409.12 li
107.288 409.123 li
107.65 409.114 li
108.01 409.094 li
108.369 409.123 li
108.729 409.083 li
109.089 409.126 li
109.449 409.12 li
109.81 409.12 li
110.171 408.953 li
110.531 408.822 li
110.891 409.094 li
111.251 409.083 li
111.612 393.521 li
111.972 403.238 li
112.331 409.026 li
112.693 409.026 li
113.053 409.142 li
113.413 409.142 li
113.773 409.142 li
114.133 409.142 li
114.493 409.142 li
114.853 409.142 li
115.214 409.142 li
115.574 409.142 li
115.935 409.142 li
116.295 409.142 li
116.654 409.142 li
117.014 409.142 li
117.374 409.142 li
117.736 409.142 li
118.096 409.142 li
118.456 409.142 li
118.815 409.142 li
cp
1 1 0 0 cmyk
f
118.456 409.142 mo
118.096 409.142 li
117.736 409.142 li
117.373 409.142 li
117.014 409.142 li
116.654 409.142 li
116.295 409.142 li
115.934 409.142 li
115.574 409.142 li
115.214 409.142 li
114.852 409.142 li
114.492 409.142 li
114.132 409.142 li
113.772 409.142 li
113.413 409.142 li
113.052 409.142 li
112.692 409.142 li
112.331 409.142 li
111.972 409.142 li
118.815 409.142 li
cp
111.251 409.142 mo
111.612 409.16 li
111.972 409.142 li
cp
110.891 409.142 mo
110.531 409.142 li
110.171 409.142 li
109.81 409.142 li
109.449 409.142 li
109.089 409.142 li
111.251 409.142 li
cp
108.369 409.142 mo
108.73 409.144 li
109.089 409.142 li
cp
108.01 409.142 mo
107.65 409.142 li
107.288 409.142 li
106.928 409.142 li
106.567 409.142 li
106.208 409.142 li
105.849 409.142 li
105.488 409.142 li
105.128 409.142 li
104.766 409.142 li
104.406 409.142 li
104.047 409.142 li
108.369 409.142 li
cp
103.326 409.142 mo
103.686 409.154 li
104.047 409.142 li
cp
102.967 409.142 mo
102.606 409.142 li
102.245 409.142 li
101.885 409.142 li
101.525 409.142 li
101.165 409.142 li
103.326 409.142 li
cp
100.445 409.142 mo
100.805 409.144 li
101.165 409.142 li
cp
100.085 409.142 mo
99.7232 409.142 li
99.3632 409.142 li
99.0032 409.142 li
98.6422 409.142 li
98.2832 409.142 li
97.9232 409.142 li
97.5632 409.142 li
97.2022 409.142 li
96.8422 409.142 li
96.4822 409.142 li
96.1222 409.142 li
95.7622 409.142 li
100.445 409.142 li
cp
93.9622 409.142 mo
94.3202 409.252 li
94.6802 409.252 li
95.0432 409.365 li
95.4022 409.252 li
95.7622 409.142 li
cp
93.6012 409.142 mo
93.2402 409.142 li
92.8812 409.142 li
92.5202 409.142 li
92.1592 409.142 li
91.7992 409.142 li
93.9622 409.142 li
cp
91.0782 409.142 mo
91.4392 409.365 li
91.7992 409.142 li
cp
90.7192 409.142 mo
90.3592 409.142 li
89.9992 409.142 li
91.0782 409.142 li
cp
0 1 1 0 cmyk
f
[] 0 dsh
124.234 410.539 mo
124.234 409.601 li
0 0 0 1 cmyk
@
124.234 409.142 mo
124.234 409.142 li
124.595 409.142 li
124.956 409.142 li
125.316 409.142 li
125.675 409.142 li
126.035 409.142 li
126.397 409.142 li
126.757 409.142 li
127.117 409.142 li
127.477 409.142 li
127.837 409.142 li
128.196 409.142 li
128.556 409.142 li
128.919 409.142 li
129.277 409.142 li
129.638 409.142 li
129.998 409.142 li
130.357 409.142 li
130.718 409.142 li
131.078 409.142 li
131.44 409.059 li
131.8 408.945 li
132.16 409.047 li
132.519 408.975 li
132.88 408.949 li
133.239 408.836 li
133.6 408.979 li
133.96 408.842 li
134.32 409.051 li
134.681 409.128 li
135.041 409.108 li
135.401 409.12 li
135.761 409.128 li
136.121 409.051 li
136.482 408.897 li
136.843 409.126 li
137.203 409.09 li
137.563 409.126 li
137.922 408.991 li
138.283 409.126 li
138.642 409.138 li
139.004 409.132 li
139.364 409.132 li
139.724 409.128 li
140.084 409.087 li
140.444 409.062 li
140.803 409.104 li
141.163 409.123 li
141.526 409.001 li
141.886 409.126 li
142.245 409.138 li
142.605 409.104 li
142.965 409.132 li
143.326 409.066 li
143.686 409.108 li
144.047 409.126 li
144.407 409.066 li
144.766 409.116 li
145.127 409.043 li
145.487 408.961 li
145.847 386.34 li
146.207 397.871 li
146.568 409.142 li
146.929 409.039 li
147.289 409.142 li
147.649 409.142 li
148.008 409.142 li
148.368 409.142 li
148.728 409.142 li
149.09 409.142 li
149.45 409.142 li
149.81 409.142 li
150.17 409.142 li
150.53 409.09 li
150.89 409.142 li
151.25 409.142 li
151.612 409.142 li
151.972 409.142 li
152.331 409.142 li
152.691 409.142 li
153.051 409.142 li
cp
1 1 0 0 cmyk
f
152.691 409.142 mo
152.331 409.142 li
151.971 409.142 li
151.612 409.142 li
151.249 409.142 li
150.889 409.142 li
150.529 409.142 li
150.169 409.142 li
149.81 409.142 li
149.449 409.142 li
149.089 409.142 li
148.727 409.142 li
148.368 409.142 li
148.008 409.142 li
147.648 409.142 li
147.288 409.142 li
146.928 409.142 li
146.568 409.142 li
146.207 409.142 li
145.847 409.142 li
145.487 409.142 li
145.127 409.142 li
144.766 409.142 li
144.406 409.142 li
144.046 409.142 li
143.686 409.142 li
143.326 409.142 li
142.965 409.142 li
142.605 409.142 li
142.245 409.142 li
141.886 409.142 li
141.526 409.142 li
141.162 409.142 li
140.803 409.142 li
140.444 409.142 li
140.083 409.142 li
139.724 409.142 li
139.364 409.142 li
139.004 409.142 li
138.642 409.142 li
138.282 409.142 li
137.922 409.142 li
137.562 409.142 li
137.203 409.142 li
136.843 409.142 li
136.481 409.142 li
136.121 409.142 li
135.76 409.142 li
135.401 409.142 li
135.041 409.142 li
134.68 409.142 li
134.32 409.142 li
133.959 409.142 li
133.599 409.142 li
133.239 409.142 li
132.879 409.142 li
132.518 409.142 li
132.159 409.142 li
131.799 409.142 li
131.439 409.142 li
131.077 409.142 li
130.717 409.142 li
130.357 409.142 li
129.998 409.142 li
153.05 409.142 li
cp
129.277 409.142 mo
129.638 409.188 li
129.998 409.142 li
cp
128.918 409.142 mo
128.556 409.142 li
128.196 409.142 li
127.836 409.142 li
127.477 409.142 li
127.117 409.142 li
126.757 409.142 li
126.397 409.142 li
126.035 409.142 li
125.675 409.142 li
125.315 409.142 li
124.956 409.142 li
124.595 409.142 li
124.234 409.142 li
129.277 409.142 li
cp
0 1 1 0 cmyk
f
154.203 409.142 mo
153.299 409.142 li
0 0 0 1 cmyk
@
154.203 401.209 mo
153.299 401.209 li
@
154.203 393.266 mo
153.299 393.266 li
@
154.203 385.325 mo
153.299 385.325 li
@
76.3955 409.153 mo
75.4915 409.153 li
@
76.3955 397.238 mo
75.4915 397.238 li
@
76.3955 385.325 mo
75.4915 385.325 li
@
%ADOBeginSubsetFont: JQBAAA+HelveticaNeueLTStd-LtCn AddGlyphs
%ADOt1write: (1.0.24)systemdict beginZDWBPL+HelveticaNeueLTStd-LtCn dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/plus <1C60D8A8C9B7C3C9B5778CA78366A5CE1E1B27721B916E91134CD762609CA9A35CA82DD0F08EAB8F260BF6A466CAD4578E01DAF942> |-/k <1C60D8A8C9B704CCECA9F5B1FE13672CE2061E9C7677983B57A3F10FE90810655F0A47A815C6A5323D04BA7CB5DA7812E06F6578422D72342703583DBFEDBC85EA1EF5CAD7> |-systemdict /gcheck known {setglobal} if end {end} ifendZDWBPL+HelveticaNeueLTStd-LtCn /Encoding getdup 43 /plus putdup 107 /k putpop%ADOEndSubsetFont
/ZDWBPL+HelveticaNeueLTStd-LtCn*1 [43{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one /two /three /four /five 53{/.notdef}rp /k 148{/.notdef}rp]ZDWBPL+HelveticaNeueLTStd-LtCn nfZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf154.667 410.231 mo(0)sh154.667 402.291 mo(0.05)[1.84125 .948654 1.9122 0 ]xsh154.667 394.347 mo(0.1)[1.84125 .702164 0 ]xsh154.667 386.407 mo(0.15)[1.84125 .702164 1.69557 0 ]xsh76.9911 386.168 mo(0.05)[1.84124 .948662 1.9122 0 ]xsh43.8186 419.43 mo(+1k)[2.04669 1.67691 0 ]xsh68.0386 412.833 mo
68.0386 410.485 li
@
53.27 412.833 mo
53.27 410.485 li
@
%ADOBeginSubsetFont: KUDAAA+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPJ+HelveticaNeue gcheck setglobal} if
1 10120 91 <000100090000011d02a00017005bba0001000200032bb8000110b8000210
b80006d0b8000310b80007d0b8000210b80017dcb8000dd0b8000110b800
14d000b800012fba000f000c00032bb8000f10ba0004000500032bb80004
10b80000d0b8000510b80015d030311335231523153311141e023b013523
222e0235113335b65558580e1d2f21412714190e056702059b9b4bfeb724
2c18094b030a120f01414b000000>ZDWBPJ+HelveticaNeue AddT42Char 
ZDWBPJ+HelveticaNeue /CharStrings get begin
/t 91 def
end
ZDWBPJ+HelveticaNeue /Encoding get
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPJ+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero 2{/.notdef}rp /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /.notdef /G /H /I /.notdef /K 2{/.notdef}rp /N /.notdef /P /.notdef /R /S /T 12{/.notdef}rp /a 2{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /q /r /.notdef /t 91{/.notdef}rp /endash 47{/.notdef}rp]ZDWBPJ+HelveticaNeue nfZDWBPJ+HelveticaNeue*1 [3.7348 0 0 -3.7348 0 0 ]msf49.0107 415.95 mo(Start)[2.50977 1.27358 2.11391 1.4416 0 ]xsh53.27 417.44 mo
53.27 419.307 li
68.039 419.307 li
68.039 417.44 li
@
%ADOBeginSubsetFont: JQBAAA+HelveticaNeueLTStd-LtCn AddGlyphs
%ADOt1write: (1.0.24)systemdict beginZDWBPL+HelveticaNeueLTStd-LtCn dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/percent <1C60D8A8C9B6079FEAE38C3E1CF593C97F8761E007E64F999C740F017146B8743F5809A3D82021FCDD3FCEA18EC3CA98A968D5F071F6581FAC4AB4F40F410494012BCE038B003108AC0788CC46E1B4D012B76794E6792E23A97D0251291FC90A6826F272E552FAFA25ADCDB1BBFA136DC71673F89A5DA8B71ED725AEB76F701FB43EDD9E34DB40846E8A456866DDFF6E1F920D82856D01237949D4259DEEB5ACE230854B06D057913DD5F3082B531920208FF86A9C4288DD810E16212A093127165C49A7C5E4637C2FB52DBD6CB73606C232414748913DCF3183C94FD477DD1F8ACCB6D8BB5DF166649E2FF7BF6865B4ED66D4> |-/endash <1C60D8A8C9B7A73DB9B0154D8993C2A1C7DA27ED3E0B83228E6EAD21> |-systemdict /gcheck known {setglobal} if end {end} ifendZDWBPL+HelveticaNeueLTStd-LtCn /Encoding getdup 37 /percent putdup 177 /endash putpop%ADOEndSubsetFont
/ZDWBPL+HelveticaNeueLTStd-LtCn*1 [37{/.notdef}rp /percent 5{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one /two /three /four /five 53{/.notdef}rp /k 69{/.notdef}rp /endash 78{/.notdef}rp]ZDWBPL+HelveticaNeueLTStd-LtCn nfZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf52.374 423.032 mo(0)sh65.3151 423.032 mo(100)[1.71799 1.94208 0 ]xsh70.7679 423.032 mo(%)shZDWBPJ+HelveticaNeue*1 [3.7348 0 0 -3.7348 0 0 ]msf64.6764 415.951 mo(End)[2.34916 2.16992 0 ]xshZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf72.7137 419.432 mo(\2611k)[1.80764 1.67691 0 ]xsh111.612 412.823 mo
111.612 410.476 li
@
96.8418 412.823 mo
96.8418 410.476 li
@
ZDWBPJ+HelveticaNeue*1 [3.7348 0 0 -3.7348 0 0 ]msf92.583 415.941 mo(Start)[2.50977 1.27357 2.11391 1.4416 0 ]xsh108.247 415.941 mo(End)[2.34916 2.16992 0 ]xsh145.847 412.801 mo
145.847 410.453 li
@
131.078 412.801 mo
131.078 410.453 li
@
ZDWBPJ+HelveticaNeue*1 [3.7348 0 0 -3.7348 0 0 ]msf126.819 415.92 mo(Start)[2.50977 1.27357 2.11391 1.4416 0 ]xsh142.483 415.92 mo(End)[2.34917 2.16991 0 ]xsh46.4253 409.142 mo
46.4253 409.142 li
46.7843 409.142 li
47.1463 409.142 li
47.5073 409.142 li
47.8663 409.142 li
48.2263 409.142 li
48.5863 409.142 li
48.9463 409.142 li
49.3063 409.142 li
49.6673 409.142 li
50.0283 409.142 li
50.3883 409.142 li
50.7483 409.142 li
51.1083 409.142 li
51.4683 409.142 li
51.8283 409.142 li
52.1903 409.142 li
52.5503 409.142 li
52.9103 409.142 li
53.2703 409.142 li
53.6293 409.142 li
53.9893 409.142 li
54.3503 408.624 li
54.7113 409.043 li
55.0713 408.393 li
55.4313 409.019 li
55.7913 408.945 li
56.1513 408.431 li
56.5103 408.914 li
56.8713 409.142 li
57.2333 408.194 li
57.5923 409.098 li
57.9533 408.784 li
58.3133 408.776 li
58.6733 409.142 li
59.0323 408.945 li
59.3933 409.098 li
59.7543 409.106 li
60.1143 409.142 li
60.4743 409.03 li
60.8343 409.142 li
61.1943 409.142 li
61.5533 409.142 li
61.9143 409.142 li
62.2763 409.142 li
62.6353 409.098 li
62.9953 409.142 li
63.3563 409.142 li
63.7163 409.142 li
64.0753 409.142 li
64.4353 409.142 li
64.7983 409.142 li
65.1573 409.142 li
65.5173 409.142 li
65.8783 409.142 li
66.2373 409.142 li
66.5963 409.142 li
66.9563 409.142 li
67.3193 409.142 li
67.6783 409.098 li
68.0383 392.26 li
68.3983 403.246 li
68.7583 409.142 li
69.1183 409.142 li
69.4783 409.142 li
69.8413 409.142 li
70.1993 409.142 li
70.5603 409.142 li
70.9213 409.142 li
71.2803 409.142 li
71.6403 409.142 li
72.0003 409.142 li
72.3623 409.142 li
72.7213 409.142 li
73.0813 409.142 li
73.4423 409.142 li
73.8023 409.142 li
74.1613 409.142 li
74.5213 409.142 li
74.8823 409.142 li
75.2423 409.142 li
cp
1 1 0 0 cmyk
f
74.8827 409.142 mo
74.5217 409.142 li
74.1617 409.142 li
73.8017 409.142 li
73.4427 409.142 li
73.0817 409.142 li
72.7217 409.142 li
72.3617 409.142 li
72.0007 409.142 li
71.6407 409.142 li
71.2797 409.142 li
70.9207 409.142 li
70.5597 409.142 li
70.1997 409.142 li
69.8407 409.142 li
69.4777 409.142 li
69.1177 409.142 li
68.7587 409.142 li
68.3987 409.142 li
68.0387 409.142 li
67.6787 409.142 li
67.3187 409.142 li
66.9567 409.142 li
66.5967 409.142 li
66.2377 409.142 li
65.8777 409.142 li
65.5177 409.142 li
65.1577 409.142 li
64.7977 409.142 li
64.4357 409.142 li
64.0757 409.142 li
63.7167 409.142 li
63.3567 409.142 li
62.9957 409.142 li
62.6357 409.142 li
62.2757 409.142 li
61.9147 409.142 li
61.5537 409.142 li
61.1947 409.142 li
60.8337 409.142 li
60.4737 409.142 li
60.1147 409.142 li
59.7537 409.142 li
59.3927 409.142 li
59.0327 409.142 li
58.6727 409.142 li
58.3127 409.142 li
57.9527 409.142 li
57.5927 409.142 li
57.2337 409.142 li
56.8707 409.142 li
56.5107 409.142 li
56.1507 409.142 li
55.7907 409.142 li
55.4317 409.142 li
55.0717 409.142 li
54.7107 409.142 li
54.3497 409.142 li
53.9897 409.142 li
53.6287 409.142 li
53.2697 409.142 li
52.9097 409.142 li
52.5497 409.142 li
52.1897 409.142 li
51.8287 409.142 li
51.4687 409.142 li
51.1087 409.142 li
50.7487 409.142 li
50.3887 409.142 li
50.0287 409.142 li
49.6677 409.142 li
49.3067 409.142 li
48.9467 409.142 li
48.5867 409.142 li
48.2267 409.142 li
47.8667 409.142 li
47.5067 409.142 li
47.1457 409.142 li
46.7837 409.142 li
46.4257 409.142 li
75.2427 409.142 li
cp
0 1 1 0 cmyk
f
153.051 410.539 mo
153.051 409.601 li
0 0 0 1 cmyk
@
118.815 410.539 mo
118.815 409.601 li
@
89.9985 410.539 mo
89.9985 409.601 li
@
75.2427 416.228 mo
75.2427 409.6 li
@
88.845 410.539 mo
119.968 410.539 li
119.968 379.416 li
88.845 379.416 li
cp
@
123.081 410.539 mo
154.204 410.539 li
154.204 379.416 li
123.081 379.416 li
cp
@
ZDWBPJ+HelveticaNeue*1 [0 -5.6022 -5.6022 0 0 0 ]msf42.5777 300.618 mo(piRNA)[-3.45657 -1.36133 -3.98877 -4.20166 0 ]ysh[1.509 1 ] 0 dsh
53.27 307.833 mo
53.27 276.708 li
0 0 0 .5 cmyk
@
68.0386 307.833 mo
68.0386 276.708 li
@
96.8418 307.833 mo
96.8418 276.708 li
@
111.612 307.833 mo
111.612 276.708 li
@
89.999 293.116 mo
89.999 293.112 li
90.359 293.109 li
90.719 293.102 li
91.079 293.11 li
91.439 293.109 li
91.799 293.109 li
92.159 293.102 li
92.52 293.107 li
92.881 293.102 li
93.24 293.109 li
93.601 293.102 li
93.961 293.09 li
94.32 293.1 li
94.68 293.093 li
95.042 293.09 li
95.403 293.099 li
95.762 293.073 li
96.122 293.065 li
96.482 292.965 li
96.842 292.72 li
97.202 286.598 li
97.563 284.388 li
97.923 283.649 li
98.283 280.375 li
98.643 277.861 li
99.003 278.627 li
99.363 282.824 li
99.724 278.43 li
100.085 283.464 li
100.445 284.743 li
100.805 282.798 li
101.165 285.244 li
101.525 284.892 li
101.885 285.034 li
102.246 287.209 li
102.606 285.859 li
102.967 283.335 li
103.327 285.746 li
103.687 283.112 li
104.047 284.839 li
104.407 283.226 li
104.766 284.32 li
105.128 282.949 li
105.488 284.431 li
105.849 284.275 li
106.208 286.785 li
106.567 286.496 li
106.928 286.087 li
107.288 287.756 li
107.65 287.497 li
108.01 285.552 li
108.369 286.579 li
108.729 285.322 li
109.089 287.017 li
109.449 286.167 li
109.81 288.406 li
110.171 289.009 li
110.531 291.023 li
110.891 291.477 li
111.251 291.833 li
111.612 292.144 li
111.972 291.316 li
112.331 292.461 li
112.693 292.223 li
113.053 292.367 li
113.413 292.823 li
113.773 292.776 li
114.133 292.836 li
114.493 292.878 li
114.853 292.909 li
115.214 292.824 li
115.574 292.724 li
115.935 292.836 li
116.295 292.848 li
116.654 292.685 li
117.014 292.927 li
117.374 292.961 li
117.736 292.887 li
118.096 292.803 li
118.456 293.01 li
118.815 292.988 li
118.815 293.116 li
cp
1 1 0 0 cmyk
f
89.999 293.116 mo
89.999 306.68 li
90.359 302.945 li
90.719 302.188 li
91.079 301.008 li
91.439 304.442 li
91.799 300.56 li
92.159 301.477 li
92.52 300.887 li
92.881 300.713 li
93.24 300.953 li
93.601 301.664 li
93.961 303.388 li
94.32 302.44 li
94.68 300.341 li
95.042 300.038 li
95.403 298.56 li
95.762 296.304 li
96.122 293.861 li
96.482 293.597 li
96.842 293.284 li
97.202 293.141 li
97.563 293.129 li
97.923 293.124 li
98.283 293.124 li
98.643 293.122 li
99.003 293.122 li
99.363 293.12 li
99.724 293.118 li
100.085 293.118 li
100.445 293.12 li
100.805 293.118 li
101.165 293.118 li
101.525 293.118 li
101.885 293.118 li
102.246 293.118 li
102.606 293.118 li
102.967 293.118 li
103.327 293.118 li
103.687 293.118 li
104.047 293.118 li
104.407 293.118 li
104.766 293.118 li
105.128 293.118 li
105.488 293.118 li
105.849 293.118 li
106.208 293.118 li
106.567 293.116 li
106.928 293.116 li
107.288 293.116 li
107.65 293.118 li
108.01 293.118 li
108.369 293.118 li
108.729 293.118 li
109.089 293.118 li
109.449 293.118 li
109.81 293.118 li
110.171 293.118 li
110.531 293.118 li
110.891 293.12 li
111.251 293.118 li
111.612 293.116 li
111.972 293.116 li
112.331 293.116 li
112.693 293.116 li
113.053 293.116 li
113.413 293.118 li
113.773 293.116 li
114.133 293.116 li
114.493 293.116 li
114.853 293.118 li
115.214 293.118 li
115.574 293.116 li
115.935 293.118 li
116.295 293.116 li
116.654 293.116 li
117.014 293.116 li
117.374 293.118 li
117.736 293.118 li
118.096 293.116 li
118.456 293.116 li
118.815 293.116 li
cp
0 1 1 0 cmyk
f
131.078 307.833 mo
131.078 276.708 li
0 0 0 .5 cmyk
@
145.847 307.833 mo
145.847 276.708 li
@
124.234 293.116 mo
124.234 293.112 li
124.595 293.112 li
124.956 293.109 li
125.316 293.112 li
125.675 293.11 li
126.035 293.103 li
126.397 293.105 li
126.757 293.105 li
127.117 293.107 li
127.477 293.103 li
127.837 293.103 li
128.196 293.103 li
128.556 293.103 li
128.919 293.096 li
129.277 293.103 li
129.638 293.105 li
129.998 293.099 li
130.357 293.094 li
130.718 293.078 li
131.078 292.975 li
131.44 290.088 li
131.8 288.964 li
132.16 288.374 li
132.519 288.781 li
132.88 287.756 li
133.239 288.624 li
133.6 288.939 li
133.96 287.513 li
134.32 288.498 li
134.681 287.342 li
135.041 288.367 li
135.401 286.714 li
135.761 287.039 li
136.121 287.058 li
136.482 287.028 li
136.843 287.097 li
137.203 289 li
137.563 288.211 li
137.922 286.77 li
138.283 287.094 li
138.642 288.021 li
139.004 289.732 li
139.364 287.292 li
139.724 286.85 li
140.084 287.711 li
140.444 288.055 li
140.803 287.627 li
141.163 288.229 li
141.526 290.061 li
141.886 288.844 li
142.245 289.799 li
142.605 290.437 li
142.965 290.517 li
143.326 289.967 li
143.686 289.26 li
144.047 289.996 li
144.407 291.064 li
144.766 291.001 li
145.127 291.574 li
145.487 292.005 li
145.847 292.076 li
146.207 292.678 li
146.568 292.671 li
146.929 292.857 li
147.289 292.928 li
147.649 292.86 li
148.008 292.872 li
148.368 292.857 li
148.728 292.927 li
149.09 292.98 li
149.45 292.957 li
149.81 292.923 li
150.17 292.949 li
150.53 292.999 li
150.89 292.991 li
151.25 293.036 li
151.612 293.01 li
151.972 293.025 li
152.331 292.935 li
152.691 293.034 li
153.051 293.036 li
153.051 293.116 li
cp
1 1 0 0 cmyk
f
152.691 293.116 mo
152.331 293.116 li
151.971 293.116 li
151.612 293.116 li
151.249 293.116 li
150.889 293.116 li
150.529 293.116 li
150.169 293.116 li
149.81 293.116 li
153.05 293.116 li
cp
149.089 293.116 mo
149.449 293.118 li
149.81 293.116 li
cp
148.727 293.116 mo
148.368 293.116 li
148.008 293.116 li
147.648 293.116 li
147.288 293.116 li
146.928 293.116 li
146.568 293.116 li
146.207 293.116 li
145.847 293.116 li
149.089 293.116 li
cp
145.127 293.116 mo
145.487 293.118 li
145.847 293.116 li
cp
135.76 293.116 mo
136.121 293.118 li
136.481 293.118 li
136.843 293.118 li
137.203 293.118 li
137.562 293.118 li
137.922 293.118 li
138.282 293.118 li
138.642 293.118 li
139.004 293.118 li
139.364 293.118 li
139.724 293.118 li
140.083 293.118 li
140.444 293.118 li
140.803 293.118 li
141.162 293.118 li
141.526 293.118 li
141.886 293.118 li
142.245 293.118 li
142.605 293.118 li
142.965 293.118 li
143.326 293.118 li
143.686 293.118 li
144.046 293.118 li
144.406 293.118 li
144.766 293.118 li
145.127 293.116 li
cp
135.041 293.116 mo
135.401 293.118 li
135.76 293.116 li
cp
133.959 293.116 mo
134.32 293.118 li
134.68 293.118 li
135.041 293.116 li
cp
124.234 293.116 mo
124.234 293.127 li
124.595 293.127 li
124.956 293.136 li
125.315 293.139 li
125.675 293.129 li
126.035 293.141 li
126.397 293.15 li
126.757 293.141 li
127.117 293.141 li
127.477 293.143 li
127.836 293.136 li
128.196 293.136 li
128.556 293.135 li
128.918 293.132 li
129.277 293.163 li
129.638 293.152 li
129.998 293.141 li
130.357 293.139 li
130.717 293.12 li
131.077 293.118 li
131.439 293.118 li
131.799 293.12 li
132.159 293.118 li
132.518 293.118 li
132.879 293.118 li
133.239 293.118 li
133.599 293.118 li
133.959 293.116 li
cp
0 1 1 0 cmyk
f
[] 0 dsh
154.203 306.195 mo
153.299 306.195 li
0 0 0 1 cmyk
@
154.203 299.656 mo
153.299 299.656 li
@
154.203 293.116 mo
153.299 293.116 li
@
154.203 286.576 mo
153.299 286.576 li
@
154.203 280.04 mo
153.299 280.04 li
@
ZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf154.667 307.276 mo(500)[1.9234 1.94209 0 ]xsh154.667 294.197 mo(0)sh154.667 281.121 mo(500)[1.9234 1.94209 0 ]xsh76.9911 286.115 mo(10)[1.71799 0 ]xsh76.9911 301.808 mo(10)[1.71799 0 ]xsh76.9911 293.961 mo(0)sh46.4253 293.116 mo
46.4253 293.116 li
46.7843 293.116 li
47.1463 293.116 li
47.5073 293.116 li
47.8663 293.116 li
48.2263 293.116 li
48.5863 293.116 li
48.9463 293.116 li
49.3063 293.116 li
49.6673 293.116 li
50.0283 293.116 li
50.3883 293.116 li
50.7483 293.116 li
51.1083 293.116 li
51.4683 293.116 li
51.8283 293.116 li
52.1903 293.116 li
52.5503 293.116 li
52.9103 293.116 li
53.2703 293.116 li
53.6293 292.954 li
53.9893 292.896 li
54.3503 292.797 li
54.7113 292.797 li
55.0713 292.676 li
55.4313 292.676 li
55.7913 292.467 li
56.1513 292.467 li
56.5103 292.375 li
56.8713 292.412 li
57.2333 292.155 li
57.5923 292.32 li
57.9533 292.045 li
58.3133 291.715 li
58.6733 291.136 li
59.0323 290.974 li
59.3933 291.385 li
59.7543 290.864 li
60.1143 291.33 li
60.4743 291.304 li
60.8343 290.916 li
61.1943 290.651 li
61.5533 290.314 li
61.9143 290.696 li
62.2763 290.394 li
62.6353 290.211 li
62.9953 290.487 li
63.3563 290.284 li
63.7163 290.487 li
64.0753 291.136 li
64.4353 290.974 li
64.7983 291.385 li
65.1573 291.238 li
65.5173 291.465 li
65.8783 291.513 li
66.2373 291.77 li
66.5963 292.155 li
66.9563 292.375 li
67.3193 292.467 li
67.6783 292.797 li
68.0383 292.954 li
68.3983 293.065 li
68.7583 293.116 li
69.1183 293.065 li
69.4783 293.065 li
69.8413 293.116 li
70.1993 293.116 li
70.5603 293.116 li
70.9213 293.065 li
71.2803 293.065 li
71.6403 293.116 li
72.0003 293.116 li
72.3623 293.065 li
72.7213 293.116 li
73.0813 293.116 li
73.4423 293.116 li
73.8023 293.116 li
74.1613 293.116 li
74.5213 293.116 li
74.8823 293.116 li
75.2423 293.116 li
cp
1 1 0 0 cmyk
f
74.8827 293.116 mo
74.5217 293.116 li
74.1617 293.116 li
75.2427 293.116 li
cp
73.4427 293.116 mo
73.8017 293.174 li
74.1617 293.116 li
cp
73.0817 293.116 mo
72.7217 293.116 li
72.3617 293.116 li
72.0007 293.116 li
71.6407 293.116 li
71.2797 293.116 li
70.9207 293.116 li
70.5597 293.116 li
70.1997 293.116 li
69.8407 293.116 li
69.4777 293.116 li
69.1177 293.116 li
68.7587 293.116 li
68.3987 293.116 li
68.0387 293.116 li
67.6787 293.116 li
67.3187 293.116 li
66.9567 293.116 li
66.5967 293.116 li
66.2377 293.116 li
65.8777 293.116 li
65.5177 293.116 li
65.1577 293.116 li
64.7977 293.116 li
64.4357 293.116 li
64.0757 293.116 li
63.7167 293.116 li
63.3567 293.116 li
62.9957 293.116 li
62.6357 293.116 li
62.2757 293.116 li
61.9147 293.116 li
61.5537 293.116 li
61.1947 293.116 li
60.8337 293.116 li
60.4737 293.116 li
60.1147 293.116 li
59.7537 293.116 li
59.3927 293.116 li
59.0327 293.116 li
58.6727 293.116 li
58.3127 293.116 li
57.9527 293.116 li
57.5927 293.116 li
57.2337 293.116 li
56.8707 293.116 li
56.5107 293.116 li
56.1507 293.116 li
55.7907 293.116 li
55.4317 293.116 li
55.0717 293.116 li
54.7107 293.116 li
54.3497 293.116 li
53.9897 293.116 li
53.6287 293.116 li
53.2697 293.116 li
52.9097 293.116 li
52.5497 293.116 li
52.1897 293.116 li
51.8287 293.116 li
51.4687 293.116 li
73.4427 293.116 li
cp
50.7487 293.116 mo
51.1087 293.174 li
51.4687 293.116 li
cp
50.3887 293.116 mo
50.7487 293.116 li
cp
49.6677 293.116 mo
50.0287 293.174 li
50.3887 293.116 li
cp
48.9467 293.116 mo
49.3067 293.174 li
49.6677 293.116 li
cp
48.5867 293.116 mo
48.2267 293.116 li
48.9467 293.116 li
cp
47.1457 293.116 mo
47.5067 293.174 li
47.8667 293.174 li
48.2267 293.116 li
cp
46.7837 293.116 mo
47.1457 293.116 li
cp
46.4257 293.116 mo
46.4257 293.174 li
46.7837 293.116 li
cp
0 1 1 0 cmyk
f
76.3955 293.116 mo
75.4915 293.116 li
0 0 0 1 cmyk
@
76.3955 285.27 mo
75.4915 285.27 li
@
76.3955 300.962 mo
75.4915 300.962 li
@
%ADOBeginSubsetFont: KUDAAA+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPJ+HelveticaNeue gcheck setglobal} if
1 6336 73 <00020043fff5022d02ca0018002c00adb8002e2fba0018000000032bb800
1810b80002d0b8001810b80004d0b800042fb8002e10b8000edcb8001810
b80016d0b800162fb8000e10b80019dc410500da001900ea001900025d41
1b0009001900190019002900190039001900490019005900190069001900
790019008900190099001900a9001900b9001900c90019000d5db8001810
b80023d0b800232f00b800002fba001e000900032bb8001e10ba00130028
00032bb8001310303113113335331e0333323e0235342e02232206072311
01140e0223222e0235343e0233321e024355020e292e2f133b593b1d1e3b
593c365a1502013b10243b2c2c3e271211263c2b293d271302cafd364517
1f12082a49623737624b2c272b010bfe3d26483822213647262446372220
36450000>ZDWBPJ+HelveticaNeue AddT42Char 
1 6640 74 <00010024fff501fa021100230079ba001c000b00032bb8001c10411b0006
001c0016001c0026001c0036001c0046001c0056001c0066001c0076001c
0086001c0096001c00a6001c00b6001c00c6001c000d5d410500d5001c00
e5001c00025d00ba0017001000032bb8001710ba0006002100032bb80006
10b80000dcb8001010b80014dc303101332e0323220e0215141e02333236
37230e0123222e0235343e02333216019f5805263b4d2c3d5c3d1e1f3d5b
3b63730e5708473f283a241110253e2e3640015f2e432c152b4b653a3a61
462668603c42203544242749382236000000>ZDWBPJ+HelveticaNeue AddT42Char 
1 7544 78 <00020024ff2f01fe02110028003c00bdba002e000c00032bb8002e10ba00
01000200032bb8000110b8000210b80038d0b800382fba00040002003811
1239b8000210b80015d0411b0006002e0016002e0026002e0036002e0046
002e0056002e0066002e0076002e0086002e0096002e00a6002e00b6002e
00c6002e000d5d410500d5002e00e5002e00025dba0021000c002e111239
b800212fb80020dcb8000110b8003edc00ba001b002600032bb8001b10ba
0007003300032bb8000710ba0029001100032bb800291030312511231523
2e0123220e0215141e02333236373315140e0223222e0227231e03333236
27222e0235343e0233321e0215140e0201fe5001175231435c38181d3a56
3a3259160211263a2a152e271b015502283d4b247c74ee2a38220e11253a
292838231011243b2c01d94a2b2b334f612e355f472a2d30222b48331d09
1420172a3a24107e98233946232544341f203542222448392300>ZDWBPJ+HelveticaNeue AddT42Char 
1 7900 79 <00010040000001ec02ca001a0051ba001a000000032bb8001a10ba000e00
0b00032bb8000e10b8001a10b80002d0b8001a10b80018d0b800182f00b8
00002fb800012fb8000c2fba0013000800032bb8001310ba001900010000
111239303113113311343e0233321615113311342e0223220e0207231140
5513263927313855112a443317312d240a0202cafd360124233b2c183830
fea201542a45321c0a1521180111>ZDWBPJ+HelveticaNeue AddT42Char 
1 9792 90 <0001001ffff501d60211003a00abba0000000100032bba0020001f00032b
b8002010ba0031001f0020111239b800312f410500da003100ea00310002
5d411b000900310019003100290031003900310049003100590031006900
3100790031008900310099003100a9003100b9003100c90031000d5db800
0bdcb8000010b8002adcb80015dcb8000b10b8003cdc00ba003600060003
2bb8003610ba0025001a00032bb8002510b8000610b80000dcb8002510b8
001fdc303137231e0333323e0235342e02272e0335343e0233321e021733
2e0323220e0215141e0415140e0223222e02745502243c4e2b274f3f271d
2f3d201e3c301f142027131529221602550322394a2c22453723324b584b
3218252c141a312718a3304329120f263e2f2532211407070d131d161419
0f06091421192f3f250f1123382732381f11152221181f10060a1727>ZDWBPJ+HelveticaNeue AddT42Char 
1 10284 92 <00010040fff501ec020500180051ba000c000d00032bb8000c10ba000100
0200032bb8000110b8000210b80016d0b800162fba001700020001111239
b8000210b80018d0b800182f00b800012fb8000c2fba0008001300032bb8
000810303121112311140e0223222635112311141e0233323637331501ec
5513263927313855112a443339541b020205fedc233b2c183830015efeac
2a45321b2d3052000000>ZDWBPJ+HelveticaNeue AddT42Char 
1 10596 96 <00010008ff3201ec02050016002300b800012fb800052fb800122fba0004
00120001111239ba000e0012000111123930310513230323032313070e01
23222627151e0133323e02010be15a91029760cd230c201a0d190c0e1e0f
1d2a231d440249fe5901a7fdfe57171808044e05040f21340000>ZDWBPJ+HelveticaNeue AddT42Char 
ZDWBPJ+HelveticaNeue /CharStrings get begin
/b 73 def
/c 74 def
/g 78 def
/h 79 def
/s 90 def
/u 92 def
/y 96 def
end
ZDWBPJ+HelveticaNeue /Encoding get
dup 98 /b put
dup 99 /c put
dup 103 /g put
dup 104 /h put
dup 115 /s put
dup 117 /u put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPJ+HelveticaNeue*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero 2{/.notdef}rp /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /.notdef /G /H /I /.notdef /K 2{/.notdef}rp /N /.notdef /P /.notdef /R /S /T 12{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u 3{/.notdef}rp /y 86{/.notdef}rp /endash 47{/.notdef}rp]ZDWBPJ+HelveticaNeue nfZDWBPJ+HelveticaNeue*1 [0 -5.6022 -5.6022 0 0 0 ]msf176.409 339.509 mo(RNA pol II)[-3.98877 -4.20163 -3.63022 -1.5574 -3.47336 -3.33896 -1.24368 -1.5574 -1.55182 0 ]yshZDWBPJ+HelveticaNeue*1 [5.6022 0 0 -5.6022 0 0 ]msf41.5967 266.546 mo(Pre-pachytene)[3.70863 1.98874 3.23808 2.33056 3.45097 3.13725 3.14285 3.15965 3.08121 1.80952 3.17646 3.24368 0 ]xsh43.8544 274.014 mo(piRNA genes)[3.45657 1.36134 3.98875 4.20165 3.6302 1.55741 3.35575 3.17085 3.24368 3.18207 0 ]xsh90.0445 266.546 mo(Pachytene piRNA genes)[3.68062 3.13725 3.14285 3.15965 3.08121 1.80952 3.17646 3.24368 3.0084 1.5574 3.45657 1.36134 3.98875 4.20165 3.63019 1.55742 3.35574 3.17085 3.24368 3.18205 0 ]xsh223.875 266.546 mo(Pachytene piRNA genes)[3.68062 3.13725 3.14284 3.15964 3.08122 1.80952 3.17645 3.24367 3.00841 1.5574 3.45659 1.36133 3.98874 4.20166 3.63019 1.5574 3.35574 3.17087 3.24368 3.18207 0 ]xshZDWBPJ+HelveticaNeue*1 [7.4696 0 0 -7.4696 0 0 ]msf70.938 255.04 mo(RNA sequencing)[5.26605 5.55738 4.84026 2.07655 3.86925 4.19794 4.54153 4.28755 4.18298 4.28755 4.13818 1.77029 4.28755 0 ]xsh179.217 255.04 mo(Chromatin immunoprecipitation)[5.51257 4.28754 2.60684 4.4295 6.49854 4.11577 2.44258 1.77029 4.15309 2.07655 1.77029 6.49852 6.4836 4.28008 4.28009 4.41457 4.57889 2.59937 4.19792 4.13818 1.76282 4.55649 1.78525 2.50232 4.11578 2.44257 1.79269 4.42953 0 ]xshZDWBPJ+HelveticaNeue*1 [4.9797 0 0 -4.9797 0 0 ]msf90.0796 274.316 mo(bidirectional)[3.07249 1.23496 3.05257 1.22002 1.76775 2.82848 2.81355 1.66323 1.22501 2.97788 2.88325 2.80857 0 ]xsh122.662 274.316 mo(unidirectional)[2.88822 2.87328 1.23497 3.05257 1.22003 1.76776 2.82848 2.81354 1.66324 1.22501 2.97789 2.88324 2.80856 0 ]xshZDWBPJ+HelveticaNeue*1 [5.6022 0 0 -5.6022 0 0 ]msf175.427 266.546 mo(Pre-pachytene)[3.70863 1.98874 3.23808 2.33055 3.45097 3.13725 3.14284 3.15965 3.08121 1.80952 3.17645 3.24367 0 ]xsh177.684 274.014 mo(piRNA genes)[3.45657 1.36133 3.98875 4.20166 3.63019 1.55742 3.35574 3.17085 3.24368 3.18207 0 ]xshZDWBPJ+HelveticaNeue*1 [4.9797 0 0 -4.9797 0 0 ]msf256.802 274.315 mo(unidirectional)[2.88821 2.87329 1.23499 3.05255 1.22003 1.76776 2.82849 2.81354 1.66321 1.22504 2.97787 2.88324 2.80856 0 ]xsh223.373 274.315 mo(bidirectional)[3.07248 1.23497 3.05257 1.22003 1.76776 2.82848 2.81354 1.66324 1.22501 2.97789 2.88324 2.80856 0 ]xsh123.081 307.832 mo
154.204 307.832 li
154.204 276.71 li
123.081 276.71 li
cp
@
88.845 342.068 mo
119.968 342.068 li
119.968 310.943 li
88.845 310.943 li
cp
@
88.845 307.832 mo
119.968 307.832 li
119.968 276.709 li
88.845 276.709 li
cp
@
1 lc
1 lj
45.272 307.832 mo
76.395 307.832 li
76.395 276.709 li
45.272 276.709 li
cp
@
0 lc
0 lj
45.272 342.067 mo
76.395 342.067 li
76.395 310.943 li
45.272 310.943 li
cp
@
45.272 410.539 mo
76.395 410.539 li
76.395 379.416 li
45.272 379.416 li
cp
@
45.272 376.303 mo
76.395 376.303 li
76.395 345.18 li
45.272 345.18 li
cp
@
%ADOBeginSubsetFont: SBVPMX+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPI+Helvetica-Bold gcheck setglobal} if
1 104 36 <00030034000005a805c20002000a000b00dc406b6802012705280a380637
094806680a780a880488069a0395049806aa03a504a806b801b80ac801c8
0ad803d80a150107060602000809090200080a01070502140a0a25120909
02140505251206060207082a010000020a0b04030206090a0305080b0d17
171a0b0a040605b80114b2090302b80114b60a190c657572182b764e10f4
184dfd3939fd39391139194e456544e6182f003f173c4d3f3c3c1239392f
3cfd3c05872e2b7d104b5158b004c01bb004c459872e182b7d104b5158b0
03c01bb003c4591112393912393987103c3c07103c3c3130015d005d0121
0b012101210321032101022f0176b8ab015c020afeb25ffde166febe02ba
022d02440151fa3e012ffed105c2>ZDWBPI+Helvetica-Bold AddT42Char 
ZDWBPI+Helvetica-Bold /CharStrings get begin
/A 36 def
end
ZDWBPI+Helvetica-Bold /Encoding get
dup 65 /A put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPI+Helvetica-Bold*1 [65{/.notdef}rp /A /B 189{/.notdef}rp]ZDWBPI+Helvetica-Bold nfZDWBPI+Helvetica-Bold*1 [14.9392 0 0 -14.9392 0 0 ]msf24.8301 18.062 mo(A)sh1 lw
80.3687 67.4604 mo
80.3687 69.6514 li
@
80.3677 76.7119 mo
76.3037 66.7619 li
80.3687 69.1239 li
84.4327 66.7629 li
cp
f
114.602 56.3799 mo
126.216 56.3799 li
@
133.276 56.3799 mo
123.327 60.4449 li
125.688 56.3799 li
123.327 52.3159 li
cp
f
.5 lw
114.604 67.46 mo
46.133 67.46 li
46.133 45.674 li
114.604 45.674 li
cp
@
%ADOBeginSubsetFont: KUDAAA+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPJ+HelveticaNeue gcheck setglobal} if
1 100 15 <0001002fff3b010d02db000f005dba0004000b00032bb8000410411b0006
000400160004002600040036000400460004005600040066000400760004
008600040096000400a6000400b6000400c60004000d5d410500d5000400
e5000400025d00b800072fb800002f303117332e0135343637230e011514
1e02cc41473d3c48414e4f16293ac573e27e7be07267f0764278726f>ZDWBPJ+HelveticaNeue AddT42Char 
1 248 16 <0001fff7ff3b00d402db000f0061ba0004000d00032bb8000410410500da
000d00ea000d00025d411b0009000d0019000d0029000d0039000d004900
0d0059000d0069000d0079000d0089000d0099000d00a9000d00b9000d00
c9000d000d5db80011dc00b800092fb800002f303107333e0135342e0227
231e0115140609404e4f16293a2440463d3cc567ef764278736f3873e37e
7ae1>ZDWBPJ+HelveticaNeue AddT42Char 
1 7392 77 <0001000c0000012902d20017004fba0003000000032bb8000310b80006d0
b8000010b8000ddcb8000010b80014d000b800012fba0011000a00032bb8
001110ba0015000000032bb8001510b8000010b80003d0b8001510b80005
d030311311331133352335343633321617352e012322061d012315635564
64221f0b1a0b0c1f0c46495701bafe4601ba4b48221803044a0404413f4d
4b00>ZDWBPJ+HelveticaNeue AddT42Char 
ZDWBPJ+HelveticaNeue /CharStrings get begin
/parenleft 15 def
/parenright 16 def
/f 77 def
end
ZDWBPJ+HelveticaNeue /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 102 /f put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPJ+HelveticaNeue*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp /zero 2{/.notdef}rp /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /.notdef /G /H /I /.notdef /K 2{/.notdef}rp /N /.notdef /P /.notdef /R /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u 3{/.notdef}rp /y 86{/.notdef}rp /endash 47{/.notdef}rp]ZDWBPJ+HelveticaNeue nfZDWBPJ+HelveticaNeue*1 [7.4696 0 0 -7.4696 0 0 ]msf50.5767 54.1138 mo(Reference-based)[5.23617 4.1083 2.25586 4.19793 2.59937 4.183 4.28754 4.15312 4.26516 3.05512 4.55647 4.16806 3.86925 4.19794 0 ]xsh49.7177 63.0773 mo(mapping \(TopHat\))[6.49853 4.16059 4.55647 4.55647 1.7703 4.28754 4.28759 2.07655 2.34547 3.83941 4.41458 4.55647 5.52003 4.11577 2.36041 0 ]xsh144.895 53.9271 mo(Non-genome)[5.52751 4.42203 4.30997 3.14476 4.4295 4.183 4.28008 4.42952 6.49854 0 ]xsh141.81 62.8906 mo(mapping reads)[6.49854 4.16058 4.55647 4.55647 1.77029 4.28755 4.28758 2.07655 2.59937 4.16805 4.13072 4.57141 0 ]xsh201.748 64.6592 mo
201.748 66.1032 199.907 67.2732 197.64 67.2732 cv
137.384 67.2732 li
135.116 67.2732 133.276 66.1032 133.276 64.6592 cv
133.276 48.1022 li
133.276 46.6572 135.116 45.4872 137.384 45.4872 cv
197.64 45.4872 li
199.907 45.4872 201.748 46.6572 201.748 48.1022 cv
201.748 64.6592 li
cp
@
1 lw
167.667 67.4604 mo
167.667 69.7364 li
@
167.667 76.7974 mo
163.602 66.8484 li
167.667 69.2094 li
171.731 66.8484 li
cp
f
254.658 67.4604 mo
254.658 69.7364 li
@
254.658 76.7974 mo
250.593 66.8484 li
254.658 69.2094 li
258.722 66.8484 li
cp
f
.5 lw
288.896 67.46 mo
220.423 67.46 li
220.423 45.674 li
288.896 45.674 li
cp
@
%ADOBeginSubsetFont: KUDAAA+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPJ+HelveticaNeue gcheck setglobal} if
1 3880 43 <0002004e0000029a02ca000e0019007db8001b2fba0001000f00032bb800
0110b8001b10b80016dcb80007dc410500da000700ea000700025d411b00
090007001900070029000700390007004900070059000700690007007900
07008900070099000700a9000700b9000700c90007000d5d00ba00000010
00032bb8000010ba000f000100032bb8000f103031371133321e0215140e
0423031133323e0235342623ada0425a39191b2a35363010fdf559825428
b2a550022a25476540425d3e241305027afd36325f8b5aaca8000000>ZDWBPJ+HelveticaNeue AddT42Char 
1 10444 93 <0001000e000001e602050007001900b800012fb800052fb800002fba0004
00000001111239303121132303230323130129bd598d02915fc00205fe51
01affdfb>ZDWBPJ+HelveticaNeue AddT42Char 
ZDWBPJ+HelveticaNeue /CharStrings get begin
/D 43 def
/v 93 def
end
ZDWBPJ+HelveticaNeue /Encoding get
dup 68 /D put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPJ+HelveticaNeue*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp /zero 2{/.notdef}rp /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /D /E /.notdef /G /H /I /.notdef /K 2{/.notdef}rp /N /.notdef /P /.notdef /R /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u /v 2{/.notdef}rp /y 86{/.notdef}rp /endash 47{/.notdef}rp]ZDWBPJ+HelveticaNeue nfZDWBPJ+HelveticaNeue*1 [7.4696 0 0 -7.4696 0 0 ]msf223.142 54.1138 mo(De novo transcript)[5.43036 4.0112 2.07654 4.28009 4.28012 3.73479 4.2876 2.07655 2.4575 2.64418 4.16806 4.29501 3.87674 4.15311 2.63672 1.76282 4.50418 0 ]xsh224.763 63.0773 mo(assembly \(Trinity\))[4.16806 3.91406 3.86926 4.18298 6.49106 4.55649 1.78523 3.73479 2.07657 2.34546 3.85434 2.63672 1.77029 4.25769 1.78522 2.61438 3.80203 0 ]xsh1 lw
167.667 29.9258 mo
167.667 36.1508 li
80.368 36.1498 li
80.368 38.4258 li
@
80.3677 45.4868 mo
76.3027 35.5378 li
80.3677 37.8988 li
84.4317 35.5378 li
cp
f
254.658 38.4268 mo
254.658 36.1508 li
167.667 36.1508 li
@
254.658 45.4873 mo
258.723 35.5383 li
254.658 37.8993 li
250.594 35.5383 li
cp
f
220.422 87.0684 mo
208.809 87.0684 li
@
201.748 87.0684 mo
211.697 83.0034 li
209.336 87.0684 li
211.697 91.1324 li
cp
f
%ADOBeginSubsetFont: KUDAAA+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPJ+HelveticaNeue gcheck setglobal} if
1 2740 32 <00020022fff501fe02c5001f003300dfba002a001100032bb8002a10ba00
07002000032bb8000710b8001adc410500da002000ea002000025d411b00
090020001900200029002000390020004900200059002000690020007900
20008900200099002000a9002000b9002000c90020000d5d411b0006002a
0016002a0026002a0036002a0046002a0056002a0066002a0076002a0086
002a0096002a00a6002a00b6002a00c6002a000d5d410500d5002a00e500
2a00025db8000710b80035dc00ba001d000400032bb8001d10ba000c002f
00032bb8000c10ba0025001600032bb8002510b8000410b80000dc303137
231e0133323635342e0223220e0215141e0233323637170e012322260114
0e0223222e0235343e0233321e02865508765981752742583233563e221d
39543634581802044e4e334a010e142636211f3325150f21352624362513
ab5c5ac5b865834c1f223d553334583e23352d028b873801611f392b1919
2a361d213c2f1c1a2d3a0000>ZDWBPJ+HelveticaNeue AddT42Char 
1 3268 41 <0003004e0000028002ca000a0021002c0101ba0001000b00032bb8000110
ba0019000700032bb8001910410500da000700ea000700025d411b000900
070019000700290007003900070049000700590007006900070079000700
8900070099000700a9000700b9000700c90007000d5dba00290007001911
1239b800292f410500da002900ea002900025d411b000900290019002900
290029003900290049002900590029006900290079002900890029009900
2900a9002900b9002900c90029000d5db80012dcba0016000b0012111239
b8000110b80022d0b8001210b8002edc00ba0022000c00032bb8002210ba
000b000100032bb8000b10ba0000002300032bb8000010ba001600230000
1112393031133533321e0215140623011121323e0235342627353e013534
26272e0323033533321e0215140623adbe1f372a184751fee30159355137
1c464233373123102d343517a4d91e382b1a473f0197e307182c26393901
33fd3623394a27425c0e02145339364a150a0a0501fd86f70b1b2e233c44
0000>ZDWBPJ+HelveticaNeue AddT42Char 
1 4748 51 <0001004e0000022702ca0005001fba0005000000032bb800051000b80000
2fba0004000100032bb800041030311311213521114e01d9fe8602cafd36
50027a00>ZDWBPJ+HelveticaNeue AddT42Char 
1 8148 81 <0002fff3ff3b009a02ca000300130037ba0004000e00032bb8000410b800
00d0b8000410b80002dcb80006d000ba000a001100032bb8000a10ba0001
000000032bb80001103031133523151311231114062b0122262715163332
369a555555141c120407051417394302626868fd5d0246fdc8281f010149
043f0000>ZDWBPJ+HelveticaNeue AddT42Char 
1 10508 95 <00010009000001fd0205000b002700b800072fb8000a2fb800012fb80004
2fba000300010007111239ba000900010007111239303113033337173303
3723072723cbc26790906dc8b266817c6d0110fef0d6d60117eeb5b5>ZDWBPJ+HelveticaNeue AddT42Char 
ZDWBPJ+HelveticaNeue /CharStrings get begin
/nine 32 def
/B 41 def
/L 51 def
/j 81 def
/x 95 def
end
ZDWBPJ+HelveticaNeue /Encoding get
dup 57 /nine put
dup 66 /B put
dup 76 /L put
dup 106 /j put
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPJ+HelveticaNeue*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp /zero 2{/.notdef}rp /three /four 2{/.notdef}rp /seven /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /D /E /.notdef /G /H /I /.notdef /K /L /.notdef /N /.notdef /P /.notdef /R /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /.notdef /x /y 86{/.notdef}rp /endash 47{/.notdef}rp]ZDWBPJ+HelveticaNeue nfZDWBPJ+HelveticaNeue*1 [7.4696 0 0 -7.4696 0 0 ]msf134.378 85.2373 mo(Exon-exon junction)[4.8029 3.8394 4.42952 4.30995 3.14476 4.02614 3.83942 4.4295 4.15309 2.07655 1.77029 4.28009 4.28754 4.16806 2.44258 1.79271 4.4295 0 ]xsh141.855 94.2008 mo(mapping reads)[6.49854 4.16058 4.55647 4.55647 1.77029 4.28755 4.28758 2.07655 2.59937 4.16806 4.13071 4.57141 0 ]xsh222.153 85.2373 mo(Genome alignment)[5.84125 4.183 4.28008 4.4295 6.49854 4.0112 2.07654 4.16058 1.75537 1.79269 4.42206 4.27261 6.4985 4.18301 4.25018 0 ]xsh243.195 94.2008 mo(\(BLAT\))[2.08405 5.22122 4.55646 4.44437 4.69843 0 ]xsh49.0228 85.2373 mo(Genome-mapping)[5.84125 4.18299 4.28008 4.42951 6.49853 4.27263 3.07007 6.49853 4.16059 4.55647 4.55647 1.77029 4.28755 0 ]xsh59.1665 94.2008 mo(\(mm9\) reads)[1.93465 6.49853 6.52094 4.23526 1.93465 2.07655 2.59937 4.16058 4.13071 4.57141 0 ]xsh.5 lw
114.604 95.9692 mo
114.604 97.4142 112.764 98.5832 110.495 98.5832 cv
50.2405 98.5832 li
47.9715 98.5832 46.1325 97.4142 46.1325 95.9692 cv
46.1325 79.4122 li
46.1325 77.9682 47.9715 76.7972 50.2405 76.7972 cv
110.495 76.7972 li
112.764 76.7972 114.604 77.9682 114.604 79.4122 cv
114.604 95.9692 li
cp
@
201.748 95.9692 mo
201.748 97.4142 199.907 98.5832 197.64 98.5832 cv
137.384 98.5832 li
135.116 98.5832 133.276 97.4142 133.276 95.9692 cv
133.276 79.4122 li
133.276 77.9682 135.116 76.7972 137.384 76.7972 cv
197.64 76.7972 li
199.907 76.7972 201.748 77.9682 201.748 79.4122 cv
201.748 95.9692 li
cp
@
1 lw
254.658 98.5835 mo
254.658 100.859 li
@
254.658 107.92 mo
250.593 97.9714 li
254.658 100.332 li
258.722 97.9714 li
cp
f
.5 lw
288.896 98.583 mo
220.423 98.583 li
220.423 76.797 li
288.896 76.797 li
cp
@
1 lw
80.3687 98.5835 mo
80.3687 100.859 li
@
80.3687 107.92 mo
76.3037 97.9714 li
80.3687 100.332 li
84.4327 97.9714 li
cp
f
167.667 98.5835 mo
167.667 100.859 li
@
167.667 107.92 mo
163.602 97.9714 li
167.667 100.332 li
171.731 97.9714 li
cp
f
133.276 87.0684 mo
127.673 87.0684 li
121.615 117.489 li
@
114.604 118.316 mo
122.505 111.031 li
121.713 115.665 li
125.345 118.649 li
cp
f
124.601 107.659 mo
125.807 118.317 li
126.216 118.317 li
@
133.276 118.316 mo
122.654 119.957 li
125.896 116.552 li
124.544 112.05 li
cp
f
124.892 107.659 mo
122.129 107.46 119.723 105.186 119.723 102.416 cv
119.723 100.058 121.194 98.0727 123.449 97.3867 cv
120.828 87.0687 li
114.603 87.0687 li
@
%ADOBeginSubsetFont: STYPMX+HelveticaNeue-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (STYPMX+HelveticaNeue)%%Title: (STYPMX+HelveticaNeue Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /STYPMX+HelveticaNeue def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-951 -481 1446 1077} def/FontInfo 4 dict dup begin/FSType 0 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 2136 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 23 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B7A73DB69766C728F992B45CDEFDE836A03F03808DEA1F562730C87541D1DACD> |58 <001C60D8A8C9B67DB58789F51595DCF90BBB2B674A76ABEF9D3D99EDAA9A938BC68ADD5BEE2127863866D61B9300DF3B85FEC013588736057136A85174EDF694645A60BB146B9F318FBA70B24445023BC05CF20E83A6623DCF831D8ECC6A24C62AF958CD06AA90FBFDB74C8EC0BF0BE4C00D0D4E79EE653DED50EF7F30AE97D9038F7C9B094876F1EA3755148F1F43647E5C429D294D6460D6F25919A9AE918BA7D5BE3BFC9FBA263E097CBE1F74B9382A78B835574F3EFF81AE06434B3662B15A1136B409583A42C5AAD7891A0F68572F64C075A65E754AF812C6961647E04F7CA02060CB99A000061C8DBDD93F8BCDE1317C9A0906C52352E462B3C4169E2E84CD2AC06D8A9597BE6A0AB9162239A1995D98012687D0DB7364CADA4388EF51A11DEE0DD68697F61E8AD620A382C9CB4BBCF3CA6573D44C597320828A6E0659B7BFDA6A4AB3AC1FE485D254A9F85A14C6D3D2730D15> |91 <001C60D8A8C9B831A983F3E33337748713E88A1E5224168E0F67E7570999394DC65B3C1F9E93E779E823D948B9BA81E8D28F7AA76A84CA0D8886E947D6DA351FC6D6DA2491F91E4DCFCC3CFCAB956E68A2E9A2422BEE8CAB716B00E0C2DA95565D6409476535> |89 <001C60D8A8C9B81F2C3A9A44CEFFCAE2B5B722C19E625B807D4F857B444383631BDC722B031B7D18A27CB4F561CDC7869F3EE923C7D65D3D994DE91855248F92102B302065D5EB4599> |72 <001C60D8A8C9B78256DD1AA79B6E96B03E77EADE6FF0A6D5505B6476A0AEF13AFACC9B9C8107B755C96D4F2B6E7E4B814B70964F745A892BC2F7DBFD243A80BF261760C9115B3944A3DA63A020A1AC36E19994149E7CE1B81ADBD95B3735B8B753C51EA80398564C8D7E879660069158F6495BCE5C1CC6F9940CB3DD2B8B23F910189F52BDAE4D25F8EB2F4BA6F1E6AD2095AB8B6D03B0775D8BC8855AA1504E5A7E5B439B95621696C1C488B653996DDD18B169E460146B238E345F90A764D9FE3365CCE5645836155E954C349F53190EFFDB827467125C7F5A3C5C60D1FBE8F22BBB8C97BE208DFD9DC4E5F6D263D8673965AF624CC2B44D231FB29D854E8BA6BDF51C75F50BD9580344B6256F49927DBEC126269CA38BF3AEA7EAFC1130171EAB68FAF23EC73F45ED90287F5F700E3446D017248495E4F4341F88DDC2D8678D90B36E81C0D293EF71C1EB3B674292620537318BBB1B0E97C39B96F9AC815A7DF2153FC96D5B493F9A7D151B6F> |85 <001C60D8A8C9B7EF322B311F684FFCE372DC830C5B5622CF8CC481131E62D787051C7F6F8AFE4E0678E980DEFED9D3B42136CA31D6B181415CC612E43F129CA0C6B7129B72601C197C1289FE3B0E87810C0E52F39D3150ED1541E70F1FAC5E47A3847D5C5288BFD9C72CA7FDA1DA3E70FC> |75 <001C60D8A8C9B7CA642AB5CCFFBCBE446607BF45444797C5129AD75C694597C0629AB24E9D54F936C16BE3D25CEA1B8C96881ECFDC60B54236C9EC2FA30DA2A848A4CBD37893E1F8056DD3D8F4E5A5D50258DF41ED55CD2290EB5E498577916ED80F4FA5E4334DFE9F6809FADC5C0C40C6A401244D172FFF645E3FFF16A6C1094A4ED1826F3037EA86B64A0380C8B3E3229F349226214FDF5E286B75FB471FB9C2CD502C2219A5BB1B135C46A2C2BE44B969A462B8AB31BD353D37BE3C3C7080EAE8E54A6B7465DCDE55846A7689FA6A8296E41948930065D5B640E4496541971418DA22DBA1100ADCA9406D6F37305465E596699F7A> |20 <001C60D8A8C9B7361F02565A2847C0BACC3FC3DBCA2AB7> |90 <001C60D8A8C9B7A73DB93069DBC6375B57C8CEA5298ECD155D330F5DEADB84BCE0F3B9931445A3E0A23408E166E94ED9B84A4F77C41F0369937E8C2C9831D0AAA0C414A32B88A399DE991143E3662049761DB0B0648AFDE42A4B3062552586F0EBBA0F2E7BF3A4DFA292E6EBB84128A6A9679FD085A8A3EE7D119B409E196F8DD013E73279FEB2FAD41E214F19FAE59B2DE112620184CF1FA5F8444A4C3EBCD7B771E48653A08D11A41EDDC944A6794EED345CDB91C69F6C018931F290C225B8C2B7916D95BB63059EE22EE396098AC463522A22CE66834854EDE7E984119074789DC9CD95809278277DFC5F487D01C620166BB029D76936EA500E2DBA569CE0343EEFE105A4474A80777509B8E0D1BF6BCA9D29EA70910F3731811C708532E5A8C24D816BA3F135B8B9EBA4D9360824E69CC0DC3D45097EC5A74ECA5FEECBEEBDE4BFBA7F33D81257F3182B67A858EF8443FF7D0CE5> |87 <001C60D8A8C9B7CA642A857E43B6E4584C21053D20464CD900CD9FAC314FFFF57B29E654571390EB20E46B7B48BB4AFE15157A1CE094B6FF462457B10AE9964D7A692D9B23249B54E98BB36FE18513C4E36124EE91E8B55E0D32F87793F9BE4B91CF07577AD6B1D404AAE3A88A4BEF896F462E4ACBCC0D5DA06B2EBCCC22792F58753666AB72F6C0F48104C745CE06B90FA6FECCB3A7C2A512102AC3FAB9143D8756393E66D37DCB1849D10BFE85B4757E9DB634D20E735C4DA1388EDE7F62254793AA9AEE6F6333E1CD0C532177362FACB6E0BE0F0AF66D33E6D9BDA8C896BA2F385679C44BD75AB95077ACF0FBEACEBAE1202AAB81> |76 <001C60D8A8C9B78256DD55438017BC8C1833CE266A01A5BDCA1B9E966A1AD681838D6CA45F44E08AD46E17D686288D23390B2FFF6378472ABC69E374A8B6ECB2A52EA29263AFEB4E06DEA16052EA24A1400E2DF2276D2E8A45445FDD018FF05A2C8F08BE043D78D9C3FF8D67946FFB6ED6FABF052655B4BF4DBDD6E8C1E3FCFA055088CA6071FC379A1CF225CE66EE3C231FBB0FAEDF30BB250911BC9FE90F7DE212622E1297D593A829F344F788CA5B330F3559D2E33FB2EFAC5B38F4C75E3F0FF8F9AB8251282F4E9ED2B8D5F76F3259AF9F7CA6A537CEB7170E211C3C4C514E> |74 <001C60D8A8C9B78256DD72E59F8D9EE3DA4C3A3D2C848028DFC44C2D7B28374D45276541C9B192FADB296DC40B35992C7F5DCFFD2AD8C20286A661A838F0FF848A5B590ED3544893F482AA00380CFEBB3F71CA4DDE96092132A8333355ADFC12D4AA1A68870C56C09C2DA680A9433A1DA80A9131F388EC47284850BF5BE2E71F4A6AA01921CCB344F4703453FA574C9F5F304B61147AC2FFE6D5A3AE79E389CF45C56EC750C5100A8E919AB8B3DC57C23D01902AFC1FAC089A7D9DD67123B38E49707F6731D8B46DE7BB> |80 <001C60D8A8C9B88C08555B3F0CC9C107C8E85C213909EEB355601DF6E16718C8> |196 <001C60D8A8C9B7B5777C42F2F4DC44F297439B4428EB5026C00DC5F562CA720A4F6C09CACE069E1ED7FB3902F1B352AB42F17A8B0E9FE2E49BC1B70FE916F2E8FB2C543CBAB0197182CA1158B985742F24BF001A3A477301CA0B5B5B8D6890BF268F76FCDB8B2291572B315D3AC80D3E4C3E14D9A9FDA6> |19 <001C60D8A8C9B854D0F46595A5E0C3D902B627E6AF96D66479B44471792E37F06AB2FF13308DA117ED605D838710636AA670EBFF889EB0F1FAE321B10941AB50AC0487> |3 <001C60D8A8C9B854D00D> |57 <001C60D8A8C9B620B7FC729AF8F4061A1A450A8D3AD24E1257006308FC1D758B7163CE246A589C3C1FF42BF41C53E72A1D845E2C5B56C92E17410DDB3044FB434DE2CD131B44CC49542E89790E077569AAE7DFE8E8291AFE90275C34A2942D76E09B43AFCC0B1D219F8A30BA7721EAEC249BB363718B24B1F64BEFB784F0EC2C4BEF6738250802A28FD9247B8540CB43AE353032E39962A446CF2BCB9B8465C455DDDF1AE16191C618FA995497D543D03F085D9079AF4264BD36FF070924F7FC68F721E9BD259D08A0D1E3D48EF33AD4ED9C3BB2C7BA2CD9E84E1F04E58C601E31743C68> |53 <001C60D8A8C9B6079F62EC3E4F2BCB53C58C5901674E014053D1B07FD718460ADB03ADEDF1E7C7BBA86E2EBA052A2038> |40 <001C60D8A8C9B67DB5878EE221F210438E2D1F518277932B525F370D850642FD46B0F79A79CF11337DC6AEE53D885E0E1A7DF59B4B5DCF38DE8A6C> |88 <001C60D8A8C9B7CA642AB5CCFFBCBE446607BF45444797C5129AD75C694597C0629AB24E9D54F936C16BE3D25CEA1B8C96881ECFDC60B54236C9EC2FA30DA2A848A4CBD37893E1F8056DD3D8F4E5A5D50258DF41ED55CD2290EB5E498577916ED80F4FA5E4334DFE9F6809FADC5C0C40C6A401244D172FFF645E3FFF16A6C1094A49855E47215D89E6DAB7E028C2D54AF8A8504CA25B119342F32D2784FBE748D6C27B6E67E514C40AA7A85A78BF03806FF7AB04AC25BDDF3D306CBE87A375806D6F8426A38E33882949826C62F739E0CD33BD83267F7010AD0D5806E2AA4C516920AC29EC9734F41271B2BB8F2B50EC3A49DFA725E1> |15 <001C60D8A8C9B869C16277829E5B6118DC9B787304F68637F6D323CFFF840595CD8A7861B3F30ED557A8744C0F918E8BC5F0D32A14D0F302DDEFEF3365A59F0754CC782C747D41A2DAD508D86390A3D566195A3FE1556399DE> |182 <001C60D8A8C9B7A73DB6329CA0EAE8778F1CE153313A77> |16 <001C60D8A8C9B869C172E7BF8A9B7B4F93653847272011E9410EAEFFFA999449059B2E4446CCB9432A7FE2E7C9EF2C51CE2CC00FFD450746E839019CD1A9072CD77BDA6393F24214C6BEE028178931302C7A47E0F75E64CA> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /STYPMX+HelveticaNeue-Identity-H /Identity-H 0 [/STYPMX+HelveticaNeue] ct_ComposeFont pop end end
%ADOEndSubsetFont
/ZDWBPM+HelveticaNeue /STYPMX+HelveticaNeue-Identity-H findfont ct_VMDictPutZDWBPM+HelveticaNeue [7.4696 0 0 -7.4696 0 0 ]msf88.4912 24.1626 mo(\000:\000[\000Y\000H\000U\000K\000\024\000Z\000W\000L\000J\000P\000\304\000J\000\023\000\003\000W\000H\000P\000Y\000L\000K\000\024\000L\000U\000K\000\003\0009\0005\000\(\000\024\000:\000L\000X\000\003\000\017\000\266\000Y\0009\0005\000\(\000\020)[4.97475 2.45757 2.64416 4.16803 4.28758 4.57892 3.06256 3.8767 4.57139 4.19789 4.13817 1.79274 4.0112 4.06351 2.07655 2.07654 4.55647 4.16061 1.78522 2.59937 4.19788 4.57892 3.14474 4.18295 4.2876 4.42949 2.07655 5.26608 5.5574 4.94489 3.09244 4.98216 4.19789 4.42947 2.07657 2.07654 4.07843 2.61429 5.26608 5.55743 4.98215 0 ]xsh.5 lw
288.896 127.092 mo
288.896 128.536 287.055 129.707 284.788 129.707 cv
224.531 129.707 li
222.26 129.707 220.423 128.536 220.423 127.092 cv
220.423 110.535 li
220.423 109.091 222.26 107.92 224.531 107.92 cv
284.788 107.92 li
287.055 107.92 288.896 109.091 288.896 110.535 cv
288.896 127.092 li
cp
@
ZDWBPJ+HelveticaNeue*1 [7.4696 0 0 -7.4696 0 0 ]msf230.274 116.36 mo(Transcripts on)[3.85435 2.6367 4.16806 4.29501 3.87672 4.15312 2.63672 1.76282 4.50418 2.47995 3.73477 2.07657 4.4295 0 ]xsh223.499 125.324 mo(reference genome)[2.59937 4.10831 2.26332 4.19794 2.59937 4.183 4.28754 4.15312 4.01118 2.07657 4.4295 4.18298 4.28009 4.4295 6.49854 0 ]xsh132.99 116.36 mo(Transcript assembly)[3.85435 2.6367 4.16806 4.29503 3.87671 4.15312 2.63672 1.76282 4.5042 2.35294 2.07655 4.16805 3.91408 3.86925 4.183 6.49106 4.55647 1.78525 0 ]xsh%ADOBeginSubsetFont: STYPMX+HelveticaNeue-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/STYPMX+HelveticaNeue 8 GetGlyphDirectory86 <001C60D8A8C9B7FD849A41D15A513197C7FBD61B6F7FFCAC3AF3E97AC59087245F09701F75E50338558BB40AA9680A2FBD1EAE25AE04491DB1C148A07BBF7B8B2FC83A811B9F5493B2A0F2D79BE2ADCDBA13E2B19DD819B8D5A15937446D8F358692DC5FAB8E88C19B1533D50FF00A7803A38C9128B8EC16408B839CC48067B9ED6B4A3117F3C447EC07CDF75A5742341E297006EE8A172AE85B4C2C86A95A30C1C97E6432A14DD7AB146A08EF57B3F2578CC5ED7C800F9538F93029A11370A11A675530BB39260BAF32B1B7C0D93D402CF73D54D64C2CF3F082E9F79B4662EF26FA2BCB25FE481D961CEE5EA35FDF563D67AB6E8F> |84 <001C60D8A8C9B6889AAB3FDFDCB8C7A7D4A445E72A6050547E3926FD5EF288CA98CBCE73BD6F51BD8BF77C15E93641E82F5FBA14322965E5F6D81A4346526A3A1BECA76E268C8FE3D1A76E8FCF70B9F3D9BBE79361A40E85058ED9D209065D2BA116AF30A8A9294941853304D630ECD80D50338AF92C33CA5A86089BC3A675BE5255469C0261FC17E304AD4871EC7D0C588F6D20F8D311D5E6B56770EA483EDEB3A414A9F873D9B06A4DDE3FA472A91892F8707248B10279ED4753FAFA79F58F24457691EAC3AA3568D8C5440F> |97 <001C60D8A8C9B75BE51993F6729840C86884A1988026656FE531F9C02E0462413DFA37FC0B42577046> |42 <001C60D8A8C9B6079F6D1B1A6F2E268C38C77043D3A63ADE72673FCA38C6D438E312DDEC08954CC05E57F32968FEE1A2577F241D8EFA51F017CB226260C9C2C16C1F23A2277D353C1254870F4E35BDB8453BD7478D0A93C3277435D8ACBE12175360DFF06140A517CB70D2AC45A62775EB3A02A78B48CAFC88244B3C0E956BAACF680327060760F05D2B15A5425468A217A15FF5D7D20007E1D8468B7F87EE386BC2FFAA838D58001C42778BC90D935E8376BEFDFFE44ED2F57D18218C26FF1625C01B5E9CEA8256449BFF5FCCF31EFAA31C9618AF78090F> |92 <001C60D8A8C9B7EF322440D101B9C5BDB658AC9990163C1DE216301D6A78F7E75DE20D48E148DE5D0B10EDCFF1F56F3D9DFED7E3EA1166FDE58BF5A95F3934CB8D172597F9074D97457D8256FE204274315A9853C456013DFC9C30B22C57D3DD5E6E54038141F8007BF38045054A25F79544E8DF7208> |77 <001C60D8A8C9B8425701F9C9038E59CB2C58F503EA569DF0365457A7586EF99D1302CD268628AE6153CD99072FDD60FA02C7AC392298E82EDA8D36342D070A06EC22DC63DCE2FC770E0EC270D7B25F2B1725D04D2FF6D144576F34FC23A1E6> |197 <001C60D8A8C9B7B5777C1538136A6D3F21E92C9E558F458CB187B45F8D81CD9228AC674AD11372C40A1D4712F19172D0A55B02C0FEFD13267286CA79435EE8824216DA41078CA6DA59FDD9088651B8EAB8A5BBF5F2A7EBF5426945F0C46585D05ACEC5E2CB51C05622EC7FCBBCB3> |82 <001C60D8A8C9B7B4A13F02E2DB12F826777B4D78CA06622E575C6B49D9CA66A0552B3EB1DC2B346FE4BD2CBCBEB5A2F41F0F78788CCB4D5E> |!endend end
%ADOEndSubsetFont
ZDWBPM+HelveticaNeue [7.4696 0 0 -7.4696 0 0 ]msf132.758 125.324 mo(\000\017\000V\000W\000[\000P\000T\000P\000a\000L\000K\000\003\000*\000\\\000M\000\305\000P\000U\000R\000Z\000\020)[1.89726 4.41457 4.50414 2.44254 1.77029 6.48358 1.74043 3.62276 4.19789 4.42949 2.07654 5.4977 4.28006 2.52481 3.97394 1.77029 4.25772 3.95135 3.71988 0 ]xsh201.748 129.707 mo
133.276 129.707 li
133.276 107.92 li
201.748 107.92 li
cp
@
ZDWBPJ+HelveticaNeue*1 [7.4696 0 0 -7.4696 0 0 ]msf49.9434 116.36 mo(Gene-model con-)[5.84125 4.18299 4.28008 4.27263 3.07006 6.51347 4.42951 4.55648 4.17552 1.65825 2.07655 4.16058 4.42951 4.30996 0 ]xshZDWBPM+HelveticaNeue [7.4696 0 0 -7.4696 0 0 ]msf47.2469 125.324 mo(\000Z\000[\000Y\000\\\000J\000[\000P\000V\000U\000\003\000\017\000*\000\\\000M\000\305\000P\000U\000R\000Z\000\020)[3.86929 2.45757 2.65168 4.30252 4.16803 2.44252 1.79275 4.4295 4.15309 2.07655 1.97943 5.49768 4.28008 2.52481 3.97393 1.77029 4.25774 3.95135 3.71986 0 ]xsh114.604 129.707 mo
46.133 129.707 li
46.133 107.92 li
114.604 107.92 li
cp
@
1 lw
232.693 169.331 mo
232.693 163.942 li
@
232.693 176.391 mo
236.758 166.442 li
232.693 168.803 li
228.629 166.442 li
cp
f
232.693 198.364 mo
232.693 203.567 li
@
232.693 210.627 mo
228.628 200.678 li
232.693 203.039 li
236.757 200.678 li
cp
f
%ADOBeginSubsetFont: KUDAAA+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPJ+HelveticaNeue gcheck setglobal} if
1 4812 52 <000100500000031702ca000e0057ba0003000000032bb8000310ba000b00
0800032bb8000b10ba000d0000000b11123900b800012fb800052fb80009
2fb800002fb8000b2fba000400010000111239ba000800010000111239ba
000d000100001112393031131133113313331333113311230b01505a02df
51df025a82e2e102cafd360252fdae0252fdae02cafda80258000000>ZDWBPJ+HelveticaNeue AddT42Char 
ZDWBPJ+HelveticaNeue /CharStrings get begin
/M 52 def
end
ZDWBPJ+HelveticaNeue /Encoding get
dup 77 /M put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPJ+HelveticaNeue*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp /zero 2{/.notdef}rp /three /four 2{/.notdef}rp /seven /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /D /E /.notdef /G /H /I /.notdef /K /L /M /N /.notdef /P /.notdef /R /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /.notdef /x /y 86{/.notdef}rp /endash 47{/.notdef}rp]ZDWBPJ+HelveticaNeue nfZDWBPJ+HelveticaNeue*1 [7.4696 0 0 -7.4696 0 0 ]msf191.243 185.018 mo(Manual correction using)[6.62555 4.16806 4.26514 4.28755 4.16058 1.65825 2.07655 4.16058 4.43698 2.6666 2.59937 4.19794 4.16805 2.44258 1.79271 4.4295 4.15311 2.07654 4.30997 3.87671 1.77029 4.28757 0 ]xsh%ADOBeginSubsetFont: STYPMX+HelveticaNeue-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/STYPMX+HelveticaNeue 7 GetGlyphDirectory46 <001C60D8A8C9B6EA91CEB3DB95EA5D5E29A7E46864E73EB0BF6052ECB0F4FA7072322883082FF9A6A400E50B4D783F8491B5483C7E9F0BF4A67C05FCC08633D4FB861E5274F0E51B6038B0ED6A15E1B480E8934B2549FD42BB6E4C4EA2A5027BD1C4145162CA05DE9936F8AD05C92137D7018649E89055CAA2625CB7AA801F7F7A55634C0ABC3868D11C9CEF89FDB05B36E470EE9A4462EE88381845B0F7938610FA6FB102117270EB7D4611F6D05BC639FC913D5A9F48795C258EAA806345F18B3C5FE03339C22D54FC9395C31EB287508DC03CF63996DF70CBA98B4FB5035A0D25A8714FE847AD2BD4CB1BDF665FFF21C126> |44 <001C60D8A8C9B7D8BE19401576C041829B3182B201E3129D84E84FE2740E455CA494673BAA7478D80C06774C5721> |55 <001C60D8A8C9B67DB58874415D94C2E559C88E36CC055437F3DF216575C839AACCA6EDB9DE2233509536944435A6A5FF417152CE02855876750F1D682335EEC3E41C9ED4B523CEEEE05D751D6FA45C4F6D05E3066B38F21D39CF4DAF8C04DD> |47 <001C60D8A8C9B6079F62EB0118C852A105FA7C8BF6E6C135E413B5042633AD275F8C347ACCC5B2EDBBBE16A4E3BB> |26 <001C60D8A8C9B7EF322B629212E8536110672CEC14EEB199309F7B7BFA0C6A6DDE101BF8260134E941B67EF78ADC108967804F6213F136F0AA242078BBC0A7055E4FA9DAF21A78502231EEDC6D260D7F76D192848D648106BFD93A25CCD1B490243D30A55E6F8022B426BC5F787416021B9B23D42F8B1234AF610EFA9E5D588C544F761CE1388EEBEDD4E16729942437DFD7C64E26E126C6C822CCD816AE90AC85761682B6C330F5C8B9663368DA29F7D50ECF3101517A14715F81480732520EA8E75B807D932F93DE518ED88ABE2BF4714F6D882A449BC861BEBCA0E80C1D163E03EBF1E6D3CE357E36884F029DAD7DD1D2BF312C53B75A9C6A4E84CAE54487998481353957A7A420012DD4A940004ABF32F09FF01A66BA817CD37735DE7DB373161B403DEDBE501B3D039951B267CB189C5BCF9C72C04A087CF650FC1DD2EF0A7489A856F57F> |50 <001C60D8A8C9B64EDFF494B58082D1A152C50621791367B57F19AD23876E72E9C1DB56F3A3331D2837F21D4539CA481A82E0C582E500DA30094C> |27 <001C60D8A8C9B7EF322BF27F2376A07C26973BE5C812F66C0E347BFAFA893C4FD80B988950A03B90D24644DAD9C95D092CBCA9D70E63506E64> |!endend end
%ADOEndSubsetFont
ZDWBPM+HelveticaNeue [7.4696 0 0 -7.4696 0 0 ]msf194.066 193.981 mo(\000*\000\(\000.\000,\000\023\000\003\0007\000\(\000:\000\023\000\003\000/\000\032\0002\000\033\000T\000L\000\032)[5.40799 4.79547 5.81134 4.6759 2.07655 2.07655 4.55646 4.92986 4.94489 2.07655 2.07655 5.54247 4.27266 4.91504 4.23526 6.4985 4.19791 0 ]xsh.5 lw
279.379 198.364 mo
186.008 198.364 li
186.008 176.578 li
279.379 176.578 li
cp
@
ZDWBPJ+HelveticaNeue*1 [7.4696 0 0 -7.4696 0 0 ]msf204.492 152.525 mo(piRNA threshold)[4.55647 1.77029 5.26605 5.54991 4.84027 2.07654 2.45006 4.28754 2.59937 4.19794 3.8842 4.28008 4.4071 1.80017 0 ]xsh%ADOBeginSubsetFont: STYPMX+HelveticaNeue-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/STYPMX+HelveticaNeue 3 GetGlyphDirectory37 <001C60D8A8C9B7C3C9ED426FAF3E55A6522CEF30570F12A2E37683AB4AF89415CE8D9802A9> |24 <001C60D8A8C9B7EF322BB630272B923963DE8E37724AA571296AF60D1BBC27C2CB1B875AEF91C6D90A9F430B230D6F17F95C57BD52BEC7> |23 <001C60D8A8C9B7EF322B0E5901EEB0EA28BD555C60936A04127263F1750F0342C89C46CD5E95FCF34E210D83CD2843C289BBBCB8DBAAE0585054C9541C04A7DBCEC696C49AA818D4B0648B21890E7967B89327EFBDBEC66901C212603BFAE01539FBC5C456E26D40A4605FE9C51C704ACA3176789BA3047E2DE5C9CC6BEA046B24259340C3DE5B272743499F76B16BCE97A132C3B6E9A4910AA84C8B270CE0340CA6CDE306B8C4E12293A3F40E888B4C51E856250312CBC2E060D107A18E56F9A874E6016190D30F933CB511A6E8B91D5CDE33D0294A9704CA8985783B35F758412CFED2029DE10F6D00FAE7EC4277B371E9E023B10B3A28559F21905A272D85F7F7A9FA431345B06B0F54FAECC8343DBA1B9379D960DB2A715A2708A56B23B45FCDC31B60C05324B72C98E953C0D6A0070AFDD8D2BD988A7073D64A308DE515A1DE6E537C2D2FD0EA> |!endend end
%ADOEndSubsetFont
ZDWBPM+HelveticaNeue [7.4696 0 0 -7.4696 0 0 ]msf190.27 161.489 mo(\000\017\000%\000\030\000\027\000\027\000\003\000W\000W\000T\000\003\000V\000Y\000\003\000%\000\030\000\027\000\027\000\003\000Y\000W\000R\000T\000\020)[1.91971 3.87682 3.91409 4.39211 4.15309 2.07655 4.55646 4.5714 6.37154 2.07655 4.43701 2.48732 2.07655 3.87682 3.91409 4.39209 4.15311 2.07654 2.64417 4.54904 4.04846 6.34171 0 ]xsh1 lw
80.3677 129.707 mo
80.3677 139.044 li
101.899 139.044 li
101.899 144.433 li
@
101.898 151.493 mo
97.8334 141.544 li
101.898 143.905 li
105.962 141.544 li
cp
f
254.658 129.707 mo
254.658 135.932 li
232.693 135.932 li
232.693 138.207 li
@
232.693 145.268 mo
228.628 135.319 li
232.693 137.68 li
236.757 135.319 li
cp
f
167.667 129.707 mo
167.667 152.738 li
181.438 152.738 li
@
188.499 152.738 mo
178.549 156.803 li
180.91 152.738 li
178.549 148.674 li
cp
f
101.898 139.044 mo
167.667 139.044 li
@
ZDWBPJ+HelveticaNeue*1 [7.4696 0 0 -7.4696 0 0 ]msf65.4785 159.933 mo(Transcript annotation)[3.85435 2.63671 4.16805 4.29502 3.87672 4.15311 2.63671 1.76283 4.50419 2.35294 2.07655 4.16805 4.27261 4.27261 4.35481 2.50233 4.11578 2.44257 1.7927 4.4295 0 ]xsh76.6978 168.897 mo(\(CuffCompare\))[1.97946 5.49763 4.28008 2.5173 2.39778 5.5275 4.42204 6.49106 4.55647 4.183 2.59937 4.01866 0 ]xsh.5 lw
140.802 173.279 mo
62.994 173.279 li
62.994 151.493 li
140.802 151.493 li
cp
@
1 lw
101.898 178.668 mo
101.898 173.279 li
@
101.898 185.728 mo
105.963 175.78 li
101.898 178.141 li
97.8344 175.78 li
cp
f
%ADOBeginSubsetFont: STYPMX+HelveticaNeue-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/STYPMX+HelveticaNeue 3 GetGlyphDirectory25 <001C60D8A8C9B7EF321E6251AE8BC8F7521161180477CC360C8E2EEA5C91504927A00A732F0EAC953FEA3EA3ED3BDF832B6391F3C2E72548CA0724DBEA19136A3F5D0BA9E85F5F112DAB079BD5092308627D6D4B500D272219F0E3621F05D7B20124AEFCDA1B09CD7D62AD86ACBFE8F8838343C0645C758B18091692DC002AD9765C014AFD92799E6E21D8FB2DA52549F1697098FBC1E76E7DAD0D79A3583106777139B9EE66B022F481FD5064A8FB00410F5D68E0EB8BCE6D5520753E4944DD1ED883FFE7ABDEC41248AF050234DB34390650F601B95A82BA802A57DE42B569F0F2BCE107CDCC82AF1B9F0925B8BF21063EACB2CCA37F1990> |28 <001C60D8A8C9B7EF322B59D19B4632AB48DB1C4707EADC67F17415CDC040BABA3289802C8D3E813529ACBCD8F0CD66C4E01C000A08B2E8272D33D0555E1D45EE34A87E7483A564E1C17F67742C76B8ED6190E8DC2D82D7E4F8D61A9302E6780E60F75701D6759EDEA0A6116AE6CB17065EDE6C6AF25507B5EBCAC033ED27F676CCEDDD6A6FADA265C6FBA37EE2CDC7F091F3B928D38CEA7E634AD8754B7546F0E1BA5780C32579BEA6432651310E84FE441D9BBAED52573E9999917FA6AD4A678A05F752701096E8AC2DAFD1490AA8F10ED15F21D2B3AD13047C0C8DB18D73ED7E27CCDEFA293DA378> |78 <001C60D8A8C9B7FD84950EF8BFBDCDE7CBD4F87E3C30345FE5BE39EB528D4316C6168698F38A0490D24000538A6A6E021802168DE74172C000571E5ABA506BD1736523D6C8158464C76F177854D828AD9E7DFC10FA568A7DC39E1F2DD93F52ACFBA111CE4DF746FE47F28A42FBF5AF88CA5AE78F8399225C9769A032F2842F653F372DAD8CA2E74794FF93F1822152CE160530BBCC9345318BFEA3A088341B284DCFD987279D7E9B9C7486BDE2F037BD268BFE3768E5BB08F848F5DBDDE288E6B4A57054124B4F86CC4CCDE4451A5C86E4077AA5968C73216E3A588AE416E0709AF36D4E19CE459B51414B15FF8D053B35761D2CC110387D3E2906A961B3B069AC96DB8CAB62B7778F7BD53CCF3A3D2851D533887D1E2FAFD606AEC300EA40C1770F6EA99E8D9BB94576BA39FB0C5FF925CAC815600E001556CA8073ECDFECF74135290D16594F8A0C215A> |!endend end
%ADOEndSubsetFont
ZDWBPM+HelveticaNeue [7.4696 0 0 -7.4696 0 0 ]msf79.3335 193.732 mo(\000\031\000\032\000\023\000\030\000\032\000\034\000\003\000N\000L\000U\000L\000Z)[4.19048 4.22775 1.50143 3.87669 4.28007 4.1531 2.07655 4.4295 4.18295 4.28007 4.19788 0 ]xsh%ADOBeginSubsetFont: KUDAAA+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPJ+HelveticaNeue gcheck setglobal} if
1 780 24 <000100570000016402c5000a0023ba0001000900032bb800011000b80001
2fb800002fba0007000800032bb800071030312111230e03231533110164
410726374424b802c528341e0b44fe04>ZDWBPJ+HelveticaNeue AddT42Char 
1 856 25 <00010018000001ee02c5002b0091b8002d2fba0001000000032bb8000110
b8002d10b80022dcb8000bdc410500da000b00ea000b00025d411b000900
0b0019000b0029000b0039000b0049000b0059000b0069000b0079000b00
89000b0099000b00a9000b00b9000b00c9000b000d5db8002210b80016d0
b800162fb8000110b80018d0b800182f00ba0018001500032bba00270006
00032bb800271030311333263e0233321e0215140e02070e03072135213e
03373e0335342e0223220e022c55010f2235251c322516172d442d254436
230501cffe940627374221213e301d233c512e38583b1c01ca203f321f12
222f1d2538302f1c163242593f4b21332c2714152e39482f324c331b2643
5c00>ZDWBPJ+HelveticaNeue AddT42Char 
1 1728 29 <00020026fff5020702c50023003700e3ba001c000900032bb8001c10ba00
13002900032bb8001310411b0006001c0016001c0026001c0036001c0046
001c0056001c0066001c0076001c0086001c0096001c00a6001c00b6001c
00c6001c000d5d410500d5001c00e5001c00025d410500da002900ea0029
00025d411b00090029001900290029002900390029004900290059002900
69002900790029008900290099002900a9002900b9002900c90029000d5d
b8000910b80033dcb8001310b80039dc00ba002e000e00032bb8002e10ba
0004002100032bb8000410ba0018002400032bb8001810b8000410b80000
dc303101332e0123220e0215141e0233323e0235342e0223220607273e03
33321607321e0215140e0223222e0235343e02019e550868584c643c1911
34604f435b37181e3751333a591e02010e254236333e7a24362411132435
23233725141326360210585d406a8949387864402d45542731543e232c31
02295e51353ac31a2b3b211f392c19192a3a21213b2b1900>ZDWBPJ+HelveticaNeue AddT42Char 
ZDWBPJ+HelveticaNeue /CharStrings get begin
/one 24 def
/two 25 def
/six 29 def
end
ZDWBPJ+HelveticaNeue /Encoding get
dup 49 /one put
dup 50 /two put
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPJ+HelveticaNeue*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three /four /.notdef /six /seven /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /D /E /.notdef /G /H /I /.notdef /K /L /M /N /.notdef /P /.notdef /R /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /.notdef /x /y 86{/.notdef}rp /endash 47{/.notdef}rp]ZDWBPJ+HelveticaNeue nfZDWBPJ+HelveticaNeue*1 [7.4696 0 0 -7.4696 0 0 ]msf68.2486 202.695 mo(\(mRNA and ncRNA\))[1.93465 6.49106 5.26605 5.54991 4.84026 2.07655 4.16805 4.28754 4.42949 2.07655 4.28755 4.13818 5.26605 5.55738 4.98219 0 ]xsh203.224 219.166 mo(214 piRNA genes)[4.04105 3.76468 4.15311 2.07654 4.55647 1.77029 5.26605 5.54991 4.84027 2.07654 4.42952 4.183 4.28008 4.19795 0 ]xsh175.4 228.129 mo(\(467 piRNA precursor transcripts\))[1.84502 4.2726 4.13069 4.15309 2.07655 4.55647 1.77029 5.26605 5.55739 4.84026 2.07655 4.57889 2.59935 4.19794 4.13071 4.29501 2.71889 3.87672 4.43698 2.48732 2.07654 2.45752 2.63672 4.16806 4.29501 3.87674 4.15311 2.63672 1.76282 4.50418 2.47992 3.71988 0 ]xsh.5 lw
[1.5 1 ] 0 dsh
187.1 376.303 mo
187.1 345.18 li
0 0 0 .5 cmyk
@
201.868 376.303 mo
201.868 345.18 li
@
180.256 375.149 mo
180.256 370.123 li
180.616 369.539 li
180.978 369.554 li
181.337 368.46 li
181.697 368.119 li
182.057 367.138 li
182.417 367.647 li
182.777 369.554 li
183.137 368.46 li
183.499 368.378 li
183.858 370.584 li
184.218 368.805 li
184.578 369.205 li
184.938 367.711 li
185.298 367.161 li
185.659 367.063 li
186.02 369.059 li
186.38 369.128 li
186.739 371.444 li
187.099 371.655 li
187.46 371.55 li
187.819 370.795 li
188.179 370.394 li
188.541 367.876 li
188.902 370.439 li
189.261 368.782 li
189.62 369.915 li
189.98 369.917 li
190.34 369.789 li
190.701 368.589 li
191.063 368.995 li
191.423 370.286 li
191.782 368.712 li
192.142 366.64 li
192.502 366.23 li
192.862 366.602 li
193.222 369.246 li
193.584 368.862 li
193.944 369.254 li
194.304 370.69 li
194.304 375.149 li
cp
0 0 0 1 cmyk
f
195.024 375.149 mo
195.024 366.08 li
195.383 363.819 li
195.744 365.151 li
196.106 367.163 li
196.465 367.732 li
196.826 368.172 li
197.185 365.891 li
197.545 366.185 li
197.905 366.997 li
198.265 366.848 li
198.627 364.332 li
198.987 367.687 li
199.347 368.021 li
199.706 366.573 li
200.067 368.013 li
200.426 367.687 li
200.787 366.573 li
201.148 368.597 li
201.507 370.555 li
201.868 369.825 li
202.228 368.977 li
202.588 368.955 li
202.947 364.371 li
203.307 367.876 li
203.669 369.732 li
204.029 366.147 li
204.389 364.562 li
204.749 365.92 li
205.109 368.067 li
205.468 366.893 li
205.829 368.909 li
206.191 368.479 li
206.55 365.83 li
206.91 368.098 li
207.271 365.422 li
207.63 367.211 li
207.99 366.996 li
208.35 368.559 li
208.712 365.385 li
209.072 365.225 li
209.072 375.149 li
cp
f
ZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf177.517 386.255 mo(+)sh179.567 386.255 mo(1)sh181.248 386.255 mo(k)sh[] 0 dsh
201.868 378.649 mo
201.868 376.302 li
@
187.1 378.649 mo
187.1 376.302 li
@
ZDWBPJ+HelveticaNeue*1 [3.7348 0 0 -3.7348 0 0 ]msf182.6 381.762 mo(S)sh185.199 381.762 mo(t)sh186.57 381.762 mo(a)sh188.792 381.762 mo(r)sh190.431 381.762 mo(t)sh198.431 381.762 mo(E)sh200.848 381.762 mo(n)sh203.107 381.762 mo(d)shZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf206.36 386.255 mo(\261)sh208.168 386.255 mo(1)sh209.845 386.255 mo(k)sh194.334 386.195 mo(+)sh196.385 386.195 mo(1)sh198.065 386.195 mo(k)sh188.702 386.195 mo(\261)sh190.51 386.195 mo(1)sh192.187 386.195 mo(k)sh194.327 375.369 mo
194.327 376.309 li
191.842 381.941 li
191.842 382.882 li
@
195.023 375.369 mo
195.023 376.309 li
197.508 381.941 li
197.508 382.882 li
@
180.256 382.882 mo
180.256 375.369 li
@
209.072 382.882 mo
209.072 375.369 li
@
179.102 376.303 mo
210.226 376.303 li
210.226 345.18 li
179.102 345.18 li
cp
@
[1.5 1 ] 0 dsh
187.1 342.068 mo
187.1 310.943 li
0 0 0 .5 cmyk
@
201.868 342.068 mo
201.868 310.943 li
@
180.256 340.914 mo
180.256 340.397 li
180.616 340.372 li
180.978 340.412 li
181.337 340.356 li
181.697 339.979 li
182.057 340.16 li
182.417 339.955 li
182.777 339.855 li
183.137 339.652 li
183.499 339.71 li
183.858 339.367 li
184.218 339.068 li
184.578 338.731 li
184.938 337.014 li
185.298 335.946 li
185.659 335.614 li
186.02 335.716 li
186.38 334.737 li
186.739 333.019 li
187.099 328.93 li
187.46 323.751 li
187.819 326.508 li
188.179 331.451 li
188.541 334.213 li
188.902 336.019 li
189.261 337.139 li
189.62 337.059 li
189.98 337.685 li
190.34 338.484 li
190.701 338.498 li
191.063 338.975 li
191.423 338.589 li
191.782 338.863 li
192.142 339.84 li
192.502 339.779 li
192.862 339.613 li
193.222 339.754 li
193.584 339.832 li
193.944 339.811 li
194.304 340.219 li
194.304 340.914 li
cp
0 0 0 1 cmyk
f
195.024 340.914 mo
195.024 340.177 li
195.383 340.433 li
195.744 340.418 li
196.106 340.325 li
196.465 339.993 li
196.826 340.311 li
197.185 340.281 li
197.545 340.355 li
197.905 340.184 li
198.265 339.935 li
198.627 339.806 li
198.987 339.69 li
199.347 340.254 li
199.706 340.26 li
200.067 340.057 li
200.426 340.435 li
200.787 340.278 li
201.148 340.555 li
201.507 340.607 li
201.868 340.589 li
202.228 340.533 li
202.588 340.395 li
202.947 340.272 li
203.307 340.078 li
203.669 340.073 li
204.029 340.093 li
204.389 339.843 li
204.749 339.937 li
205.109 340.078 li
205.468 339.844 li
205.829 339.883 li
206.191 339.89 li
206.55 339.938 li
206.91 339.923 li
207.271 339.752 li
207.63 339.675 li
207.99 339.559 li
208.35 340.01 li
208.712 340.195 li
209.072 340.378 li
209.072 340.914 li
cp
f
[] 0 dsh
179.102 342.068 mo
210.226 342.068 li
210.226 310.945 li
179.102 310.945 li
cp
@
[1.5 1 ] 0 dsh
230.672 376.303 mo
230.672 345.18 li
0 0 0 .5 cmyk
@
245.44 376.303 mo
245.44 345.18 li
@
223.83 375.149 mo
223.83 370.334 li
224.189 372.535 li
224.549 368.213 li
224.91 368.378 li
225.269 369.653 li
225.63 371.444 li
225.989 368.666 li
226.351 367.247 li
226.711 369.139 li
227.071 368.419 li
227.431 371.63 li
227.791 366.092 li
228.151 369.488 li
228.511 368.851 li
228.873 369.344 li
229.232 370.231 li
229.592 367.863 li
229.953 367.061 li
230.312 363.747 li
230.672 369.694 li
231.032 366.977 li
231.394 368.107 li
231.754 366.669 li
232.114 370.436 li
232.474 366.752 li
232.834 370.211 li
233.194 371.198 li
233.554 369.015 li
233.915 369.22 li
234.275 365.083 li
234.635 371.814 li
234.995 370.62 li
235.355 367.535 li
235.715 368.646 li
236.075 370.517 li
236.436 369.303 li
236.796 369.569 li
237.157 368.708 li
237.516 371.383 li
237.877 370.25 li
237.877 375.149 li
cp
0 0 0 1 cmyk
f
238.596 375.149 mo
238.596 367.535 li
238.957 367.844 li
239.318 367.391 li
239.677 364.384 li
240.038 367.535 li
240.398 363.931 li
240.758 365.701 li
241.117 367.698 li
241.479 370.785 li
241.839 365.517 li
242.199 366.442 li
242.559 367.575 li
242.918 370.91 li
243.279 367.348 li
243.639 368.646 li
244 366.092 li
244.361 369.366 li
244.72 366.257 li
245.079 368.107 li
245.44 367.491 li
245.8 368.955 li
246.16 373.771 li
246.522 371.075 li
246.882 368.767 li
247.242 365.97 li
247.601 366.463 li
247.961 367.512 li
248.321 366.566 li
248.681 365.927 li
249.043 368.088 li
249.403 363.747 li
249.763 368.687 li
250.123 368.911 li
250.483 368.357 li
250.842 368.811 li
251.202 368.563 li
251.565 363.045 li
251.924 366.318 li
252.284 366.114 li
252.644 367.595 li
252.644 375.149 li
cp
f
[] 0 dsh
245.44 378.641 mo
245.44 376.293 li
@
230.672 378.641 mo
230.672 376.293 li
@
ZDWBPJ+HelveticaNeue*1 [3.7348 0 0 -3.7348 0 0 ]msf226.167 381.99 mo(S)sh228.767 381.99 mo(t)sh230.138 381.99 mo(a)sh232.36 381.99 mo(r)sh233.999 381.99 mo(t)sh241.999 381.99 mo(E)sh244.416 381.99 mo(n)sh246.675 381.99 mo(d)sh222.675 376.303 mo
253.798 376.303 li
253.798 345.18 li
222.675 345.18 li
cp
@
[1.5 1 ] 0 dsh
264.909 376.303 mo
264.909 345.18 li
0 0 0 .5 cmyk
@
279.677 376.303 mo
279.677 345.18 li
@
258.065 375.149 mo
258.065 367.675 li
258.425 367.846 li
258.786 365.212 li
259.146 368.413 li
259.504 368.067 li
259.866 368.98 li
260.228 367.931 li
260.586 367.471 li
260.947 369.059 li
261.307 369.636 li
261.668 369.503 li
262.027 368.818 li
262.386 367.524 li
262.749 369.037 li
263.108 366.503 li
263.469 367.858 li
263.828 368.759 li
264.188 367 li
264.548 370.586 li
264.909 368.775 li
265.27 368.365 li
265.63 366.759 li
265.99 367.108 li
266.351 369.069 li
266.709 368.28 li
267.069 369.239 li
267.429 368.839 li
267.792 367.825 li
268.152 366.615 li
268.511 368.949 li
268.872 369.564 li
269.231 367.798 li
269.591 367.172 li
269.951 368.039 li
270.313 368.971 li
270.671 370.495 li
271.033 369.736 li
271.393 368.943 li
271.753 368.995 li
272.113 369.498 li
272.113 375.149 li
cp
0 0 0 1 cmyk
f
272.833 375.149 mo
272.833 368.359 li
273.193 369.606 li
273.554 369.44 li
273.912 365.244 li
274.274 368.682 li
274.634 366.179 li
274.993 365.252 li
275.355 365.89 li
275.715 367.938 li
276.076 367.936 li
276.435 367.138 li
276.794 367.098 li
277.154 366.152 li
277.514 364.209 li
277.876 366.433 li
278.236 366.539 li
278.595 367.598 li
278.956 367.493 li
279.316 365.405 li
279.676 367.921 li
280.037 369.952 li
280.399 369.18 li
280.759 366.085 li
281.117 365.959 li
281.478 366.623 li
281.837 367.748 li
282.198 368.967 li
282.558 370.475 li
282.92 370.085 li
283.281 369.267 li
283.639 368.104 li
284 368.376 li
284.359 366.569 li
284.72 366.729 li
285.08 367.841 li
285.441 368.098 li
285.8 368.561 li
286.161 366.539 li
286.521 368.68 li
286.879 370.841 li
286.879 375.149 li
cp
f
[] 0 dsh
288.034 375.149 mo
287.099 375.149 li
@
288.034 360.742 mo
287.099 360.742 li
@
288.034 346.332 mo
287.099 346.332 li
@
ZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf288.733 376.306 mo(0)sh288.733 361.658 mo(0)sh290.59 361.658 mo(.)sh291.609 361.658 mo(5)sh288.733 347.488 mo(1)sh290.265 347.488 mo(.)sh291.221 347.488 mo(0)sh279.677 378.617 mo
279.677 376.27 li
@
264.909 378.617 mo
264.909 376.27 li
@
ZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf288.733 376.227 mo(0)shZDWBPJ+HelveticaNeue*1 [3.7348 0 0 -3.7348 0 0 ]msf260.405 381.971 mo(S)sh263.004 381.971 mo(t)sh264.375 381.971 mo(a)sh266.597 381.971 mo(r)sh268.237 381.971 mo(t)sh276.237 381.971 mo(E)sh278.653 381.971 mo(n)sh280.913 381.971 mo(d)sh256.911 376.303 mo
288.035 376.303 li
288.035 345.18 li
256.911 345.18 li
cp
@
[1.5 1 ] 0 dsh
230.672 342.069 mo
230.672 310.945 li
0 0 0 .5 cmyk
@
245.44 342.069 mo
245.44 310.945 li
@
223.83 340.915 mo
223.83 337.581 li
224.189 336.641 li
224.549 337.175 li
224.91 338.324 li
225.269 339.305 li
225.63 338.978 li
225.989 339.195 li
226.351 338.639 li
226.711 338.043 li
227.071 336.897 li
227.431 337.792 li
227.791 337.808 li
228.151 336.152 li
228.511 333.905 li
228.873 333.994 li
229.232 331.467 li
229.592 325.832 li
229.953 322.316 li
230.312 319.64 li
230.672 322.774 li
231.032 323.013 li
231.394 330.132 li
231.754 333.685 li
232.114 334.085 li
232.474 336.091 li
232.834 336.738 li
233.194 337.71 li
233.554 336.941 li
233.915 337.594 li
234.275 337.886 li
234.635 338.626 li
234.995 339.298 li
235.355 339.423 li
235.715 338.702 li
236.075 337.684 li
236.436 336.977 li
236.796 337.61 li
237.157 337.572 li
237.516 337.598 li
237.877 337.548 li
237.877 340.915 li
cp
0 0 0 1 cmyk
f
238.596 340.915 mo
238.596 337.444 li
238.957 337.633 li
239.318 338.726 li
239.677 337.686 li
240.038 337.344 li
240.398 337.802 li
240.758 337.296 li
241.117 338.438 li
241.479 338.383 li
241.839 338.832 li
242.199 337.705 li
242.559 337.751 li
242.918 337.589 li
243.279 336.561 li
243.639 336.656 li
244 337.484 li
244.361 338.103 li
244.72 338.191 li
245.079 338.745 li
245.44 339.62 li
245.8 340.197 li
246.16 339.597 li
246.522 338.572 li
246.882 338.34 li
247.242 337.135 li
247.601 337.138 li
247.961 337.605 li
248.321 337.973 li
248.681 338.375 li
249.043 338.281 li
249.403 338.63 li
249.763 338.684 li
250.123 337.832 li
250.483 337.508 li
250.842 338.082 li
251.202 337.597 li
251.565 338.175 li
251.924 337.173 li
252.284 337.733 li
252.644 337.264 li
252.644 340.915 li
cp
f
264.909 342.069 mo
264.909 310.945 li
0 0 0 .5 cmyk
@
279.677 342.069 mo
279.677 310.945 li
@
258.065 340.915 mo
258.065 339.973 li
258.425 340.063 li
258.786 339.952 li
259.146 339.61 li
259.504 339.839 li
259.866 339.558 li
260.228 339.318 li
260.586 339.717 li
260.947 339.51 li
261.307 339.25 li
261.668 339.21 li
262.027 338.879 li
262.386 338.115 li
262.749 336.925 li
263.108 336.25 li
263.469 334.298 li
263.828 329.306 li
264.188 323.784 li
264.548 320.787 li
264.909 316.585 li
265.27 312.098 li
265.63 321.903 li
265.99 329.186 li
266.351 333.03 li
266.709 334.711 li
267.069 336.118 li
267.429 336.139 li
267.792 336.692 li
268.152 337.33 li
268.511 337.363 li
268.872 337.868 li
269.231 337.964 li
269.591 338.568 li
269.951 338.77 li
270.313 338.34 li
270.671 339.387 li
271.033 339.03 li
271.393 339.017 li
271.753 338.633 li
272.113 338.766 li
272.113 340.915 li
cp
0 0 0 1 cmyk
f
272.833 340.915 mo
272.833 338.571 li
273.193 338.274 li
273.554 338.387 li
273.912 338.576 li
274.274 338.494 li
274.634 338.239 li
274.993 338.024 li
275.355 338.746 li
275.715 338.502 li
276.076 338.415 li
276.435 337.854 li
276.794 338.024 li
277.154 338.633 li
277.514 338.012 li
277.876 338.177 li
278.236 339.061 li
278.595 338.913 li
278.956 338.885 li
279.316 339.439 li
279.676 339.782 li
280.037 339.905 li
280.399 339.67 li
280.759 339.176 li
281.117 338.996 li
281.478 339.097 li
281.837 338.369 li
282.198 338.193 li
282.558 338.847 li
282.92 338.903 li
283.281 339.054 li
283.639 338.477 li
284 338.548 li
284.359 338.238 li
284.72 338.317 li
285.08 338.165 li
285.441 337.847 li
285.8 337.548 li
286.161 337.61 li
286.521 338.212 li
286.879 338.887 li
286.879 340.915 li
cp
f
[] 0 dsh
288.034 340.915 mo
287.099 340.915 li
@
288.034 336.689 mo
287.099 336.689 li
@
288.034 332.466 mo
287.099 332.466 li
@
288.034 328.241 mo
287.099 328.241 li
@
288.034 324.016 mo
287.099 324.016 li
@
288.034 319.79 mo
287.099 319.79 li
@
288.034 315.567 mo
287.099 315.567 li
@
%ADOBeginSubsetFont: JQBAAA+HelveticaNeueLTStd-LtCn AddGlyphs
%ADOt1write: (1.0.24)systemdict beginZDWBPL+HelveticaNeueLTStd-LtCn dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B75BE591895EE0E71F895C16B54B3DA24D39B15A48BAFD8C3BEF9C0AE5051C1E48640C2060FB3366BCFB51E0DF516174138966FB9E34D446B17D1D8172D74ACAB3157869D9AC2106C6E66833FA15EF002289AEB5A5014D589F4D3771F4DD2E92A6CEF3178D554B4F860C455D5DB95F45CC51E72D4831A8A8103D2855825D1523C5EBB35AAC6AC9A44E9F29F8768333A562373486FE5BC070478FEA2618CEF06BA58E668B3B48C348847291E8DCB7233DAB722373EA7B61595231573E7D8BB7CEDE2EB12EEF6D> |-systemdict /gcheck known {setglobal} if end {end} ifendZDWBPL+HelveticaNeueLTStd-LtCn /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/ZDWBPL+HelveticaNeueLTStd-LtCn*1 [37{/.notdef}rp /percent 5{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six 52{/.notdef}rp /k 69{/.notdef}rp /endash 78{/.notdef}rp]ZDWBPL+HelveticaNeueLTStd-LtCn nfZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf288.733 342.004 mo(0)sh288.733 329.328 mo(3)sh290.78 329.328 mo(0)sh288.733 316.653 mo(6)sh290.795 316.653 mo(0)sh222.675 342.069 mo
253.798 342.069 li
253.798 310.945 li
222.675 310.945 li
cp
@
256.911 342.069 mo
288.035 342.069 li
288.035 310.945 li
256.911 310.945 li
cp
@
ZDWBPL+HelveticaNeueLTStd-LtCn*1 [3.7348 0 0 -3.7348 0 0 ]msf288.733 307.852 mo(0)sh288.733 294.791 mo(1)sh290.38 294.791 mo(0)sh292.468 294.791 mo(0)sh288.733 281.73 mo(2)sh290.743 281.73 mo(0)sh292.83 281.73 mo(0)sh86.5908 19.7388 mo
86.5908 19.7048 86.5898 19.6768 86.5898 19.6438 cv
86.5898 17.9248 87.9838 16.5298 89.7028 16.5298 cv
89.7358 16.5298 89.7628 16.5308 89.7948 16.5318 cv
89.8268 16.5318 245.205 16.5318 245.235 16.5308 cv
245.265 16.5308 245.29 16.5298 245.32 16.5298 cv
247.04 16.5298 248.434 17.9248 248.434 19.6438 cv
248.434 19.6768 248.434 19.7048 248.433 19.7388 cv
248.431 19.7718 248.431 25.7418 248.433 25.7748 cv
248.433 25.8078 248.434 25.8348 248.434 25.8688 cv
248.434 27.5888 247.04 28.9828 245.32 28.9828 cv
245.289 28.9828 245.262 28.9818 245.232 28.9808 cv
245.2 28.9798 89.8268 28.9808 89.7948 28.9808 cv
89.7628 28.9828 89.7358 28.9828 89.7038 28.9828 cv
87.9838 28.9828 86.5898 27.5888 86.5898 25.8688 cv
86.5898 25.8358 86.5908 25.8078 86.5908 25.7758 cv
86.5918 25.7418 86.5918 19.7718 86.5908 19.7388 cv
cp
@
2 lc
179.102 307.833 mo
210.226 307.833 li
210.226 276.71 li
179.102 276.71 li
cp
@
0 lc
[1.5 1 ] 0 dsh
187.1 307.675 mo
187.1 276.71 li
0 0 0 .5 cmyk
@
201.868 307.675 mo
201.868 276.71 li
@
180.254 306.681 mo
180.254 305.187 li
180.615 305.067 li
180.977 304.924 li
181.336 304.682 li
181.696 304.534 li
182.056 304.351 li
182.416 304.083 li
182.777 303.695 li
183.136 303.157 li
183.498 302.877 li
183.858 302.294 li
184.218 302.168 li
184.578 301.851 li
184.938 300.787 li
185.298 299.924 li
185.658 299.524 li
186.02 299.396 li
186.379 299.878 li
186.739 300.666 li
187.1 299.24 li
187.46 294.34 li
187.82 289.023 li
188.179 286.681 li
188.541 287.358 li
188.901 292.088 li
189.261 293.585 li
189.621 293.832 li
189.981 295.098 li
190.341 296.62 li
190.701 298.054 li
191.063 298.99 li
191.422 299.748 li
191.783 300.611 li
192.143 301.657 li
192.503 302.144 li
192.863 302.559 li
193.222 303.051 li
193.584 303.506 li
193.944 303.881 li
194.305 304.085 li
194.305 306.681 li
cp
0 0 0 1 cmyk
f
195.024 306.681 mo
195.024 306.544 li
195.383 306.551 li
195.744 306.576 li
196.106 306.573 li
196.465 306.588 li
196.826 306.581 li
197.186 306.551 li
197.545 306.556 li
197.905 306.598 li
198.265 306.597 li
198.628 306.606 li
198.987 306.592 li
199.348 306.578 li
199.707 306.579 li
200.067 306.522 li
200.427 306.543 li
200.787 306.568 li
201.149 306.596 li
201.508 306.62 li
201.868 306.63 li
202.229 306.627 li
202.589 306.564 li
202.949 306.566 li
203.309 306.59 li
203.67 306.592 li
204.03 306.585 li
204.39 306.582 li
204.75 306.592 li
205.11 306.596 li
205.47 306.596 li
205.83 306.592 li
206.192 306.597 li
206.552 306.592 li
206.912 306.571 li
207.272 306.585 li
207.632 306.571 li
207.992 306.566 li
208.352 306.541 li
208.713 306.571 li
209.073 306.585 li
209.073 306.681 li
cp
f
2 lc
[] 0 dsh
222.675 307.833 mo
253.798 307.833 li
253.798 276.71 li
222.675 276.71 li
cp
@
0 lc
[1.5 1 ] 0 dsh
230.672 307.728 mo
230.672 276.71 li
0 0 0 .5 cmyk
@
245.441 307.728 mo
245.441 276.71 li
@
223.83 306.681 mo
223.83 304.539 li
224.189 304.031 li
224.549 303.787 li
224.909 304.105 li
225.269 303.886 li
225.629 304.077 li
225.989 303.918 li
226.351 303.18 li
226.711 303.312 li
227.071 302.95 li
227.431 302.491 li
227.79 302.324 li
228.151 301.692 li
228.511 300.603 li
228.873 300.268 li
229.233 300.737 li
229.593 300.618 li
229.952 301.176 li
230.312 301.407 li
230.673 301.136 li
231.032 300.61 li
231.394 300.447 li
231.754 300.311 li
232.114 301.7 li
232.474 302.244 li
232.833 301.787 li
233.194 301.497 li
233.554 302.32 li
233.915 303.231 li
234.275 303.596 li
234.636 303.793 li
234.996 303.628 li
235.356 303.857 li
235.715 304.021 li
236.075 304.196 li
236.437 304.172 li
236.797 304.177 li
237.157 304.021 li
237.517 304.118 li
237.877 304.682 li
237.877 306.681 li
cp
0 0 0 1 cmyk
f
238.597 306.681 mo
238.597 306.37 li
238.958 306.387 li
239.318 306.366 li
239.679 306.234 li
240.039 306.299 li
240.399 306.41 li
240.758 306.458 li
241.118 306.396 li
241.48 306.399 li
241.84 306.428 li
242.201 306.426 li
242.56 306.417 li
242.92 306.45 li
243.28 306.441 li
243.641 306.468 li
244.001 306.439 li
244.361 306.506 li
244.722 306.573 li
245.082 306.541 li
245.442 306.622 li
245.802 306.638 li
246.162 306.606 li
246.524 306.538 li
246.884 306.488 li
247.243 306.523 li
247.602 306.59 li
247.963 306.554 li
248.323 306.585 li
248.683 306.576 li
249.045 306.518 li
249.405 306.529 li
249.765 306.498 li
250.126 306.554 li
250.486 306.573 li
250.845 306.597 li
251.204 306.557 li
251.566 306.506 li
251.926 306.564 li
252.286 306.56 li
252.646 306.627 li
252.646 306.681 li
cp
f
2 lc
[] 0 dsh
257.153 307.833 mo
288.277 307.833 li
288.277 276.71 li
257.153 276.71 li
cp
@
0 lc
[1.5 1 ] 0 dsh
265.151 307.728 mo
265.151 276.71 li
0 0 0 .5 cmyk
@
279.92 307.728 mo
279.92 276.71 li
@
258.306 306.681 mo
258.306 304.392 li
258.666 304.283 li
259.027 304.065 li
259.387 303.676 li
259.747 303.514 li
260.106 303.614 li
260.469 303.581 li
260.828 303.178 li
261.188 302.49 li
261.548 302.082 li
261.909 302.175 li
262.269 301.574 li
262.629 300.608 li
262.99 300.104 li
263.349 299.714 li
263.711 300.249 li
264.07 300.565 li
264.43 301.053 li
264.789 301.239 li
265.151 299.906 li
265.511 297.272 li
265.871 295.58 li
266.231 296.045 li
266.592 296.062 li
266.952 297.254 li
267.311 298.022 li
267.672 298.8 li
268.035 299.707 li
268.393 300.064 li
268.753 300.856 li
269.114 301.31 li
269.473 301.784 li
269.834 302.072 li
270.193 302.271 li
270.555 302.51 li
270.914 303.246 li
271.275 303.501 li
271.634 303.28 li
271.995 304.019 li
272.354 304.068 li
272.354 306.681 li
cp
0 0 0 1 cmyk
f
273.076 306.681 mo
273.076 306.067 li
273.436 306.028 li
273.797 306.07 li
274.157 306.041 li
274.517 306.026 li
274.876 306.139 li
275.236 306.133 li
275.598 306.165 li
275.958 306.155 li
276.318 306.256 li
276.678 306.197 li
277.038 306.156 li
277.398 306.168 li
277.758 306.248 li
278.12 306.264 li
278.48 306.239 li
278.839 306.278 li
279.201 306.285 li
279.558 306.267 li
279.92 306.396 li
280.279 306.405 li
280.641 306.318 li
281.002 306.331 li
281.362 306.358 li
281.722 306.358 li
282.081 306.378 li
282.441 306.377 li
282.801 306.41 li
283.164 306.426 li
283.521 306.5 li
283.883 306.473 li
284.242 306.473 li
284.602 306.444 li
284.963 306.475 li
285.323 306.459 li
285.685 306.483 li
286.045 306.466 li
286.404 306.456 li
286.764 306.412 li
287.124 306.488 li
287.124 306.681 li
cp
f
[] 0 dsh
288.277 306.681 mo
287.342 306.681 li
@
288.277 300.15 mo
287.342 300.15 li
@
288.277 293.619 mo
287.342 293.619 li
@
288.277 287.088 mo
287.342 287.088 li
@
288.277 280.558 mo
287.342 280.558 li
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/ZDWBPM+HelveticaNeue-Identity-H uf/ZDWBPM+HelveticaNeue /CIDFont ur/ZDWBPH+Palatino-Roman*1 uf/ZDWBPH+Palatino-Roman uf/KVXQMX+Palatino-Roman uf/ZDWBPJ+HelveticaNeue*1 uf/ZDWBPJ+HelveticaNeue uf/KUDAAA+HelveticaNeue uf/ZDWBPL+HelveticaNeueLTStd-LtCn*1 uf/ZDWBPL+HelveticaNeueLTStd-LtCn uf/JQBAAA+HelveticaNeueLTStd-LtCn uf/ZDWBPI+Helvetica-Bold*1 uf/ZDWBPI+Helvetica-Bold uf/SBVPMX+Helvetica-Bold uf/ZDWBPK+HelveticaNeue-Italic*1 uf/ZDWBPK+HelveticaNeue-Italic uf/JXRAAA+HelveticaNeue-Italic ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
