%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: aggregatePiRNAsatSpliceJunctions.pdf
%%Creator: Adobe Acrobat 10.1.9
%%For: royc
%%CreationDate: 2014-04-5, 9:23 PM
%%BoundingBox: 0 0 414 188
%%HiResBoundingBox: 0 0 414 188
%%CropBox: 0 0 414 188
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 45496 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:MetadataDate="2014-04-05T13:28:35-04:00"
   xmp:ModifyDate="2014-04-05T13:28:35-04:00"
   xmp:CreateDate="2014-04-05T13:28:35-04:00"
   xmp:CreatorTool="Adobe Illustrator CS5.1"
   xmpMM:InstanceID="uuid:6cb8008a-ac69-8945-a9ff-ebef846d6f68"
   xmpMM:DocumentID="xmp.did:FB7F1174072068118C149AA0EBC2798A"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 9.90">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">aggregatePiRNAsatSpliceJunctions</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="104"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAaAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FUJq9zfW2m&#xA;XM9hbfXL5EP1a25BA8h2UMxIotftHwxV59b6V+bMXlHVNJnuVk1KaeWBNTWZmn4XYjP1i1b936aw&#xA;vM9FYAqEov7NSrG4Lr87oNSowP6SvdNjRNKaVJo7f6pFzeaobj6lxJ+65nj8b9wmKsotdP8AzKm8&#xA;o2Fs08seqW+qWfoXN6Eeb6lEsYle8S3mjEv7wSVUS1ZONfirirHbeD8+ILWXTXRzAHvZWvoXh9Zl&#xA;N5NKhi9aSVldgUVELlRGafaFQq9pSvBa1rQVrSv002wK3iqUeZ01yfT/AKlo37u6u29N7wvwEEdC&#xA;XfkAzBmA4oVU0Jr2yjPxkVHmevc5uhOKM+PLvGO9fzj0+HU78tmNX6fmQ2naG0MSm6tfQnu4El4G&#xA;VkVIpYrhyaFT6jPtWvHxpmNLx6jXT8bu0xHQieSz6ZcQBrlzIMR8APilNofzFMLaeZ7qcW9xFNe3&#xA;kBiM4d5mmaFBK3DisaqGQP0ZR0qDRGWflvz373Myfkr46iOKJEQbr6a4tt7J5GuhPOk416x8/wAz&#xA;6PcWjcbr6lJa6msbgRLLc8EMoXko5Qn94CK9CBl+WOY8Nc63cLSZdHEZIy+njEo7b1GzXLlLl8Qh&#xA;rAfmMlppNhNDcRpaR2xvbhGgd34/U1Kc2dixH+kF69fE4B41Ab7V3eX7W3L+RMskwYniMuEerb+8&#xA;35bfwU9DzYvNOxV2KuxV5/o6/mgPMmoandRRppmoRpJbafNMZBbRwOyiIInELPKjh2ILKTUFvhXC&#xA;rCoW/O7R7fSJ9Qkleayd+Fu8yyDULq8uoHNvIQztwWGeaOKo+D0y+1FGKso8uWn5onSfMVtrMlxL&#xA;cTW199VeQwJ/pTsy231NonLJGYgrEPTixoOhOKpa1v8AnlpuqI1v6WoQTx2STSqFiRGRACvpzz3J&#xA;pu/rOrAseJGKvRPJUWtxeV9Pi1x5ZNWjQpdyT+mZGdXYVJj+EinQ+HXfAqd4qh9Rmu4LGeW0g+s3&#xA;SqfQgqFDOdlBJ6CvX2yGQkRJAstuGMZTAkeGPUsKOnfmMvlrUNNacPfSzGKO+WVvW43DRlpoWqnB&#xA;IvUeimhHGi9swhDOIEXvbvPG0JzxnXoAvhrb036Tzsmh5G9+qWJdfmdHfTbML6+twU093SRII7eE&#xA;OHWh4h5XJjLVFXbuEGU8WfirqR+Px3uWYaAwH8yMvqqrMjy9wHqrf0jvkmstj55n8oxwrJN+lLa7&#xA;hktHmaNJnhgRWpcGNyp5yqwO5qpFd65cY5TjHPitw45dJHUk0PDlE3V1ZJ+mxe0a+PJC2cf5k29t&#xA;cxNFK02ozPMJA0LfV/WMbMoLv8KxhmRaV3FcqA1AB827IdDKQNioCuvqq/LrsT72c6MLsaRZC85m&#xA;69CP1/V4+p6nEcuXD4a18M2OK+EXzp0Gp4fElw1w2arlTFtF/MzTtc85X/layi4taJNS/WWNqtB6&#xA;YakRHYzDff8AXSxoSb8p9Z1XWNW1h7vW5L1LKQxfUy1o9P3siBpBHc3Eyt+7qOUFv3+E/slUX+nv&#xA;zf4wKug27TcrszcnRYzxVfqyhvWJVefqBmp0CbfFirMPL2o3+oaalxe26201THJGr8j6kTGOWoA4&#xA;rSRDSjNt3wKmeKuxV2KuxV2Ksd0v8wvKOpaxqGjQahGmpabcfVJreYiJnkrx/dBiPUHOqfD3+a1V&#xA;ZFirsVdirsVdirsVdiqA1qfVILNZtNiFxMk0PrQEAs8BlUTcKvGA4jJZantSmKobRdR1ma5ls9St&#xA;4o5YQ8ryoxWsb3M8dtSMGUbwwqzH1Op6eCrte83+WtBH+5XUYLWQhSIGdfVIflxYJXlQ+m29OxxV&#xA;OMVdirsVdirsVdirsVdirsVdirsVdiryjy1rjzfnlrWk/VrdIYLaWZZVFzyDM0Slk5zvbhpOLeoY&#xA;oVJKkMTxqSqt+Wum3Fn5s1F5bHVLFJkYRGeM/VnUTytwkcwR1defNWD7hqb0xKHqOBKQJqkek+Vt&#xA;V1WRDLHp76ndPGpAZlhuJ5CoJ7njiryHyj/zkFr2u+edI0+9gt7DSLu4e3eOFWkkZplKWys7k9JS&#xA;lSoHfFXvuKuxV2KoPWdTh0rR77VJlLw2FvLdSIv2isKFyBXvRcVfCrzzNM87OxmZjIZKnlyJrWvj&#xA;XAl97EgAkmgHU4UIOLWdKm1A6dDdxSXyxeu1ujhnEVQOZA6CrDIDJEmgd2+WmyRhxmJELq/NGZNo&#xA;dirsVQGvavDo+iX2qzANHZQSTlCePMopIStDQsdhkMk+GJPc5Gk05zZY4x/FID9vweU/l5+eF5f3&#xA;dhomuW5ub68uTCuoRcYwFk/u+UYABPM8TSnw77nrr8GtNiMt7PN6/tj2XjjjLLhPDCMb4Tvy57+7&#xA;fru9lzZvEJdB/wApHff8wdp/yducVfHv5nX13efmD5hkupWmePULmCNmNaRQytHGg9lRQBgS+svy&#xA;81cav5G0LUDO1zLLZQrczuSWaeJRHOWJ6n1UapwoZDirsVdirwD/AJyD/MjV7LXrby9o141r9SSK&#xA;6uZrdmSVZ3DERsw7CNkcU8fuUvXPy61+78weSNH1e83u7mAfWGFBykjYxs9FCgcynKgG1cUMjxV2&#xA;KuxV2KuxV2KvLbHzFoenfm9e2qxXp1LWJDbSqRprIvoxRlHIVBqKQkL8HNyhPJgO4VRP5Y6u2qeZ&#xA;tfe7vzf6laBIGkWS59EQmeZkCQy2VlGtP5kklr/NSlSr0nArD/MP/ktfNP8AzDa3/wATuMVfHEcj&#xA;xssiEq6NyVhsQRQgjAl9w+U9fg8w+WtN1qEALfQJK6KSQklKSR1IFeDgr9GFCbYq7FXn/wCe+rx6&#xA;d+WeqL6vpzXxitLcD9ovIGdfphR8VfIvY/LAl9j/AJyO6fltrJRip4wCoNDRrmMEfSDTMfWf3R+H&#xA;3u79mwDrsd/0v9yXz9+XXmX/AA75x07UZJOFqX9C9Y1I9CX4HJC7nh9v5jNThycEwX0btnRfmdNO&#xA;AHqq4+8cvny+L60zfvjrsVdirzj8+9WFn5FazDDnqVxFDx78Iz6zEfIxqPpzC106hXeXp/ZPT8er&#xA;4v5kSfnt+l4b+X3/ACnOgf8AMfb/APJwZq8X1x94+977tj/FMv8AUl9z65zoXxpLoP8AlI77/mDt&#xA;P+Ttzir42/ML/lPvMv8A21L3/qIfAl7T/wA4w+Ymm07V/L80grayJeWiEktwmqkvEfyqyKfm2FD3&#xA;HFXYqtllihieWV1jijUvJI5CqqqKkknYADFXxD5x8y3XmbzLqGu3KhJL2XksYp8EaKEiSoArxjVR&#xA;Xv1wJfVX5K/+Sv0H/jFJ/wAn5MKGbYq7FXYq7FXYq7FXkflXUNOtPzj1u2k1RJJrl5l+pta2iOs5&#xA;EJoZwXugGX+7Vm4tRqAUGFV/5J6RPb6/5v1Vg4g1O7DWxaO6X4I5JVoZJreGCQ8+T1t5XWrHptgV&#xA;6Vr02qw6Pdy6TEs2oohNtE1CC1fAsgJp0HIVxVjy6X5kvPy41LTtTt4YdY1Gwu+cMDl1FxepI7x7&#xA;gAcJJeIozVp1xV8z/wDKqvNZ1D9GCGP9JA0Nl60Hr14CSnp+pz+weXTpvjS29s/KhvPHlny9/hy6&#xA;0uG6uLedpIIJL2GCaOGcF1X0qSNRnSVge+/hirPbXWvNHNmv9A9C3VSxaC6S4kLD7KrGEjrU+LAY&#xA;qh9V8z+YLC79E6RbelK7LaSTajFA0wVS54oyVqFBJAJpirz785NF/Mzzdpun6fbaGkFpDM1xMiXE&#xA;c7NIEKRmvFOICu+3evtiryCf8pPO9tcR295ax2ss1CizTxIxUusfIKWBI5yKu3cgd8aW309+Z+k3&#xA;2r+RtT06wiae7nEPpRJTkeM8bn7RUdF8cpz4zOBiHY9k6yOm1McsgTGN8vMEfpfOtt+Xnma6uPq1&#xA;ra+vcBWf0Y5bd34xyGJ24rKTRZFKE9mFOua78hk7x+Pg9v8A6MtN/Myf7H/invPlPzB5vXR7Wwud&#xA;KivNSsoxBdkXsKyhowtPVj/eMr8HQtU969xmfjGSMQCAa8z+p4nVy02TLKcDOMZG64Rt/smR2Wq6&#xA;2zf6fo7WyMyIhinSc1c0LMAE4qo3Jr8hlsTLqB8/2Bw8kcYHpJPvFf74pc/mrXkvBZNo8C3jKHW2&#xA;bUYBKUJ4hglOVK7ZG8ncPn/x1nwYP50v9KP+Leefm1oHn/zVe6esehvFbWUTlRHLHNV5mHKr1TtG&#xA;u1P15i6jBkyEfSK8/wBj0XYfbGl0MZWJylOukRsP87zLEfJPkjXbLz1pQvIlgezvYDcRtLDzRgPW&#xA;VWQSF+TRryAp036ZVDQzEgbGx/HR2Wv9q9PmwTxxjO5RI3rr8X0zm0eCYt5P/wAYzXV3feYrS3tX&#xA;lVYI0ic8wsLyMDwHqKVJmIDc6kAGm+Kvnb8wPy381/4w1y+kgigtrq9u7uB5p4ouUD3NBJ8bD4ay&#xA;oK+LAd8aW2Sflb5T8/eR/McupXOk25+t20lpFDeXsdnzJZZj6bFZeRVYSSOPSp7Yq9ltdb/MF7iN&#xA;LnyvbQwMyiSVdUEhVSQC3H6utaDelcVVtX8zavZW63kOkoLHifWmvruKyMb+oUCsHDrRqAqeXfFW&#xA;OeeL/wDMfV/KN/Y6ToMCPfRG3edb2O4PpS/u5OChEBJUneu2Kvn+7/KHz7ZrEbuwW2E8gihM00Sc&#xA;5GBIReTDkxCk0GNLb6a/K3TptL/LvRbSYrLLFbl29FldT6jtIArA8T9qnWmKpa/5la5HeCyfytKt&#xA;43HjbNeWwlPMMU+CvL4vTan+qfDKrydw+f8Ax1yeHB/On/pB/wAWjrTztr1xcm0fy+LW9ChxZ3F/&#xA;bpMY2YqriOhbiWBAPjtjeTuHz/46vBg/nT/0o/4tNLfWPMhk/wBL0Iw26qzPJHdRzP8ACpYBYwoL&#xA;FiKDfCDO9wPn+xE44q9MpE/1QP8AfFD6n5p1SymjDaXEkM9Pqz3N7Bbu54c2X03r8SitQCemJM72&#xA;A+f7EQjir1SkD/VB/wB8FG+8zecLVFZfKklwWNOMN5ExG3f4RgvJ3D5/8dZ8GD+dP/SD/i0m1H80&#xA;da0wxjUvLDWRlDGIXF/bRcghUMV58a8eYr8xjeTuj8z/AMSvBg/nT/0g/wCLSPRLmzuPzu1XTbX1&#xA;bW+tYrm5aYXcUobn9XDLJa/V0cRtVCP356bU+IC5xUX+TurQXmv+Z7ZLXToLizkjjvZrLT0sXnm9&#xA;SVvU5o8nrxMjKwZ+LVJ2ocVeqYFcRUUxVitl+XOjWfmE63Fd37ylxJ9VnuWnh5qnAH98HlrtX7e+&#xA;1dgBiqK1XyRpGp3GpT3MkxbU7c20qBkKR1jaEywq6MFkMblS2+3bFUZ5b8u2Xl/T2sLN5JIWmluC&#xA;0vDlymcuw+BYxSp22xVdrOgWGsPZm95tHZTC4WAEenIwUqBKpB5KOVaeOKoDy/5I0rQ9WvtUtJZn&#xA;uNQ5essnpcBznkuDx4Ro325iNydvvxVB3X5Z6Hc3ZuXu7+rSPLJGbgyIxkk9QrSUSUUbqvGlAT3N&#xA;cNqye9s4ry2a3laRY3pVoZZIH2NdpImRx07HAqR6J5G0zR9RW+gubqZ0jeOOKd0dFEjl9qIr/CDw&#xA;UFqBe1d8bVZdeQNFuTfmSSctf3MV27Fo2MbQyrN6cXNG4RtInJlxVOdG0q30nSbPS7Zme3sYUt4m&#xA;k48ysahQW4hVrQdgMVQt35Z0+712DWbh5JLi2ge3toGKmGP1SC8qoVNJCBTlXpiqj5W8n6Z5bsJr&#xA;KxlmkinMZdpSgcenBHbihiSKnwRA/PpiqW6X+WWiabdxXMV7qE/ozpcxxXVy1wodEC7GQM1G4KT8&#xA;X7IAoopjasuxV2KsZ1j8v9K1S4kuHvL6CSVWVwlwZFPKQSbLcCcLxIoqrRVBNBvjao/VPK+malJp&#xA;zT+oE01uUUKsPTkUgD05lYNzT4QaeIxVR0Dyfpmh6hfX1pJK8uoEmZZPT4is81x8PBEP27lhuTtT&#xA;vUlVHa9o0OtaTc6XPNNbwXS+nLJbsEk4H7ShiG+0Njt0xVKF/L7Qo/MVrrsJkhns1iSC2jEQgCwx&#xA;SxKKenz+zO3RutMVX695F0vWtVh1O4u76GeEKnpW9zJHCyAOrK8O6HmspVjStO4qaqpvpGlW+laZ&#xA;Bp1uzvDApUPIQXYsSzMxUKKkmuwGKpKv5f6Musw6qLi9aSFo5FhluGnQtHWjM03qS16V+P8AZUdB&#xA;TG1Rl35T0271qXVppJmmlthbG3LKYF48wsyxsppKqyuobwJxVb5R8n6b5WsZbPT5JZYpnR2M/p8q&#xA;xwpCKemkY+zEO3XFUVrXl+w1k2i33N4bWX1vq4I9KU8SvGVSDyX4q08cVQGi+R9K0jzPrPmO2lme&#xA;91z0/rcb+j6a+kKLw4RpJ/wbtiqA1b8sNF1K8N49/qUMzSzTMI7oshM4QMvCZZV4D0wVWlB9Ao2q&#xA;V+Ure6j/ADM8yNHcTT6YSXVhFfrbi5fj60NWuDY84ginktuGbl9rZqqpd+SiP+lPNM72F3bSXV0Z&#xA;Zr2e3uIoLp/WmX1IZ5Lu4gnooALRQRdtjtRVMv09+b/GBV0G3abldmbk6LGeKr9WUN6xKrz9QM1O&#xA;gTb4sKsw8u6jqOoaalxfWy2s9WjkjV+Z9SJjHLUAUX40NKM23fAqZ4q7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYqgNan1SCzWbTYhcTJND60BALPAZVE3CrxgOIyWWp7UpiqF0XUdamuprPUraKOSEPK0qM&#xA;VJje6njtgIv3o3hhVmPqdT0xVOcVdirsVdirsVdirsVdirsVdirsVdirsVeTeTrxbv8AOLX5oLWy&#xA;UKlxE93EtmbhzGYAqSGGP104nlyZ5X57fCvGgKon8m7eyg1TzGIQFnecmZTbrG5IuJxz+sixszcq&#xA;zVKsZpdv5Sdwr1DFUu0D/eGX/mMvf+oyXFUxxV2KoHWte0XQ7I32sXsNhaA8fWncICxBIVa/aYhT&#xA;RRviqKt7i3ubeK5tpUnt50WSGaNg6OjjkrKy1BBBqCMVVMVdirsVdirsVdirsVdirsVdiqXQf8pH&#xA;ff8AMHaf8nbnFUxxV2KpR5q816J5W0aXWNYn9G0iKoAN3d3NFSNerN3oOwJ6DFUP5M88eX/OOlvq&#xA;WiStJBFKYJkkUpIjqA1GU+KsCDiqf4q7FXYq7FXYq7FXYq7FXYq8r8v3emP+bXmK3jcw6nHDcsln&#xA;KkrlgVtg8/wWsXqo1IxwN05A+yowqi/yd1I6idYuYtNtNMsWlVbWGztBArcC4kb10+F/jr8DfGu9&#xA;QMSr0nAqXaB/vDL/AMxl7/1GS4qmOKuJABJNANyTir5M/Pz8ybXzbrsWn6XIJNG0gssU6k8Z5n/v&#xA;JB/krx4r9J6HFLJ/+cdvzWeC4h8laxIDbTEjRrl2A9OQ1Y27E9Q5/u+/L4d6iih9GYq7FXYq7FXY&#xA;q8P/ADF/OvWLPzE+n+WpoRZ2RCT3HBZfWk25qCw2Vfs/D7mvTNVqNZLiqB2H2ve9jezGKeDjzg8U&#xA;uQ5UOnx6/oeoeSPOml+bNGS/s24TpRL21P24Zabg+Knqrdx71Az8GYZI2OfV5TtTszJo8vBLl/Ce&#xA;8fr7wyDLnWuxV2KpdB/ykd9/zB2n/J25xVMcVdir5o/5yc85m+1qz8sWdxHLY2CfWbxYm5EXjMyB&#xA;JPAxxjYf5ZrirHfyD/MKHyn5qe0v246TrQjguJCVVYpUY+jMxYfZXmytuNjXfiBil9cgggEGoO4I&#xA;xQ7FXYq7FXYq7FXYq7FXYqwpPJep23mq81y41KbUrOeyuIjFdTSkwvJwolrDEvpwqUj+N0HJj2rv&#xA;iqR/k9FpVnPdRJf2FzqFxDChtLC4gne3jg5H07hLS2tEUr6n25auehbCr0LXodVm0e7i0mVYdRdC&#xA;LaVqABq+JVwDToeJpgVLtAtPMmk+VvSv/R1TWYYZJmEJ9Fbi6flK68mHFA8rEA0oB2xV5/8A8rm/&#xA;Mn9NfoU/lsw1Dn6fpnWLYJz9MS8fW9H0q8WH7XXbrtiqTfmVq3/OQPmDQbmxtvJq6HpbRE6i6anZ&#xA;3EzxrVnXmHj4oQNwq1PStDTFLxSz/Lnzxcy28BsrSCS5dEWKbU9PinBc0CmCSdZQ2/2StfbGlbm/&#xA;Lnz3auyz2lhBIpoQ+saWjBlbietwNwy0+eNK+hPLHmz8/wDT9Gt7PVvIS6xcwqEF+NXsYGkUD4TI&#xA;Kzcmp1YHfFV13+cX5i2N5FbX/wCXggMhAZxrVrKqD1BESxjiYAhj0JrQMeitRQ9I81XvmCx0G6uv&#xA;L2mrq+sR8PqunvKkCycpFV6yOVVeKFm3O9KYDdbMo1e/L8e95NYfm9+c+oXq2Vp5CtnuGjeVUOoR&#xA;ICiSGMkM7Kp3WoFd1+IfDvlfDPvHy/a3cWH+bL/TD/iUD5980/8AOQF5oRtJvJq6XbXEiQzSWl/b&#xA;yzSeoeCxAJIzBWJ+Kg6dTSuQyYpzFcX2ftc7Qa3T6fJ4hxmZHK5Cge/6Pk84s/I/5i3c/oQ6NaSS&#xA;FHkVI9X02RiEXl9lZq03Wp7VrmL/ACd/S+z9r0v+jX/av9n/AMdTHyha/mzomtW19omlWUl07cEg&#xA;XWdNdZwa1jKLPVweB6b7bdMnDRGJsS+z9rh672nxarGceTDt/X3HmPQ9a/xr/wA5B/8AlurX/uKW&#xA;v/VXMqp94+X7XmOLD/Nl/ph/xKj5c/Nb8y7vzTZaRrflGDT7Ke5W1uL6O8jlVGeISgoULLJ8LpXi&#xA;TTkAdyMkBPqR8v2sZyxVsJX/AFh/xIevZNpYv5Q0nzfZ3F1c+YbyC8lnCxqYwQypE7su4VFoxlYg&#xA;UqBQVxVjPmj81/Omgand2r+RJri1gLtb3aajbfvrdZvSjl9MKzJ6lQQjfFSv8rUVQmv+bfz51Cw9&#xA;PQfJQ0qWQAi9e/068YA0IMYM0cfT+ZWxV8/zfl956vJri9vbWlxNLK0817e6fBJI4dvUk/f3SM4L&#xA;I/xjY0O+NKum/KnzpBcG3ktbcThUZo21HS1YCRQVqrXYP7Q+fbGlexfltqn55aBoVtZN5ZHmHSFq&#xA;1ncfpGwEgiI+FEnFzKrIp+z8JoNq0pRVkmpfmn+Y2mmJbz8upUaZ+CKurWUh+w8nJhGGKIFiYl2o&#xA;op1xVnnl7W59Y8t2er/VPq9xdQeqbEyByklDWIyAAVDDiTTFWBz/AJt+dYNUXS5fIFwl87Iix/pK&#xA;xoWkBZV5g8K0HjtVa/aWsLl3D5/sbax95+X/AB5H3Pn78yba3luJvy6uEhhRpJW/SunGiqKsaBye&#xA;gxuXcPn+xeHH3n5f8eS+H83/ADbKIv8AnSTFJNw4QT6zpkM1ZOPAGKWRJFZua0BWu48cbl3D5/sW&#xA;sfefl/x50v5weZ4pJY5fKEUckDFZkbXtIDIygkhgZdiOJrXwxuXcPn+xax95+X/Hk0Hnf8zmAI/L&#xA;m4IO4I1bTaEf8Hjcu4fP9i8OPvPy/wCPJRrH5x+cNHdEv/INyjuHIWLUbOcj0ygbl6Jk4/3q/a8c&#xA;bl3D5/sWsfefl/x56rk2p2KuxVxAIodwcVY/ZeQPJ1hrB1ix0uK1vyQS8JeOMlVKL+5VhFsDt8Ox&#xA;3674qnlzbw3NvLbzLzhmRo5FqRVWFGFRQ9Dirx2XyDrqatqMGm+W7OTRQkkcMl488hnK84Y4zE93&#xA;EhVIoYhV4yHVgOVAcKojy7+X2tDW4ZNT8v20Vo5JvJxI6SMJC8hoIbxo6JJIxoYj128cUPXI40ij&#xA;SNBxRAFVfAAUAwJSCT8vfJj3P1n9FxpOZHlZo2ePk8rrI5YIyhuTIK17bdMVTu9sbK+tmtr23jur&#xA;Z6c4JkWRG4moqrAg0IriqW6V5Q8u6VefXNPtPQn4ugPqSsoEshkeiMzICWJ3Ar26Yqq+ZNIsNV0i&#xA;a2vbc3MaUnjiBcEywn1IyPTIbZ1G3fFXl1l5O82pbMkPliyiQxkRySOZJeSRuiOUluTGGIWIgFBQ&#xA;/wAvVShPPIPkOXTrqMajoVvYwWkai0mimkd+cEpMZb/SJVPJW5fZG9fGmKvR3RXUo4DKwIZSKgg9&#xA;QRgSx3S/y68laVcrcabpUVpKsiTD0mdV9RFKq3Dlx71O25+I774qyPFXYqkN/wCRPKV9O88+mxrN&#xA;IH9SSBnt2YyOruzGFo+TMyAljviqeoiooRAFVQAqgUAA6ADFXluueSryDzDP/h/y9Fc2rFZZpria&#xA;ZV9R5TJJx/fw8uXrSGm6qQOnTChLLX8udbiuvrbeV7H6xcAPdcGMKBklD0Cx3n2mHVm5Vb4jvXkq&#xA;9esLC00+0S0s4/St468I6lqcmLHdiT1OBKV6v5H8p6xqUOqalpkNxqMHERXR5LIAhJC8lK1X4twd&#xA;j36DFU00/TrPT7KKxtI/TtYV4xx1LbdTVmJYk13JOKpXD5H8pwajHqFvpsVvdQ8DGYeUUYMZYr+6&#xA;QrHsXJ+z1364qnFzbw3NvLbzLzhmRo5FqRVWFGFRQ9DiryjUPIdyby8g0/yxb3enQt6cJvGkcSRJ&#xA;GkaxqklzDzUeihq4ow2r4FDekfl3qS6rH+kfLtobW+kMusXaTyIzNJ63MrFFcBFFSlFCt18eir1i&#xA;ONIo0jQcUQBVXwAFAMCWOX/5beSL+6+t3GlR/WvVluDPE8kL+rOFEj8omQ1YKK/T4nFWS4q7FXYq&#xA;7FXYq7FUJq+q2Wk6bcajesUtrZOchUFmPYKqjcsxNAPHFUpsvPWiywzPqQk0KWCRI3g1QxQsTKCU&#xA;KuskkTcuLdHqKHkBiqq/nfyotylsuq2skxleCRVni/dtEkrv6lWFAot3B+WKqsvmzQE0+21CK8ju&#xA;bS7nW1hmgdXQyMTyq1eIEaqzPU7BT32xVE6drui6lavd6ffQXVrG3CSeGRXRWoDQsDTowP0jFUJ5&#xA;h816ZoVkt7dLNPblZJXe2jMoSGFS8srkEAKijxqewOKobWvP3l7RpbyO8a4rY2bahcNFbzSKIVKi&#xA;qsq0b7Q6bD9ojFVi/mDoB1kaSROszOiLK0fGM+o6xA1J5AetKkYJXdm+GoBIVZLirsVdirsVdirs&#xA;VdiqU6r5r0HSdRgsNSu47OW4hkuIpJmWOMrHJFEV5sQORedQq98VQtr5/wDJt1PPDFq9tygmit+T&#xA;SoFd5o0lj9JiaOGWUCo77YqvtvPXk25ZEh1qzZpGMaL6yKWYGhAqRXfb5gjscVVE86eUZDCses2T&#xA;vcMUgQXEVXYMEoo5b/GwX5keOKqukeaNA1YwpY30EtzNbx3YtVljaZYpVV1ZkVm7SLX5jxGKqOke&#xA;cfLmqvbxWt9ELq6T1bezd0WdoiOaOI6lqPH+8Xvx38cVTSS9tY4ppGkBW3VnmCfGyhQSfhWrdulM&#xA;VYpD+a3lWWe1t6XKT3M/1YxPEKxuXijXnRiDVrmP7HIivxAUajSo7RfP2g6vqCWFv60dxIXEYmTg&#xA;DxQSKOpILxlmVSA1FPIDaqrI8VdirsVdirsVdirsVdiqD1fSrPVtNn068BNvcLRip4sCCGVlPZlY&#xA;Aj3xVhV7+S3l29ury+uby5Ooahx+t3MSWsXOnqByY0gEZZxN8TFSSQO1QW1VLv8AJryxdLZRyXF2&#xA;IrA3hiRXQVF7JPIwJKE/AbpuPyFa71bVHa1+X0ep6GunSahPJcm7e7lv39NZCZ4ntpiojRY1It5n&#xA;CfD1oT44qmL+SNBk07UdPlR3tdTnS4uV5cSDEkUcaKVCkKiQIoHtiqC1T8vdPu9N0vTLa8nsrDS5&#xA;GljtV9OaKVyeSmZJlkD8Gqyg7V+jFVe+8lRanHffpK9mmnv7C90qSVBGnG1u5WdaKFp6kaFU5dDS&#xA;pGKpfqH5aW91qEF02oXEyRzxt6c5VuECXMV40SMio7BprWMKHYhFrxwqzTArsVdirsVdirsVdiqQ&#xA;a35M03WNd0zWriaZLnSgRBHGVCNWaKf4wVY/agA2I2xVjJ/I/wAskkfXb0oxPNC0JBWSOGKVP7vp&#xA;ItrH7im3XDaqWo/k+J7i3sYL0p5ceOBNTgfe4mNuZiPiC0HJZ+PwlaUrRsbVMbH8otAtI7pfrd3I&#xA;94AtxIxhBPGWGRSAsagH/RUXp0rjao/yx+XeleXo4ILW6uZrO2gMENrMY+IZ4445ZOSIjlnEI2LU&#xA;BJoOlAqn5V/Lux0NLBnne4udPZjCx48Txto7GEkceQKWsIHXqzdcVR1j5F8v6fNqNxYpNbXOpxyR&#xA;TzxzOHUSkkmNq/AwO4I6Yqkw/KTRWvjfT311NdSzJPeSFbdfVaJomSgWIekf9HTk0XFm3qamoNqr&#xA;6d+XMVl5jstYN/PePbFnd7ngZGdIHtoKmNYwxEdzLzd6ux41O2wVmWKuxV//2Q=="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="uuid:9efa0710-a85b-c642-b0bb-d20be206c660"
    stRef:documentID="xmp.did:08801174072068118C14F3235FA19F7F"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="default"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/pdf to &lt;unknown&gt;"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:D27F11740720681191099C3B601C4548"
       stEvt:when="2008-04-17T14:19:15+05:30"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/pdf to &lt;unknown&gt;"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/pdf to &lt;unknown&gt;"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F97F1174072068118D4ED246B3ADB1C6"
       stEvt:when="2008-05-15T16:23:06-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FA7F1174072068118D4ED246B3ADB1C6"
       stEvt:when="2008-05-15T17:10:45-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:EF7F117407206811A46CA4519D24356B"
       stEvt:when="2008-05-15T22:53:33-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F07F117407206811A46CA4519D24356B"
       stEvt:when="2008-05-15T23:07:07-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F77F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T10:35:43-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/pdf to &lt;unknown&gt;"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F97F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T10:40:59-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to &lt;unknown&gt;"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FA7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:26:55-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FB7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:29:01-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FC7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:29:20-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FD7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:30:54-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FE7F117407206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T11:31:22-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:B233668C16206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T12:23:46-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:B333668C16206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T13:27:54-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:B433668C16206811BDDDFD38D0CF24DD"
       stEvt:when="2008-05-16T13:46:13-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F77F11740720681197C1BF14D1759E83"
       stEvt:when="2008-05-16T15:47:57-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F87F11740720681197C1BF14D1759E83"
       stEvt:when="2008-05-16T15:51:06-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F97F11740720681197C1BF14D1759E83"
       stEvt:when="2008-05-16T15:52:22-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FA7F117407206811B628E3BF27C8C41B"
       stEvt:when="2008-05-22T13:28:01-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:FF7F117407206811B628E3BF27C8C41B"
       stEvt:when="2008-05-22T16:23:53-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:07C3BD25102DDD1181B594070CEB88D9"
       stEvt:when="2008-05-28T16:45:26-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="converted"
      stEvt:params="from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator"/>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F87F1174072068119098B097FDA39BEF"
       stEvt:when="2008-06-02T13:25:25-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F77F117407206811BB1DBF8F242B6F84"
       stEvt:when="2008-06-09T14:58:36-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F97F117407206811ACAFB8DA80854E76"
       stEvt:when="2008-06-11T14:31:27-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:0180117407206811834383CD3A8D2303"
       stEvt:when="2008-06-11T22:37:35-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       stEvt:action="saved"
       stEvt:instanceID="xmp.iid:F77F117407206811818C85DF6A1A75C3"
       stEvt:when="2008-06-27T14:40:42-07:00"
       stEvt:softwareAgent="Adobe Illustrator CS4">
      <stEvt:changed>
       <rdf:Bag>
        <rdf:li>/</rdf:li>
       </rdf:Bag>
      </stEvt:changed>
      </rdf:Description>
     </rdf:li>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:01801174072068118F62C262592E568B"
      stEvt:when="2012-01-04T09:22:07-05:00"
      stEvt:softwareAgent="Adobe Illustrator CS4"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:02801174072068118F62C262592E568B"
      stEvt:when="2012-01-04T09:22:18-05:00"
      stEvt:softwareAgent="Adobe Illustrator CS4"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:06801174072068118C14F3235FA19F7F"
      stEvt:when="2014-03-26T20:33:25-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:07801174072068118C14F3235FA19F7F"
      stEvt:when="2014-03-26T20:33:35-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:08801174072068118C14F3235FA19F7F"
      stEvt:when="2014-03-26T20:35:31-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:FB7F1174072068118C149AA0EBC2798A"
      stEvt:when="2014-04-05T13:28:30-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="5.750000"
    stDim:h="2.611111"
    stDim:unit="Inches"/>
   <xmpTPg:Fonts>
    <rdf:Bag>
     <rdf:li
      stFnt:fontName="HelveticaNeue-Italic"
      stFnt:fontFamily="Helvetica Neue"
      stFnt:fontFace="Italic"
      stFnt:fontType="TrueType"
      stFnt:versionString="8.0d6e1"
      stFnt:composite="False"
      stFnt:fontFileName="HelveticaNeue.dfont"/>
     <rdf:li
      stFnt:fontName="HelveticaNeue"
      stFnt:fontFamily="Helvetica Neue"
      stFnt:fontFace="Regular"
      stFnt:fontType="TrueType"
      stFnt:versionString="8.0d6e1"
      stFnt:composite="False"
      stFnt:fontFileName="HelveticaNeue.dfont"/>
     <rdf:li
      stFnt:fontName="HelveticaNeueLTStd-LtCn"
      stFnt:fontFamily="Helvetica Neue LT Std"
      stFnt:fontFace="47 Light Condensed"
      stFnt:fontType="Open Type"
      stFnt:versionString="Version 2.100;PS 005.000;hotconv 1.0.67;makeotf.lib2.5.33168"
      stFnt:composite="False"
      stFnt:fontFileName="HelveticaNeueLTStd-LtCn.otf"/>
    </rdf:Bag>
   </xmpTPg:Fonts>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="100.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Red"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Yellow"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Green"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Cyan"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Blue"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Magenta"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=15 M=100 Y=90 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="14.999998"
         xmpG:magenta="100.000000"
         xmpG:yellow="90.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=0 M=90 Y=85 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="90.000000"
         xmpG:yellow="85.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=80 Y=95 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="80.000000"
         xmpG:yellow="95.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=50 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=35 Y=85 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="35.000004"
         xmpG:yellow="85.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=5 M=0 Y=90 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="5.000001"
         xmpG:magenta="0.000000"
         xmpG:yellow="90.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=20 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="19.999998"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=10 Y=100 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="100.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=90 M=30 Y=95 K=30"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="90.000000"
         xmpG:magenta="30.000002"
         xmpG:yellow="95.000000"
         xmpG:black="30.000002"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=75 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="75.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=80 M=10 Y=45 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="80.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="45.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=70 M=15 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="70.000000"
         xmpG:magenta="14.999998"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=50 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=95 Y=5 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="95.000000"
         xmpG:yellow="5.000001"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=100 Y=25 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="25.000000"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=75 M=100 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=100 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=35 M=100 Y=35 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="35.000004"
         xmpG:magenta="100.000000"
         xmpG:yellow="35.000004"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=10 M=100 Y=50 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="10.000002"
         xmpG:magenta="100.000000"
         xmpG:yellow="50.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=95 Y=20 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="95.000000"
         xmpG:yellow="19.999998"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=25 M=25 Y=40 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="25.000000"
         xmpG:magenta="25.000000"
         xmpG:yellow="39.999996"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=40 M=45 Y=50 K=5"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999996"
         xmpG:magenta="45.000000"
         xmpG:yellow="50.000000"
         xmpG:black="5.000001"/>
        <rdf:li
         xmpG:swatchName="C=50 M=50 Y=60 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="60.000004"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=55 M=60 Y=65 K=40"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="55.000000"
         xmpG:magenta="60.000004"
         xmpG:yellow="65.000000"
         xmpG:black="39.999996"/>
        <rdf:li
         xmpG:swatchName="C=25 M=40 Y=65 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="25.000000"
         xmpG:magenta="39.999996"
         xmpG:yellow="65.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=30 M=50 Y=75 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="30.000002"
         xmpG:magenta="50.000000"
         xmpG:yellow="75.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=35 M=60 Y=80 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="35.000004"
         xmpG:magenta="60.000004"
         xmpG:yellow="80.000000"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=40 M=65 Y=90 K=35"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999996"
         xmpG:magenta="65.000000"
         xmpG:yellow="90.000000"
         xmpG:black="35.000004"/>
        <rdf:li
         xmpG:swatchName="C=40 M=70 Y=100 K=50"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999996"
         xmpG:magenta="70.000000"
         xmpG:yellow="100.000000"
         xmpG:black="50.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=70 Y=80 K=70"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="70.000000"
         xmpG:yellow="80.000000"
         xmpG:black="70.000000"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Grays"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=100"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="100.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=90"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="89.999405"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=80"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="79.998795"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=70"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="69.999702"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=60"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="59.999104"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=50"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="50.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=40"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="39.999401"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=30"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="29.998802"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=20"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="19.999701"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="9.999103"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=5"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="4.998803"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Brights"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="C=0 M=100 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=75 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="75.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=10 Y=95 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="95.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=10 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="10.000002"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=90 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="90.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=60 M=90 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="60.000004"
         xmpG:magenta="90.000000"
         xmpG:yellow="0.003099"
         xmpG:black="0.003099"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -188 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 188 li
414 188 li
414 0 li
cp
clp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: BDHQMX+HelveticaNeue Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.074
 256 array 0 1 255 {1 index exch /.notdef put} for  /BDHQMX+HelveticaNeue
Type42DictBegin
[<00010000000c000c000c000c4f532f32c8d7d058000000cc000000606376
7420001400140000012c000000046670676dfdfac9ac0000013000000428
676c7966b8a712ba0000545c00001c3c68656164e3efa789000005580000
003668686561e20bc5040000059000000024686d7478237b760f000005b4
000021606c6f636100e5cad000002714000021646d6178700a8304e20000
4878000000206e616d65cd399ba20000489800000bb87072657028001e81
000054500000000c67646972000000000000000000000000000201bf0190
0005000000cc00cc0000011e00cc00cc0000011e003200fa000002000503
000000020004800000670000000000000000000000004c494e4f00000008
fb0203b8ff29003703b800d50000000000000000020502ca000000200002
00140014b800002c4bb800095058b101018e59b801ff85b844001db90009
00035f5e2db800012c2020456944b001602db800022cb800012a212db800
032c2046b003254652582359208a208a49648a204620686164b004254620
686164525823658a592f20b00053586920b000545821b040591b6920b000
545821b0406559593a2db800042c2046b00425465258238a592046206a61
64b0042546206a61645258238a592ffd2db800052c4b20b0032650585158
b080441bb04044591b21212045b0c05058b0c0441b2159592db800062c20
20456944b001602020457d691844b001602db800072cb800062a2db80008
2c4b20b003265358b0801bb040598a8a20b003265358b0022621b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b80003265358b003
2545b8014050582321b8014023211bb003254523212321591b2159442db8
00092c4b535845441b2121592db8000a2c4bb800095058b101018e59b801
ff85b800441db9000900035f5e2db8000b2c2020456944b001602db8000c
2cb8000b2a212db8000d2c2046b003254652582359208a208a49648a2046
20686164b004254620686164525823658a592f20b00053586920b0005458
21b040591b6920b000545821b0406559593a2db8000e2c2046b004254652
58238a592046206a6164b0042546206a61645258238a592ffd2db8000f2c
4b20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b
2159592db800102c2020456944b001602020457d691844b001602db80011
2cb800102a2db800122c4b20b003265358b0801bb040598a8a20b0032653
582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0
032653582321b801408a8a1b8a235920b80003265358b0032545b8018050
582321b8018023211bb003254523212321591b2159442db800132c4b5358
45441b2121592db800142c4bb800095058b101018e59b801ff85b800441d
b9000900035f5e2db800152c2020456944b001602db800162cb800152a21
2db800172c2046b003254652582359208a208a49648a204620686164b004
254620686164525823658a592f20b00053586920b000545821b040591b69
20b000545821b0406559593a2db800182c2046b00425465258238a592046
206a6164b0042546206a61645258238a592ffd2db800192c4b20b0032650
585158b080441bb04044591b21212045b0c05058b0c0441b2159592db800
1a2c2020456944b001602020457d691844b001602db8001b2cb8001a2a2d
b8001c2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a
8a1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db8001d2c4b535845441b2121592d0001000000010000d9c6653f
5f0f3cf5011103e800000000b643600000000000cb98044efc49fe1f05a6
04350000000900020001000000000001000003b8ff2b001c05dcfc49fe80
05a600010000000000000000000000000000085801f40033000000000116
000001160000000000000116000001160000000000000103004a01aa006d
022c0022022c001903e8005c02760021011600690103002f0103fff70160
001802580030011600530185003201160053014dffef022c002a022c0057
022c0018022c001d022c001c022c0023022c0026022c0032022c0028022c
002201160053011600530258002e025800300258002e022c00360320002a
0288fffa02ad004e02d2002b02c0004e0263004e023e004e02f7002b02d2
004e0103005202070016029b004e022c004e0367005002d2004d02f80026
0288004e02f8002602ad004e02880025023e000202d2004a02630000039e
000c02630000028800020263001601030048014dffef0103000002580032
01f4000000deffea02190024025100430219002402510024021900240128
000c023e0024022c004000de004500defff30207004500de004503550040
022c0040023e00240251004302510024014d003d01f4001f013b0009022c
004001f4000e02f600110206000901f4000801e00016014d003000de004d
014d0018025800450288fffa0288fffa02d2002b0263004e02d2004d02f8
002602d2004a021900240219002402190024021900240219002402190024
021900240219002402190024021900240219002400de003200deffea00de
ffda00deffe5022c0040023e0024023e0024023e0024023e0024023e0024
022c0040022c0040022c0040022c0040022c002a01900038022c002e022c
002f022c002301f4004802580030022c0040032000180320001803de0040
00de003200deffe502580030039efffa02f8002502e8001a025800300258
003002580030022c0000022c0040021600230240000002ee004e026e001e
01570000017a00190180001902e4003203660024023e0022022c00440103
004a0258003002180000022c0003025800240288fff901cf003201cf0041
03e8006f011600000288fffa0288fffa02f8002604320026037b002401f4
000003e8008201aa004201aa004201160054011600530258003002580056
01f400080288000200a7ff5b022c000d01030032010300390206000c0206
000c022c002a0116004b0116005301aa0042047c00480288fffa0263004e
0288fffa0263004e0263004e010300450103ffed0103fff80103fffd02f8
002602f800260316003302f8002602d2004a02d2004a02d2004a00de0045
00deffda00deffc700deffc600deffd400de004200deffff00de000500de
ffd100de004c00deffda02e40032022c0019022c000000de000003420031
03420024014d0042025800470288004e00de004d02c00008034200240258
0030023e002402510043014d000e014d0004028800250288000202630016
01f4001f01f4000801e000160000ff0f0000ff570000feff0000feec0000
feeb0000fef90000ff670000ff0a0000ff240000fef60000feff0000ff2a
0000ff710000fea50000000000deffe000deffd802e70026032300260282
00240263001601e00016022300200263004e0263004e02ee000202260054
02ce002602880025010300520103fff7020700160451fff60464004e02ee
0001029b004e02da004e0263000102c8004e0288fffa02a3004e02ad004e
0226005402d900090263004e03f3fffd028e002502da004e02da004e029b
004e02bffff60367005002d2004e02f8002602c8004e0288004e02d2002b
023e0002026300010335001e0263000002d0004e0292002f041b004e0430
004e030a00020368004e028d004e02ce002603fc004e029f000002190024
023d0032021c004001a80042024d000302190024030f000001fa001e0236
004002360040020e00400233000002b0004002300040023e002402260040
025100430219002401cf000401f40008032000280206000902340040020b
002e03290040033f00400269000302c40040021600450219002103060040
0218000302190024021900240236ffeb01a800420219002401f4001f00de
004500deffe500defff3036f0000036c00400236ffeb020e004002360040
01f400080226004002da00000245fffc03a7003f02d9003202f80026023e
0024029b00000212000e02da000a023500000226005401a8004202630016
01d700140402fffd031d0000028e002501fa001e02ac004e021c0040029e
004e02270040031800020266000302e3004e0246004003f7004e03010040
02d2002b021900240288000201f400080288000201f4000802750000020e
000902a3002f0221002e0292002f020b002e0299004e022c004001030052
03f3fffd030f00000288fffa021900240288fffa02190024039efffa0366
00240263004e0219002402e700260223002003f3fffd030f0000028e0025
01fa001e02da004e0236004002da004e0236004002f80026023e002402f8
0026023e00240263000101f400080263000101f400080263000101f40008
0292002f020b002e036d004e02c40040040b00520288fffa0219002402d2
002b021900240263004e0219002402d2004d022c00400288002501f4001f
0263001601e000160263001601e000160288fff90288fff90288fff9039e
fff902d2002b02d2002b02d2002b02c0004e02c000080263004e0263004e
0263004e0263004e02f7002b02f7002b02f7002b02f7002b02d2004e02d2
004e0103ffe60103ffd90103ffd8010300520103002802070016029b004e
022c004e022c004e022c004e022c004e02d2004d02d2004d02f8002602f8
002602f8002602f8002502ad004e02ad004e02ad004e0288002502880025
02880025023e0002023e0002023e0002023e000202d2004a02d2004a02d2
004a02d2004a02d2004a02d2004a039e000c039e000c039e000c039e000c
028800020288000202190024021900240219002403660024021900240219
002402190024025100240256002402190024021900240219002402190024
023e0024023e0024023e0024023e0024022c00400231ffef00deffd400de
ffc600deffc600de001100defff200deffd9020700450202004000de0041
012e004500de003801560045022c0040022c004002970012023e0024023e
0024023e0024023e0022014d003d014d002d014d003001f4001f01f4001f
01f4001f013b0009013b0009013b0009013b0009022c0040022c0040022c
0040022c0040022c0040022c004002f6001102f6001102f6001102f60011
01f4000801f400080302005201b600450241000c031f000c031f000c00de
ffe900de003200deffd900deffd900de005000deffc600deffe400deffc5
00deffc500deffd300defffe00deffd000de004201160051011600530185
00320116004b00a7ff5a0342002e034200380342001b0342002b03420031
0342004c0288fffc022c004301f4004802f8002c022c004002d2004d0206
000c0206000c0185003203e80064022c003601720022017200190172001f
017200230172002b01720021017200220190002900fa00230190002900be
002600be00070172002a017200220172003b0172001f0172001d01720019
0172001f017200230172002b01720021017200220190002900fa00230190
002900be002600be0007034200230320001800de003000de001801160053
00f1005800f10058014cfffb028f00000116005302f2000b0361000b018a
000b0361000b034a000b0364000b00edffd00288fff902ad004e0228004e
0263004e0263001602d2004e02f8002601030052029b004e0265fff90367
005002d2004d023a002502f8002602cb004e0288004e0262002a023e0002
02880002030900260263ffff033b00470103fff702880002024b002401e5
001f022d004000ed0045020f003c024b00240234004301d1000e022a0024
01e5001f01b10026022d00400216002400ed0045020200400206000c01e4
000e01a90026023e0024023a003c020100240235002401c40003020f003c
02cc002001c1fff60296004002cf002400edffe5020f003c023e0024020f
003c02cf002400de004000de0053022c0000022c001e0000feb500d0ffee
0116000e022c002301f4001c022c00280000fea60000fe3e0000fe4f0000
fe6c0000feb50000feb50000feb50000feb50000fe430000fed10000fe9e
0000fe4f0000fe870000fe870000fe4d0000febc0000fe6c0000fe840000
fed10000fe580000fe580000fe4f0000fe4f0000fe3f0000fe4d0000fe3e
0000fe3f0000fe4d0000fe3e0000fe3e0000feb00000fe3e0000feb50000
fe4f0000fe510000fe9e000000000116000d022c004003410040014d0042
03410040014d0043014d0042020900280209002900fb00420193ffff0116
000b0116000b01f4000502d2000801f4000a022c004c022c004d022c004c
01f4003e024b001c024b001c02d2002b02d2001002370024029b0055029b
002f01f40020023e001c035e005302ba003e02f300280104005901af0059
0116005f0238001501f4001d00960028014d005e014d005f05620007029b
0074014300740219fffb020b005e020b005f02a2005e02a2005f014d002a
01430074014d002a01620050008b00000000000000000000000000000000
000000000000000000000000000001f4000003e800000116000003410000
014d00000116000000a70000022c00000069000001160000000000000000
00000000000000000000002c0000000f0000014dfffc01ae0059014d002a
014d00030219003802190038029b000f02630055022c00230379002702a4
001d0000feb70000feb70000feb70000feb70000fe6e0000fe730000fed3
0000fe700000fe810000fe7a0000fe760000fe7f0000fe3a0000feaa0000
fead0000fe710000fe720000fe4d0000fe530000fe6a0000fe6a0000fe6a
0000fe6b0000fe6b0000fe4f00a7002f0136002f0462003603f30036029b
004c01160062022c00620341006203b10062029b001903b1001904c70019
05dc001903b10062029b001503b1001504c70015022c004c02d2002c02d2
00510341004a00de004001bc0040029b004002d2004001f4000502d20005
03b00005048f000502d2004001f4000502d2000503b0000500de004301f4
001d022c001b0341004004d300390446002703d6001b03d5003402c30037
0173002b045900370363003402c00029029b000f022c0028011600030116
0000030a0027022c001d02d20053022c003e02d20053022c003e02d20053
022c003e02d20053022c003e02d20053022c003e029b000f022c0028029b
000f022c002803e8000803790024030a0030022c001e029b004c01f4003e
030a0027022c001d030a0027022c001d00deffe004c900290463003603e6
001b030a003002d2004c022c0040029b000f022c0028029b000f022c0028
029b0055022c0023029b0055022c00230116ffba00deff9d0116fffc00de
ffd6030a0027022c001d030a0027022c001d02d20058014dffeb02d20058
014d002702d20053022c003e02d20053022c003e02d2004f022c0040029b
000f022c0028029b0055022c0023030a0027022c001d030a0027022c001d
030a0027022c001d030a0027022c001d029b001501f4000a014d0026029b
000f022c0028029b004a022c003a029b004a022c003a029b004a022c003a
02d2002c01f4001d02d20051022c001b02d20051022c001b02d20051022c
001b02d20051022c001b02d20051022c001b029b0055022c0023029b0055
022c0023029b0055022c0023029b0055022c0023029b0055022c00230263
00550116000e030a0030022c001e02d2004f022c004002d2004f022c0040
02d2004f022c004002d2001c022c000d02d2004f022c00400116fff600de
ffd0011600130116000b029b004c01f4003e029b004c01f4003e029b004c
01f4003e022c004c00de0043022c004c00deffd0022c004c00deffdb022c
004c00deffe10341004a034100400341004a034100400341004a03410040
02d2004c022c004002d2004c022c004002d2004c022c004002d2004c022c
0040030a0027022c001d030a0027022c001d030a0027022c001d030a0027
022c001d029b0055022c003a029b0055022c003a02d20058014d004302d2
0058014d004002d20058014d002402d20058014d000c029b002f01f40020
029b002f01f40020029b002f01f40020029b002f01f40020029b002f01f4
0020026300100116000b026300100116000b026300100116fff102630010
0116fff402d20053022c003e02d20053022c003e02d20053022c003e02d2
0053022c003e02d20053022c003e029b001901f40005029b001901f40005
03b0001202d2000903b0001202d20009029b001501f40005029b001501f4
0005029b001501f4000a0263001701f400190263001701f4001902630017
01f40019022c00400116000802d2000901f4000a0116000e029b000f022c
0028029b000f022c0028029b000f022c0028029b000f022cffe6029b000f
022c0028029b000f022c0028029b000f022c0028029b000f022c0028029b
000f022c0028029b000f022c0028029b000f022c0028029b000f022c0028
029b0055022c0023029b0055022c0023029b0055022c0023029b0055022c
0023029b0044022cfff8029b0055022c0023029b0055022c0023029b0055
022c0023011600550116004b0116006100de0040030a0027022c001d030a
0027022c001d030a0027022c001d030a0027022cffec030a0027022c001d
030a0027022c001d030a0027022c001d0379002702a4001d0379002702a4
001d0379002702a4001d0379002702a4001d0379002702a4001d02d20053
022c003e02d20053022c003e035e005302ba003e035e005302ba003e035e
005302ba003e035e005302ba003e035e005302ba003e029b001501f4000a
029b001501f4000a029b001501f4000a02de002f01fd0011010bffe3010b
00050000fe950116005600b2004200b200420000fe870000fe8700b20042
015d000d0152000d0179004201800042010b0016010b00170186004201a7
00360190004201a700360300002e030afff8022c00740342004c03420074
022cffeb02d2fff9022c00400341004001ec004c0223004b01c8002c0217
002d030a0027014d000f03cc001203cc00120000fca50000fd170000fd17
0000fd150000fd1502ef002f022c00270318002602350025022c0012022c
001d025b0040025f001b022c00380250001b025d001e022c003f025d003f
010b004103b0002301b90042014d0041025b001d024e00180286001803a3
001b02a0000b0210000b02d6000e02530043024e004300d0004300d00043
00de005300bf003b014d005e014d001c00bf003b014d0004014d005e014d
001c00d0004300d00043014d000f014dfffc0116002001160020006ffff7
00a7002200a7002100dd00210169000400fa000501160026011600270124
0007012400070124001201240012014d002a012400160124001601240016
00fa001000fa0003006f00210124001c0116000401240012012400120124
000701240007014d003b011600270000fe700000fe5b0000fe5b0000febf
0000febf0000fe300000fe300000fddc0000fe5b0000fe300000fe700000
fe6b0000fe6b000000000116000000000000000000000000000001850026
018500260358005e03cc00120116006f0458004c03cc001203790066036c
000d0116003e0116003e0000000000000000000000000000000000000000
00000000032a001c030a0030022c004c022c004c029b001502ee00170395
000803cd002b0342002c02d2002c029b002b026400370337000e029b0055
022c003a029b0055022c003a02630001030a00270254004f011a001101aa
000802d20027015500110193ffff022c004c022c004c00de001500de0015
022c001e0263002c0263002c0263002c0263002c0263002c0263002c0263
002c0263002c02cf002c02c8002c03a0004203a5004203a5004203b00042
03ce003603b90036022c003a022c003a022c003a022c003a022c003a022c
003a034d0042034d004204210042042b004204140042041b00420263001d
0263001d0263001d0263001d0263001d0263001d0263001d0263001d0384
0042038400420458004204620042044c0042045200420479003604790036
0116005601160056011600200116001c0116001e0116001e011600110116
001101c8004201c80042029b004202a60042028f00420296004202bd0036
02bd003602630036026300360263003602630036026300360263003603bc
004203bc0042048f0042049a004204830042048a00420263005a0263005a
0263005a0263005a0263005a0263005a0263005a0263005a034d0042042b
0042041b00420442003602f6003402f6003402f6003402f6003402f60034
02f6003402f6003402f6003403b2004203b200420486004204900042047a
00420480004204a7003604a700360263002c0263002c022c003a022c003a
0263001d0263001d011600560116005602630036026300360263005a0263
005a02f6003402f600340263002c0263002c0263002c0263002c0263002c
0263002c0263002c0263002c03f0002c03ee002c04ac004204ce004204a3
004204b1004204cc003604ca00360263001d0263001d0263001d0263001d
0263001d0263001d0263001d0263001d049a0042049a0042056e00420578
00420561004205680042058f0036058f003602f6003402f6003402f60034
02f6003402f6003402f6003402f6003402f6003404c8004204c80042059c
004205a60042058f00420596004205bd003605bd00360263002c0263002c
0263002c0263002c0263002c0263002c0263002c029b000d029b000d0320
0016031d001703be000d0263001d0263001d0263001d0263001d0263001d
03420016034000170355001603490017040000560116ffe80116ffe80116
ffe70116ffed0116ffee0116ffe30116fff10116fff701980016019a0017
0263005a0263005a0263005a0263005a02630053026300530263005a0263
005a029b0014029b00140344001603740017034d004202f6003402f60034
02f6003402f6003402f600340397001603ae001703b2001603be00170423
002e0248001202660088026d004f0171000d0155001102d2002c030a0027
00de0010029b005502d2004f0000fea102990033022c001b03a3002c0386
00220342001e0342001e0342001c03f9006602df00430340003e02d20046
029b000f01f4000503b6006602d60043025e001b015d001202db000b02b3
001b02d20058022c002801860000025e004f01ea004f0312004f02590040
029b004c01f4003e0263001701f40019026d001501fd001c025e005c01b4
0047038e001c02b90013038e001c02b9001303a3002302c8001b02de0054
02350047022c002802980054029800540412002102de0013029b0019024d
000501f4001d0298003801f9002302e70013024000120116005c02a60016
01fd0012029b0019029b000f02d2002c01f4001d022cfff40263001000de
001e0155001102630010029b0055022c004c022c004c029b0055022c0023
021e001100deffed02d2005300d0001000d00010014d0019014d0019014d
001c014dfff50116006f014d001d014d001d02af002c0248001202480039
0116006f0248001202ae0025024800390116006f0116006f030a003701fd
001f01fd001f029b0055022c003e02d2002c0341004a02dd004a02bd0022
02d2002c02d2002c02d2002c01f4001d01f4001d01f4001d022c001b02d4
0017034f0016030d00170186000d0304000c0266001802360022014d005d
014d005d014d005d014d005d0134001d0134001d019c0000019c0000019c
0000019c0000019c00000236000901f0000f02220029020e0040020e0040
0176002d019e00090339001c0318001e028500170000fc49035c00110266
001000ea002500ef002500aa001200aa000500c8001500c700090175000b
0179000b012c00090124000901240009015c002500e6000300e6000303dd
001c04a20025047d0024047d0001009a0025021e001102b4000202b40006
0251000a0214000c00e6000300e6000301f3001e01f3001e01f6001c01ad
00050226001d0000fdc90000fe6a0000fe100000fe3f0000fe3f0000fd42
0000fe790000ff4f0000fe510000fe340000fd170000fe5a0225001a0225
001101f4001901f4001203a5000b0219000d01e9000e027e001903170018
0256001901f6000a02e1000a02e1000a02e1000a03e8fff603e8fff603e8
01cf03e801bb03e801cf03e801bb03e8fff503e8fff503e801cf03e801bb
03e8fff503e8fff503e80000006f002001160014011600120116000f00fa
00030116001202d2002c030a003002d2002c022b00110299001402630010
029b000f025a001402d00026025e002602d2002c0341004002d70018031f
001b03fe001a029900330299003301c3001f01b5001d01c3001f01b5001d
01c3002901b6001d01c3002901b6001d016d002901690029016900290169
0029016d0029016d0004016900000169000001690000016d000401a70029
01a7002901a7002901a7002901a7002901380000018e002201ce001301d6
000502760018033a001401bd003e0000fe330000fe330000fe2c0000fe2c
0000fe2c0000fe2c0000fe0c0000fe0c0000feaa0225001101f4001204fe
00270420001d020e0040020e0040020e0040018b001c018b001c01a10014
02770019018b0029018b0014018b0019018b00190172001c0172001c018b
0015009e002e0163002c024f002e018b002e018b001501630014018b0013
018b0015018b002900c50008018b002c01af001b024f002e0163000401b2
003e018b000601b20024025f00260306001502510019022c001c022c001d
0264001b0262001c026e001c03a1001e018b0005009e002e00ec002f018b
002c0163000401b2003e018b000601b2003b018b00050209002802d10008
00de004002220029037000160351001a025c000d026e000d016300060266
000d018e0006016400050165000600de0053014d0026028f003c0256000e
017f004602aa004a04460011022c001f01670019022c001f022c0018022c
0019022c0020022c0026020b0015022c0020022c002401db000401db0004
01db0004018e001b02ac0023030e0023023f001b029f000e031100050209
00080282001c03f3002c0296001403ad001701e5001b025f001b045f0014
03e6ffec02a70027028100100307002b03c6001b0229001d0379fffe0369
002b0377001b0296001002f7fff10323002b023f000a0323002b03e70018
02c5001402610018029400080357002b02be001104e7002b0363001003ef
0000045b002b022d0024034e001c047700200267001502b1001b02250000
02b7001002ce001c0209001c03e200020261002f02e40007033200100332
00100311000502310025037f002602f90010028b001b028b001b02e1002b
02c7000a039a0005025d001c02e5002b0375000a030b0014030d001b02b0
00200349002b036b002b049b00140323002b039700230265002b0265002b
04e3002702d2ffff0359000602c50014035a002b0293001c0315001c02ce
001c02b3000c02ea001b0400002b0288fffa02d2004a029b000f015e0049
0208001b01d00034023e0037024a002703b50024020000340220002a02d9
002503be00210251002501e4001d0496002401f1002a0200002603620024
0204001f021b0027033e002401ee00260307002f03480023030d00210200
00250320002201d4001e0212001e01df00280234002101fd002401ff0022
023e001c01f1002b0315001601db002e02a0002a023d00180222002a01e9
001e02240029034d00240216007800000000000000640000006400000064
000000640000006400000064000000640000006400000064000000640000
006400000064000002e8000002e8000002e80000037c0000041400000414
000004140000047000000494000004c8000004c8000006200000066c0000
077c00000948000009d4000009d4000009d4000009d400000bf000000bf0
00000bf000000bf000000bf000000c2c00000c2c00000c2c00000c2c0000
0c2c00000c2c00000c2c00000c2c00000c2c00000c2c00000d4c00000dc4
00000df800000e6800000e6800000e6800000efc00000efc00000efc0000
0efc00000efc00000efc00000efc00000efc00000efc00000efc00000efc
00000efc00000efc00000efc00000efc00000efc00000efc00000efc0000
0efc00000efc00001078000010780000115c000012980000136800001368
000014cc000014cc00001520000015200000152000001520000016540000
16e4000018240000195400001954000019b000001af800001b9c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c0000
1c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c000100000858009600090021000200020000
0000001e000002000428000100010000002301aa00010000000000000212
00000001000000000001000e021200010000000000020007022000010000
00000003002302270001000000000004000e024a00010000000000050007
02580001000000000006000d025f000100000000000700e4026c00010000
0000000900160350000100000000000a01330366000100000000000b0018
0499000100000000000c002504b10001000000000100000d04d600010000
00000101001404e30001000000000102000904f700010000000001030010
050000010000000001040012051000030001040400020006052200030001
04060002000e05280003000104070002000c053600030001040900000424
05420003000104090002000e096600030001040b00020010097400030001
040c0002000c09840003000104100002001009900003000104110002000a
09a00003000104120002000609aa0003000104130002001009b000030001
04140002000c09c00003000104160002000c09cc0003000104190002000e
09d800030001041d0002000c09e60003000108040002000609f200030001
0c010002000809f8000300010c0a0002000c0a00436f7079726967687420
28632920313938312c20313938322c20313938332c203139383920616e64
20313939332c204c696e6f74797065204c69627261727920476d6248206f
722069747320616666696c6961746564204c696e6f747970652d48656c6c
20636f6d70616e6965732e20416c6c207269676874732072657365727665
642e0a0a546865206469676974616c6c7920656e636f646564206d616368
696e65207265616461626c6520736f66747761726520666f722070726f64
7563696e672074686520547970656661636573206c6963656e7365642074
6f20796f75206973206e6f77207468652070726f7065727479206f662048
656964656c62657267657220447275636b6d61736368696e656e20414720
616e6420697473206c6963656e736f72732c20616e64206d6179206e6f74
20626520726570726f64756365642c20757365642c20646973706c617965
642c206d6f6469666965642c20646973636c6f736564206f72207472616e
7366657272656420776974686f7574207468652065787072657373207772
697474656e20617070726f76616c206f662048656964656c626572676572
20447275636b6d61736368696e656e2041472e0a0a436f70797269676874
2028632920313938382c20313939302c20313939332041646f6265205379
7374656d7320496e636f72706f72617465642e20416c6c20526967687473
2052657365727665642e48656c766574696361204e657565526567756c61
7248656c766574696361204e6575653b20382e30643665313b2032303132
2d30332d323748656c766574696361204e657565382e306436653148656c
7665746963614e6575652248656c766574696361204e6575652220697320
612074726164656d61726b206f662048656964656c626572676572204472
75636b6d61736368696e656e2041472c207768696368206d617920626520
7265676973746572656420696e206365727461696e206a75726973646963
74696f6e732c206578636c757369766c79206c6963656e73656420746872
6f756768204c696e6f74797065204c69627261727920476d62482c206120
77686f6c6c79206f776e65642073756273696469617279206f6620486569
64656c62657267657220447275636b6d61736368696e656e2041472e4c69
6e6f747970652044657369676e2053747564696f48656c76657469636120
284c6174696e20666f72205377697373292068617320746865206f626a65
637469766520616e642066756e6374696f6e616c207374796c6520776869
636820776173206173736f63696174656420776974682053776973732074
79706f67726170687920696e2074686520313935307320616e6420313936
30732e204974206973207065726665637420666f7220696e7465726e6174
696f6e616c20636f72726573706f6e64656e63653a206e6f206f726e616d
656e742c206e6f20656d6f74696f6e2c206a75737420636c656172207072
6573656e746174696f6e206f6620696e666f726d6174696f6e2e2048656c
766574696361206973207374696c6c206f6e65206f662074686520626573
742073656c6c696e672073616e732d736572696620666f6e74732e687474
703a2f2f7777772e4c696e6f747970652e636f6d2f687474703a2f2f7777
772e6c696e6f747970652e636f6d2f666f6e7464657369676e657273536d
617274205377617368657341726368616963204c6f6e6720732053776173
684c6967617475726573436f6d6d6f6e204c69676174757265734f707469
6f6e616c204c69676174757265736a196e969ad4004f007200640069006e
00e60072004e006f0072006d0061006c0043006f00700079007200690067
00680074002000280063002900200031003900380031002c002000310039
00380032002c00200031003900380033002c002000310039003800390020
0061006e006400200031003900390033002c0020004c0069006e006f0074
0079007000650020004c00690062007200610072007900200047006d0062
00480020006f0072002000690074007300200061006600660069006c0069
00610074006500640020004c0069006e006f0074007900700065002d0048
0065006c006c00200063006f006d00700061006e006900650073002e0020
0041006c006c002000720069006700680074007300200072006500730065
0072007600650064002e000a000a00540068006500200064006900670069
00740061006c006c007900200065006e0063006f0064006500640020006d
0061006300680069006e00650020007200650061006400610062006c0065
00200073006f00660074007700610072006500200066006f007200200070
0072006f0064007500630069006e00670020007400680065002000540079
00700065006600610063006500730020006c006900630065006e00730065
006400200074006f00200079006f00750020006900730020006e006f0077
0020007400680065002000700072006f007000650072007400790020006f
0066002000480065006900640065006c0062006500720067006500720020
0044007200750063006b006d00610073006300680069006e0065006e0020
0041004700200061006e006400200069007400730020006c006900630065
006e0073006f00720073002c00200061006e00640020006d006100790020
006e006f007400200062006500200072006500700072006f006400750063
00650064002c00200075007300650064002c00200064006900730070006c
0061007900650064002c0020006d006f006400690066006900650064002c
00200064006900730063006c006f0073006500640020006f007200200074
00720061006e007300660065007200720065006400200077006900740068
006f00750074002000740068006500200065007800700072006500730073
0020007700720069007400740065006e00200061007000700072006f0076
0061006c0020006f0066002000480065006900640065006c006200650072
00670065007200200044007200750063006b006d00610073006300680069
006e0065006e002000410047002e000a000a0043006f0070007900720069
006700680074002000280063002900200031003900380038002c00200031
003900390030002c00200031003900390033002000410064006f00620065
002000530079007300740065006d007300200049006e0063006f00720070
006f00720061007400650064002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00520065
00670075006c00610072004e006f0072006d00610061006c0069004e006f
0072006d0061006c005200650067006f006c00610072006530ec30ae30e5
30e930fcc77cbc18ccb40052006500670075006c006900650072004e006f
0072006d0061006c004e006f0072006d0061006c041e0431044b0447043d
044b0439004e006f0072006d0061006c5e3889c44f5306390627062f064a
004e006f0072006d0061006c0000b800142bb8000a2bb800002b00>
[7229 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> BDHQMX+HelveticaNeue AddT42Char 
1 100 12 <0005005cffeb038c02d200130027003b004f00530197ba0000001400032b
ba001e000a00032bb8001e10ba0028003c00032bb8002810ba0046003200
032bb8004610411b00060000001600000026000000360000004600000056
00000066000000760000008600000096000000a6000000b6000000c60000
000d5d410500d5000000e5000000025d411b0006001e0016001e0026001e
0036001e0046001e0056001e0066001e0076001e0086001e0096001e00a6
001e00b6001e00c6001e000d5d410500d5001e00e5001e00025d410500da
003200ea003200025d411b00090032001900320029003200390032004900
32005900320069003200790032008900320099003200a9003200b9003200
c90032000d5d410500da003c00ea003c00025d411b0009003c0019003c00
29003c0039003c0049003c0059003c0069003c0079003c0089003c009900
3c00a9003c00b9003c00c9003c000d5dba005100140046111239ba005300
140046111239b80055dc00b800502fb800512fba0037004100032bb80037
10ba0023000500032bb8002310ba000f001900032bb8000f10ba004b002d
00032bb8004b10303113343e0233321e0215140e0223222e0227141e0233
323e0235342e0223220e0201343e0233321e0215140e0223222e0227141e
0233323e0235342e0223220e0213013301a70613221c1d2112050613221d
1c2112054b11263e2d2c3c27110f253d2f2e3e261002390613221c1d2112
050613221d1c2112054b11263e2d2c3c27110f253d2f2e3e26108cfde656
021901fc17332b1d1d2b331617342b1c1d2b33142948361f223749272949
3620213849fe9917332b1d1d2b331617342b1c1d2b33142948351f213749
272949362021384901effd1902e7>BDHQMX+HelveticaNeue AddT42Char 
1 744 15 <0001002fff3b010d02db000f005dba0004000b00032bb8000410411b0006
000400160004002600040036000400460004005600040066000400760004
008600040096000400a6000400b6000400c60004000d5d410500d5000400
e5000400025d00b800072fb800002f303117332e0135343637230e011514
1e02cc41473d3c48414e4f16293ac573e27e7be07267f0764278726f>BDHQMX+HelveticaNeue AddT42Char 
1 892 16 <0001fff7ff3b00d402db000f0061ba0004000d00032bb8000410410500da
000d00ea000d00025d411b0009000d0019000d0029000d0039000d004900
0d0059000d0069000d0079000d0089000d0099000d00a9000d00b9000d00
c9000d000d5db80011dc00b800092fb800002f303107333e0135342e0227
231e0115140609404e4f16293a2440463d3cc567ef764278736f3873e37e
7ae1>BDHQMX+HelveticaNeue AddT42Char 
1 1044 19 <00010053ff6e00c2006f000c002dba000c000000032bb8000c10b8000010
b80007d0b800072fba00080000000c11123900b800082fb800002f303137
1533160e0207153e013d01533b01050e17113a346f6f0c1c1b1706321152
3965>BDHQMX+HelveticaNeue AddT42Char 
1 1136 20 <0001003200ee0153013e0003000b00ba0000000100032b30311315213532
0121013e5050>BDHQMX+HelveticaNeue AddT42Char 
1 1172 21 <00010053000000c2006f0003001bba0003000000032bb800031000ba0000
000100032bb8000010303137153335536f6f6f6f0000>BDHQMX+HelveticaNeue AddT42Char 
1 1224 23 <0002002afff5020202c50017003300cbb800342fb800352fb8003410b800
18d0b800182fb80000dc411b000600000016000000260000003600000046
0000005600000066000000760000008600000096000000a6000000b60000
00c60000000d5d410500d5000000e5000000025db8003510b80026dcb800
0edc410500da000e00ea000e00025d411b0009000e0019000e0029000e00
39000e0049000e0059000e0069000e0079000e0089000e0099000e00a900
0e00b9000e00c9000e000d5d00ba0013001f00032bb8001310ba002d0007
00032bb8002d10303113343e0433321e0415140e0223222e0227141e0433
323e0435342e0423220e0484010911213224243221110901051b3c36363c
1b055a04101e344f37384e341e100404101e344f37374f341e1004015d1a
3f3f3c2d1c1c2d3c3f3f1a2863573c3c57632727545047361f1f36475054
2727545048362020364850540000>BDHQMX+HelveticaNeue AddT42Char 
1 1568 24 <000100570000016402c5000a0023ba0001000900032bb800011000b80001
2fb800002fba0007000800032bb800071030312111230e03231533110164
410726374424b802c528341e0b44fe04>BDHQMX+HelveticaNeue AddT42Char 
1 1916 26 <0001001dfff501fe02c5003e0123ba0010001100032bb8001010ba001b00
0800032bb8001b10410500da000800ea000800025d411b00090008001900
080029000800390008004900080059000800690008007900080089000800
99000800a9000800b9000800c90008000d5dba001f0011001b111239ba00
220008001b111239b800222fba002c00110010111239b8002c2fb8002ddc
b8002210b80035dc410500da003500ea003500025d411b00090035001900
350029003500390035004900350059003500690035007900350089003500
99003500a9003500b9003500c90035000d5db8001b10b80040dc00ba000d
001600032bb8000d10ba0027003200032bb8002710ba003a000300032bb8
003a10b8000310b80001d0b800012fba001f0003003a111239b8003a10b8
003dd0303113153633321e0215140e022322262723061e0233323e023534
2627353e0135342e0223220e020733343e0233321615140e022b01222322
da181b20372818192a381f494c025501213e5836325942273f412a38213a
4f2e3551361d02551021332236481625311b120505040195480311233321
20332313574537563b1e1b365135405e0e02134a3031482e17223c54331f
382a1939391c2c1d0f00>BDHQMX+HelveticaNeue AddT42Char 
1 2516 31 <00030028fff5020402c5000f002f00410161ba0030001600032bb8003010
ba0026000800032bb8002610411b00060030001600300026003000360030
00460030005600300066003000760030008600300096003000a6003000b6
003000c60030000d5d410500d5003000e5003000025dba00100016003011
1239b800102fb80000dc410500da000800ea000800025d411b0009000800
190008002900080039000800490008005900080069000800790008008900
080099000800a9000800b9000800c90008000d5dba003a00080026111239
b8003a2f410500da003a00ea003a00025d411b0009003a0019003a002900
3a0039003a0049003a0059003a0069003a0079003a0089003a0099003a00
a9003a00b9003a00c9003a000d5db80020dcba001300160020111239ba00
2300160020111239b80043dc00ba003f001b00032bb8003f10ba002b0005
00032bb8002b10ba000b003500032bb8000b10ba00130035000b111239ba
00230035000b111239303113343e0233321615140623222e02271416170e
0115141e0233323e02353426273e0135342e0223220e0213343e0233321e
0215140e022322269b14212e19344342331a2e22145a362d3c4025415833
31563f253e402d351833523a294b3a22411729371f1e3528171527352042
55020d1b281c0e3736363c0e1c2b20305112155d3f3651361a1c37503442
5b14144f302241331f182e43fe8c1f3224131524311d1e32251549000000
>BDHQMX+HelveticaNeue AddT42Char 
1 3056 36 <0002003000760228018400030007001700ba0000000100032bba00050004
00032bb800051030313715213d0221153001f8fe08ba4444864444000000
>BDHQMX+HelveticaNeue AddT42Char 
1 3524 48 <00010052000000b102ca00030017ba0003000000032bb800031000b80001
2fb800002f303113113311525f02cafd3602ca000000>BDHQMX+HelveticaNeue AddT42Char 
1 3576 49 <00010016fff001b902ca0015002bba000c000d00032bb8000c10ba000100
0200032bb800011000b800012fba0006001100032bb80006103031251123
11140623222e023d012315141633323e0201b95f3141232d190a5f6c643c
513115b20218fdf63b461526341f1e2c666921374600>BDHQMX+HelveticaNeue AddT42Char 
1 3836 72 <00020024fff5020a02110030004200c3ba003c002400032bb8003c10ba00
07001a00032bb8000710411b0006003c0016003c0026003c0036003c0046
003c0056003c0066003c0076003c0086003c0096003c00a6003c00b6003c
00c6003c000d5d410500d5003c00e5003c00025dba00110024003c111239
b800112fb80012dcb8001a10b8002cd0b8002c2fb8001a10b80031d0b800
312fb8000710b80044dc00ba0037002900032bb8003710ba000c00150003
2bb8000c10b8003710b80003d0b8000c10b80012dcb8002910b8002fd030
312535062322263511342e0223220e0207333e0133321e0215140e02070e
0315141e0233323637141633320315140e0223222e0235343e04020a0f0b
1407223845232b4e3c240255034836142921151c303f23213f311e1b2f3e
23365d232721277412263c2a13251b111d2e3a39340242051c1e010a2d38
1f0a1229423039290612221c18190d0707061223382c2737230f252a2a25
0116571229231708121d1520251409070b000000>BDHQMX+HelveticaNeue AddT42Char 
1 4216 74 <00010024fff501fa021100230079ba001c000b00032bb8001c10411b0006
001c0016001c0026001c0036001c0046001c0056001c0066001c0076001c
0086001c0096001c00a6001c00b6001c00c6001c000d5d410500d5001c00
e5001c00025d00ba0017001000032bb8001710ba0006002100032bb80006
10b80000dcb8001010b80014dc303101332e0323220e0215141e02333236
37230e0123222e0235343e02333216019f5805263b4d2c3d5c3d1e1f3d5b
3b63730e5708473f283a241110253e2e3640015f2e432c152b4b653a3a61
462668603c42203544242749382236000000>BDHQMX+HelveticaNeue AddT42Char 
1 4444 75 <00020024fff5020e02ca0013002c00bbb8002d2fba0015001600032bb800
1510b8002d10b80022d0b800222fb80000dc411b00060000001600000026
000000360000004600000056000000660000007600000086000000960000
00a6000000b6000000c60000000d5d410500d5000000e5000000025db800
1610b8000ad0b8000a2fb8001610b80018d0b800182fb8001610b8002ad0
b8002a2fba002b00220015111239b8001610b8002cd000b800152fba000f
002700032bb8000f10ba001d000500032bb8001d10303137343e0233321e
0215140e0223222e0205112311232e0323220e0215141e02333236373315
7e10243c2b2c3e271211263c2b293d2713019055020e292e2e143b593b1d
1e3b593c365a1502fe264838222136472624463722203645da02cafef617
1f13082b49623737624a2c262b460000>BDHQMX+HelveticaNeue AddT42Char 
1 4760 76 <00020024fff502030211000a0026005bba0014001f00032bb8001410ba00
15000000032bb8001510b8001410b80001d0b8000010b8000cd0b8000c2f
00ba000f002400032bb8000f10ba001a000600032bb8001a10ba00010014
00032bb8000110b8002410b8000cdc303101213e0333321e0217230e0123
222e023721362e0223220e02151e0333323601a7fed70216263521203527
1754540b45362a3e28120101830215375b4535594124021f3e5b3e587401
341e352817172736ae33321c2f3d222f6858392848623b3b64482858>BDHQMX+HelveticaNeue AddT42Char 
1 4968 78 <00020024ff2f01fe02110028003c00bdba002e000c00032bb8002e10ba00
01000200032bb8000110b8000210b80038d0b800382fba00040002003811
1239b8000210b80015d0411b0006002e0016002e0026002e0036002e0046
002e0056002e0066002e0076002e0086002e0096002e00a6002e00b6002e
00c6002e000d5d410500d5002e00e5002e00025dba0021000c002e111239
b800212fb80020dcb8000110b8003edc00ba001b002600032bb8001b10ba
0007003300032bb8000710ba0029001100032bb800291030312511231523
2e0123220e0215141e02333236373315140e0223222e0227231e03333236
27222e0235343e0233321e0215140e0201fe5001175231435c38181d3a56
3a3259160211263a2a152e271b015502283d4b247c74ee2a38220e11253a
292838231011243b2c01d94a2b2b334f612e355f472a2d30222b48331d09
1420172a3a24107e98233946232544341f203542222448392300>BDHQMX+HelveticaNeue AddT42Char 
1 5324 80 <000200450000009a02ca00030007002fba0001000200032bb8000110b800
0210b80004d0b8000110b80006d000b800052fba0001000000032bb80001
1030311335231d011133119a5555026268685dfdfb020500>BDHQMX+HelveticaNeue AddT42Char 
1 5408 84 <00010040000003150211002a00b7ba0003000000032bb8000310b8000ddc
4103005f000d00015d4103008f000d00015d41030020000d00015d410300
b0000d00015db80010dcb80018dc4103008f001800015d4103005f001800
015d41030020001800015d410300b0001800015db8001bdcba0023000d00
10111239b8000310b80028d0b800282fba002900000003111239b8001b10
b8002cdc00b800012fb8000e2fb800192fba0026000800032bb8002610b8
000810b80013d0b8002610b80020d0303113113311343e0233321e021511
3311343633321e0215113311342e02232206072e01232207233540550f21
35251d25160955483f1f27160855192d3f2733551a104e306d3a020205fd
fb01420f2d2a1e111f2a19fead01423c48121f2a18fead017b283924112e
2a3028584c000000>BDHQMX+HelveticaNeue AddT42Char 
1 5716 85 <00010040000001ec021100170045ba0003000000032bb8000310ba000e00
0b00032bb8000e10b8000310b80015d0b800152fba001600000003111239
00b800012fb8000c2fba0013000800032bb8001310303113113311343e02
33321615113311342e022322072335405513263927313855112a44337335
020205fdfb0124233b2c183830fea201542a45321c5e5200>BDHQMX+HelveticaNeue AddT42Char 
1 5860 86 <00020024fff5021a02110013002700cbb800282fb800292fb8002810b800
14d0b800142fb80000dc411b000600000016000000260000003600000046
0000005600000066000000760000008600000096000000a6000000b60000
00c60000000d5d410500d5000000e5000000025db8002910b8001edcb800
0adc410500da000a00ea000a00025d411b0009000a0019000a0029000a00
39000a0049000a0059000a0069000a0079000a0089000a0099000a00a900
0a00b9000a00c9000a000d5d00ba000f001900032bb8000f10ba00230005
00032bb8002310303113343e0233321e0215140e0223222e0227141e0233
323e0235342e0223220e027e192c3b21213b2c19192c3b21213b2c195a20
405e3d3e5d402020405d3e3d5e402001022f49321a1a32492f2f49311a1a
31492f39624929294962393963492a2a49630000>BDHQMX+HelveticaNeue AddT42Char 
1 6180 87 <00020043ff3b022d02110018002c00adb8002e2fba0018000000032bb800
1810b80002d0b8001810b80004d0b800042fb8002e10b8000edcb8001810
b80016d0b800162fb8000e10b80019dc410500da001900ea001900025d41
1b0009001900190019002900190039001900490019005900190069001900
790019008900190099001900a9001900b9001900c90019000d5db8001810
b80023d0b800232f00b800012fba0013002800032bb8001310ba001e0009
00032bb8001e10303113113311331e0333323e0235342e02232206072335
05140e0223222e0235343e0233321e024355020e292e2f133b593b1d1e3b
593c365a1502013b10243b2c2c3e271211263c2b293d27130205fd36010a
171f12082a49623737624b2c272b46fe2648382221364726244637222036
45000000>BDHQMX+HelveticaNeue AddT42Char 
1 6484 89 <0001003d0000014d0213000e0027ba0003000100032bb8000310b8000dd0
b8000d2f00b800012fba0009000800032bb8000910303113113335343e02
333526060723353d55142c4833455a1f020205fdfbe6324d361c5a023c3f
6d00>BDHQMX+HelveticaNeue AddT42Char 
1 6576 90 <0001001ffff501d60211003a00abba0000000100032bba0020001f00032b
b8002010ba0031001f0020111239b800312f410500da003100ea00310002
5d411b000900310019003100290031003900310049003100590031006900
3100790031008900310099003100a9003100b9003100c90031000d5db800
0bdcb8000010b8002adcb80015dcb8000b10b8003cdc00ba003600060003
2bb8003610ba0025001a00032bb8002510b8000610b80000dcb8002510b8
001fdc303137231e0333323e0235342e02272e0335343e0233321e021733
2e0323220e0215141e0415140e0223222e02745502243c4e2b274f3f271d
2f3d201e3c301f142027131529221602550322394a2c22453723324b584b
3218252c141a312718a3304329120f263e2f2532211407070d131d161419
0f06091421192f3f250f1123382732381f11152221181f10060a1727>BDHQMX+HelveticaNeue AddT42Char 
1 6904 91 <000100090000011d02a00017005bba0001000200032bb8000110b8000210
b80006d0b8000310b80007d0b8000210b80017dcb8000dd0b8000110b800
14d000b800012fba000f000c00032bb8000f10ba0004000500032bb80004
10b80000d0b8000510b80015d030311335231523153311141e023b013523
222e0235113335b65558580e1d2f21412714190e056702059b9b4bfeb724
2c18094b030a120f01414b000000>BDHQMX+HelveticaNeue AddT42Char 
1 7068 92 <00010040fff501ec020500180051ba000c000d00032bb8000c10ba000100
0200032bb8000110b8000210b80016d0b800162fba001700020001111239
b8000210b80018d0b800182f00b800012fb8000c2fba0008001300032bb8
000810303121112311140e0223222635112311141e0233323637331501ec
5513263927313855112a443339541b020205fedc233b2c183830015efeac
2a45321b2d3052000000>BDHQMX+HelveticaNeue AddT42Char 
1 0 0 <00020033000101cc02c8000300070037b800142bb800082fb800092fb800
04dcb80000dcb8000810b80006d0b800062fb80002dc00ba000300050017
2bba0004000000172b303101211121131121110199fecd013333fe67029a
fd950299fd3902c70000>BDHQMX+HelveticaNeue AddT42Char 
BDHQMX+HelveticaNeue /CharStrings get begin
/space 3 def
/percent 12 def
/parenleft 15 def
/parenright 16 def
/comma 19 def
/hyphen 20 def
/period 21 def
/zero 23 def
/one 24 def
/three 26 def
/eight 31 def
/equal 36 def
/I 48 def
/J 49 def
/a 72 def
/c 74 def
/d 75 def
/e 76 def
/g 78 def
/i 80 def
/m 84 def
/n 85 def
/o 86 def
/p 87 def
/r 89 def
/s 90 def
/t 91 def
/u 92 def
end
BDHQMX+HelveticaNeue /Encoding get
dup 32 /space put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 56 /eight put
dup 61 /equal put
dup 73 /I put
dup 74 /J put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/ZDWBPU+HelveticaNeue /BDHQMX+HelveticaNeue findfont ct_VMDictPut/ZDWBPU+HelveticaNeue*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /.notdef /three 4{/.notdef}rp /eight 4{/.notdef}rp /equal 11{/.notdef}rp /I /J 22{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i 3{/.notdef}rp /m /n /o /p /.notdef /r /s /t /u 138{/.notdef}rp]ZDWBPU+HelveticaNeue nfZDWBPU+HelveticaNeue*1 [0 -9.2553 -9.2553 0 0 0 ]msf11.3408 132.591 mo(Junction-mapping reads)[-4.86826 -5.22924 -5.23849 -5.09969 -2.95247 -2.14722 -5.4144 -5.27552 -3.72996 -7.97803 -5.08118 -5.57171 -5.57171 -2.11947 -5.23849 -5.31259 -2.57297 -3.14673 -5.09044 -5.05342 -5.59021 0 ]ysh22.4472 136.627 mo(\(10% trimmed mean, ppm\))[-2.17502 -4.76648 -4.97009 -9.2553 -2.57297 -2.97098 -3.19301 -2.11946 -7.97804 -7.97803 -5.12746 -5.48841 -2.57298 -7.97803 -5.09043 -5.09969 -5.15521 -2.57297 -2.57297 -5.57172 -5.59023 -7.78368 0 ]yshZDWBPU+HelveticaNeue*1 [12.3405 0 0 -12.3405 0 0 ]msf274.084 167.865 mo(Intergenic \()[3.12219 6.77493 3.64047 6.70093 4.07227 7.07117 6.67624 6.79962 2.73959 6.62686 3.43066 0 ]xsh%ADOBeginSubsetFont: QSJBAA+HelveticaNeue-Italic Initial
ct_T42Dict begin
-0.992 -0.48 1.508 1.074
 256 array 0 1 255 {1 index exch /.notdef put} for  /QSJBAA+HelveticaNeue-Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f32d2d7d658000000cc000000606376
742004c300f30000012c0000001c6670676d372f229800000148000002c6
676c7966f8bf6b6c000053d4000003d468656164e4113ff4000004100000
003668686561ab0fb6040000044800000024686d747829b4d7180000046c
000021606c6f6361001f0998000025cc000021646d6178700a76035e0000
4730000000206e616d656d11d7c50000475000000c0c7072657040d6ec83
0000535c0000007667646972000000000000000000000000000201bc0190
0005000000cc00cc0000011e00cc00cc0000011e003200fa000002000503
000000090004800000670000000000000000000000004c494e4f00010008
fb0203bdff29003803bd00d50000000000000000020502ca000000200002
00140014005000470055005f00000010ff3b000c0205000c02ca0011b800
002c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
00012c2020456944b001602db800022cb800012a212db800032c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db800042c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800052c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800062c2020456944b001
602020457d691844b001602db800072cb800062a2db800082c4b20b00326
5358b0801bb040598a8a20b003265358b0022621b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b80003265358b0032545b8014050
582321b8014023211bb003254523212321591b2159442db800092c4b5358
45441b2121592db8000a2c4bb800095058b101018e59b801ff85b800441d
b9000900035f5e2db8000b2c2020456944b001602db8000c2cb8000b2a21
2db8000d2c2046b003254652582359208a208a49648a204620686164b004
254620686164525823658a592f20b00053586920b000545821b040591b69
20b000545821b0406559593a2db8000e2c2046b00425465258238a592046
206a6164b0042546206a61645258238a592ffd2db8000f2c4b20b0032650
585158b080441bb04044591b21212045b0c05058b0c0441b2159592db800
102c2020456944b001602020457d691844b001602db800112cb800102a2d
b800122c4b20b003265358b0401bb000598a8a20b0032653582321b0808a
8a1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800132c4b535845441b2121592d00000001000000010000a659
e2915f0f3cf5011903e800000000b643f86800000000cb980451fc1ffe1f
05e704350002000900020001000000000001000003bdff2b001c05dcfc1f
fe6205e703e800d5000000000000000000000000085801f4003200000000
0116000001160000000000000116000001160000000000000103000001aa
0092022c0022022cfff2039e004f027600150116008e010300230103ff8c
0160004b025800300116fff10185001a0116000f014dffef022c0019022c
007c022cfffb022c0000022cfffd022c0007022c001d022c0061022c0016
022c00030116000f0116fff10258002e025800300258002e022c00560320
002a029bffca02ad000702d2002602c0000702630007023e000702f70026
02d20007010300070207fff8029b0007022c00070366000702d2000702f7
00260288000702f7002602ad00070288000a023e003c02d200230263004f
039e00500263ffd5026300420263ffdb0103ffe4014dffef0103ff810258
003201f4000000de004c0207fff70251fffc02190015025100110219000a
01280017023effeb022cfffc00defffc00deff8901e1fffc00defffc0354
fffc022cfffc023e00110251ffd002510011014dfffc01e1fff8013b0021
022c000f01e1002a02f7002901e1ffbf01e1ffc201bcffcc014d001e00de
004d014dffa602580045029bffca029bffca02d200260263000702d20007
02f7002602d200230207fff70207fff70207fff70207fff70207fff70207
fff7021900150219000a0219000a0219000a0219000a00defffc00defffc
00defffc00defffc022cfffc023e0011023e0011023e0011023e0011023e
0011022c000f022c000f022c000f022c000f022c003f0190004d022c001f
022cfffe022c000701f40048025800410219fffc032000180320001803de
004000de008900de003902580030039effb202f7fff502e8001102580030
025800170258001f022c003d022cffc9021600300240002902ee0057026e
002b01570000013700210158002b02f0fff90366fffc023effe3022cffee
0103ffe60258003002180000022cffee025800170288ffb801cf001e01cf
001b03e8002701160000029bffca029bffca02f700260432002a038b0011
01f4ffea03e8006b01aa005901aa00550116006f0116006b025800300258
005601e1ffc20263004200a7ff5b022cfffb0103001e0103001302070017
02070017022cffec011600430116ffe001aaffdd04320030029bffca0263
0007029bffca026300070263000701030007010300070103000701030007
02f7002602f700260316003302f7002602d2002302d2002302d2002300de
fffc00de001e00de001700de003500de003400de008900de005600deffd8
00de000d00deffe600de004102f0fff9022c0019022cffec00defffa0342
000e0342004f014d0061025800470288000700de004d02c000070342004f
02580030023e00110251ffd0014d000c014d000e0288000a026300420263
ffdb01e1fff801e1ffc201bcffcc0000ff6f0000ffac0000ff410000ff3a
0000ff580000ff570000ffac0000ff5c0000ff790000ff300000ff640000
fefb0000ff090000fea30000000000de003d00de005c02e10026032a0026
028b00110263ffdb01bcffcc022b0011026300070263000702ee003d0226
000802ce00260288000a01030007010300070207fff80449ffaa045d0006
02ee003d029b000702da00060263fff602c80006029bffca02a3000602ad
00070226000802d9ff9b0263000703f3ffae028a001202da000602da0006
029b000702bfffaa0366000702d2000602f7002602c800060288000702d2
0026023e003c0263fff6033e00200263ffd502d0000602920047041b0006
042b00060302003c03680006028d000902ce001603f20006029fffb60207
fff7023e001a0212fffc01a8fffe024dff9c0219000a02f8ffa801f4fffe
0236fffc0236fffc01f4fffc0233ffba02b0fffc0230fffc023e00110226
fffc0251ffd00219001501cf001601e1ffc20323001101e1ffbf0234fffc
020800290323fffc0339fffc024f001602c4fffc01fefffc0219fffe0306
fffc020cffc10219000a0219000a0236000601a8fffe0219001401e1fff8
00defffc00defffc00deff890359ffba0356fffc0236000601f4fffc0236
fffc01e1ffc20226fffc02c60014022c000f03a7fff802d9fff102f70026
023e0011029b004f01ff002a02c60032021d000f0226000801a8fffe0263
000901d7fffa03fdffae0302ffa8028a001201f4fffe02a5000701fefffc
029e0006021ffffc0313003c0245001602e30006023afffc03f8000602fe
fffc02d20026021900150263004201e100260263004201e1ffe8026dffd5
01eaffbf029f0047021200290292004702080029029b0006022cfffc0103
000703f3ffae02f8ffa8029bffca0207fff7029bffca0207fff7039effb2
0366fffc026300070219000a02e10026022b001103f3ffae02f8ffa8028a
001201f4fffe02da00060236fffc02da00060236fffc02f70026023e0011
02f70026023e00110263fff601e1ffc20263fff601e1ffc20263fff601e1
ffc202920047020800290372000602c4fffc040b0006029bffca0207fff7
02d2002602190015026300070219000a02d20007022cfffc0288000a01e1
fff80263ffdb01bcffcc0263ffdb01bcffcc0288ffbd0288ffbd0288ffbd
039effbd02d2002902d2002902d2002902c0001202c00012026300120263
0012026300120263001202f7002802f7002802f7002802f7002802d20012
02d20012010300160103001601030016010300160103ffc70207ffec029b
0012022c0012022c0012022c0012022c001202d2001102d2001102f80026
02f8002602f8002602f8ffeb02ad001202ad001202ad00120288000c0288
000e0288000c023e004c023e004c023e004c023e004c02d2003502d20035
02d2003502d2003502d2003502d20027039e0067039e0067039e0067039e
00670288005d0288005d0219fffc0219fffc0219fffc0366fffc02190011
021900110219001102510013025600130219001402190014021900140219
0014023effe8023effe8023effe8023effe8022c00040231000900de0009
00de000900de000900deffb100deff8d00deff8d020700090202000400de
00090120000900deffdb01560009022c0004022c000402970037023e0012
023e0012023e0012023effe6014d0001014d0001014dffd301f4fffd01f4
fffd01f4fffd013b002a013b0013013b0025013b000f022c0020022c0020
022c0020022c0020022c0020022c002002f6004202f6004202f6004202f6
004201f4ffd301f4ffd30302001601b6000902410027031f0027031f0027
00de007000de009b00de004200de006000de008d00de003200de005000de
003600de000e00de005500de007400de003900de00ae0116fff40116009c
018500280116004b00a7ff19034200400342004d0342001a034200380342
0044034200440288ffc0022cffdc01f4003702f80029022c000402d20011
02060027020600270185002803e8005a022c00600172005a017200470172
004b017200390172007b01720045017200510190005b00fa00570190004e
00be005c00be000e017200420172ffe10172001b0172ffc00172ffca0172
ffce0172ffd30172ffc1017200030172ffd30172ffd90190ffe300faffdf
0190ffd500beffe400beff97034200350320001700de006b00deffb10116
fff800f1009900f10095014c003e028fffc40116006d02f2004803610048
018a004803610048034a00480364004800ed00110288ffbd02ad00120228
0012026300120263ffda02d2001202f8002601030016029b00120265ffbd
0367001402d20011023affe902f8002602cb0012028800120262ffee023e
004c0288005d030900280263ffc3033b0059010300160288005d024b0014
01e5fff9022d000400ed0011020f0010024b00140234ffdc01d1003f022a
001001e5fff901b10007022d00040216001d00ed0011020200040206ffd0
01e4003f01a9000c023e0012023affd5020100120235001201c40024020f
001002cc000c01c1ff900296002c02cf000f00ed0011020f0010023e0012
020f001002cf000f00de006700de0079022cffdb022cffd90000fe3600d0
ff8a0116001a022c000e01f4fffa022c00310000ff0b0000fe880000fe92
0000fe9c0000fedd0000fedc0000fedc0000fef00000fea30000ff0d0000
feda0000feaa0000fe410000fe230000fdf10000fe5b0000fe0b0000fe2d
0000fe670000fe120000fdf40000fe040000fdec0000fddd0000fdf10000
fde20000fe300000fe430000fe340000fdca0000fedc0000fe700000fedc
0000fe920000fe9b0000fe34000000000116ffa5022c00190341001c014d
00060341001c014dffe7014d00060209fffb0209ffff00fb00100193ff9a
0116ffec0116fff501f4ffc902d2ffcc01f4ffce022c0078022c0076022c
002b01f4000e024bfffd024b001402d2001902d2001502370017029b0019
029b000401f4fff5023effe0035e003d02ba001702f300140104001d01af
001d011600230238000201f4fffd0096ffaf014d0080014d00be05620013
029b0038014300380219ffd6020b0080020b00be02a2008002a200be014d
001f01430078014d001f01620049008b0000000000000000000000000000
0000000000000000000000000000000001f4000003e80000011600000341
0000014d00000116000000a70000022c0000006900000116000000000000
000000000000000000000000002c0000000f0000014dff8801ae001d014d
001f014d004d0219001a02190039029bffd302630019022c001003790014
02a4fffb0000fef90000ff060000fe600000fe530000fea20000feac0000
feff0000feaa0000feb80000feb50000feb00000feab0000fe660000fed6
0000ff020000fed50000fe9e0000fdd80000fe3c0000fe070000fe1d0000
fdf00000fe080000fdf10000fea500a7004f0136004f0462006203f30062
029b001001160026022c00260341002603b10026029b007503b1007504c7
007505dc007503b10026029bffd903b1ffd904c7ffd9022c001002d20011
02d200150341000e00de000401bc0004029b000402d2000401f4003802d2
003803b00038048f003802d2000401f4ffc902d2ffc903b0ffc900de0007
01f4fffd022cfffa0341000404d3fffd0446ffeb03d6fffa03d5fff802c3
fffb0173ffef0459fffb0363fff802c0ffed029bffd3022cfffb01160026
01160020030a0014022cfffb02d2003d022c001702d2003d022c001702d2
003d022c001702d2003d022c001702d2003d022c0017029bffd3022cfffb
029bffd3022cfffb03e8ffcc0379fff6030a0017022cffd9029b001001f4
0002030a0014022cfffb030a0014022cfffb00deff8504c9ffed0463fffa
03e6fffa030a001702d20010022c0004029bffd3022cfffb029bffd3022c
fffb029b0019022c0001029b0019022c00010116002600defffc01160026
00de0009030a0014022cfffb030a0014022cfffb02d2001c014d000702d2
001c014d000702d2003d022c001702d2003d022c001702d20013022c0004
029bffd3022cfffb029b0019022c0001030a0014022cfffb030a0014022c
fffb030a0014022cfffb030a0014022cfffb029b007101f4ffd1014d004c
029bffd3022cfffb029b000e022cfffe029b000e022cfffe029b000e022c
fffe02d2001101f4fffa02d20015022cfffa02d20015022cfffa02d20015
022cfffa02d20015022cfffa02d20015022cfffa029b0019022c0001029b
0019022c0001029b0019022c0001029b0019022c0001029b0019022c0001
026300190116001a030a0017022cffd902d20013022c000402d20013022c
000402d20013022c000402d2ffb6022cffa702d20013022c00040116ff98
00deff720116002601160020029b001001f40002029b001001f40002029b
001001f40002022c001000deffed022c001000deffe6022c001000deff8a
022c001000deff7e0341000e034100040341000e034100040341000e0341
000402d20010022c000402d20010022c000402d20010022c000402d20010
022c0004030a0014022cfffb030a0014022cfffb030a0014022cfffb030a
0014022cfffb029b0019022cffd1029b0019022cffd102d2001c014d0007
02d2001c014dffe502d2001c014dffe602d2001c014dffbb029b000b01f4
fffa029b000b01f4fffa029b000b01f4fffa029b000b01f4fffa029b000b
01f4fffa0263005a011600210263005a0116fffb0263004d0116ff9e0263
00390116ff8d02d2003d022c001702d2003d022c001202d2003d022c000c
02d2003d022c001702d2003d022c0017029b007501f40038029b007501f4
003803b0006e02d2003c03b0006e02d2003c029bffd901f4ffc9029bffd9
01f4ffc9029b007101f4ffd10263ffdb01f4ffdd0263ffdb01f4ffdd0263
ffdb01f4ffdd022c00040116002102d2003c01f4ffd10116001a029bffd3
022cfffb029bffd3022cfffb029bffd3022cfffb029bffd3022cfffb029b
ffd3022cfffb029bffd3022cfffb029bffd3022cfffb029bffd3022cfffb
029bffd3022cfffb029bffd3022cfffb029bffd3022cfffb029bffd3022c
fffb029b0019022c0001029b0019022c0001029b0019022c0001029b0019
022c0001029b0019022c0001029b0019022c0001029b0019022c0001029b
0019022c000101160026011600200116000400deffe6030a0014022cfffb
030a0014022cfffb030a0014022cfffb030a0014022cfffb030a0014022c
fffb030a0014022cfffb030a0014022cfffb0379001402a4fffb03790014
02a4fffb0379001402a4fffb0379001402a4fffb0379001402a4fffb02d2
003d022c001702d2003d022c0017035e003d02ba0017035e003d02ba0017
035e003d02ba0017035e003d02ba0017035e003d02ba0017029b007101f4
ffd1029b007101f4ffd1029b007101f4ffd102de002601fdfff9010b003b
010b00470000fe300116fff000b2006d00b2006d0000fee70000fec900b2
007d015d0050015200500179006d0180007d010b006c010b00440186006d
01a700820190007d01a7008203000023030affdc022c0038034200780342
0038022cff8302d2ff91022c00040341000401ec00100223002201c80010
02170008030a0014014dffab03ccffd903cc00470000fceb0000fd4d0000
fd700000fd5f0000fcb902ef002b022c00110318001502350007022cffd6
022cfffb025b0004025ffffa022cfffe0250fffa025dffd9022c0004025d
0004010bffe803b0000001b90006014dffe8025bfff9024e004502860045
03a3fffa02a000210210fffe02d6001a02530007024e000700d0008400d0
009100de008d00bf0076014d009f014d007b00bfffd0014dffa8014dfff9
014dffd500d0003100d0003e014dffc8014d002d0116002f0116002f006f
fff000a7003100a7003000dd00300169004b00fa00160116006a01160069
0124002d012400150124001e0124005b014d001b0124fff00124ffda0124
000700fa002a00fa0012006f003001240033011600430124ffde0124ffa2
0124ffb20124ff9a014dffe3011600690000fe0b0000fe060000fdee0000
fe500000fe580000fdd40000fe7a0000fd6f0000fe6a0000fdd40000feb1
0000feaf0000feb800000000011600000000000000000000000000000185
000a0185000a0358008003ccffb7011600290458007803ccffd90379008d
036cfff20116ffd80116ffdb000000000000000000000000000000000000
000000000000032a0000030a0028022c0096022c0010029bffd902ee003a
0395006203cd00420342004402d2001c029b0081026400930337ffb3029b
0019022cfffe029b002f022c001d0263ff99030a001402540013011affd5
01aa003802d2000a015500170193ff9a022c0061022c006c00deffd900de
0033022cffd90263000f0263000f0263000f0263000f0263000f0263000f
0263000f0263000f02cffff002c8fff003a0006d03a5007d03a5006d03b0
007d03ce008203b90082022c0013022c0013022c0013022c0013022c0013
022c0013034d006d034d007d0421006d042b007d0414006d041b007d0263
001e0263001e0263001e0263001e0263001e0263001e0263001e0263001e
0384006d0384007d0458006d0462007d044c006d0452007d047900820479
00820116002a0116002a0116002a0116002a0116002a0116002a0116002a
0116002a01c8006d01c8007d029b006d02a6007d028f006d0296007d02bd
008202bd0082026300190263001902630019026300190263001902630019
03bc006d03bc007d048f006d049a007d0483006d048a007d0263001c0263
001c0263001c0263001c0263001c0263001c0263001c0263001c034d007d
042b007d041b007d0442008202f6001502f6001502f6001502f6001502f6
001502f6001502f6001502f6001503b2006d03b2007d0486006d0490007d
047a006d0480007d04a7008204a700820263000f0263000f022c0013022c
00130263001e0263001e0116002a0116002a02630019026300190263001c
0263001c02f6001502f600150263000f0263000f0263000f0263000f0263
000f0263000f0263000f0263000f03f0fff003eefff004ac006d04ce007d
04a3006d04b1007d04cc008204ca00820263ffe40263ffe40263ffe40263
ffe40263ffe40263ffe40263ffe40263ffe4049a006d049a007d056e006d
0578007d0561006d0568007d058f0082058f008202f6001502f6001502f6
001502f6001502f6001502f6001502f6001502f6001504c8006d04c8007d
059c006d05a6007d058f006d0596007d05bd008205bd00820263000f0263
000f0263000f0263000f0263000f0263000f0263000f029bffd1029bffd1
03200049031d004403beffd10263ffe40263ffe40263ffe40263001e0263
ffe40342006c034000440355006c034900440400001a0116002a01160029
011600250116002a0116002a0116002a0116001f0116001f0198006c019a
00440263001c0263001c0263001c0263001c0263ffed0263ffed0263001c
0263001c029b006e029b006e0344006c03740044034d007d02f6001502f6
001502f6001502f6001502f600150397006c03ae004403b2006c03be0044
0423fff2024800040266002a026d0070017100180155002802d20011030a
001400de0027029b001902d200130000fe5b0299fff7022cfffa03a3000b
0386fffe0342003b0342003b0342004003f9002a02df00070340003a02d2
0020029bffd301f4ffc903b6002a02d60007025e0020015d001702db000f
02b3003202d2ffff022cfffb0186ffc4025e001301ea0013031200130259
0004029b001001f400020263ffdb01f4ffdd026d006301fd0040025e0020
01b4000b038e002e02b90012038e002e02b9001203a3007102c8003f02de
00180235000b022cfffb029800230298fff60412ffe502deffd7029b0075
024d003801f400000298001301f9fff302e7ffd80240ffd50116002002a6
ffda01fdffd6029bffdd029bffd302d2001101f4fffd022c000002630028
00deffef0155002802630046029b0019022c0078022c0050029b0019022c
0001021effe300deff8502d2001700d0001100d0ffd2014d001a014d0038
014d003b014dffb90116005d014dffdf014dffdf02af0020024800040248
0012011600330248001602ae00180248003e0116003301160033030a0022
01fd000301fdfff6029b0019022cffd402d200110341000e02ddffe402bd
ffcb02d2001c02d2001102d2001c01f4000001f4fffd01f40000022c0020
02d4ffff034f0028030d001c0186fff50304003d0266000f0236ffe6014d
007f014d00b1014d0021014d00210134ffe10134ffe1019c004d019cffc4
019c002a019c0008019cffe60236ffe401f000420222ffed020e0004020e
00040176003a019e00040339001d0318fff40285001b0000fc1f035c0001
0266fff300ea004700ef004700aa003400aa005600c8003700c7003b0175
005f0179005f012c0024012400240124005f015c004700e6005900e6002b
03ddffe004a2ffce047dffb2047dffab009affe9021e000202b4000b02b4
005b0251ffcc0214ffd200e6fffb00e6ffcd01f3000101f3fff101f6ffdc
01ad000b0226fffd0000fd7d0000fdf50000fdb80000fe830000fe740000
fcea0000fe150000ff940000fdf80000fddd0000fcca0000feb50225fff0
0225fff601f4ffc501f4ffcd03a5ffea0219fff301e9ffca027effdd0317
ffff0256ffd401f6ffd402e1fffa02e1fffa02e1fffa03e8fffe03e8fffa
03e8015f03e8014b03e8015f03e8014b03e8fffd03e8fff903e801d703e8
01bf03e8fffd03e8fff903e8ff86006f00370116ff970116ff9b0116ff98
00faff7f0116ffa202d20011030a001702d20011022b0023029900300263
0026029bffd3025a001002d0ffea025effea02d2ffe00341000402d70022
031f001203fe001c0299004c0299000e01c3fff501b5ffd501c3005001b5
003001c3004701b6001f01c3ffed01b6ffc4016dffed0169ffed0169ffed
0169ffed016dffed016d004d0169002a0169000a0169ffeb016dffcf01a7
ffed01a7ffed01a7ffed01a7ffed01a7ffed0138002a018e002901ce002b
01d6002b0276001b033a002401bd00020000fe6e0000fe970000fe620000
fe840000fe810000fe680000fe640000fe490000fe300225fff601f4ffcd
04fe00140420fffb020e0004020e0004020e0022018b0034018b005b01a1
003602770030018b0036018b0034018b0039018b00430172003401720046
018b001d009e003b01630039024f003b018b003b018b003501630034018b
0046018b0035018b001700c5004f018b004801af002f024f004d01630060
01b2002d018b005701b20046025ffff3030600070251ffcb022c0015022c
fffb0264fffe02620003026e000103a1000b018bfff6009effaa00ecffab
018bffb70163ffce01b2ff9c018bffc501b2ff99018bff650209001502d1
ffcc00de00040222ffed0370ffda0351fff3025c0047026effec0163fff7
0266ffb1018efff80164fff70165fff800de008d014d0061028f00340256
ffc6017f006c02aa000e04460009022c000901670046022cffe3022cfff4
022c0001022cfffc022c0005020b003d022cfff7022c000201db004f01db
ffc801dbffc8018effdf02ac0038030e0023023fffdf029fffe70311ffca
0209ffd40282ffe403f3000e0296ffdf03adffef01e5ffdf025fffe2045f
fff303e6004402a7000a0281ffd50307001603c6ffe00229002503790006
036900150377ffdf0296002802f7ffef03230015023f003f0323002803e7
fff002c5ffd80261ffdf029400240357001502beffd604e7001303630040
03ef0014045b0028022d0000034e0074047700020267000b02b1ffdf0225
002202b7003402ceffe80209007203e200590261fff202e4003c0332ffe9
0332ffe90311005e0231ffe8037f001302f9ffe7028bffdf028bffdf02e1
001402c70015039a0023025dffe802e5001503750041030bffd8030dffdf
02b0000303490014036b0028049bfff3032300150397003f026500080265
002404e3000f02d2ffec0359ffd202c5ffd8035a00280293ffe50315ffe8
02ceffe802b3004102eafff8040000150288ffbe02d20035029bffd3015e
004f0208002c01f700140250002b027c002e0406001f0246ffd80256fff2
03010076040a0030028d0030023ffffe04c7001a0250002a0262004103a8
00300251001b025affed036e00300229003b033e0017039e003e034b003e
0256fffd0371001a0239fff00266003b023800180276001b0252001f024a
00780280fff002410038034affe80206001602e40041028d00020256ffff
022cfff1025c001c03a8002b022900460000000000000088000000880000
008800000088000000880000008800000088000000880000008800000088
000000880000008800000088000000880000008800000088000000880000
00880000008800000088000000b0000000b0000000b0000000b0000000b0
000000b0000000b0000000b0000000b0000000b0000000b0000000b00000
00b0000000b0000000b0000000b0000000b0000000b0000000b0000000b0
000001100000011000000110000001100000011000000110000001100000
011000000110000001100000011000000110000001880000018800000188
000001880000018800000188000001880000018800000188000001880000
018800000188000001880000018800000188000001880000018800000188
0000018800000188000001880000027c0000027c0000027c0000027c0000
027c0000027c0000027c0000027c0000027c0000027c0000027c0000027c
000003600000036000000360000003600000036000000360000003600000
0360000003600000036000000360000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d4000003d4000003d4000003d4000003d4
000003d4000003d4000003d4000003d4000003d4000003d4000003d40000
03d4000003d4000003d4000003d400010000085800960009000000000002
0000000000140000020002c6000000000000002501c20001000000000000
021200000001000000000001000e02120001000000000002000602200001
000000000003002a02260001000000000004001502500001000000000005
0007026500010000000000060014026c000100000000000700e402800001
00000000000a01330364000100000000000b001f0497000100000000000c
001f04b60001000000000100001804d50001000000000101000c04ed0001
000000000102000904f90001000000000103001005020001000000000104
001505120001000000000105001505270001000000000106000d053c0001
0000000001070014054900030001040400020004055d0003000104060002
000c05610003000104070002000c056d0003000104090000042405790003
000104090002000c099d00030001040b0002001009a900030001040c0002
001009b90003000104100002000e09c90003000104110002000a09d70003
000104120002000809e10003000104130002000e09e90003000104140002
000c09f70003000104160002000e0a03000300010419000200120a110003
0001041d0002000c0a23000300010804000200040a2f000300010c010002
00080a33000300010c0a0002000e0a3b436f707972696768742028632920
313938312c20313938322c20313938332c203139383920616e6420313939
332c204c696e6f74797065204c69627261727920476d6248206f72206974
7320616666696c6961746564204c696e6f747970652d48656c6c20636f6d
70616e6965732e20416c6c207269676874732072657365727665642e0a0a
546865206469676974616c6c7920656e636f646564206d616368696e6520
7265616461626c6520736f66747761726520666f722070726f647563696e
672074686520547970656661636573206c6963656e73656420746f20796f
75206973206e6f77207468652070726f7065727479206f66204865696465
6c62657267657220447275636b6d61736368696e656e20414720616e6420
697473206c6963656e736f72732c20616e64206d6179206e6f7420626520
726570726f64756365642c20757365642c20646973706c617965642c206d
6f6469666965642c20646973636c6f736564206f72207472616e73666572
72656420776974686f757420746865206578707265737320777269747465
6e20617070726f76616c206f662048656964656c62657267657220447275
636b6d61736368696e656e2041472e0a0a436f7079726967687420286329
20313938382c20313939302c20313939332041646f62652053797374656d
7320496e636f72706f72617465642e20416c6c2052696768747320526573
65727665642e48656c766574696361204e6575654974616c696348656c76
6574696361204e657565204974616c69633b20382e30643665313b203230
31322d30332d323748656c766574696361204e657565204974616c696338
2e306436653148656c7665746963614e6575652d4974616c69632248656c
766574696361204e6575652220697320612074726164656d61726b206f66
2048656964656c62657267657220447275636b6d61736368696e656e2041
472c207768696368206d6179206265207265676973746572656420696e20
6365727461696e206a7572697364696374696f6e732c206578636c757369
766c79206c6963656e736564207468726f756768204c696e6f7479706520
4c69627261727920476d62482c20612077686f6c6c79206f776e65642073
756273696469617279206f662048656964656c6265726765722044727563
6b6d61736368696e656e2041472e48656c76657469636120284c6174696e
20666f72205377697373292068617320746865206f626a65637469766520
616e642066756e6374696f6e616c207374796c6520776869636820776173
206173736f6369617465642077697468205377697373207479706f677261
70687920696e2074686520313935307320616e642031393630732e204974
206973207065726665637420666f7220696e7465726e6174696f6e616c20
636f72726573706f6e64656e63653a206e6f206f726e616d656e742c206e
6f20656d6f74696f6e2c206a75737420636c6561722070726573656e7461
74696f6e206f6620696e666f726d6174696f6e2e2048656c766574696361
206973207374696c6c206f6e65206f662074686520626573742073656c6c
696e672073616e732d736572696620666f6e74732e687474703a2f2f7777
772e4c696e6f747970654c6962726172792e636f6d2f687474703a2f2f77
77772e4c696e6f747970654c6962726172792e636f6d2f416c6c20547970
6f67726170686963204665617475726573416c6c2046656174757265734c
6967617475726573436f6d6d6f6e204c6967617475726573556e69636f64
65206465636f6d706f736974696f6e43616e6f6e6963616c20636f6d706f
736974696f6e536d617274205377617368657341726368616963204c6f6e
672073205377617368659c9ad4004b00750072007300690076004b007500
720073006900760043006f00700079007200690067006800740020002800
63002900200031003900380031002c00200031003900380032002c002000
31003900380033002c0020003100390038003900200061006e0064002000
31003900390033002c0020004c0069006e006f0074007900700065002000
4c00690062007200610072007900200047006d006200480020006f007200
2000690074007300200061006600660069006c0069006100740065006400
20004c0069006e006f0074007900700065002d00480065006c006c002000
63006f006d00700061006e006900650073002e00200041006c006c002000
720069006700680074007300200072006500730065007200760065006400
2e000a000a0054006800650020006400690067006900740061006c006c00
7900200065006e0063006f0064006500640020006d006100630068006900
6e00650020007200650061006400610062006c006500200073006f006600
74007700610072006500200066006f0072002000700072006f0064007500
630069006e00670020007400680065002000540079007000650066006100
63006500730020006c006900630065006e00730065006400200074006f00
200079006f00750020006900730020006e006f0077002000740068006500
2000700072006f007000650072007400790020006f006600200048006500
6900640065006c0062006500720067006500720020004400720075006300
6b006d00610073006300680069006e0065006e0020004100470020006100
6e006400200069007400730020006c006900630065006e0073006f007200
73002c00200061006e00640020006d006100790020006e006f0074002000
62006500200072006500700072006f00640075006300650064002c002000
75007300650064002c00200064006900730070006c006100790065006400
2c0020006d006f006400690066006900650064002c002000640069007300
63006c006f0073006500640020006f00720020007400720061006e007300
660065007200720065006400200077006900740068006f00750074002000
740068006500200065007800700072006500730073002000770072006900
7400740065006e00200061007000700072006f00760061006c0020006f00
66002000480065006900640065006c006200650072006700650072002000
44007200750063006b006d00610073006300680069006e0065006e002000
410047002e000a000a0043006f0070007900720069006700680074002000
280063002900200031003900380038002c00200031003900390030002c00
200031003900390033002000410064006f00620065002000530079007300
740065006d007300200049006e0063006f00720070006f00720061007400
650064002e00200041006c006c0020005200690067006800740073002000
520065007300650072007600650064002e004900740061006c0069006300
4b0075007200730069006900760069004900740061006c00690071007500
650043006f0072007300690076006f30a430bf30ea30c330afc774d0e4b9
adccb40043007500720073006900650066004b0075007200730069007600
49007400e1006c00690063006f041a04430440044104380432043d044b04
39004b00750072007300690076659c4f5306450627062606440043007500
72007300690076006100b8000a2b00ba00020001000c2b01ba0003000300
0c2b01bf000400410035002a001e0012000000122bbf0005003a00300025
001b0010000000122b00bf000200450039002c00200013000000122bbf00
03004e0040003200240016000000122b00ba0006000400112bb800012045
7d691844b800002b000000>
[981 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 636 85 <0001fffc000001f40211001f007dba0017000c00032bb8001710410500da
000c00ea000c00025d411b0009000c0019000c0029000c0039000c004900
0c0059000c0069000c0079000c0089000c0099000c00a9000c00b9000c00
c9000c000d5db8000c10b80013d0b800132fb8001710b80021dc00b80001
2fb800122fba001a000900032bb8001a103031130333133e01373e013332
1615140e02070333133e01353426232206072337686c543c081a17184523
26340304040142553f0708474936622002100205fdfb011e1f39141a2223
250715171508fed201271e361145402d2d4e>QSJBAA+HelveticaNeue-Italic AddT42Char 
1 0 0 <00020032000001ce02c800030007005bb8000a2bb800082fb800092fb800
04dcb80000dcb8000810b80006d0b800062fb80002dc00b800014558b800
042f1bb90004000c3e59b800014558b800052f1bb9000500063e59b80004
10b80000dcb8000510b900020003f43031012111211311211101affea201
5e1ffe6402a6fd7f02a3fd3802c80000>QSJBAA+HelveticaNeue-Italic AddT42Char 
QSJBAA+HelveticaNeue-Italic /CharStrings get begin
/n 85 def
end
QSJBAA+HelveticaNeue-Italic /Encoding get
dup 110 /n put
pop
end
%ADOEndSubsetFont
/ZDWBPV+HelveticaNeue-Italic /QSJBAA+HelveticaNeue-Italic findfont ct_VMDictPut/ZDWBPV+HelveticaNeue-Italic*1 [110{/.notdef}rp /n 145{/.notdef}rp]ZDWBPV+HelveticaNeue-Italic nfZDWBPV+HelveticaNeue-Italic*1 [12.3405 0 0 -12.3405 0 0 ]msf334.935 167.865 mo(n)shZDWBPU+HelveticaNeue*1 [12.3405 0 0 -12.3405 0 0 ]msf341.796 167.865 mo( = 3)sh362.886 167.865 mo(83\))[6.89832 6.71323 0 ]xshZDWBPU+HelveticaNeue*1 [6.9415 0 0 -6.9415 0 0 ]msf226.521 32.9185 mo(1.1)[3.57487 1.41606 0 ]xsh231.519 70.2221 mo(0)sh.75 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
239.05 68.4629 mo
236.425 68.4629 li
236.425 31.1609 li
239.05 31.1609 li
@
%ADOBeginSubsetFont: BDHQMX+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPU+HelveticaNeue gcheck setglobal} if
1 1644 25 <00010018000001ee02c5002b0091b8002d2fba0001000000032bb8000110
b8002d10b80022dcb8000bdc410500da000b00ea000b00025d411b000900
0b0019000b0029000b0039000b0049000b0059000b0069000b0079000b00
89000b0099000b00a9000b00b9000b00c9000b000d5db8002210b80016d0
b800162fb8000110b80018d0b800182f00ba0018001500032bba00270006
00032bb800271030311333263e0233321e0215140e02070e03072135213e
03373e0335342e0223220e022c55010f2235251c322516172d442d254436
230501cffe940627374221213e301d233c512e38583b1c01ca203f321f12
222f1d2538302f1c163242593f4b21332c2714152e39482f324c331b2643
5c00>ZDWBPU+HelveticaNeue AddT42Char 
1 2376 27 <0002001c0000020302c50003000e0051ba0004000000032bb8000410b800
0010b80009d0b8000410b8000bd0b8000410b80010dc00b800052fb8000a
2fba0001000800032bb8000110ba0003000a0005111239b80004d0b80008
10b8000cd030312523133313112301152115333533350153eeec025044fe
bd01375060f1015bfea501d4fe3352a6a64b0000>ZDWBPU+HelveticaNeue AddT42Char 
1 3116 46 <0001002bfff002b902db002c00a1b8002d2fba0002000000032bb8000210
b8000010b80006d0b8002d10b80025d0b800252fb80010dc411b00060010
001600100026001000360010004600100056001000660010007600100086
00100096001000a6001000b6001000c60010000d5d410500d5001000e500
1000025db8000210b8001bd0b8001b2f00ba000b002a00032bb8000b10ba
0020001500032bb8002010ba0004000500032bb800041030312517331121
1533160e0223222e0235343e0233321e0217332e0323220e0215141e0233
32360264193cfec7e4021e3b56383c5b3e201c3b5d4128473826075f0a37
51673a557f552b2e587e503f7c595901785031553f242f4f6738396d5534
13263b293f593a1b3f6a8d4e4682643b3100>ZDWBPU+HelveticaNeue AddT42Char 
ZDWBPU+HelveticaNeue /CharStrings get begin
/two 25 def
/four 27 def
/G 46 def
end
ZDWBPU+HelveticaNeue /Encoding get
dup 50 /two put
dup 52 /four put
dup 71 /G put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPU+HelveticaNeue*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four 3{/.notdef}rp /eight 4{/.notdef}rp /equal 9{/.notdef}rp /G /.notdef /I /J 22{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i 3{/.notdef}rp /m /n /o /p /.notdef /r /s /t /u 138{/.notdef}rp]ZDWBPU+HelveticaNeue nfZDWBPU+HelveticaNeue*1 [6.9415 0 0 -6.9415 0 0 ]msf29.0913 32.9185 mo(0.04)[3.92889 1.99915 4.01913 0 ]xsh39.0315 70.2221 mo(0)sh29.0913 95.5517 mo(0.04)[3.92889 1.99915 4.01913 0 ]xsh39.0315 132.855 mo(0)shZDWBPU+HelveticaNeue*1 [12.3405 0 0 -12.3405 0 0 ]msf89.3354 167.865 mo(Genic \()[9.41583 6.67625 6.79961 2.73959 6.62688 3.43066 0 ]xshZDWBPV+HelveticaNeue-Italic*1 [12.3405 0 0 -12.3405 0 0 ]msf128.208 167.865 mo(n)shZDWBPU+HelveticaNeue*1 [12.3405 0 0 -12.3405 0 0 ]msf135.069 167.865 mo( = 2)sh155.764 167.865 mo(,113\))[2.14725 5.55322 6.10855 6.71323 0 ]xshZDWBPU+HelveticaNeue*1 [6.9415 0 0 -6.9415 0 0 ]msf226.521 95.5522 mo(1.1)[3.57487 1.41606 0 ]xsh231.519 132.856 mo(0)sh239.05 131.096 mo
236.425 131.096 li
236.425 93.7952 li
239.05 93.7952 li
@
94.2417 68.4629 mo
94.5877 68.4629 li
cp
.254 .203 .207 0 cmyk
f
94.2417 68.4629 mo
94.5877 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
94.5873 68.4629 mo
94.9343 68.4629 li
cp
.254 .203 .207 0 cmyk
f
94.5873 68.4629 mo
94.9343 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
94.9338 68.4629 mo
95.2788 68.4629 li
cp
.254 .203 .207 0 cmyk
f
94.9338 68.4629 mo
95.2788 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
95.2785 68.4629 mo
95.6245 68.4629 li
cp
.254 .203 .207 0 cmyk
f
95.2785 68.4629 mo
95.6245 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
95.6241 68.4629 mo
95.9701 68.4629 li
cp
.254 .203 .207 0 cmyk
f
95.6241 68.4629 mo
95.9701 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
95.9706 68.4629 mo
96.3166 68.4629 li
cp
.254 .203 .207 0 cmyk
f
95.9706 68.4629 mo
96.3166 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
96.3162 68.4629 mo
96.6622 68.4629 li
cp
.254 .203 .207 0 cmyk
f
96.3162 68.4629 mo
96.6622 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
96.6618 68.4629 mo
97.0068 68.4629 li
cp
.254 .203 .207 0 cmyk
f
96.6618 68.4629 mo
97.0068 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
97.0065 68.4629 mo
97.3525 68.4629 li
cp
.254 .203 .207 0 cmyk
f
97.0065 68.4629 mo
97.3525 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
97.353 68.4629 mo
97.699 68.4629 li
cp
.254 .203 .207 0 cmyk
f
97.353 68.4629 mo
97.699 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
97.6986 68.4629 mo
98.0446 68.4629 li
cp
.254 .203 .207 0 cmyk
f
97.6986 68.4629 mo
98.0446 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
98.0451 68.4629 mo
98.3901 68.4629 li
cp
.254 .203 .207 0 cmyk
f
98.0451 68.4629 mo
98.3901 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
98.3898 68.4629 mo
98.7358 68.4629 li
cp
.254 .203 .207 0 cmyk
f
98.3898 68.4629 mo
98.7358 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
98.7354 68.4629 mo
99.0824 68.4629 li
cp
.254 .203 .207 0 cmyk
f
98.7354 68.4629 mo
99.0824 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
99.0819 68.4629 mo
99.4269 68.4629 li
cp
.254 .203 .207 0 cmyk
f
99.0819 68.4629 mo
99.4269 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
99.4266 68.4629 mo
99.7726 68.4629 li
cp
.254 .203 .207 0 cmyk
f
99.4266 68.4629 mo
99.7726 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
99.7731 68.4629 mo
100.119 68.4629 li
cp
.254 .203 .207 0 cmyk
f
99.7731 68.4629 mo
100.119 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
100.119 68.4629 mo
100.465 68.4629 li
cp
.254 .203 .207 0 cmyk
f
100.119 68.4629 mo
100.465 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
100.464 68.4629 mo
100.81 68.4629 li
cp
.254 .203 .207 0 cmyk
f
100.464 68.4629 mo
100.81 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
100.81 68.4629 mo
101.156 68.4629 li
cp
.254 .203 .207 0 cmyk
f
100.81 68.4629 mo
101.156 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
101.156 68.4629 mo
101.501 68.4629 li
cp
.254 .203 .207 0 cmyk
f
101.156 68.4629 mo
101.501 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
101.501 68.4629 mo
101.847 68.4629 li
cp
.254 .203 .207 0 cmyk
f
101.501 68.4629 mo
101.847 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
101.847 68.4629 mo
102.194 68.4629 li
cp
.254 .203 .207 0 cmyk
f
101.847 68.4629 mo
102.194 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
102.193 68.4629 mo
102.538 68.4629 li
cp
.254 .203 .207 0 cmyk
f
102.193 68.4629 mo
102.538 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
102.538 68.4629 mo
102.884 68.4629 li
cp
.254 .203 .207 0 cmyk
f
102.538 68.4629 mo
102.884 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
102.883 68.4629 mo
103.229 68.4629 li
cp
.254 .203 .207 0 cmyk
f
102.883 68.4629 mo
103.229 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
103.23 68.4629 mo
103.577 68.4629 li
cp
.254 .203 .207 0 cmyk
f
103.23 68.4629 mo
103.577 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
103.576 68.4629 mo
103.921 68.4629 li
cp
.254 .203 .207 0 cmyk
f
103.576 68.4629 mo
103.921 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
103.921 68.4629 mo
104.267 68.4629 li
cp
.254 .203 .207 0 cmyk
f
103.921 68.4629 mo
104.267 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
104.267 68.4629 mo
104.613 68.4629 li
cp
.254 .203 .207 0 cmyk
f
104.267 68.4629 mo
104.613 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
104.612 68.4629 mo
104.958 68.4629 li
cp
.254 .203 .207 0 cmyk
f
104.612 68.4629 mo
104.958 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
104.958 68.4629 mo
105.304 68.4629 li
cp
.254 .203 .207 0 cmyk
f
104.958 68.4629 mo
105.304 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
105.304 68.4629 mo
105.649 68.4629 li
cp
.254 .203 .207 0 cmyk
f
105.304 68.4629 mo
105.649 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
105.649 68.4629 mo
105.995 68.4629 li
cp
.254 .203 .207 0 cmyk
f
105.649 68.4629 mo
105.995 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
105.995 68.4629 mo
106.342 68.4629 li
cp
.254 .203 .207 0 cmyk
f
105.995 68.4629 mo
106.342 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
106.341 68.4629 mo
106.687 68.4629 li
cp
.254 .203 .207 0 cmyk
f
106.341 68.4629 mo
106.687 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
106.687 68.4629 mo
107.033 68.4629 li
cp
.254 .203 .207 0 cmyk
f
106.687 68.4629 mo
107.033 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
107.033 68.4629 mo
107.378 68.4629 li
cp
.254 .203 .207 0 cmyk
f
107.033 68.4629 mo
107.378 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
107.378 68.4629 mo
107.723 68.4629 li
cp
.254 .203 .207 0 cmyk
f
107.378 68.4629 mo
107.723 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
107.723 68.4629 mo
108.069 68.4629 li
cp
.254 .203 .207 0 cmyk
f
107.723 68.4629 mo
108.069 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
108.068 68.4629 mo
108.415 68.4629 li
cp
.254 .203 .207 0 cmyk
f
108.068 68.4629 mo
108.415 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
108.416 68.4629 mo
108.762 68.4629 li
cp
.254 .203 .207 0 cmyk
f
108.416 68.4629 mo
108.762 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
108.761 68.4629 mo
109.106 68.4629 li
cp
.254 .203 .207 0 cmyk
f
108.761 68.4629 mo
109.106 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
109.106 68.4629 mo
109.452 68.4629 li
cp
.254 .203 .207 0 cmyk
f
109.106 68.4629 mo
109.452 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
109.453 68.4629 mo
109.798 68.4629 li
cp
.254 .203 .207 0 cmyk
f
109.453 68.4629 mo
109.798 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
109.797 68.4629 mo
110.143 68.4629 li
cp
.254 .203 .207 0 cmyk
f
109.797 68.4629 mo
110.143 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
110.143 68.463 mo
110.489 68.463 li
110.489 68.447 li
110.143 68.447 li
cp
.254 .203 .207 0 cmyk
f
110.143 68.463 mo
110.489 68.463 li
110.489 68.447 li
110.143 68.447 li
cp
.746 .676 .668 .898 cmyk
f
110.489 68.463 mo
110.834 68.463 li
110.834 68.267 li
110.489 68.267 li
cp
.254 .203 .207 0 cmyk
f
110.489 68.463 mo
110.834 68.463 li
110.834 68.267 li
110.489 68.267 li
cp
.746 .676 .668 .898 cmyk
f
110.834 68.463 mo
111.18 68.463 li
111.18 67.693 li
110.834 67.693 li
cp
.254 .203 .207 0 cmyk
f
110.834 68.463 mo
111.18 68.463 li
111.18 67.693 li
110.834 67.693 li
cp
.746 .676 .668 .898 cmyk
f
111.181 68.463 mo
111.527 68.463 li
111.527 67.248 li
111.181 67.248 li
cp
.254 .203 .207 0 cmyk
f
111.181 68.463 mo
111.527 68.463 li
111.527 67.248 li
111.181 67.248 li
cp
.746 .676 .668 .898 cmyk
f
111.526 68.463 mo
111.872 68.463 li
111.872 66.948 li
111.526 66.948 li
cp
.254 .203 .207 0 cmyk
f
111.526 68.463 mo
111.872 68.463 li
111.872 66.948 li
111.526 66.948 li
cp
.746 .676 .668 .898 cmyk
f
111.874 68.463 mo
112.221 68.463 li
112.221 65.857 li
111.874 65.857 li
cp
.254 .203 .207 0 cmyk
f
111.874 68.463 mo
112.221 68.463 li
112.221 65.857 li
111.874 65.857 li
cp
.746 .676 .668 .898 cmyk
f
112.22 68.463 mo
112.566 68.463 li
112.566 64.754 li
112.22 64.754 li
cp
.254 .203 .207 0 cmyk
f
112.22 68.463 mo
112.566 68.463 li
112.566 64.754 li
112.22 64.754 li
cp
.746 .676 .668 .898 cmyk
f
112.566 68.463 mo
112.911 68.463 li
112.911 63.384 li
112.566 63.384 li
cp
.254 .203 .207 0 cmyk
f
112.566 68.463 mo
112.911 68.463 li
112.911 63.384 li
112.566 63.384 li
cp
.746 .676 .668 .898 cmyk
f
112.91 68.463 mo
113.256 68.463 li
113.256 62.022 li
112.91 62.022 li
cp
.254 .203 .207 0 cmyk
f
112.91 68.463 mo
113.256 68.463 li
113.256 62.022 li
112.91 62.022 li
cp
.746 .676 .668 .898 cmyk
f
113.256 68.463 mo
113.603 68.463 li
113.603 60.331 li
113.256 60.331 li
cp
.254 .203 .207 0 cmyk
f
113.256 68.463 mo
113.603 68.463 li
113.603 60.331 li
113.256 60.331 li
cp
.746 .676 .668 .898 cmyk
f
113.603 68.463 mo
113.949 68.463 li
113.949 59.464 li
113.603 59.464 li
cp
.254 .203 .207 0 cmyk
f
113.603 68.463 mo
113.949 68.463 li
113.949 59.464 li
113.603 59.464 li
cp
.746 .676 .668 .898 cmyk
f
113.948 68.463 mo
114.295 68.463 li
114.295 58.207 li
113.948 58.207 li
cp
.254 .203 .207 0 cmyk
f
113.948 68.463 mo
114.295 68.463 li
114.295 58.207 li
113.948 58.207 li
cp
.746 .676 .668 .898 cmyk
f
114.295 68.463 mo
114.641 68.463 li
114.641 56.368 li
114.295 56.368 li
cp
.254 .203 .207 0 cmyk
f
114.295 68.463 mo
114.641 68.463 li
114.641 56.368 li
114.295 56.368 li
cp
.746 .676 .668 .898 cmyk
f
114.64 68.463 mo
114.985 68.463 li
114.985 54.918 li
114.64 54.918 li
cp
.254 .203 .207 0 cmyk
f
114.64 68.463 mo
114.985 68.463 li
114.985 54.918 li
114.64 54.918 li
cp
.746 .676 .668 .898 cmyk
f
114.985 68.463 mo
115.331 68.463 li
115.331 53.135 li
114.985 53.135 li
cp
.254 .203 .207 0 cmyk
f
114.985 68.463 mo
115.331 68.463 li
115.331 53.135 li
114.985 53.135 li
cp
.746 .676 .668 .898 cmyk
f
115.331 68.463 mo
115.677 68.463 li
115.677 51.644 li
115.331 51.644 li
cp
.254 .203 .207 0 cmyk
f
115.331 68.463 mo
115.677 68.463 li
115.677 51.644 li
115.331 51.644 li
cp
.746 .676 .668 .898 cmyk
f
115.677 68.463 mo
116.022 68.463 li
116.022 50.007 li
115.677 50.007 li
cp
.254 .203 .207 0 cmyk
f
115.677 68.463 mo
116.022 68.463 li
116.022 50.007 li
115.677 50.007 li
cp
.746 .676 .668 .898 cmyk
f
116.022 68.463 mo
116.369 68.463 li
116.369 48.145 li
116.022 48.145 li
cp
.254 .203 .207 0 cmyk
f
116.022 68.463 mo
116.369 68.463 li
116.369 48.145 li
116.022 48.145 li
cp
.746 .676 .668 .898 cmyk
f
116.368 68.463 mo
116.714 68.463 li
116.714 46.438 li
116.368 46.438 li
cp
.254 .203 .207 0 cmyk
f
116.368 68.463 mo
116.714 68.463 li
116.714 46.438 li
116.368 46.438 li
cp
.746 .676 .668 .898 cmyk
f
116.715 68.463 mo
117.06 68.463 li
117.06 44.878 li
116.715 44.878 li
cp
.254 .203 .207 0 cmyk
f
116.715 68.463 mo
117.06 68.463 li
117.06 44.878 li
116.715 44.878 li
cp
.746 .676 .668 .898 cmyk
f
117.059 68.463 mo
117.405 68.463 li
117.405 43.545 li
117.059 43.545 li
cp
.254 .203 .207 0 cmyk
f
117.059 68.463 mo
117.405 68.463 li
117.405 43.545 li
117.059 43.545 li
cp
.746 .676 .668 .898 cmyk
f
117.406 68.463 mo
117.752 68.463 li
117.752 42.042 li
117.406 42.042 li
cp
.254 .203 .207 0 cmyk
f
117.406 68.463 mo
117.752 68.463 li
117.752 42.042 li
117.406 42.042 li
cp
.746 .676 .668 .898 cmyk
f
117.751 68.463 mo
118.096 68.463 li
118.096 41.015 li
117.751 41.015 li
cp
.254 .203 .207 0 cmyk
f
117.751 68.463 mo
118.096 68.463 li
118.096 41.015 li
117.751 41.015 li
cp
.746 .676 .668 .898 cmyk
f
118.096 68.463 mo
118.442 68.463 li
118.442 39.644 li
118.096 39.644 li
cp
.254 .203 .207 0 cmyk
f
118.096 68.463 mo
118.442 68.463 li
118.442 39.644 li
118.096 39.644 li
cp
.746 .676 .668 .898 cmyk
f
118.442 68.463 mo
118.788 68.463 li
118.788 38.075 li
118.442 38.075 li
cp
.254 .203 .207 0 cmyk
f
118.442 68.463 mo
118.788 68.463 li
118.788 38.075 li
118.442 38.075 li
cp
.746 .676 .668 .898 cmyk
f
118.787 68.463 mo
119.133 68.463 li
119.133 36.55 li
118.787 36.55 li
cp
.254 .203 .207 0 cmyk
f
118.787 68.463 mo
119.133 68.463 li
119.133 36.55 li
118.787 36.55 li
cp
.746 .676 .668 .898 cmyk
f
119.133 68.463 mo
119.48 68.463 li
119.48 35.812 li
119.133 35.812 li
cp
.254 .203 .207 0 cmyk
f
119.133 68.463 mo
119.48 68.463 li
119.48 35.812 li
119.133 35.812 li
cp
.746 .676 .668 .898 cmyk
f
119.48 68.463 mo
119.826 68.463 li
119.826 34.677 li
119.48 34.677 li
cp
.254 .203 .207 0 cmyk
f
119.48 68.463 mo
119.826 68.463 li
119.826 34.677 li
119.48 34.677 li
cp
.746 .676 .668 .898 cmyk
f
119.826 68.463 mo
120.171 68.463 li
120.171 33.766 li
119.826 33.766 li
cp
.254 .203 .207 0 cmyk
f
119.826 68.463 mo
120.171 68.463 li
120.171 33.766 li
119.826 33.766 li
cp
.746 .676 .668 .898 cmyk
f
120.171 68.463 mo
120.517 68.463 li
120.517 32.874 li
120.171 32.874 li
cp
.254 .203 .207 0 cmyk
f
120.171 68.463 mo
120.517 68.463 li
120.517 32.874 li
120.171 32.874 li
cp
.746 .676 .668 .898 cmyk
f
120.516 68.463 mo
120.862 68.463 li
120.862 32.872 li
120.516 32.872 li
cp
.254 .203 .207 0 cmyk
f
120.516 68.463 mo
120.862 68.463 li
120.862 32.872 li
120.516 32.872 li
cp
.746 .676 .668 .898 cmyk
f
120.862 68.463 mo
121.207 68.463 li
121.207 32.882 li
120.862 32.882 li
cp
.254 .203 .207 0 cmyk
f
120.862 68.463 mo
121.207 68.463 li
121.207 32.882 li
120.862 32.882 li
cp
.746 .676 .668 .898 cmyk
f
121.207 68.463 mo
121.554 68.463 li
121.554 32.595 li
121.207 32.595 li
cp
.254 .203 .207 0 cmyk
f
121.207 68.463 mo
121.554 68.463 li
121.554 32.595 li
121.207 32.595 li
cp
.746 .676 .668 .898 cmyk
f
121.554 68.463 mo
121.9 68.463 li
121.9 32.93 li
121.554 32.93 li
cp
.254 .203 .207 0 cmyk
f
121.554 68.463 mo
121.9 68.463 li
121.9 32.93 li
121.554 32.93 li
cp
.746 .676 .668 .898 cmyk
f
121.9 68.463 mo
122.246 68.463 li
122.246 33.138 li
121.9 33.138 li
cp
.254 .203 .207 0 cmyk
f
121.9 68.463 mo
122.246 68.463 li
122.246 33.138 li
121.9 33.138 li
cp
.746 .676 .668 .898 cmyk
f
122.245 68.463 mo
122.591 68.463 li
122.591 33.843 li
122.245 33.843 li
cp
.254 .203 .207 0 cmyk
f
122.245 68.463 mo
122.591 68.463 li
122.591 33.843 li
122.245 33.843 li
cp
.746 .676 .668 .898 cmyk
f
122.592 68.463 mo
122.937 68.463 li
122.937 33.735 li
122.592 33.735 li
cp
.254 .203 .207 0 cmyk
f
122.592 68.463 mo
122.937 68.463 li
122.937 33.735 li
122.592 33.735 li
cp
.746 .676 .668 .898 cmyk
f
122.936 68.463 mo
123.282 68.463 li
123.282 34.941 li
122.936 34.941 li
cp
.254 .203 .207 0 cmyk
f
122.936 68.463 mo
123.282 68.463 li
123.282 34.941 li
122.936 34.941 li
cp
.746 .676 .668 .898 cmyk
f
123.282 68.463 mo
123.628 68.463 li
123.628 34.688 li
123.282 34.688 li
cp
.254 .203 .207 0 cmyk
f
123.282 68.463 mo
123.628 68.463 li
123.628 34.688 li
123.282 34.688 li
cp
.746 .676 .668 .898 cmyk
f
123.628 68.463 mo
123.973 68.463 li
123.973 35.313 li
123.628 35.313 li
cp
.254 .203 .207 0 cmyk
f
123.628 68.463 mo
123.973 68.463 li
123.973 35.313 li
123.628 35.313 li
cp
.746 .676 .668 .898 cmyk
f
123.972 68.463 mo
124.32 68.463 li
124.32 35.559 li
123.972 35.559 li
cp
.254 .203 .207 0 cmyk
f
123.972 68.463 mo
124.32 68.463 li
124.32 35.559 li
123.972 35.559 li
cp
.746 .676 .668 .898 cmyk
f
124.321 68.463 mo
124.666 68.463 li
124.666 35.5 li
124.321 35.5 li
cp
.254 .203 .207 0 cmyk
f
124.321 68.463 mo
124.666 68.463 li
124.666 35.5 li
124.321 35.5 li
cp
.746 .676 .668 .898 cmyk
f
124.665 68.463 mo
125.011 68.463 li
125.011 35.278 li
124.665 35.278 li
cp
.254 .203 .207 0 cmyk
f
124.665 68.463 mo
125.011 68.463 li
125.011 35.278 li
124.665 35.278 li
cp
.746 .676 .668 .898 cmyk
f
125.011 68.463 mo
125.357 68.463 li
125.357 35.9 li
125.011 35.9 li
cp
.254 .203 .207 0 cmyk
f
125.011 68.463 mo
125.357 68.463 li
125.357 35.9 li
125.011 35.9 li
cp
.746 .676 .668 .898 cmyk
f
125.357 68.463 mo
125.703 68.463 li
125.703 35.9 li
125.357 35.9 li
cp
.254 .203 .207 0 cmyk
f
125.357 68.463 mo
125.703 68.463 li
125.703 35.9 li
125.357 35.9 li
cp
.746 .676 .668 .898 cmyk
f
125.702 68.463 mo
126.047 68.463 li
126.047 36.339 li
125.702 36.339 li
cp
.254 .203 .207 0 cmyk
f
125.702 68.463 mo
126.047 68.463 li
126.047 36.339 li
125.702 36.339 li
cp
.746 .676 .668 .898 cmyk
f
126.047 68.463 mo
126.393 68.463 li
126.393 36.585 li
126.047 36.585 li
cp
.254 .203 .207 0 cmyk
f
126.047 68.463 mo
126.393 68.463 li
126.393 36.585 li
126.047 36.585 li
cp
.746 .676 .668 .898 cmyk
f
126.392 68.463 mo
126.738 68.463 li
126.738 36.083 li
126.392 36.083 li
cp
.254 .203 .207 0 cmyk
f
126.392 68.463 mo
126.738 68.463 li
126.738 36.083 li
126.392 36.083 li
cp
.746 .676 .668 .898 cmyk
f
126.739 68.463 mo
127.084 68.463 li
127.084 35.756 li
126.739 35.756 li
cp
.254 .203 .207 0 cmyk
f
126.739 68.463 mo
127.084 68.463 li
127.084 35.756 li
126.739 35.756 li
cp
.746 .676 .668 .898 cmyk
f
127.084 68.463 mo
127.43 68.463 li
127.43 36.014 li
127.084 36.014 li
cp
.254 .203 .207 0 cmyk
f
127.084 68.463 mo
127.43 68.463 li
127.43 36.014 li
127.084 36.014 li
cp
.746 .676 .668 .898 cmyk
f
127.43 68.463 mo
127.776 68.463 li
127.776 36.014 li
127.43 36.014 li
cp
.254 .203 .207 0 cmyk
f
127.43 68.463 mo
127.776 68.463 li
127.776 36.014 li
127.43 36.014 li
cp
.746 .676 .668 .898 cmyk
f
127.777 68.463 mo
128.122 68.463 li
128.122 36.08 li
127.777 36.08 li
cp
.254 .203 .207 0 cmyk
f
127.777 68.463 mo
128.122 68.463 li
128.122 36.08 li
127.777 36.08 li
cp
.746 .676 .668 .898 cmyk
f
128.121 68.463 mo
128.467 68.463 li
128.467 36.229 li
128.121 36.229 li
cp
.254 .203 .207 0 cmyk
f
128.121 68.463 mo
128.467 68.463 li
128.467 36.229 li
128.121 36.229 li
cp
.746 .676 .668 .898 cmyk
f
128.467 68.463 mo
128.814 68.463 li
128.814 37.271 li
128.467 37.271 li
cp
.254 .203 .207 0 cmyk
f
128.467 68.463 mo
128.814 68.463 li
128.814 37.271 li
128.467 37.271 li
cp
.746 .676 .668 .898 cmyk
f
128.813 68.463 mo
129.159 68.463 li
129.159 38.284 li
128.813 38.284 li
cp
.254 .203 .207 0 cmyk
f
128.813 68.463 mo
129.159 68.463 li
129.159 38.284 li
128.813 38.284 li
cp
.746 .676 .668 .898 cmyk
f
111.526 68.4629 mo
129.159 68.4629 li
cp
f
53.049 68.463 mo
53.395 68.463 li
53.395 44.305 li
53.049 44.305 li
cp
.254 .203 .207 0 cmyk
f
53.049 68.463 mo
53.395 68.463 li
53.395 44.305 li
53.049 44.305 li
cp
.746 .676 .668 .898 cmyk
f
53.394 68.463 mo
53.74 68.463 li
53.74 44.066 li
53.394 44.066 li
cp
.254 .203 .207 0 cmyk
f
53.394 68.463 mo
53.74 68.463 li
53.74 44.066 li
53.394 44.066 li
cp
.746 .676 .668 .898 cmyk
f
53.74 68.463 mo
54.086 68.463 li
54.086 43.658 li
53.74 43.658 li
cp
.254 .203 .207 0 cmyk
f
53.74 68.463 mo
54.086 68.463 li
54.086 43.658 li
53.74 43.658 li
cp
.746 .676 .668 .898 cmyk
f
54.085 68.463 mo
54.431 68.463 li
54.431 43.264 li
54.085 43.264 li
cp
.254 .203 .207 0 cmyk
f
54.085 68.463 mo
54.431 68.463 li
54.431 43.264 li
54.085 43.264 li
cp
.746 .676 .668 .898 cmyk
f
54.431 68.463 mo
54.777 68.463 li
54.777 43.327 li
54.431 43.327 li
cp
.254 .203 .207 0 cmyk
f
54.431 68.463 mo
54.777 68.463 li
54.777 43.327 li
54.431 43.327 li
cp
.746 .676 .668 .898 cmyk
f
54.777 68.463 mo
55.123 68.463 li
55.123 42.638 li
54.777 42.638 li
cp
.254 .203 .207 0 cmyk
f
54.777 68.463 mo
55.123 68.463 li
55.123 42.638 li
54.777 42.638 li
cp
.746 .676 .668 .898 cmyk
f
55.122 68.463 mo
55.468 68.463 li
55.468 42.519 li
55.122 42.519 li
cp
.254 .203 .207 0 cmyk
f
55.122 68.463 mo
55.468 68.463 li
55.468 42.519 li
55.122 42.519 li
cp
.746 .676 .668 .898 cmyk
f
55.468 68.463 mo
55.814 68.463 li
55.814 42.246 li
55.468 42.246 li
cp
.254 .203 .207 0 cmyk
f
55.468 68.463 mo
55.814 68.463 li
55.814 42.246 li
55.468 42.246 li
cp
.746 .676 .668 .898 cmyk
f
55.814 68.463 mo
56.16 68.463 li
56.16 41.513 li
55.814 41.513 li
cp
.254 .203 .207 0 cmyk
f
55.814 68.463 mo
56.16 68.463 li
56.16 41.513 li
55.814 41.513 li
cp
.746 .676 .668 .898 cmyk
f
56.159 68.463 mo
56.505 68.463 li
56.505 42.107 li
56.159 42.107 li
cp
.254 .203 .207 0 cmyk
f
56.159 68.463 mo
56.505 68.463 li
56.505 42.107 li
56.159 42.107 li
cp
.746 .676 .668 .898 cmyk
f
56.505 68.463 mo
56.851 68.463 li
56.851 42.125 li
56.505 42.125 li
cp
.254 .203 .207 0 cmyk
f
56.505 68.463 mo
56.851 68.463 li
56.851 42.125 li
56.505 42.125 li
cp
.746 .676 .668 .898 cmyk
f
56.85 68.463 mo
57.196 68.463 li
57.196 42.28 li
56.85 42.28 li
cp
.254 .203 .207 0 cmyk
f
56.85 68.463 mo
57.196 68.463 li
57.196 42.28 li
56.85 42.28 li
cp
.746 .676 .668 .898 cmyk
f
57.196 68.463 mo
57.542 68.463 li
57.542 41.975 li
57.196 41.975 li
cp
.254 .203 .207 0 cmyk
f
57.196 68.463 mo
57.542 68.463 li
57.542 41.975 li
57.196 41.975 li
cp
.746 .676 .668 .898 cmyk
f
57.545 68.463 mo
57.89 68.463 li
57.89 42.006 li
57.545 42.006 li
cp
.254 .203 .207 0 cmyk
f
57.545 68.463 mo
57.89 68.463 li
57.89 42.006 li
57.545 42.006 li
cp
.746 .676 .668 .898 cmyk
f
57.89 68.463 mo
58.236 68.463 li
58.236 42.729 li
57.89 42.729 li
cp
.254 .203 .207 0 cmyk
f
57.89 68.463 mo
58.236 68.463 li
58.236 42.729 li
57.89 42.729 li
cp
.746 .676 .668 .898 cmyk
f
58.236 68.463 mo
58.582 68.463 li
58.582 42.385 li
58.236 42.385 li
cp
.254 .203 .207 0 cmyk
f
58.236 68.463 mo
58.582 68.463 li
58.582 42.385 li
58.236 42.385 li
cp
.746 .676 .668 .898 cmyk
f
58.582 68.463 mo
58.927 68.463 li
58.927 41.835 li
58.582 41.835 li
cp
.254 .203 .207 0 cmyk
f
58.582 68.463 mo
58.927 68.463 li
58.927 41.835 li
58.582 41.835 li
cp
.746 .676 .668 .898 cmyk
f
58.927 68.463 mo
59.273 68.463 li
59.273 42.432 li
58.927 42.432 li
cp
.254 .203 .207 0 cmyk
f
58.927 68.463 mo
59.273 68.463 li
59.273 42.432 li
58.927 42.432 li
cp
.746 .676 .668 .898 cmyk
f
59.272 68.463 mo
59.618 68.463 li
59.618 42.197 li
59.272 42.197 li
cp
.254 .203 .207 0 cmyk
f
59.272 68.463 mo
59.618 68.463 li
59.618 42.197 li
59.272 42.197 li
cp
.746 .676 .668 .898 cmyk
f
59.619 68.463 mo
59.965 68.463 li
59.965 42.082 li
59.619 42.082 li
cp
.254 .203 .207 0 cmyk
f
59.619 68.463 mo
59.965 68.463 li
59.965 42.082 li
59.619 42.082 li
cp
.746 .676 .668 .898 cmyk
f
59.964 68.463 mo
60.31 68.463 li
60.31 41.77 li
59.964 41.77 li
cp
.254 .203 .207 0 cmyk
f
59.964 68.463 mo
60.31 68.463 li
60.31 41.77 li
59.964 41.77 li
cp
.746 .676 .668 .898 cmyk
f
60.31 68.463 mo
60.656 68.463 li
60.656 41.9 li
60.31 41.9 li
cp
.254 .203 .207 0 cmyk
f
60.31 68.463 mo
60.656 68.463 li
60.656 41.9 li
60.31 41.9 li
cp
.746 .676 .668 .898 cmyk
f
60.656 68.463 mo
61.002 68.463 li
61.002 41.579 li
60.656 41.579 li
cp
.254 .203 .207 0 cmyk
f
60.656 68.463 mo
61.002 68.463 li
61.002 41.579 li
60.656 41.579 li
cp
.746 .676 .668 .898 cmyk
f
61.001 68.463 mo
61.347 68.463 li
61.347 41.399 li
61.001 41.399 li
cp
.254 .203 .207 0 cmyk
f
61.001 68.463 mo
61.347 68.463 li
61.347 41.399 li
61.001 41.399 li
cp
.746 .676 .668 .898 cmyk
f
61.347 68.463 mo
61.693 68.463 li
61.693 40.599 li
61.347 40.599 li
cp
.254 .203 .207 0 cmyk
f
61.347 68.463 mo
61.693 68.463 li
61.693 40.599 li
61.347 40.599 li
cp
.746 .676 .668 .898 cmyk
f
61.692 68.463 mo
62.038 68.463 li
62.038 39.817 li
61.692 39.817 li
cp
.254 .203 .207 0 cmyk
f
61.692 68.463 mo
62.038 68.463 li
62.038 39.817 li
61.692 39.817 li
cp
.746 .676 .668 .898 cmyk
f
62.038 68.463 mo
62.384 68.463 li
62.384 40.253 li
62.038 40.253 li
cp
.254 .203 .207 0 cmyk
f
62.038 68.463 mo
62.384 68.463 li
62.384 40.253 li
62.038 40.253 li
cp
.746 .676 .668 .898 cmyk
f
62.383 68.463 mo
62.729 68.463 li
62.729 41.321 li
62.383 41.321 li
cp
.254 .203 .207 0 cmyk
f
62.383 68.463 mo
62.729 68.463 li
62.729 41.321 li
62.383 41.321 li
cp
.746 .676 .668 .898 cmyk
f
62.729 68.463 mo
63.075 68.463 li
63.075 42.276 li
62.729 42.276 li
cp
.254 .203 .207 0 cmyk
f
62.729 68.463 mo
63.075 68.463 li
63.075 42.276 li
62.729 42.276 li
cp
.746 .676 .668 .898 cmyk
f
63.076 68.463 mo
63.421 68.463 li
63.421 43.434 li
63.076 43.434 li
cp
.254 .203 .207 0 cmyk
f
63.076 68.463 mo
63.421 68.463 li
63.421 43.434 li
63.076 43.434 li
cp
.746 .676 .668 .898 cmyk
f
63.42 68.463 mo
63.766 68.463 li
63.766 44.667 li
63.42 44.667 li
cp
.254 .203 .207 0 cmyk
f
63.42 68.463 mo
63.766 68.463 li
63.766 44.667 li
63.42 44.667 li
cp
.746 .676 .668 .898 cmyk
f
63.767 68.463 mo
64.113 68.463 li
64.113 45.985 li
63.767 45.985 li
cp
.254 .203 .207 0 cmyk
f
63.767 68.463 mo
64.113 68.463 li
64.113 45.985 li
63.767 45.985 li
cp
.746 .676 .668 .898 cmyk
f
64.112 68.463 mo
64.457 68.463 li
64.457 46.825 li
64.112 46.825 li
cp
.254 .203 .207 0 cmyk
f
64.112 68.463 mo
64.457 68.463 li
64.457 46.825 li
64.112 46.825 li
cp
.746 .676 .668 .898 cmyk
f
64.457 68.463 mo
64.803 68.463 li
64.803 47.8 li
64.457 47.8 li
cp
.254 .203 .207 0 cmyk
f
64.457 68.463 mo
64.803 68.463 li
64.803 47.8 li
64.457 47.8 li
cp
.746 .676 .668 .898 cmyk
f
64.803 68.463 mo
65.15 68.463 li
65.15 48.992 li
64.803 48.992 li
cp
.254 .203 .207 0 cmyk
f
64.803 68.463 mo
65.15 68.463 li
65.15 48.992 li
64.803 48.992 li
cp
.746 .676 .668 .898 cmyk
f
65.149 68.463 mo
65.494 68.463 li
65.494 50.403 li
65.149 50.403 li
cp
.254 .203 .207 0 cmyk
f
65.149 68.463 mo
65.494 68.463 li
65.494 50.403 li
65.149 50.403 li
cp
.746 .676 .668 .898 cmyk
f
65.494 68.463 mo
65.841 68.463 li
65.841 51.46 li
65.494 51.46 li
cp
.254 .203 .207 0 cmyk
f
65.494 68.463 mo
65.841 68.463 li
65.841 51.46 li
65.494 51.46 li
cp
.746 .676 .668 .898 cmyk
f
65.84 68.463 mo
66.185 68.463 li
66.185 52.759 li
65.84 52.759 li
cp
.254 .203 .207 0 cmyk
f
65.84 68.463 mo
66.185 68.463 li
66.185 52.759 li
65.84 52.759 li
cp
.746 .676 .668 .898 cmyk
f
66.185 68.463 mo
66.532 68.463 li
66.532 53.618 li
66.185 53.618 li
cp
.254 .203 .207 0 cmyk
f
66.185 68.463 mo
66.532 68.463 li
66.532 53.618 li
66.185 53.618 li
cp
.746 .676 .668 .898 cmyk
f
66.532 68.463 mo
66.878 68.463 li
66.878 54.734 li
66.532 54.734 li
cp
.254 .203 .207 0 cmyk
f
66.532 68.463 mo
66.878 68.463 li
66.878 54.734 li
66.532 54.734 li
cp
.746 .676 .668 .898 cmyk
f
66.878 68.463 mo
67.223 68.463 li
67.223 55.462 li
66.878 55.462 li
cp
.254 .203 .207 0 cmyk
f
66.878 68.463 mo
67.223 68.463 li
67.223 55.462 li
66.878 55.462 li
cp
.746 .676 .668 .898 cmyk
f
67.223 68.463 mo
67.569 68.463 li
67.569 56.494 li
67.223 56.494 li
cp
.254 .203 .207 0 cmyk
f
67.223 68.463 mo
67.569 68.463 li
67.569 56.494 li
67.223 56.494 li
cp
.746 .676 .668 .898 cmyk
f
67.568 68.463 mo
67.914 68.463 li
67.914 57.754 li
67.568 57.754 li
cp
.254 .203 .207 0 cmyk
f
67.568 68.463 mo
67.914 68.463 li
67.914 57.754 li
67.568 57.754 li
cp
.746 .676 .668 .898 cmyk
f
67.915 68.463 mo
68.261 68.463 li
68.261 58.54 li
67.915 58.54 li
cp
.254 .203 .207 0 cmyk
f
67.915 68.463 mo
68.261 68.463 li
68.261 58.54 li
67.915 58.54 li
cp
.746 .676 .668 .898 cmyk
f
68.26 68.463 mo
68.605 68.463 li
68.605 59.692 li
68.26 59.692 li
cp
.254 .203 .207 0 cmyk
f
68.26 68.463 mo
68.605 68.463 li
68.605 59.692 li
68.26 59.692 li
cp
.746 .676 .668 .898 cmyk
f
68.605 68.463 mo
68.952 68.463 li
68.952 60.921 li
68.605 60.921 li
cp
.254 .203 .207 0 cmyk
f
68.605 68.463 mo
68.952 68.463 li
68.952 60.921 li
68.605 60.921 li
cp
.746 .676 .668 .898 cmyk
f
68.952 68.463 mo
69.298 68.463 li
69.298 61.818 li
68.952 61.818 li
cp
.254 .203 .207 0 cmyk
f
68.952 68.463 mo
69.298 68.463 li
69.298 61.818 li
68.952 61.818 li
cp
.746 .676 .668 .898 cmyk
f
69.297 68.463 mo
69.643 68.463 li
69.643 62.769 li
69.297 62.769 li
cp
.254 .203 .207 0 cmyk
f
69.297 68.463 mo
69.643 68.463 li
69.643 62.769 li
69.297 62.769 li
cp
.746 .676 .668 .898 cmyk
f
69.643 68.463 mo
69.989 68.463 li
69.989 64.065 li
69.643 64.065 li
cp
.254 .203 .207 0 cmyk
f
69.643 68.463 mo
69.989 68.463 li
69.989 64.065 li
69.643 64.065 li
cp
.746 .676 .668 .898 cmyk
f
69.988 68.463 mo
70.333 68.463 li
70.333 65.123 li
69.988 65.123 li
cp
.254 .203 .207 0 cmyk
f
69.988 68.463 mo
70.333 68.463 li
70.333 65.123 li
69.988 65.123 li
cp
.746 .676 .668 .898 cmyk
f
70.333 68.463 mo
70.679 68.463 li
70.679 65.959 li
70.333 65.959 li
cp
.254 .203 .207 0 cmyk
f
70.333 68.463 mo
70.679 68.463 li
70.679 65.959 li
70.333 65.959 li
cp
.746 .676 .668 .898 cmyk
f
70.679 68.463 mo
71.026 68.463 li
71.026 66.43 li
70.679 66.43 li
cp
.254 .203 .207 0 cmyk
f
70.679 68.463 mo
71.026 68.463 li
71.026 66.43 li
70.679 66.43 li
cp
.746 .676 .668 .898 cmyk
f
71.025 68.463 mo
71.371 68.463 li
71.371 68.063 li
71.025 68.063 li
cp
.254 .203 .207 0 cmyk
f
71.025 68.463 mo
71.371 68.463 li
71.371 68.063 li
71.025 68.063 li
cp
.746 .676 .668 .898 cmyk
f
71.3709 68.4629 mo
71.7169 68.4629 li
cp
.254 .203 .207 0 cmyk
f
71.3709 68.4629 mo
71.7169 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
71.7165 68.4629 mo
72.0625 68.4629 li
cp
.254 .203 .207 0 cmyk
f
71.7165 68.4629 mo
72.0625 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
72.0621 68.4629 mo
72.4081 68.4629 li
cp
.254 .203 .207 0 cmyk
f
72.0621 68.4629 mo
72.4081 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
72.4086 68.4629 mo
72.7536 68.4629 li
cp
.254 .203 .207 0 cmyk
f
72.4086 68.4629 mo
72.7536 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
72.7533 68.4629 mo
73.0993 68.4629 li
cp
.254 .203 .207 0 cmyk
f
72.7533 68.4629 mo
73.0993 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
73.0989 68.4629 mo
73.4449 68.4629 li
cp
.254 .203 .207 0 cmyk
f
73.0989 68.4629 mo
73.4449 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
73.4454 68.4629 mo
73.7904 68.4629 li
cp
.254 .203 .207 0 cmyk
f
73.4454 68.4629 mo
73.7904 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
73.7901 68.4629 mo
74.1361 68.4629 li
cp
.254 .203 .207 0 cmyk
f
73.7901 68.4629 mo
74.1361 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
74.1366 68.4629 mo
74.4816 68.4629 li
cp
.254 .203 .207 0 cmyk
f
74.1366 68.4629 mo
74.4816 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
74.4813 68.4629 mo
74.8273 68.4629 li
cp
.254 .203 .207 0 cmyk
f
74.4813 68.4629 mo
74.8273 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
74.8278 68.4629 mo
75.1738 68.4629 li
cp
.254 .203 .207 0 cmyk
f
74.8278 68.4629 mo
75.1738 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
75.1734 68.4629 mo
75.5194 68.4629 li
cp
.254 .203 .207 0 cmyk
f
75.1734 68.4629 mo
75.5194 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
75.5199 68.4629 mo
75.8649 68.4629 li
cp
.254 .203 .207 0 cmyk
f
75.5199 68.4629 mo
75.8649 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
75.8646 68.4629 mo
76.2106 68.4629 li
cp
.254 .203 .207 0 cmyk
f
75.8646 68.4629 mo
76.2106 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
76.2102 68.4629 mo
76.5562 68.4629 li
cp
.254 .203 .207 0 cmyk
f
76.2102 68.4629 mo
76.5562 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
76.5558 68.4629 mo
76.9018 68.4629 li
cp
.254 .203 .207 0 cmyk
f
76.5558 68.4629 mo
76.9018 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
76.9014 68.4629 mo
77.2474 68.4629 li
cp
.254 .203 .207 0 cmyk
f
76.9014 68.4629 mo
77.2474 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
77.247 68.4629 mo
77.593 68.4629 li
cp
.254 .203 .207 0 cmyk
f
77.247 68.4629 mo
77.593 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
77.5926 68.4629 mo
77.9386 68.4629 li
cp
.254 .203 .207 0 cmyk
f
77.5926 68.4629 mo
77.9386 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
77.9382 68.4629 mo
78.2842 68.4629 li
cp
.254 .203 .207 0 cmyk
f
77.9382 68.4629 mo
78.2842 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
78.2838 68.4629 mo
78.6298 68.4629 li
cp
.254 .203 .207 0 cmyk
f
78.2838 68.4629 mo
78.6298 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
78.6303 68.4629 mo
78.9753 68.4629 li
cp
.254 .203 .207 0 cmyk
f
78.6303 68.4629 mo
78.9753 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
78.975 68.4629 mo
79.321 68.4629 li
cp
.254 .203 .207 0 cmyk
f
78.975 68.4629 mo
79.321 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
79.3206 68.4629 mo
79.6666 68.4629 li
cp
.254 .203 .207 0 cmyk
f
79.3206 68.4629 mo
79.6666 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
79.6662 68.4629 mo
80.0122 68.4629 li
cp
.254 .203 .207 0 cmyk
f
79.6662 68.4629 mo
80.0122 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
80.0118 68.4629 mo
80.3588 68.4629 li
cp
.254 .203 .207 0 cmyk
f
80.0118 68.4629 mo
80.3588 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
80.3583 68.4629 mo
80.7043 68.4629 li
cp
.254 .203 .207 0 cmyk
f
80.3583 68.4629 mo
80.7043 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
80.7039 68.4629 mo
81.0499 68.4629 li
cp
.254 .203 .207 0 cmyk
f
80.7039 68.4629 mo
81.0499 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
81.0495 68.4629 mo
81.3955 68.4629 li
cp
.254 .203 .207 0 cmyk
f
81.0495 68.4629 mo
81.3955 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
81.3951 68.4629 mo
81.7411 68.4629 li
cp
.254 .203 .207 0 cmyk
f
81.3951 68.4629 mo
81.7411 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
81.7407 68.4629 mo
82.0857 68.4629 li
cp
.254 .203 .207 0 cmyk
f
81.7407 68.4629 mo
82.0857 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
82.0854 68.4629 mo
82.4314 68.4629 li
cp
.254 .203 .207 0 cmyk
f
82.0854 68.4629 mo
82.4314 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
82.4319 68.4629 mo
82.7779 68.4629 li
cp
.254 .203 .207 0 cmyk
f
82.4319 68.4629 mo
82.7779 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
82.7775 68.4629 mo
83.1235 68.4629 li
cp
.254 .203 .207 0 cmyk
f
82.7775 68.4629 mo
83.1235 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
83.1231 68.4629 mo
83.4691 68.4629 li
cp
.254 .203 .207 0 cmyk
f
83.1231 68.4629 mo
83.4691 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
83.4687 68.4629 mo
83.8147 68.4629 li
cp
.254 .203 .207 0 cmyk
f
83.4687 68.4629 mo
83.8147 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
83.817 68.4629 mo
84.163 68.4629 li
cp
.254 .203 .207 0 cmyk
f
83.817 68.4629 mo
84.163 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
84.1635 68.4629 mo
84.5095 68.4629 li
cp
.254 .203 .207 0 cmyk
f
84.1635 68.4629 mo
84.5095 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
84.5091 68.4629 mo
84.8541 68.4629 li
cp
.254 .203 .207 0 cmyk
f
84.5091 68.4629 mo
84.8541 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
84.8538 68.4629 mo
85.1998 68.4629 li
cp
.254 .203 .207 0 cmyk
f
84.8538 68.4629 mo
85.1998 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
85.1994 68.4629 mo
85.5454 68.4629 li
cp
.254 .203 .207 0 cmyk
f
85.1994 68.4629 mo
85.5454 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
85.545 68.4629 mo
85.891 68.4629 li
cp
.254 .203 .207 0 cmyk
f
85.545 68.4629 mo
85.891 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
85.8906 68.4629 mo
86.2376 68.4629 li
cp
.254 .203 .207 0 cmyk
f
85.8906 68.4629 mo
86.2376 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
86.2371 68.4629 mo
86.5831 68.4629 li
cp
.254 .203 .207 0 cmyk
f
86.2371 68.4629 mo
86.5831 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
86.5827 68.4629 mo
86.9287 68.4629 li
cp
.254 .203 .207 0 cmyk
f
86.5827 68.4629 mo
86.9287 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
86.9283 68.4629 mo
87.2743 68.4629 li
cp
.254 .203 .207 0 cmyk
f
86.9283 68.4629 mo
87.2743 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
87.2739 68.4629 mo
87.6199 68.4629 li
cp
.254 .203 .207 0 cmyk
f
87.2739 68.4629 mo
87.6199 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
87.6195 68.4629 mo
87.9645 68.4629 li
cp
.254 .203 .207 0 cmyk
f
87.6195 68.4629 mo
87.9645 68.4629 li
cp
.746 .676 .668 .898 cmyk
f
.5 lw
10 ml
91.0161 69.5132 mo
90.0651 71.5512 li
@
92.1411 69.5132 mo
91.1901 71.5512 li
@
129.159 69.905 mo
111.526 69.905 li
111.526 71.161 li
129.159 71.161 li
cp
0 0 0 1 cmyk
f
94.415 70.5332 mo
111.526 70.5332 li
.746 .676 .668 .898 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: DVBAAA+HelveticaNeueLTStd-LtCn Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /DVBAAA+HelveticaNeueLTStd-LtCn def/FontInfo 7 dict dup begin/Notice (Copyright 1990, 2002 Adobe Systems Incorporated. All rights reserved. Copyright 1990, 2002 Linotype GmbH. All rights reserved. Helvetica is a trademark of Linotype Corp. registered in the U.S. Patent and Trademark Office and may be registered in certain other jurisdictions in the name of Linotype Corp. or its licensee Linotype GmbH.) def/Weight (Light) def/ItalicAngle 0 def/FSType 4 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 43 /plus putdup 48 /zero putdup 51 /three putdup 53 /five putdup 115 /s putdef/FontBBox {-167 -204 1000 927} defendsystemdict begindup /Private15 dict dup begin/|- {def} def/| {put} def/BlueValues [-12 -0 714 726 531 543 696 708] def/OtherBlues [273 280 367 374 -184 -176] def/FamilyBlues [-17 -0 714 731 517 529] def/FamilyOtherBlues [273 280 380 387 -210 -198] def/BlueScale 0.0424999 def/StdHW [50] def/StdVW [60] def/StemSnapH [44 50 54 60 102] def/StemSnapV [50 54 60 64 68] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings7 dict dup begin/space <1C60D8A8C9B87A8F8B> |-/plus <1C60D8A8C9B7C3C9B5778CA78366A5CE1E1B27721B916E91134CD762609CA9A35CA82DD0F08EAB8F260BF6A466CAD4578E01DAF942> |-/zero <1C60D8A8C9B75BE591895EE1B7358F6A8E613D847020697070645E8F7859E4B86911D031F2D35BD8B1A42F9668772807466F2D06334674D918BB90A71A1A9E147FB84BFDEEA6FE40B9ECC10BD771A25706D9E6FE098ED5> |-/three <1C60D8A8C9B75BE591895EEF30A327B348A2D69E1CDA27FAAD14521AD5CFC2BBF26E9F54DA31008EA5B92EA48076E5AC29DC596690A66DB502C22D63AEA1593FA2FAC5446BC15265C542B2955236512CB9D11000AAEB89BCDC09C91F55FE3A33C88FAC5895BBFE4287D23CE0482332BE37F976B89D582C522EAA608409F573D372098A3E70647B370D06779D43844D3CDE4F70AAB4AF9CF26A54A16849D80939163C52C5D4B1B56825DB7C93D50E5C778695AD9F> |-/five <1C60D8A8C9B75BE591895EE0F059BBECB8F509FC670823F231A8B465F1783ACD73CB0B1CBC249338FA2673EC82C34B6A1090B9CB42B52A7406902655050DD30B9A5BE0377F145A470E35CBC9E7E6FB147B2E92235D705B82914895221B7CF54ED8360FD1ACF255182C1832EE52AB41C6C8442EBA479C97021AB52B5B60030AE08441403F6458B426E482C0FAA2A54CA9EA8D7B> |-/s <1C60D8A8C9B7361F8AE6D35FCFE00ACB467890363DD82984798B96A8AA7F5FB638F8566F2216D464A72D25398031FC88377099468789376246EEA8DC91AFBA058A8F03B187D885B50D34571EC09195EDFB180A930440EF28AFA08E1D9D1D521342D2F2D1F884320E45F05F2CD8F161A9F8ECB4C90F36D7F1AF58C46AC7C4EE6BD9A3E2EF> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/ZDWBPW+HelveticaNeueLTStd-LtCn /DVBAAA+HelveticaNeueLTStd-LtCn findfont ct_VMDictPut/ZDWBPW+HelveticaNeueLTStd-LtCn*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus 4{/.notdef}rp /zero 2{/.notdef}rp /three /.notdef /five 61{/.notdef}rp /s 140{/.notdef}rp]ZDWBPW+HelveticaNeueLTStd-LtCn nfZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf98.6816 78.2114 mo(3)sh%ADOBeginSubsetFont: INMBAA+HelveticaNeue-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (INMBAA+HelveticaNeue)%%Title: (INMBAA+HelveticaNeue Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /INMBAA+HelveticaNeue def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-951 -481 1446 1077} def/FontInfo 4 dict dup begin/FSType 0 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 2136 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B7A73DB69766C728F992B45CDEFDE836A03F03808DEA1F562730C87541D1DACD> |809 <001C60D8A8C9B81F2C3AF743D1DC85E2C1D0E2B7542E9F631F8150> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /INMBAA+HelveticaNeue-Identity-H /Identity-H 0 [/INMBAA+HelveticaNeue] ct_ComposeFont pop end end
%ADOEndSubsetFont
/ZDWBPX+HelveticaNeue /INMBAA+HelveticaNeue-Identity-H findfont ct_VMDictPutZDWBPX+HelveticaNeue [6.9415 0 0 -6.9415 0 0 ]msf102.013 78.2114 mo(\003\))shZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf104.325 78.2114 mo( ss)[1.666 2.83218 0 ]xsh118 78.2114 mo(+50)[4.28295 3.54707 0 ]xsh70.679 69.905 mo
53.048 69.905 li
53.048 71.161 li
70.679 71.161 li
cp
f
70.6792 70.5332 mo
87.9642 70.5332 li
.746 .676 .668 .898 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: DVBAAA+HelveticaNeueLTStd-LtCn AddGlyphs
%ADOt1write: (1.0.24)systemdict beginZDWBPW+HelveticaNeueLTStd-LtCn dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/endash <1C60D8A8C9B7A73DB9B0154D8993C2A1C7DA27ED3E0B83228E6EAD21> |-systemdict /gcheck known {setglobal} if end {end} ifendZDWBPW+HelveticaNeueLTStd-LtCn /Encoding getdup 177 /endash putpop%ADOEndSubsetFont
/ZDWBPW+HelveticaNeueLTStd-LtCn*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus 4{/.notdef}rp /zero 2{/.notdef}rp /three /.notdef /five 61{/.notdef}rp /s 61{/.notdef}rp /endash 78{/.notdef}rp]ZDWBPW+HelveticaNeueLTStd-LtCn nfZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf53.0488 78.2114 mo(\26150)[3.81783 3.54708 0 ]xsh70.6802 78.2114 mo(5)shZDWBPX+HelveticaNeue [6.9415 0 0 -6.9415 0 0 ]msf73.8317 78.2114 mo(\003\))shZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf76.1431 78.2114 mo( ss)[1.666 2.83218 0 ]xsh180.849 68.4629 mo
181.195 68.4629 li
cp
0 1 1 0 cmyk
f
180.849 68.4629 mo
181.195 68.4629 li
cp
f
181.195 68.4629 mo
181.542 68.4629 li
cp
f
181.195 68.4629 mo
181.542 68.4629 li
cp
f
181.542 68.4629 mo
181.887 68.4629 li
cp
f
181.542 68.4629 mo
181.887 68.4629 li
cp
f
181.886 68.4629 mo
182.232 68.4629 li
cp
f
181.886 68.4629 mo
182.232 68.4629 li
cp
f
182.233 68.4629 mo
182.578 68.4629 li
cp
f
182.233 68.4629 mo
182.578 68.4629 li
cp
f
182.578 68.4629 mo
182.925 68.4629 li
cp
f
182.578 68.4629 mo
182.925 68.4629 li
cp
f
182.924 68.4629 mo
183.269 68.4629 li
cp
f
182.924 68.4629 mo
183.269 68.4629 li
cp
f
183.269 68.4629 mo
183.615 68.4629 li
cp
f
183.269 68.4629 mo
183.615 68.4629 li
cp
f
183.614 68.4629 mo
183.96 68.4629 li
cp
f
183.614 68.4629 mo
183.96 68.4629 li
cp
f
183.96 68.4629 mo
184.307 68.4629 li
cp
f
183.96 68.4629 mo
184.307 68.4629 li
cp
f
184.307 68.4629 mo
184.652 68.4629 li
cp
f
184.307 68.4629 mo
184.652 68.4629 li
cp
f
184.652 68.4629 mo
184.998 68.4629 li
cp
f
184.652 68.4629 mo
184.998 68.4629 li
cp
f
184.998 68.4629 mo
185.344 68.4629 li
cp
f
184.998 68.4629 mo
185.344 68.4629 li
cp
f
185.343 68.4629 mo
185.69 68.4629 li
cp
f
185.343 68.4629 mo
185.69 68.4629 li
cp
f
185.69 68.4629 mo
186.035 68.4629 li
cp
f
185.69 68.4629 mo
186.035 68.4629 li
cp
f
186.035 68.4629 mo
186.38 68.4629 li
cp
f
186.035 68.4629 mo
186.38 68.4629 li
cp
f
186.38 68.4629 mo
186.727 68.4629 li
cp
f
186.38 68.4629 mo
186.727 68.4629 li
cp
f
186.727 68.4629 mo
187.072 68.4629 li
cp
f
186.727 68.4629 mo
187.072 68.4629 li
cp
f
187.072 68.4629 mo
187.418 68.4629 li
cp
f
187.072 68.4629 mo
187.418 68.4629 li
cp
f
187.418 68.4629 mo
187.764 68.4629 li
cp
f
187.418 68.4629 mo
187.764 68.4629 li
cp
f
187.764 68.4629 mo
188.109 68.4629 li
cp
f
187.764 68.4629 mo
188.109 68.4629 li
cp
f
188.109 68.4629 mo
188.455 68.4629 li
cp
f
188.109 68.4629 mo
188.455 68.4629 li
cp
f
188.456 68.4629 mo
188.801 68.4629 li
cp
f
188.456 68.4629 mo
188.801 68.4629 li
cp
f
188.801 68.4629 mo
189.147 68.4629 li
cp
f
188.801 68.4629 mo
189.147 68.4629 li
cp
f
189.147 68.4629 mo
189.493 68.4629 li
cp
f
189.147 68.4629 mo
189.493 68.4629 li
cp
f
189.492 68.4629 mo
189.838 68.4629 li
cp
f
189.492 68.4629 mo
189.838 68.4629 li
cp
f
189.839 68.4629 mo
190.184 68.4629 li
cp
f
189.839 68.4629 mo
190.184 68.4629 li
cp
f
190.184 68.4629 mo
190.528 68.4629 li
cp
f
190.184 68.4629 mo
190.528 68.4629 li
cp
f
190.528 68.4629 mo
190.875 68.4629 li
cp
f
190.528 68.4629 mo
190.875 68.4629 li
cp
f
190.876 68.4629 mo
191.221 68.4629 li
cp
f
190.876 68.4629 mo
191.221 68.4629 li
cp
f
191.22 68.4629 mo
191.565 68.4629 li
cp
f
191.22 68.4629 mo
191.565 68.4629 li
cp
f
191.565 68.4629 mo
191.911 68.4629 li
cp
f
191.565 68.4629 mo
191.911 68.4629 li
cp
f
191.911 68.4629 mo
192.257 68.4629 li
cp
f
191.911 68.4629 mo
192.257 68.4629 li
cp
f
192.257 68.4629 mo
192.603 68.4629 li
cp
f
192.257 68.4629 mo
192.603 68.4629 li
cp
f
192.603 68.4629 mo
192.949 68.4629 li
cp
f
192.603 68.4629 mo
192.949 68.4629 li
cp
f
192.948 68.4629 mo
193.294 68.4629 li
cp
f
192.948 68.4629 mo
193.294 68.4629 li
cp
f
193.295 68.4629 mo
193.641 68.4629 li
cp
f
193.295 68.4629 mo
193.641 68.4629 li
cp
f
193.64 68.4629 mo
193.985 68.4629 li
cp
f
193.64 68.4629 mo
193.985 68.4629 li
cp
f
193.985 68.4629 mo
194.332 68.4629 li
cp
f
193.985 68.4629 mo
194.332 68.4629 li
cp
f
194.332 68.4629 mo
194.678 68.4629 li
cp
f
194.332 68.4629 mo
194.678 68.4629 li
cp
f
194.678 68.4629 mo
195.023 68.4629 li
cp
f
194.678 68.4629 mo
195.023 68.4629 li
cp
f
195.023 68.4629 mo
195.369 68.4629 li
cp
f
195.023 68.4629 mo
195.369 68.4629 li
cp
f
195.368 68.4629 mo
195.714 68.4629 li
cp
f
195.368 68.4629 mo
195.714 68.4629 li
cp
f
195.714 68.4629 mo
196.06 68.4629 li
cp
f
195.714 68.4629 mo
196.06 68.4629 li
cp
f
196.061 68.4629 mo
196.405 68.4629 li
cp
f
196.061 68.4629 mo
196.405 68.4629 li
cp
f
196.405 68.4629 mo
196.751 68.4629 li
cp
f
196.405 68.4629 mo
196.751 68.4629 li
cp
f
196.752 68.4629 mo
197.098 68.4629 li
cp
f
196.752 68.4629 mo
197.098 68.4629 li
cp
f
197.097 68.4629 mo
197.442 68.4629 li
cp
f
197.097 68.4629 mo
197.442 68.4629 li
cp
f
197.442 68.463 mo
197.788 68.463 li
197.788 68.447 li
197.442 68.447 li
cp
f
197.442 68.463 mo
197.788 68.463 li
197.788 68.447 li
197.442 68.447 li
cp
f
197.788 68.463 mo
198.135 68.463 li
198.135 68.38 li
197.788 68.38 li
cp
f
197.788 68.463 mo
198.135 68.463 li
198.135 68.38 li
197.788 68.38 li
cp
f
198.135 68.463 mo
198.48 68.463 li
198.48 68.212 li
198.135 68.212 li
cp
f
198.135 68.463 mo
198.48 68.463 li
198.48 68.212 li
198.135 68.212 li
cp
f
198.482 68.463 mo
198.828 68.463 li
198.828 67.459 li
198.482 67.459 li
cp
f
198.482 68.463 mo
198.828 68.463 li
198.828 67.459 li
198.482 67.459 li
cp
f
198.828 68.463 mo
199.173 68.463 li
199.173 66.567 li
198.828 66.567 li
cp
f
198.828 68.463 mo
199.173 68.463 li
199.173 66.567 li
198.828 66.567 li
cp
f
199.173 68.463 mo
199.519 68.463 li
199.519 65.794 li
199.173 65.794 li
cp
f
199.173 68.463 mo
199.519 68.463 li
199.519 65.794 li
199.173 65.794 li
cp
f
199.518 68.463 mo
199.864 68.463 li
199.864 64.441 li
199.518 64.441 li
cp
f
199.518 68.463 mo
199.864 68.463 li
199.864 64.441 li
199.518 64.441 li
cp
f
199.865 68.463 mo
200.211 68.463 li
200.211 63.038 li
199.865 63.038 li
cp
f
199.865 68.463 mo
200.211 68.463 li
200.211 63.038 li
199.865 63.038 li
cp
f
200.21 68.463 mo
200.556 68.463 li
200.556 62.112 li
200.21 62.112 li
cp
f
200.21 68.463 mo
200.556 68.463 li
200.556 62.112 li
200.21 62.112 li
cp
f
200.556 68.463 mo
200.902 68.463 li
200.902 61.276 li
200.556 61.276 li
cp
f
200.556 68.463 mo
200.902 68.463 li
200.902 61.276 li
200.556 61.276 li
cp
f
200.902 68.463 mo
201.248 68.463 li
201.248 59.781 li
200.902 59.781 li
cp
f
200.902 68.463 mo
201.248 68.463 li
201.248 59.781 li
200.902 59.781 li
cp
f
201.247 68.463 mo
201.594 68.463 li
201.594 58.835 li
201.247 58.835 li
cp
f
201.247 68.463 mo
201.594 68.463 li
201.594 58.835 li
201.247 58.835 li
cp
f
201.594 68.463 mo
201.94 68.463 li
201.94 57.533 li
201.594 57.533 li
cp
f
201.594 68.463 mo
201.94 68.463 li
201.94 57.533 li
201.594 57.533 li
cp
f
201.939 68.463 mo
202.284 68.463 li
202.284 56.352 li
201.939 56.352 li
cp
f
201.939 68.463 mo
202.284 68.463 li
202.284 56.352 li
201.939 56.352 li
cp
f
202.284 68.463 mo
202.63 68.463 li
202.63 54.704 li
202.284 54.704 li
cp
f
202.284 68.463 mo
202.63 68.463 li
202.63 54.704 li
202.284 54.704 li
cp
f
202.63 68.463 mo
202.977 68.463 li
202.977 52.812 li
202.63 52.812 li
cp
f
202.63 68.463 mo
202.977 68.463 li
202.977 52.812 li
202.63 52.812 li
cp
f
202.976 68.463 mo
203.321 68.463 li
203.321 51.033 li
202.976 51.033 li
cp
f
202.976 68.463 mo
203.321 68.463 li
203.321 51.033 li
202.976 51.033 li
cp
f
203.321 68.463 mo
203.667 68.463 li
203.667 49.89 li
203.321 49.89 li
cp
f
203.321 68.463 mo
203.667 68.463 li
203.667 49.89 li
203.321 49.89 li
cp
f
203.667 68.463 mo
204.013 68.463 li
204.013 48.583 li
203.667 48.583 li
cp
f
203.667 68.463 mo
204.013 68.463 li
204.013 48.583 li
203.667 48.583 li
cp
f
204.013 68.463 mo
204.358 68.463 li
204.358 47.136 li
204.013 47.136 li
cp
f
204.013 68.463 mo
204.358 68.463 li
204.358 47.136 li
204.013 47.136 li
cp
f
204.358 68.463 mo
204.705 68.463 li
204.705 46.125 li
204.358 46.125 li
cp
f
204.358 68.463 mo
204.705 68.463 li
204.705 46.125 li
204.358 46.125 li
cp
f
204.705 68.463 mo
205.05 68.463 li
205.05 44.898 li
204.705 44.898 li
cp
f
204.705 68.463 mo
205.05 68.463 li
205.05 44.898 li
204.705 44.898 li
cp
f
205.05 68.463 mo
205.396 68.463 li
205.396 43.889 li
205.05 43.889 li
cp
f
205.05 68.463 mo
205.396 68.463 li
205.396 43.889 li
205.05 43.889 li
cp
f
205.395 68.463 mo
205.741 68.463 li
205.741 43.042 li
205.395 43.042 li
cp
f
205.395 68.463 mo
205.741 68.463 li
205.741 43.042 li
205.395 43.042 li
cp
f
205.742 68.463 mo
206.087 68.463 li
206.087 42.628 li
205.742 42.628 li
cp
f
205.742 68.463 mo
206.087 68.463 li
206.087 42.628 li
205.742 42.628 li
cp
f
206.087 68.463 mo
206.432 68.463 li
206.432 40.95 li
206.087 40.95 li
cp
f
206.087 68.463 mo
206.432 68.463 li
206.432 40.95 li
206.087 40.95 li
cp
f
206.431 68.463 mo
206.778 68.463 li
206.778 40.477 li
206.431 40.477 li
cp
f
206.431 68.463 mo
206.778 68.463 li
206.778 40.477 li
206.431 40.477 li
cp
f
206.779 68.463 mo
207.125 68.463 li
207.125 40.009 li
206.779 40.009 li
cp
f
206.779 68.463 mo
207.125 68.463 li
207.125 40.009 li
206.779 40.009 li
cp
f
207.124 68.463 mo
207.469 68.463 li
207.469 39.631 li
207.124 39.631 li
cp
f
207.124 68.463 mo
207.469 68.463 li
207.469 39.631 li
207.124 39.631 li
cp
f
207.469 68.463 mo
207.815 68.463 li
207.815 39.6 li
207.469 39.6 li
cp
f
207.469 68.463 mo
207.815 68.463 li
207.815 39.6 li
207.469 39.6 li
cp
f
207.815 68.463 mo
208.161 68.463 li
208.161 39.972 li
207.815 39.972 li
cp
f
207.815 68.463 mo
208.161 68.463 li
208.161 39.972 li
207.815 39.972 li
cp
f
208.161 68.463 mo
208.506 68.463 li
208.506 40.899 li
208.161 40.899 li
cp
f
208.161 68.463 mo
208.506 68.463 li
208.506 40.899 li
208.161 40.899 li
cp
f
208.506 68.463 mo
208.853 68.463 li
208.853 41.375 li
208.506 41.375 li
cp
f
208.506 68.463 mo
208.853 68.463 li
208.853 41.375 li
208.506 41.375 li
cp
f
208.852 68.463 mo
209.198 68.463 li
209.198 41.548 li
208.852 41.548 li
cp
f
208.852 68.463 mo
209.198 68.463 li
209.198 41.548 li
208.852 41.548 li
cp
f
209.198 68.463 mo
209.544 68.463 li
209.544 41.198 li
209.198 41.198 li
cp
f
209.198 68.463 mo
209.544 68.463 li
209.544 41.198 li
209.198 41.198 li
cp
f
209.544 68.463 mo
209.89 68.463 li
209.89 42.467 li
209.544 42.467 li
cp
f
209.544 68.463 mo
209.89 68.463 li
209.89 42.467 li
209.544 42.467 li
cp
f
209.89 68.463 mo
210.235 68.463 li
210.235 42.139 li
209.89 42.139 li
cp
f
209.89 68.463 mo
210.235 68.463 li
210.235 42.139 li
209.89 42.139 li
cp
f
210.235 68.463 mo
210.581 68.463 li
210.581 43.309 li
210.235 43.309 li
cp
f
210.235 68.463 mo
210.581 68.463 li
210.581 43.309 li
210.235 43.309 li
cp
f
210.58 68.463 mo
210.926 68.463 li
210.926 43.789 li
210.58 43.789 li
cp
f
210.58 68.463 mo
210.926 68.463 li
210.926 43.789 li
210.58 43.789 li
cp
f
210.927 68.463 mo
211.273 68.463 li
211.273 43.914 li
210.927 43.914 li
cp
f
210.927 68.463 mo
211.273 68.463 li
211.273 43.914 li
210.927 43.914 li
cp
f
211.272 68.463 mo
211.617 68.463 li
211.617 44.221 li
211.272 44.221 li
cp
f
211.272 68.463 mo
211.617 68.463 li
211.617 44.221 li
211.272 44.221 li
cp
f
211.617 68.463 mo
211.964 68.463 li
211.964 44.301 li
211.617 44.301 li
cp
f
211.617 68.463 mo
211.964 68.463 li
211.964 44.301 li
211.617 44.301 li
cp
f
211.964 68.463 mo
212.309 68.463 li
212.309 43.855 li
211.964 43.855 li
cp
f
211.964 68.463 mo
212.309 68.463 li
212.309 43.855 li
211.964 43.855 li
cp
f
212.309 68.463 mo
212.655 68.463 li
212.655 44.104 li
212.309 44.104 li
cp
f
212.309 68.463 mo
212.655 68.463 li
212.655 44.104 li
212.309 44.104 li
cp
f
212.655 68.463 mo
213.001 68.463 li
213.001 43.918 li
212.655 43.918 li
cp
f
212.655 68.463 mo
213.001 68.463 li
213.001 43.918 li
212.655 43.918 li
cp
f
213.001 68.463 mo
213.346 68.463 li
213.346 43.724 li
213.001 43.724 li
cp
f
213.001 68.463 mo
213.346 68.463 li
213.346 43.724 li
213.001 43.724 li
cp
f
213.346 68.463 mo
213.692 68.463 li
213.692 43.223 li
213.346 43.223 li
cp
f
213.346 68.463 mo
213.692 68.463 li
213.692 43.223 li
213.346 43.223 li
cp
f
213.692 68.463 mo
214.038 68.463 li
214.038 43.625 li
213.692 43.625 li
cp
f
213.692 68.463 mo
214.038 68.463 li
214.038 43.625 li
213.692 43.625 li
cp
f
214.038 68.463 mo
214.383 68.463 li
214.383 43.123 li
214.038 43.123 li
cp
f
214.038 68.463 mo
214.383 68.463 li
214.383 43.123 li
214.038 43.123 li
cp
f
214.383 68.463 mo
214.73 68.463 li
214.73 43.385 li
214.383 43.385 li
cp
f
214.383 68.463 mo
214.73 68.463 li
214.73 43.385 li
214.383 43.385 li
cp
f
214.729 68.463 mo
215.075 68.463 li
215.075 43.905 li
214.729 43.905 li
cp
f
214.729 68.463 mo
215.075 68.463 li
215.075 43.905 li
214.729 43.905 li
cp
f
215.075 68.463 mo
215.421 68.463 li
215.421 44.466 li
215.075 44.466 li
cp
f
215.075 68.463 mo
215.421 68.463 li
215.421 44.466 li
215.075 44.466 li
cp
f
215.42 68.463 mo
215.766 68.463 li
215.766 44.985 li
215.42 44.985 li
cp
f
215.42 68.463 mo
215.766 68.463 li
215.766 44.985 li
215.42 44.985 li
cp
f
198.135 68.4629 mo
215.766 68.4629 li
cp
f
139.992 68.463 mo
140.338 68.463 li
140.338 50.232 li
139.992 50.232 li
cp
f
139.992 68.463 mo
140.338 68.463 li
140.338 50.232 li
139.992 50.232 li
cp
f
140.339 68.463 mo
140.684 68.463 li
140.684 50.322 li
140.339 50.322 li
cp
f
140.339 68.463 mo
140.684 68.463 li
140.684 50.322 li
140.339 50.322 li
cp
f
140.684 68.463 mo
141.031 68.463 li
141.031 49.934 li
140.684 49.934 li
cp
f
140.684 68.463 mo
141.031 68.463 li
141.031 49.934 li
140.684 49.934 li
cp
f
141.031 68.463 mo
141.376 68.463 li
141.376 49.802 li
141.031 49.802 li
cp
f
141.031 68.463 mo
141.376 68.463 li
141.376 49.802 li
141.031 49.802 li
cp
f
141.376 68.463 mo
141.722 68.463 li
141.722 49.423 li
141.376 49.423 li
cp
f
141.376 68.463 mo
141.722 68.463 li
141.722 49.423 li
141.376 49.423 li
cp
f
141.722 68.463 mo
142.067 68.463 li
142.067 49.347 li
141.722 49.347 li
cp
f
141.722 68.463 mo
142.067 68.463 li
142.067 49.347 li
141.722 49.347 li
cp
f
142.067 68.463 mo
142.413 68.463 li
142.413 48.919 li
142.067 48.919 li
cp
f
142.067 68.463 mo
142.413 68.463 li
142.413 48.919 li
142.067 48.919 li
cp
f
142.412 68.463 mo
142.758 68.463 li
142.758 48.494 li
142.412 48.494 li
cp
f
142.412 68.463 mo
142.758 68.463 li
142.758 48.494 li
142.412 48.494 li
cp
f
142.758 68.463 mo
143.105 68.463 li
143.105 48.781 li
142.758 48.781 li
cp
f
142.758 68.463 mo
143.105 68.463 li
143.105 48.781 li
142.758 48.781 li
cp
f
143.105 68.463 mo
143.45 68.463 li
143.45 48.977 li
143.105 48.977 li
cp
f
143.105 68.463 mo
143.45 68.463 li
143.45 48.977 li
143.105 48.977 li
cp
f
143.45 68.463 mo
143.794 68.463 li
143.794 49.225 li
143.45 49.225 li
cp
f
143.45 68.463 mo
143.794 68.463 li
143.794 49.225 li
143.45 49.225 li
cp
f
143.794 68.463 mo
144.141 68.463 li
144.141 49.895 li
143.794 49.895 li
cp
f
143.794 68.463 mo
144.141 68.463 li
144.141 49.895 li
143.794 49.895 li
cp
f
144.141 68.463 mo
144.486 68.463 li
144.486 49.937 li
144.141 49.937 li
cp
f
144.141 68.463 mo
144.486 68.463 li
144.486 49.937 li
144.141 49.937 li
cp
f
144.49 68.463 mo
144.834 68.463 li
144.834 49.478 li
144.49 49.478 li
cp
f
144.49 68.463 mo
144.834 68.463 li
144.834 49.478 li
144.49 49.478 li
cp
f
144.834 68.463 mo
145.18 68.463 li
145.18 49.398 li
144.834 49.398 li
cp
f
144.834 68.463 mo
145.18 68.463 li
145.18 49.398 li
144.834 49.398 li
cp
f
145.18 68.463 mo
145.527 68.463 li
145.527 49.917 li
145.18 49.917 li
cp
f
145.18 68.463 mo
145.527 68.463 li
145.527 49.917 li
145.18 49.917 li
cp
f
145.527 68.463 mo
145.872 68.463 li
145.872 48.784 li
145.527 48.784 li
cp
f
145.527 68.463 mo
145.872 68.463 li
145.872 48.784 li
145.527 48.784 li
cp
f
145.872 68.463 mo
146.217 68.463 li
146.217 49 li
145.872 49 li
cp
f
145.872 68.463 mo
146.217 68.463 li
146.217 49 li
145.872 49 li
cp
f
146.217 68.463 mo
146.564 68.463 li
146.564 49.176 li
146.217 49.176 li
cp
f
146.217 68.463 mo
146.564 68.463 li
146.564 49.176 li
146.217 49.176 li
cp
f
146.564 68.463 mo
146.909 68.463 li
146.909 48.801 li
146.564 48.801 li
cp
f
146.564 68.463 mo
146.909 68.463 li
146.909 48.801 li
146.564 48.801 li
cp
f
146.909 68.463 mo
147.255 68.463 li
147.255 48.401 li
146.909 48.401 li
cp
f
146.909 68.463 mo
147.255 68.463 li
147.255 48.401 li
146.909 48.401 li
cp
f
147.255 68.463 mo
147.6 68.463 li
147.6 48.784 li
147.255 48.784 li
cp
f
147.255 68.463 mo
147.6 68.463 li
147.6 48.784 li
147.255 48.784 li
cp
f
147.6 68.463 mo
147.947 68.463 li
147.947 48.494 li
147.6 48.494 li
cp
f
147.6 68.463 mo
147.947 68.463 li
147.947 48.494 li
147.6 48.494 li
cp
f
147.947 68.463 mo
148.292 68.463 li
148.292 48.18 li
147.947 48.18 li
cp
f
147.947 68.463 mo
148.292 68.463 li
148.292 48.18 li
147.947 48.18 li
cp
f
148.291 68.463 mo
148.637 68.463 li
148.637 47.316 li
148.291 47.316 li
cp
f
148.291 68.463 mo
148.637 68.463 li
148.637 47.316 li
148.291 47.316 li
cp
f
148.637 68.463 mo
148.983 68.463 li
148.983 46.505 li
148.637 46.505 li
cp
f
148.637 68.463 mo
148.983 68.463 li
148.983 46.505 li
148.637 46.505 li
cp
f
148.983 68.463 mo
149.328 68.463 li
149.328 47.074 li
148.983 47.074 li
cp
f
148.983 68.463 mo
149.328 68.463 li
149.328 47.074 li
148.983 47.074 li
cp
f
149.328 68.463 mo
149.675 68.463 li
149.675 47.752 li
149.328 47.752 li
cp
f
149.328 68.463 mo
149.675 68.463 li
149.675 47.752 li
149.328 47.752 li
cp
f
149.675 68.463 mo
150.019 68.463 li
150.019 48.37 li
149.675 48.37 li
cp
f
149.675 68.463 mo
150.019 68.463 li
150.019 48.37 li
149.675 48.37 li
cp
f
150.019 68.463 mo
150.365 68.463 li
150.365 49.211 li
150.019 49.211 li
cp
f
150.019 68.463 mo
150.365 68.463 li
150.365 49.211 li
150.019 49.211 li
cp
f
150.365 68.463 mo
150.711 68.463 li
150.711 49.636 li
150.365 49.636 li
cp
f
150.365 68.463 mo
150.711 68.463 li
150.711 49.636 li
150.365 49.636 li
cp
f
150.711 68.463 mo
151.057 68.463 li
151.057 51.259 li
150.711 51.259 li
cp
f
150.711 68.463 mo
151.057 68.463 li
151.057 51.259 li
150.711 51.259 li
cp
f
151.057 68.463 mo
151.403 68.463 li
151.403 51.876 li
151.057 51.876 li
cp
f
151.057 68.463 mo
151.403 68.463 li
151.403 51.876 li
151.057 51.876 li
cp
f
151.402 68.463 mo
151.748 68.463 li
151.748 52.86 li
151.402 52.86 li
cp
f
151.402 68.463 mo
151.748 68.463 li
151.748 52.86 li
151.402 52.86 li
cp
f
151.749 68.463 mo
152.094 68.463 li
152.094 53.816 li
151.749 53.816 li
cp
f
151.749 68.463 mo
152.094 68.463 li
152.094 53.816 li
151.749 53.816 li
cp
f
152.094 68.463 mo
152.439 68.463 li
152.439 54.563 li
152.094 54.563 li
cp
f
152.094 68.463 mo
152.439 68.463 li
152.439 54.563 li
152.094 54.563 li
cp
f
152.438 68.463 mo
152.784 68.463 li
152.784 55.708 li
152.438 55.708 li
cp
f
152.438 68.463 mo
152.784 68.463 li
152.784 55.708 li
152.438 55.708 li
cp
f
152.785 68.463 mo
153.13 68.463 li
153.13 56.706 li
152.785 56.706 li
cp
f
152.785 68.463 mo
153.13 68.463 li
153.13 56.706 li
152.785 56.706 li
cp
f
153.13 68.463 mo
153.477 68.463 li
153.477 57.397 li
153.13 57.397 li
cp
f
153.13 68.463 mo
153.477 68.463 li
153.477 57.397 li
153.13 57.397 li
cp
f
153.477 68.463 mo
153.821 68.463 li
153.821 58.399 li
153.477 58.399 li
cp
f
153.477 68.463 mo
153.821 68.463 li
153.821 58.399 li
153.477 58.399 li
cp
f
153.821 68.463 mo
154.168 68.463 li
154.168 58.962 li
153.821 58.962 li
cp
f
153.821 68.463 mo
154.168 68.463 li
154.168 58.962 li
153.821 58.962 li
cp
f
154.168 68.463 mo
154.513 68.463 li
154.513 59.705 li
154.168 59.705 li
cp
f
154.168 68.463 mo
154.513 68.463 li
154.513 59.705 li
154.168 59.705 li
cp
f
154.513 68.463 mo
154.859 68.463 li
154.859 60.645 li
154.513 60.645 li
cp
f
154.513 68.463 mo
154.859 68.463 li
154.859 60.645 li
154.513 60.645 li
cp
f
154.859 68.463 mo
155.204 68.463 li
155.204 61.715 li
154.859 61.715 li
cp
f
154.859 68.463 mo
155.204 68.463 li
155.204 61.715 li
154.859 61.715 li
cp
f
155.204 68.463 mo
155.55 68.463 li
155.55 62.505 li
155.204 62.505 li
cp
f
155.204 68.463 mo
155.55 68.463 li
155.55 62.505 li
155.204 62.505 li
cp
f
155.551 68.463 mo
155.897 68.463 li
155.897 63.483 li
155.551 63.483 li
cp
f
155.551 68.463 mo
155.897 68.463 li
155.897 63.483 li
155.551 63.483 li
cp
f
155.896 68.463 mo
156.242 68.463 li
156.242 64.461 li
155.896 64.461 li
cp
f
155.896 68.463 mo
156.242 68.463 li
156.242 64.461 li
155.896 64.461 li
cp
f
156.242 68.463 mo
156.588 68.463 li
156.588 65.377 li
156.242 65.377 li
cp
f
156.242 68.463 mo
156.588 68.463 li
156.588 65.377 li
156.242 65.377 li
cp
f
156.587 68.463 mo
156.933 68.463 li
156.933 66.054 li
156.587 66.054 li
cp
f
156.587 68.463 mo
156.933 68.463 li
156.933 66.054 li
156.587 66.054 li
cp
f
156.933 68.463 mo
157.279 68.463 li
157.279 66.689 li
156.933 66.689 li
cp
f
156.933 68.463 mo
157.279 68.463 li
157.279 66.689 li
156.933 66.689 li
cp
f
157.279 68.463 mo
157.625 68.463 li
157.625 67.13 li
157.279 67.13 li
cp
f
157.279 68.463 mo
157.625 68.463 li
157.625 67.13 li
157.279 67.13 li
cp
f
157.624 68.463 mo
157.97 68.463 li
157.97 67.405 li
157.624 67.405 li
cp
f
157.624 68.463 mo
157.97 68.463 li
157.97 67.405 li
157.624 67.405 li
cp
f
157.97 68.4629 mo
158.316 68.4629 li
cp
f
157.97 68.4629 mo
158.316 68.4629 li
cp
f
158.316 68.4629 mo
158.661 68.4629 li
cp
f
158.316 68.4629 mo
158.661 68.4629 li
cp
f
158.661 68.4629 mo
159.006 68.4629 li
cp
f
158.661 68.4629 mo
159.006 68.4629 li
cp
f
159.006 68.4629 mo
159.353 68.4629 li
cp
f
159.006 68.4629 mo
159.353 68.4629 li
cp
f
159.353 68.4629 mo
159.698 68.4629 li
cp
f
159.353 68.4629 mo
159.698 68.4629 li
cp
f
159.698 68.4629 mo
160.044 68.4629 li
cp
f
159.698 68.4629 mo
160.044 68.4629 li
cp
f
160.044 68.4629 mo
160.389 68.4629 li
cp
f
160.044 68.4629 mo
160.389 68.4629 li
cp
f
160.389 68.4629 mo
160.735 68.4629 li
cp
f
160.389 68.4629 mo
160.735 68.4629 li
cp
f
160.735 68.4629 mo
161.081 68.4629 li
cp
f
160.735 68.4629 mo
161.081 68.4629 li
cp
f
161.08 68.4629 mo
161.427 68.4629 li
cp
f
161.08 68.4629 mo
161.427 68.4629 li
cp
f
161.428 68.4629 mo
161.773 68.4629 li
cp
f
161.428 68.4629 mo
161.773 68.4629 li
cp
f
161.772 68.4629 mo
162.118 68.4629 li
cp
f
161.772 68.4629 mo
162.118 68.4629 li
cp
f
162.118 68.4629 mo
162.464 68.4629 li
cp
f
162.118 68.4629 mo
162.464 68.4629 li
cp
f
162.464 68.4629 mo
162.809 68.4629 li
cp
f
162.464 68.4629 mo
162.809 68.4629 li
cp
f
162.809 68.4629 mo
163.154 68.4629 li
cp
f
162.809 68.4629 mo
163.154 68.4629 li
cp
f
163.154 68.4629 mo
163.5 68.4629 li
cp
f
163.154 68.4629 mo
163.5 68.4629 li
cp
f
163.5 68.4629 mo
163.846 68.4629 li
cp
f
163.5 68.4629 mo
163.846 68.4629 li
cp
f
163.846 68.4629 mo
164.192 68.4629 li
cp
f
163.846 68.4629 mo
164.192 68.4629 li
cp
f
164.191 68.4629 mo
164.537 68.4629 li
cp
f
164.191 68.4629 mo
164.537 68.4629 li
cp
f
164.538 68.4629 mo
164.883 68.4629 li
cp
f
164.538 68.4629 mo
164.883 68.4629 li
cp
f
164.883 68.4629 mo
165.23 68.4629 li
cp
f
164.883 68.4629 mo
165.23 68.4629 li
cp
f
165.229 68.4629 mo
165.574 68.4629 li
cp
f
165.229 68.4629 mo
165.574 68.4629 li
cp
f
165.574 68.4629 mo
165.92 68.4629 li
cp
f
165.574 68.4629 mo
165.92 68.4629 li
cp
f
165.919 68.4629 mo
166.265 68.4629 li
cp
f
165.919 68.4629 mo
166.265 68.4629 li
cp
f
166.266 68.4629 mo
166.613 68.4629 li
cp
f
166.266 68.4629 mo
166.613 68.4629 li
cp
f
166.613 68.4629 mo
166.957 68.4629 li
cp
f
166.613 68.4629 mo
166.957 68.4629 li
cp
f
166.957 68.4629 mo
167.303 68.4629 li
cp
f
166.957 68.4629 mo
167.303 68.4629 li
cp
f
167.304 68.4629 mo
167.649 68.4629 li
cp
f
167.304 68.4629 mo
167.649 68.4629 li
cp
f
167.648 68.4629 mo
167.994 68.4629 li
cp
f
167.648 68.4629 mo
167.994 68.4629 li
cp
f
167.994 68.4629 mo
168.34 68.4629 li
cp
f
167.994 68.4629 mo
168.34 68.4629 li
cp
f
168.34 68.4629 mo
168.686 68.4629 li
cp
f
168.34 68.4629 mo
168.686 68.4629 li
cp
f
168.685 68.4629 mo
169.031 68.4629 li
cp
f
168.685 68.4629 mo
169.031 68.4629 li
cp
f
169.032 68.4629 mo
169.376 68.4629 li
cp
f
169.032 68.4629 mo
169.376 68.4629 li
cp
f
169.376 68.4629 mo
169.722 68.4629 li
cp
f
169.376 68.4629 mo
169.722 68.4629 li
cp
f
169.723 68.4629 mo
170.068 68.4629 li
cp
f
169.723 68.4629 mo
170.068 68.4629 li
cp
f
170.068 68.4629 mo
170.414 68.4629 li
cp
f
170.068 68.4629 mo
170.414 68.4629 li
cp
f
170.414 68.4629 mo
170.76 68.4629 li
cp
f
170.414 68.4629 mo
170.76 68.4629 li
cp
f
170.762 68.4629 mo
171.108 68.4629 li
cp
f
170.762 68.4629 mo
171.108 68.4629 li
cp
f
171.108 68.4629 mo
171.454 68.4629 li
cp
f
171.108 68.4629 mo
171.454 68.4629 li
cp
f
171.454 68.4629 mo
171.799 68.4629 li
cp
f
171.454 68.4629 mo
171.799 68.4629 li
cp
f
171.798 68.4629 mo
172.144 68.4629 li
cp
f
171.798 68.4629 mo
172.144 68.4629 li
cp
f
172.145 68.4629 mo
172.491 68.4629 li
cp
f
172.145 68.4629 mo
172.491 68.4629 li
cp
f
172.49 68.4629 mo
172.835 68.4629 li
cp
f
172.49 68.4629 mo
172.835 68.4629 li
cp
f
172.835 68.4629 mo
173.181 68.4629 li
cp
f
172.835 68.4629 mo
173.181 68.4629 li
cp
f
173.182 68.4629 mo
173.528 68.4629 li
cp
f
173.182 68.4629 mo
173.528 68.4629 li
cp
f
173.527 68.4629 mo
173.873 68.4629 li
cp
f
173.527 68.4629 mo
173.873 68.4629 li
cp
f
173.873 68.4629 mo
174.219 68.4629 li
cp
f
173.873 68.4629 mo
174.219 68.4629 li
cp
f
174.218 68.4629 mo
174.564 68.4629 li
cp
f
174.218 68.4629 mo
174.564 68.4629 li
cp
f
174.564 68.4629 mo
174.91 68.4629 li
cp
f
174.564 68.4629 mo
174.91 68.4629 li
cp
f
177.693 69.5142 mo
176.742 71.5532 li
.746 .676 .668 .898 cmyk
@
178.818 69.5142 mo
177.867 71.5532 li
@
180.686 70.5332 mo
197.798 70.5332 li
@
0 0 0 1 cmyk
ZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf185.29 78.2114 mo(3)shZDWBPX+HelveticaNeue [6.9415 0 0 -6.9415 0 0 ]msf188.622 78.2114 mo(\003\))shZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf190.933 78.2114 mo( ss)[1.666 2.83218 0 ]xsh215.766 69.905 mo
198.133 69.905 li
198.133 71.161 li
215.766 71.161 li
cp
f
157.288 69.905 mo
139.657 69.905 li
139.657 71.161 li
157.288 71.161 li
cp
f
157.288 70.5332 mo
174.573 70.5332 li
.746 .676 .668 .898 cmyk
@
0 0 0 1 cmyk
ZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf139.656 78.2114 mo(\26150)[3.81783 3.54707 0 ]xsh157.288 78.2114 mo(5)shZDWBPX+HelveticaNeue [6.9415 0 0 -6.9415 0 0 ]msf160.439 78.2114 mo(\003\))shZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf162.751 78.2114 mo( ss)[1.666 2.83218 0 ]xsh53.451 131.097 mo
54.201 131.097 li
cp
.254 .203 .207 0 cmyk
f
53.451 131.097 mo
54.201 131.097 li
cp
.746 .676 .668 .898 cmyk
f
54.2007 131.097 mo
54.9517 131.097 li
cp
.254 .203 .207 0 cmyk
f
54.2007 131.097 mo
54.9517 131.097 li
cp
.746 .676 .668 .898 cmyk
f
54.9513 131.097 mo
55.7003 131.097 li
cp
.254 .203 .207 0 cmyk
f
54.9513 131.097 mo
55.7003 131.097 li
cp
.746 .676 .668 .898 cmyk
f
55.7001 131.097 mo
56.4491 131.097 li
cp
.254 .203 .207 0 cmyk
f
55.7001 131.097 mo
56.4491 131.097 li
cp
.746 .676 .668 .898 cmyk
f
56.4489 131.097 mo
57.1999 131.097 li
cp
.254 .203 .207 0 cmyk
f
56.4489 131.097 mo
57.1999 131.097 li
cp
.746 .676 .668 .898 cmyk
f
57.1995 131.097 mo
57.9485 131.097 li
cp
.254 .203 .207 0 cmyk
f
57.1995 131.097 mo
57.9485 131.097 li
cp
.746 .676 .668 .898 cmyk
f
57.951 131.097 mo
58.7 131.097 li
cp
.254 .203 .207 0 cmyk
f
57.951 131.097 mo
58.7 131.097 li
cp
.746 .676 .668 .898 cmyk
f
58.6998 131.097 mo
59.4498 131.097 li
cp
.254 .203 .207 0 cmyk
f
58.6998 131.097 mo
59.4498 131.097 li
cp
.746 .676 .668 .898 cmyk
f
59.4495 131.097 mo
60.1995 131.097 li
cp
.254 .203 .207 0 cmyk
f
59.4495 131.097 mo
60.1995 131.097 li
cp
.746 .676 .668 .898 cmyk
f
60.1992 131.097 mo
60.9492 131.097 li
cp
.254 .203 .207 0 cmyk
f
60.1992 131.097 mo
60.9492 131.097 li
cp
.746 .676 .668 .898 cmyk
f
60.9489 131.097 mo
61.6989 131.097 li
cp
.254 .203 .207 0 cmyk
f
60.9489 131.097 mo
61.6989 131.097 li
cp
.746 .676 .668 .898 cmyk
f
61.6986 131.097 mo
62.4476 131.097 li
cp
.254 .203 .207 0 cmyk
f
61.6986 131.097 mo
62.4476 131.097 li
cp
.746 .676 .668 .898 cmyk
f
62.4474 131.097 mo
63.1984 131.097 li
cp
.254 .203 .207 0 cmyk
f
62.4474 131.097 mo
63.1984 131.097 li
cp
.746 .676 .668 .898 cmyk
f
63.198 131.097 mo
63.946 131.097 li
cp
.254 .203 .207 0 cmyk
f
63.198 131.097 mo
63.946 131.097 li
cp
.746 .676 .668 .898 cmyk
f
63.9459 131.097 mo
64.6959 131.097 li
cp
.254 .203 .207 0 cmyk
f
63.9459 131.097 mo
64.6959 131.097 li
cp
.746 .676 .668 .898 cmyk
f
64.6956 131.097 mo
65.4466 131.097 li
cp
.254 .203 .207 0 cmyk
f
64.6956 131.097 mo
65.4466 131.097 li
cp
.746 .676 .668 .898 cmyk
f
65.4462 131.097 mo
66.1952 131.097 li
cp
.254 .203 .207 0 cmyk
f
65.4462 131.097 mo
66.1952 131.097 li
cp
.746 .676 .668 .898 cmyk
f
66.195 131.097 mo
66.945 131.097 li
cp
.254 .203 .207 0 cmyk
f
66.195 131.097 mo
66.945 131.097 li
cp
.746 .676 .668 .898 cmyk
f
66.9447 131.097 mo
67.6947 131.097 li
cp
.254 .203 .207 0 cmyk
f
66.9447 131.097 mo
67.6947 131.097 li
cp
.746 .676 .668 .898 cmyk
f
67.6944 131.097 mo
68.4434 131.097 li
cp
.254 .203 .207 0 cmyk
f
67.6944 131.097 mo
68.4434 131.097 li
cp
.746 .676 .668 .898 cmyk
f
68.4432 131.097 mo
69.1932 131.097 li
cp
.254 .203 .207 0 cmyk
f
68.4432 131.097 mo
69.1932 131.097 li
cp
.746 .676 .668 .898 cmyk
f
69.1929 131.097 mo
69.9429 131.097 li
cp
.254 .203 .207 0 cmyk
f
69.1929 131.097 mo
69.9429 131.097 li
cp
.746 .676 .668 .898 cmyk
f
69.9426 131.097 mo
70.6926 131.097 li
cp
.254 .203 .207 0 cmyk
f
69.9426 131.097 mo
70.6926 131.097 li
cp
.746 .676 .668 .898 cmyk
f
70.6923 131.097 mo
71.4413 131.097 li
cp
.254 .203 .207 0 cmyk
f
70.6923 131.097 mo
71.4413 131.097 li
cp
.746 .676 .668 .898 cmyk
f
71.441 131.097 mo
72.191 131.097 li
72.191 131.008 li
71.441 131.008 li
cp
.254 .203 .207 0 cmyk
f
71.441 131.097 mo
72.191 131.097 li
72.191 131.008 li
71.441 131.008 li
cp
.746 .676 .668 .898 cmyk
f
72.191 131.097 mo
72.941 131.097 li
72.941 130.809 li
72.191 130.809 li
cp
.254 .203 .207 0 cmyk
f
72.191 131.097 mo
72.941 131.097 li
72.941 130.809 li
72.191 130.809 li
cp
.746 .676 .668 .898 cmyk
f
72.941 131.097 mo
73.691 131.097 li
73.691 130.481 li
72.941 130.481 li
cp
.254 .203 .207 0 cmyk
f
72.941 131.097 mo
73.691 131.097 li
73.691 130.481 li
72.941 130.481 li
cp
.746 .676 .668 .898 cmyk
f
73.69 131.097 mo
74.439 131.097 li
74.439 130.004 li
73.69 130.004 li
cp
.254 .203 .207 0 cmyk
f
73.69 131.097 mo
74.439 131.097 li
74.439 130.004 li
73.69 130.004 li
cp
.746 .676 .668 .898 cmyk
f
74.439 131.097 mo
75.189 131.097 li
75.189 129.47 li
74.439 129.47 li
cp
.254 .203 .207 0 cmyk
f
74.439 131.097 mo
75.189 131.097 li
75.189 129.47 li
74.439 129.47 li
cp
.746 .676 .668 .898 cmyk
f
75.189 131.097 mo
75.939 131.097 li
75.939 128.954 li
75.189 128.954 li
cp
.254 .203 .207 0 cmyk
f
75.189 131.097 mo
75.939 131.097 li
75.939 128.954 li
75.189 128.954 li
cp
.746 .676 .668 .898 cmyk
f
75.938 131.097 mo
76.687 131.097 li
76.687 127.989 li
75.938 127.989 li
cp
.254 .203 .207 0 cmyk
f
75.938 131.097 mo
76.687 131.097 li
76.687 127.989 li
75.938 127.989 li
cp
.746 .676 .668 .898 cmyk
f
76.687 131.097 mo
77.438 131.097 li
77.438 127.07 li
76.687 127.07 li
cp
.254 .203 .207 0 cmyk
f
76.687 131.097 mo
77.438 131.097 li
77.438 127.07 li
76.687 127.07 li
cp
.746 .676 .668 .898 cmyk
f
77.438 131.097 mo
78.187 131.097 li
78.187 126.265 li
77.438 126.265 li
cp
.254 .203 .207 0 cmyk
f
77.438 131.097 mo
78.187 131.097 li
78.187 126.265 li
77.438 126.265 li
cp
.746 .676 .668 .898 cmyk
f
78.187 131.097 mo
78.937 131.097 li
78.937 125.264 li
78.187 125.264 li
cp
.254 .203 .207 0 cmyk
f
78.187 131.097 mo
78.937 131.097 li
78.937 125.264 li
78.187 125.264 li
cp
.746 .676 .668 .898 cmyk
f
78.936 131.097 mo
79.686 131.097 li
79.686 124.59 li
78.936 124.59 li
cp
.254 .203 .207 0 cmyk
f
78.936 131.097 mo
79.686 131.097 li
79.686 124.59 li
78.936 124.59 li
cp
.746 .676 .668 .898 cmyk
f
79.686 131.097 mo
80.436 131.097 li
80.436 123.73 li
79.686 123.73 li
cp
.254 .203 .207 0 cmyk
f
79.686 131.097 mo
80.436 131.097 li
80.436 123.73 li
79.686 123.73 li
cp
.746 .676 .668 .898 cmyk
f
80.438 131.097 mo
81.188 131.097 li
81.188 123.005 li
80.438 123.005 li
cp
.254 .203 .207 0 cmyk
f
80.438 131.097 mo
81.188 131.097 li
81.188 123.005 li
80.438 123.005 li
cp
.746 .676 .668 .898 cmyk
f
81.187 131.097 mo
81.937 131.097 li
81.937 122.245 li
81.187 122.245 li
cp
.254 .203 .207 0 cmyk
f
81.187 131.097 mo
81.937 131.097 li
81.937 122.245 li
81.187 122.245 li
cp
.746 .676 .668 .898 cmyk
f
81.937 131.097 mo
82.686 131.097 li
82.686 121.423 li
81.937 121.423 li
cp
.254 .203 .207 0 cmyk
f
81.937 131.097 mo
82.686 131.097 li
82.686 121.423 li
81.937 121.423 li
cp
.746 .676 .668 .898 cmyk
f
82.686 131.097 mo
83.436 131.097 li
83.436 120.183 li
82.686 120.183 li
cp
.254 .203 .207 0 cmyk
f
82.686 131.097 mo
83.436 131.097 li
83.436 120.183 li
82.686 120.183 li
cp
.746 .676 .668 .898 cmyk
f
83.435 131.097 mo
84.184 131.097 li
84.184 119.167 li
83.435 119.167 li
cp
.254 .203 .207 0 cmyk
f
83.435 131.097 mo
84.184 131.097 li
84.184 119.167 li
83.435 119.167 li
cp
.746 .676 .668 .898 cmyk
f
84.184 131.097 mo
84.935 131.097 li
84.935 118.041 li
84.184 118.041 li
cp
.254 .203 .207 0 cmyk
f
84.184 131.097 mo
84.935 131.097 li
84.935 118.041 li
84.184 118.041 li
cp
.746 .676 .668 .898 cmyk
f
84.935 131.097 mo
85.686 131.097 li
85.686 116.646 li
84.935 116.646 li
cp
.254 .203 .207 0 cmyk
f
84.935 131.097 mo
85.686 131.097 li
85.686 116.646 li
84.935 116.646 li
cp
.746 .676 .668 .898 cmyk
f
85.685 131.097 mo
86.433 131.097 li
86.433 115.171 li
85.685 115.171 li
cp
.254 .203 .207 0 cmyk
f
85.685 131.097 mo
86.433 131.097 li
86.433 115.171 li
85.685 115.171 li
cp
.746 .676 .668 .898 cmyk
f
86.433 131.097 mo
87.184 131.097 li
87.184 113.931 li
86.433 113.931 li
cp
.254 .203 .207 0 cmyk
f
86.433 131.097 mo
87.184 131.097 li
87.184 113.931 li
86.433 113.931 li
cp
.746 .676 .668 .898 cmyk
f
87.184 131.097 mo
87.933 131.097 li
87.933 112.429 li
87.184 112.429 li
cp
.254 .203 .207 0 cmyk
f
87.184 131.097 mo
87.933 131.097 li
87.933 112.429 li
87.184 112.429 li
cp
.746 .676 .668 .898 cmyk
f
87.933 131.097 mo
88.682 131.097 li
88.682 111.278 li
87.933 111.278 li
cp
.254 .203 .207 0 cmyk
f
87.933 131.097 mo
88.682 131.097 li
88.682 111.278 li
87.933 111.278 li
cp
.746 .676 .668 .898 cmyk
f
88.682 131.097 mo
89.433 131.097 li
89.433 110.699 li
88.682 110.699 li
cp
.254 .203 .207 0 cmyk
f
88.682 131.097 mo
89.433 131.097 li
89.433 110.699 li
88.682 110.699 li
cp
.746 .676 .668 .898 cmyk
f
89.432 131.097 mo
90.181 131.097 li
90.181 110.526 li
89.432 110.526 li
cp
.254 .203 .207 0 cmyk
f
89.432 131.097 mo
90.181 131.097 li
90.181 110.526 li
89.432 110.526 li
cp
.746 .676 .668 .898 cmyk
f
90.181 131.097 mo
90.931 131.097 li
90.931 110.477 li
90.181 110.477 li
cp
.254 .203 .207 0 cmyk
f
90.181 131.097 mo
90.931 131.097 li
90.931 110.477 li
90.181 110.477 li
cp
.746 .676 .668 .898 cmyk
f
90.931 131.097 mo
91.681 131.097 li
91.681 110.477 li
90.931 110.477 li
cp
.254 .203 .207 0 cmyk
f
90.931 131.097 mo
91.681 131.097 li
91.681 110.477 li
90.931 110.477 li
cp
.746 .676 .668 .898 cmyk
f
91.68 131.097 mo
92.429 131.097 li
92.429 110.621 li
91.68 110.621 li
cp
.254 .203 .207 0 cmyk
f
91.68 131.097 mo
92.429 131.097 li
92.429 110.621 li
91.68 110.621 li
cp
.746 .676 .668 .898 cmyk
f
92.429 131.097 mo
93.179 131.097 li
93.179 111.027 li
92.429 111.027 li
cp
.254 .203 .207 0 cmyk
f
92.429 131.097 mo
93.179 131.097 li
93.179 111.027 li
92.429 111.027 li
cp
.746 .676 .668 .898 cmyk
f
93.179 131.097 mo
93.928 131.097 li
93.928 112.509 li
93.179 112.509 li
cp
.254 .203 .207 0 cmyk
f
93.179 131.097 mo
93.928 131.097 li
93.928 112.509 li
93.179 112.509 li
cp
.746 .676 .668 .898 cmyk
f
93.928 131.097 mo
94.678 131.097 li
94.678 113.659 li
93.928 113.659 li
cp
.254 .203 .207 0 cmyk
f
93.928 131.097 mo
94.678 131.097 li
94.678 113.659 li
93.928 113.659 li
cp
.746 .676 .668 .898 cmyk
f
94.677 131.097 mo
95.428 131.097 li
95.428 114.497 li
94.677 114.497 li
cp
.254 .203 .207 0 cmyk
f
94.677 131.097 mo
95.428 131.097 li
95.428 114.497 li
94.677 114.497 li
cp
.746 .676 .668 .898 cmyk
f
95.428 131.097 mo
96.177 131.097 li
96.177 115.734 li
95.428 115.734 li
cp
.254 .203 .207 0 cmyk
f
95.428 131.097 mo
96.177 131.097 li
96.177 115.734 li
95.428 115.734 li
cp
.746 .676 .668 .898 cmyk
f
96.177 131.097 mo
96.927 131.097 li
96.927 116.587 li
96.177 116.587 li
cp
.254 .203 .207 0 cmyk
f
96.177 131.097 mo
96.927 131.097 li
96.927 116.587 li
96.177 116.587 li
cp
.746 .676 .668 .898 cmyk
f
96.926 131.097 mo
97.676 131.097 li
97.676 117.607 li
96.926 117.607 li
cp
.254 .203 .207 0 cmyk
f
96.926 131.097 mo
97.676 131.097 li
97.676 117.607 li
96.926 117.607 li
cp
.746 .676 .668 .898 cmyk
f
97.676 131.097 mo
98.425 131.097 li
98.425 118.542 li
97.676 118.542 li
cp
.254 .203 .207 0 cmyk
f
97.676 131.097 mo
98.425 131.097 li
98.425 118.542 li
97.676 118.542 li
cp
.746 .676 .668 .898 cmyk
f
98.425 131.097 mo
99.176 131.097 li
99.176 119.312 li
98.425 119.312 li
cp
.254 .203 .207 0 cmyk
f
98.425 131.097 mo
99.176 131.097 li
99.176 119.312 li
98.425 119.312 li
cp
.746 .676 .668 .898 cmyk
f
99.176 131.097 mo
99.926 131.097 li
99.926 120.463 li
99.176 120.463 li
cp
.254 .203 .207 0 cmyk
f
99.176 131.097 mo
99.926 131.097 li
99.926 120.463 li
99.176 120.463 li
cp
.746 .676 .668 .898 cmyk
f
99.925 131.097 mo
100.674 131.097 li
100.674 121.518 li
99.925 121.518 li
cp
.254 .203 .207 0 cmyk
f
99.925 131.097 mo
100.674 131.097 li
100.674 121.518 li
99.925 121.518 li
cp
.746 .676 .668 .898 cmyk
f
100.674 131.097 mo
101.423 131.097 li
101.423 122.323 li
100.674 122.323 li
cp
.254 .203 .207 0 cmyk
f
100.674 131.097 mo
101.423 131.097 li
101.423 122.323 li
100.674 122.323 li
cp
.746 .676 .668 .898 cmyk
f
101.423 131.097 mo
102.174 131.097 li
102.174 123.253 li
101.423 123.253 li
cp
.254 .203 .207 0 cmyk
f
101.423 131.097 mo
102.174 131.097 li
102.174 123.253 li
101.423 123.253 li
cp
.746 .676 .668 .898 cmyk
f
102.173 131.097 mo
102.922 131.097 li
102.922 124.231 li
102.173 124.231 li
cp
.254 .203 .207 0 cmyk
f
102.173 131.097 mo
102.922 131.097 li
102.922 124.231 li
102.173 124.231 li
cp
.746 .676 .668 .898 cmyk
f
102.925 131.097 mo
103.674 131.097 li
103.674 125.126 li
102.925 125.126 li
cp
.254 .203 .207 0 cmyk
f
102.925 131.097 mo
103.674 131.097 li
103.674 125.126 li
102.925 125.126 li
cp
.746 .676 .668 .898 cmyk
f
103.674 131.097 mo
104.424 131.097 li
104.424 126.086 li
103.674 126.086 li
cp
.254 .203 .207 0 cmyk
f
103.674 131.097 mo
104.424 131.097 li
104.424 126.086 li
103.674 126.086 li
cp
.746 .676 .668 .898 cmyk
f
104.423 131.097 mo
105.173 131.097 li
105.173 127.149 li
104.423 127.149 li
cp
.254 .203 .207 0 cmyk
f
104.423 131.097 mo
105.173 131.097 li
105.173 127.149 li
104.423 127.149 li
cp
.746 .676 .668 .898 cmyk
f
105.173 131.097 mo
105.923 131.097 li
105.923 127.882 li
105.173 127.882 li
cp
.254 .203 .207 0 cmyk
f
105.173 131.097 mo
105.923 131.097 li
105.923 127.882 li
105.173 127.882 li
cp
.746 .676 .668 .898 cmyk
f
105.923 131.097 mo
106.672 131.097 li
106.672 128.794 li
105.923 128.794 li
cp
.254 .203 .207 0 cmyk
f
105.923 131.097 mo
106.672 131.097 li
106.672 128.794 li
105.923 128.794 li
cp
.746 .676 .668 .898 cmyk
f
106.672 131.097 mo
107.422 131.097 li
107.422 129.646 li
106.672 129.646 li
cp
.254 .203 .207 0 cmyk
f
106.672 131.097 mo
107.422 131.097 li
107.422 129.646 li
106.672 129.646 li
cp
.746 .676 .668 .898 cmyk
f
107.421 131.097 mo
108.171 131.097 li
108.171 130.309 li
107.421 130.309 li
cp
.254 .203 .207 0 cmyk
f
107.421 131.097 mo
108.171 131.097 li
108.171 130.309 li
107.421 130.309 li
cp
.746 .676 .668 .898 cmyk
f
108.171 131.097 mo
108.92 131.097 li
108.92 130.758 li
108.171 130.758 li
cp
.254 .203 .207 0 cmyk
f
108.171 131.097 mo
108.92 131.097 li
108.92 130.758 li
108.171 130.758 li
cp
.746 .676 .668 .898 cmyk
f
108.92 131.097 mo
109.67 131.097 li
109.67 131 li
108.92 131 li
cp
.254 .203 .207 0 cmyk
f
108.92 131.097 mo
109.67 131.097 li
109.67 131 li
108.92 131 li
cp
.746 .676 .668 .898 cmyk
f
109.67 131.097 mo
110.421 131.097 li
cp
.254 .203 .207 0 cmyk
f
109.67 131.097 mo
110.421 131.097 li
cp
.746 .676 .668 .898 cmyk
f
110.42 131.097 mo
111.168 131.097 li
cp
.254 .203 .207 0 cmyk
f
110.42 131.097 mo
111.168 131.097 li
cp
.746 .676 .668 .898 cmyk
f
111.168 131.097 mo
111.919 131.097 li
cp
.254 .203 .207 0 cmyk
f
111.168 131.097 mo
111.919 131.097 li
cp
.746 .676 .668 .898 cmyk
f
111.919 131.097 mo
112.669 131.097 li
cp
.254 .203 .207 0 cmyk
f
111.919 131.097 mo
112.669 131.097 li
cp
.746 .676 .668 .898 cmyk
f
112.668 131.097 mo
113.418 131.097 li
cp
.254 .203 .207 0 cmyk
f
112.668 131.097 mo
113.418 131.097 li
cp
.746 .676 .668 .898 cmyk
f
113.418 131.097 mo
114.167 131.097 li
cp
.254 .203 .207 0 cmyk
f
113.418 131.097 mo
114.167 131.097 li
cp
.746 .676 .668 .898 cmyk
f
114.167 131.097 mo
114.917 131.097 li
cp
.254 .203 .207 0 cmyk
f
114.167 131.097 mo
114.917 131.097 li
cp
.746 .676 .668 .898 cmyk
f
114.916 131.097 mo
115.665 131.097 li
cp
.254 .203 .207 0 cmyk
f
114.916 131.097 mo
115.665 131.097 li
cp
.746 .676 .668 .898 cmyk
f
115.665 131.097 mo
116.415 131.097 li
cp
.254 .203 .207 0 cmyk
f
115.665 131.097 mo
116.415 131.097 li
cp
.746 .676 .668 .898 cmyk
f
116.415 131.097 mo
117.166 131.097 li
cp
.254 .203 .207 0 cmyk
f
116.415 131.097 mo
117.166 131.097 li
cp
.746 .676 .668 .898 cmyk
f
117.166 131.097 mo
117.915 131.097 li
cp
.254 .203 .207 0 cmyk
f
117.166 131.097 mo
117.915 131.097 li
cp
.746 .676 .668 .898 cmyk
f
117.914 131.097 mo
118.663 131.097 li
cp
.254 .203 .207 0 cmyk
f
117.914 131.097 mo
118.663 131.097 li
cp
.746 .676 .668 .898 cmyk
f
118.663 131.097 mo
119.413 131.097 li
cp
.254 .203 .207 0 cmyk
f
118.663 131.097 mo
119.413 131.097 li
cp
.746 .676 .668 .898 cmyk
f
119.413 131.097 mo
120.162 131.097 li
cp
.254 .203 .207 0 cmyk
f
119.413 131.097 mo
120.162 131.097 li
cp
.746 .676 .668 .898 cmyk
f
120.162 131.097 mo
120.912 131.097 li
cp
.254 .203 .207 0 cmyk
f
120.162 131.097 mo
120.912 131.097 li
cp
.746 .676 .668 .898 cmyk
f
120.911 131.097 mo
121.662 131.097 li
cp
.254 .203 .207 0 cmyk
f
120.911 131.097 mo
121.662 131.097 li
cp
.746 .676 .668 .898 cmyk
f
121.662 131.097 mo
122.411 131.097 li
cp
.254 .203 .207 0 cmyk
f
121.662 131.097 mo
122.411 131.097 li
cp
.746 .676 .668 .898 cmyk
f
122.411 131.097 mo
123.162 131.097 li
cp
.254 .203 .207 0 cmyk
f
122.411 131.097 mo
123.162 131.097 li
cp
.746 .676 .668 .898 cmyk
f
123.161 131.097 mo
123.91 131.097 li
cp
.254 .203 .207 0 cmyk
f
123.161 131.097 mo
123.91 131.097 li
cp
.746 .676 .668 .898 cmyk
f
123.91 131.097 mo
124.66 131.097 li
cp
.254 .203 .207 0 cmyk
f
123.91 131.097 mo
124.66 131.097 li
cp
.746 .676 .668 .898 cmyk
f
124.66 131.097 mo
125.41 131.097 li
cp
.254 .203 .207 0 cmyk
f
124.66 131.097 mo
125.41 131.097 li
cp
.746 .676 .668 .898 cmyk
f
125.411 131.097 mo
126.161 131.097 li
cp
.254 .203 .207 0 cmyk
f
125.411 131.097 mo
126.161 131.097 li
cp
.746 .676 .668 .898 cmyk
f
126.161 131.097 mo
126.91 131.097 li
cp
.254 .203 .207 0 cmyk
f
126.161 131.097 mo
126.91 131.097 li
cp
.746 .676 .668 .898 cmyk
f
126.91 131.097 mo
127.66 131.097 li
cp
.254 .203 .207 0 cmyk
f
126.91 131.097 mo
127.66 131.097 li
cp
.746 .676 .668 .898 cmyk
f
127.66 131.097 mo
128.41 131.097 li
cp
.254 .203 .207 0 cmyk
f
127.66 131.097 mo
128.41 131.097 li
cp
.746 .676 .668 .898 cmyk
f
128.409 131.097 mo
129.159 131.097 li
cp
.254 .203 .207 0 cmyk
f
128.409 131.097 mo
129.159 131.097 li
cp
.746 .676 .668 .898 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: DVBAAA+HelveticaNeueLTStd-LtCn AddGlyphs
%ADOt1write: (1.0.24)systemdict beginZDWBPW+HelveticaNeueLTStd-LtCn dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B81F2C3A2E676A0D99F5B79C2412FF5C6E7FBBE44FB1B7F3> |-/E <1C60D8A8C9B77FE2B24B717438500ED58FB649E1EDF34CE3BFDD3CB20AA86679DAC20734E7D4DE5E585FE1AF0254567FB06C2A14E93B209F> |-/c <1C60D8A8C9B704CC330F3181E4AD33EA22EBF66AEA464A9F756D328AB357612481CE0E1BA7A349E165580EF3982C9E7E328505FD41810168D62A2A8AFEBF64DA4AE9289D4A302D662AAF5A28FC3533B9B73E6E56B706C2783E46BA> |-/e <1C60D8A8C9B7113158A2BDFE301711C2F5DD38070EC75ED279C04CF25E98DCF1083B6B0B96237D519C1FB4DDCFF63E5F5C629C7D79927586BAA67E0F565D3B716E6B95DEB4E3A54BB693C6292C960C2A233B8040205EEF13ECFA4F0ED1D81FCBCE8640C740DF2BE7EFD2AA17DBF46CBC1B4D8A523256D98D6E31D1A607133A67515B2D28F61916064DA621AEBEC09CE39FE533949452A8A6DCF73A8E59AEC03BD2FDF2E7> |-/i <1C60D8A8C9B8B2A49B46EFE26DDD7114AE10285BC6691BB3B7A83869CB09659039DC4BEF4F37E279C2E1> |-/j <1C60D8A8C9B8B2A4C04AC49FDCDB1409A3209F7D79E73097A38EE05E84BE049C65430EDFEFE2A3A82B84B263718CD0E050D44827B1724E3E51D5F8BB78CDEF2C6C79E4CDD9A84C9E70E18A7184D2156D01923916D62E7A40EA0F8053ECC88D0EAA7A7659B608> |-/n <1C60D8A8C9B77FE299176F63AE1DD30199916D824061F5AAD66816F192045EDBA9FD5ABFFB08A7D0CF580BF03410B46F50ABC6003935463FC49F9263821631FC300B22790297395F479C22EF1129DC9F88ADEC> |-/o <1C60D8A8C9B7113158A2BDF1AED1F7E7B4380E719416050043B6640DEDA562F52FB56CE56AE6A94D301E95736E0CBF50AED770E6FA025B1BA2805AF24B8248DC7FB34FDE4F86045A46CA3E92D2C994FE41E58C> |-/t <1C60D8A8C9B87B5D4B6DFC19DD62270642EE1841559BE6787D3E0E7B018CC0B56C620D2650A87DAA25369560C3077997C88CEC92330BF16789BDC84E13E6777B4CD52351B24603B6> |-/u <1C60D8A8C9B77FE246C9E7F5EA83272D246796E2A9FF19D157B59A34B8F0402DAFF50152085A66696AFD4B9F61408F98E18695FA1008BB81220647F0494422776D9DA27C61B82D213F217640FEF3DDD8639F396FAA364EDD62B2642FF5FBDAA4778F3C96CF> |-/x <1C60D8A8C9B7299AEC0A41A2DCD2AAA67C7531A9FAFD498E0F79A393D99D460B5146F67C460E14EAE917C8083397D94F86ACEFBEE2E82FD833DA3027CD2654433D> |-systemdict /gcheck known {setglobal} if end {end} ifendZDWBPW+HelveticaNeueLTStd-LtCn /Encoding getdup 45 /hyphen putdup 69 /E putdup 99 /c putdup 101 /e putdup 105 /i putdup 106 /j putdup 110 /n putdup 111 /o putdup 116 /t putdup 117 /u putdup 120 /x putpop%ADOEndSubsetFont
/ZDWBPW+HelveticaNeueLTStd-LtCn*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /.notdef /hyphen 2{/.notdef}rp /zero 2{/.notdef}rp /three /.notdef /five 15{/.notdef}rp /E 29{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i /j 3{/.notdef}rp /n /o 3{/.notdef}rp /s /t /u 2{/.notdef}rp /x 56{/.notdef}rp /endash 78{/.notdef}rp]ZDWBPW+HelveticaNeueLTStd-LtCn nfZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf78.1006 140.673 mo(Exon-exon)[3.38745 2.60303 3.05423 3.17921 2.46418 2.97092 2.60303 3.05422 0 ]xsh81.3562 147.615 mo(junction)[1.31892 3.1445 3.17921 2.964 1.78395 1.36057 3.06116 0 ]xsh53.0487 140.673 mo(\26150)[3.81783 3.54708 0 ]xsh118 140.673 mo(+50)[4.28295 3.54707 0 ]xsh3 lw
4 ml
91.3662 132.813 mo
129.158 132.813 li
@
53.0483 132.813 mo
90.8403 132.813 li
@
139.928 131.027 mo
140.675 131.027 li
cp
0 1 1 0 cmyk
f
139.928 131.027 mo
140.675 131.027 li
cp
f
140.675 131.027 mo
141.426 131.027 li
cp
f
140.675 131.027 mo
141.426 131.027 li
cp
f
141.426 131.027 mo
142.176 131.027 li
cp
f
141.426 131.027 mo
142.176 131.027 li
cp
f
142.176 131.027 mo
142.925 131.027 li
cp
f
142.176 131.027 mo
142.925 131.027 li
cp
f
142.924 131.027 mo
143.674 131.027 li
cp
f
142.924 131.027 mo
143.674 131.027 li
cp
f
143.674 131.027 mo
144.424 131.027 li
cp
f
143.674 131.027 mo
144.424 131.027 li
cp
f
144.426 131.027 mo
145.176 131.027 li
cp
f
144.426 131.027 mo
145.176 131.027 li
cp
f
145.175 131.027 mo
145.925 131.027 li
cp
f
145.175 131.027 mo
145.925 131.027 li
cp
f
145.925 131.027 mo
146.674 131.027 li
cp
f
145.925 131.027 mo
146.674 131.027 li
cp
f
146.674 131.027 mo
147.425 131.027 li
cp
f
146.674 131.027 mo
147.425 131.027 li
cp
f
147.424 131.027 mo
148.173 131.027 li
cp
f
147.424 131.027 mo
148.173 131.027 li
cp
f
148.173 131.027 mo
148.923 131.027 li
cp
f
148.173 131.027 mo
148.923 131.027 li
cp
f
148.923 131.027 mo
149.673 131.027 li
cp
f
148.923 131.027 mo
149.673 131.027 li
cp
f
149.673 131.027 mo
150.422 131.027 li
cp
f
149.673 131.027 mo
150.422 131.027 li
cp
f
150.421 131.027 mo
151.171 131.027 li
cp
f
150.421 131.027 mo
151.171 131.027 li
cp
f
151.171 131.027 mo
151.921 131.027 li
cp
f
151.171 131.027 mo
151.921 131.027 li
cp
f
151.921 131.027 mo
152.671 131.027 li
cp
f
151.921 131.027 mo
152.671 131.027 li
cp
f
152.671 131.027 mo
153.419 131.027 li
cp
f
152.671 131.027 mo
153.419 131.027 li
cp
f
153.419 131.027 mo
154.169 131.027 li
cp
f
153.419 131.027 mo
154.169 131.027 li
cp
f
154.169 131.027 mo
154.919 131.027 li
cp
f
154.169 131.027 mo
154.919 131.027 li
cp
f
154.919 131.027 mo
155.668 131.027 li
cp
f
154.919 131.027 mo
155.668 131.027 li
cp
f
155.668 131.027 mo
156.418 131.027 li
cp
f
155.668 131.027 mo
156.418 131.027 li
cp
f
156.417 131.027 mo
157.168 131.027 li
cp
f
156.417 131.027 mo
157.168 131.027 li
cp
f
157.168 131.027 mo
157.917 131.027 li
cp
f
157.168 131.027 mo
157.917 131.027 li
cp
f
157.917 131.027 mo
158.667 131.027 li
cp
f
157.917 131.027 mo
158.667 131.027 li
cp
f
158.666 131.027 mo
159.416 131.027 li
cp
f
158.666 131.027 mo
159.416 131.027 li
cp
f
159.416 131.027 mo
160.165 131.027 li
cp
f
159.416 131.027 mo
160.165 131.027 li
cp
f
160.165 131.027 mo
160.915 131.027 li
160.915 130.99 li
160.165 130.99 li
cp
f
160.165 131.027 mo
160.915 131.027 li
160.915 130.99 li
160.165 130.99 li
cp
f
160.915 131.027 mo
161.665 131.027 li
161.665 130.831 li
160.915 130.831 li
cp
f
160.915 131.027 mo
161.665 131.027 li
161.665 130.831 li
160.915 130.831 li
cp
f
161.664 131.027 mo
162.414 131.027 li
162.414 130.455 li
161.664 130.455 li
cp
f
161.664 131.027 mo
162.414 131.027 li
162.414 130.455 li
161.664 130.455 li
cp
f
162.414 131.027 mo
163.163 131.027 li
163.163 129.844 li
162.414 129.844 li
cp
f
162.414 131.027 mo
163.163 131.027 li
163.163 129.844 li
162.414 129.844 li
cp
f
163.163 131.027 mo
163.913 131.027 li
163.913 129.142 li
163.163 129.142 li
cp
f
163.163 131.027 mo
163.913 131.027 li
163.913 129.142 li
163.163 129.142 li
cp
f
163.912 131.027 mo
164.662 131.027 li
164.662 128.568 li
163.912 128.568 li
cp
f
163.912 131.027 mo
164.662 131.027 li
164.662 128.568 li
163.912 128.568 li
cp
f
164.662 131.027 mo
165.411 131.027 li
165.411 127.761 li
164.662 127.761 li
cp
f
164.662 131.027 mo
165.411 131.027 li
165.411 127.761 li
164.662 127.761 li
cp
f
165.411 131.027 mo
166.161 131.027 li
166.161 127.03 li
165.411 127.03 li
cp
f
165.411 131.027 mo
166.161 131.027 li
166.161 127.03 li
165.411 127.03 li
cp
f
166.161 131.027 mo
166.912 131.027 li
166.912 126.426 li
166.161 126.426 li
cp
f
166.161 131.027 mo
166.912 131.027 li
166.912 126.426 li
166.161 126.426 li
cp
f
166.912 131.027 mo
167.662 131.027 li
167.662 125.782 li
166.912 125.782 li
cp
f
166.912 131.027 mo
167.662 131.027 li
167.662 125.782 li
166.912 125.782 li
cp
f
167.662 131.027 mo
168.412 131.027 li
168.412 125.084 li
167.662 125.084 li
cp
f
167.662 131.027 mo
168.412 131.027 li
168.412 125.084 li
167.662 125.084 li
cp
f
168.412 131.027 mo
169.161 131.027 li
169.161 124.51 li
168.412 124.51 li
cp
f
168.412 131.027 mo
169.161 131.027 li
169.161 124.51 li
168.412 124.51 li
cp
f
169.16 131.027 mo
169.911 131.027 li
169.911 123.585 li
169.16 123.585 li
cp
f
169.16 131.027 mo
169.911 131.027 li
169.911 123.585 li
169.16 123.585 li
cp
f
169.911 131.027 mo
170.66 131.027 li
170.66 122.714 li
169.911 122.714 li
cp
f
169.911 131.027 mo
170.66 131.027 li
170.66 122.714 li
169.911 122.714 li
cp
f
170.66 131.027 mo
171.411 131.027 li
171.411 122.071 li
170.66 122.071 li
cp
f
170.66 131.027 mo
171.411 131.027 li
171.411 122.071 li
170.66 122.071 li
cp
f
171.41 131.027 mo
172.16 131.027 li
172.16 120.556 li
171.41 120.556 li
cp
f
171.41 131.027 mo
172.16 131.027 li
172.16 120.556 li
171.41 120.556 li
cp
f
172.16 131.027 mo
172.908 131.027 li
172.908 119.153 li
172.16 119.153 li
cp
f
172.16 131.027 mo
172.908 131.027 li
172.908 119.153 li
172.16 119.153 li
cp
f
172.908 131.027 mo
173.658 131.027 li
173.658 118.026 li
172.908 118.026 li
cp
f
172.908 131.027 mo
173.658 131.027 li
173.658 118.026 li
172.908 118.026 li
cp
f
173.658 131.027 mo
174.409 131.027 li
174.409 117.161 li
173.658 117.161 li
cp
f
173.658 131.027 mo
174.409 131.027 li
174.409 117.161 li
173.658 117.161 li
cp
f
174.408 131.027 mo
175.157 131.027 li
175.157 116.517 li
174.408 116.517 li
cp
f
174.408 131.027 mo
175.157 131.027 li
175.157 116.517 li
174.408 116.517 li
cp
f
175.157 131.027 mo
175.907 131.027 li
175.907 116.407 li
175.157 116.407 li
cp
f
175.157 131.027 mo
175.907 131.027 li
175.907 116.407 li
175.157 116.407 li
cp
f
175.907 131.027 mo
176.657 131.027 li
176.657 116.148 li
175.907 116.148 li
cp
f
175.907 131.027 mo
176.657 131.027 li
176.657 116.148 li
175.907 116.148 li
cp
f
176.656 131.027 mo
177.405 131.027 li
177.405 116.093 li
176.656 116.093 li
cp
f
176.656 131.027 mo
177.405 131.027 li
177.405 116.093 li
176.656 116.093 li
cp
f
177.405 131.027 mo
178.155 131.027 li
178.155 116.093 li
177.405 116.093 li
cp
f
177.405 131.027 mo
178.155 131.027 li
178.155 116.093 li
177.405 116.093 li
cp
f
178.155 131.027 mo
178.905 131.027 li
178.905 116.201 li
178.155 116.201 li
cp
f
178.155 131.027 mo
178.905 131.027 li
178.905 116.201 li
178.155 116.201 li
cp
f
178.905 131.027 mo
179.654 131.027 li
179.654 116.334 li
178.905 116.334 li
cp
f
178.905 131.027 mo
179.654 131.027 li
179.654 116.334 li
178.905 116.334 li
cp
f
179.654 131.027 mo
180.404 131.027 li
180.404 117.406 li
179.654 117.406 li
cp
f
179.654 131.027 mo
180.404 131.027 li
180.404 117.406 li
179.654 117.406 li
cp
f
180.403 131.027 mo
181.154 131.027 li
181.154 118.328 li
180.403 118.328 li
cp
f
180.403 131.027 mo
181.154 131.027 li
181.154 118.328 li
180.403 118.328 li
cp
f
181.154 131.027 mo
181.903 131.027 li
181.903 119.359 li
181.154 119.359 li
cp
f
181.154 131.027 mo
181.903 131.027 li
181.903 119.359 li
181.154 119.359 li
cp
f
181.903 131.027 mo
182.653 131.027 li
182.653 120.209 li
181.903 120.209 li
cp
f
181.903 131.027 mo
182.653 131.027 li
182.653 120.209 li
181.903 120.209 li
cp
f
182.652 131.027 mo
183.401 131.027 li
183.401 121.141 li
182.652 121.141 li
cp
f
182.652 131.027 mo
183.401 131.027 li
183.401 121.141 li
182.652 121.141 li
cp
f
183.401 131.027 mo
184.151 131.027 li
184.151 121.827 li
183.401 121.827 li
cp
f
183.401 131.027 mo
184.151 131.027 li
184.151 121.827 li
183.401 121.827 li
cp
f
184.151 131.027 mo
184.901 131.027 li
184.901 122.552 li
184.151 122.552 li
cp
f
184.151 131.027 mo
184.901 131.027 li
184.901 122.552 li
184.151 122.552 li
cp
f
184.9 131.027 mo
185.65 131.027 li
185.65 123.177 li
184.9 123.177 li
cp
f
184.9 131.027 mo
185.65 131.027 li
185.65 123.177 li
184.9 123.177 li
cp
f
185.65 131.027 mo
186.399 131.027 li
186.399 124.023 li
185.65 124.023 li
cp
f
185.65 131.027 mo
186.399 131.027 li
186.399 124.023 li
185.65 124.023 li
cp
f
186.399 131.027 mo
187.149 131.027 li
187.149 125.008 li
186.399 125.008 li
cp
f
186.399 131.027 mo
187.149 131.027 li
187.149 125.008 li
186.399 125.008 li
cp
f
187.149 131.027 mo
187.898 131.027 li
187.898 125.694 li
187.149 125.694 li
cp
f
187.149 131.027 mo
187.898 131.027 li
187.898 125.694 li
187.149 125.694 li
cp
f
187.897 131.027 mo
188.647 131.027 li
188.647 126.178 li
187.897 126.178 li
cp
f
187.897 131.027 mo
188.647 131.027 li
188.647 126.178 li
187.897 126.178 li
cp
f
188.647 131.027 mo
189.398 131.027 li
189.398 127.173 li
188.647 127.173 li
cp
f
188.647 131.027 mo
189.398 131.027 li
189.398 127.173 li
188.647 127.173 li
cp
f
189.4 131.027 mo
190.15 131.027 li
190.15 127.895 li
189.4 127.895 li
cp
f
189.4 131.027 mo
190.15 131.027 li
190.15 127.895 li
189.4 127.895 li
cp
f
190.149 131.027 mo
190.898 131.027 li
190.898 128.827 li
190.149 128.827 li
cp
f
190.149 131.027 mo
190.898 131.027 li
190.898 128.827 li
190.149 128.827 li
cp
f
190.898 131.027 mo
191.648 131.027 li
191.648 129.656 li
190.898 129.656 li
cp
f
190.898 131.027 mo
191.648 131.027 li
191.648 129.656 li
190.898 129.656 li
cp
f
191.648 131.027 mo
192.398 131.027 li
192.398 130.267 li
191.648 130.267 li
cp
f
191.648 131.027 mo
192.398 131.027 li
192.398 130.267 li
191.648 130.267 li
cp
f
192.397 131.027 mo
193.147 131.027 li
193.147 130.717 li
192.397 130.717 li
cp
f
192.397 131.027 mo
193.147 131.027 li
193.147 130.717 li
192.397 130.717 li
cp
f
193.147 131.027 mo
193.897 131.027 li
193.897 131.025 li
193.147 131.025 li
cp
f
193.147 131.027 mo
193.897 131.027 li
193.897 131.025 li
193.147 131.025 li
cp
f
193.897 131.027 mo
194.647 131.027 li
cp
f
193.897 131.027 mo
194.647 131.027 li
cp
f
194.647 131.027 mo
195.396 131.027 li
cp
f
194.647 131.027 mo
195.396 131.027 li
cp
f
195.395 131.027 mo
196.144 131.027 li
cp
f
195.395 131.027 mo
196.144 131.027 li
cp
f
196.144 131.027 mo
196.895 131.027 li
cp
f
196.144 131.027 mo
196.895 131.027 li
cp
f
196.895 131.027 mo
197.644 131.027 li
cp
f
196.895 131.027 mo
197.644 131.027 li
cp
f
197.644 131.027 mo
198.394 131.027 li
cp
f
197.644 131.027 mo
198.394 131.027 li
cp
f
198.393 131.027 mo
199.143 131.027 li
cp
f
198.393 131.027 mo
199.143 131.027 li
cp
f
199.143 131.027 mo
199.893 131.027 li
cp
f
199.143 131.027 mo
199.893 131.027 li
cp
f
199.893 131.027 mo
200.643 131.027 li
cp
f
199.893 131.027 mo
200.643 131.027 li
cp
f
200.642 131.027 mo
201.391 131.027 li
cp
f
200.642 131.027 mo
201.391 131.027 li
cp
f
201.391 131.027 mo
202.141 131.027 li
cp
f
201.391 131.027 mo
202.141 131.027 li
cp
f
202.141 131.027 mo
202.89 131.027 li
cp
f
202.141 131.027 mo
202.89 131.027 li
cp
f
202.89 131.027 mo
203.641 131.027 li
cp
f
202.89 131.027 mo
203.641 131.027 li
cp
f
203.64 131.027 mo
204.389 131.027 li
cp
f
203.64 131.027 mo
204.389 131.027 li
cp
f
204.389 131.027 mo
205.14 131.027 li
cp
f
204.389 131.027 mo
205.14 131.027 li
cp
f
205.14 131.027 mo
205.888 131.027 li
cp
f
205.14 131.027 mo
205.888 131.027 li
cp
f
205.888 131.027 mo
206.639 131.027 li
cp
f
205.888 131.027 mo
206.639 131.027 li
cp
f
206.638 131.027 mo
207.387 131.027 li
cp
f
206.638 131.027 mo
207.387 131.027 li
cp
f
207.387 131.027 mo
208.136 131.027 li
cp
f
207.387 131.027 mo
208.136 131.027 li
cp
f
208.136 131.027 mo
208.886 131.027 li
cp
f
208.136 131.027 mo
208.886 131.027 li
cp
f
208.885 131.027 mo
209.636 131.027 li
cp
f
208.885 131.027 mo
209.636 131.027 li
cp
f
209.636 131.027 mo
210.385 131.027 li
cp
f
209.636 131.027 mo
210.385 131.027 li
cp
f
210.385 131.027 mo
211.136 131.027 li
cp
f
210.385 131.027 mo
211.136 131.027 li
cp
f
211.135 131.027 mo
211.885 131.027 li
cp
f
211.135 131.027 mo
211.885 131.027 li
cp
f
211.887 131.027 mo
212.635 131.027 li
cp
f
211.887 131.027 mo
212.635 131.027 li
cp
f
212.635 131.027 mo
213.386 131.027 li
cp
f
212.635 131.027 mo
213.386 131.027 li
cp
f
213.385 131.027 mo
214.136 131.027 li
cp
f
213.385 131.027 mo
214.136 131.027 li
cp
f
214.136 131.027 mo
214.884 131.027 li
cp
f
214.136 131.027 mo
214.884 131.027 li
cp
f
214.884 131.027 mo
215.634 131.027 li
cp
f
214.884 131.027 mo
215.634 131.027 li
cp
f
139.657 132.813 mo
177.449 132.813 li
0 0 0 1 cmyk
@
177.974 132.813 mo
215.766 132.813 li
@
ZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf164.507 140.673 mo(Exon-exon)[3.38745 2.60303 3.05423 3.1792 2.46419 2.97093 2.60303 3.05421 0 ]xsh167.762 147.615 mo(junction)[1.31892 3.1445 3.17921 2.964 1.78394 1.36058 3.06117 0 ]xsh139.656 140.673 mo(\26150)[3.81783 3.54707 0 ]xsh204.608 140.673 mo(+50)[4.28294 3.54709 0 ]xsh%ADOBeginSubsetFont: QSJBAA+HelveticaNeue-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPV+HelveticaNeue-Italic gcheck setglobal} if
1 136 20 <0001001a00ee014c013e0003000b00ba0000000100032b3031130721372a
10012210013e50500000>ZDWBPV+HelveticaNeue-Italic AddT42Char 
1 176 40 <0002ffca0000026002ca0007000b002500b800002fb800012fb800052fba
0008000300032bb8000810ba000a00010000111239303109013337211733
03011333130177fe53697d012d216281fefcbf023502cafd36d7d702cafe
5d014ffeb100>ZDWBPV+HelveticaNeue-Italic AddT42Char 
1 272 52 <000100070000036702ca000f003500b800012fb800052fb800092fb80000
2fb8000b2fba000400010000111239ba000800010000111239ba000e0001
00001112393031130333133313330133033313230123039d965b7d025d5b
016c02925b9784fe9f025f02cafd360271fd8f0271fd8f02cafd9a026600
>ZDWBPV+HelveticaNeue-Italic AddT42Char 
1 392 73 <0002fffcfff5021b02ca0018002a0075ba000e001900032bb8000e104105
00da001900ea001900025d411b0009001900190019002900190039001900
490019005900190069001900790019008900190099001900a9001900b900
1900c90019000d5db8002cdc00b800002fba001e000900032bb8001e10ba
0013002600032bb8001310303113033337331e0333323e0235342e022322
0607271b01140e0223222635343e0233321e0292964b1302041d2d3c2442
65462419324c3430511d0237df1830462e3f4e183350381e2c1d0f02cafd
366014261e133658723d32523a212925020105fe6825564830443d295c4e
33172836>ZDWBPV+HelveticaNeue-Italic AddT42Char 
1 864 96 <0001ffc2ff2f01f902050016002300b800122fb800012fb800052fba0004
00120001111239ba000e0012000111123930311701230323032313070e01
23222627071e0133323e02a301565dd9023c5b5b340f241d0a1c0a0f0c20
0f2030262057025cfe65019bfdfb55191f080645060713212d00>ZDWBPV+HelveticaNeue-Italic AddT42Char 
ZDWBPV+HelveticaNeue-Italic /CharStrings get begin
/hyphen 20 def
/A 40 def
/M 52 def
/b 73 def
/y 96 def
end
ZDWBPV+HelveticaNeue-Italic /Encoding get
dup 45 /hyphen put
dup 65 /A put
dup 77 /M put
dup 98 /b put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPV+HelveticaNeue-Italic*1 [45{/.notdef}rp /hyphen 19{/.notdef}rp /A 11{/.notdef}rp /M 20{/.notdef}rp /b 11{/.notdef}rp /n 10{/.notdef}rp /y 134{/.notdef}rp]ZDWBPV+HelveticaNeue-Italic nfZDWBPV+HelveticaNeue-Italic*1 [10.7979 0 0 -10.7979 0 0 ]msf64.7925 20.1353 mo(A-Myb)[7.22388 4.36243 9.37253 5.20461 0 ]xsh%ADOBeginSubsetFont: BDHQMX+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPU+HelveticaNeue gcheck setglobal} if
1 3404 47 <0001004e0000028402ca000b0047ba000b000000032bb8000b10ba000600
0500032bb8000610b8000b10b80002d0b8000510b80008d000b800002fb8
00072fb800012fb800052fba000a000300032bb8000a1030311311331121
113311231121114e5f01785f5ffe8802cafd360147feb902cafecd013300
>ZDWBPU+HelveticaNeue AddT42Char 
ZDWBPU+HelveticaNeue /CharStrings get begin
/H 47 def
end
ZDWBPU+HelveticaNeue /Encoding get
dup 72 /H put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPU+HelveticaNeue*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four 3{/.notdef}rp /eight 4{/.notdef}rp /equal 9{/.notdef}rp /G /H /I /J 22{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i 3{/.notdef}rp /m /n /o /p /.notdef /r /s /t /u 138{/.notdef}rp]ZDWBPU+HelveticaNeue nfZDWBPU+HelveticaNeue*1 [10.7979 0 0 -10.7979 0 0 ]msf97.3806 20.1353 mo( Het)[3.00182 7.83928 5.79849 0 ]xsh0 1 1 0 cmyk
ZDWBPV+HelveticaNeue-Italic*1 [10.7979 0 0 -10.7979 0 0 ]msf150.495 20.1353 mo(A-Myb)[7.22388 4.36243 9.37253 5.20462 0 ]xsh%ADOBeginSubsetFont: BDHQMX+HelveticaNeue AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDWBPU+HelveticaNeue gcheck setglobal} if
1 3688 52 <000100500000031702ca000e0057ba0003000000032bb8000310ba000b00
0800032bb8000b10ba000d0000000b11123900b800012fb800052fb80009
2fb800002fb8000b2fba000400010000111239ba000800010000111239ba
000d000100001112393031131133113313331333113311230b01505a02df
51df025a82e2e102cafd360252fdae0252fdae02cafda80258000000>ZDWBPU+HelveticaNeue AddT42Char 
ZDWBPU+HelveticaNeue /CharStrings get begin
/M 52 def
end
ZDWBPU+HelveticaNeue /Encoding get
dup 77 /M put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZDWBPU+HelveticaNeue*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four 3{/.notdef}rp /eight 4{/.notdef}rp /equal 9{/.notdef}rp /G /H /I /J 2{/.notdef}rp /M 19{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i 3{/.notdef}rp /m /n /o /p /.notdef /r /s /t /u 138{/.notdef}rp]ZDWBPU+HelveticaNeue nfZDWBPU+HelveticaNeue*1 [10.7979 0 0 -10.7979 0 0 ]msf183.083 20.1353 mo( Mu)sh201.537 20.1353 mo(t)sh286.723 68.463 mo
287.069 68.463 li
287.069 68.364 li
286.723 68.364 li
cp
.254 .203 .207 0 cmyk
f
286.723 68.463 mo
287.069 68.463 li
287.069 68.364 li
286.723 68.364 li
cp
.746 .676 .668 .898 cmyk
f
287.068 68.463 mo
287.413 68.463 li
287.413 68.367 li
287.068 68.367 li
cp
.254 .203 .207 0 cmyk
f
287.068 68.463 mo
287.413 68.463 li
287.413 68.367 li
287.068 68.367 li
cp
.746 .676 .668 .898 cmyk
f
287.413 68.463 mo
287.76 68.463 li
287.76 68.367 li
287.413 68.367 li
cp
.254 .203 .207 0 cmyk
f
287.413 68.463 mo
287.76 68.463 li
287.76 68.367 li
287.413 68.367 li
cp
.746 .676 .668 .898 cmyk
f
287.76 68.463 mo
288.106 68.463 li
288.106 68.38 li
287.76 68.38 li
cp
.254 .203 .207 0 cmyk
f
287.76 68.463 mo
288.106 68.463 li
288.106 68.38 li
287.76 68.38 li
cp
.746 .676 .668 .898 cmyk
f
288.105 68.463 mo
288.451 68.463 li
288.451 68.384 li
288.105 68.384 li
cp
.254 .203 .207 0 cmyk
f
288.105 68.463 mo
288.451 68.463 li
288.451 68.384 li
288.105 68.384 li
cp
.746 .676 .668 .898 cmyk
f
288.451 68.463 mo
288.796 68.463 li
288.796 68.391 li
288.451 68.391 li
cp
.254 .203 .207 0 cmyk
f
288.451 68.463 mo
288.796 68.463 li
288.796 68.391 li
288.451 68.391 li
cp
.746 .676 .668 .898 cmyk
f
288.796 68.463 mo
289.143 68.463 li
289.143 68.391 li
288.796 68.391 li
cp
.254 .203 .207 0 cmyk
f
288.796 68.463 mo
289.143 68.463 li
289.143 68.391 li
288.796 68.391 li
cp
.746 .676 .668 .898 cmyk
f
289.143 68.463 mo
289.489 68.463 li
289.489 68.372 li
289.143 68.372 li
cp
.254 .203 .207 0 cmyk
f
289.143 68.463 mo
289.489 68.463 li
289.489 68.372 li
289.143 68.372 li
cp
.746 .676 .668 .898 cmyk
f
289.489 68.463 mo
289.834 68.463 li
289.834 68.374 li
289.489 68.374 li
cp
.254 .203 .207 0 cmyk
f
289.489 68.463 mo
289.834 68.463 li
289.834 68.374 li
289.489 68.374 li
cp
.746 .676 .668 .898 cmyk
f
289.833 68.463 mo
290.179 68.463 li
290.179 68.374 li
289.833 68.374 li
cp
.254 .203 .207 0 cmyk
f
289.833 68.463 mo
290.179 68.463 li
290.179 68.374 li
289.833 68.374 li
cp
.746 .676 .668 .898 cmyk
f
290.18 68.463 mo
290.525 68.463 li
290.525 68.367 li
290.18 68.367 li
cp
.254 .203 .207 0 cmyk
f
290.18 68.463 mo
290.525 68.463 li
290.525 68.367 li
290.18 68.367 li
cp
.746 .676 .668 .898 cmyk
f
290.525 68.463 mo
290.871 68.463 li
290.871 68.372 li
290.525 68.372 li
cp
.254 .203 .207 0 cmyk
f
290.525 68.463 mo
290.871 68.463 li
290.871 68.372 li
290.525 68.372 li
cp
.746 .676 .668 .898 cmyk
f
290.871 68.463 mo
291.217 68.463 li
291.217 68.372 li
290.871 68.372 li
cp
.254 .203 .207 0 cmyk
f
290.871 68.463 mo
291.217 68.463 li
291.217 68.372 li
290.871 68.372 li
cp
.746 .676 .668 .898 cmyk
f
291.217 68.463 mo
291.563 68.463 li
291.563 68.367 li
291.217 68.367 li
cp
.254 .203 .207 0 cmyk
f
291.217 68.463 mo
291.563 68.463 li
291.563 68.367 li
291.217 68.367 li
cp
.746 .676 .668 .898 cmyk
f
291.562 68.463 mo
291.908 68.463 li
291.908 68.372 li
291.562 68.372 li
cp
.254 .203 .207 0 cmyk
f
291.562 68.463 mo
291.908 68.463 li
291.908 68.372 li
291.562 68.372 li
cp
.746 .676 .668 .898 cmyk
f
291.908 68.463 mo
292.254 68.463 li
292.254 68.361 li
291.908 68.361 li
cp
.254 .203 .207 0 cmyk
f
291.908 68.463 mo
292.254 68.463 li
292.254 68.361 li
291.908 68.361 li
cp
.746 .676 .668 .898 cmyk
f
292.254 68.463 mo
292.599 68.463 li
292.599 68.367 li
292.254 68.367 li
cp
.254 .203 .207 0 cmyk
f
292.254 68.463 mo
292.599 68.463 li
292.599 68.367 li
292.254 68.367 li
cp
.746 .676 .668 .898 cmyk
f
292.599 68.463 mo
292.945 68.463 li
292.945 68.357 li
292.599 68.357 li
cp
.254 .203 .207 0 cmyk
f
292.599 68.463 mo
292.945 68.463 li
292.945 68.357 li
292.599 68.357 li
cp
.746 .676 .668 .898 cmyk
f
292.945 68.463 mo
293.291 68.463 li
293.291 68.357 li
292.945 68.357 li
cp
.254 .203 .207 0 cmyk
f
292.945 68.463 mo
293.291 68.463 li
293.291 68.357 li
292.945 68.357 li
cp
.746 .676 .668 .898 cmyk
f
293.291 68.463 mo
293.636 68.463 li
293.636 68.345 li
293.291 68.345 li
cp
.254 .203 .207 0 cmyk
f
293.291 68.463 mo
293.636 68.463 li
293.636 68.345 li
293.291 68.345 li
cp
.746 .676 .668 .898 cmyk
f
293.636 68.463 mo
293.982 68.463 li
293.982 68.332 li
293.636 68.332 li
cp
.254 .203 .207 0 cmyk
f
293.636 68.463 mo
293.982 68.463 li
293.982 68.332 li
293.636 68.332 li
cp
.746 .676 .668 .898 cmyk
f
293.982 68.463 mo
294.328 68.463 li
294.328 68.308 li
293.982 68.308 li
cp
.254 .203 .207 0 cmyk
f
293.982 68.463 mo
294.328 68.463 li
294.328 68.308 li
293.982 68.308 li
cp
.746 .676 .668 .898 cmyk
f
294.328 68.463 mo
294.674 68.463 li
294.674 68.3 li
294.328 68.3 li
cp
.254 .203 .207 0 cmyk
f
294.328 68.463 mo
294.674 68.463 li
294.674 68.3 li
294.328 68.3 li
cp
.746 .676 .668 .898 cmyk
f
294.673 68.463 mo
295.019 68.463 li
295.019 68.293 li
294.673 68.293 li
cp
.254 .203 .207 0 cmyk
f
294.673 68.463 mo
295.019 68.463 li
295.019 68.293 li
294.673 68.293 li
cp
.746 .676 .668 .898 cmyk
f
295.019 68.463 mo
295.365 68.463 li
295.365 68.293 li
295.019 68.293 li
cp
.254 .203 .207 0 cmyk
f
295.019 68.463 mo
295.365 68.463 li
295.365 68.293 li
295.019 68.293 li
cp
.746 .676 .668 .898 cmyk
f
295.365 68.463 mo
295.711 68.463 li
295.711 68.27 li
295.365 68.27 li
cp
.254 .203 .207 0 cmyk
f
295.365 68.463 mo
295.711 68.463 li
295.711 68.27 li
295.365 68.27 li
cp
.746 .676 .668 .898 cmyk
f
295.71 68.463 mo
296.056 68.463 li
296.056 68.27 li
295.71 68.27 li
cp
.254 .203 .207 0 cmyk
f
295.71 68.463 mo
296.056 68.463 li
296.056 68.27 li
295.71 68.27 li
cp
.746 .676 .668 .898 cmyk
f
296.056 68.463 mo
296.402 68.463 li
296.402 68.297 li
296.056 68.297 li
cp
.254 .203 .207 0 cmyk
f
296.056 68.463 mo
296.402 68.463 li
296.402 68.297 li
296.056 68.297 li
cp
.746 .676 .668 .898 cmyk
f
296.401 68.463 mo
296.746 68.463 li
296.746 68.287 li
296.401 68.287 li
cp
.254 .203 .207 0 cmyk
f
296.401 68.463 mo
296.746 68.463 li
296.746 68.287 li
296.401 68.287 li
cp
.746 .676 .668 .898 cmyk
f
296.746 68.463 mo
297.093 68.463 li
297.093 68.284 li
296.746 68.284 li
cp
.254 .203 .207 0 cmyk
f
296.746 68.463 mo
297.093 68.463 li
297.093 68.284 li
296.746 68.284 li
cp
.746 .676 .668 .898 cmyk
f
297.094 68.463 mo
297.44 68.463 li
297.44 68.27 li
297.094 68.27 li
cp
.254 .203 .207 0 cmyk
f
297.094 68.463 mo
297.44 68.463 li
297.44 68.27 li
297.094 68.27 li
cp
.746 .676 .668 .898 cmyk
f
297.439 68.463 mo
297.785 68.463 li
297.785 68.3 li
297.439 68.3 li
cp
.254 .203 .207 0 cmyk
f
297.439 68.463 mo
297.785 68.463 li
297.785 68.3 li
297.439 68.3 li
cp
.746 .676 .668 .898 cmyk
f
297.785 68.463 mo
298.131 68.463 li
298.131 68.305 li
297.785 68.305 li
cp
.254 .203 .207 0 cmyk
f
297.785 68.463 mo
298.131 68.463 li
298.131 68.305 li
297.785 68.305 li
cp
.746 .676 .668 .898 cmyk
f
298.13 68.463 mo
298.476 68.463 li
298.476 68.277 li
298.13 68.277 li
cp
.254 .203 .207 0 cmyk
f
298.13 68.463 mo
298.476 68.463 li
298.476 68.277 li
298.13 68.277 li
cp
.746 .676 .668 .898 cmyk
f
298.476 68.463 mo
298.822 68.463 li
298.822 68.27 li
298.476 68.27 li
cp
.254 .203 .207 0 cmyk
f
298.476 68.463 mo
298.822 68.463 li
298.822 68.27 li
298.476 68.27 li
cp
.746 .676 .668 .898 cmyk
f
298.822 68.463 mo
299.168 68.463 li
299.168 68.27 li
298.822 68.27 li
cp
.254 .203 .207 0 cmyk
f
298.822 68.463 mo
299.168 68.463 li
299.168 68.27 li
298.822 68.27 li
cp
.746 .676 .668 .898 cmyk
f
299.167 68.463 mo
299.513 68.463 li
299.513 68.284 li
299.167 68.284 li
cp
.254 .203 .207 0 cmyk
f
299.167 68.463 mo
299.513 68.463 li
299.513 68.284 li
299.167 68.284 li
cp
.746 .676 .668 .898 cmyk
f
299.513 68.463 mo
299.859 68.463 li
299.859 68.284 li
299.513 68.284 li
cp
.254 .203 .207 0 cmyk
f
299.513 68.463 mo
299.859 68.463 li
299.859 68.284 li
299.513 68.284 li
cp
.746 .676 .668 .898 cmyk
f
299.859 68.463 mo
300.205 68.463 li
300.205 68.281 li
299.859 68.281 li
cp
.254 .203 .207 0 cmyk
f
299.859 68.463 mo
300.205 68.463 li
300.205 68.281 li
299.859 68.281 li
cp
.746 .676 .668 .898 cmyk
f
300.205 68.463 mo
300.551 68.463 li
300.551 68.26 li
300.205 68.26 li
cp
.254 .203 .207 0 cmyk
f
300.205 68.463 mo
300.551 68.463 li
300.551 68.26 li
300.205 68.26 li
cp
.746 .676 .668 .898 cmyk
f
300.551 68.463 mo
300.897 68.463 li
300.897 68.249 li
300.551 68.249 li
cp
.254 .203 .207 0 cmyk
f
300.551 68.463 mo
300.897 68.463 li
300.897 68.249 li
300.551 68.249 li
cp
.746 .676 .668 .898 cmyk
f
300.896 68.463 mo
301.242 68.463 li
301.242 68.245 li
300.896 68.245 li
cp
.254 .203 .207 0 cmyk
f
300.896 68.463 mo
301.242 68.463 li
301.242 68.245 li
300.896 68.245 li
cp
.746 .676 .668 .898 cmyk
f
301.242 68.463 mo
301.588 68.463 li
301.588 68.242 li
301.242 68.242 li
cp
.254 .203 .207 0 cmyk
f
301.242 68.463 mo
301.588 68.463 li
301.588 68.242 li
301.242 68.242 li
cp
.746 .676 .668 .898 cmyk
f
301.587 68.463 mo
301.933 68.463 li
301.933 68.242 li
301.587 68.242 li
cp
.254 .203 .207 0 cmyk
f
301.587 68.463 mo
301.933 68.463 li
301.933 68.242 li
301.587 68.242 li
cp
.746 .676 .668 .898 cmyk
f
301.933 68.463 mo
302.278 68.463 li
302.278 68.197 li
301.933 68.197 li
cp
.254 .203 .207 0 cmyk
f
301.933 68.463 mo
302.278 68.463 li
302.278 68.197 li
301.933 68.197 li
cp
.746 .676 .668 .898 cmyk
f
302.278 68.463 mo
302.624 68.463 li
302.624 68.162 li
302.278 68.162 li
cp
.254 .203 .207 0 cmyk
f
302.278 68.463 mo
302.624 68.463 li
302.624 68.162 li
302.278 68.162 li
cp
.746 .676 .668 .898 cmyk
f
302.624 68.463 mo
302.97 68.463 li
302.97 68.094 li
302.624 68.094 li
cp
.254 .203 .207 0 cmyk
f
302.624 68.463 mo
302.97 68.463 li
302.97 68.094 li
302.624 68.094 li
cp
.746 .676 .668 .898 cmyk
f
302.971 68.463 mo
303.317 68.463 li
303.317 67.873 li
302.971 67.873 li
cp
.254 .203 .207 0 cmyk
f
302.971 68.463 mo
303.317 68.463 li
303.317 67.873 li
302.971 67.873 li
cp
.746 .676 .668 .898 cmyk
f
303.316 68.463 mo
303.661 68.463 li
303.661 67.642 li
303.316 67.642 li
cp
.254 .203 .207 0 cmyk
f
303.316 68.463 mo
303.661 68.463 li
303.661 67.642 li
303.316 67.642 li
cp
.746 .676 .668 .898 cmyk
f
303.661 68.463 mo
304.007 68.463 li
304.007 67.423 li
303.661 67.423 li
cp
.254 .203 .207 0 cmyk
f
303.661 68.463 mo
304.007 68.463 li
304.007 67.423 li
303.661 67.423 li
cp
.746 .676 .668 .898 cmyk
f
304.007 68.463 mo
304.352 68.463 li
304.352 67.197 li
304.007 67.197 li
cp
.254 .203 .207 0 cmyk
f
304.007 68.463 mo
304.352 68.463 li
304.352 67.197 li
304.007 67.197 li
cp
.746 .676 .668 .898 cmyk
f
304.355 68.463 mo
304.701 68.463 li
304.701 66.743 li
304.355 66.743 li
cp
.254 .203 .207 0 cmyk
f
304.355 68.463 mo
304.701 68.463 li
304.701 66.743 li
304.355 66.743 li
cp
.746 .676 .668 .898 cmyk
f
304.7 68.463 mo
305.046 68.463 li
305.046 66.398 li
304.7 66.398 li
cp
.254 .203 .207 0 cmyk
f
304.7 68.463 mo
305.046 68.463 li
305.046 66.398 li
304.7 66.398 li
cp
.746 .676 .668 .898 cmyk
f
305.046 68.463 mo
305.392 68.463 li
305.392 65.853 li
305.046 65.853 li
cp
.254 .203 .207 0 cmyk
f
305.046 68.463 mo
305.392 68.463 li
305.392 65.853 li
305.046 65.853 li
cp
.746 .676 .668 .898 cmyk
f
305.392 68.463 mo
305.738 68.463 li
305.738 65.137 li
305.392 65.137 li
cp
.254 .203 .207 0 cmyk
f
305.392 68.463 mo
305.738 68.463 li
305.738 65.137 li
305.392 65.137 li
cp
.746 .676 .668 .898 cmyk
f
305.738 68.463 mo
306.083 68.463 li
306.083 63.956 li
305.738 63.956 li
cp
.254 .203 .207 0 cmyk
f
305.738 68.463 mo
306.083 68.463 li
306.083 63.956 li
305.738 63.956 li
cp
.746 .676 .668 .898 cmyk
f
306.083 68.463 mo
306.429 68.463 li
306.429 63.235 li
306.083 63.235 li
cp
.254 .203 .207 0 cmyk
f
306.083 68.463 mo
306.429 68.463 li
306.429 63.235 li
306.083 63.235 li
cp
.746 .676 .668 .898 cmyk
f
306.429 68.463 mo
306.775 68.463 li
306.775 61.469 li
306.429 61.469 li
cp
.254 .203 .207 0 cmyk
f
306.429 68.463 mo
306.775 68.463 li
306.775 61.469 li
306.429 61.469 li
cp
.746 .676 .668 .898 cmyk
f
306.775 68.463 mo
307.121 68.463 li
307.121 60.026 li
306.775 60.026 li
cp
.254 .203 .207 0 cmyk
f
306.775 68.463 mo
307.121 68.463 li
307.121 60.026 li
306.775 60.026 li
cp
.746 .676 .668 .898 cmyk
f
307.12 68.463 mo
307.466 68.463 li
307.466 59.35 li
307.12 59.35 li
cp
.254 .203 .207 0 cmyk
f
307.12 68.463 mo
307.466 68.463 li
307.466 59.35 li
307.12 59.35 li
cp
.746 .676 .668 .898 cmyk
f
307.466 68.463 mo
307.812 68.463 li
307.812 58.054 li
307.466 58.054 li
cp
.254 .203 .207 0 cmyk
f
307.466 68.463 mo
307.812 68.463 li
307.812 58.054 li
307.466 58.054 li
cp
.746 .676 .668 .898 cmyk
f
307.813 68.463 mo
308.158 68.463 li
308.158 57.066 li
307.813 57.066 li
cp
.254 .203 .207 0 cmyk
f
307.813 68.463 mo
308.158 68.463 li
308.158 57.066 li
307.813 57.066 li
cp
.746 .676 .668 .898 cmyk
f
308.157 68.463 mo
308.503 68.463 li
308.503 55.895 li
308.157 55.895 li
cp
.254 .203 .207 0 cmyk
f
308.157 68.463 mo
308.503 68.463 li
308.503 55.895 li
308.157 55.895 li
cp
.746 .676 .668 .898 cmyk
f
308.503 68.463 mo
308.849 68.463 li
308.849 55.091 li
308.503 55.091 li
cp
.254 .203 .207 0 cmyk
f
308.503 68.463 mo
308.849 68.463 li
308.849 55.091 li
308.503 55.091 li
cp
.746 .676 .668 .898 cmyk
f
308.849 68.463 mo
309.194 68.463 li
309.194 54.565 li
308.849 54.565 li
cp
.254 .203 .207 0 cmyk
f
308.849 68.463 mo
309.194 68.463 li
309.194 54.565 li
308.849 54.565 li
cp
.746 .676 .668 .898 cmyk
f
309.194 68.463 mo
309.54 68.463 li
309.54 54.164 li
309.194 54.164 li
cp
.254 .203 .207 0 cmyk
f
309.194 68.463 mo
309.54 68.463 li
309.54 54.164 li
309.194 54.164 li
cp
.746 .676 .668 .898 cmyk
f
309.54 68.463 mo
309.886 68.463 li
309.886 52.828 li
309.54 52.828 li
cp
.254 .203 .207 0 cmyk
f
309.54 68.463 mo
309.886 68.463 li
309.886 52.828 li
309.54 52.828 li
cp
.746 .676 .668 .898 cmyk
f
309.885 68.463 mo
310.231 68.463 li
310.231 52.417 li
309.885 52.417 li
cp
.254 .203 .207 0 cmyk
f
309.885 68.463 mo
310.231 68.463 li
310.231 52.417 li
309.885 52.417 li
cp
.746 .676 .668 .898 cmyk
f
310.232 68.463 mo
310.577 68.463 li
310.577 50.545 li
310.232 50.545 li
cp
.254 .203 .207 0 cmyk
f
310.232 68.463 mo
310.577 68.463 li
310.577 50.545 li
310.232 50.545 li
cp
.746 .676 .668 .898 cmyk
f
310.577 68.463 mo
310.924 68.463 li
310.924 49.874 li
310.577 49.874 li
cp
.254 .203 .207 0 cmyk
f
310.577 68.463 mo
310.924 68.463 li
310.924 49.874 li
310.577 49.874 li
cp
.746 .676 .668 .898 cmyk
f
310.924 68.463 mo
311.269 68.463 li
311.269 47.53 li
310.924 47.53 li
cp
.254 .203 .207 0 cmyk
f
310.924 68.463 mo
311.269 68.463 li
311.269 47.53 li
310.924 47.53 li
cp
.746 .676 .668 .898 cmyk
f
311.269 68.463 mo
311.615 68.463 li
311.615 46.85 li
311.269 46.85 li
cp
.254 .203 .207 0 cmyk
f
311.269 68.463 mo
311.615 68.463 li
311.615 46.85 li
311.269 46.85 li
cp
.746 .676 .668 .898 cmyk
f
311.614 68.463 mo
311.96 68.463 li
311.96 46.796 li
311.614 46.796 li
cp
.254 .203 .207 0 cmyk
f
311.614 68.463 mo
311.96 68.463 li
311.96 46.796 li
311.614 46.796 li
cp
.746 .676 .668 .898 cmyk
f
311.961 68.463 mo
312.306 68.463 li
312.306 44.572 li
311.961 44.572 li
cp
.254 .203 .207 0 cmyk
f
311.961 68.463 mo
312.306 68.463 li
312.306 44.572 li
311.961 44.572 li
cp
.746 .676 .668 .898 cmyk
f
312.305 68.463 mo
312.651 68.463 li
312.651 44.272 li
312.305 44.272 li
cp
.254 .203 .207 0 cmyk
f
312.305 68.463 mo
312.651 68.463 li
312.651 44.272 li
312.305 44.272 li
cp
.746 .676 .668 .898 cmyk
f
312.651 68.463 mo
312.998 68.463 li
312.998 41.795 li
312.651 41.795 li
cp
.254 .203 .207 0 cmyk
f
312.651 68.463 mo
312.998 68.463 li
312.998 41.795 li
312.651 41.795 li
cp
.746 .676 .668 .898 cmyk
f
312.998 68.463 mo
313.343 68.463 li
313.343 41.927 li
312.998 41.927 li
cp
.254 .203 .207 0 cmyk
f
312.998 68.463 mo
313.343 68.463 li
313.343 41.927 li
312.998 41.927 li
cp
.746 .676 .668 .898 cmyk
f
313.343 68.463 mo
313.689 68.463 li
313.689 41.517 li
313.343 41.517 li
cp
.254 .203 .207 0 cmyk
f
313.343 68.463 mo
313.689 68.463 li
313.689 41.517 li
313.343 41.517 li
cp
.746 .676 .668 .898 cmyk
f
313.689 68.463 mo
314.035 68.463 li
314.035 43.23 li
313.689 43.23 li
cp
.254 .203 .207 0 cmyk
f
313.689 68.463 mo
314.035 68.463 li
314.035 43.23 li
313.689 43.23 li
cp
.746 .676 .668 .898 cmyk
f
314.035 68.463 mo
314.38 68.463 li
314.38 43.978 li
314.035 43.978 li
cp
.254 .203 .207 0 cmyk
f
314.035 68.463 mo
314.38 68.463 li
314.38 43.978 li
314.035 43.978 li
cp
.746 .676 .668 .898 cmyk
f
314.38 68.463 mo
314.726 68.463 li
314.726 42.173 li
314.38 42.173 li
cp
.254 .203 .207 0 cmyk
f
314.38 68.463 mo
314.726 68.463 li
314.726 42.173 li
314.38 42.173 li
cp
.746 .676 .668 .898 cmyk
f
314.726 68.463 mo
315.072 68.463 li
315.072 39.036 li
314.726 39.036 li
cp
.254 .203 .207 0 cmyk
f
314.726 68.463 mo
315.072 68.463 li
315.072 39.036 li
314.726 39.036 li
cp
.746 .676 .668 .898 cmyk
f
315.072 68.463 mo
315.417 68.463 li
315.417 41.22 li
315.072 41.22 li
cp
.254 .203 .207 0 cmyk
f
315.072 68.463 mo
315.417 68.463 li
315.417 41.22 li
315.072 41.22 li
cp
.746 .676 .668 .898 cmyk
f
315.417 68.463 mo
315.763 68.463 li
315.763 42.369 li
315.417 42.369 li
cp
.254 .203 .207 0 cmyk
f
315.417 68.463 mo
315.763 68.463 li
315.763 42.369 li
315.417 42.369 li
cp
.746 .676 .668 .898 cmyk
f
315.762 68.463 mo
316.109 68.463 li
316.109 39.844 li
315.762 39.844 li
cp
.254 .203 .207 0 cmyk
f
315.762 68.463 mo
316.109 68.463 li
316.109 39.844 li
315.762 39.844 li
cp
.746 .676 .668 .898 cmyk
f
316.11 68.463 mo
316.455 68.463 li
316.455 38.362 li
316.11 38.362 li
cp
.254 .203 .207 0 cmyk
f
316.11 68.463 mo
316.455 68.463 li
316.455 38.362 li
316.11 38.362 li
cp
.746 .676 .668 .898 cmyk
f
316.454 68.463 mo
316.8 68.463 li
316.8 37.333 li
316.454 37.333 li
cp
.254 .203 .207 0 cmyk
f
316.454 68.463 mo
316.8 68.463 li
316.8 37.333 li
316.454 37.333 li
cp
.746 .676 .668 .898 cmyk
f
316.8 68.463 mo
317.146 68.463 li
317.146 38.524 li
316.8 38.524 li
cp
.254 .203 .207 0 cmyk
f
316.8 68.463 mo
317.146 68.463 li
317.146 38.524 li
316.8 38.524 li
cp
.746 .676 .668 .898 cmyk
f
317.146 68.463 mo
317.491 68.463 li
317.491 40.261 li
317.146 40.261 li
cp
.254 .203 .207 0 cmyk
f
317.146 68.463 mo
317.491 68.463 li
317.491 40.261 li
317.146 40.261 li
cp
.746 .676 .668 .898 cmyk
f
317.491 68.463 mo
317.836 68.463 li
317.836 39.446 li
317.491 39.446 li
cp
.254 .203 .207 0 cmyk
f
317.491 68.463 mo
317.836 68.463 li
317.836 39.446 li
317.491 39.446 li
cp
.746 .676 .668 .898 cmyk
f
317.836 68.463 mo
318.183 68.463 li
318.183 40.387 li
317.836 40.387 li
cp
.254 .203 .207 0 cmyk
f
317.836 68.463 mo
318.183 68.463 li
318.183 40.387 li
317.836 40.387 li
cp
.746 .676 .668 .898 cmyk
f
318.183 68.463 mo
318.526 68.463 li
318.526 40.552 li
318.183 40.552 li
cp
.254 .203 .207 0 cmyk
f
318.183 68.463 mo
318.526 68.463 li
318.526 40.552 li
318.183 40.552 li
cp
.746 .676 .668 .898 cmyk
f
318.526 68.463 mo
318.873 68.463 li
318.873 39.955 li
318.526 39.955 li
cp
.254 .203 .207 0 cmyk
f
318.526 68.463 mo
318.873 68.463 li
318.873 39.955 li
318.526 39.955 li
cp
.746 .676 .668 .898 cmyk
f
318.874 68.463 mo
319.221 68.463 li
319.221 39.256 li
318.874 39.256 li
cp
.254 .203 .207 0 cmyk
f
318.874 68.463 mo
319.221 68.463 li
319.221 39.256 li
318.874 39.256 li
cp
.746 .676 .668 .898 cmyk
f
319.221 68.463 mo
319.566 68.463 li
319.566 38.45 li
319.221 38.45 li
cp
.254 .203 .207 0 cmyk
f
319.221 68.463 mo
319.566 68.463 li
319.566 38.45 li
319.221 38.45 li
cp
.746 .676 .668 .898 cmyk
f
319.566 68.463 mo
319.911 68.463 li
319.911 41.46 li
319.566 41.46 li
cp
.254 .203 .207 0 cmyk
f
319.566 68.463 mo
319.911 68.463 li
319.911 41.46 li
319.566 41.46 li
cp
.746 .676 .668 .898 cmyk
f
319.91 68.463 mo
320.257 68.463 li
320.257 39.622 li
319.91 39.622 li
cp
.254 .203 .207 0 cmyk
f
319.91 68.463 mo
320.257 68.463 li
320.257 39.622 li
319.91 39.622 li
cp
.746 .676 .668 .898 cmyk
f
320.258 68.463 mo
320.601 68.463 li
320.601 39.969 li
320.258 39.969 li
cp
.254 .203 .207 0 cmyk
f
320.258 68.463 mo
320.601 68.463 li
320.601 39.969 li
320.258 39.969 li
cp
.746 .676 .668 .898 cmyk
f
320.601 68.463 mo
320.948 68.463 li
320.948 41.698 li
320.601 41.698 li
cp
.254 .203 .207 0 cmyk
f
320.601 68.463 mo
320.948 68.463 li
320.948 41.698 li
320.601 41.698 li
cp
.746 .676 .668 .898 cmyk
f
320.948 68.463 mo
321.293 68.463 li
321.293 42.414 li
320.948 42.414 li
cp
.254 .203 .207 0 cmyk
f
320.948 68.463 mo
321.293 68.463 li
321.293 42.414 li
320.948 42.414 li
cp
.746 .676 .668 .898 cmyk
f
321.293 68.463 mo
321.639 68.463 li
321.639 43.222 li
321.293 43.222 li
cp
.254 .203 .207 0 cmyk
f
321.293 68.463 mo
321.639 68.463 li
321.639 43.222 li
321.293 43.222 li
cp
.746 .676 .668 .898 cmyk
f
304.007 68.4629 mo
321.639 68.4629 li
cp
f
245.531 68.463 mo
245.877 68.463 li
245.877 38.77 li
245.531 38.77 li
cp
.254 .203 .207 0 cmyk
f
245.531 68.463 mo
245.877 68.463 li
245.877 38.77 li
245.531 38.77 li
cp
.746 .676 .668 .898 cmyk
f
245.876 68.463 mo
246.222 68.463 li
246.222 39.499 li
245.876 39.499 li
cp
.254 .203 .207 0 cmyk
f
245.876 68.463 mo
246.222 68.463 li
246.222 39.499 li
245.876 39.499 li
cp
.746 .676 .668 .898 cmyk
f
246.222 68.463 mo
246.567 68.463 li
246.567 39.74 li
246.222 39.74 li
cp
.254 .203 .207 0 cmyk
f
246.222 68.463 mo
246.567 68.463 li
246.567 39.74 li
246.222 39.74 li
cp
.746 .676 .668 .898 cmyk
f
246.567 68.463 mo
246.912 68.463 li
246.912 40.832 li
246.567 40.832 li
cp
.254 .203 .207 0 cmyk
f
246.567 68.463 mo
246.912 68.463 li
246.912 40.832 li
246.567 40.832 li
cp
.746 .676 .668 .898 cmyk
f
246.911 68.463 mo
247.258 68.463 li
247.258 39.644 li
246.911 39.644 li
cp
.254 .203 .207 0 cmyk
f
246.911 68.463 mo
247.258 68.463 li
247.258 39.644 li
246.911 39.644 li
cp
.746 .676 .668 .898 cmyk
f
247.258 68.463 mo
247.605 68.463 li
247.605 39.115 li
247.258 39.115 li
cp
.254 .203 .207 0 cmyk
f
247.258 68.463 mo
247.605 68.463 li
247.605 39.115 li
247.258 39.115 li
cp
.746 .676 .668 .898 cmyk
f
247.605 68.463 mo
247.95 68.463 li
247.95 39.139 li
247.605 39.139 li
cp
.254 .203 .207 0 cmyk
f
247.605 68.463 mo
247.95 68.463 li
247.95 39.139 li
247.605 39.139 li
cp
.746 .676 .668 .898 cmyk
f
247.95 68.463 mo
248.296 68.463 li
248.296 36.87 li
247.95 36.87 li
cp
.254 .203 .207 0 cmyk
f
247.95 68.463 mo
248.296 68.463 li
248.296 36.87 li
247.95 36.87 li
cp
.746 .676 .668 .898 cmyk
f
248.296 68.463 mo
248.641 68.463 li
248.641 37.592 li
248.296 37.592 li
cp
.254 .203 .207 0 cmyk
f
248.296 68.463 mo
248.641 68.463 li
248.641 37.592 li
248.296 37.592 li
cp
.746 .676 .668 .898 cmyk
f
248.64 68.463 mo
248.986 68.463 li
248.986 35.351 li
248.64 35.351 li
cp
.254 .203 .207 0 cmyk
f
248.64 68.463 mo
248.986 68.463 li
248.986 35.351 li
248.64 35.351 li
cp
.746 .676 .668 .898 cmyk
f
248.987 68.463 mo
249.333 68.463 li
249.333 35.271 li
248.987 35.271 li
cp
.254 .203 .207 0 cmyk
f
248.987 68.463 mo
249.333 68.463 li
249.333 35.271 li
248.987 35.271 li
cp
.746 .676 .668 .898 cmyk
f
249.332 68.463 mo
249.677 68.463 li
249.677 35.361 li
249.332 35.361 li
cp
.254 .203 .207 0 cmyk
f
249.332 68.463 mo
249.677 68.463 li
249.677 35.361 li
249.332 35.361 li
cp
.746 .676 .668 .898 cmyk
f
249.677 68.463 mo
250.024 68.463 li
250.024 34.87 li
249.677 34.87 li
cp
.254 .203 .207 0 cmyk
f
249.677 68.463 mo
250.024 68.463 li
250.024 34.87 li
249.677 34.87 li
cp
.746 .676 .668 .898 cmyk
f
250.027 68.463 mo
250.372 68.463 li
250.372 36.059 li
250.027 36.059 li
cp
.254 .203 .207 0 cmyk
f
250.027 68.463 mo
250.372 68.463 li
250.372 36.059 li
250.027 36.059 li
cp
.746 .676 .668 .898 cmyk
f
250.372 68.463 mo
250.718 68.463 li
250.718 37.036 li
250.372 37.036 li
cp
.254 .203 .207 0 cmyk
f
250.372 68.463 mo
250.718 68.463 li
250.718 37.036 li
250.372 37.036 li
cp
.746 .676 .668 .898 cmyk
f
250.717 68.463 mo
251.063 68.463 li
251.063 36.2 li
250.717 36.2 li
cp
.254 .203 .207 0 cmyk
f
250.717 68.463 mo
251.063 68.463 li
251.063 36.2 li
250.717 36.2 li
cp
.746 .676 .668 .898 cmyk
f
251.063 68.463 mo
251.409 68.463 li
251.409 35.879 li
251.063 35.879 li
cp
.254 .203 .207 0 cmyk
f
251.063 68.463 mo
251.409 68.463 li
251.409 35.879 li
251.063 35.879 li
cp
.746 .676 .668 .898 cmyk
f
251.41 68.463 mo
251.756 68.463 li
251.756 35.604 li
251.41 35.604 li
cp
.254 .203 .207 0 cmyk
f
251.41 68.463 mo
251.756 68.463 li
251.756 35.604 li
251.41 35.604 li
cp
.746 .676 .668 .898 cmyk
f
251.755 68.463 mo
252.1 68.463 li
252.1 34.233 li
251.755 34.233 li
cp
.254 .203 .207 0 cmyk
f
251.755 68.463 mo
252.1 68.463 li
252.1 34.233 li
251.755 34.233 li
cp
.746 .676 .668 .898 cmyk
f
252.1 68.463 mo
252.446 68.463 li
252.446 34.377 li
252.1 34.377 li
cp
.254 .203 .207 0 cmyk
f
252.1 68.463 mo
252.446 68.463 li
252.446 34.377 li
252.1 34.377 li
cp
.746 .676 .668 .898 cmyk
f
252.446 68.463 mo
252.791 68.463 li
252.791 35.589 li
252.446 35.589 li
cp
.254 .203 .207 0 cmyk
f
252.446 68.463 mo
252.791 68.463 li
252.791 35.589 li
252.446 35.589 li
cp
.746 .676 .668 .898 cmyk
f
252.791 68.463 mo
253.138 68.463 li
253.138 34.623 li
252.791 34.623 li
cp
.254 .203 .207 0 cmyk
f
252.791 68.463 mo
253.138 68.463 li
253.138 34.623 li
252.791 34.623 li
cp
.746 .676 .668 .898 cmyk
f
253.138 68.463 mo
253.484 68.463 li
253.484 35.71 li
253.138 35.71 li
cp
.254 .203 .207 0 cmyk
f
253.138 68.463 mo
253.484 68.463 li
253.484 35.71 li
253.138 35.71 li
cp
.746 .676 .668 .898 cmyk
f
253.483 68.463 mo
253.829 68.463 li
253.829 35.247 li
253.483 35.247 li
cp
.254 .203 .207 0 cmyk
f
253.483 68.463 mo
253.829 68.463 li
253.829 35.247 li
253.483 35.247 li
cp
.746 .676 .668 .898 cmyk
f
253.829 68.463 mo
254.174 68.463 li
254.174 36.053 li
253.829 36.053 li
cp
.254 .203 .207 0 cmyk
f
253.829 68.463 mo
254.174 68.463 li
254.174 36.053 li
253.829 36.053 li
cp
.746 .676 .668 .898 cmyk
f
254.173 68.463 mo
254.52 68.463 li
254.52 37.12 li
254.173 37.12 li
cp
.254 .203 .207 0 cmyk
f
254.173 68.463 mo
254.52 68.463 li
254.52 37.12 li
254.173 37.12 li
cp
.746 .676 .668 .898 cmyk
f
254.52 68.463 mo
254.866 68.463 li
254.866 32.839 li
254.52 32.839 li
cp
.254 .203 .207 0 cmyk
f
254.52 68.463 mo
254.866 68.463 li
254.866 32.839 li
254.52 32.839 li
cp
.746 .676 .668 .898 cmyk
f
254.866 68.463 mo
255.211 68.463 li
255.211 34.256 li
254.866 34.256 li
cp
.254 .203 .207 0 cmyk
f
254.866 68.463 mo
255.211 68.463 li
255.211 34.256 li
254.866 34.256 li
cp
.746 .676 .668 .898 cmyk
f
255.21 68.463 mo
255.556 68.463 li
255.556 35.026 li
255.21 35.026 li
cp
.254 .203 .207 0 cmyk
f
255.21 68.463 mo
255.556 68.463 li
255.556 35.026 li
255.21 35.026 li
cp
.746 .676 .668 .898 cmyk
f
255.557 68.463 mo
255.903 68.463 li
255.903 35.869 li
255.557 35.869 li
cp
.254 .203 .207 0 cmyk
f
255.557 68.463 mo
255.903 68.463 li
255.903 35.869 li
255.557 35.869 li
cp
.746 .676 .668 .898 cmyk
f
255.902 68.463 mo
256.248 68.463 li
256.248 36.691 li
255.902 36.691 li
cp
.254 .203 .207 0 cmyk
f
255.902 68.463 mo
256.248 68.463 li
256.248 36.691 li
255.902 36.691 li
cp
.746 .676 .668 .898 cmyk
f
256.248 68.463 mo
256.594 68.463 li
256.594 37.81 li
256.248 37.81 li
cp
.254 .203 .207 0 cmyk
f
256.248 68.463 mo
256.594 68.463 li
256.594 37.81 li
256.248 37.81 li
cp
.746 .676 .668 .898 cmyk
f
256.594 68.463 mo
256.94 68.463 li
256.94 38.904 li
256.594 38.904 li
cp
.254 .203 .207 0 cmyk
f
256.594 68.463 mo
256.94 68.463 li
256.94 38.904 li
256.594 38.904 li
cp
.746 .676 .668 .898 cmyk
f
256.939 68.463 mo
257.285 68.463 li
257.285 39.516 li
256.939 39.516 li
cp
.254 .203 .207 0 cmyk
f
256.939 68.463 mo
257.285 68.463 li
257.285 39.516 li
256.939 39.516 li
cp
.746 .676 .668 .898 cmyk
f
257.285 68.463 mo
257.632 68.463 li
257.632 41.886 li
257.285 41.886 li
cp
.254 .203 .207 0 cmyk
f
257.285 68.463 mo
257.632 68.463 li
257.632 41.886 li
257.285 41.886 li
cp
.746 .676 .668 .898 cmyk
f
257.632 68.463 mo
257.977 68.463 li
257.977 44.079 li
257.632 44.079 li
cp
.254 .203 .207 0 cmyk
f
257.632 68.463 mo
257.977 68.463 li
257.977 44.079 li
257.632 44.079 li
cp
.746 .676 .668 .898 cmyk
f
257.977 68.463 mo
258.323 68.463 li
258.323 45.471 li
257.977 45.471 li
cp
.254 .203 .207 0 cmyk
f
257.977 68.463 mo
258.323 68.463 li
258.323 45.471 li
257.977 45.471 li
cp
.746 .676 .668 .898 cmyk
f
258.322 68.463 mo
258.668 68.463 li
258.668 46.707 li
258.322 46.707 li
cp
.254 .203 .207 0 cmyk
f
258.322 68.463 mo
258.668 68.463 li
258.668 46.707 li
258.322 46.707 li
cp
.746 .676 .668 .898 cmyk
f
258.668 68.463 mo
259.014 68.463 li
259.014 47.881 li
258.668 47.881 li
cp
.254 .203 .207 0 cmyk
f
258.668 68.463 mo
259.014 68.463 li
259.014 47.881 li
258.668 47.881 li
cp
.746 .676 .668 .898 cmyk
f
259.015 68.463 mo
259.36 68.463 li
259.36 48.898 li
259.015 48.898 li
cp
.254 .203 .207 0 cmyk
f
259.015 68.463 mo
259.36 68.463 li
259.36 48.898 li
259.015 48.898 li
cp
.746 .676 .668 .898 cmyk
f
259.359 68.463 mo
259.704 68.463 li
259.704 49.546 li
259.359 49.546 li
cp
.254 .203 .207 0 cmyk
f
259.359 68.463 mo
259.704 68.463 li
259.704 49.546 li
259.359 49.546 li
cp
.746 .676 .668 .898 cmyk
f
259.704 68.463 mo
260.05 68.463 li
260.05 50.582 li
259.704 50.582 li
cp
.254 .203 .207 0 cmyk
f
259.704 68.463 mo
260.05 68.463 li
260.05 50.582 li
259.704 50.582 li
cp
.746 .676 .668 .898 cmyk
f
260.05 68.463 mo
260.396 68.463 li
260.396 51.263 li
260.05 51.263 li
cp
.254 .203 .207 0 cmyk
f
260.05 68.463 mo
260.396 68.463 li
260.396 51.263 li
260.05 51.263 li
cp
.746 .676 .668 .898 cmyk
f
260.396 68.463 mo
260.742 68.463 li
260.742 51.46 li
260.396 51.46 li
cp
.254 .203 .207 0 cmyk
f
260.396 68.463 mo
260.742 68.463 li
260.742 51.46 li
260.396 51.46 li
cp
.746 .676 .668 .898 cmyk
f
260.743 68.463 mo
261.089 68.463 li
261.089 52.463 li
260.743 52.463 li
cp
.254 .203 .207 0 cmyk
f
260.743 68.463 mo
261.089 68.463 li
261.089 52.463 li
260.743 52.463 li
cp
.746 .676 .668 .898 cmyk
f
261.088 68.463 mo
261.433 68.463 li
261.433 53.483 li
261.088 53.483 li
cp
.254 .203 .207 0 cmyk
f
261.088 68.463 mo
261.433 68.463 li
261.433 53.483 li
261.088 53.483 li
cp
.746 .676 .668 .898 cmyk
f
261.433 68.463 mo
261.779 68.463 li
261.779 55.001 li
261.433 55.001 li
cp
.254 .203 .207 0 cmyk
f
261.433 68.463 mo
261.779 68.463 li
261.779 55.001 li
261.433 55.001 li
cp
.746 .676 .668 .898 cmyk
f
261.779 68.463 mo
262.125 68.463 li
262.125 56.548 li
261.779 56.548 li
cp
.254 .203 .207 0 cmyk
f
261.779 68.463 mo
262.125 68.463 li
262.125 56.548 li
261.779 56.548 li
cp
.746 .676 .668 .898 cmyk
f
262.125 68.463 mo
262.471 68.463 li
262.471 57.611 li
262.125 57.611 li
cp
.254 .203 .207 0 cmyk
f
262.125 68.463 mo
262.471 68.463 li
262.471 57.611 li
262.125 57.611 li
cp
.746 .676 .668 .898 cmyk
f
262.471 68.463 mo
262.817 68.463 li
262.817 59.352 li
262.471 59.352 li
cp
.254 .203 .207 0 cmyk
f
262.471 68.463 mo
262.817 68.463 li
262.817 59.352 li
262.471 59.352 li
cp
.746 .676 .668 .898 cmyk
f
262.816 68.463 mo
263.162 68.463 li
263.162 60.589 li
262.816 60.589 li
cp
.254 .203 .207 0 cmyk
f
262.816 68.463 mo
263.162 68.463 li
263.162 60.589 li
262.816 60.589 li
cp
.746 .676 .668 .898 cmyk
f
263.162 68.463 mo
263.507 68.463 li
263.507 61.757 li
263.162 61.757 li
cp
.254 .203 .207 0 cmyk
f
263.162 68.463 mo
263.507 68.463 li
263.507 61.757 li
263.162 61.757 li
cp
.746 .676 .668 .898 cmyk
f
263.507 68.463 mo
263.853 68.463 li
263.853 65.292 li
263.507 65.292 li
cp
.254 .203 .207 0 cmyk
f
263.507 68.463 mo
263.853 68.463 li
263.853 65.292 li
263.507 65.292 li
cp
.746 .676 .668 .898 cmyk
f
263.853 68.463 mo
264.199 68.463 li
264.199 67.186 li
263.853 67.186 li
cp
.254 .203 .207 0 cmyk
f
263.853 68.463 mo
264.199 68.463 li
264.199 67.186 li
263.853 67.186 li
cp
.746 .676 .668 .898 cmyk
f
264.199 68.463 mo
264.544 68.463 li
264.544 67.665 li
264.199 67.665 li
cp
.254 .203 .207 0 cmyk
f
264.199 68.463 mo
264.544 68.463 li
264.544 67.665 li
264.199 67.665 li
cp
.746 .676 .668 .898 cmyk
f
264.544 68.463 mo
264.89 68.463 li
264.89 67.839 li
264.544 67.839 li
cp
.254 .203 .207 0 cmyk
f
264.544 68.463 mo
264.89 68.463 li
264.89 67.839 li
264.544 67.839 li
cp
.746 .676 .668 .898 cmyk
f
264.89 68.463 mo
265.236 68.463 li
265.236 67.846 li
264.89 67.846 li
cp
.254 .203 .207 0 cmyk
f
264.89 68.463 mo
265.236 68.463 li
265.236 67.846 li
264.89 67.846 li
cp
.746 .676 .668 .898 cmyk
f
265.235 68.463 mo
265.581 68.463 li
265.581 67.987 li
265.235 67.987 li
cp
.254 .203 .207 0 cmyk
f
265.235 68.463 mo
265.581 68.463 li
265.581 67.987 li
265.235 67.987 li
cp
.746 .676 .668 .898 cmyk
f
265.581 68.463 mo
265.927 68.463 li
265.927 68.018 li
265.581 68.018 li
cp
.254 .203 .207 0 cmyk
f
265.581 68.463 mo
265.927 68.463 li
265.927 68.018 li
265.581 68.018 li
cp
.746 .676 .668 .898 cmyk
f
265.927 68.463 mo
266.272 68.463 li
266.272 68.005 li
265.927 68.005 li
cp
.254 .203 .207 0 cmyk
f
265.927 68.463 mo
266.272 68.463 li
266.272 68.005 li
265.927 68.005 li
cp
.746 .676 .668 .898 cmyk
f
266.272 68.463 mo
266.618 68.463 li
266.618 68.001 li
266.272 68.001 li
cp
.254 .203 .207 0 cmyk
f
266.272 68.463 mo
266.618 68.463 li
266.618 68.001 li
266.272 68.001 li
cp
.746 .676 .668 .898 cmyk
f
266.618 68.463 mo
266.963 68.463 li
266.963 67.993 li
266.618 67.993 li
cp
.254 .203 .207 0 cmyk
f
266.618 68.463 mo
266.963 68.463 li
266.963 67.993 li
266.618 67.993 li
cp
.746 .676 .668 .898 cmyk
f
266.962 68.463 mo
267.309 68.463 li
267.309 68.018 li
266.962 68.018 li
cp
.254 .203 .207 0 cmyk
f
266.962 68.463 mo
267.309 68.463 li
267.309 68.018 li
266.962 68.018 li
cp
.746 .676 .668 .898 cmyk
f
267.31 68.463 mo
267.655 68.463 li
267.655 68.001 li
267.31 68.001 li
cp
.254 .203 .207 0 cmyk
f
267.31 68.463 mo
267.655 68.463 li
267.655 68.001 li
267.31 68.001 li
cp
.746 .676 .668 .898 cmyk
f
267.655 68.463 mo
268.001 68.463 li
268.001 67.99 li
267.655 67.99 li
cp
.254 .203 .207 0 cmyk
f
267.655 68.463 mo
268.001 68.463 li
268.001 67.99 li
267.655 67.99 li
cp
.746 .676 .668 .898 cmyk
f
268.001 68.463 mo
268.347 68.463 li
268.347 67.98 li
268.001 67.98 li
cp
.254 .203 .207 0 cmyk
f
268.001 68.463 mo
268.347 68.463 li
268.347 67.98 li
268.001 67.98 li
cp
.746 .676 .668 .898 cmyk
f
268.347 68.463 mo
268.693 68.463 li
268.693 67.966 li
268.347 67.966 li
cp
.254 .203 .207 0 cmyk
f
268.347 68.463 mo
268.693 68.463 li
268.693 67.966 li
268.347 67.966 li
cp
.746 .676 .668 .898 cmyk
f
268.692 68.463 mo
269.038 68.463 li
269.038 67.953 li
268.692 67.953 li
cp
.254 .203 .207 0 cmyk
f
268.692 68.463 mo
269.038 68.463 li
269.038 67.953 li
268.692 67.953 li
cp
.746 .676 .668 .898 cmyk
f
269.038 68.463 mo
269.383 68.463 li
269.383 67.955 li
269.038 67.955 li
cp
.254 .203 .207 0 cmyk
f
269.038 68.463 mo
269.383 68.463 li
269.383 67.955 li
269.038 67.955 li
cp
.746 .676 .668 .898 cmyk
f
269.383 68.463 mo
269.729 68.463 li
269.729 67.955 li
269.383 67.955 li
cp
.254 .203 .207 0 cmyk
f
269.383 68.463 mo
269.729 68.463 li
269.729 67.955 li
269.383 67.955 li
cp
.746 .676 .668 .898 cmyk
f
269.729 68.463 mo
270.074 68.463 li
270.074 67.963 li
269.729 67.963 li
cp
.254 .203 .207 0 cmyk
f
269.729 68.463 mo
270.074 68.463 li
270.074 67.963 li
269.729 67.963 li
cp
.746 .676 .668 .898 cmyk
f
270.074 68.463 mo
270.421 68.463 li
270.421 67.99 li
270.074 67.99 li
cp
.254 .203 .207 0 cmyk
f
270.074 68.463 mo
270.421 68.463 li
270.421 67.99 li
270.074 67.99 li
cp
.746 .676 .668 .898 cmyk
f
270.421 68.463 mo
270.766 68.463 li
270.766 68.001 li
270.421 68.001 li
cp
.254 .203 .207 0 cmyk
f
270.421 68.463 mo
270.766 68.463 li
270.766 68.001 li
270.421 68.001 li
cp
.746 .676 .668 .898 cmyk
f
270.766 68.463 mo
271.112 68.463 li
271.112 68.005 li
270.766 68.005 li
cp
.254 .203 .207 0 cmyk
f
270.766 68.463 mo
271.112 68.463 li
271.112 68.005 li
270.766 68.005 li
cp
.746 .676 .668 .898 cmyk
f
271.111 68.463 mo
271.457 68.463 li
271.457 68.025 li
271.111 68.025 li
cp
.254 .203 .207 0 cmyk
f
271.111 68.463 mo
271.457 68.463 li
271.457 68.025 li
271.111 68.025 li
cp
.746 .676 .668 .898 cmyk
f
271.457 68.463 mo
271.803 68.463 li
271.803 68.031 li
271.457 68.031 li
cp
.254 .203 .207 0 cmyk
f
271.457 68.463 mo
271.803 68.463 li
271.803 68.031 li
271.457 68.031 li
cp
.746 .676 .668 .898 cmyk
f
271.803 68.463 mo
272.149 68.463 li
272.149 68.025 li
271.803 68.025 li
cp
.254 .203 .207 0 cmyk
f
271.803 68.463 mo
272.149 68.463 li
272.149 68.025 li
271.803 68.025 li
cp
.746 .676 .668 .898 cmyk
f
272.148 68.463 mo
272.493 68.463 li
272.493 68.038 li
272.148 68.038 li
cp
.254 .203 .207 0 cmyk
f
272.148 68.463 mo
272.493 68.463 li
272.493 68.038 li
272.148 68.038 li
cp
.746 .676 .668 .898 cmyk
f
272.493 68.463 mo
272.839 68.463 li
272.839 68.108 li
272.493 68.108 li
cp
.254 .203 .207 0 cmyk
f
272.493 68.463 mo
272.839 68.463 li
272.839 68.108 li
272.493 68.108 li
cp
.746 .676 .668 .898 cmyk
f
272.839 68.463 mo
273.184 68.463 li
273.184 68.124 li
272.839 68.124 li
cp
.254 .203 .207 0 cmyk
f
272.839 68.463 mo
273.184 68.463 li
273.184 68.124 li
272.839 68.124 li
cp
.746 .676 .668 .898 cmyk
f
273.184 68.463 mo
273.532 68.463 li
273.532 68.117 li
273.184 68.117 li
cp
.254 .203 .207 0 cmyk
f
273.184 68.463 mo
273.532 68.463 li
273.532 68.117 li
273.184 68.117 li
cp
.746 .676 .668 .898 cmyk
f
273.533 68.463 mo
273.877 68.463 li
273.877 68.105 li
273.533 68.105 li
cp
.254 .203 .207 0 cmyk
f
273.533 68.463 mo
273.877 68.463 li
273.877 68.105 li
273.533 68.105 li
cp
.746 .676 .668 .898 cmyk
f
273.876 68.463 mo
274.222 68.463 li
274.222 68.073 li
273.876 68.073 li
cp
.254 .203 .207 0 cmyk
f
273.876 68.463 mo
274.222 68.463 li
274.222 68.073 li
273.876 68.073 li
cp
.746 .676 .668 .898 cmyk
f
274.222 68.463 mo
274.568 68.463 li
274.568 68.087 li
274.222 68.087 li
cp
.254 .203 .207 0 cmyk
f
274.222 68.463 mo
274.568 68.463 li
274.568 68.087 li
274.222 68.087 li
cp
.746 .676 .668 .898 cmyk
f
274.568 68.463 mo
274.915 68.463 li
274.915 68.087 li
274.568 68.087 li
cp
.254 .203 .207 0 cmyk
f
274.568 68.463 mo
274.915 68.463 li
274.915 68.087 li
274.568 68.087 li
cp
.746 .676 .668 .898 cmyk
f
274.915 68.463 mo
275.259 68.463 li
275.259 68.031 li
274.915 68.031 li
cp
.254 .203 .207 0 cmyk
f
274.915 68.463 mo
275.259 68.463 li
275.259 68.031 li
274.915 68.031 li
cp
.746 .676 .668 .898 cmyk
f
275.259 68.463 mo
275.606 68.463 li
275.606 68.046 li
275.259 68.046 li
cp
.254 .203 .207 0 cmyk
f
275.259 68.463 mo
275.606 68.463 li
275.606 68.046 li
275.259 68.046 li
cp
.746 .676 .668 .898 cmyk
f
275.606 68.463 mo
275.95 68.463 li
275.95 68.063 li
275.606 68.063 li
cp
.254 .203 .207 0 cmyk
f
275.606 68.463 mo
275.95 68.463 li
275.95 68.063 li
275.606 68.063 li
cp
.746 .676 .668 .898 cmyk
f
275.95 68.463 mo
276.296 68.463 li
276.296 68.091 li
275.95 68.091 li
cp
.254 .203 .207 0 cmyk
f
275.95 68.463 mo
276.296 68.463 li
276.296 68.091 li
275.95 68.091 li
cp
.746 .676 .668 .898 cmyk
f
276.299 68.463 mo
276.645 68.463 li
276.645 68.132 li
276.299 68.132 li
cp
.254 .203 .207 0 cmyk
f
276.299 68.463 mo
276.645 68.463 li
276.645 68.132 li
276.299 68.132 li
cp
.746 .676 .668 .898 cmyk
f
276.645 68.463 mo
276.991 68.463 li
276.991 68.18 li
276.645 68.18 li
cp
.254 .203 .207 0 cmyk
f
276.645 68.463 mo
276.991 68.463 li
276.991 68.18 li
276.645 68.18 li
cp
.746 .676 .668 .898 cmyk
f
276.991 68.463 mo
277.337 68.463 li
277.337 68.217 li
276.991 68.217 li
cp
.254 .203 .207 0 cmyk
f
276.991 68.463 mo
277.337 68.463 li
277.337 68.217 li
276.991 68.217 li
cp
.746 .676 .668 .898 cmyk
f
277.337 68.463 mo
277.682 68.463 li
277.682 68.252 li
277.337 68.252 li
cp
.254 .203 .207 0 cmyk
f
277.337 68.463 mo
277.682 68.463 li
277.682 68.252 li
277.337 68.252 li
cp
.746 .676 .668 .898 cmyk
f
277.681 68.463 mo
278.027 68.463 li
278.027 68.26 li
277.681 68.26 li
cp
.254 .203 .207 0 cmyk
f
277.681 68.463 mo
278.027 68.463 li
278.027 68.26 li
277.681 68.26 li
cp
.746 .676 .668 .898 cmyk
f
278.028 68.463 mo
278.373 68.463 li
278.373 68.223 li
278.028 68.223 li
cp
.254 .203 .207 0 cmyk
f
278.028 68.463 mo
278.373 68.463 li
278.373 68.223 li
278.028 68.223 li
cp
.746 .676 .668 .898 cmyk
f
278.373 68.463 mo
278.719 68.463 li
278.719 68.225 li
278.373 68.225 li
cp
.254 .203 .207 0 cmyk
f
278.373 68.463 mo
278.719 68.463 li
278.719 68.225 li
278.373 68.225 li
cp
.746 .676 .668 .898 cmyk
f
278.719 68.463 mo
279.065 68.463 li
279.065 68.223 li
278.719 68.223 li
cp
.254 .203 .207 0 cmyk
f
278.719 68.463 mo
279.065 68.463 li
279.065 68.223 li
278.719 68.223 li
cp
.746 .676 .668 .898 cmyk
f
279.065 68.463 mo
279.411 68.463 li
279.411 68.235 li
279.065 68.235 li
cp
.254 .203 .207 0 cmyk
f
279.065 68.463 mo
279.411 68.463 li
279.411 68.235 li
279.065 68.235 li
cp
.746 .676 .668 .898 cmyk
f
279.41 68.463 mo
279.756 68.463 li
279.756 68.233 li
279.41 68.233 li
cp
.254 .203 .207 0 cmyk
f
279.41 68.463 mo
279.756 68.463 li
279.756 68.233 li
279.41 68.233 li
cp
.746 .676 .668 .898 cmyk
f
279.756 68.463 mo
280.102 68.463 li
280.102 68.208 li
279.756 68.208 li
cp
.254 .203 .207 0 cmyk
f
279.756 68.463 mo
280.102 68.463 li
280.102 68.208 li
279.756 68.208 li
cp
.746 .676 .668 .898 cmyk
f
280.102 68.463 mo
280.448 68.463 li
280.448 68.208 li
280.102 68.208 li
cp
.254 .203 .207 0 cmyk
f
280.102 68.463 mo
280.448 68.463 li
280.448 68.208 li
280.102 68.208 li
cp
.746 .676 .668 .898 cmyk
f
245.531 68.4629 mo
280.448 68.4629 li
cp
f
.5 lw
10 ml
283.498 69.5142 mo
282.548 71.5532 li
@
284.623 69.5142 mo
283.672 71.5532 li
@
321.64 69.906 mo
304.008 69.906 li
304.008 71.161 li
321.64 71.161 li
cp
0 0 0 1 cmyk
f
286.896 70.5332 mo
304.007 70.5332 li
.746 .676 .668 .898 cmyk
@
263.162 69.906 mo
245.531 69.906 li
245.531 71.161 li
263.162 71.161 li
cp
0 0 0 1 cmyk
f
263.162 70.5332 mo
280.448 70.5332 li
.746 .676 .668 .898 cmyk
@
373.331 68.4629 mo
373.678 68.4629 li
cp
0 1 1 0 cmyk
f
373.331 68.4629 mo
373.678 68.4629 li
cp
f
373.677 68.4629 mo
374.023 68.4629 li
cp
f
373.677 68.4629 mo
374.023 68.4629 li
cp
f
374.024 68.4629 mo
374.369 68.4629 li
cp
f
374.024 68.4629 mo
374.369 68.4629 li
cp
f
374.368 68.4629 mo
374.714 68.4629 li
cp
f
374.368 68.4629 mo
374.714 68.4629 li
cp
f
374.715 68.4629 mo
375.061 68.4629 li
cp
f
374.715 68.4629 mo
375.061 68.4629 li
cp
f
375.061 68.4629 mo
375.406 68.4629 li
cp
f
375.061 68.4629 mo
375.406 68.4629 li
cp
f
375.405 68.4629 mo
375.751 68.4629 li
cp
f
375.405 68.4629 mo
375.751 68.4629 li
cp
f
375.752 68.4629 mo
376.095 68.4629 li
cp
f
375.752 68.4629 mo
376.095 68.4629 li
cp
f
376.095 68.4629 mo
376.442 68.4629 li
cp
f
376.095 68.4629 mo
376.442 68.4629 li
cp
f
376.442 68.4629 mo
376.789 68.4629 li
cp
f
376.442 68.4629 mo
376.789 68.4629 li
cp
f
376.789 68.4629 mo
377.135 68.4629 li
cp
f
376.789 68.4629 mo
377.135 68.4629 li
cp
f
377.135 68.4629 mo
377.48 68.4629 li
cp
f
377.135 68.4629 mo
377.48 68.4629 li
cp
f
377.48 68.4629 mo
377.826 68.4629 li
cp
f
377.48 68.4629 mo
377.826 68.4629 li
cp
f
377.826 68.4629 mo
378.172 68.4629 li
cp
f
377.826 68.4629 mo
378.172 68.4629 li
cp
f
378.172 68.4629 mo
378.517 68.4629 li
cp
f
378.172 68.4629 mo
378.517 68.4629 li
cp
f
378.517 68.4629 mo
378.863 68.4629 li
cp
f
378.517 68.4629 mo
378.863 68.4629 li
cp
f
378.863 68.4629 mo
379.209 68.4629 li
cp
f
378.863 68.4629 mo
379.209 68.4629 li
cp
f
379.209 68.4629 mo
379.554 68.4629 li
cp
f
379.209 68.4629 mo
379.554 68.4629 li
cp
f
379.553 68.4629 mo
379.898 68.4629 li
cp
f
379.553 68.4629 mo
379.898 68.4629 li
cp
f
379.898 68.4629 mo
380.246 68.4629 li
cp
f
379.898 68.4629 mo
380.246 68.4629 li
cp
f
380.246 68.4629 mo
380.59 68.4629 li
cp
f
380.246 68.4629 mo
380.59 68.4629 li
cp
f
380.59 68.4629 mo
380.937 68.4629 li
cp
f
380.59 68.4629 mo
380.937 68.4629 li
cp
f
380.938 68.4629 mo
381.284 68.4629 li
cp
f
380.938 68.4629 mo
381.284 68.4629 li
cp
f
381.283 68.4629 mo
381.628 68.4629 li
cp
f
381.283 68.4629 mo
381.628 68.4629 li
cp
f
381.628 68.4629 mo
381.974 68.4629 li
cp
f
381.628 68.4629 mo
381.974 68.4629 li
cp
f
381.974 68.4629 mo
382.32 68.4629 li
cp
f
381.974 68.4629 mo
382.32 68.4629 li
cp
f
382.32 68.4629 mo
382.665 68.4629 li
cp
f
382.32 68.4629 mo
382.665 68.4629 li
cp
f
382.665 68.4629 mo
383.012 68.4629 li
cp
f
382.665 68.4629 mo
383.012 68.4629 li
cp
f
383.012 68.4629 mo
383.358 68.4629 li
cp
f
383.012 68.4629 mo
383.358 68.4629 li
cp
f
383.358 68.4629 mo
383.703 68.4629 li
cp
f
383.358 68.4629 mo
383.703 68.4629 li
cp
f
383.702 68.4629 mo
384.048 68.4629 li
cp
f
383.702 68.4629 mo
384.048 68.4629 li
cp
f
384.049 68.4629 mo
384.395 68.4629 li
cp
f
384.049 68.4629 mo
384.395 68.4629 li
cp
f
384.395 68.4629 mo
384.738 68.4629 li
cp
f
384.395 68.4629 mo
384.738 68.4629 li
cp
f
384.738 68.4629 mo
385.085 68.4629 li
cp
f
384.738 68.4629 mo
385.085 68.4629 li
cp
f
385.086 68.4629 mo
385.429 68.4629 li
cp
f
385.086 68.4629 mo
385.429 68.4629 li
cp
f
385.429 68.4629 mo
385.776 68.4629 li
cp
f
385.429 68.4629 mo
385.776 68.4629 li
cp
f
385.776 68.4629 mo
386.121 68.4629 li
cp
f
385.776 68.4629 mo
386.121 68.4629 li
cp
f
386.121 68.4629 mo
386.469 68.4629 li
cp
f
386.121 68.4629 mo
386.469 68.4629 li
cp
f
386.469 68.4629 mo
386.813 68.4629 li
cp
f
386.469 68.4629 mo
386.813 68.4629 li
cp
f
386.813 68.4629 mo
387.16 68.4629 li
cp
f
386.813 68.4629 mo
387.16 68.4629 li
cp
f
387.16 68.4629 mo
387.504 68.4629 li
cp
f
387.16 68.4629 mo
387.504 68.4629 li
cp
f
387.504 68.4629 mo
387.85 68.4629 li
cp
f
387.504 68.4629 mo
387.85 68.4629 li
cp
f
387.85 68.4629 mo
388.196 68.4629 li
cp
f
387.85 68.4629 mo
388.196 68.4629 li
cp
f
388.197 68.4629 mo
388.543 68.4629 li
cp
f
388.197 68.4629 mo
388.543 68.4629 li
cp
f
388.543 68.4629 mo
388.887 68.4629 li
cp
f
388.543 68.4629 mo
388.887 68.4629 li
cp
f
388.886 68.4629 mo
389.234 68.4629 li
cp
f
388.886 68.4629 mo
389.234 68.4629 li
cp
f
389.235 68.4629 mo
389.579 68.4629 li
cp
f
389.235 68.4629 mo
389.579 68.4629 li
cp
f
389.578 68.4629 mo
389.924 68.4629 li
cp
f
389.578 68.4629 mo
389.924 68.4629 li
cp
f
389.925 68.4629 mo
390.27 68.4629 li
cp
f
389.925 68.4629 mo
390.27 68.4629 li
cp
f
390.27 68.4629 mo
390.616 68.4629 li
cp
f
390.27 68.4629 mo
390.616 68.4629 li
cp
f
390.615 68.4629 mo
390.961 68.4629 li
cp
f
390.615 68.4629 mo
390.961 68.4629 li
cp
f
390.965 68.4629 mo
391.309 68.4629 li
cp
f
390.965 68.4629 mo
391.309 68.4629 li
cp
f
391.309 68.4629 mo
391.654 68.4629 li
cp
f
391.309 68.4629 mo
391.654 68.4629 li
cp
f
391.654 68.4629 mo
392.002 68.4629 li
cp
f
391.654 68.4629 mo
392.002 68.4629 li
cp
f
392.002 68.4629 mo
392.346 68.4629 li
cp
f
392.002 68.4629 mo
392.346 68.4629 li
cp
f
392.346 68.4629 mo
392.693 68.4629 li
cp
f
392.346 68.4629 mo
392.693 68.4629 li
cp
f
392.693 68.4629 mo
393.036 68.4629 li
cp
f
392.693 68.4629 mo
393.036 68.4629 li
cp
f
393.036 68.4629 mo
393.383 68.4629 li
cp
f
393.036 68.4629 mo
393.383 68.4629 li
cp
f
393.384 68.4629 mo
393.729 68.4629 li
cp
f
393.384 68.4629 mo
393.729 68.4629 li
cp
f
393.728 68.4629 mo
394.075 68.4629 li
cp
f
393.728 68.4629 mo
394.075 68.4629 li
cp
f
394.076 68.4629 mo
394.421 68.4629 li
cp
f
394.076 68.4629 mo
394.421 68.4629 li
cp
f
394.421 68.4629 mo
394.765 68.4629 li
cp
f
394.421 68.4629 mo
394.765 68.4629 li
cp
f
394.765 68.4629 mo
395.11 68.4629 li
cp
f
394.765 68.4629 mo
395.11 68.4629 li
cp
f
395.11 68.4629 mo
395.458 68.4629 li
cp
f
395.11 68.4629 mo
395.458 68.4629 li
cp
f
395.458 68.463 mo
395.803 68.463 li
395.803 68.46 li
395.458 68.46 li
cp
f
395.458 68.463 mo
395.803 68.463 li
395.803 68.46 li
395.458 68.46 li
cp
f
395.803 68.463 mo
396.15 68.463 li
396.15 68.46 li
395.803 68.46 li
cp
f
395.803 68.463 mo
396.15 68.463 li
396.15 68.46 li
395.803 68.46 li
cp
f
396.15 68.463 mo
396.493 68.463 li
396.493 68.46 li
396.15 68.46 li
cp
f
396.15 68.463 mo
396.493 68.463 li
396.493 68.46 li
396.15 68.46 li
cp
f
396.493 68.463 mo
396.839 68.463 li
396.839 68.456 li
396.493 68.456 li
cp
f
396.493 68.463 mo
396.839 68.463 li
396.839 68.456 li
396.493 68.456 li
cp
f
396.84 68.463 mo
397.185 68.463 li
397.185 68.445 li
396.84 68.445 li
cp
f
396.84 68.463 mo
397.185 68.463 li
397.185 68.445 li
396.84 68.445 li
cp
f
397.184 68.463 mo
397.531 68.463 li
397.531 68.445 li
397.184 68.445 li
cp
f
397.184 68.463 mo
397.531 68.463 li
397.531 68.445 li
397.184 68.445 li
cp
f
397.532 68.463 mo
397.877 68.463 li
397.877 68.445 li
397.532 68.445 li
cp
f
397.532 68.463 mo
397.877 68.463 li
397.877 68.445 li
397.532 68.445 li
cp
f
397.876 68.463 mo
398.224 68.463 li
398.224 68.445 li
397.876 68.445 li
cp
f
397.876 68.463 mo
398.224 68.463 li
398.224 68.445 li
397.876 68.445 li
cp
f
398.225 68.463 mo
398.57 68.463 li
398.57 68.445 li
398.225 68.445 li
cp
f
398.225 68.463 mo
398.57 68.463 li
398.57 68.445 li
398.225 68.445 li
cp
f
398.569 68.463 mo
398.914 68.463 li
398.914 68.449 li
398.569 68.449 li
cp
f
398.569 68.463 mo
398.914 68.463 li
398.914 68.449 li
398.569 68.449 li
cp
f
398.914 68.463 mo
399.261 68.463 li
399.261 68.449 li
398.914 68.449 li
cp
f
398.914 68.463 mo
399.261 68.463 li
399.261 68.449 li
398.914 68.449 li
cp
f
399.262 68.463 mo
399.607 68.463 li
399.607 68.449 li
399.262 68.449 li
cp
f
399.262 68.463 mo
399.607 68.463 li
399.607 68.449 li
399.262 68.449 li
cp
f
399.606 68.463 mo
399.952 68.463 li
399.952 68.449 li
399.606 68.449 li
cp
f
399.606 68.463 mo
399.952 68.463 li
399.952 68.449 li
399.606 68.449 li
cp
f
399.952 68.463 mo
400.298 68.463 li
400.298 68.456 li
399.952 68.456 li
cp
f
399.952 68.463 mo
400.298 68.463 li
400.298 68.456 li
399.952 68.456 li
cp
f
400.298 68.4629 mo
400.643 68.4629 li
cp
f
400.298 68.4629 mo
400.643 68.4629 li
cp
f
400.643 68.4629 mo
400.989 68.4629 li
cp
f
400.643 68.4629 mo
400.989 68.4629 li
cp
f
400.989 68.463 mo
401.336 68.463 li
401.336 68.456 li
400.989 68.456 li
cp
f
400.989 68.463 mo
401.336 68.463 li
401.336 68.456 li
400.989 68.456 li
cp
f
401.336 68.463 mo
401.681 68.463 li
401.681 68.449 li
401.336 68.449 li
cp
f
401.336 68.463 mo
401.681 68.463 li
401.681 68.449 li
401.336 68.449 li
cp
f
401.681 68.463 mo
402.027 68.463 li
402.027 68.449 li
401.681 68.449 li
cp
f
401.681 68.463 mo
402.027 68.463 li
402.027 68.449 li
401.681 68.449 li
cp
f
402.026 68.463 mo
402.372 68.463 li
402.372 68.449 li
402.026 68.449 li
cp
f
402.026 68.463 mo
402.372 68.463 li
402.372 68.449 li
402.026 68.449 li
cp
f
402.373 68.463 mo
402.718 68.463 li
402.718 68.456 li
402.373 68.456 li
cp
f
402.373 68.463 mo
402.718 68.463 li
402.718 68.456 li
402.373 68.456 li
cp
f
402.718 68.463 mo
403.063 68.463 li
403.063 68.456 li
402.718 68.456 li
cp
f
402.718 68.463 mo
403.063 68.463 li
403.063 68.456 li
402.718 68.456 li
cp
f
403.062 68.463 mo
403.409 68.463 li
403.409 68.456 li
403.062 68.456 li
cp
f
403.062 68.463 mo
403.409 68.463 li
403.409 68.456 li
403.062 68.456 li
cp
f
403.41 68.463 mo
403.753 68.463 li
403.753 68.445 li
403.41 68.445 li
cp
f
403.41 68.463 mo
403.753 68.463 li
403.753 68.445 li
403.41 68.445 li
cp
f
403.753 68.463 mo
404.101 68.463 li
404.101 68.425 li
403.753 68.425 li
cp
f
403.753 68.463 mo
404.101 68.463 li
404.101 68.425 li
403.753 68.425 li
cp
f
404.101 68.463 mo
404.445 68.463 li
404.445 68.421 li
404.101 68.421 li
cp
f
404.101 68.463 mo
404.445 68.463 li
404.445 68.421 li
404.101 68.421 li
cp
f
404.445 68.463 mo
404.792 68.463 li
404.792 68.418 li
404.445 68.418 li
cp
f
404.445 68.463 mo
404.792 68.463 li
404.792 68.418 li
404.445 68.418 li
cp
f
404.792 68.463 mo
405.137 68.463 li
405.137 68.415 li
404.792 68.415 li
cp
f
404.792 68.463 mo
405.137 68.463 li
405.137 68.415 li
404.792 68.415 li
cp
f
405.137 68.463 mo
405.484 68.463 li
405.484 68.41 li
405.137 68.41 li
cp
f
405.137 68.463 mo
405.484 68.463 li
405.484 68.41 li
405.137 68.41 li
cp
f
405.484 68.463 mo
405.827 68.463 li
405.827 68.41 li
405.484 68.41 li
cp
f
405.484 68.463 mo
405.827 68.463 li
405.827 68.41 li
405.484 68.41 li
cp
f
405.827 68.463 mo
406.174 68.463 li
406.174 68.425 li
405.827 68.425 li
cp
f
405.827 68.463 mo
406.174 68.463 li
406.174 68.425 li
405.827 68.425 li
cp
f
406.174 68.463 mo
406.521 68.463 li
406.521 68.425 li
406.174 68.425 li
cp
f
406.174 68.463 mo
406.521 68.463 li
406.521 68.425 li
406.174 68.425 li
cp
f
406.522 68.463 mo
406.864 68.463 li
406.864 68.41 li
406.522 68.41 li
cp
f
406.522 68.463 mo
406.864 68.463 li
406.864 68.41 li
406.522 68.41 li
cp
f
406.864 68.463 mo
407.211 68.463 li
407.211 68.41 li
406.864 68.41 li
cp
f
406.864 68.463 mo
407.211 68.463 li
407.211 68.41 li
406.864 68.41 li
cp
f
407.211 68.463 mo
407.557 68.463 li
407.557 68.402 li
407.211 68.402 li
cp
f
407.211 68.463 mo
407.557 68.463 li
407.557 68.402 li
407.211 68.402 li
cp
f
407.557 68.463 mo
407.902 68.463 li
407.902 68.391 li
407.557 68.391 li
cp
f
407.557 68.463 mo
407.902 68.463 li
407.902 68.391 li
407.557 68.391 li
cp
f
407.902 68.463 mo
408.249 68.463 li
408.249 68.391 li
407.902 68.391 li
cp
f
407.902 68.463 mo
408.249 68.463 li
408.249 68.391 li
407.902 68.391 li
cp
f
390.615 68.4629 mo
408.249 68.4629 li
cp
f
332.474 68.463 mo
332.82 68.463 li
332.82 68.38 li
332.474 68.38 li
cp
f
332.474 68.463 mo
332.82 68.463 li
332.82 68.38 li
332.474 68.38 li
cp
f
332.82 68.463 mo
333.166 68.463 li
333.166 68.388 li
332.82 68.388 li
cp
f
332.82 68.463 mo
333.166 68.463 li
333.166 68.388 li
332.82 68.388 li
cp
f
333.166 68.463 mo
333.512 68.463 li
333.512 68.398 li
333.166 68.398 li
cp
f
333.166 68.463 mo
333.512 68.463 li
333.512 68.398 li
333.166 68.398 li
cp
f
333.512 68.463 mo
333.859 68.463 li
333.859 68.418 li
333.512 68.418 li
cp
f
333.512 68.463 mo
333.859 68.463 li
333.859 68.418 li
333.512 68.418 li
cp
f
333.859 68.463 mo
334.203 68.463 li
334.203 68.425 li
333.859 68.425 li
cp
f
333.859 68.463 mo
334.203 68.463 li
334.203 68.425 li
333.859 68.425 li
cp
f
334.203 68.463 mo
334.549 68.463 li
334.549 68.415 li
334.203 68.415 li
cp
f
334.203 68.463 mo
334.549 68.463 li
334.549 68.415 li
334.203 68.415 li
cp
f
334.549 68.463 mo
334.895 68.463 li
334.895 68.41 li
334.549 68.41 li
cp
f
334.549 68.463 mo
334.895 68.463 li
334.895 68.41 li
334.549 68.41 li
cp
f
334.895 68.463 mo
335.241 68.463 li
335.241 68.415 li
334.895 68.415 li
cp
f
334.895 68.463 mo
335.241 68.463 li
335.241 68.415 li
334.895 68.415 li
cp
f
335.24 68.463 mo
335.586 68.463 li
335.586 68.418 li
335.24 68.418 li
cp
f
335.24 68.463 mo
335.586 68.463 li
335.586 68.418 li
335.24 68.418 li
cp
f
335.586 68.463 mo
335.932 68.463 li
335.932 68.418 li
335.586 68.418 li
cp
f
335.586 68.463 mo
335.932 68.463 li
335.932 68.418 li
335.586 68.418 li
cp
f
335.931 68.463 mo
336.275 68.463 li
336.275 68.41 li
335.931 68.41 li
cp
f
335.931 68.463 mo
336.275 68.463 li
336.275 68.41 li
335.931 68.41 li
cp
f
336.275 68.463 mo
336.623 68.463 li
336.623 68.41 li
336.275 68.41 li
cp
f
336.275 68.463 mo
336.623 68.463 li
336.623 68.41 li
336.275 68.41 li
cp
f
336.623 68.463 mo
336.967 68.463 li
336.967 68.415 li
336.623 68.415 li
cp
f
336.623 68.463 mo
336.967 68.463 li
336.967 68.415 li
336.623 68.415 li
cp
f
336.972 68.463 mo
337.319 68.463 li
337.319 68.421 li
336.972 68.421 li
cp
f
336.972 68.463 mo
337.319 68.463 li
337.319 68.421 li
336.972 68.421 li
cp
f
337.318 68.463 mo
337.661 68.463 li
337.661 68.41 li
337.318 68.41 li
cp
f
337.318 68.463 mo
337.661 68.463 li
337.661 68.41 li
337.318 68.41 li
cp
f
337.661 68.463 mo
338.007 68.463 li
338.007 68.41 li
337.661 68.41 li
cp
f
337.661 68.463 mo
338.007 68.463 li
338.007 68.41 li
337.661 68.41 li
cp
f
338.008 68.463 mo
338.356 68.463 li
338.356 68.402 li
338.008 68.402 li
cp
f
338.008 68.463 mo
338.356 68.463 li
338.356 68.402 li
338.008 68.402 li
cp
f
338.356 68.463 mo
338.698 68.463 li
338.698 68.415 li
338.356 68.415 li
cp
f
338.356 68.463 mo
338.698 68.463 li
338.698 68.415 li
338.356 68.415 li
cp
f
338.698 68.463 mo
339.045 68.463 li
339.045 68.415 li
338.698 68.415 li
cp
f
338.698 68.463 mo
339.045 68.463 li
339.045 68.415 li
338.698 68.415 li
cp
f
339.045 68.463 mo
339.391 68.463 li
339.391 68.404 li
339.045 68.404 li
cp
f
339.045 68.463 mo
339.391 68.463 li
339.391 68.404 li
339.045 68.404 li
cp
f
339.391 68.463 mo
339.736 68.463 li
339.736 68.404 li
339.391 68.404 li
cp
f
339.391 68.463 mo
339.736 68.463 li
339.736 68.404 li
339.391 68.404 li
cp
f
339.736 68.463 mo
340.082 68.463 li
340.082 68.408 li
339.736 68.408 li
cp
f
339.736 68.463 mo
340.082 68.463 li
340.082 68.408 li
339.736 68.408 li
cp
f
340.082 68.463 mo
340.428 68.463 li
340.428 68.408 li
340.082 68.408 li
cp
f
340.082 68.463 mo
340.428 68.463 li
340.428 68.408 li
340.082 68.408 li
cp
f
340.428 68.463 mo
340.773 68.463 li
340.773 68.402 li
340.428 68.402 li
cp
f
340.428 68.463 mo
340.773 68.463 li
340.773 68.402 li
340.428 68.402 li
cp
f
340.772 68.463 mo
341.118 68.463 li
341.118 68.404 li
340.772 68.404 li
cp
f
340.772 68.463 mo
341.118 68.463 li
341.118 68.404 li
340.772 68.404 li
cp
f
341.119 68.463 mo
341.467 68.463 li
341.467 68.394 li
341.119 68.394 li
cp
f
341.119 68.463 mo
341.467 68.463 li
341.467 68.394 li
341.119 68.394 li
cp
f
341.467 68.463 mo
341.809 68.463 li
341.809 68.391 li
341.467 68.391 li
cp
f
341.467 68.463 mo
341.809 68.463 li
341.809 68.391 li
341.467 68.391 li
cp
f
341.809 68.463 mo
342.157 68.463 li
342.157 68.391 li
341.809 68.391 li
cp
f
341.809 68.463 mo
342.157 68.463 li
342.157 68.391 li
341.809 68.391 li
cp
f
342.158 68.463 mo
342.501 68.463 li
342.501 68.391 li
342.158 68.391 li
cp
f
342.158 68.463 mo
342.501 68.463 li
342.501 68.391 li
342.158 68.391 li
cp
f
342.5 68.463 mo
342.846 68.463 li
342.846 68.394 li
342.5 68.394 li
cp
f
342.5 68.463 mo
342.846 68.463 li
342.846 68.394 li
342.5 68.394 li
cp
f
342.847 68.463 mo
343.193 68.463 li
343.193 68.415 li
342.847 68.415 li
cp
f
342.847 68.463 mo
343.193 68.463 li
343.193 68.415 li
342.847 68.415 li
cp
f
343.193 68.463 mo
343.539 68.463 li
343.539 68.421 li
343.193 68.421 li
cp
f
343.193 68.463 mo
343.539 68.463 li
343.539 68.421 li
343.193 68.421 li
cp
f
343.539 68.463 mo
343.884 68.463 li
343.884 68.421 li
343.539 68.421 li
cp
f
343.539 68.463 mo
343.884 68.463 li
343.884 68.421 li
343.539 68.421 li
cp
f
343.884 68.463 mo
344.229 68.463 li
344.229 68.428 li
343.884 68.428 li
cp
f
343.884 68.463 mo
344.229 68.463 li
344.229 68.428 li
343.884 68.428 li
cp
f
344.228 68.463 mo
344.575 68.463 li
344.575 68.428 li
344.228 68.428 li
cp
f
344.228 68.463 mo
344.575 68.463 li
344.575 68.428 li
344.228 68.428 li
cp
f
344.576 68.463 mo
344.92 68.463 li
344.92 68.44 li
344.576 68.44 li
cp
f
344.576 68.463 mo
344.92 68.463 li
344.92 68.44 li
344.576 68.44 li
cp
f
344.92 68.463 mo
345.266 68.463 li
345.266 68.44 li
344.92 68.44 li
cp
f
344.92 68.463 mo
345.266 68.463 li
345.266 68.44 li
344.92 68.44 li
cp
f
345.265 68.463 mo
345.611 68.463 li
345.611 68.445 li
345.265 68.445 li
cp
f
345.265 68.463 mo
345.611 68.463 li
345.611 68.445 li
345.265 68.445 li
cp
f
345.612 68.463 mo
345.958 68.463 li
345.958 68.445 li
345.612 68.445 li
cp
f
345.612 68.463 mo
345.958 68.463 li
345.958 68.445 li
345.612 68.445 li
cp
f
345.958 68.463 mo
346.303 68.463 li
346.303 68.445 li
345.958 68.445 li
cp
f
345.958 68.463 mo
346.303 68.463 li
346.303 68.445 li
345.958 68.445 li
cp
f
346.303 68.463 mo
346.65 68.463 li
346.65 68.453 li
346.303 68.453 li
cp
f
346.303 68.463 mo
346.65 68.463 li
346.65 68.453 li
346.303 68.453 li
cp
f
346.65 68.463 mo
346.994 68.463 li
346.994 68.453 li
346.65 68.453 li
cp
f
346.65 68.463 mo
346.994 68.463 li
346.994 68.453 li
346.65 68.453 li
cp
f
346.994 68.463 mo
347.341 68.463 li
347.341 68.456 li
346.994 68.456 li
cp
f
346.994 68.463 mo
347.341 68.463 li
347.341 68.456 li
346.994 68.456 li
cp
f
347.341 68.463 mo
347.687 68.463 li
347.687 68.456 li
347.341 68.456 li
cp
f
347.341 68.463 mo
347.687 68.463 li
347.687 68.456 li
347.341 68.456 li
cp
f
347.687 68.463 mo
348.032 68.463 li
348.032 68.46 li
347.687 68.46 li
cp
f
347.687 68.463 mo
348.032 68.463 li
348.032 68.46 li
347.687 68.46 li
cp
f
348.032 68.4629 mo
348.379 68.4629 li
cp
f
348.032 68.4629 mo
348.379 68.4629 li
cp
f
348.379 68.4629 mo
348.723 68.4629 li
cp
f
348.379 68.4629 mo
348.723 68.4629 li
cp
f
348.723 68.4629 mo
349.069 68.4629 li
cp
f
348.723 68.4629 mo
349.069 68.4629 li
cp
f
349.069 68.4629 mo
349.415 68.4629 li
cp
f
349.069 68.4629 mo
349.415 68.4629 li
cp
f
349.415 68.4629 mo
349.761 68.4629 li
cp
f
349.415 68.4629 mo
349.761 68.4629 li
cp
f
349.762 68.4629 mo
350.106 68.4629 li
cp
f
349.762 68.4629 mo
350.106 68.4629 li
cp
f
350.105 68.4629 mo
350.451 68.4629 li
cp
f
350.105 68.4629 mo
350.451 68.4629 li
cp
f
350.451 68.4629 mo
350.798 68.4629 li
cp
f
350.451 68.4629 mo
350.798 68.4629 li
cp
f
350.798 68.4629 mo
351.141 68.4629 li
cp
f
350.798 68.4629 mo
351.141 68.4629 li
cp
f
351.141 68.4629 mo
351.488 68.4629 li
cp
f
351.141 68.4629 mo
351.488 68.4629 li
cp
f
351.489 68.4629 mo
351.835 68.4629 li
cp
f
351.489 68.4629 mo
351.835 68.4629 li
cp
f
351.834 68.4629 mo
352.179 68.4629 li
cp
f
351.834 68.4629 mo
352.179 68.4629 li
cp
f
352.179 68.4629 mo
352.524 68.4629 li
cp
f
352.179 68.4629 mo
352.524 68.4629 li
cp
f
352.524 68.4629 mo
352.871 68.4629 li
cp
f
352.524 68.4629 mo
352.871 68.4629 li
cp
f
352.871 68.4629 mo
353.216 68.4629 li
cp
f
352.871 68.4629 mo
353.216 68.4629 li
cp
f
353.216 68.4629 mo
353.562 68.4629 li
cp
f
353.216 68.4629 mo
353.562 68.4629 li
cp
f
353.562 68.4629 mo
353.908 68.4629 li
cp
f
353.562 68.4629 mo
353.908 68.4629 li
cp
f
353.908 68.4629 mo
354.253 68.4629 li
cp
f
353.908 68.4629 mo
354.253 68.4629 li
cp
f
354.253 68.4629 mo
354.6 68.4629 li
cp
f
354.253 68.4629 mo
354.6 68.4629 li
cp
f
354.6 68.4629 mo
354.946 68.4629 li
cp
f
354.6 68.4629 mo
354.946 68.4629 li
cp
f
354.946 68.4629 mo
355.291 68.4629 li
cp
f
354.946 68.4629 mo
355.291 68.4629 li
cp
f
355.29 68.4629 mo
355.636 68.4629 li
cp
f
355.29 68.4629 mo
355.636 68.4629 li
cp
f
355.637 68.4629 mo
355.983 68.4629 li
cp
f
355.637 68.4629 mo
355.983 68.4629 li
cp
f
355.982 68.4629 mo
356.327 68.4629 li
cp
f
355.982 68.4629 mo
356.327 68.4629 li
cp
f
356.327 68.4629 mo
356.672 68.4629 li
cp
f
356.327 68.4629 mo
356.672 68.4629 li
cp
f
356.672 68.4629 mo
357.019 68.4629 li
cp
f
356.672 68.4629 mo
357.019 68.4629 li
cp
f
357.019 68.4629 mo
357.364 68.4629 li
cp
f
357.019 68.4629 mo
357.364 68.4629 li
cp
f
357.364 68.4629 mo
357.711 68.4629 li
cp
f
357.364 68.4629 mo
357.711 68.4629 li
cp
f
357.711 68.4629 mo
358.057 68.4629 li
cp
f
357.711 68.4629 mo
358.057 68.4629 li
cp
f
358.057 68.4629 mo
358.402 68.4629 li
cp
f
358.057 68.4629 mo
358.402 68.4629 li
cp
f
358.402 68.4629 mo
358.749 68.4629 li
cp
f
358.402 68.4629 mo
358.749 68.4629 li
cp
f
358.748 68.4629 mo
359.094 68.4629 li
cp
f
358.748 68.4629 mo
359.094 68.4629 li
cp
f
359.094 68.4629 mo
359.439 68.4629 li
cp
f
359.094 68.4629 mo
359.439 68.4629 li
cp
f
359.438 68.4629 mo
359.783 68.4629 li
cp
f
359.438 68.4629 mo
359.783 68.4629 li
cp
f
359.783 68.4629 mo
360.13 68.4629 li
cp
f
359.783 68.4629 mo
360.13 68.4629 li
cp
f
360.13 68.4629 mo
360.474 68.4629 li
cp
f
360.13 68.4629 mo
360.474 68.4629 li
cp
f
360.474 68.4629 mo
360.822 68.4629 li
cp
f
360.474 68.4629 mo
360.822 68.4629 li
cp
f
360.823 68.4629 mo
361.169 68.4629 li
cp
f
360.823 68.4629 mo
361.169 68.4629 li
cp
f
361.168 68.4629 mo
361.513 68.4629 li
cp
f
361.168 68.4629 mo
361.513 68.4629 li
cp
f
361.513 68.4629 mo
361.858 68.4629 li
cp
f
361.513 68.4629 mo
361.858 68.4629 li
cp
f
361.858 68.4629 mo
362.205 68.4629 li
cp
f
361.858 68.4629 mo
362.205 68.4629 li
cp
f
362.205 68.4629 mo
362.549 68.4629 li
cp
f
362.205 68.4629 mo
362.549 68.4629 li
cp
f
362.549 68.4629 mo
362.896 68.4629 li
cp
f
362.549 68.4629 mo
362.896 68.4629 li
cp
f
362.896 68.4629 mo
363.24 68.4629 li
cp
f
362.896 68.4629 mo
363.24 68.4629 li
cp
f
363.242 68.4629 mo
363.59 68.4629 li
cp
f
363.242 68.4629 mo
363.59 68.4629 li
cp
f
363.59 68.4629 mo
363.935 68.4629 li
cp
f
363.59 68.4629 mo
363.935 68.4629 li
cp
f
363.935 68.4629 mo
364.281 68.4629 li
cp
f
363.935 68.4629 mo
364.281 68.4629 li
cp
f
364.281 68.4629 mo
364.627 68.4629 li
cp
f
364.281 68.4629 mo
364.627 68.4629 li
cp
f
364.627 68.4629 mo
364.972 68.4629 li
cp
f
364.627 68.4629 mo
364.972 68.4629 li
cp
f
364.972 68.4629 mo
365.318 68.4629 li
cp
f
364.972 68.4629 mo
365.318 68.4629 li
cp
f
365.318 68.4629 mo
365.664 68.4629 li
cp
f
365.318 68.4629 mo
365.664 68.4629 li
cp
f
365.664 68.4629 mo
366.009 68.4629 li
cp
f
365.664 68.4629 mo
366.009 68.4629 li
cp
f
366.008 68.4629 mo
366.355 68.4629 li
cp
f
366.008 68.4629 mo
366.355 68.4629 li
cp
f
366.356 68.4629 mo
366.702 68.4629 li
cp
f
366.356 68.4629 mo
366.702 68.4629 li
cp
f
366.701 68.4629 mo
367.046 68.4629 li
cp
f
366.701 68.4629 mo
367.046 68.4629 li
cp
f
367.046 68.4629 mo
367.393 68.4629 li
cp
f
367.046 68.4629 mo
367.393 68.4629 li
cp
f
407.913 69.906 mo
390.28 69.906 li
390.28 71.161 li
407.913 71.161 li
cp
0 0 0 1 cmyk
f
373.168 70.5332 mo
390.28 70.5332 li
.746 .676 .668 .898 cmyk
@
349.77 69.906 mo
332.138 69.906 li
332.138 71.161 li
349.77 71.161 li
cp
0 0 0 1 cmyk
f
349.77 70.5332 mo
367.055 70.5332 li
.746 .676 .668 .898 cmyk
@
370.105 69.5142 mo
369.156 71.5532 li
@
371.23 69.5142 mo
370.281 71.5532 li
@
0 0 0 1 cmyk
ZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf270.381 140.674 mo(Exon-exon)[3.38745 2.60303 3.05423 3.1792 2.4642 2.97092 2.60303 3.05423 0 ]xsh273.636 147.616 mo(junction)[1.31894 3.1445 3.1792 2.96399 1.78397 1.36057 3.06116 0 ]xsh245.53 140.674 mo(\26150)[3.81783 3.54707 0 ]xsh310.482 140.674 mo(+50)[4.28296 3.54706 0 ]xsh3 lw
4 ml
283.848 132.813 mo
321.64 132.813 li
@
ZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf356.987 140.674 mo(Exon-exon)[3.38745 2.60303 3.05423 3.1792 2.4642 2.97092 2.60303 3.05423 0 ]xsh360.243 147.616 mo(junction)[1.31894 3.1445 3.1792 2.96399 1.78397 1.36057 3.05423 0 ]xsh332.137 140.674 mo(\26150)[3.81781 3.54709 0 ]xsh397.088 140.674 mo(+50)[4.28296 3.54706 0 ]xsh332.138 132.813 mo
369.93 132.813 li
@
245.531 132.813 mo
283.323 132.813 li
@
gsave
0 0 mo
414 0 li
414 188 li
0 188 li
cp
clp
370.455 132.813 mo
408.249 132.813 li
@
grestore
ZDWBPV+HelveticaNeue-Italic*1 [10.7979 0 0 -10.7979 0 0 ]msf257.275 20.1353 mo(A-Myb)[7.22388 4.36243 9.37253 5.20462 0 ]xshZDWBPU+HelveticaNeue*1 [10.7979 0 0 -10.7979 0 0 ]msf289.863 20.1353 mo( Het)[3.0018 7.83929 5.79849 0 ]xsh0 1 1 0 cmyk
ZDWBPV+HelveticaNeue-Italic*1 [10.7979 0 0 -10.7979 0 0 ]msf342.978 20.1353 mo(A-Myb)[7.22388 4.36243 9.37253 5.20462 0 ]xshZDWBPU+HelveticaNeue*1 [10.7979 0 0 -10.7979 0 0 ]msf375.566 20.1353 mo( Mu)sh394.02 20.1353 mo(t)sh245.934 131.097 mo
246.683 131.097 li
cp
.254 .203 .207 0 cmyk
f
245.934 131.097 mo
246.683 131.097 li
cp
.746 .676 .668 .898 cmyk
f
246.683 131.097 mo
247.433 131.097 li
cp
.254 .203 .207 0 cmyk
f
246.683 131.097 mo
247.433 131.097 li
cp
.746 .676 .668 .898 cmyk
f
247.432 131.097 mo
248.181 131.097 li
cp
.254 .203 .207 0 cmyk
f
247.432 131.097 mo
248.181 131.097 li
cp
.746 .676 .668 .898 cmyk
f
248.181 131.097 mo
248.931 131.097 li
cp
.254 .203 .207 0 cmyk
f
248.181 131.097 mo
248.931 131.097 li
cp
.746 .676 .668 .898 cmyk
f
248.931 131.097 mo
249.68 131.097 li
cp
.254 .203 .207 0 cmyk
f
248.931 131.097 mo
249.68 131.097 li
cp
.746 .676 .668 .898 cmyk
f
249.68 131.097 mo
250.431 131.097 li
cp
.254 .203 .207 0 cmyk
f
249.68 131.097 mo
250.431 131.097 li
cp
.746 .676 .668 .898 cmyk
f
250.432 131.097 mo
251.181 131.097 li
cp
.254 .203 .207 0 cmyk
f
250.432 131.097 mo
251.181 131.097 li
cp
.746 .676 .668 .898 cmyk
f
251.181 131.097 mo
251.931 131.097 li
cp
.254 .203 .207 0 cmyk
f
251.181 131.097 mo
251.931 131.097 li
cp
.746 .676 .668 .898 cmyk
f
251.931 131.097 mo
252.682 131.097 li
cp
.254 .203 .207 0 cmyk
f
251.931 131.097 mo
252.682 131.097 li
cp
.746 .676 .668 .898 cmyk
f
252.681 131.097 mo
253.43 131.097 li
cp
.254 .203 .207 0 cmyk
f
252.681 131.097 mo
253.43 131.097 li
cp
.746 .676 .668 .898 cmyk
f
253.43 131.097 mo
254.18 131.097 li
cp
.254 .203 .207 0 cmyk
f
253.43 131.097 mo
254.18 131.097 li
cp
.746 .676 .668 .898 cmyk
f
254.18 131.097 mo
254.929 131.097 li
cp
.254 .203 .207 0 cmyk
f
254.18 131.097 mo
254.929 131.097 li
cp
.746 .676 .668 .898 cmyk
f
254.929 131.097 mo
255.679 131.097 li
cp
.254 .203 .207 0 cmyk
f
254.929 131.097 mo
255.679 131.097 li
cp
.746 .676 .668 .898 cmyk
f
255.678 131.097 mo
256.428 131.097 li
cp
.254 .203 .207 0 cmyk
f
255.678 131.097 mo
256.428 131.097 li
cp
.746 .676 .668 .898 cmyk
f
256.428 131.097 mo
257.179 131.097 li
cp
.254 .203 .207 0 cmyk
f
256.428 131.097 mo
257.179 131.097 li
cp
.746 .676 .668 .898 cmyk
f
257.179 131.097 mo
257.928 131.097 li
cp
.254 .203 .207 0 cmyk
f
257.179 131.097 mo
257.928 131.097 li
cp
.746 .676 .668 .898 cmyk
f
257.927 131.097 mo
258.677 131.097 li
cp
.254 .203 .207 0 cmyk
f
257.927 131.097 mo
258.677 131.097 li
cp
.746 .676 .668 .898 cmyk
f
258.677 131.097 mo
259.427 131.097 li
cp
.254 .203 .207 0 cmyk
f
258.677 131.097 mo
259.427 131.097 li
cp
.746 .676 .668 .898 cmyk
f
259.427 131.097 mo
260.176 131.097 li
cp
.254 .203 .207 0 cmyk
f
259.427 131.097 mo
260.176 131.097 li
cp
.746 .676 .668 .898 cmyk
f
260.176 131.097 mo
260.926 131.097 li
cp
.254 .203 .207 0 cmyk
f
260.176 131.097 mo
260.926 131.097 li
cp
.746 .676 .668 .898 cmyk
f
260.925 131.097 mo
261.675 131.097 li
cp
.254 .203 .207 0 cmyk
f
260.925 131.097 mo
261.675 131.097 li
cp
.746 .676 .668 .898 cmyk
f
261.675 131.097 mo
262.425 131.097 li
262.425 131.088 li
261.675 131.088 li
cp
.254 .203 .207 0 cmyk
f
261.675 131.097 mo
262.425 131.097 li
262.425 131.088 li
261.675 131.088 li
cp
.746 .676 .668 .898 cmyk
f
262.425 131.097 mo
263.174 131.097 li
263.174 131.046 li
262.425 131.046 li
cp
.254 .203 .207 0 cmyk
f
262.425 131.097 mo
263.174 131.097 li
263.174 131.046 li
262.425 131.046 li
cp
.746 .676 .668 .898 cmyk
f
263.173 131.097 mo
263.924 131.097 li
263.924 130.971 li
263.173 130.971 li
cp
.254 .203 .207 0 cmyk
f
263.173 131.097 mo
263.924 131.097 li
263.924 130.971 li
263.173 130.971 li
cp
.746 .676 .668 .898 cmyk
f
263.924 131.097 mo
264.672 131.097 li
264.672 130.815 li
263.924 130.815 li
cp
.254 .203 .207 0 cmyk
f
263.924 131.097 mo
264.672 131.097 li
264.672 130.815 li
263.924 130.815 li
cp
.746 .676 .668 .898 cmyk
f
264.672 131.097 mo
265.423 131.097 li
265.423 130.321 li
264.672 130.321 li
cp
.254 .203 .207 0 cmyk
f
264.672 131.097 mo
265.423 131.097 li
265.423 130.321 li
264.672 130.321 li
cp
.746 .676 .668 .898 cmyk
f
265.423 131.097 mo
266.173 131.097 li
266.173 129.989 li
265.423 129.989 li
cp
.254 .203 .207 0 cmyk
f
265.423 131.097 mo
266.173 131.097 li
266.173 129.989 li
265.423 129.989 li
cp
.746 .676 .668 .898 cmyk
f
266.172 131.097 mo
266.921 131.097 li
266.921 129.291 li
266.172 129.291 li
cp
.254 .203 .207 0 cmyk
f
266.172 131.097 mo
266.921 131.097 li
266.921 129.291 li
266.172 129.291 li
cp
.746 .676 .668 .898 cmyk
f
266.921 131.097 mo
267.669 131.097 li
267.669 128.86 li
266.921 128.86 li
cp
.254 .203 .207 0 cmyk
f
266.921 131.097 mo
267.669 131.097 li
267.669 128.86 li
266.921 128.86 li
cp
.746 .676 .668 .898 cmyk
f
267.669 131.097 mo
268.42 131.097 li
268.42 128.683 li
267.669 128.683 li
cp
.254 .203 .207 0 cmyk
f
267.669 131.097 mo
268.42 131.097 li
268.42 128.683 li
267.669 128.683 li
cp
.746 .676 .668 .898 cmyk
f
268.42 131.097 mo
269.171 131.097 li
269.171 128.017 li
268.42 128.017 li
cp
.254 .203 .207 0 cmyk
f
268.42 131.097 mo
269.171 131.097 li
269.171 128.017 li
268.42 128.017 li
cp
.746 .676 .668 .898 cmyk
f
269.17 131.097 mo
269.919 131.097 li
269.919 127.217 li
269.17 127.217 li
cp
.254 .203 .207 0 cmyk
f
269.17 131.097 mo
269.919 131.097 li
269.919 127.217 li
269.17 127.217 li
cp
.746 .676 .668 .898 cmyk
f
269.919 131.097 mo
270.669 131.097 li
270.669 126.87 li
269.919 126.87 li
cp
.254 .203 .207 0 cmyk
f
269.919 131.097 mo
270.669 131.097 li
270.669 126.87 li
269.919 126.87 li
cp
.746 .676 .668 .898 cmyk
f
270.669 131.097 mo
271.419 131.097 li
271.419 125.593 li
270.669 125.593 li
cp
.254 .203 .207 0 cmyk
f
270.669 131.097 mo
271.419 131.097 li
271.419 125.593 li
270.669 125.593 li
cp
.746 .676 .668 .898 cmyk
f
271.418 131.097 mo
272.168 131.097 li
272.168 124.556 li
271.418 124.556 li
cp
.254 .203 .207 0 cmyk
f
271.418 131.097 mo
272.168 131.097 li
272.168 124.556 li
271.418 124.556 li
cp
.746 .676 .668 .898 cmyk
f
272.168 131.097 mo
272.917 131.097 li
272.917 123.589 li
272.168 123.589 li
cp
.254 .203 .207 0 cmyk
f
272.168 131.097 mo
272.917 131.097 li
272.917 123.589 li
272.168 123.589 li
cp
.746 .676 .668 .898 cmyk
f
272.92 131.097 mo
273.67 131.097 li
273.67 123.322 li
272.92 123.322 li
cp
.254 .203 .207 0 cmyk
f
272.92 131.097 mo
273.67 131.097 li
273.67 123.322 li
272.92 123.322 li
cp
.746 .676 .668 .898 cmyk
f
273.669 131.097 mo
274.418 131.097 li
274.418 122.063 li
273.669 122.063 li
cp
.254 .203 .207 0 cmyk
f
273.669 131.097 mo
274.418 131.097 li
274.418 122.063 li
273.669 122.063 li
cp
.746 .676 .668 .898 cmyk
f
274.418 131.097 mo
275.168 131.097 li
275.168 118.363 li
274.418 118.363 li
cp
.254 .203 .207 0 cmyk
f
274.418 131.097 mo
275.168 131.097 li
275.168 118.363 li
274.418 118.363 li
cp
.746 .676 .668 .898 cmyk
f
275.168 131.097 mo
275.919 131.097 li
275.919 117.089 li
275.168 117.089 li
cp
.254 .203 .207 0 cmyk
f
275.168 131.097 mo
275.919 131.097 li
275.919 117.089 li
275.168 117.089 li
cp
.746 .676 .668 .898 cmyk
f
275.918 131.097 mo
276.666 131.097 li
276.666 115.38 li
275.918 115.38 li
cp
.254 .203 .207 0 cmyk
f
275.918 131.097 mo
276.666 131.097 li
276.666 115.38 li
275.918 115.38 li
cp
.746 .676 .668 .898 cmyk
f
276.666 131.097 mo
277.417 131.097 li
277.417 114.254 li
276.666 114.254 li
cp
.254 .203 .207 0 cmyk
f
276.666 131.097 mo
277.417 131.097 li
277.417 114.254 li
276.666 114.254 li
cp
.746 .676 .668 .898 cmyk
f
277.417 131.097 mo
278.165 131.097 li
278.165 111.846 li
277.417 111.846 li
cp
.254 .203 .207 0 cmyk
f
277.417 131.097 mo
278.165 131.097 li
278.165 111.846 li
277.417 111.846 li
cp
.746 .676 .668 .898 cmyk
f
278.165 131.097 mo
278.916 131.097 li
278.916 110.882 li
278.165 110.882 li
cp
.254 .203 .207 0 cmyk
f
278.165 131.097 mo
278.916 131.097 li
278.916 110.882 li
278.165 110.882 li
cp
.746 .676 .668 .898 cmyk
f
278.915 131.097 mo
279.665 131.097 li
279.665 110.084 li
278.915 110.084 li
cp
.254 .203 .207 0 cmyk
f
278.915 131.097 mo
279.665 131.097 li
279.665 110.084 li
278.915 110.084 li
cp
.746 .676 .668 .898 cmyk
f
279.665 131.097 mo
280.414 131.097 li
280.414 108.876 li
279.665 108.876 li
cp
.254 .203 .207 0 cmyk
f
279.665 131.097 mo
280.414 131.097 li
280.414 108.876 li
279.665 108.876 li
cp
.746 .676 .668 .898 cmyk
f
280.414 131.097 mo
281.163 131.097 li
281.163 108.776 li
280.414 108.776 li
cp
.254 .203 .207 0 cmyk
f
280.414 131.097 mo
281.163 131.097 li
281.163 108.776 li
280.414 108.776 li
cp
.746 .676 .668 .898 cmyk
f
281.163 131.097 mo
281.913 131.097 li
281.913 108.62 li
281.163 108.62 li
cp
.254 .203 .207 0 cmyk
f
281.163 131.097 mo
281.913 131.097 li
281.913 108.62 li
281.163 108.62 li
cp
.746 .676 .668 .898 cmyk
f
281.912 131.097 mo
282.663 131.097 li
282.663 108.606 li
281.912 108.606 li
cp
.254 .203 .207 0 cmyk
f
281.912 131.097 mo
282.663 131.097 li
282.663 108.606 li
281.912 108.606 li
cp
.746 .676 .668 .898 cmyk
f
282.663 131.097 mo
283.413 131.097 li
283.413 108.548 li
282.663 108.548 li
cp
.254 .203 .207 0 cmyk
f
282.663 131.097 mo
283.413 131.097 li
283.413 108.548 li
282.663 108.548 li
cp
.746 .676 .668 .898 cmyk
f
283.413 131.097 mo
284.162 131.097 li
284.162 108.548 li
283.413 108.548 li
cp
.254 .203 .207 0 cmyk
f
283.413 131.097 mo
284.162 131.097 li
284.162 108.548 li
283.413 108.548 li
cp
.746 .676 .668 .898 cmyk
f
284.161 131.097 mo
284.911 131.097 li
284.911 108.63 li
284.161 108.63 li
cp
.254 .203 .207 0 cmyk
f
284.161 131.097 mo
284.911 131.097 li
284.911 108.63 li
284.161 108.63 li
cp
.746 .676 .668 .898 cmyk
f
284.911 131.097 mo
285.661 131.097 li
285.661 109.241 li
284.911 109.241 li
cp
.254 .203 .207 0 cmyk
f
284.911 131.097 mo
285.661 131.097 li
285.661 109.241 li
284.911 109.241 li
cp
.746 .676 .668 .898 cmyk
f
285.661 131.097 mo
286.412 131.097 li
286.412 110.727 li
285.661 110.727 li
cp
.254 .203 .207 0 cmyk
f
285.661 131.097 mo
286.412 131.097 li
286.412 110.727 li
285.661 110.727 li
cp
.746 .676 .668 .898 cmyk
f
286.411 131.097 mo
287.159 131.097 li
287.159 111.796 li
286.411 111.796 li
cp
.254 .203 .207 0 cmyk
f
286.411 131.097 mo
287.159 131.097 li
287.159 111.796 li
286.411 111.796 li
cp
.746 .676 .668 .898 cmyk
f
287.159 131.097 mo
287.909 131.097 li
287.909 113.224 li
287.159 113.224 li
cp
.254 .203 .207 0 cmyk
f
287.159 131.097 mo
287.909 131.097 li
287.909 113.224 li
287.159 113.224 li
cp
.746 .676 .668 .898 cmyk
f
287.909 131.097 mo
288.659 131.097 li
288.659 115.517 li
287.909 115.517 li
cp
.254 .203 .207 0 cmyk
f
287.909 131.097 mo
288.659 131.097 li
288.659 115.517 li
287.909 115.517 li
cp
.746 .676 .668 .898 cmyk
f
288.659 131.097 mo
289.41 131.097 li
289.41 117.728 li
288.659 117.728 li
cp
.254 .203 .207 0 cmyk
f
288.659 131.097 mo
289.41 131.097 li
289.41 117.728 li
288.659 117.728 li
cp
.746 .676 .668 .898 cmyk
f
289.409 131.097 mo
290.157 131.097 li
290.157 118.66 li
289.409 118.66 li
cp
.254 .203 .207 0 cmyk
f
289.409 131.097 mo
290.157 131.097 li
290.157 118.66 li
289.409 118.66 li
cp
.746 .676 .668 .898 cmyk
f
290.157 131.097 mo
290.906 131.097 li
290.906 119.617 li
290.157 119.617 li
cp
.254 .203 .207 0 cmyk
f
290.157 131.097 mo
290.906 131.097 li
290.906 119.617 li
290.157 119.617 li
cp
.746 .676 .668 .898 cmyk
f
290.906 131.097 mo
291.656 131.097 li
291.656 120.75 li
290.906 120.75 li
cp
.254 .203 .207 0 cmyk
f
290.906 131.097 mo
291.656 131.097 li
291.656 120.75 li
290.906 120.75 li
cp
.746 .676 .668 .898 cmyk
f
291.656 131.097 mo
292.407 131.097 li
292.407 122.026 li
291.656 122.026 li
cp
.254 .203 .207 0 cmyk
f
291.656 131.097 mo
292.407 131.097 li
292.407 122.026 li
291.656 122.026 li
cp
.746 .676 .668 .898 cmyk
f
292.406 131.097 mo
293.156 131.097 li
293.156 122.87 li
292.406 122.87 li
cp
.254 .203 .207 0 cmyk
f
292.406 131.097 mo
293.156 131.097 li
293.156 122.87 li
292.406 122.87 li
cp
.746 .676 .668 .898 cmyk
f
293.156 131.097 mo
293.905 131.097 li
293.905 123.963 li
293.156 123.963 li
cp
.254 .203 .207 0 cmyk
f
293.156 131.097 mo
293.905 131.097 li
293.905 123.963 li
293.156 123.963 li
cp
.746 .676 .668 .898 cmyk
f
293.905 131.097 mo
294.654 131.097 li
294.654 124.609 li
293.905 124.609 li
cp
.254 .203 .207 0 cmyk
f
293.905 131.097 mo
294.654 131.097 li
294.654 124.609 li
293.905 124.609 li
cp
.746 .676 .668 .898 cmyk
f
294.654 131.097 mo
295.405 131.097 li
295.405 125.555 li
294.654 125.555 li
cp
.254 .203 .207 0 cmyk
f
294.654 131.097 mo
295.405 131.097 li
295.405 125.555 li
294.654 125.555 li
cp
.746 .676 .668 .898 cmyk
f
295.407 131.097 mo
296.156 131.097 li
296.156 126.059 li
295.407 126.059 li
cp
.254 .203 .207 0 cmyk
f
295.407 131.097 mo
296.156 131.097 li
296.156 126.059 li
295.407 126.059 li
cp
.746 .676 .668 .898 cmyk
f
296.156 131.097 mo
296.905 131.097 li
296.905 126.687 li
296.156 126.687 li
cp
.254 .203 .207 0 cmyk
f
296.156 131.097 mo
296.905 131.097 li
296.905 126.687 li
296.156 126.687 li
cp
.746 .676 .668 .898 cmyk
f
296.905 131.097 mo
297.656 131.097 li
297.656 127.802 li
296.905 127.802 li
cp
.254 .203 .207 0 cmyk
f
296.905 131.097 mo
297.656 131.097 li
297.656 127.802 li
296.905 127.802 li
cp
.746 .676 .668 .898 cmyk
f
297.655 131.097 mo
298.403 131.097 li
298.403 128.573 li
297.655 128.573 li
cp
.254 .203 .207 0 cmyk
f
297.655 131.097 mo
298.403 131.097 li
298.403 128.573 li
297.655 128.573 li
cp
.746 .676 .668 .898 cmyk
f
298.403 131.097 mo
299.154 131.097 li
299.154 129.644 li
298.403 129.644 li
cp
.254 .203 .207 0 cmyk
f
298.403 131.097 mo
299.154 131.097 li
299.154 129.644 li
298.403 129.644 li
cp
.746 .676 .668 .898 cmyk
f
299.154 131.097 mo
299.904 131.097 li
299.904 129.888 li
299.154 129.888 li
cp
.254 .203 .207 0 cmyk
f
299.154 131.097 mo
299.904 131.097 li
299.904 129.888 li
299.154 129.888 li
cp
.746 .676 .668 .898 cmyk
f
299.903 131.097 mo
300.653 131.097 li
300.653 130.452 li
299.903 130.452 li
cp
.254 .203 .207 0 cmyk
f
299.903 131.097 mo
300.653 131.097 li
300.653 130.452 li
299.903 130.452 li
cp
.746 .676 .668 .898 cmyk
f
300.653 131.097 mo
301.402 131.097 li
301.402 130.724 li
300.653 130.724 li
cp
.254 .203 .207 0 cmyk
f
300.653 131.097 mo
301.402 131.097 li
301.402 130.724 li
300.653 130.724 li
cp
.746 .676 .668 .898 cmyk
f
301.402 131.097 mo
302.152 131.097 li
302.152 130.904 li
301.402 130.904 li
cp
.254 .203 .207 0 cmyk
f
301.402 131.097 mo
302.152 131.097 li
302.152 130.904 li
301.402 130.904 li
cp
.746 .676 .668 .898 cmyk
f
302.152 131.097 mo
302.903 131.097 li
302.903 130.991 li
302.152 130.991 li
cp
.254 .203 .207 0 cmyk
f
302.152 131.097 mo
302.903 131.097 li
302.903 130.991 li
302.152 130.991 li
cp
.746 .676 .668 .898 cmyk
f
302.902 131.097 mo
303.651 131.097 li
303.651 131.057 li
302.902 131.057 li
cp
.254 .203 .207 0 cmyk
f
302.902 131.097 mo
303.651 131.097 li
303.651 131.057 li
302.902 131.057 li
cp
.746 .676 .668 .898 cmyk
f
303.651 131.097 mo
304.402 131.097 li
304.402 131.091 li
303.651 131.091 li
cp
.254 .203 .207 0 cmyk
f
303.651 131.097 mo
304.402 131.097 li
304.402 131.091 li
303.651 131.091 li
cp
.746 .676 .668 .898 cmyk
f
304.402 131.097 mo
305.15 131.097 li
cp
.254 .203 .207 0 cmyk
f
304.402 131.097 mo
305.15 131.097 li
cp
.746 .676 .668 .898 cmyk
f
305.15 131.097 mo
305.898 131.097 li
cp
.254 .203 .207 0 cmyk
f
305.15 131.097 mo
305.898 131.097 li
cp
.746 .676 .668 .898 cmyk
f
305.898 131.097 mo
306.648 131.097 li
cp
.254 .203 .207 0 cmyk
f
305.898 131.097 mo
306.648 131.097 li
cp
.746 .676 .668 .898 cmyk
f
306.648 131.097 mo
307.399 131.097 li
cp
.254 .203 .207 0 cmyk
f
306.648 131.097 mo
307.399 131.097 li
cp
.746 .676 .668 .898 cmyk
f
307.399 131.097 mo
308.149 131.097 li
cp
.254 .203 .207 0 cmyk
f
307.399 131.097 mo
308.149 131.097 li
cp
.746 .676 .668 .898 cmyk
f
308.148 131.097 mo
308.897 131.097 li
cp
.254 .203 .207 0 cmyk
f
308.148 131.097 mo
308.897 131.097 li
cp
.746 .676 .668 .898 cmyk
f
308.897 131.097 mo
309.648 131.097 li
cp
.254 .203 .207 0 cmyk
f
308.897 131.097 mo
309.648 131.097 li
cp
.746 .676 .668 .898 cmyk
f
309.648 131.097 mo
310.396 131.097 li
cp
.254 .203 .207 0 cmyk
f
309.648 131.097 mo
310.396 131.097 li
cp
.746 .676 .668 .898 cmyk
f
310.396 131.097 mo
311.146 131.097 li
cp
.254 .203 .207 0 cmyk
f
310.396 131.097 mo
311.146 131.097 li
cp
.746 .676 .668 .898 cmyk
f
311.145 131.097 mo
311.894 131.097 li
cp
.254 .203 .207 0 cmyk
f
311.145 131.097 mo
311.894 131.097 li
cp
.746 .676 .668 .898 cmyk
f
311.894 131.097 mo
312.644 131.097 li
cp
.254 .203 .207 0 cmyk
f
311.894 131.097 mo
312.644 131.097 li
cp
.746 .676 .668 .898 cmyk
f
312.644 131.097 mo
313.394 131.097 li
cp
.254 .203 .207 0 cmyk
f
312.644 131.097 mo
313.394 131.097 li
cp
.746 .676 .668 .898 cmyk
f
313.393 131.097 mo
314.142 131.097 li
cp
.254 .203 .207 0 cmyk
f
313.393 131.097 mo
314.142 131.097 li
cp
.746 .676 .668 .898 cmyk
f
314.142 131.097 mo
314.893 131.097 li
cp
.254 .203 .207 0 cmyk
f
314.142 131.097 mo
314.893 131.097 li
cp
.746 .676 .668 .898 cmyk
f
314.893 131.097 mo
315.643 131.097 li
cp
.254 .203 .207 0 cmyk
f
314.893 131.097 mo
315.643 131.097 li
cp
.746 .676 .668 .898 cmyk
f
315.643 131.097 mo
316.393 131.097 li
cp
.254 .203 .207 0 cmyk
f
315.643 131.097 mo
316.393 131.097 li
cp
.746 .676 .668 .898 cmyk
f
316.392 131.097 mo
317.142 131.097 li
cp
.254 .203 .207 0 cmyk
f
316.392 131.097 mo
317.142 131.097 li
cp
.746 .676 .668 .898 cmyk
f
317.142 131.097 mo
317.891 131.097 li
cp
.254 .203 .207 0 cmyk
f
317.142 131.097 mo
317.891 131.097 li
cp
.746 .676 .668 .898 cmyk
f
317.893 131.097 mo
318.642 131.097 li
cp
.254 .203 .207 0 cmyk
f
317.893 131.097 mo
318.642 131.097 li
cp
.746 .676 .668 .898 cmyk
f
318.642 131.097 mo
319.393 131.097 li
cp
.254 .203 .207 0 cmyk
f
318.642 131.097 mo
319.393 131.097 li
cp
.746 .676 .668 .898 cmyk
f
319.393 131.097 mo
320.142 131.097 li
cp
.254 .203 .207 0 cmyk
f
319.393 131.097 mo
320.142 131.097 li
cp
.746 .676 .668 .898 cmyk
f
320.142 131.097 mo
320.892 131.097 li
cp
.254 .203 .207 0 cmyk
f
320.142 131.097 mo
320.892 131.097 li
cp
.746 .676 .668 .898 cmyk
f
320.891 131.097 mo
321.639 131.097 li
cp
.254 .203 .207 0 cmyk
f
320.891 131.097 mo
321.639 131.097 li
cp
.746 .676 .668 .898 cmyk
f
332.339 131.097 mo
333.089 131.097 li
cp
0 1 1 0 cmyk
f
332.339 131.097 mo
333.089 131.097 li
cp
f
333.09 131.097 mo
333.84 131.097 li
cp
f
333.09 131.097 mo
333.84 131.097 li
cp
f
333.84 131.097 mo
334.589 131.097 li
cp
f
333.84 131.097 mo
334.589 131.097 li
cp
f
334.589 131.097 mo
335.339 131.097 li
cp
f
334.589 131.097 mo
335.339 131.097 li
cp
f
335.338 131.097 mo
336.088 131.097 li
cp
f
335.338 131.097 mo
336.088 131.097 li
cp
f
336.088 131.097 mo
336.839 131.097 li
cp
f
336.088 131.097 mo
336.839 131.097 li
cp
f
336.839 131.097 mo
337.59 131.097 li
cp
f
336.839 131.097 mo
337.59 131.097 li
cp
f
337.591 131.097 mo
338.339 131.097 li
cp
f
337.591 131.097 mo
338.339 131.097 li
cp
f
338.339 131.097 mo
339.087 131.097 li
cp
f
338.339 131.097 mo
339.087 131.097 li
cp
f
339.087 131.097 mo
339.838 131.097 li
cp
f
339.087 131.097 mo
339.838 131.097 li
cp
f
339.837 131.097 mo
340.586 131.097 li
cp
f
339.837 131.097 mo
340.586 131.097 li
cp
f
340.586 131.097 mo
341.336 131.097 li
cp
f
340.586 131.097 mo
341.336 131.097 li
cp
f
341.336 131.097 mo
342.087 131.097 li
cp
f
341.336 131.097 mo
342.087 131.097 li
cp
f
342.087 131.097 mo
342.834 131.097 li
cp
f
342.087 131.097 mo
342.834 131.097 li
cp
f
342.834 131.097 mo
343.585 131.097 li
cp
f
342.834 131.097 mo
343.585 131.097 li
cp
f
343.585 131.097 mo
344.335 131.097 li
cp
f
343.585 131.097 mo
344.335 131.097 li
cp
f
344.335 131.097 mo
345.085 131.097 li
cp
f
344.335 131.097 mo
345.085 131.097 li
cp
f
345.084 131.097 mo
345.832 131.097 li
cp
f
345.084 131.097 mo
345.832 131.097 li
cp
f
345.832 131.097 mo
346.583 131.097 li
cp
f
345.832 131.097 mo
346.583 131.097 li
cp
f
346.583 131.097 mo
347.332 131.097 li
cp
f
346.583 131.097 mo
347.332 131.097 li
cp
f
347.332 131.097 mo
348.082 131.097 li
cp
f
347.332 131.097 mo
348.082 131.097 li
cp
f
348.081 131.097 mo
348.831 131.097 li
cp
f
348.081 131.097 mo
348.831 131.097 li
cp
f
348.831 131.097 mo
349.581 131.097 li
cp
f
348.831 131.097 mo
349.581 131.097 li
cp
f
349.581 131.097 mo
350.331 131.097 li
cp
f
349.581 131.097 mo
350.331 131.097 li
cp
f
350.33 131.097 mo
351.08 131.097 li
cp
f
350.33 131.097 mo
351.08 131.097 li
cp
f
351.08 131.097 mo
351.83 131.097 li
cp
f
351.08 131.097 mo
351.83 131.097 li
cp
f
351.83 131.097 mo
352.578 131.097 li
cp
f
351.83 131.097 mo
352.578 131.097 li
cp
f
352.578 131.097 mo
353.329 131.097 li
cp
f
352.578 131.097 mo
353.329 131.097 li
cp
f
353.329 131.097 mo
354.077 131.097 li
cp
f
353.329 131.097 mo
354.077 131.097 li
cp
f
354.077 131.097 mo
354.828 131.097 li
cp
f
354.077 131.097 mo
354.828 131.097 li
cp
f
354.828 131.097 mo
355.576 131.097 li
cp
f
354.828 131.097 mo
355.576 131.097 li
cp
f
355.576 131.097 mo
356.327 131.097 li
cp
f
355.576 131.097 mo
356.327 131.097 li
cp
f
356.326 131.097 mo
357.076 131.097 li
cp
f
356.326 131.097 mo
357.076 131.097 li
cp
f
357.076 131.097 mo
357.826 131.097 li
cp
f
357.076 131.097 mo
357.826 131.097 li
cp
f
357.826 131.097 mo
358.574 131.097 li
cp
f
357.826 131.097 mo
358.574 131.097 li
cp
f
358.573 131.097 mo
359.324 131.097 li
cp
f
358.573 131.097 mo
359.324 131.097 li
cp
f
359.325 131.097 mo
360.077 131.097 li
cp
f
359.325 131.097 mo
360.077 131.097 li
cp
f
360.077 131.097 mo
360.823 131.097 li
cp
f
360.077 131.097 mo
360.823 131.097 li
cp
f
360.823 131.097 mo
361.574 131.097 li
cp
f
360.823 131.097 mo
361.574 131.097 li
cp
f
361.574 131.097 mo
362.322 131.097 li
cp
f
361.574 131.097 mo
362.322 131.097 li
cp
f
362.322 131.097 mo
363.073 131.097 li
363.073 131.088 li
362.322 131.088 li
cp
f
362.322 131.097 mo
363.073 131.097 li
363.073 131.088 li
362.322 131.088 li
cp
f
363.073 131.097 mo
363.823 131.097 li
363.823 131.088 li
363.073 131.088 li
cp
f
363.073 131.097 mo
363.823 131.097 li
363.823 131.088 li
363.073 131.088 li
cp
f
363.823 131.097 mo
364.572 131.097 li
364.572 131.083 li
363.823 131.083 li
cp
f
363.823 131.097 mo
364.572 131.097 li
364.572 131.083 li
363.823 131.083 li
cp
f
364.572 131.097 mo
365.323 131.097 li
365.323 131.077 li
364.572 131.077 li
cp
f
364.572 131.097 mo
365.323 131.097 li
365.323 131.077 li
364.572 131.077 li
cp
f
365.323 131.097 mo
366.071 131.097 li
366.071 131.074 li
365.323 131.074 li
cp
f
365.323 131.097 mo
366.071 131.097 li
366.071 131.074 li
365.323 131.074 li
cp
f
366.071 131.097 mo
366.822 131.097 li
366.822 131.074 li
366.071 131.074 li
cp
f
366.071 131.097 mo
366.822 131.097 li
366.822 131.074 li
366.071 131.074 li
cp
f
366.822 131.097 mo
367.57 131.097 li
367.57 131.07 li
366.822 131.07 li
cp
f
366.822 131.097 mo
367.57 131.097 li
367.57 131.07 li
366.822 131.07 li
cp
f
367.57 131.097 mo
368.319 131.097 li
368.319 131.07 li
367.57 131.07 li
cp
f
367.57 131.097 mo
368.319 131.097 li
368.319 131.07 li
367.57 131.07 li
cp
f
368.319 131.097 mo
369.069 131.097 li
369.069 131.07 li
368.319 131.07 li
cp
f
368.319 131.097 mo
369.069 131.097 li
369.069 131.07 li
368.319 131.07 li
cp
f
369.068 131.097 mo
369.819 131.097 li
369.819 131.07 li
369.068 131.07 li
cp
f
369.068 131.097 mo
369.819 131.097 li
369.819 131.07 li
369.068 131.07 li
cp
f
369.819 131.097 mo
370.568 131.097 li
370.568 131.07 li
369.819 131.07 li
cp
f
369.819 131.097 mo
370.568 131.097 li
370.568 131.07 li
369.819 131.07 li
cp
f
370.568 131.097 mo
371.319 131.097 li
371.319 131.07 li
370.568 131.07 li
cp
f
370.568 131.097 mo
371.319 131.097 li
371.319 131.07 li
370.568 131.07 li
cp
f
371.318 131.097 mo
372.066 131.097 li
372.066 131.074 li
371.318 131.074 li
cp
f
371.318 131.097 mo
372.066 131.097 li
372.066 131.074 li
371.318 131.074 li
cp
f
372.066 131.097 mo
372.816 131.097 li
372.816 131.074 li
372.066 131.074 li
cp
f
372.066 131.097 mo
372.816 131.097 li
372.816 131.074 li
372.066 131.074 li
cp
f
372.816 131.097 mo
373.567 131.097 li
373.567 131.074 li
372.816 131.074 li
cp
f
372.816 131.097 mo
373.567 131.097 li
373.567 131.074 li
372.816 131.074 li
cp
f
373.567 131.097 mo
374.316 131.097 li
374.316 131.088 li
373.567 131.088 li
cp
f
373.567 131.097 mo
374.316 131.097 li
374.316 131.088 li
373.567 131.088 li
cp
f
374.315 131.097 mo
375.065 131.097 li
375.065 131.088 li
374.315 131.088 li
cp
f
374.315 131.097 mo
375.065 131.097 li
375.065 131.088 li
374.315 131.088 li
cp
f
375.065 131.097 mo
375.815 131.097 li
375.815 131.088 li
375.065 131.088 li
cp
f
375.065 131.097 mo
375.815 131.097 li
375.815 131.088 li
375.065 131.088 li
cp
f
375.815 131.097 mo
376.565 131.097 li
376.565 131.088 li
375.815 131.088 li
cp
f
375.815 131.097 mo
376.565 131.097 li
376.565 131.088 li
375.815 131.088 li
cp
f
376.564 131.097 mo
377.313 131.097 li
377.313 131.088 li
376.564 131.088 li
cp
f
376.564 131.097 mo
377.313 131.097 li
377.313 131.088 li
376.564 131.088 li
cp
f
377.313 131.097 mo
378.062 131.097 li
378.062 131.091 li
377.313 131.091 li
cp
f
377.313 131.097 mo
378.062 131.097 li
378.062 131.091 li
377.313 131.091 li
cp
f
378.062 131.097 mo
378.813 131.097 li
378.813 131.093 li
378.062 131.093 li
cp
f
378.062 131.097 mo
378.813 131.097 li
378.813 131.093 li
378.062 131.093 li
cp
f
378.813 131.097 mo
379.564 131.097 li
cp
f
378.813 131.097 mo
379.564 131.097 li
cp
f
379.563 131.097 mo
380.311 131.097 li
cp
f
379.563 131.097 mo
380.311 131.097 li
cp
f
380.311 131.097 mo
381.062 131.097 li
cp
f
380.311 131.097 mo
381.062 131.097 li
cp
f
381.063 131.097 mo
381.81 131.097 li
cp
f
381.063 131.097 mo
381.81 131.097 li
cp
f
381.814 131.097 mo
382.564 131.097 li
cp
f
381.814 131.097 mo
382.564 131.097 li
cp
f
382.564 131.097 mo
383.313 131.097 li
cp
f
382.564 131.097 mo
383.313 131.097 li
cp
f
383.313 131.097 mo
384.061 131.097 li
cp
f
383.313 131.097 mo
384.061 131.097 li
cp
f
384.061 131.097 mo
384.812 131.097 li
cp
f
384.061 131.097 mo
384.812 131.097 li
cp
f
384.811 131.097 mo
385.558 131.097 li
cp
f
384.811 131.097 mo
385.558 131.097 li
cp
f
385.558 131.097 mo
386.309 131.097 li
cp
f
385.558 131.097 mo
386.309 131.097 li
cp
f
386.31 131.097 mo
387.058 131.097 li
cp
f
386.31 131.097 mo
387.058 131.097 li
cp
f
387.058 131.097 mo
387.809 131.097 li
cp
f
387.058 131.097 mo
387.809 131.097 li
cp
f
387.808 131.097 mo
388.559 131.097 li
cp
f
387.808 131.097 mo
388.559 131.097 li
cp
f
388.559 131.097 mo
389.308 131.097 li
cp
f
388.559 131.097 mo
389.308 131.097 li
cp
f
389.308 131.097 mo
390.055 131.097 li
cp
f
389.308 131.097 mo
390.055 131.097 li
cp
f
390.055 131.097 mo
390.806 131.097 li
cp
f
390.055 131.097 mo
390.806 131.097 li
cp
f
390.806 131.097 mo
391.556 131.097 li
cp
f
390.806 131.097 mo
391.556 131.097 li
cp
f
391.556 131.097 mo
392.306 131.097 li
cp
f
391.556 131.097 mo
392.306 131.097 li
cp
f
392.306 131.097 mo
393.057 131.097 li
cp
f
392.306 131.097 mo
393.057 131.097 li
cp
f
393.057 131.097 mo
393.805 131.097 li
cp
f
393.057 131.097 mo
393.805 131.097 li
cp
f
393.805 131.097 mo
394.555 131.097 li
cp
f
393.805 131.097 mo
394.555 131.097 li
cp
f
394.555 131.097 mo
395.303 131.097 li
cp
f
394.555 131.097 mo
395.303 131.097 li
cp
f
395.302 131.097 mo
396.053 131.097 li
cp
f
395.302 131.097 mo
396.053 131.097 li
cp
f
396.054 131.097 mo
396.804 131.097 li
cp
f
396.054 131.097 mo
396.804 131.097 li
cp
f
396.804 131.097 mo
397.553 131.097 li
cp
f
396.804 131.097 mo
397.553 131.097 li
cp
f
397.552 131.097 mo
398.303 131.097 li
cp
f
397.552 131.097 mo
398.303 131.097 li
cp
f
398.303 131.097 mo
399.051 131.097 li
cp
f
398.303 131.097 mo
399.051 131.097 li
cp
f
399.051 131.097 mo
399.799 131.097 li
cp
f
399.051 131.097 mo
399.799 131.097 li
cp
f
399.799 131.097 mo
400.55 131.097 li
cp
f
399.799 131.097 mo
400.55 131.097 li
cp
f
400.549 131.097 mo
401.297 131.097 li
cp
f
400.549 131.097 mo
401.297 131.097 li
cp
f
401.297 131.097 mo
402.048 131.097 li
cp
f
401.297 131.097 mo
402.048 131.097 li
cp
f
402.049 131.097 mo
402.796 131.097 li
cp
f
402.049 131.097 mo
402.796 131.097 li
cp
f
402.796 131.097 mo
403.547 131.097 li
cp
f
402.796 131.097 mo
403.547 131.097 li
cp
f
403.547 131.097 mo
404.297 131.097 li
cp
f
403.547 131.097 mo
404.297 131.097 li
cp
f
404.299 131.097 mo
405.049 131.097 li
cp
f
404.299 131.097 mo
405.049 131.097 li
cp
f
405.049 131.097 mo
405.8 131.097 li
cp
f
405.049 131.097 mo
405.8 131.097 li
cp
f
405.799 131.097 mo
406.548 131.097 li
cp
f
405.799 131.097 mo
406.548 131.097 li
cp
f
406.548 131.097 mo
407.298 131.097 li
cp
f
406.548 131.097 mo
407.298 131.097 li
cp
f
407.298 131.097 mo
408.046 131.097 li
cp
f
407.298 131.097 mo
408.046 131.097 li
cp
f
.75 lw
46.5679 131.096 mo
43.9429 131.096 li
43.9429 93.7952 li
46.5679 93.7952 li
0 0 0 1 cmyk
@
46.5679 68.4629 mo
43.9429 68.4629 li
43.9429 31.1609 li
46.5679 31.1609 li
@
ZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf291.163 78.3999 mo(3)shZDWBPX+HelveticaNeue [6.9415 0 0 -6.9415 0 0 ]msf294.495 78.3999 mo(\003\))shZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf296.806 78.3999 mo( ss)[1.66599 2.83218 0 ]xsh310.481 78.3999 mo(+50)[4.28296 3.54706 0 ]xsh245.53 78.3999 mo(\26150)[3.81783 3.54707 0 ]xsh263.161 78.3999 mo(5)shZDWBPX+HelveticaNeue [6.9415 0 0 -6.9415 0 0 ]msf266.313 78.3999 mo(\003\))shZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf268.624 78.3999 mo( ss)[1.66599 2.83218 0 ]xsh377.432 78.3999 mo(3)shZDWBPX+HelveticaNeue [6.9415 0 0 -6.9415 0 0 ]msf380.764 78.3999 mo(\003\))shZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf383.075 78.3999 mo( ss)[1.66599 2.83218 0 ]xsh397.09 78.3999 mo(+50)[4.28296 3.54706 0 ]xsh332.139 78.3999 mo(\26150)[3.81781 3.54709 0 ]xsh349.77 78.3999 mo(5)shZDWBPX+HelveticaNeue [6.9415 0 0 -6.9415 0 0 ]msf352.929 78.3999 mo(\003\))shZDWBPW+HelveticaNeueLTStd-LtCn*1 [6.9415 0 0 -6.9415 0 0 ]msf355.24 78.3999 mo( ss)[1.66599 2.83218 0 ]xsh204.609 78.2125 mo(+50)[4.28294 3.54709 0 ]xshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/ZDWBPU+HelveticaNeue*1 uf/ZDWBPU+HelveticaNeue uf/BDHQMX+HelveticaNeue uf/ZDWBPX+HelveticaNeue-Identity-H uf/ZDWBPX+HelveticaNeue /CIDFont ur/ZDWBPV+HelveticaNeue-Italic*1 uf/ZDWBPV+HelveticaNeue-Italic uf/QSJBAA+HelveticaNeue-Italic uf/ZDWBPW+HelveticaNeueLTStd-LtCn*1 uf/ZDWBPW+HelveticaNeueLTStd-LtCn uf/DVBAAA+HelveticaNeueLTStd-LtCn ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
